

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec  6 02:50:08 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=4,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=4,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=4,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=4,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=4,class=CODE,delta=1
   166                           	psect	text142,global,reloc=4,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=4,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=4,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=4,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text162,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_h	offset=-1 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_i	offset=-1 (param)
   241 ;;_cmd	offset=-1 (param)
   242 ;;_i	offset	0
   243 ;;_chan	offset=-1 (param)
   244 ;;_to_what	offset=-2 (param)
   245 ;;_u	offset	0
   246 ;;_s	offset=-2 (param)
   247 ;;_index	offset=-1 (param)
   248 ;;_arg	offset	0
   249 ;;_exp	offset	4
   250 ;;_sign	offset=-1 (param)
   251 ;;_val	offset=-5 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_flipper	offset=-1 (param)
   254 ;;_f	offset	0
   255 ;;_ap	offset	6
   256 ;;_s	offset=-3 (param)
   257 ;;_fmt	offset=-5 (param)
   258 ;;_line	offset=-1 (param)
   259 ;;_vterm	offset=-2 (param)
   260 ;;_numMilliseconds	offset=-2 (param)
   261 ;;_vterm	offset=-1 (param)
   262 ;;_r	offset=-1 (param)
   263 ;;_c	offset=-2 (param)
   264 ;;_strPtr	offset=-4 (param)
   265 ;;_strPtr	offset=-1 (param)
   266 ;;_delay	offset=-4 (param)
   267 ;;_strPtr	offset=-2 (param)
   268 ;;__this	offset=-2 (param)
   269 ;;_clearBuffer	offset=-3 (param)
   270 ;;_s	offset	0
   271 ;;_k	offset	2
   272 ;;_dest	offset=-2 (param)
   273 ;;_c	offset=-4 (param)
   274 ;;_n	offset=-6 (param)
   275 ;;_ap	offset	0
   276 ;;_fmt	offset=-3 (param)
   277 ;;_cfmt	offset	0
   278 ;;_fp	offset=-2 (param)
   279 ;;_fmt	offset=-4 (param)
   280 ;;_ap	offset=-6 (param)
   281 ;;_vfpfcnvrt$5036	offset	0
   282 ;;_vfpfcnvrt$5042	offset	2
   283 ;;_vfpfcnvrt$5035	offset	4
   284 ;;_llu	offset	6
   285 ;;_ll	offset	14
   286 ;;_f	offset	22
   287 ;;_ct	offset	26
   288 ;;_cp	offset	29
   289 ;;_c	offset	31
   290 ;;_fp	offset=-2 (param)
   291 ;;_fmt	offset=-4 (param)
   292 ;;_ap	offset=-6 (param)
   293 ;;_xtoa$5021	offset	0
   294 ;;_xtoa$5020	offset	2
   295 ;;_n	offset	4
   296 ;;_c	offset	12
   297 ;;_i	offset	14
   298 ;;_w	offset	16
   299 ;;_p	offset	18
   300 ;;_fp	offset=-2 (param)
   301 ;;_d	offset=-10 (param)
   302 ;;_x	offset=-11 (param)
   303 ;;_toupper$5681	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_r	offset	0
   308 ;;_l	offset	2
   309 ;;__l	offset=-2 (param)
   310 ;;__r	offset=-4 (param)
   311 ;;_n	offset=-6 (param)
   312 ;;_nuls	offset	0
   313 ;;_l	offset	7
   314 ;;_p	offset	9
   315 ;;_cp	offset	11
   316 ;;_w	offset	13
   317 ;;_i	offset	15
   318 ;;_fp	offset=-2 (param)
   319 ;;_s	offset=-4 (param)
   320 ;;_efgtoa$5000	offset	0
   321 ;;_efgtoa$4999	offset	2
   322 ;;_efgtoa$4998	offset	4
   323 ;;_efgtoa$4994	offset	6
   324 ;;_efgtoa$4990	offset	8
   325 ;;_efgtoa$4989	offset	10
   326 ;;_u	offset	12
   327 ;;_g	offset	16
   328 ;;_l	offset	20
   329 ;;_h	offset	24
   330 ;;_ou	offset	28
   331 ;;_n	offset	32
   332 ;;_e	offset	34
   333 ;;_i	offset	36
   334 ;;_w	offset	38
   335 ;;_p	offset	40
   336 ;;_sign	offset	42
   337 ;;_d	offset	44
   338 ;;_ne	offset	46
   339 ;;_m	offset	48
   340 ;;_pp	offset	50
   341 ;;_t	offset	52
   342 ;;_mode	offset	54
   343 ;;_nmode	offset	55
   344 ;;_fp	offset=-2 (param)
   345 ;;_f	offset=-6 (param)
   346 ;;_c	offset=-7 (param)
   347 ;;_tolower$5666	offset	0
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_d	offset	0
   351 ;;_s	offset	2
   352 ;;_dest	offset=-2 (param)
   353 ;;_src	offset=-4 (param)
   354 ;;_u	offset	0
   355 ;;_m	offset	4
   356 ;;_e	offset	8
   357 ;;_x	offset=-4 (param)
   358 ;;_u	offset	0
   359 ;;_e	offset	4
   360 ;;_x	offset=-4 (param)
   361 ;;_exp1	offset	0
   362 ;;_sign1	offset	1
   363 ;;_f1	offset=-4 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_ff1	offset=-4 (param)
   366 ;;_ff2	offset=-8 (param)
   367 ;;_ff1	offset=-4 (param)
   368 ;;_ff2	offset=-8 (param)
   369 ;;_grs	offset	0
   370 ;;_rem	offset	4
   371 ;;_new_exp	offset	8
   372 ;;_aexp	offset	10
   373 ;;_bexp	offset	11
   374 ;;_sign	offset	12
   375 ;;_b	offset=-4 (param)
   376 ;;_a	offset=-8 (param)
   377 ;;_sign	offset	0
   378 ;;_counter	offset	1
   379 ;;_dividend	offset=-2 (param)
   380 ;;_divisor	offset=-4 (param)
   381 ;;_quotient	offset	0
   382 ;;_sign	offset	2
   383 ;;_counter	offset	3
   384 ;;_dividend	offset=-2 (param)
   385 ;;_divisor	offset=-4 (param)
   386 ;;_dtoa$4966	offset	0
   387 ;;_n	offset	2
   388 ;;_i	offset	10
   389 ;;_s	offset	12
   390 ;;_w	offset	14
   391 ;;_p	offset	16
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_a	offset=-2 (param)
   395 ;;_sign	offset	0
   396 ;;_counter	offset	1
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_quotient	offset	0
   400 ;;_sign	offset	8
   401 ;;_counter	offset	9
   402 ;;_dividend	offset=-8 (param)
   403 ;;_divisor	offset=-16 (param)
   404 ;;_w	offset	0
   405 ;;_fp	offset=-2 (param)
   406 ;;_c	offset=-3 (param)
   407 ;;_w	offset	0
   408 ;;_i	offset	2
   409 ;;_fp	offset=-2 (param)
   410 ;;_buf	offset=-4 (param)
   411 ;;_p	offset=-6 (param)
   412 ;;_a	offset	0
   413 ;;_s	offset=-2 (param)
   414 ;;_i	offset	0
   415 ;;_c	offset	2
   416 ;;_s	offset=-2 (param)
   417 ;;_fp	offset=-4 (param)
   418 ;;_c	offset=-2 (param)
   419 ;;_fp	offset=-4 (param)
   420 ;;_c	offset=-1 (param)
   421 ;;__this	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_atoi$5519	offset	0
   424 ;;_atoi$5517	offset	2
   425 ;;_atoi$5518	offset	4
   426 ;;_n	offset	5
   427 ;;_neg	offset	7
   428 ;;_s	offset=-2 (param)
   429 ;;_isspace$5557	offset	0
   430 ;;_c	offset=-2 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_vterm	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_level	offset=-2 (param)
   436 ;;_dutyValue	offset=-2 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_count	offset=-3 (param)
   440 ;;_h	offset=-1 (param)
   441 ;;_lp_speed	offset	0
   442 ;;_new	offset=-4 (param)
   443 ;;_bn	offset=-5 (param)
   444 ;;_slow	offset=-6 (param)
   445 ;;_b	offset=-4 (param)
   446 ;;_a	offset=-8 (param)
   447 ;;_grs	offset	0
   448 ;;_bexp	offset	1
   449 ;;_aexp	offset	2
   450 ;;_signs	offset	3
   451 ;;_b	offset=-4 (param)
   452 ;;_a	offset=-8 (param)
   453 ;;_prod	offset	0
   454 ;;_grs	offset	4
   455 ;;_temp	offset	8
   456 ;;_bexp	offset	10
   457 ;;_aexp	offset	11
   458 ;;_sign	offset	12
   459 ;;_b	offset=-4 (param)
   460 ;;_a	offset=-8 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_state	offset	0
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_i	offset	0
   474 ;;_sw_value	offset	1
   475 ;;_timerVal	offset=-2 (param)
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_exp1	offset	0
   478 ;;_sign1	offset	1
   479 ;;_f1	offset=-4 (param)
   480 ;;_f1	offset=-4 (param)
   481 ;;_prod	offset	0
   482 ;;_grs	offset	4
   483 ;;_temp	offset	8
   484 ;;_bexp	offset	10
   485 ;;_aexp	offset	11
   486 ;;_sign	offset	12
   487 ;;_b	offset=-4 (param)
   488 ;;_a	offset=-8 (param)
   489 ;;_ff1	offset=-4 (param)
   490 ;;_ff2	offset=-8 (param)
   491 ;;_grs	offset	0
   492 ;;_rem	offset	4
   493 ;;_new_exp	offset	8
   494 ;;_aexp	offset	10
   495 ;;_bexp	offset	11
   496 ;;_sign	offset	12
   497 ;;_b	offset=-4 (param)
   498 ;;_a	offset=-8 (param)
   499 ;;_grs	offset	0
   500 ;;_bexp	offset	1
   501 ;;_aexp	offset	2
   502 ;;_signs	offset	3
   503 ;;_b	offset=-4 (param)
   504 ;;_a	offset=-8 (param)
   505 ;;_channel	offset=-1 (param)
   506 ;;_i	offset	0
   507                           
   508                           	psect	idataBANK0
   509  018D4A                     __pidataBANK0:
   510                           	opt callstack 0
   511                           
   512                           ;initializer for _R
   513  018D4A  0000               	dw	0
   514  018D4C  0000               	dw	0
   515  018D4E  0000               	dw	0
   516  018D50  0000               	dw	0
   517  018D52  0000               	dw	0
   518  018D54  0000               	dw	0
   519  018D56  0000               	dw	0
   520  018D58  0000               	dw	0
   521  018D5A  0000               	dw	0
   522  018D5C  0000               	dw	0
   523  018D5E  0000               	dw	0
   524  018D60  0000               	dw	0
   525  018D62  0000               	dw	0
   526  018D64  0000               	dw	0
   527  018D66  0000               	dw	0
   528  018D68  0000               	dw	0
   529  018D6A  0F67               	dw	3943
   530  018D6C  0F8F               	dw	3983
   531  018D6E  00                 	db	0
   532  018D6F  0000               	dw	0
   533  018D71  00                 	db	0
   534                           
   535                           ;initializer for stoa@F1166
   536  018D72  28                 	db	40
   537  018D73  6E                 	db	110
   538  018D74  75                 	db	117
   539  018D75  6C                 	db	108
   540  018D76  6C                 	db	108
   541  018D77  29                 	db	41
   542  018D78  00                 	db	0
   543                           
   544                           ;initializer for _H
   545  018D79  00                 	db	0
   546  018D7A  00                 	db	0
   547  018D7B  01                 	db	1
   548  018D7C  00                 	db	0
   549  018D7D  01                 	db	1
   550  018D7E  00                 	db	0
   551  018D7F  00                 	db	0
   552                           
   553                           	psect	idataBANK1
   554  017C66                     __pidataBANK1:
   555                           	opt callstack 0
   556                           
   557                           ;initializer for _C
   558  017C66  0000               	dw	0
   559  017C68  0000               	dw	0
   560  017C6A  0000               	dw	0
   561  017C6C  0000               	dw	0
   562  017C6E  0000               	dw	0
   563  017C70  0000               	dw	0
   564  017C72  0000               	dw	0
   565  017C74  0000               	dw	0
   566  017C76  0000               	dw	0
   567  017C78  0000               	dw	0
   568  017C7A  0000               	dw	0
   569  017C7C  0000               	dw	0
   570  017C7E  0000               	dw	0
   571  017C80  0000               	dw	0
   572  017C82  0000               	dw	0
   573  017C84  0000               	dw	0
   574  017C86  0000               	dw	0
   575  017C88  0000               	dw	0
   576  017C8A  0000               	dw	0
   577  017C8C  0000               	dw	0
   578  017C8E  0000               	dw	0
   579  017C90  0000               	dw	0
   580  017C92  0000               	dw	0
   581  017C94  0000               	dw	0
   582  017C96  0000               	dw	0
   583  017C98  0000               	dw	0
   584  017C9A  0000               	dw	0
   585  017C9C  0000               	dw	0
   586  017C9E  0000               	dw	0
   587  017CA0  0000               	dw	0
   588  017CA2  0000               	dw	0
   589  017CA4  0000               	dw	0
   590  017CA6  0000               	dw	0
   591  017CA8  0000               	dw	0
   592  017CAA  0000               	dw	0
   593  017CAC  0000               	dw	0
   594  017CAE  0000               	dw	0
   595  017CB0  0000               	dw	0
   596  017CB2  0000               	dw	0
   597  017CB4  0000               	dw	0
   598  017CB6  0000               	dw	0
   599  017CB8  0000               	dw	0
   600  017CBA  0000               	dw	0
   601  017CBC  0000               	dw	0
   602  017CBE  0000               	dw	0
   603  017CC0  0000               	dw	0
   604  017CC2  0000               	dw	0
   605  017CC4  0000               	dw	0
   606  017CC6  0000               	dw	0
   607  017CC8  0000               	dw	0
   608  017CCA  0000               	dw	0
   609  017CCC  0000               	dw	0
   610  017CCE  0000               	dw	0
   611  017CD0  0000               	dw	0
   612  017CD2  0000               	dw	0
   613  017CD4  0000               	dw	0
   614  017CD6  0000               	dw	0
   615  017CD8  0000               	dw	0
   616  017CDA  0000               	dw	0
   617  017CDC  0000               	dw	0
   618  017CDE  0000               	dw	0
   619  017CE0  0000               	dw	0
   620  017CE2  0000               	dw	0
   621  017CE4  42FA               	dw	17146
   622  017CE6  00                 	db	0
   623  017CE7  00                 	db	0
   624  017CE8  00                 	db	0
   625  017CE9  00                 	db	0
   626  017CEA  00                 	db	0
   627  017CEB  00                 	db	0
   628  017CEC  00                 	db	0
   629  017CED  00                 	db	0
   630  017CEE  00                 	db	0
   631  017CEF  00                 	db	0
   632  017CF0  00                 	db	0
   633  017CF1  00                 	db	0
   634  017CF2  00                 	db	0
   635  017CF3  00                 	db	0
   636  017CF4  00                 	db	0
   637  017CF5  00                 	db	0
   638  017CF6  00                 	db	0
   639  017CF7  00                 	db	0
   640  017CF8  00                 	db	0
   641  017CF9  00                 	db	0
   642  017CFA  00                 	db	0
   643  017CFB  00                 	db	0
   644  017CFC  00                 	db	0
   645  017CFD  00                 	db	0
   646  017CFE  00                 	db	0
   647  017CFF  00                 	db	0
   648  017D00  00                 	db	0
   649  017D01  00                 	db	0
   650  017D02  00                 	db	0
   651  017D03  00                 	db	0
   652  017D04  00                 	db	0
   653  017D05  00                 	db	0
   654  017D06  00                 	db	0
   655  017D07  00                 	db	0
   656  017D08  00                 	db	0
   657  017D09  00                 	db	0
   658  017D0A  00                 	db	0
   659                           
   660                           ;initializer for _port_data
   661  017D0B  FF                 	db	255
   662  017D0C  00                 	db	0
   663  017D0D  FF                 	db	255
   664  017D0E  00                 	db	0
   665  017D0F  FF                 	db	255
   666  017D10  00                 	db	0
   667  017D11  FF                 	db	255
   668  017D12  00                 	db	0
   669  017D13  FF                 	db	255
   670  017D14  00                 	db	0
   671  017D15  FF                 	db	255
   672  017D16  00                 	db	0
   673  017D17  FF                 	db	255
   674  017D18  00                 	db	0
   675  017D19  FF                 	db	255
   676  017D1A  00                 	db	0
   677                           
   678                           	psect	idataBANK2
   679  017AF2                     __pidataBANK2:
   680                           	opt callstack 0
   681                           
   682                           ;initializer for _V
   683  017AF2  00                 	db	0
   684  017AF3  00                 	db	0
   685  017AF4  00                 	db	0
   686  017AF5  00                 	db	0
   687  017AF6  00                 	db	0
   688  017AF7  00                 	db	0
   689  017AF8  00                 	db	0
   690  017AF9  00                 	db	0
   691  017AFA  00                 	db	0
   692  017AFB  00                 	db	0
   693  017AFC  00                 	db	0
   694  017AFD  00                 	db	0
   695  017AFE  00                 	db	0
   696  017AFF  00                 	db	0
   697  017B00  00                 	db	0
   698  017B01  00                 	db	0
   699  017B02  00                 	db	0
   700  017B03  00                 	db	0
   701  017B04  00                 	db	0
   702  017B05  00                 	db	0
   703  017B06  00                 	db	0
   704  017B07  00                 	db	0
   705  017B08  00                 	db	0
   706  017B09  00                 	db	0
   707  017B0A  00                 	db	0
   708  017B0B  00                 	db	0
   709  017B0C  00                 	db	0
   710  017B0D  00                 	db	0
   711  017B0E  00                 	db	0
   712  017B0F  00                 	db	0
   713  017B10  00                 	db	0
   714  017B11  00                 	db	0
   715  017B12  00                 	db	0
   716  017B13  00                 	db	0
   717  017B14  00                 	db	0
   718  017B15  00                 	db	0
   719  017B16  00                 	db	0
   720  017B17  00                 	db	0
   721  017B18  00                 	db	0
   722  017B19  00                 	db	0
   723  017B1A  00                 	db	0
   724  017B1B  00                 	db	0
   725  017B1C  00                 	db	0
   726  017B1D  00                 	db	0
   727  017B1E  00                 	db	0
   728  017B1F  00                 	db	0
   729  017B20  00                 	db	0
   730  017B21  00                 	db	0
   731  017B22  00                 	db	0
   732  017B23  00                 	db	0
   733  017B24  00                 	db	0
   734  017B25  00                 	db	0
   735  017B26  00                 	db	0
   736  017B27  00                 	db	0
   737  017B28  00                 	db	0
   738  017B29  00                 	db	0
   739  017B2A  00                 	db	0
   740  017B2B  00                 	db	0
   741  017B2C  00                 	db	0
   742  017B2D  00                 	db	0
   743  017B2E  00                 	db	0
   744  017B2F  00                 	db	0
   745  017B30  00                 	db	0
   746  017B31  00                 	db	0
   747  017B32  00                 	db	0
   748  017B33  00                 	db	0
   749  017B34  00                 	db	0
   750  017B35  00                 	db	0
   751  017B36  00                 	db	0
   752  017B37  00                 	db	0
   753  017B38  00                 	db	0
   754  017B39  00                 	db	0
   755  017B3A  00                 	db	0
   756  017B3B  00                 	db	0
   757  017B3C  00                 	db	0
   758  017B3D  00                 	db	0
   759  017B3E  00                 	db	0
   760  017B3F  00                 	db	0
   761  017B40  00                 	db	0
   762  017B41  00                 	db	0
   763  017B42  00                 	db	0
   764  017B43  00                 	db	0
   765  017B44  00                 	db	0
   766  017B45  00                 	db	0
   767  017B46  00                 	db	0
   768  017B47  00                 	db	0
   769  017B48  00                 	db	0
   770  017B49  00                 	db	0
   771  017B4A  00                 	db	0
   772  017B4B  00                 	db	0
   773  017B4C  00                 	db	0
   774  017B4D  00                 	db	0
   775  017B4E  00                 	db	0
   776  017B4F  00                 	db	0
   777  017B50  00                 	db	0
   778  017B51  00                 	db	0
   779  017B52  00                 	db	0
   780  017B53  00                 	db	0
   781  017B54  00                 	db	0
   782  017B55  00                 	db	0
   783  017B56  00                 	db	0
   784  017B57  00                 	db	0
   785  017B58  00                 	db	0
   786  017B59  00                 	db	0
   787  017B5A  00                 	db	0
   788  017B5B  00                 	db	0
   789  017B5C  00                 	db	0
   790  017B5D  00                 	db	0
   791  017B5E  00                 	db	0
   792  017B5F  00                 	db	0
   793  017B60  00                 	db	0
   794  017B61  00                 	db	0
   795  017B62  00                 	db	0
   796  017B63  00                 	db	0
   797  017B64  00                 	db	0
   798  017B65  00                 	db	0
   799  017B66  00                 	db	0
   800  017B67  00                 	db	0
   801  017B68  00                 	db	0
   802  017B69  00                 	db	0
   803  017B6A  00                 	db	0
   804  017B6B  00                 	db	0
   805  017B6C  00                 	db	0
   806  017B6D  00                 	db	0
   807  017B6E  00                 	db	0
   808  017B6F  00                 	db	0
   809  017B70  00                 	db	0
   810  017B71  00                 	db	0
   811  017B72  00                 	db	0
   812  017B73  0000               	dw	0
   813  017B75  0000               	dw	0
   814  017B77  0000               	dw	0
   815  017B79  0000               	dw	0
   816  017B7B  00                 	db	0
   817  017B7C  00                 	db	0
   818  017B7D  00                 	db	0
   819  017B7E  00                 	db	0
   820  017B7F  00                 	db	0
   821  017B80  00                 	db	0
   822  017B81  0000               	dw	0
   823  017B83  0000               	dw	0
   824  017B85  0000               	dw	0
   825  017B87  0000               	dw	0
   826  017B89  0000               	dw	0
   827  017B8B  0000               	dw	0
   828  017B8D  00                 	db	0
   829  017B8E  00                 	db	0
   830  017B8F  00                 	db	0
   831  017B90  00                 	db	0
   832  017B91  00                 	db	0
   833  017B92  00                 	db	0
   834  017B93  00                 	db	0
   835  017B94  00                 	db	0
   836  017B95  00                 	db	0
   837  017B96  00                 	db	0
   838  017B97  0000               	dw	0
   839  017B99  0000               	dw	0
   840  017B9B  2D                 	db	45
   841  017B9C  00                 	db	0
   842  017B9D  00                 	db	0
   843  017B9E  0000               	dw	0
   844  017BA0  0000               	dw	0
   845  017BA2  0000               	dw	0
   846  017BA4  0000               	dw	0
   847  017BA6  0000               	dw	0
   848  017BA8  0000               	dw	0
   849  017BAA  0000               	dw	0
   850  017BAC  0000               	dw	0
   851                           
   852                           	psect	mediumconst
   853  00FDB0                     __pmediumconst:
   854                           	opt callstack 0
   855  00FDB0  00                 	db	0
   856  00FDB1                     _T:
   857                           	opt callstack 0
   858  00FDB1  63                 	db	99
   859  00FDB2  6F                 	db	111
   860  00FDB3  6D                 	db	109
   861  00FDB4  6D                 	db	109
   862  00FDB5  61                 	db	97
   863  00FDB6  6E                 	db	110
   864  00FDB7  64                 	db	100
   865  00FDB8  73                 	db	115
   866  00FDB9  20                 	db	32
   867  00FDBA  31                 	db	49
   868  00FDBB  00                 	db	0
   869  00FDBC  00                 	db	0
   870  00FDBD  00                 	db	0
   871  00FDBE  00                 	db	0
   872  00FDBF  00                 	db	0
   873  00FDC0  00                 	db	0
   874  00FDC1  00                 	db	0
   875  00FDC2  00                 	db	0
   876  00FDC3  64                 	db	100
   877  00FDC4  69                 	db	105
   878  00FDC5  73                 	db	115
   879  00FDC6  70                 	db	112
   880  00FDC7  6C                 	db	108
   881  00FDC8  61                 	db	97
   882  00FDC9  79                 	db	121
   883  00FDCA  73                 	db	115
   884  00FDCB  20                 	db	32
   885  00FDCC  31                 	db	49
   886  00FDCD  00                 	db	0
   887  00FDCE  00                 	db	0
   888  00FDCF  00                 	db	0
   889  00FDD0  00                 	db	0
   890  00FDD1  00                 	db	0
   891  00FDD2  00                 	db	0
   892  00FDD3  00                 	db	0
   893  00FDD4  00                 	db	0
   894  00FDD5  63                 	db	99
   895  00FDD6  6F                 	db	111
   896  00FDD7  6D                 	db	109
   897  00FDD8  6D                 	db	109
   898  00FDD9  61                 	db	97
   899  00FDDA  6E                 	db	110
   900  00FDDB  64                 	db	100
   901  00FDDC  73                 	db	115
   902  00FDDD  20                 	db	32
   903  00FDDE  32                 	db	50
   904  00FDDF  00                 	db	0
   905  00FDE0  00                 	db	0
   906  00FDE1  00                 	db	0
   907  00FDE2  00                 	db	0
   908  00FDE3  00                 	db	0
   909  00FDE4  00                 	db	0
   910  00FDE5  00                 	db	0
   911  00FDE6  00                 	db	0
   912  00FDE7  64                 	db	100
   913  00FDE8  69                 	db	105
   914  00FDE9  73                 	db	115
   915  00FDEA  70                 	db	112
   916  00FDEB  6C                 	db	108
   917  00FDEC  61                 	db	97
   918  00FDED  79                 	db	121
   919  00FDEE  73                 	db	115
   920  00FDEF  20                 	db	32
   921  00FDF0  32                 	db	50
   922  00FDF1  00                 	db	0
   923  00FDF2  00                 	db	0
   924  00FDF3  00                 	db	0
   925  00FDF4  00                 	db	0
   926  00FDF5  00                 	db	0
   927  00FDF6  00                 	db	0
   928  00FDF7  00                 	db	0
   929  00FDF8  00                 	db	0
   930  00FDF9  63                 	db	99
   931  00FDFA  6F                 	db	111
   932  00FDFB  6D                 	db	109
   933  00FDFC  6D                 	db	109
   934  00FDFD  61                 	db	97
   935  00FDFE  6E                 	db	110
   936  00FDFF  64                 	db	100
   937  00FE00  73                 	db	115
   938  00FE01  20                 	db	32
   939  00FE02  33                 	db	51
   940  00FE03  00                 	db	0
   941  00FE04  00                 	db	0
   942  00FE05  00                 	db	0
   943  00FE06  00                 	db	0
   944  00FE07  00                 	db	0
   945  00FE08  00                 	db	0
   946  00FE09  00                 	db	0
   947  00FE0A  00                 	db	0
   948  00FE0B  64                 	db	100
   949  00FE0C  69                 	db	105
   950  00FE0D  73                 	db	115
   951  00FE0E  70                 	db	112
   952  00FE0F  6C                 	db	108
   953  00FE10  61                 	db	97
   954  00FE11  79                 	db	121
   955  00FE12  73                 	db	115
   956  00FE13  20                 	db	32
   957  00FE14  33                 	db	51
   958  00FE15  00                 	db	0
   959  00FE16  00                 	db	0
   960  00FE17  00                 	db	0
   961  00FE18  00                 	db	0
   962  00FE19  00                 	db	0
   963  00FE1A  00                 	db	0
   964  00FE1B  00                 	db	0
   965  00FE1C  00                 	db	0
   966  00FE1D  63                 	db	99
   967  00FE1E  6F                 	db	111
   968  00FE1F  6D                 	db	109
   969  00FE20  6D                 	db	109
   970  00FE21  61                 	db	97
   971  00FE22  6E                 	db	110
   972  00FE23  64                 	db	100
   973  00FE24  73                 	db	115
   974  00FE25  20                 	db	32
   975  00FE26  34                 	db	52
   976  00FE27  00                 	db	0
   977  00FE28  00                 	db	0
   978  00FE29  00                 	db	0
   979  00FE2A  00                 	db	0
   980  00FE2B  00                 	db	0
   981  00FE2C  00                 	db	0
   982  00FE2D  00                 	db	0
   983  00FE2E  00                 	db	0
   984  00FE2F  64                 	db	100
   985  00FE30  69                 	db	105
   986  00FE31  73                 	db	115
   987  00FE32  70                 	db	112
   988  00FE33  6C                 	db	108
   989  00FE34  61                 	db	97
   990  00FE35  79                 	db	121
   991  00FE36  73                 	db	115
   992  00FE37  20                 	db	32
   993  00FE38  34                 	db	52
   994  00FE39  00                 	db	0
   995  00FE3A  00                 	db	0
   996  00FE3B  00                 	db	0
   997  00FE3C  00                 	db	0
   998  00FE3D  00                 	db	0
   999  00FE3E  00                 	db	0
  1000  00FE3F  00                 	db	0
  1001  00FE40  00                 	db	0
  1002  00FE41                     __end_of_T:
  1003                           	opt callstack 0
  1004  0000                     _IVTADL	set	14493
  1005  0000                     _IVTADH	set	14494
  1006  0000                     _IVTADU	set	14495
  1007  0000                     _PIR6bits	set	14758
  1008  0000                     _PIR4bits	set	14756
  1009  0000                     _PIE8bits	set	14744
  1010  0000                     _PIR8bits	set	14760
  1011  0000                     _SCANPR	set	14839
  1012  0000                     _DMA2PR	set	14836
  1013  0000                     _DMA1PR	set	14835
  1014  0000                     _MAINPR	set	14834
  1015  0000                     _ISRPR	set	14833
  1016  0000                     _PIE2bits	set	14738
  1017  0000                     _PIR2bits	set	14754
  1018  0000                     _PIE9bits	set	14745
  1019  0000                     _PIR9bits	set	14761
  1020  0000                     _PIE6bits	set	14742
  1021  0000                     _PIE3bits	set	14739
  1022  0000                     _PMD7	set	14791
  1023  0000                     _PMD6	set	14790
  1024  0000                     _PMD5	set	14789
  1025  0000                     _PMD4	set	14788
  1026  0000                     _PMD3	set	14787
  1027  0000                     _PMD2	set	14786
  1028  0000                     _PMD1	set	14785
  1029  0000                     _PMD0	set	14784
  1030  0000                     _OSCTUNE	set	14814
  1031  0000                     _OSCFRQ	set	14815
  1032  0000                     _OSCEN	set	14813
  1033  0000                     _OSCCON3	set	14811
  1034  0000                     _OSCCON1	set	14809
  1035  0000                     _IPR8bits	set	14728
  1036  0000                     _IPR9bits	set	14729
  1037  0000                     _IPR5bits	set	14725
  1038  0000                     _IPR1bits	set	14721
  1039  0000                     _IPR3bits	set	14723
  1040  0000                     _IPR6bits	set	14726
  1041  0000                     _IPR2bits	set	14722
  1042  0000                     _PIE5bits	set	14741
  1043  0000                     _PIE1bits	set	14737
  1044  0000                     _PIR5bits	set	14757
  1045  0000                     _PIR1bits	set	14753
  1046  0000                     _PLLR	set	118496
  1047  0000                     _SPI1SDIPPS	set	15071
  1048  0000                     _U1RXPPS	set	15077
  1049  0000                     _RC6PPS	set	14870
  1050  0000                     _RC5PPS	set	14869
  1051  0000                     _INT1PPS	set	15041
  1052  0000                     _RD1PPS	set	14873
  1053  0000                     _INT0PPS	set	15040
  1054  0000                     _RC3PPS	set	14867
  1055  0000                     _RB6PPS	set	14862
  1056  0000                     _SPI1SCKPPS	set	15070
  1057  0000                     _U2RXPPS	set	15080
  1058  0000                     _SLRCONF	set	14995
  1059  0000                     _SLRCONE	set	14979
  1060  0000                     _SLRCOND	set	14963
  1061  0000                     _SLRCONC	set	14947
  1062  0000                     _SLRCONB	set	14931
  1063  0000                     _SLRCONA	set	14915
  1064  0000                     _ODCOND	set	14962
  1065  0000                     _ODCONC	set	14946
  1066  0000                     _ODCONB	set	14930
  1067  0000                     _ODCONA	set	14914
  1068  0000                     _ODCONF	set	14994
  1069  0000                     _ODCONE	set	14978
  1070  0000                     _WPUC	set	14945
  1071  0000                     _WPUA	set	14913
  1072  0000                     _WPUB	set	14929
  1073  0000                     _WPUE	set	14977
  1074  0000                     _WPUF	set	14993
  1075  0000                     _WPUD	set	14961
  1076  0000                     _ANSELA	set	14912
  1077  0000                     _ANSELF	set	14992
  1078  0000                     _ANSELE	set	14976
  1079  0000                     _ANSELB	set	14928
  1080  0000                     _ANSELC	set	14944
  1081  0000                     _ANSELD	set	14960
  1082  0000                     _DMA2SSA	set	15321
  1083  0000                     _DMA1SSA	set	15353
  1084  0000                     _DMA2DSZ	set	15310
  1085  0000                     _DMA2SSZ	set	15319
  1086  0000                     _DMA2DSA	set	15312
  1087  0000                     _DMA1DSZ	set	15342
  1088  0000                     _DMA1SSZ	set	15351
  1089  0000                     _DMA1DSA	set	15344
  1090  0000                     _DMA1CON0bits	set	15356
  1091  0000                     _DMA1CON1bits	set	15357
  1092  0000                     _DMA2CON0	set	15324
  1093  0000                     _DMA2AIRQ	set	15326
  1094  0000                     _DMA2SIRQ	set	15327
  1095  0000                     _DMA2CON1	set	15325
  1096  0000                     _DMA1CON0	set	15356
  1097  0000                     _DMA1AIRQ	set	15358
  1098  0000                     _DMA1SIRQ	set	15359
  1099  0000                     _DMA1CON1	set	15357
  1100  0000                     _CLKRCON	set	15589
  1101  0000                     _CLKRCLK	set	15590
  1102  0000                     _SPI1INTFbits	set	15642
  1103  0000                     _SPI1RXB	set	15632
  1104  0000                     _SPI1TXB	set	15633
  1105  0000                     _SPI1TCNTL	set	15634
  1106  0000                     _SPI1CON0	set	15636
  1107  0000                     _SPI1CLK	set	15644
  1108  0000                     _SPI1BAUD	set	15641
  1109  0000                     _SPI1CON2	set	15638
  1110  0000                     _SPI1CON1	set	15637
  1111  0000                     _U2RXB	set	15824
  1112  0000                     _U2TXB	set	15826
  1113  0000                     _U2ERRIE	set	15842
  1114  0000                     _U2ERRIR	set	15841
  1115  0000                     _U2UIR	set	15840
  1116  0000                     _U2FIFO	set	15839
  1117  0000                     _U2BRGH	set	15838
  1118  0000                     _U2BRGL	set	15837
  1119  0000                     _U2CON2	set	15836
  1120  0000                     _U2CON1	set	15835
  1121  0000                     _U2CON0	set	15834
  1122  0000                     _U2P3L	set	15832
  1123  0000                     _U2P2L	set	15830
  1124  0000                     _U2P1L	set	15828
  1125  0000                     _U1RXB	set	15848
  1126  0000                     _U1TXB	set	15850
  1127  0000                     _U1ERRIE	set	15866
  1128  0000                     _U1ERRIR	set	15865
  1129  0000                     _U1UIR	set	15864
  1130  0000                     _U1FIFO	set	15863
  1131  0000                     _U1BRGH	set	15862
  1132  0000                     _U1BRGL	set	15861
  1133  0000                     _U1CON2	set	15860
  1134  0000                     _U1CON1	set	15859
  1135  0000                     _U1CON0	set	15858
  1136  0000                     _U1P3H	set	15857
  1137  0000                     _U1P3L	set	15856
  1138  0000                     _U1P2H	set	15855
  1139  0000                     _U1P2L	set	15854
  1140  0000                     _U1P1H	set	15853
  1141  0000                     _U1P1L	set	15852
  1142  0000                     _FVRCON	set	16065
  1143  0000                     _ADFLTRL	set	16102
  1144  0000                     _ADFLTRH	set	16103
  1145  0000                     _ADCON0bits	set	16120
  1146  0000                     _ADCON0	set	16120
  1147  0000                     _ADCLK	set	16127
  1148  0000                     _ADACT	set	16126
  1149  0000                     _ADREF	set	16125
  1150  0000                     _ADSTAT	set	16124
  1151  0000                     _ADCON3	set	16123
  1152  0000                     _ADCON2	set	16122
  1153  0000                     _ADCON1	set	16121
  1154  0000                     _ADPREH	set	16119
  1155  0000                     _ADPREL	set	16118
  1156  0000                     _ADCAP	set	16117
  1157  0000                     _ADACQH	set	16116
  1158  0000                     _ADACQL	set	16115
  1159  0000                     _ADPCH	set	16113
  1160  0000                     _ADRPT	set	16108
  1161  0000                     _ADACCU	set	16106
  1162  0000                     _ADSTPTH	set	16101
  1163  0000                     _ADSTPTL	set	16100
  1164  0000                     _ADUTHH	set	16097
  1165  0000                     _ADUTHL	set	16096
  1166  0000                     _ADLTHH	set	16095
  1167  0000                     _ADLTHL	set	16094
  1168  0000                     _CCPTMRS1bits	set	16223
  1169  0000                     _PORTFbits	set	16335
  1170  0000                     _LATCbits	set	16316
  1171  0000                     _LATDbits	set	16317
  1172  0000                     _PORTBbits	set	16331
  1173  0000                     _T3CONbits	set	16294
  1174  0000                     _T3CON	set	16294
  1175  0000                     _TMR3L	set	16292
  1176  0000                     _TMR3H	set	16293
  1177  0000                     _T3CLK	set	16297
  1178  0000                     _T3GATE	set	16296
  1179  0000                     _T3GCON	set	16295
  1180  0000                     _T2CON	set	16300
  1181  0000                     _T2TMR	set	16298
  1182  0000                     _T2PR	set	16299
  1183  0000                     _T2RST	set	16303
  1184  0000                     _T2HLT	set	16301
  1185  0000                     _T2CLKCON	set	16302
  1186  0000                     _PWM8DCL	set	16224
  1187  0000                     _PWM8DCH	set	16225
  1188  0000                     _PWM8CON	set	16226
  1189  0000                     _LATEbits	set	16318
  1190  0000                     _T5CONbits	set	16282
  1191  0000                     _T5CON	set	16282
  1192  0000                     _TMR5L	set	16280
  1193  0000                     _TMR5H	set	16281
  1194  0000                     _T5CLK	set	16285
  1195  0000                     _T5GATE	set	16284
  1196  0000                     _T5GCON	set	16283
  1197  0000                     _T6CON	set	16276
  1198  0000                     _T6TMR	set	16274
  1199  0000                     _T6PR	set	16275
  1200  0000                     _T6RST	set	16279
  1201  0000                     _T6HLT	set	16277
  1202  0000                     _T6CLKCON	set	16278
  1203  0000                     _TRISD	set	16325
  1204  0000                     _TRISC	set	16324
  1205  0000                     _TRISB	set	16323
  1206  0000                     _TRISA	set	16322
  1207  0000                     _TRISF	set	16327
  1208  0000                     _TRISE	set	16326
  1209  0000                     _LATC	set	16316
  1210  0000                     _LATB	set	16315
  1211  0000                     _LATF	set	16319
  1212  0000                     _LATA	set	16314
  1213  0000                     _LATD	set	16317
  1214  0000                     _LATE	set	16318
  1215  0000                     _IVTLOCKbits	set	16340
  1216  0000                     _IVTLOCK	set	16340
  1217  0000                     _INTCON0bits	set	16338
  1218  0000                     _GIE	set	130711
  1219  00FE41                     
  1220                           ; BSR set to: 57
  1221  00FE41  20                 	db	32
  1222  00FE42  4D                 	db	77	;'M'
  1223  00FE43  65                 	db	101	;'e'
  1224  00FE44  73                 	db	115	;'s'
  1225  00FE45  67                 	db	103	;'g'
  1226  00FE46  20                 	db	32
  1227  00FE47  25                 	db	37
  1228  00FE48  64                 	db	100	;'d'
  1229  00FE49  20                 	db	32
  1230  00FE4A  53                 	db	83	;'S'
  1231  00FE4B  74                 	db	116	;'t'
  1232  00FE4C  61                 	db	97	;'a'
  1233  00FE4D  63                 	db	99	;'c'
  1234  00FE4E  6B                 	db	107	;'k'
  1235  00FE4F  20                 	db	32
  1236  00FE50  25                 	db	37
  1237  00FE51  64                 	db	100	;'d'
  1238  00FE52  20                 	db	32
  1239  00FE53  20                 	db	32
  1240  00FE54  20                 	db	32
  1241  00FE55  20                 	db	32
  1242  00FE56  20                 	db	32
  1243  00FE57  20                 	db	32
  1244  00FE58  00                 	db	0
  1245  00FE59                     STR_19:
  1246                           
  1247                           ; BSR set to: 57
  1248  00FE59  42                 	db	66	;'B'
  1249  00FE5A  41                 	db	65	;'A'
  1250  00FE5B  48                 	db	72	;'H'
  1251  00FE5C  20                 	db	32
  1252  00FE5D  25                 	db	37
  1253  00FE5E  33                 	db	51	;'3'
  1254  00FE5F  2E                 	db	46
  1255  00FE60  32                 	db	50	;'2'
  1256  00FE61  66                 	db	102	;'f'
  1257  00FE62  20                 	db	32
  1258  00FE63  50                 	db	80	;'P'
  1259  00FE64  25                 	db	37
  1260  00FE65  33                 	db	51	;'3'
  1261  00FE66  2E                 	db	46
  1262  00FE67  32                 	db	50	;'2'
  1263  00FE68  66                 	db	102	;'f'
  1264  00FE69  20                 	db	32
  1265  00FE6A  20                 	db	32
  1266  00FE6B  20                 	db	32
  1267  00FE6C  00                 	db	0
  1268  00FE6D                     STR_39:
  1269                           
  1270                           ; BSR set to: 57
  1271  00FE6D  20                 	db	32
  1272  00FE6E  20                 	db	32
  1273  00FE6F  20                 	db	32
  1274  00FE70  20                 	db	32
  1275  00FE71  20                 	db	32
  1276  00FE72  20                 	db	32
  1277  00FE73  20                 	db	32
  1278  00FE74  20                 	db	32
  1279  00FE75  20                 	db	32
  1280  00FE76  20                 	db	32
  1281  00FE77  20                 	db	32
  1282  00FE78  20                 	db	32
  1283  00FE79  20                 	db	32
  1284  00FE7A  20                 	db	32
  1285  00FE7B  20                 	db	32
  1286  00FE7C  20                 	db	32
  1287  00FE7D  20                 	db	32
  1288  00FE7E  20                 	db	32
  1289  00FE7F  00                 	db	0
  1290  00FE80                     STR_29:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FE80  48                 	db	72	;'H'
  1294  00FE81  45                 	db	69	;'E'
  1295  00FE82  4C                 	db	76	;'L'
  1296  00FE83  50                 	db	80	;'P'
  1297  00FE84  20                 	db	32
  1298  00FE85  25                 	db	37
  1299  00FE86  73                 	db	115	;'s'
  1300  00FE87  20                 	db	32
  1301  00FE88  20                 	db	32
  1302  00FE89  20                 	db	32
  1303  00FE8A  20                 	db	32
  1304  00FE8B  20                 	db	32
  1305  00FE8C  20                 	db	32
  1306  00FE8D  20                 	db	32
  1307  00FE8E  20                 	db	32
  1308  00FE8F  20                 	db	32
  1309  00FE90  20                 	db	32
  1310  00FE91  20                 	db	32
  1311  00FE92  00                 	db	0
  1312  00FE93                     
  1313                           ; BSR set to: 57
  1314  00FE93  44                 	db	68	;'D'
  1315  00FE94  49                 	db	73	;'I'
  1316  00FE95  53                 	db	83	;'S'
  1317  00FE96  50                 	db	80	;'P'
  1318  00FE97  4C                 	db	76	;'L'
  1319  00FE98  41                 	db	65	;'A'
  1320  00FE99  59                 	db	89	;'Y'
  1321  00FE9A  20                 	db	32
  1322  00FE9B  25                 	db	37
  1323  00FE9C  73                 	db	115	;'s'
  1324  00FE9D  20                 	db	32
  1325  00FE9E  20                 	db	32
  1326  00FE9F  20                 	db	32
  1327  00FEA0  20                 	db	32
  1328  00FEA1  20                 	db	32
  1329  00FEA2  20                 	db	32
  1330  00FEA3  20                 	db	32
  1331  00FEA4  20                 	db	32
  1332  00FEA5  00                 	db	0
  1333  00FEA6                     STR_20:
  1334                           
  1335                           ; BSR set to: 57
  1336  00FEA6  53                 	db	83	;'S'
  1337  00FEA7  4F                 	db	79	;'O'
  1338  00FEA8  43                 	db	67	;'C'
  1339  00FEA9  20                 	db	32
  1340  00FEAA  25                 	db	37
  1341  00FEAB  64                 	db	100	;'d'
  1342  00FEAC  20                 	db	32
  1343  00FEAD  52                 	db	82	;'R'
  1344  00FEAE  55                 	db	85	;'U'
  1345  00FEAF  4E                 	db	78	;'N'
  1346  00FEB0  20                 	db	32
  1347  00FEB1  25                 	db	37
  1348  00FEB2  64                 	db	100	;'d'
  1349  00FEB3  20                 	db	32
  1350  00FEB4  20                 	db	32
  1351  00FEB5  20                 	db	32
  1352  00FEB6  20                 	db	32
  1353  00FEB7  20                 	db	32
  1354  00FEB8  00                 	db	0
  1355  00FEB9                     STR_12:
  1356                           
  1357                           ; BSR set to: 57
  1358  00FEB9  50                 	db	80	;'P'
  1359  00FEBA  56                 	db	86	;'V'
  1360  00FEBB  20                 	db	32
  1361  00FEBC  20                 	db	32
  1362  00FEBD  20                 	db	32
  1363  00FEBE  50                 	db	80	;'P'
  1364  00FEBF  57                 	db	87	;'W'
  1365  00FEC0  52                 	db	82	;'R'
  1366  00FEC1  20                 	db	32
  1367  00FEC2  25                 	db	37
  1368  00FEC3  33                 	db	51	;'3'
  1369  00FEC4  2E                 	db	46
  1370  00FEC5  32                 	db	50	;'2'
  1371  00FEC6  66                 	db	102	;'f'
  1372  00FEC7  20                 	db	32
  1373  00FEC8  20                 	db	32
  1374  00FEC9  20                 	db	32
  1375  00FECA  20                 	db	32
  1376  00FECB  00                 	db	0
  1377  00FECC                     STR_14:
  1378                           
  1379                           ; BSR set to: 57
  1380  00FECC  49                 	db	73	;'I'
  1381  00FECD  4E                 	db	78	;'N'
  1382  00FECE  56                 	db	86	;'V'
  1383  00FECF  20                 	db	32
  1384  00FED0  20                 	db	32
  1385  00FED1  50                 	db	80	;'P'
  1386  00FED2  57                 	db	87	;'W'
  1387  00FED3  52                 	db	82	;'R'
  1388  00FED4  20                 	db	32
  1389  00FED5  25                 	db	37
  1390  00FED6  33                 	db	51	;'3'
  1391  00FED7  2E                 	db	46
  1392  00FED8  32                 	db	50	;'2'
  1393  00FED9  66                 	db	102	;'f'
  1394  00FEDA  20                 	db	32
  1395  00FEDB  20                 	db	32
  1396  00FEDC  20                 	db	32
  1397  00FEDD  20                 	db	32
  1398  00FEDE  00                 	db	0
  1399  00FEDF                     STR_13:
  1400                           
  1401                           ; BSR set to: 57
  1402  00FEDF  4C                 	db	76	;'L'
  1403  00FEE0  4F                 	db	79	;'O'
  1404  00FEE1  41                 	db	65	;'A'
  1405  00FEE2  44                 	db	68	;'D'
  1406  00FEE3  20                 	db	32
  1407  00FEE4  50                 	db	80	;'P'
  1408  00FEE5  57                 	db	87	;'W'
  1409  00FEE6  52                 	db	82	;'R'
  1410  00FEE7  20                 	db	32
  1411  00FEE8  25                 	db	37
  1412  00FEE9  33                 	db	51	;'3'
  1413  00FEEA  2E                 	db	46
  1414  00FEEB  32                 	db	50	;'2'
  1415  00FEEC  66                 	db	102	;'f'
  1416  00FEED  20                 	db	32
  1417  00FEEE  20                 	db	32
  1418  00FEEF  20                 	db	32
  1419  00FEF0  20                 	db	32
  1420  00FEF1  00                 	db	0
  1421  00FEF2                     STR_18:
  1422                           
  1423                           ; BSR set to: 57
  1424  00FEF2  42                 	db	66	;'B'
  1425  00FEF3  41                 	db	65	;'A'
  1426  00FEF4  54                 	db	84	;'T'
  1427  00FEF5  54                 	db	84	;'T'
  1428  00FEF6  20                 	db	32
  1429  00FEF7  50                 	db	80	;'P'
  1430  00FEF8  57                 	db	87	;'W'
  1431  00FEF9  52                 	db	82	;'R'
  1432  00FEFA  20                 	db	32
  1433  00FEFB  25                 	db	37
  1434  00FEFC  33                 	db	51	;'3'
  1435  00FEFD  2E                 	db	46
  1436  00FEFE  32                 	db	50	;'2'
  1437  00FEFF  66                 	db	102	;'f'
  1438  00FF00  20                 	db	32
  1439  00FF01  20                 	db	32
  1440  00FF02  20                 	db	32
  1441  00FF03  20                 	db	32
  1442  00FF04  00                 	db	0
  1443  00FF05                     STR_16:
  1444                           
  1445                           ; BSR set to: 57
  1446  00FF05  42                 	db	66	;'B'
  1447  00FF06  56                 	db	86	;'V'
  1448  00FF07  20                 	db	32
  1449  00FF08  25                 	db	37
  1450  00FF09  32                 	db	50	;'2'
  1451  00FF0A  2E                 	db	46
  1452  00FF0B  32                 	db	50	;'2'
  1453  00FF0C  66                 	db	102	;'f'
  1454  00FF0D  20                 	db	32
  1455  00FF0E  42                 	db	66	;'B'
  1456  00FF0F  41                 	db	65	;'A'
  1457  00FF10  20                 	db	32
  1458  00FF11  25                 	db	37
  1459  00FF12  32                 	db	50	;'2'
  1460  00FF13  2E                 	db	46
  1461  00FF14  32                 	db	50	;'2'
  1462  00FF15  66                 	db	102	;'f'
  1463  00FF16  20                 	db	32
  1464  00FF17  00                 	db	0
  1465  00FF18                     STR_17:
  1466                           
  1467                           ; BSR set to: 57
  1468  00FF18  43                 	db	67	;'C'
  1469  00FF19  56                 	db	86	;'V'
  1470  00FF1A  20                 	db	32
  1471  00FF1B  25                 	db	37
  1472  00FF1C  32                 	db	50	;'2'
  1473  00FF1D  2E                 	db	46
  1474  00FF1E  32                 	db	50	;'2'
  1475  00FF1F  66                 	db	102	;'f'
  1476  00FF20  20                 	db	32
  1477  00FF21  4C                 	db	76	;'L'
  1478  00FF22  41                 	db	65	;'A'
  1479  00FF23  20                 	db	32
  1480  00FF24  25                 	db	37
  1481  00FF25  32                 	db	50	;'2'
  1482  00FF26  2E                 	db	46
  1483  00FF27  32                 	db	50	;'2'
  1484  00FF28  66                 	db	102	;'f'
  1485  00FF29  20                 	db	32
  1486  00FF2A  00                 	db	0
  1487  00FF2B                     STR_15:
  1488                           
  1489                           ; BSR set to: 57
  1490  00FF2B  50                 	db	80	;'P'
  1491  00FF2C  56                 	db	86	;'V'
  1492  00FF2D  20                 	db	32
  1493  00FF2E  25                 	db	37
  1494  00FF2F  32                 	db	50	;'2'
  1495  00FF30  2E                 	db	46
  1496  00FF31  32                 	db	50	;'2'
  1497  00FF32  66                 	db	102	;'f'
  1498  00FF33  20                 	db	32
  1499  00FF34  50                 	db	80	;'P'
  1500  00FF35  41                 	db	65	;'A'
  1501  00FF36  20                 	db	32
  1502  00FF37  25                 	db	37
  1503  00FF38  32                 	db	50	;'2'
  1504  00FF39  2E                 	db	46
  1505  00FF3A  32                 	db	50	;'2'
  1506  00FF3B  66                 	db	102	;'f'
  1507  00FF3C  20                 	db	32
  1508  00FF3D  00                 	db	0
  1509  00FF3E                     STR_8:
  1510                           
  1511                           ; BSR set to: 57
  1512  00FF3E  20                 	db	32
  1513  00FF3F  56                 	db	86	;'V'
  1514  00FF40  54                 	db	84	;'T'
  1515  00FF41  45                 	db	69	;'E'
  1516  00FF42  52                 	db	82	;'R'
  1517  00FF43  4D                 	db	77	;'M'
  1518  00FF44  20                 	db	32
  1519  00FF45  23                 	db	35
  1520  00FF46  32                 	db	50	;'2'
  1521  00FF47  20                 	db	32
  1522  00FF48  20                 	db	32
  1523  00FF49  20                 	db	32
  1524  00FF4A  20                 	db	32
  1525  00FF4B  20                 	db	32
  1526  00FF4C  20                 	db	32
  1527  00FF4D  20                 	db	32
  1528  00FF4E  00                 	db	0
  1529  00FF4F                     STR_4:
  1530                           
  1531                           ; BSR set to: 57
  1532  00FF4F  20                 	db	32
  1533  00FF50  4E                 	db	78	;'N'
  1534  00FF51  53                 	db	83	;'S'
  1535  00FF52  41                 	db	65	;'A'
  1536  00FF53  53                 	db	83	;'S'
  1537  00FF54  50                 	db	80	;'P'
  1538  00FF55  4F                 	db	79	;'O'
  1539  00FF56  4F                 	db	79	;'O'
  1540  00FF57  4B                 	db	75	;'K'
  1541  00FF58  20                 	db	32
  1542  00FF59  20                 	db	32
  1543  00FF5A  20                 	db	32
  1544  00FF5B  20                 	db	32
  1545  00FF5C  20                 	db	32
  1546  00FF5D  20                 	db	32
  1547  00FF5E  20                 	db	32
  1548  00FF5F  00                 	db	0
  1549  00FF60                     STR_1:
  1550                           
  1551                           ; BSR set to: 57
  1552  00FF60  20                 	db	32
  1553  00FF61  4D                 	db	77	;'M'
  1554  00FF62  42                 	db	66	;'B'
  1555  00FF63  4D                 	db	77	;'M'
  1556  00FF64  43                 	db	67	;'C'
  1557  00FF65  20                 	db	32
  1558  00FF66  53                 	db	83	;'S'
  1559  00FF67  4F                 	db	79	;'O'
  1560  00FF68  4C                 	db	76	;'L'
  1561  00FF69  41                 	db	65	;'A'
  1562  00FF6A  52                 	db	82	;'R'
  1563  00FF6B  4D                 	db	77	;'M'
  1564  00FF6C  4F                 	db	79	;'O'
  1565  00FF6D  4E                 	db	78	;'N'
  1566  00FF6E  20                 	db	32
  1567  00FF6F  20                 	db	32
  1568  00FF70  00                 	db	0
  1569  00FF71                     STR_5:
  1570                           
  1571                           ; BSR set to: 57
  1572  00FF71  20                 	db	32
  1573  00FF72  53                 	db	83	;'S'
  1574  00FF73  45                 	db	69	;'E'
  1575  00FF74  51                 	db	81	;'Q'
  1576  00FF75  55                 	db	85	;'U'
  1577  00FF76  45                 	db	69	;'E'
  1578  00FF77  4E                 	db	78	;'N'
  1579  00FF78  43                 	db	67	;'C'
  1580  00FF79  45                 	db	69	;'E'
  1581  00FF7A  20                 	db	32
  1582  00FF7B  54                 	db	84	;'T'
  1583  00FF7C  45                 	db	69	;'E'
  1584  00FF7D  53                 	db	83	;'S'
  1585  00FF7E  54                 	db	84	;'T'
  1586  00FF7F  20                 	db	32
  1587  00FF80  20                 	db	32
  1588  00FF81  00                 	db	0
  1589  00FF82                     STR_11:
  1590                           
  1591                           ; BSR set to: 57
  1592  00FF82  25                 	db	37
  1593  00FF83  64                 	db	100	;'d'
  1594  00FF84  20                 	db	32
  1595  00FF85  25                 	db	37
  1596  00FF86  32                 	db	50	;'2'
  1597  00FF87  2E                 	db	46
  1598  00FF88  34                 	db	52	;'4'
  1599  00FF89  66                 	db	102	;'f'
  1600  00FF8A  2C                 	db	44
  1601  00FF8B  20                 	db	32
  1602  00FF8C  25                 	db	37
  1603  00FF8D  64                 	db	100	;'d'
  1604  00FF8E  20                 	db	32
  1605  00FF8F  20                 	db	32
  1606  00FF90  20                 	db	32
  1607  00FF91  23                 	db	35
  1608  00FF92  00                 	db	0
  1609  00FF93                     STR_9:
  1610                           
  1611                           ; BSR set to: 57
  1612  00FF93  25                 	db	37
  1613  00FF94  64                 	db	100	;'d'
  1614  00FF95  20                 	db	32
  1615  00FF96  25                 	db	37
  1616  00FF97  32                 	db	50	;'2'
  1617  00FF98  2E                 	db	46
  1618  00FF99  34                 	db	52	;'4'
  1619  00FF9A  66                 	db	102	;'f'
  1620  00FF9B  20                 	db	32
  1621  00FF9C  20                 	db	32
  1622  00FF9D  20                 	db	32
  1623  00FF9E  25                 	db	37
  1624  00FF9F  64                 	db	100	;'d'
  1625  00FFA0  20                 	db	32
  1626  00FFA1  20                 	db	32
  1627  00FFA2  00                 	db	0
  1628  00FFA3                     STR_33:
  1629                           
  1630                           ; BSR set to: 57
  1631  00FFA3  76                 	db	118	;'v'
  1632  00FFA4  74                 	db	116	;'t'
  1633  00FFA5  65                 	db	101	;'e'
  1634  00FFA6  72                 	db	114	;'r'
  1635  00FFA7  6D                 	db	109	;'m'
  1636  00FFA8  20                 	db	32
  1637  00FFA9  25                 	db	37
  1638  00FFAA  78                 	db	120	;'x'
  1639  00FFAB  3A                 	db	58	;':'
  1640  00FFAC  25                 	db	37
  1641  00FFAD  78                 	db	120	;'x'
  1642  00FFAE  20                 	db	32
  1643  00FFAF  20                 	db	32
  1644  00FFB0  20                 	db	32
  1645  00FFB1  00                 	db	0
  1646  00FFB2                     STR_2:
  1647                           
  1648                           ; BSR set to: 57
  1649  00FFB2  20                 	db	32
  1650  00FFB3  56                 	db	86	;'V'
  1651  00FFB4  65                 	db	101	;'e'
  1652  00FFB5  72                 	db	114	;'r'
  1653  00FFB6  73                 	db	115	;'s'
  1654  00FFB7  69                 	db	105	;'i'
  1655  00FFB8  6F                 	db	111	;'o'
  1656  00FFB9  6E                 	db	110	;'n'
  1657  00FFBA  20                 	db	32
  1658  00FFBB  25                 	db	37
  1659  00FFBC  73                 	db	115	;'s'
  1660  00FFBD  20                 	db	32
  1661  00FFBE  20                 	db	32
  1662  00FFBF  20                 	db	32
  1663  00FFC0  00                 	db	0
  1664  00FFC1                     STR_27:
  1665                           
  1666                           ; BSR set to: 57
  1667  00FFC1  44                 	db	68	;'D'
  1668  00FFC2  65                 	db	101	;'e'
  1669  00FFC3  63                 	db	99	;'c'
  1670  00FFC4  20                 	db	32
  1671  00FFC5  20                 	db	32
  1672  00FFC6  34                 	db	52	;'4'
  1673  00FFC7  20                 	db	32
  1674  00FFC8  32                 	db	50	;'2'
  1675  00FFC9  30                 	db	48	;'0'
  1676  00FFCA  31                 	db	49	;'1'
  1677  00FFCB  39                 	db	57	;'9'
  1678  00FFCC  00                 	db	0
  1679  00FFCD                     STR_31:
  1680                           
  1681                           ; BSR set to: 57
  1682  00FFCD  25                 	db	37
  1683  00FFCE  73                 	db	115	;'s'
  1684  00FFCF  20                 	db	32
  1685  00FFD0  20                 	db	32
  1686  00FFD1  20                 	db	32
  1687  00FFD2  20                 	db	32
  1688  00FFD3  20                 	db	32
  1689  00FFD4  20                 	db	32
  1690  00FFD5  20                 	db	32
  1691  00FFD6  00                 	db	0
  1692  00FFD7                     STR_28:
  1693                           
  1694                           ; BSR set to: 57
  1695  00FFD7  32                 	db	50	;'2'
  1696  00FFD8  32                 	db	50	;'2'
  1697  00FFD9  3A                 	db	58	;':'
  1698  00FFDA  31                 	db	49	;'1'
  1699  00FFDB  31                 	db	49	;'1'
  1700  00FFDC  3A                 	db	58	;':'
  1701  00FFDD  32                 	db	50	;'2'
  1702  00FFDE  37                 	db	55	;'7'
  1703  00FFDF  00                 	db	0
  1704  00FFE0                     STR_3:
  1705                           
  1706                           ; BSR set to: 57
  1707  00FFE0  30                 	db	48	;'0'
  1708  00FFE1  2E                 	db	46
  1709  00FFE2  39                 	db	57	;'9'
  1710  00FFE3  39                 	db	57	;'9'
  1711  00FFE4  38                 	db	56	;'8'
  1712  00FFE5  00                 	db	0
  1713  00FFE6                     STR_46:
  1714                           
  1715                           ; BSR set to: 57
  1716  00FFE6  49                 	db	73	;'I'
  1717  00FFE7  4E                 	db	78	;'N'
  1718  00FFE8  46                 	db	70	;'F'
  1719  00FFE9  00                 	db	0
  1720  00FFEA                     STR_50:
  1721                           
  1722                           ; BSR set to: 57
  1723  00FFEA  4E                 	db	78	;'N'
  1724  00FFEB  41                 	db	65	;'A'
  1725  00FFEC  4E                 	db	78	;'N'
  1726  00FFED  00                 	db	0
  1727  00FFEE                     STR_47:
  1728                           
  1729                           ; BSR set to: 57
  1730  00FFEE  69                 	db	105	;'i'
  1731  00FFEF  6E                 	db	110	;'n'
  1732  00FFF0  66                 	db	102	;'f'
  1733  00FFF1  00                 	db	0
  1734  00FFF2                     STR_51:
  1735                           
  1736                           ; BSR set to: 57
  1737  00FFF2  6E                 	db	110	;'n'
  1738  00FFF3  61                 	db	97	;'a'
  1739  00FFF4  6E                 	db	110	;'n'
  1740  00FFF5  00                 	db	0
  1741  00FFF6                     STR_54:
  1742                           
  1743                           ; BSR set to: 57
  1744  00FFF6  6C                 	db	108	;'l'
  1745  00FFF7  66                 	db	102	;'f'
  1746  00FFF8  00                 	db	0
  1747  00FFF9                     STR_25:
  1748                           
  1749                           ; BSR set to: 57
  1750  00FFF9  25                 	db	37
  1751  00FFFA  63                 	db	99	;'c'
  1752  00FFFB  00                 	db	0
  1753  00FFFC                     STR_24:
  1754                           
  1755                           ; BSR set to: 57
  1756  00FFFC  25                 	db	37
  1757  00FFFD  73                 	db	115	;'s'
  1758  00FFFE  00                 	db	0
  1759  0000                     
  1760                           ; #config settings
  1761  00FFFF  00                 	db	0	; dummy byte at the end
  1762  0000                     
  1763                           	psect	cinit
  1764  0176A4                     __pcinit:
  1765                           	opt callstack 0
  1766  0176A4                     start_initialization:
  1767                           	opt callstack 0
  1768  0176A4                     __initialization:
  1769                           	opt callstack 0
  1770                           
  1771                           ; Initialize objects allocated to BANK2 (188 bytes)
  1772                           ; load TBLPTR registers with __pidataBANK2
  1773  0176A4  0EF2               	movlw	low __pidataBANK2
  1774  0176A6  6EF6               	movwf	tblptrl,c
  1775  0176A8  0E7A               	movlw	high __pidataBANK2
  1776  0176AA  6EF7               	movwf	tblptrh,c
  1777  0176AC  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1778  0176AE  6EF8               	movwf	tblptru,c
  1779  0176B0  EE00  F200         	lfsr	0,__pdataBANK2
  1780  0176B4  EE20 F0BC          	lfsr	2,188
  1781  0176B8                     copy_data0:
  1782  0176B8  0009               	tblrd		*+
  1783  0176BA  006F FFD7 FFEE     	movff	tablat,postinc0
  1784  0176C0  50DD               	movf	postdec2,w,c
  1785  0176C2  50D9               	movf	fsr2l,w,c
  1786  0176C4  E1F9               	bnz	copy_data0
  1787                           
  1788                           ; Initialize objects allocated to BANK1 (181 bytes)
  1789                           ; load TBLPTR registers with __pidataBANK1
  1790  0176C6  0E66               	movlw	low __pidataBANK1
  1791  0176C8  6EF6               	movwf	tblptrl,c
  1792  0176CA  0E7C               	movlw	high __pidataBANK1
  1793  0176CC  6EF7               	movwf	tblptrh,c
  1794  0176CE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1795  0176D0  6EF8               	movwf	tblptru,c
  1796  0176D2  EE00  F100         	lfsr	0,__pdataBANK1
  1797  0176D6  EE20 F0B5          	lfsr	2,181
  1798  0176DA                     copy_data1:
  1799  0176DA  0009               	tblrd		*+
  1800  0176DC  006F FFD7 FFEE     	movff	tablat,postinc0
  1801  0176E2  50DD               	movf	postdec2,w,c
  1802  0176E4  50D9               	movf	fsr2l,w,c
  1803  0176E6  E1F9               	bnz	copy_data1
  1804                           
  1805                           ; Initialize objects allocated to BANK0 (54 bytes)
  1806                           ; load TBLPTR registers with __pidataBANK0
  1807  0176E8  0E4A               	movlw	low __pidataBANK0
  1808  0176EA  6EF6               	movwf	tblptrl,c
  1809  0176EC  0E8D               	movlw	high __pidataBANK0
  1810  0176EE  6EF7               	movwf	tblptrh,c
  1811  0176F0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1812  0176F2  6EF8               	movwf	tblptru,c
  1813  0176F4  EE00  F0C3         	lfsr	0,__pdataBANK0
  1814  0176F8  EE20 F036          	lfsr	2,54
  1815  0176FC                     copy_data2:
  1816  0176FC  0009               	tblrd		*+
  1817  0176FE  006F FFD7 FFEE     	movff	tablat,postinc0
  1818  017704  50DD               	movf	postdec2,w,c
  1819  017706  50D9               	movf	fsr2l,w,c
  1820  017708  E1F9               	bnz	copy_data2
  1821                           
  1822                           ; Clear objects allocated to BIGRAM (290 bytes)
  1823  01770A  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1824  01770E  EE20 F122          	lfsr	2,290
  1825  017712                     clear_0:
  1826  017712  6AEE               	clrf	postinc0,c
  1827  017714  50DD               	movf	postdec2,w,c
  1828  017716  50D9               	movf	fsr2l,w,c
  1829  017718  E1FC               	bnz	clear_0
  1830  01771A  50DA               	movf	fsr2h,w,c
  1831  01771C  E1FA               	bnz	clear_0
  1832                           
  1833                           ; Clear objects allocated to BANK6 (255 bytes)
  1834  01771E  EE01  F200         	lfsr	0,__pbssBANK6
  1835  017722  EE20 F0FF          	lfsr	2,255
  1836  017726                     clear_1:
  1837  017726  6AEE               	clrf	postinc0,c
  1838  017728  50DD               	movf	postdec2,w,c
  1839  01772A  50D9               	movf	fsr2l,w,c
  1840  01772C  E1FC               	bnz	clear_1
  1841  01772E  50DA               	movf	fsr2h,w,c
  1842  017730  E1FA               	bnz	clear_1
  1843                           
  1844                           ; Clear objects allocated to BANK5 (255 bytes)
  1845  017732  EE01  F100         	lfsr	0,__pbssBANK5
  1846  017736  EE20 F0FF          	lfsr	2,255
  1847  01773A                     clear_2:
  1848  01773A  6AEE               	clrf	postinc0,c
  1849  01773C  50DD               	movf	postdec2,w,c
  1850  01773E  50D9               	movf	fsr2l,w,c
  1851  017740  E1FC               	bnz	clear_2
  1852  017742  50DA               	movf	fsr2h,w,c
  1853  017744  E1FA               	bnz	clear_2
  1854                           
  1855                           ; Clear objects allocated to BANK4 (134 bytes)
  1856  017746  EE01  F000         	lfsr	0,__pbssBANK4
  1857  01774A  0E86               	movlw	134
  1858  01774C                     clear_3:
  1859  01774C  6AEE               	clrf	postinc0,c
  1860  01774E  06E8               	decf	wreg,f,c
  1861  017750  E1FD               	bnz	clear_3
  1862                           
  1863                           ; Clear objects allocated to BANK3 (228 bytes)
  1864  017752  EE00  F300         	lfsr	0,__pbssBANK3
  1865  017756  0EE4               	movlw	228
  1866  017758                     clear_4:
  1867  017758  6AEE               	clrf	postinc0,c
  1868  01775A  06E8               	decf	wreg,f,c
  1869  01775C  E1FD               	bnz	clear_4
  1870                           
  1871                           ; Clear objects allocated to BANK2 (64 bytes)
  1872  01775E  EE00  F2BC         	lfsr	0,__pbssBANK2
  1873  017762  0E40               	movlw	64
  1874  017764                     clear_5:
  1875  017764  6AEE               	clrf	postinc0,c
  1876  017766  06E8               	decf	wreg,f,c
  1877  017768  E1FD               	bnz	clear_5
  1878                           
  1879                           ; Clear objects allocated to BANK1 (32 bytes)
  1880  01776A  EE00  F1B5         	lfsr	0,__pbssBANK1
  1881  01776E  0E20               	movlw	32
  1882  017770                     clear_6:
  1883  017770  6AEE               	clrf	postinc0,c
  1884  017772  06E8               	decf	wreg,f,c
  1885  017774  E1FD               	bnz	clear_6
  1886                           
  1887                           ; Clear objects allocated to BANK0 (99 bytes)
  1888  017776  EE00  F060         	lfsr	0,__pbssBANK0
  1889  01777A  0E63               	movlw	99
  1890  01777C                     clear_7:
  1891  01777C  6AEE               	clrf	postinc0,c
  1892  01777E  06E8               	decf	wreg,f,c
  1893  017780  E1FD               	bnz	clear_7
  1894                           
  1895                           ; Clear objects allocated to COMRAM (36 bytes)
  1896  017782  EE00  F001         	lfsr	0,__pbssCOMRAM
  1897  017786  0E24               	movlw	36
  1898  017788                     clear_8:
  1899  017788  6AEE               	clrf	postinc0,c
  1900  01778A  06E8               	decf	wreg,f,c
  1901  01778C  E1FD               	bnz	clear_8
  1902                           
  1903                           ;
  1904                           ; Setup IVTBASE
  1905                           ;
  1906  01778E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1907  017790  6ED5               	movwf	213,c
  1908  017792  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1909  017794  6ED6               	movwf	214,c
  1910  017796  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1911  017798  6ED7               	movwf	215,c
  1912  01779A                     end_of_initialization:
  1913                           	opt callstack 0
  1914  01779A                     __end_of__initialization:
  1915                           	opt callstack 0
  1916  01779A  0100               	movlb	0
  1917  01779C  EFC1  F08E         	goto	_main	;jump to C main() function
  1918                           
  1919                           	psect	bssCOMRAM
  1920  000001                     __pbssCOMRAM:
  1921                           	opt callstack 0
  1922  000001                     _UART2_RxInterruptHandler:
  1923                           	opt callstack 0
  1924  000001                     	ds	3
  1925  000004                     _INT1_InterruptHandler:
  1926                           	opt callstack 0
  1927  000004                     	ds	3
  1928  000007                     _INT0_InterruptHandler:
  1929                           	opt callstack 0
  1930  000007                     	ds	3
  1931  00000A                     _width:
  1932                           	opt callstack 0
  1933  00000A                     	ds	2
  1934  00000C                     _prec:
  1935                           	opt callstack 0
  1936  00000C                     	ds	2
  1937  00000E                     _flags:
  1938                           	opt callstack 0
  1939  00000E                     	ds	2
  1940  000010                     TMR3_ISR@CountCallBack:
  1941                           	opt callstack 0
  1942  000010                     	ds	2
  1943  000012                     _timer3ReloadVal:
  1944                           	opt callstack 0
  1945  000012                     	ds	2
  1946  000014                     TMR5_ISR@CountCallBack:
  1947                           	opt callstack 0
  1948  000014                     	ds	2
  1949  000016                     _timer5ReloadVal:
  1950                           	opt callstack 0
  1951  000016                     	ds	2
  1952  000018                     _mode_sw:
  1953                           	opt callstack 0
  1954  000018                     	ds	1
  1955  000019                     _uart2RxCount:
  1956                           	opt callstack 0
  1957  000019                     	ds	1
  1958  00001A                     _uart2RxTail:
  1959                           	opt callstack 0
  1960  00001A                     	ds	1
  1961  00001B                     _uart2RxHead:
  1962                           	opt callstack 0
  1963  00001B                     	ds	1
  1964  00001C                     _uart2TxBufferRemaining:
  1965                           	opt callstack 0
  1966  00001C                     	ds	1
  1967  00001D                     _uart2TxTail:
  1968                           	opt callstack 0
  1969  00001D                     	ds	1
  1970  00001E                     _uart2TxHead:
  1971                           	opt callstack 0
  1972  00001E                     	ds	1
  1973  00001F                     _uart1RxCount:
  1974                           	opt callstack 0
  1975  00001F                     	ds	1
  1976  000020                     _uart1RxTail:
  1977                           	opt callstack 0
  1978  000020                     	ds	1
  1979  000021                     _uart1RxHead:
  1980                           	opt callstack 0
  1981  000021                     	ds	1
  1982  000022                     _uart1TxBufferRemaining:
  1983                           	opt callstack 0
  1984  000022                     	ds	1
  1985  000023                     _uart1TxTail:
  1986                           	opt callstack 0
  1987  000023                     	ds	1
  1988  000024                     _uart1TxHead:
  1989                           	opt callstack 0
  1990  000024                     	ds	1
  1991                           
  1992                           	psect	bssBANK0
  1993  000060                     __pbssBANK0:
  1994                           	opt callstack 0
  1995  000060                     _S:
  1996                           	opt callstack 0
  1997  000060                     	ds	41
  1998  000089                     _spi_link:
  1999                           	opt callstack 0
  2000  000089                     	ds	12
  2001  000095                     floorf@F524:
  2002                           	opt callstack 0
  2003  000095                     	ds	4
  2004  000099                     ___fpclassifyf@F463:
  2005                           	opt callstack 0
  2006  000099                     	ds	4
  2007  00009D                     _utctime:
  2008                           	opt callstack 0
  2009  00009D                     	ds	4
  2010  0000A1                     wdtdelay@dcount:
  2011                           	opt callstack 0
  2012  0000A1                     	ds	4
  2013  0000A5                     _P:
  2014                           	opt callstack 0
  2015  0000A5                     	ds	4
  2016  0000A9                     _TMR3_InterruptHandler:
  2017                           	opt callstack 0
  2018  0000A9                     	ds	3
  2019  0000AC                     _TMR5_InterruptHandler:
  2020                           	opt callstack 0
  2021  0000AC                     	ds	3
  2022  0000AF                     _TMR6_InterruptHandler:
  2023                           	opt callstack 0
  2024  0000AF                     	ds	3
  2025  0000B2                     _ADCC_ADTI_InterruptHandler:
  2026                           	opt callstack 0
  2027  0000B2                     	ds	3
  2028  0000B5                     _ADCC_ADI_InterruptHandler:
  2029                           	opt callstack 0
  2030  0000B5                     	ds	3
  2031  0000B8                     _UART1_TxInterruptHandler:
  2032                           	opt callstack 0
  2033  0000B8                     	ds	3
  2034  0000BB                     _UART1_RxInterruptHandler:
  2035                           	opt callstack 0
  2036  0000BB                     	ds	3
  2037  0000BE                     _UART2_TxInterruptHandler:
  2038                           	opt callstack 0
  2039  0000BE                     	ds	3
  2040  0000C1                     _nout:
  2041                           	opt callstack 0
  2042  0000C1                     	ds	2
  2043                           
  2044                           	psect	dataBANK0
  2045  0000C3                     __pdataBANK0:
  2046                           	opt callstack 0
  2047  0000C3                     _R:
  2048                           	opt callstack 0
  2049  0000C3                     	ds	40
  2050  0000EB                     stoa@F1166:
  2051                           	opt callstack 0
  2052  0000EB                     	ds	7
  2053  0000F2                     _H:
  2054                           	opt callstack 0
  2055  0000F2                     	ds	7
  2056                           
  2057                           	psect	bssBANK1
  2058  0001B5                     __pbssBANK1:
  2059                           	opt callstack 0
  2060  0001B5                     _tickCount:
  2061                           	opt callstack 0
  2062  0001B5                     	ds	24
  2063  0001CD                     _seed:
  2064                           	opt callstack 0
  2065  0001CD                     	ds	8
  2066                           
  2067                           	psect	dataBANK1
  2068  000100                     __pdataBANK1:
  2069                           	opt callstack 0
  2070  000100                     _C:
  2071                           	opt callstack 0
  2072  000100                     	ds	165
  2073  0001A5                     _port_data:
  2074                           	opt callstack 0
  2075  0001A5                     	ds	16
  2076                           
  2077                           	psect	bssBANK2
  2078  0002BC                     __pbssBANK2:
  2079                           	opt callstack 0
  2080  0002BC                     _uart1TxBuffer:
  2081                           	opt callstack 0
  2082  0002BC                     	ds	64
  2083                           
  2084                           	psect	dataBANK2
  2085  000200                     __pdataBANK2:
  2086                           	opt callstack 0
  2087  000200                     _V:
  2088                           	opt callstack 0
  2089  000200                     	ds	188
  2090                           
  2091                           	psect	bssBANK3
  2092  000300                     __pbssBANK3:
  2093                           	opt callstack 0
  2094  000300                     lp_filter@smooth:
  2095                           	opt callstack 0
  2096  000300                     	ds	84
  2097  000354                     _uart2TxBuffer:
  2098                           	opt callstack 0
  2099  000354                     	ds	64
  2100  000394                     _dbuf:
  2101                           	opt callstack 0
  2102  000394                     	ds	80
  2103                           
  2104                           	psect	bssBANK4
  2105  000400                     __pbssBANK4:
  2106                           	opt callstack 0
  2107  000400                     _ring_buf2:
  2108                           	opt callstack 0
  2109  000400                     	ds	67
  2110  000443                     _ring_buf1:
  2111                           	opt callstack 0
  2112  000443                     	ds	67
  2113                           
  2114                           	psect	bssBANK5
  2115  000500                     __pbssBANK5:
  2116                           	opt callstack 0
  2117  000500                     _uart1RxBuffer:
  2118                           	opt callstack 0
  2119  000500                     	ds	255
  2120                           
  2121                           	psect	bssBANK6
  2122  000600                     __pbssBANK6:
  2123                           	opt callstack 0
  2124  000600                     _uart2RxBuffer:
  2125                           	opt callstack 0
  2126  000600                     	ds	255
  2127                           
  2128                           	psect	bssBIGRAM
  2129  0006FF                     __pbssBIGRAM:
  2130                           	opt callstack 0
  2131  0006FF                     _D:
  2132                           	opt callstack 0
  2133  0006FF                     	ds	290
  2134                           
  2135                           	psect	cstackBANK1
  2136  0001D5                     __pcstackBANK1:
  2137                           	opt callstack 0
  2138  0001D5                     ??_TMR3_ISR:
  2139                           
  2140                           ; 1 bytes @ 0x0
  2141  0001D5                     	ds	13
  2142                           
  2143                           	psect	cstackCOMRAM
  2144  000045                     __pcstackCOMRAM:
  2145                           	opt callstack 0
  2146  000045                     ??_ADCC_ThresholdISR:
  2147  000045                     
  2148                           ; 1 bytes @ 0x0
  2149  000045                     	ds	5
  2150  00004A                     ??_TMR6_ISR:
  2151                           
  2152                           ; 1 bytes @ 0x5
  2153  00004A                     	ds	1
  2154  00004B                     ??_INT1_ISR:
  2155  00004B                     
  2156                           ; 1 bytes @ 0x6
  2157  00004B                     	ds	4
  2158  00004F                     ??_TMR5_ISR:
  2159                           
  2160                           ; 1 bytes @ 0xA
  2161  00004F                     	ds	4
  2162                           
  2163 ;;
  2164 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2165 ;;
  2166 ;; *************** function _main *****************
  2167 ;; Defined at:
  2168 ;;		line 171 in file "main.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  k               1  [STACK] unsigned char 
  2173 ;;  j               1  [STACK] unsigned char 
  2174 ;;  i               1  [STACK] unsigned char 
  2175 ;;  inp_index       1  [STACK] unsigned char 
  2176 ;;  mode            1  [STACK] enum E17022
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1  [STACK] void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2190 ;;Total ram usage:        0 bytes
  2191 ;; Hardware stack levels required when called:   20
  2192 ;; This function calls:
  2193 ;;		_SYSTEM_Initialize
  2194 ;;		_StartTimer
  2195 ;;		_TimerDone
  2196 ;;		_WaitMs
  2197 ;;		_calc_model_data
  2198 ;;		_check_adc_scan
  2199 ;;		_check_enter_button
  2200 ;;		_check_help
  2201 ;;		_clear_adc_scan
  2202 ;;		_clear_hid_pflags
  2203 ;;		_convert_adc_data
  2204 ;;		_eaDogM_WriteCommand
  2205 ;;		_get_raw_result
  2206 ;;		_get_switch
  2207 ;;		_get_vterm_ptr
  2208 ;;		_hid_display
  2209 ;;		_init_bsoc
  2210 ;;		_init_display
  2211 ;;		_lp_filter
  2212 ;;		_mode_lamp_dim
  2213 ;;		_set_display_info
  2214 ;;		_set_vterm
  2215 ;;		_sprintf
  2216 ;;		_srand
  2217 ;;		_start_adc_scan
  2218 ;;		_start_switch_handler
  2219 ;;		_static_soc
  2220 ;;		_update_lcd
  2221 ;; This function is called by:
  2222 ;;		Startup code after reset
  2223 ;; This function uses a reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text0
  2227  011D82                     __ptext0:
  2228                           	opt callstack 0
  2229  011D82                     _main:
  2230                           	opt callstack 0
  2231                           
  2232                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2233  011D82  0E05               	movlw	5
  2234  011D84  26E1               	addwf	fsr1l,f,c
  2235  011D86  0E00               	movlw	0
  2236  011D88  22E2               	addwfc	fsr1h,f,c
  2237                           
  2238                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2239                           ;stkvar	_inp_index @ sp[(-5)+3]
  2240                           
  2241                           ;incstack = 0
  2242  011D8A  0EFE               	movlw	-2
  2243  011D8C  6AE3               	clrf	plusw1,c
  2244                           
  2245                           ;stkvar	_i @ sp[(-5)+2]
  2246  011D8E  0EFD               	movlw	-3
  2247  011D90  6AE3               	clrf	plusw1,c
  2248                           
  2249                           ;stkvar	_j @ sp[(-5)+1]
  2250  011D92  0EFC               	movlw	-4
  2251  011D94  6AE3               	clrf	plusw1,c
  2252  011D96  2AE3               	incf	plusw1,f,c
  2253                           
  2254                           ;stkvar	_k @ sp[(-5)+0]
  2255  011D98  0EFB               	movlw	-5
  2256  011D9A  6AE3               	clrf	plusw1,c
  2257  011D9C  82E3               	bsf	plusw1,1,c
  2258                           
  2259                           ;main.c: 177:  SYSTEM_Initialize();
  2260  011D9E  ECD2  F0C4         	call	_SYSTEM_Initialize	;wreg free
  2261                           
  2262                           ; BSR set to: 60
  2263                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2264  011DA2  8ED2               	bsf	210,7,c	;volatile
  2265                           
  2266                           ; BSR set to: 60
  2267                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2268  011DA4  8CD2               	bsf	210,6,c	;volatile
  2269                           
  2270                           ; BSR set to: 60
  2271                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2272  011DA6  0102               	movlb	2	; () banked
  2273  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2274                           
  2275                           ; BSR set to: 2
  2276                           ;main.c: 190:  WaitMs(300);
  2277  011DAA  0E2C               	movlw	44
  2278  011DAC  6EE6               	movwf	postinc1,c
  2279  011DAE  0E01               	movlw	1
  2280  011DB0  6EE6               	movwf	postinc1,c
  2281  011DB2  ECC0  F0C6         	call	_WaitMs	;wreg free
  2282                           
  2283                           ;main.c: 191:  if (PORTBbits.RB0) {
  2284  011DB6  A0CB               	btfss	203,0,c	;volatile
  2285  011DB8  D004               	goto	l11102
  2286                           
  2287                           ;main.c: 192:   mode = UI_STATE_HOST;
  2288                           ;stkvar	_mode @ sp[(-5)+4]
  2289  011DBA  0EFF               	movlw	-1
  2290  011DBC  6AE3               	clrf	plusw1,c
  2291  011DBE  2AE3               	incf	plusw1,f,c
  2292                           
  2293                           ;main.c: 193:  } else {
  2294  011DC0  D004               	goto	l11104
  2295  011DC2                     l11102:
  2296                           
  2297                           ;main.c: 194:   mode = UI_STATE_LOG;
  2298                           ;stkvar	_mode @ sp[(-5)+4]
  2299  011DC2  0EFF               	movlw	-1
  2300  011DC4  6AE3               	clrf	plusw1,c
  2301  011DC6  80E3               	bsf	plusw1,0,c
  2302  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2303  011DCA                     l11104:
  2304                           
  2305                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2306                           ;stkvar	_mode @ sp[(-5)+4]
  2307  011DCA  0EFF               	movlw	-1
  2308  011DCC  04E3               	decf	plusw1,w,c
  2309  011DCE  A4D8               	btfss	status,2,c
  2310  011DD0  D007               	goto	l1338
  2311                           
  2312                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2313  011DD2  80BD               	bsf	189,0,c	;volatile
  2314                           
  2315                           ;main.c: 199:   V.mode_pwm = 70;
  2316  011DD4  0E00               	movlw	0
  2317  011DD6  0102               	movlb	2	; () banked
  2318  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2319  011DDA  0E46               	movlw	70
  2320  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2321                           
  2322                           ;main.c: 200:  } else {
  2323  011DDE  D004               	goto	l11108
  2324  011DE0                     l1338:
  2325  011DE0  90BD               	bcf	189,0,c	;volatile
  2326                           
  2327                           ;main.c: 202:   V.mode_pwm = 0;
  2328  011DE2  0102               	movlb	2	; () banked
  2329  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2330  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2331  011DE8                     l11108:
  2332                           
  2333                           ; BSR set to: 2
  2334                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2335  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2336  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2337  011DF4  ECAD  F0CA         	call	_mode_lamp_dim	;wreg free
  2338  011DF8  D0D4               	goto	l11156
  2339  011DFA                     l11110:
  2340                           
  2341                           ; BSR set to: 2
  2342                           ;main.c: 215:    init_display();
  2343  011DFA  ECD0  F0BB         	call	_init_display	;wreg free
  2344                           
  2345                           ; BSR set to: 61
  2346                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2347  011DFE  0E0C               	movlw	12
  2348  011E00  6EE6               	movwf	postinc1,c
  2349  011E02  EC0A  F0CB         	call	_eaDogM_WriteCommand	;wreg free
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;main.c: 218:    V.ui_state = mode;
  2353                           ;stkvar	_mode @ sp[(-5)+4]
  2354  011E06  0EFF               	movlw	-1
  2355  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;main.c: 219:    srand(1957);
  2359  011E0E  0EA5               	movlw	165
  2360  011E10  6EE6               	movwf	postinc1,c
  2361  011E12  0E07               	movlw	7
  2362  011E14  6EE6               	movwf	postinc1,c
  2363  011E16  EC10  F0C7         	call	_srand	;wreg free
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;main.c: 220:    set_vterm(0);
  2367  011E1A  0E00               	movlw	0
  2368  011E1C  6EE6               	movwf	postinc1,c
  2369  011E1E  EC48  F0CA         	call	_set_vterm	;wreg free
  2370                           
  2371                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2372  011E22  0E60               	movlw	low STR_1
  2373  011E24  6EE6               	movwf	postinc1,c
  2374  011E26  0EFF               	movlw	high STR_1
  2375  011E28  6EE6               	movwf	postinc1,c
  2376  011E2A  0E00               	movlw	0
  2377  011E2C  6EE6               	movwf	postinc1,c
  2378  011E2E  0E00               	movlw	0
  2379  011E30  6EE6               	movwf	postinc1,c
  2380  011E32  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2381  011E36  0060  F097  FFE6   	movff	btemp,postinc1
  2382  011E3C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2383  011E42  0E04               	movlw	4
  2384  011E44  6EE6               	movwf	postinc1,c
  2385  011E46  EC4C  F0BA         	call	_sprintf	;wreg free
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.998");
  2389  011E4A  0EE0               	movlw	low STR_3
  2390  011E4C  6EE6               	movwf	postinc1,c
  2391  011E4E  0EFF               	movlw	high STR_3
  2392  011E50  6EE6               	movwf	postinc1,c
  2393  011E52  0EB2               	movlw	low STR_2
  2394  011E54  6EE6               	movwf	postinc1,c
  2395  011E56  0EFF               	movlw	high STR_2
  2396  011E58  6EE6               	movwf	postinc1,c
  2397  011E5A  0E00               	movlw	0
  2398  011E5C  6EE6               	movwf	postinc1,c
  2399  011E5E  0E01               	movlw	1
  2400  011E60  6EE6               	movwf	postinc1,c
  2401  011E62  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2402  011E66  0060  F097  FFE6   	movff	btemp,postinc1
  2403  011E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2404  011E72  0E06               	movlw	6
  2405  011E74  6EE6               	movwf	postinc1,c
  2406  011E76  EC4C  F0BA         	call	_sprintf	;wreg free
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2410  011E7A  0E4F               	movlw	low STR_4
  2411  011E7C  6EE6               	movwf	postinc1,c
  2412  011E7E  0EFF               	movlw	high STR_4
  2413  011E80  6EE6               	movwf	postinc1,c
  2414  011E82  0E00               	movlw	0
  2415  011E84  6EE6               	movwf	postinc1,c
  2416  011E86  0E02               	movlw	2
  2417  011E88  6EE6               	movwf	postinc1,c
  2418  011E8A  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2419  011E8E  0060  F097  FFE6   	movff	btemp,postinc1
  2420  011E94  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2421  011E9A  0E04               	movlw	4
  2422  011E9C  6EE6               	movwf	postinc1,c
  2423  011E9E  EC4C  F0BA         	call	_sprintf	;wreg free
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2427  011EA2  0E71               	movlw	low STR_5
  2428  011EA4  6EE6               	movwf	postinc1,c
  2429  011EA6  0EFF               	movlw	high STR_5
  2430  011EA8  6EE6               	movwf	postinc1,c
  2431  011EAA  0E02               	movlw	2
  2432  011EAC  6EE6               	movwf	postinc1,c
  2433  011EAE  0E00               	movlw	0
  2434  011EB0  6EE6               	movwf	postinc1,c
  2435  011EB2  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2436  011EB6  0060  F097  FFE6   	movff	btemp,postinc1
  2437  011EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2438  011EC2  0E04               	movlw	4
  2439  011EC4  6EE6               	movwf	postinc1,c
  2440  011EC6  EC4C  F0BA         	call	_sprintf	;wreg free
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.998");
  2444  011ECA  0EE0               	movlw	low STR_3
  2445  011ECC  6EE6               	movwf	postinc1,c
  2446  011ECE  0EFF               	movlw	high STR_3
  2447  011ED0  6EE6               	movwf	postinc1,c
  2448  011ED2  0EB2               	movlw	low STR_2
  2449  011ED4  6EE6               	movwf	postinc1,c
  2450  011ED6  0EFF               	movlw	high STR_2
  2451  011ED8  6EE6               	movwf	postinc1,c
  2452  011EDA  0E02               	movlw	2
  2453  011EDC  6EE6               	movwf	postinc1,c
  2454  011EDE  0E01               	movlw	1
  2455  011EE0  6EE6               	movwf	postinc1,c
  2456  011EE2  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2457  011EE6  0060  F097  FFE6   	movff	btemp,postinc1
  2458  011EEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2459  011EF2  0E06               	movlw	6
  2460  011EF4  6EE6               	movwf	postinc1,c
  2461  011EF6  EC4C  F0BA         	call	_sprintf	;wreg free
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2465  011EFA  0E3E               	movlw	low STR_8
  2466  011EFC  6EE6               	movwf	postinc1,c
  2467  011EFE  0EFF               	movlw	high STR_8
  2468  011F00  6EE6               	movwf	postinc1,c
  2469  011F02  0E02               	movlw	2
  2470  011F04  6EE6               	movwf	postinc1,c
  2471  011F06  0E02               	movlw	2
  2472  011F08  6EE6               	movwf	postinc1,c
  2473  011F0A  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2474  011F0E  0060  F097  FFE6   	movff	btemp,postinc1
  2475  011F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2476  011F1A  0E04               	movlw	4
  2477  011F1C  6EE6               	movwf	postinc1,c
  2478  011F1E  EC4C  F0BA         	call	_sprintf	;wreg free
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;main.c: 227:    update_lcd(0);
  2482  011F22  0E00               	movlw	0
  2483  011F24  6EE6               	movwf	postinc1,c
  2484  011F26  ECC4  F0B9         	call	_update_lcd	;wreg free
  2485                           
  2486                           ;main.c: 228:    WaitMs(3000);
  2487  011F2A  0EB8               	movlw	184
  2488  011F2C  6EE6               	movwf	postinc1,c
  2489  011F2E  0E0B               	movlw	11
  2490  011F30  6EE6               	movwf	postinc1,c
  2491  011F32  ECC0  F0C6         	call	_WaitMs	;wreg free
  2492                           
  2493                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2494  011F36  0EFA               	movlw	250
  2495  011F38  6EE6               	movwf	postinc1,c
  2496  011F3A  0E00               	movlw	0
  2497  011F3C  6EE6               	movwf	postinc1,c
  2498  011F3E  0E0A               	movlw	10
  2499  011F40  6EE6               	movwf	postinc1,c
  2500  011F42  ECEA  F0C5         	call	_StartTimer	;wreg free
  2501                           
  2502                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2503  011F46  0EC8               	movlw	200
  2504  011F48  6EE6               	movwf	postinc1,c
  2505  011F4A  0E00               	movlw	0
  2506  011F4C  6EE6               	movwf	postinc1,c
  2507  011F4E  0E01               	movlw	1
  2508  011F50  6EE6               	movwf	postinc1,c
  2509  011F52  ECEA  F0C5         	call	_StartTimer	;wreg free
  2510                           
  2511                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2512  011F56  0EB8               	movlw	184
  2513  011F58  6EE6               	movwf	postinc1,c
  2514  011F5A  0E0B               	movlw	11
  2515  011F5C  6EE6               	movwf	postinc1,c
  2516  011F5E  0E07               	movlw	7
  2517  011F60  6EE6               	movwf	postinc1,c
  2518  011F62  ECEA  F0C5         	call	_StartTimer	;wreg free
  2519                           
  2520                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2521  011F66  0EDC               	movlw	220
  2522  011F68  6EE6               	movwf	postinc1,c
  2523  011F6A  0E05               	movlw	5
  2524  011F6C  6EE6               	movwf	postinc1,c
  2525  011F6E  0E0B               	movlw	11
  2526  011F70  6EE6               	movwf	postinc1,c
  2527  011F72  ECEA  F0C5         	call	_StartTimer	;wreg free
  2528                           
  2529                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2530  011F76  0EB8               	movlw	184
  2531  011F78  6EE6               	movwf	postinc1,c
  2532  011F7A  0E0B               	movlw	11
  2533  011F7C  6EE6               	movwf	postinc1,c
  2534  011F7E  0E09               	movlw	9
  2535  011F80  6EE6               	movwf	postinc1,c
  2536  011F82  ECEA  F0C5         	call	_StartTimer	;wreg free
  2537                           
  2538                           ;main.c: 235:    start_adc_scan();
  2539  011F86  ECDD  F0C2         	call	_start_adc_scan	;wreg free
  2540                           
  2541                           ;main.c: 236:    start_switch_handler();
  2542  011F8A  EC1A  F0CA         	call	_start_switch_handler	;wreg free
  2543                           
  2544                           ; BSR set to: 57
  2545                           ;main.c: 237:    static_soc();
  2546  011F8E  ECF6  F0C6         	call	_static_soc	;wreg free
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;main.c: 238:    init_bsoc();
  2550  011F92  ECF9  F0CA         	call	_init_bsoc	;wreg free
  2551                           
  2552                           ;main.c: 240:    break;
  2553  011F96  D01C               	goto	l11158
  2554  011F98                     l1346:
  2555                           
  2556                           ; BSR set to: 2
  2557                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2558  011F98  0100               	movlb	0	; () banked
  2559  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2560                           
  2561                           ;main.c: 247:    break;
  2562  011F9C  D019               	goto	l11158
  2563  011F9E                     l1348:
  2564                           
  2565                           ; BSR set to: 2
  2566                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2567  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2568                           
  2569                           ;main.c: 251:    break;
  2570  011FA0  D017               	goto	l11158
  2571  011FA2                     l11156:
  2572  011FA2  0102               	movlb	2	; () banked
  2573  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2574  011FA6  6E2F               	movwf	(btemp+10)^0,c
  2575  011FA8  6A30               	clrf	(btemp+11)^0,c
  2576                           
  2577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2578                           ; Switch size 1, requested type "simple"
  2579                           ; Number of cases is 1, Range of values is 0 to 0
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte            4     3 (average)
  2583                           ;	Chosen strategy is simple_byte
  2584  011FAA  5030               	movf	(btemp+11)^0,w,c
  2585  011FAC  0A00               	xorlw	0	; case 0
  2586  011FAE  A4D8               	btfss	status,2,c
  2587  011FB0  D7F6               	goto	l1348
  2588                           
  2589                           ; BSR set to: 2
  2590                           ; Switch size 1, requested type "simple"
  2591                           ; Number of cases is 5, Range of values is 0 to 5
  2592                           ; switch strategies available:
  2593                           ; Name         Instructions Cycles
  2594                           ; simple_byte           16     9 (average)
  2595                           ;	Chosen strategy is simple_byte
  2596  011FB2  502F               	movf	(btemp+10)^0,w,c
  2597  011FB4  0A00               	xorlw	0	; case 0
  2598  011FB6  B4D8               	btfsc	status,2,c
  2599  011FB8  D720               	goto	l11110
  2600  011FBA  0A01               	xorlw	1	; case 1
  2601  011FBC  B4D8               	btfsc	status,2,c
  2602  011FBE  D008               	goto	l11158
  2603  011FC0  0A02               	xorlw	2	; case 3
  2604  011FC2  B4D8               	btfsc	status,2,c
  2605  011FC4  D005               	goto	l11158
  2606  011FC6  0A07               	xorlw	7	; case 4
  2607  011FC8  B4D8               	btfsc	status,2,c
  2608  011FCA  D7E6               	goto	l1346
  2609  011FCC  0A01               	xorlw	1	; case 5
  2610  011FCE  D7E7               	goto	l1348
  2611  011FD0                     l11158:
  2612                           
  2613                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2614  011FD0  0E01               	movlw	1
  2615  011FD2  6EE6               	movwf	postinc1,c
  2616  011FD4  EC4B  F0C8         	call	_TimerDone	;wreg free
  2617  011FD8  5025               	movf	btemp^0,w,c
  2618  011FDA  B4D8               	btfsc	status,2,c
  2619  011FDC  D013               	goto	l11170
  2620  011FDE  EC49  F0CB         	call	_check_adc_scan	;wreg free
  2621  011FE2  5025               	movf	btemp^0,w,c
  2622  011FE4  B4D8               	btfsc	status,2,c
  2623  011FE6  D00E               	goto	l11170
  2624                           
  2625                           ;main.c: 258:    convert_adc_data();
  2626  011FE8  ECD7  F0BD         	call	_convert_adc_data	;wreg free
  2627                           
  2628                           ;main.c: 262:    clear_adc_scan();
  2629  011FEC  EC51  F0CB         	call	_clear_adc_scan	;wreg free
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;main.c: 263:    start_adc_scan();
  2633  011FF0  ECDD  F0C2         	call	_start_adc_scan	;wreg free
  2634                           
  2635                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2636  011FF4  0EC8               	movlw	200
  2637  011FF6  6EE6               	movwf	postinc1,c
  2638  011FF8  0E00               	movlw	0
  2639  011FFA  6EE6               	movwf	postinc1,c
  2640  011FFC  0E01               	movlw	1
  2641  011FFE  6EE6               	movwf	postinc1,c
  2642  012000  ECEA  F0C5         	call	_StartTimer	;wreg free
  2643  012004                     l11170:
  2644                           
  2645                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2646                           
  2647                           ;main.c: 267:   if (V.ticks) {
  2648  012004  0E0A               	movlw	10
  2649  012006  6EE6               	movwf	postinc1,c
  2650  012008  EC4B  F0C8         	call	_TimerDone	;wreg free
  2651  01200C  5025               	movf	btemp^0,w,c
  2652  01200E  B4D8               	btfsc	status,2,c
  2653  012010  D27F               	goto	l11212
  2654                           
  2655                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2656  012012  0E09               	movlw	9
  2657  012014  6EE6               	movwf	postinc1,c
  2658  012016  EC4B  F0C8         	call	_TimerDone	;wreg free
  2659  01201A  5025               	movf	btemp^0,w,c
  2660  01201C  B4D8               	btfsc	status,2,c
  2661  01201E  D004               	goto	l11178
  2662                           
  2663                           ;main.c: 273:     set_display_info(DIS_STR);
  2664  012020  0E00               	movlw	0
  2665  012022  6EE6               	movwf	postinc1,c
  2666  012024  EC57  F0CA         	call	_set_display_info	;wreg free
  2667  012028                     l11178:
  2668                           
  2669                           ;main.c: 275:    calc_model_data();
  2670  012028  ECE0  F0A9         	call	_calc_model_data	;wreg free
  2671                           
  2672                           ; BSR set to: 1
  2673                           ;main.c: 282:     hid_display(&H);
  2674                           
  2675                           ;main.c: 277:    if (0) {
  2676  01202C  0EF2               	movlw	_H& (0+255)
  2677  01202E  6EE6               	movwf	postinc1,c
  2678  012030  ECD1  F0BA         	call	_hid_display	;wreg free
  2679                           
  2680                           ;main.c: 283:     switch (H.hid_display) {
  2681  012034  D248               	goto	l11204
  2682  012036                     l1356:
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;main.c: 285:      V.calib = 0;
  2686  012036  0102               	movlb	2	; () banked
  2687  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2688                           
  2689                           ; BSR set to: 2
  2690                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2691  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2692  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2693  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2694  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2695  012052  0EB9               	movlw	low STR_12
  2696  012054  6EE6               	movwf	postinc1,c
  2697  012056  0EFE               	movlw	high STR_12
  2698  012058  6EE6               	movwf	postinc1,c
  2699  01205A  0E00               	movlw	0
  2700  01205C  6EE6               	movwf	postinc1,c
  2701  01205E  0E00               	movlw	0
  2702  012060  6EE6               	movwf	postinc1,c
  2703  012062  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2704  012066  0060  F097  FFE6   	movff	btemp,postinc1
  2705  01206C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2706  012072  0E08               	movlw	8
  2707  012074  6EE6               	movwf	postinc1,c
  2708  012076  EC4C  F0BA         	call	_sprintf	;wreg free
  2709                           
  2710                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2711  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2712  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2713  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2714  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2715  012092  0EDF               	movlw	low STR_13
  2716  012094  6EE6               	movwf	postinc1,c
  2717  012096  0EFE               	movlw	high STR_13
  2718  012098  6EE6               	movwf	postinc1,c
  2719  01209A  0E00               	movlw	0
  2720  01209C  6EE6               	movwf	postinc1,c
  2721  01209E  0E01               	movlw	1
  2722  0120A0  6EE6               	movwf	postinc1,c
  2723  0120A2  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2724  0120A6  0060  F097  FFE6   	movff	btemp,postinc1
  2725  0120AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2726  0120B2  0E08               	movlw	8
  2727  0120B4  6EE6               	movwf	postinc1,c
  2728  0120B6  EC4C  F0BA         	call	_sprintf	;wreg free
  2729                           
  2730                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2731  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2732  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2733  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2734  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2735  0120D2  0ECC               	movlw	low STR_14
  2736  0120D4  6EE6               	movwf	postinc1,c
  2737  0120D6  0EFE               	movlw	high STR_14
  2738  0120D8  6EE6               	movwf	postinc1,c
  2739  0120DA  0E00               	movlw	0
  2740  0120DC  6EE6               	movwf	postinc1,c
  2741  0120DE  0E02               	movlw	2
  2742  0120E0  6EE6               	movwf	postinc1,c
  2743  0120E2  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2744  0120E6  0060  F097  FFE6   	movff	btemp,postinc1
  2745  0120EC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2746  0120F2  0E08               	movlw	8
  2747  0120F4  6EE6               	movwf	postinc1,c
  2748  0120F6  EC4C  F0BA         	call	_sprintf	;wreg free
  2749                           
  2750                           ;main.c: 289:      break;
  2751  0120FA  D1FA               	goto	l11206
  2752  0120FC                     l1358:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;main.c: 291:      V.calib = 0;
  2756  0120FC  0102               	movlb	2	; () banked
  2757  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2758                           
  2759                           ; BSR set to: 2
  2760                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2761  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2762  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2763  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2764  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2765  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2766  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2767  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2768  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2769  012130  0E2B               	movlw	low STR_15
  2770  012132  6EE6               	movwf	postinc1,c
  2771  012134  0EFF               	movlw	high STR_15
  2772  012136  6EE6               	movwf	postinc1,c
  2773  012138  0E00               	movlw	0
  2774  01213A  6EE6               	movwf	postinc1,c
  2775  01213C  0E00               	movlw	0
  2776  01213E  6EE6               	movwf	postinc1,c
  2777  012140  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2778  012144  0060  F097  FFE6   	movff	btemp,postinc1
  2779  01214A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2780  012150  0E0C               	movlw	12
  2781  012152  6EE6               	movwf	postinc1,c
  2782  012154  EC4C  F0BA         	call	_sprintf	;wreg free
  2783                           
  2784                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2785  012158  0060  F403  FFE6   	movff	_C,postinc1
  2786  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2787  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2788  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2789  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2790  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2791  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2792  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2793  012188  0E05               	movlw	low STR_16
  2794  01218A  6EE6               	movwf	postinc1,c
  2795  01218C  0EFF               	movlw	high STR_16
  2796  01218E  6EE6               	movwf	postinc1,c
  2797  012190  0E00               	movlw	0
  2798  012192  6EE6               	movwf	postinc1,c
  2799  012194  0E01               	movlw	1
  2800  012196  6EE6               	movwf	postinc1,c
  2801  012198  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2802  01219C  0060  F097  FFE6   	movff	btemp,postinc1
  2803  0121A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2804  0121A8  0E0C               	movlw	12
  2805  0121AA  6EE6               	movwf	postinc1,c
  2806  0121AC  EC4C  F0BA         	call	_sprintf	;wreg free
  2807                           
  2808                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2809  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2810  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2811  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2812  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2813  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2814  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2815  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2816  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2817  0121E0  0E18               	movlw	low STR_17
  2818  0121E2  6EE6               	movwf	postinc1,c
  2819  0121E4  0EFF               	movlw	high STR_17
  2820  0121E6  6EE6               	movwf	postinc1,c
  2821  0121E8  0E00               	movlw	0
  2822  0121EA  6EE6               	movwf	postinc1,c
  2823  0121EC  0E02               	movlw	2
  2824  0121EE  6EE6               	movwf	postinc1,c
  2825  0121F0  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2826  0121F4  0060  F097  FFE6   	movff	btemp,postinc1
  2827  0121FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2828  012200  0E0C               	movlw	12
  2829  012202  6EE6               	movwf	postinc1,c
  2830  012204  EC4C  F0BA         	call	_sprintf	;wreg free
  2831                           
  2832                           ;main.c: 295:      break;
  2833  012208  D173               	goto	l11206
  2834  01220A                     l1359:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;main.c: 297:      V.calib = 0;
  2838  01220A  0102               	movlb	2	; () banked
  2839  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2840                           
  2841                           ; BSR set to: 2
  2842                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  2843  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2844  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2845  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2846  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2847  012226  0EF2               	movlw	low STR_18
  2848  012228  6EE6               	movwf	postinc1,c
  2849  01222A  0EFE               	movlw	high STR_18
  2850  01222C  6EE6               	movwf	postinc1,c
  2851  01222E  0E00               	movlw	0
  2852  012230  6EE6               	movwf	postinc1,c
  2853  012232  0E00               	movlw	0
  2854  012234  6EE6               	movwf	postinc1,c
  2855  012236  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2856  01223A  0060  F097  FFE6   	movff	btemp,postinc1
  2857  012240  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2858  012246  0E08               	movlw	8
  2859  012248  6EE6               	movwf	postinc1,c
  2860  01224A  EC4C  F0BA         	call	_sprintf	;wreg free
  2861                           
  2862                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  2863  01224E  0060  F623  FFE6   	movff	_C+136,postinc1
  2864  012254  0060  F627  FFE6   	movff	_C+137,postinc1
  2865  01225A  0060  F62B  FFE6   	movff	_C+138,postinc1
  2866  012260  0060  F62F  FFE6   	movff	_C+139,postinc1
  2867  012266  0060  F613  FFE6   	movff	_C+132,postinc1
  2868  01226C  0060  F617  FFE6   	movff	_C+133,postinc1
  2869  012272  0060  F61B  FFE6   	movff	_C+134,postinc1
  2870  012278  0060  F61F  FFE6   	movff	_C+135,postinc1
  2871  01227E  0E59               	movlw	low STR_19
  2872  012280  6EE6               	movwf	postinc1,c
  2873  012282  0EFE               	movlw	high STR_19
  2874  012284  6EE6               	movwf	postinc1,c
  2875  012286  0E00               	movlw	0
  2876  012288  6EE6               	movwf	postinc1,c
  2877  01228A  0E01               	movlw	1
  2878  01228C  6EE6               	movwf	postinc1,c
  2879  01228E  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2880  012292  0060  F097  FFE6   	movff	btemp,postinc1
  2881  012298  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2882  01229E  0E0C               	movlw	12
  2883  0122A0  6EE6               	movwf	postinc1,c
  2884  0122A2  EC4C  F0BA         	call	_sprintf	;wreg free
  2885                           
  2886                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2887  0122A6  0060  F683  FFE6   	movff	_C+160,postinc1
  2888  0122AC  0060  F687  FFE6   	movff	_C+161,postinc1
  2889  0122B2  0060  F68B  FFE6   	movff	_C+162,postinc1
  2890  0122B8  0060  F68F  FFE6   	movff	_C+163,postinc1
  2891  0122BE  0EA6               	movlw	low STR_20
  2892  0122C0  6EE6               	movwf	postinc1,c
  2893  0122C2  0EFE               	movlw	high STR_20
  2894  0122C4  6EE6               	movwf	postinc1,c
  2895  0122C6  0E00               	movlw	0
  2896  0122C8  6EE6               	movwf	postinc1,c
  2897  0122CA  0E02               	movlw	2
  2898  0122CC  6EE6               	movwf	postinc1,c
  2899  0122CE  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  2900  0122D2  0060  F097  FFE6   	movff	btemp,postinc1
  2901  0122D8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2902  0122DE  0E08               	movlw	8
  2903  0122E0  6EE6               	movwf	postinc1,c
  2904  0122E2  EC4C  F0BA         	call	_sprintf	;wreg free
  2905                           
  2906                           ;main.c: 301:      break;
  2907  0122E6  D104               	goto	l11206
  2908  0122E8                     l11190:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;main.c: 303:      if (!V.calib) {
  2912  0122E8  0102               	movlb	2	; () banked
  2913  0122EA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2914  0122EC  A4D8               	btfss	status,2,c
  2915  0122EE  D02D               	goto	l11194
  2916                           
  2917                           ; BSR set to: 2
  2918                           ;main.c: 304:       lp_filter(0.0, i, -1);
  2919  0122F0  0EFF               	movlw	255
  2920  0122F2  6EE6               	movwf	postinc1,c
  2921                           
  2922                           ;stkvar	_i @ sp[(-6)+2]
  2923  0122F4  0EFC               	movlw	-4
  2924  0122F6  50E3               	movf	plusw1,w,c
  2925  0122F8  6EE6               	movwf	postinc1,c
  2926  0122FA  0E00               	movlw	0
  2927  0122FC  6EE6               	movwf	postinc1,c
  2928  0122FE  0E00               	movlw	0
  2929  012300  6EE6               	movwf	postinc1,c
  2930  012302  0E00               	movlw	0
  2931  012304  6EE6               	movwf	postinc1,c
  2932  012306  0E00               	movlw	0
  2933  012308  6EE6               	movwf	postinc1,c
  2934  01230A  EC35  F0B3         	call	_lp_filter	;wreg free
  2935                           
  2936                           ;main.c: 305:       lp_filter(0.0, j, -1);
  2937  01230E  0EFF               	movlw	255
  2938  012310  6EE6               	movwf	postinc1,c
  2939                           
  2940                           ;stkvar	_j @ sp[(-6)+1]
  2941  012312  0EFB               	movlw	-5
  2942  012314  50E3               	movf	plusw1,w,c
  2943  012316  6EE6               	movwf	postinc1,c
  2944  012318  0E00               	movlw	0
  2945  01231A  6EE6               	movwf	postinc1,c
  2946  01231C  0E00               	movlw	0
  2947  01231E  6EE6               	movwf	postinc1,c
  2948  012320  0E00               	movlw	0
  2949  012322  6EE6               	movwf	postinc1,c
  2950  012324  0E00               	movlw	0
  2951  012326  6EE6               	movwf	postinc1,c
  2952  012328  EC35  F0B3         	call	_lp_filter	;wreg free
  2953                           
  2954                           ;main.c: 306:       lp_filter(0.0, k, -1);
  2955  01232C  0EFF               	movlw	255
  2956  01232E  6EE6               	movwf	postinc1,c
  2957                           
  2958                           ;stkvar	_k @ sp[(-6)+0]
  2959  012330  0EFA               	movlw	-6
  2960  012332  50E3               	movf	plusw1,w,c
  2961  012334  6EE6               	movwf	postinc1,c
  2962  012336  0E00               	movlw	0
  2963  012338  6EE6               	movwf	postinc1,c
  2964  01233A  0E00               	movlw	0
  2965  01233C  6EE6               	movwf	postinc1,c
  2966  01233E  0E00               	movlw	0
  2967  012340  6EE6               	movwf	postinc1,c
  2968  012342  0E00               	movlw	0
  2969  012344  6EE6               	movwf	postinc1,c
  2970  012346  EC35  F0B3         	call	_lp_filter	;wreg free
  2971  01234A                     l11194:
  2972                           
  2973                           ;main.c: 308:      V.calib = 1;
  2974  01234A  0E01               	movlw	1
  2975  01234C  0102               	movlb	2	; () banked
  2976  01234E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2977                           
  2978                           ; BSR set to: 2
  2979                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2980  012350  0E02               	movlw	2
  2981  012352  6EE6               	movwf	postinc1,c
  2982  012354  EC37  F0C8         	call	_get_switch	;wreg free
  2983  012358  5025               	movf	btemp^0,w,c
  2984  01235A  6EE6               	movwf	postinc1,c
  2985  01235C  0E00               	movlw	0
  2986  01235E  6EE6               	movwf	postinc1,c
  2987                           
  2988                           ;stkvar	_i @ sp[(-7)+2]
  2989  012360  0EFB               	movlw	-5
  2990  012362  50E3               	movf	plusw1,w,c
  2991  012364  0D04               	mullw	4
  2992  012366  0E00               	movlw	low _C
  2993  012368  24F3               	addwf	243,w,c
  2994  01236A  6ED9               	movwf	fsr2l,c
  2995  01236C  0E01               	movlw	high _C
  2996  01236E  20F4               	addwfc	prodh,w,c
  2997  012370  6EDA               	movwf	fsr2h,c
  2998  012372  006F FF7B FFE6     	movff	postinc2,postinc1
  2999  012378  006F FF7B FFE6     	movff	postinc2,postinc1
  3000  01237E  006F FF7B FFE6     	movff	postinc2,postinc1
  3001  012384  006F FF7B FFE6     	movff	postinc2,postinc1
  3002                           
  3003                           ;stkvar	_i @ sp[(-11)+2]
  3004  01238A  0EF7               	movlw	-9
  3005  01238C  50E3               	movf	plusw1,w,c
  3006  01238E  6EE6               	movwf	postinc1,c
  3007  012390  EC39  F0CA         	call	_get_raw_result	;wreg free
  3008  012394  0060  F097  FFE6   	movff	btemp,postinc1
  3009  01239A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3010  0123A0  0E93               	movlw	low STR_9
  3011  0123A2  6EE6               	movwf	postinc1,c
  3012  0123A4  0EFF               	movlw	high STR_9
  3013  0123A6  6EE6               	movwf	postinc1,c
  3014  0123A8  0E00               	movlw	0
  3015  0123AA  6EE6               	movwf	postinc1,c
  3016  0123AC  0E00               	movlw	0
  3017  0123AE  6EE6               	movwf	postinc1,c
  3018  0123B0  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  3019  0123B4  0060  F097  FFE6   	movff	btemp,postinc1
  3020  0123BA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3021  0123C0  0E0C               	movlw	12
  3022  0123C2  6EE6               	movwf	postinc1,c
  3023  0123C4  EC4C  F0BA         	call	_sprintf	;wreg free
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3027  0123C8  0E03               	movlw	3
  3028  0123CA  6EE6               	movwf	postinc1,c
  3029  0123CC  EC37  F0C8         	call	_get_switch	;wreg free
  3030  0123D0  5025               	movf	btemp^0,w,c
  3031  0123D2  6EE6               	movwf	postinc1,c
  3032  0123D4  0E00               	movlw	0
  3033  0123D6  6EE6               	movwf	postinc1,c
  3034                           
  3035                           ;stkvar	_j @ sp[(-7)+1]
  3036  0123D8  0EFA               	movlw	-6
  3037  0123DA  50E3               	movf	plusw1,w,c
  3038  0123DC  0D04               	mullw	4
  3039  0123DE  0E00               	movlw	low _C
  3040  0123E0  24F3               	addwf	243,w,c
  3041  0123E2  6ED9               	movwf	fsr2l,c
  3042  0123E4  0E01               	movlw	high _C
  3043  0123E6  20F4               	addwfc	prodh,w,c
  3044  0123E8  6EDA               	movwf	fsr2h,c
  3045  0123EA  006F FF7B FFE6     	movff	postinc2,postinc1
  3046  0123F0  006F FF7B FFE6     	movff	postinc2,postinc1
  3047  0123F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3048  0123FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3049                           
  3050                           ;stkvar	_j @ sp[(-11)+1]
  3051  012402  0EF6               	movlw	-10
  3052  012404  50E3               	movf	plusw1,w,c
  3053  012406  6EE6               	movwf	postinc1,c
  3054  012408  EC39  F0CA         	call	_get_raw_result	;wreg free
  3055  01240C  0060  F097  FFE6   	movff	btemp,postinc1
  3056  012412  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3057  012418  0E93               	movlw	low STR_9
  3058  01241A  6EE6               	movwf	postinc1,c
  3059  01241C  0EFF               	movlw	high STR_9
  3060  01241E  6EE6               	movwf	postinc1,c
  3061  012420  0E00               	movlw	0
  3062  012422  6EE6               	movwf	postinc1,c
  3063  012424  0E01               	movlw	1
  3064  012426  6EE6               	movwf	postinc1,c
  3065  012428  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  3066  01242C  0060  F097  FFE6   	movff	btemp,postinc1
  3067  012432  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3068  012438  0E0C               	movlw	12
  3069  01243A  6EE6               	movwf	postinc1,c
  3070  01243C  EC4C  F0BA         	call	_sprintf	;wreg free
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3074                           ;stkvar	_inp_index @ sp[(-5)+3]
  3075  012440  0EFE               	movlw	-2
  3076  012442  50E3               	movf	plusw1,w,c
  3077  012444  6E2F               	movwf	(btemp+10)^0,c
  3078  012446  6A30               	clrf	(btemp+11)^0,c
  3079  012448  0E01               	movlw	1
  3080  01244A  262F               	addwf	(btemp+10)^0,f,c
  3081  01244C  0E00               	movlw	0
  3082  01244E  2230               	addwfc	(btemp+11)^0,f,c
  3083  012450  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  3084  012456  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  3085                           
  3086                           ;stkvar	_k @ sp[(-7)+0]
  3087  01245C  0EF9               	movlw	-7
  3088  01245E  50E3               	movf	plusw1,w,c
  3089  012460  0D04               	mullw	4
  3090  012462  0E00               	movlw	low _C
  3091  012464  24F3               	addwf	243,w,c
  3092  012466  6ED9               	movwf	fsr2l,c
  3093  012468  0E01               	movlw	high _C
  3094  01246A  20F4               	addwfc	prodh,w,c
  3095  01246C  6EDA               	movwf	fsr2h,c
  3096  01246E  006F FF7B FFE6     	movff	postinc2,postinc1
  3097  012474  006F FF7B FFE6     	movff	postinc2,postinc1
  3098  01247A  006F FF7B FFE6     	movff	postinc2,postinc1
  3099  012480  006F FF7B FFE6     	movff	postinc2,postinc1
  3100                           
  3101                           ;stkvar	_k @ sp[(-11)+0]
  3102  012486  0EF5               	movlw	-11
  3103  012488  50E3               	movf	plusw1,w,c
  3104  01248A  6EE6               	movwf	postinc1,c
  3105  01248C  EC39  F0CA         	call	_get_raw_result	;wreg free
  3106  012490  0060  F097  FFE6   	movff	btemp,postinc1
  3107  012496  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3108  01249C  0E82               	movlw	low STR_11
  3109  01249E  6EE6               	movwf	postinc1,c
  3110  0124A0  0EFF               	movlw	high STR_11
  3111  0124A2  6EE6               	movwf	postinc1,c
  3112  0124A4  0E00               	movlw	0
  3113  0124A6  6EE6               	movwf	postinc1,c
  3114  0124A8  0E02               	movlw	2
  3115  0124AA  6EE6               	movwf	postinc1,c
  3116  0124AC  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  3117  0124B0  0060  F097  FFE6   	movff	btemp,postinc1
  3118  0124B6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3119  0124BC  0E0C               	movlw	12
  3120  0124BE  6EE6               	movwf	postinc1,c
  3121  0124C0  EC4C  F0BA         	call	_sprintf	;wreg free
  3122                           
  3123                           ;main.c: 312:      break;
  3124  0124C4  D015               	goto	l11206
  3125  0124C6                     l11204:
  3126  0124C6  0100               	movlb	0	; () banked
  3127  0124C8  51F2               	movf	_H& (0+255),w,b
  3128  0124CA  6E2F               	movwf	(btemp+10)^0,c
  3129  0124CC  6A30               	clrf	(btemp+11)^0,c
  3130                           
  3131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3132                           ; Switch size 1, requested type "simple"
  3133                           ; Number of cases is 1, Range of values is 0 to 0
  3134                           ; switch strategies available:
  3135                           ; Name         Instructions Cycles
  3136                           ; simple_byte            4     3 (average)
  3137                           ;	Chosen strategy is simple_byte
  3138  0124CE  5030               	movf	(btemp+11)^0,w,c
  3139  0124D0  0A00               	xorlw	0	; case 0
  3140  0124D2  A4D8               	btfss	status,2,c
  3141  0124D4  D00D               	goto	l11206
  3142                           
  3143                           ; BSR set to: 0
  3144                           ; Switch size 1, requested type "simple"
  3145                           ; Number of cases is 4, Range of values is 0 to 3
  3146                           ; switch strategies available:
  3147                           ; Name         Instructions Cycles
  3148                           ; simple_byte           13     7 (average)
  3149                           ;	Chosen strategy is simple_byte
  3150  0124D6  502F               	movf	(btemp+10)^0,w,c
  3151  0124D8  0A00               	xorlw	0	; case 0
  3152  0124DA  B4D8               	btfsc	status,2,c
  3153  0124DC  D60F               	goto	l1358
  3154  0124DE  0A01               	xorlw	1	; case 1
  3155  0124E0  B4D8               	btfsc	status,2,c
  3156  0124E2  D5A9               	goto	l1356
  3157  0124E4  0A03               	xorlw	3	; case 2
  3158  0124E6  B4D8               	btfsc	status,2,c
  3159  0124E8  D690               	goto	l1359
  3160  0124EA  0A01               	xorlw	1	; case 3
  3161  0124EC  B4D8               	btfsc	status,2,c
  3162  0124EE  D6FC               	goto	l11190
  3163  0124F0                     l11206:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;main.c: 316:     clear_hid_pflags(&H);
  3167  0124F0  0EF2               	movlw	_H& (0+255)
  3168  0124F2  6EE6               	movwf	postinc1,c
  3169  0124F4  EC9F  F0C9         	call	_clear_hid_pflags	;wreg free
  3170                           
  3171                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3172  0124F8  0EFA               	movlw	250
  3173  0124FA  6EE6               	movwf	postinc1,c
  3174  0124FC  0E00               	movlw	0
  3175  0124FE  6EE6               	movwf	postinc1,c
  3176  012500  0E0A               	movlw	10
  3177  012502  6EE6               	movwf	postinc1,c
  3178  012504  ECEA  F0C5         	call	_StartTimer	;wreg free
  3179                           
  3180                           ;main.c: 319:    update_lcd(0);
  3181  012508  0E00               	movlw	0
  3182  01250A  6EE6               	movwf	postinc1,c
  3183  01250C  ECC4  F0B9         	call	_update_lcd	;wreg free
  3184  012510                     l11212:
  3185                           
  3186                           ;main.c: 325:   check_help(V.flipper);
  3187  012510  0102               	movlb	2	; () banked
  3188  012512  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3189  012514  6EE6               	movwf	postinc1,c
  3190  012516  EC46  F0B0         	call	_check_help	;wreg free
  3191                           
  3192                           ;main.c: 327:   if (check_enter_button(&H)) {
  3193  01251A  0EF2               	movlw	_H& (0+255)
  3194  01251C  6EE6               	movwf	postinc1,c
  3195  01251E  EC0A  F0C6         	call	_check_enter_button	;wreg free
  3196  012522  5025               	movf	btemp^0,w,c
  3197  012524  B4D8               	btfsc	status,2,c
  3198  012526  D062               	goto	l1363
  3199                           
  3200                           ;main.c: 328:    V.calib = 0;
  3201  012528  0102               	movlb	2	; () banked
  3202  01252A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3203                           
  3204                           ; BSR set to: 2
  3205                           ;main.c: 329:    inp_index += 3;
  3206                           ;stkvar	_inp_index @ sp[(-5)+3]
  3207  01252C  0EFE               	movlw	-2
  3208  01252E  006F FF8C  F025    	movff	plusw1,btemp
  3209  012534  0E03               	movlw	3
  3210  012536  2625               	addwf	btemp^0,f,c
  3211  012538  0EFE               	movlw	-2
  3212  01253A  0060  F097  FFE3   	movff	btemp,plusw1
  3213                           
  3214                           ;main.c: 330:    if (inp_index > 9)
  3215                           ;stkvar	_inp_index @ sp[(-5)+3]
  3216  012540  0EFE               	movlw	-2
  3217  012542  006F FF8C  F025    	movff	plusw1,btemp
  3218  012548  0E09               	movlw	9
  3219  01254A  6425               	cpfsgt	btemp^0,c
  3220  01254C  D03A               	goto	l11240
  3221                           
  3222                           ; BSR set to: 2
  3223                           ;main.c: 331:     inp_index = 0;
  3224                           ;stkvar	_inp_index @ sp[(-5)+3]
  3225  01254E  0EFE               	movlw	-2
  3226  012550  6AE3               	clrf	plusw1,c
  3227  012552  D037               	goto	l11240
  3228  012554                     l11222:
  3229                           
  3230                           ; BSR set to: 2
  3231                           ;main.c: 334:     i = C_BATT;
  3232                           ;stkvar	_i @ sp[(-5)+2]
  3233  012554  0EFD               	movlw	-3
  3234  012556  6AE3               	clrf	plusw1,c
  3235                           
  3236                           ; BSR set to: 2
  3237                           ;main.c: 335:     j = C_PV;
  3238                           ;stkvar	_j @ sp[(-5)+1]
  3239  012558  0EFC               	movlw	-4
  3240  01255A  6AE3               	clrf	plusw1,c
  3241  01255C  2AE3               	incf	plusw1,f,c
  3242                           
  3243                           ; BSR set to: 2
  3244                           ;main.c: 336:     k = V_CC;
  3245                           ;stkvar	_k @ sp[(-5)+0]
  3246  01255E  0EFB               	movlw	-5
  3247  012560  6AE3               	clrf	plusw1,c
  3248  012562  82E3               	bsf	plusw1,1,c
  3249                           
  3250                           ;main.c: 337:     break;
  3251  012564  D043               	goto	l1363
  3252  012566                     l11228:
  3253                           
  3254                           ; BSR set to: 2
  3255                           ;main.c: 339:     i = V_BAT;
  3256                           ;stkvar	_i @ sp[(-5)+2]
  3257  012566  0EFD               	movlw	-3
  3258  012568  6AE3               	clrf	plusw1,c
  3259  01256A  84E3               	bsf	plusw1,2,c
  3260                           
  3261                           ;main.c: 340:     j = V_PV;
  3262                           ;stkvar	_j @ sp[(-5)+1]
  3263  01256C  0EFC               	movlw	-4
  3264  01256E  6AE3               	clrf	plusw1,c
  3265  012570  80E3               	bsf	plusw1,0,c
  3266  012572  84E3               	bsf	plusw1,2,c	;indir
  3267                           
  3268                           ;main.c: 341:     k = V_CBUS;
  3269                           ;stkvar	_k @ sp[(-5)+0]
  3270  012574  0EFB               	movlw	-5
  3271  012576  6AE3               	clrf	plusw1,c
  3272  012578  82E3               	bsf	plusw1,1,c
  3273  01257A  84E3               	bsf	plusw1,2,c	;indir
  3274                           
  3275                           ;main.c: 342:     break;
  3276  01257C  D037               	goto	l1363
  3277  01257E                     l11230:
  3278                           
  3279                           ; BSR set to: 2
  3280                           ;main.c: 344:     i = V_BBAT;
  3281                           ;stkvar	_i @ sp[(-5)+2]
  3282  01257E  0EFD               	movlw	-3
  3283  012580  6AE3               	clrf	plusw1,c
  3284  012582  82E3               	bsf	plusw1,1,c
  3285  012584  86E3               	bsf	plusw1,3,c	;indir
  3286                           
  3287                           ; BSR set to: 2
  3288                           ;main.c: 345:     j = V_TEMP;
  3289  012586  0E0B               	movlw	11
  3290  012588  6E30               	movwf	(btemp+11)^0,c
  3291                           
  3292                           ;stkvar	_j @ sp[(-5)+1]
  3293  01258A  0EFC               	movlw	-4
  3294  01258C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3295                           
  3296                           ; BSR set to: 2
  3297                           ;main.c: 346:     k = V_INVERTER;
  3298                           ;stkvar	_k @ sp[(-5)+0]
  3299  012592  0EFB               	movlw	-5
  3300  012594  6AE3               	clrf	plusw1,c
  3301  012596  84E3               	bsf	plusw1,2,c
  3302  012598  86E3               	bsf	plusw1,3,c	;indir
  3303                           
  3304                           ;main.c: 347:     break;
  3305  01259A  D028               	goto	l1363
  3306  01259C                     l11236:
  3307                           
  3308                           ; BSR set to: 2
  3309                           ;main.c: 349:     i = channel_ANB5;
  3310  01259C  0E0D               	movlw	13
  3311  01259E  6E30               	movwf	(btemp+11)^0,c
  3312                           
  3313                           ;stkvar	_i @ sp[(-5)+2]
  3314  0125A0  0EFD               	movlw	-3
  3315  0125A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3316                           
  3317                           ;main.c: 350:     j = channel_ANB5;
  3318  0125A8  0E0D               	movlw	13
  3319  0125AA  6E30               	movwf	(btemp+11)^0,c
  3320                           
  3321                           ;stkvar	_j @ sp[(-5)+1]
  3322  0125AC  0EFC               	movlw	-4
  3323  0125AE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3324                           
  3325                           ;main.c: 351:     k = channel_ANB5;
  3326  0125B4  0E0D               	movlw	13
  3327  0125B6  6E30               	movwf	(btemp+11)^0,c
  3328                           
  3329                           ;stkvar	_k @ sp[(-5)+0]
  3330  0125B8  0EFB               	movlw	-5
  3331  0125BA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3332                           
  3333                           ;main.c: 352:     break;
  3334  0125C0  D015               	goto	l1363
  3335  0125C2                     l11240:
  3336                           
  3337                           ; BSR set to: 2
  3338                           ;stkvar	_inp_index @ sp[(-5)+3]
  3339  0125C2  0EFE               	movlw	-2
  3340  0125C4  50E3               	movf	plusw1,w,c
  3341  0125C6  6E2F               	movwf	(btemp+10)^0,c
  3342  0125C8  6A30               	clrf	(btemp+11)^0,c
  3343                           
  3344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3345                           ; Switch size 1, requested type "simple"
  3346                           ; Number of cases is 1, Range of values is 0 to 0
  3347                           ; switch strategies available:
  3348                           ; Name         Instructions Cycles
  3349                           ; simple_byte            4     3 (average)
  3350                           ;	Chosen strategy is simple_byte
  3351  0125CA  5030               	movf	(btemp+11)^0,w,c
  3352  0125CC  0A00               	xorlw	0	; case 0
  3353  0125CE  A4D8               	btfss	status,2,c
  3354  0125D0  D00D               	goto	l1363
  3355                           
  3356                           ; BSR set to: 2
  3357                           ; Switch size 1, requested type "simple"
  3358                           ; Number of cases is 4, Range of values is 0 to 9
  3359                           ; switch strategies available:
  3360                           ; Name         Instructions Cycles
  3361                           ; simple_byte           13     7 (average)
  3362                           ;	Chosen strategy is simple_byte
  3363  0125D2  502F               	movf	(btemp+10)^0,w,c
  3364  0125D4  0A00               	xorlw	0	; case 0
  3365  0125D6  B4D8               	btfsc	status,2,c
  3366  0125D8  D7BD               	goto	l11222
  3367  0125DA  0A03               	xorlw	3	; case 3
  3368  0125DC  B4D8               	btfsc	status,2,c
  3369  0125DE  D7C3               	goto	l11228
  3370  0125E0  0A05               	xorlw	5	; case 6
  3371  0125E2  B4D8               	btfsc	status,2,c
  3372  0125E4  D7CC               	goto	l11230
  3373  0125E6  0A0F               	xorlw	15	; case 9
  3374  0125E8  B4D8               	btfsc	status,2,c
  3375  0125EA  D7D8               	goto	l11236
  3376  0125EC                     l1363:
  3377                           
  3378                           ;main.c: 361:   if (V.set_sequ) {
  3379  0125EC  0102               	movlb	2	; () banked
  3380  0125EE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3381  0125F0  D4D8               	goto	l11156
  3382                           
  3383                           ; BSR set to: 2
  3384                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3385  0125F2  0E07               	movlw	7
  3386  0125F4  6EE6               	movwf	postinc1,c
  3387  0125F6  EC4B  F0C8         	call	_TimerDone	;wreg free
  3388  0125FA  5025               	movf	btemp^0,w,c
  3389  0125FC  B4D8               	btfsc	status,2,c
  3390  0125FE  D00B               	goto	l11250
  3391                           
  3392                           ;main.c: 363:     V.set_sequ = 0;
  3393  012600  0102               	movlb	2	; () banked
  3394  012602  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3395                           
  3396                           ; BSR set to: 2
  3397                           ;main.c: 364:     set_vterm(0);
  3398  012604  0E00               	movlw	0
  3399  012606  6EE6               	movwf	postinc1,c
  3400  012608  EC48  F0CA         	call	_set_vterm	;wreg free
  3401                           
  3402                           ;main.c: 365:     update_lcd(0);
  3403  01260C  0E00               	movlw	0
  3404  01260E  6EE6               	movwf	postinc1,c
  3405  012610  ECC4  F0B9         	call	_update_lcd	;wreg free
  3406                           
  3407                           ;main.c: 366:    } else {
  3408  012614  D4C6               	goto	l11156
  3409  012616                     l11250:
  3410                           
  3411                           ;main.c: 367:     set_vterm(2);
  3412  012616  0E02               	movlw	2
  3413  012618  6EE6               	movwf	postinc1,c
  3414  01261A  EC48  F0CA         	call	_set_vterm	;wreg free
  3415                           
  3416                           ;main.c: 368:     update_lcd(2);
  3417  01261E  0E02               	movlw	2
  3418  012620  6EE6               	movwf	postinc1,c
  3419  012622  ECC4  F0B9         	call	_update_lcd	;wreg free
  3420  012626  D4BD               	goto	l11156
  3421  012628                     __end_of_main:
  3422                           	opt callstack 0
  3423                           
  3424 ;; *************** function _static_soc *****************
  3425 ;; Defined at:
  3426 ;;		line 84 in file "mbmc.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1  [STACK] void 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2
  3435 ;; Tracked objects:
  3436 ;;		On entry : 3F/39
  3437 ;;		On exit  : 3F/1
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    7
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text1
  3455  018DEC                     __ptext1:
  3456                           	opt callstack 0
  3457  018DEC                     _static_soc:
  3458                           	opt callstack 23
  3459                           
  3460                           ;mbmc.c: 86:  C.static_ah = C.bank_ah;
  3461                           
  3462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3463                           ;incstack = 0
  3464  018DEC  C17C  F180         	movff	_C+124,_C+128	;volatile
  3465  018DF0  C17D  F181         	movff	_C+125,_C+129	;volatile
  3466  018DF4  C17E  F182         	movff	_C+126,_C+130	;volatile
  3467  018DF8  C17F  F183         	movff	_C+127,_C+131	;volatile
  3468                           
  3469                           ;mbmc.c: 87:  C.runtime = 120;
  3470  018DFC  0E00               	movlw	0
  3471  018DFE  0101               	movlb	1	; () banked
  3472  018E00  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
  3473  018E02  0E78               	movlw	120
  3474  018E04  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
  3475                           
  3476                           ;mbmc.c: 88:  C.soc = 100;
  3477  018E06  0E00               	movlw	0
  3478  018E08  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
  3479  018E0A  0E64               	movlw	100
  3480  018E0C  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;mbmc.c: 89:  C.dynamic_ah = C.static_ah;
  3484  018E0E  C180  F184         	movff	_C+128,_C+132	;volatile
  3485  018E12  C181  F185         	movff	_C+129,_C+133	;volatile
  3486  018E16  C182  F186         	movff	_C+130,_C+134	;volatile
  3487  018E1A  C183  F187         	movff	_C+131,_C+135	;volatile
  3488                           
  3489                           ; BSR set to: 1
  3490                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3491  018E1E  0012               	return		;funcret
  3492  018E20                     __end_of_static_soc:
  3493                           	opt callstack 0
  3494                           
  3495 ;; *************** function _start_switch_handler *****************
  3496 ;; Defined at:
  3497 ;;		line 119 in file "dio.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1  [STACK] void 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3506 ;; Tracked objects:
  3507 ;;		On entry : 1/0
  3508 ;;		On exit  : 3F/39
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    8
  3518 ;; This function calls:
  3519 ;;		_INT1_SetInterruptHandler
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text2
  3526  019434                     __ptext2:
  3527                           	opt callstack 0
  3528  019434                     _start_switch_handler:
  3529                           	opt callstack 22
  3530                           
  3531                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3532                           
  3533                           ; BSR set to: 1
  3534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3535                           ;incstack = 0
  3536  019434  0139               	movlb	57	; () banked
  3537  019436  9195               	bcf	149,0,b	;volatile
  3538                           
  3539                           ; BSR set to: 57
  3540                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3541  019438  0E10               	movlw	low _switch_handler
  3542  01943A  6EE6               	movwf	postinc1,c
  3543  01943C  0E6F               	movlw	high _switch_handler
  3544  01943E  6EE6               	movwf	postinc1,c
  3545  019440  0E01               	movlw	low (_switch_handler shr (0+16))
  3546  019442  6EE6               	movwf	postinc1,c
  3547  019444  ECEB  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
  3548                           
  3549                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3550  019448  0E02               	movlw	2
  3551  01944A  0100               	movlb	0	; () banked
  3552  01944C  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3556  01944E  0139               	movlb	57	; () banked
  3557  019450  8195               	bsf	149,0,b	;volatile
  3558                           
  3559                           ; BSR set to: 57
  3560                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3561  019452  0012               	return		;funcret
  3562  019454                     __end_of_start_switch_handler:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _start_adc_scan *****************
  3566 ;; Defined at:
  3567 ;;		line 33 in file "daq.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1  [STACK] _Bool 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 1/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    8
  3588 ;; This function calls:
  3589 ;;		_ADCC_DischargeSampleCapacitor
  3590 ;;		_ADCC_SetADIInterruptHandler
  3591 ;;		_ADCC_SetADTIInterruptHandler
  3592 ;;		_ADCC_StartConversion
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text3
  3599  0185BA                     __ptext3:
  3600                           	opt callstack 0
  3601  0185BA                     _start_adc_scan:
  3602                           	opt callstack 22
  3603                           
  3604                           ;daq.c: 35:  if (R.done)
  3605                           
  3606                           ; BSR set to: 57
  3607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3608                           ;incstack = 0
  3609  0185BA  0100               	movlb	0	; () banked
  3610  0185BC  51EA               	movf	(_R+39)& (0+255),w,b	;volatile
  3611  0185BE  A4D8               	btfss	status,2,c
  3612  0185C0  0012               	return	
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;daq.c: 38:  R.scan_index = 0;
  3616  0185C2  6BE7               	clrf	(_R+36)& (0+255),b	;volatile
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3620  0185C4  013A               	movlb	58	; () banked
  3621  0185C6  5140               	movf	64,w,b	;volatile
  3622  0185C8  006E F940  F025    	movff	14928,btemp	;volatile
  3623  0185CE  6A26               	clrf	(btemp+1)^0,c
  3624  0185D0  0060  F094  F026   	movff	btemp,btemp+1
  3625  0185D6  6A25               	clrf	btemp^0,c
  3626  0185D8  2625               	addwf	btemp^0,f,c
  3627  0185DA  0E00               	movlw	0
  3628  0185DC  2226               	addwfc	(btemp+1)^0,f,c
  3629  0185DE  0E77               	movlw	119
  3630  0185E0  1425               	andwf	btemp^0,w,c
  3631  0185E2  0100               	movlb	0	; () banked
  3632  0185E4  6FE8               	movwf	(_R+37)& (0+255),b	;volatile
  3633  0185E6  0E3C               	movlw	60
  3634  0185E8  1426               	andwf	(btemp+1)^0,w,c
  3635  0185EA  6FE9               	movwf	(_R+38)& (0+255),b	;volatile
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3639  0185EC  0ECA               	movlw	low _adc_int_handler
  3640  0185EE  6EE6               	movwf	postinc1,c
  3641  0185F0  0E96               	movlw	high _adc_int_handler
  3642  0185F2  6EE6               	movwf	postinc1,c
  3643  0185F4  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3644  0185F6  6EE6               	movwf	postinc1,c
  3645  0185F8  EC27  F0C9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3646                           
  3647                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3648  0185FC  0E96               	movlw	low _adc_int_t_handler
  3649  0185FE  6EE6               	movwf	postinc1,c
  3650  018600  0E83               	movlw	high _adc_int_t_handler
  3651  018602  6EE6               	movwf	postinc1,c
  3652  018604  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3653  018606  6EE6               	movwf	postinc1,c
  3654  018608  EC13  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3655                           
  3656                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3657  01860C  EC3D  F0CB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3658                           
  3659                           ; BSR set to: 62
  3660                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3661  018610  0100               	movlb	0	; () banked
  3662  018612  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
  3663  018614  0B0F               	andlw	15
  3664  018616  6EE6               	movwf	postinc1,c
  3665  018618  ECF0  F0CA         	call	_ADCC_StartConversion	;wreg free
  3666                           
  3667                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3668  01861C  0012               	return		;funcret
  3669  01861E                     __end_of_start_adc_scan:
  3670                           	opt callstack 0
  3671                           
  3672 ;; *************** function _ADCC_StartConversion *****************
  3673 ;; Defined at:
  3674 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  channel         1  [STACK] enum E16136
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1  [STACK] void 
  3681 ;; Registers used:
  3682 ;;		fsr1l, fsr1h
  3683 ;; Tracked objects:
  3684 ;;		On entry : 3F/0
  3685 ;;		On exit  : 3F/3E
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    7
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_start_adc_scan
  3699 ;;		_adc_int_t_handler
  3700 ;; This function uses a reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text4
  3704  0195E0                     __ptext4:
  3705                           	opt callstack 0
  3706  0195E0                     _ADCC_StartConversion:
  3707                           	opt callstack 4
  3708                           
  3709                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3710                           ;stkvar	_channel @ sp[(0)+-1]
  3711                           
  3712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3713                           ;incstack = 0
  3714  0195E0  0EFF               	movlw	-1
  3715  0195E2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3716                           
  3717                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3718  0195E8  013E               	movlb	62	; () banked
  3719  0195EA  8FF8               	bsf	248,7,b	;volatile
  3720                           
  3721                           ; BSR set to: 62
  3722                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3723  0195EC  81F8               	bsf	248,0,b	;volatile
  3724                           
  3725                           ; BSR set to: 62
  3726                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3727  0195EE  52E5               	movf	postdec1,f,c
  3728  0195F0  0012               	return		;funcret
  3729  0195F2                     __end_of_ADCC_StartConversion:
  3730                           	opt callstack 0
  3731                           
  3732 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3733 ;; Defined at:
  3734 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1  [STACK] void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 3F/3E
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3752 ;;Total ram usage:        0 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    7
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_start_adc_scan
  3759 ;;		_adc_int_t_handler
  3760 ;; This function uses a reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text5
  3764  01967A                     __ptext5:
  3765                           	opt callstack 0
  3766  01967A                     _ADCC_DischargeSampleCapacitor:
  3767                           	opt callstack 4
  3768                           
  3769                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3770                           
  3771                           ; BSR set to: 62
  3772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3773                           ;incstack = 0
  3774  01967A  0E3B               	movlw	59
  3775  01967C  013E               	movlb	62	; () banked
  3776  01967E  6FF1               	movwf	241,b	;volatile
  3777                           
  3778                           ; BSR set to: 62
  3779                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3780  019680  0012               	return		;funcret
  3781  019682                     __end_of_ADCC_DischargeSampleCapacitor:
  3782                           	opt callstack 0
  3783                           
  3784 ;; *************** function _srand *****************
  3785 ;; Defined at:
  3786 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  s               2  [STACK] unsigned int 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1  [STACK] void 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3795 ;; Tracked objects:
  3796 ;;		On entry : 3F/0
  3797 ;;		On exit  : 3F/1
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    7
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text6
  3815  018E20                     __ptext6:
  3816                           	opt callstack 0
  3817  018E20                     _srand:
  3818                           	opt callstack 23
  3819                           
  3820                           ;stkvar	_s @ sp[(0)+-2]
  3821                           
  3822                           ; BSR set to: 62
  3823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3824                           ;incstack = 0
  3825  018E20  0EFE               	movlw	-2
  3826  018E22  50E3               	movf	plusw1,w,c
  3827  018E24  0FFF               	addlw	255
  3828  018E26  6E2F               	movwf	(btemp+10)^0,c
  3829  018E28  0EFF               	movlw	-1
  3830  018E2A  006F FF8C  F030    	movff	plusw1,btemp+11
  3831  018E30  0EFF               	movlw	255
  3832  018E32  2230               	addwfc	(btemp+11)^0,f,c
  3833  018E34  0060  F0BC  F1CD   	movff	btemp+10,_seed
  3834  018E3A  0060  F0C0  F1CE   	movff	btemp+11,_seed+1
  3835  018E40  0101               	movlb	1	; () banked
  3836  018E42  6BCF               	clrf	(_seed+2)& (0+255),b
  3837  018E44  6BD0               	clrf	(_seed+3)& (0+255),b
  3838  018E46  6BD1               	clrf	(_seed+4)& (0+255),b
  3839  018E48  6BD2               	clrf	(_seed+5)& (0+255),b
  3840  018E4A  6BD3               	clrf	(_seed+6)& (0+255),b
  3841  018E4C  6BD4               	clrf	(_seed+7)& (0+255),b
  3842                           
  3843                           ; BSR set to: 1
  3844                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3845  018E4E  52E5               	movf	postdec1,f,c
  3846  018E50  52E5               	movf	postdec1,f,c
  3847  018E52  0012               	return		;funcret
  3848  018E54                     __end_of_srand:
  3849                           	opt callstack 0
  3850                           
  3851 ;; *************** function _init_display *****************
  3852 ;; Defined at:
  3853 ;;		line 37 in file "eadog.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1  [STACK] void 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/2
  3864 ;;		On exit  : 3F/3D
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    9
  3874 ;; This function calls:
  3875 ;;		_ringBufS_init
  3876 ;;		_send_lcd_cmd
  3877 ;;		_send_lcd_cmd_long
  3878 ;;		_wdtdelay
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text7
  3885  0177A0                     __ptext7:
  3886                           	opt callstack 0
  3887  0177A0                     _init_display:
  3888                           	opt callstack 21
  3889                           
  3890                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3891                           
  3892                           ; BSR set to: 1
  3893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3894                           ;incstack = 0
  3895  0177A0  0E43               	movlw	low _ring_buf1
  3896  0177A2  0100               	movlb	0	; () banked
  3897  0177A4  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3898  0177A6  0E04               	movlw	high _ring_buf1
  3899  0177A8  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3900                           
  3901                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3902  0177AA  0E00               	movlw	low _ring_buf2
  3903  0177AC  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3904  0177AE  0E04               	movlw	high _ring_buf2
  3905  0177B0  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3909  0177B2  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  3910  0177B8  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  3911  0177BE  EC23  F0C8         	call	_ringBufS_init	;wreg free
  3912                           
  3913                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3914  0177C2  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  3915  0177C8  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  3916  0177CE  EC23  F0C8         	call	_ringBufS_init	;wreg free
  3917                           
  3918                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3919  0177D2  84BE               	bsf	190,2,c	;volatile
  3920  0177D4  84BC               	bsf	188,2,c	;volatile
  3921                           
  3922                           ;eadog.c: 58:  wdtdelay(350000);
  3923  0177D6  0E30               	movlw	48
  3924  0177D8  6EE6               	movwf	postinc1,c
  3925  0177DA  0E57               	movlw	87
  3926  0177DC  6EE6               	movwf	postinc1,c
  3927  0177DE  0E05               	movlw	5
  3928  0177E0  6EE6               	movwf	postinc1,c
  3929  0177E2  0E00               	movlw	0
  3930  0177E4  6EE6               	movwf	postinc1,c
  3931  0177E6  ECD2  F0C3         	call	_wdtdelay	;wreg free
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  3935  0177EA  0E39               	movlw	57
  3936  0177EC  6EE6               	movwf	postinc1,c
  3937  0177EE  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  3941  0177F2  0E1D               	movlw	29
  3942  0177F4  6EE6               	movwf	postinc1,c
  3943  0177F6  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  3947  0177FA  0E50               	movlw	80
  3948  0177FC  6EE6               	movwf	postinc1,c
  3949  0177FE  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  3953  017802  0E6C               	movlw	108
  3954  017804  6EE6               	movwf	postinc1,c
  3955  017806  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  3959  01780A  0E76               	movlw	118
  3960  01780C  6EE6               	movwf	postinc1,c
  3961  01780E  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  3965  017812  0E38               	movlw	56
  3966  017814  6EE6               	movwf	postinc1,c
  3967  017816  ECFB  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  3971  01781A  0E0F               	movlw	15
  3972  01781C  6EE6               	movwf	postinc1,c
  3973  01781E  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  3977  017822  0E01               	movlw	1
  3978  017824  6EE6               	movwf	postinc1,c
  3979  017826  ECFB  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  3983  01782A  0E02               	movlw	2
  3984  01782C  6EE6               	movwf	postinc1,c
  3985  01782E  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  3989  017832  0E06               	movlw	6
  3990  017834  6EE6               	movwf	postinc1,c
  3991  017836  EC0F  F0C8         	call	_send_lcd_cmd	;wreg free
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;eadog.c: 69:  wdtdelay(30);
  3995  01783A  0E1E               	movlw	30
  3996  01783C  6EE6               	movwf	postinc1,c
  3997  01783E  0E00               	movlw	0
  3998  017840  6EE6               	movwf	postinc1,c
  3999  017842  0E00               	movlw	0
  4000  017844  6EE6               	movwf	postinc1,c
  4001  017846  0E00               	movlw	0
  4002  017848  6EE6               	movwf	postinc1,c
  4003  01784A  ECD2  F0C3         	call	_wdtdelay	;wreg free
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  4007  01784E  0E02               	movlw	2
  4008  017850  013D               	movlb	61	; () banked
  4009  017852  6F16               	movwf	22,b	;volatile
  4010                           
  4011                           ; BSR set to: 61
  4012                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  4013  017854  0E40               	movlw	64
  4014  017856  6F15               	movwf	21,b	;volatile
  4015                           
  4016                           ; BSR set to: 61
  4017                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  4018  017858  0E83               	movlw	131
  4019  01785A  6F14               	movwf	20,b	;volatile
  4020                           
  4021                           ; BSR set to: 61
  4022                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4023  01785C  931A               	bcf	26,1,b	;volatile
  4024                           
  4025                           ; BSR set to: 61
  4026                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4027  01785E  0E3F               	movlw	-193
  4028  017860  013B               	movlb	59	; () banked
  4029  017862  17FD               	andwf	253,f,b	;volatile
  4030                           
  4031                           ; BSR set to: 59
  4032                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4033  017864  9BFD               	bcf	253,5,b	;volatile
  4034                           
  4035                           ; BSR set to: 59
  4036                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4037  017866  51FD               	movf	253,w,b	;volatile
  4038  017868  0BF9               	andlw	-7
  4039  01786A  0902               	iorlw	2
  4040  01786C  6FFD               	movwf	253,b	;volatile
  4041                           
  4042                           ; BSR set to: 59
  4043                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4044  01786E  0EE7               	movlw	-25
  4045  017870  17FD               	andwf	253,f,b	;volatile
  4046                           
  4047                           ; BSR set to: 59
  4048                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4049  017872  81FD               	bsf	253,0,b	;volatile
  4050                           
  4051                           ; BSR set to: 59
  4052                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4053  017874  0E43               	movlw	low _ring_buf1
  4054  017876  6FF9               	movwf	249,b	;volatile
  4055  017878  0E04               	movlw	high _ring_buf1
  4056  01787A  6FFA               	movwf	250,b	;volatile
  4057  01787C  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4058  01787E  6FFB               	movwf	251,b	;volatile
  4059                           
  4060                           ; BSR set to: 59
  4061                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4062  017880  9BFC               	bcf	252,5,b	;volatile
  4063                           
  4064                           ; BSR set to: 59
  4065                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4066  017882  013D               	movlb	61	; () banked
  4067  017884  831A               	bsf	26,1,b	;volatile
  4068                           
  4069                           ; BSR set to: 61
  4070                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4071  017886  94BE               	bcf	190,2,c	;volatile
  4072                           
  4073                           ; BSR set to: 61
  4074                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4075  017888  0012               	return		;funcret
  4076  01788A                     __end_of_init_display:
  4077                           	opt callstack 0
  4078                           
  4079 ;; *************** function _send_lcd_cmd_long *****************
  4080 ;; Defined at:
  4081 ;;		line 127 in file "eadog.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  cmd             1  [STACK] const unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1  [STACK] void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4090 ;; Tracked objects:
  4091 ;;		On entry : 3F/0
  4092 ;;		On exit  : 3F/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    8
  4102 ;; This function calls:
  4103 ;;		_SPI1_Exchange8bit
  4104 ;;		_wdtdelay
  4105 ;; This function is called by:
  4106 ;;		_init_display
  4107 ;; This function uses a reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text8
  4111  018FF6                     __ptext8:
  4112                           	opt callstack 0
  4113  018FF6                     _send_lcd_cmd_long:
  4114                           	opt callstack 21
  4115                           
  4116                           ; BSR set to: 61
  4117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4118                           ;incstack = 0
  4119                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4120  018FF6  92BC               	bcf	188,1,c	;volatile
  4121                           
  4122                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4123  018FF8  94BC               	bcf	188,2,c	;volatile
  4124                           
  4125                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4126                           ;stkvar	_cmd @ sp[(0)+-1]
  4127  018FFA  0EFF               	movlw	-1
  4128  018FFC  50E3               	movf	plusw1,w,c
  4129  018FFE  6EE6               	movwf	postinc1,c
  4130  019000  EC2A  F0CA         	call	_SPI1_Exchange8bit	;wreg free
  4131                           
  4132                           ; BSR set to: 57
  4133                           ;eadog.c: 132:  wdtdelay(800);
  4134  019004  0E20               	movlw	32
  4135  019006  6EE6               	movwf	postinc1,c
  4136  019008  0E03               	movlw	3
  4137  01900A  6EE6               	movwf	postinc1,c
  4138  01900C  0E00               	movlw	0
  4139  01900E  6EE6               	movwf	postinc1,c
  4140  019010  0E00               	movlw	0
  4141  019012  6EE6               	movwf	postinc1,c
  4142  019014  ECD2  F0C3         	call	_wdtdelay	;wreg free
  4143                           
  4144                           ; BSR set to: 0
  4145  019018  82BC               	bsf	188,1,c	;volatile
  4146                           
  4147                           ; BSR set to: 0
  4148                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4149  01901A  52E5               	movf	postdec1,f,c
  4150  01901C  0012               	return		;funcret
  4151  01901E                     __end_of_send_lcd_cmd_long:
  4152                           	opt callstack 0
  4153                           
  4154 ;; *************** function _send_lcd_cmd *****************
  4155 ;; Defined at:
  4156 ;;		line 115 in file "eadog.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  cmd             1  [STACK] const unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1  [STACK] void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4165 ;; Tracked objects:
  4166 ;;		On entry : 3F/0
  4167 ;;		On exit  : 3F/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    8
  4177 ;; This function calls:
  4178 ;;		_SPI1_Exchange8bit
  4179 ;;		_wdtdelay
  4180 ;; This function is called by:
  4181 ;;		_init_display
  4182 ;; This function uses a reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text9
  4186  01901E                     __ptext9:
  4187                           	opt callstack 0
  4188  01901E                     _send_lcd_cmd:
  4189                           	opt callstack 21
  4190                           
  4191                           ; BSR set to: 0
  4192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4193                           ;incstack = 0
  4194                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4195  01901E  92BC               	bcf	188,1,c	;volatile
  4196                           
  4197                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4198  019020  94BC               	bcf	188,2,c	;volatile
  4199                           
  4200                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4201                           ;stkvar	_cmd @ sp[(0)+-1]
  4202  019022  0EFF               	movlw	-1
  4203  019024  50E3               	movf	plusw1,w,c
  4204  019026  6EE6               	movwf	postinc1,c
  4205  019028  EC2A  F0CA         	call	_SPI1_Exchange8bit	;wreg free
  4206                           
  4207                           ; BSR set to: 57
  4208                           ;eadog.c: 120:  wdtdelay(30);
  4209  01902C  0E1E               	movlw	30
  4210  01902E  6EE6               	movwf	postinc1,c
  4211  019030  0E00               	movlw	0
  4212  019032  6EE6               	movwf	postinc1,c
  4213  019034  0E00               	movlw	0
  4214  019036  6EE6               	movwf	postinc1,c
  4215  019038  0E00               	movlw	0
  4216  01903A  6EE6               	movwf	postinc1,c
  4217  01903C  ECD2  F0C3         	call	_wdtdelay	;wreg free
  4218                           
  4219                           ; BSR set to: 0
  4220  019040  82BC               	bsf	188,1,c	;volatile
  4221                           
  4222                           ; BSR set to: 0
  4223                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4224  019042  52E5               	movf	postdec1,f,c
  4225  019044  0012               	return		;funcret
  4226  019046                     __end_of_send_lcd_cmd:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _SPI1_Exchange8bit *****************
  4230 ;; Defined at:
  4231 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  data            1  [STACK] unsigned char 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1  [STACK] unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 3F/39
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    7
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_send_lcd_cmd
  4256 ;;		_send_lcd_cmd_long
  4257 ;; This function uses a reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text10
  4261  019454                     __ptext10:
  4262                           	opt callstack 0
  4263  019454                     _SPI1_Exchange8bit:
  4264                           	opt callstack 21
  4265                           
  4266                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4267                           
  4268                           ; BSR set to: 0
  4269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4270                           ;incstack = 0
  4271  019454  0E01               	movlw	1
  4272  019456  013D               	movlb	61	; () banked
  4273  019458  6F12               	movwf	18,b	;volatile
  4274                           
  4275                           ; BSR set to: 61
  4276                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4277                           ;stkvar	_data @ sp[(0)+-1]
  4278  01945A  0EFF               	movlw	-1
  4279  01945C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4280  019462                     l837:
  4281                           
  4282                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4283  019462  0139               	movlb	57	; () banked
  4284  019464  A9A2               	btfss	162,4,b	;volatile
  4285  019466  D7FD               	goto	l837
  4286                           
  4287                           ; BSR set to: 57
  4288                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4289  019468  006F F440  F025    	movff	15632,btemp	;volatile
  4290                           
  4291                           ; BSR set to: 57
  4292                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4293  01946E  52E5               	movf	postdec1,f,c
  4294  019470  0012               	return		;funcret
  4295  019472                     __end_of_SPI1_Exchange8bit:
  4296                           	opt callstack 0
  4297                           
  4298 ;; *************** function _ringBufS_init *****************
  4299 ;; Defined at:
  4300 ;;		line 22 in file "ringbufs.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  _this           2  [STACK] PTR volatile struct ring
  4303 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1  [STACK] void 
  4308 ;; Registers used:
  4309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    8
  4322 ;; This function calls:
  4323 ;;		_memset
  4324 ;; This function is called by:
  4325 ;;		_init_display
  4326 ;; This function uses a reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text11
  4330  019046                     __ptext11:
  4331                           	opt callstack 0
  4332  019046                     _ringBufS_init:
  4333                           	opt callstack 21
  4334                           
  4335                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4336                           
  4337                           ; BSR set to: 57
  4338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4339                           ;incstack = 0
  4340  019046  0E43               	movlw	67
  4341  019048  6EE6               	movwf	postinc1,c
  4342  01904A  0E00               	movlw	0
  4343  01904C  6EE6               	movwf	postinc1,c
  4344  01904E  0E00               	movlw	0
  4345  019050  6EE6               	movwf	postinc1,c
  4346  019052  0E00               	movlw	0
  4347  019054  6EE6               	movwf	postinc1,c
  4348                           
  4349                           ;stkvar	__this @ sp[(-4)+-2]
  4350  019056  0EFA               	movlw	-6
  4351  019058  006F FF8F FFE6     	movff	plusw1,postinc1
  4352  01905E  006F FF8F FFE6     	movff	plusw1,postinc1
  4353  019064  EC6A  F0A8         	call	_memset	;wreg free
  4354                           
  4355                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4356  019068  52E5               	movf	postdec1,f,c
  4357  01906A  52E5               	movf	postdec1,f,c
  4358  01906C  0012               	return		;funcret
  4359  01906E                     __end_of_ringBufS_init:
  4360                           	opt callstack 0
  4361                           
  4362 ;; *************** function _init_bsoc *****************
  4363 ;; Defined at:
  4364 ;;		line 44 in file "bsoc.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1  [STACK] void 
  4371 ;; Registers used:
  4372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4373 ;; Tracked objects:
  4374 ;;		On entry : 3F/1
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    8
  4385 ;; This function calls:
  4386 ;;		_TMR3_SetInterruptHandler
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text12
  4393  0195F2                     __ptext12:
  4394                           	opt callstack 0
  4395  0195F2                     _init_bsoc:
  4396                           	opt callstack 22
  4397                           
  4398                           ;bsoc.c: 46:  TMR3_SetInterruptHandler(calc_bsoc);
  4399                           
  4400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4401                           ;incstack = 0
  4402  0195F2  0E88               	movlw	low _calc_bsoc
  4403  0195F4  6EE6               	movwf	postinc1,c
  4404  0195F6  0E3B               	movlw	high _calc_bsoc
  4405  0195F8  6EE6               	movwf	postinc1,c
  4406  0195FA  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4407  0195FC  6EE6               	movwf	postinc1,c
  4408  0195FE  ECD7  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
  4409                           
  4410                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4411  019602  0012               	return		;funcret
  4412  019604                     __end_of_init_bsoc:
  4413                           	opt callstack 0
  4414                           
  4415 ;; *************** function _hid_display *****************
  4416 ;; Defined at:
  4417 ;;		line 17 in file "hid.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  h               1  [STACK] PTR struct H_data
  4420 ;;		 -> H(7), 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1  [STACK] PTR struct H_data
  4425 ;; Registers used:
  4426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4427 ;; Tracked objects:
  4428 ;;		On entry : 3F/1
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4436 ;;Total ram usage:        0 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    9
  4439 ;; This function calls:
  4440 ;;		_hid_input
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;; This function uses a reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text13
  4447  0175A2                     __ptext13:
  4448                           	opt callstack 0
  4449  0175A2                     _hid_display:
  4450                           	opt callstack 21
  4451                           
  4452                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4453                           ;stkvar	_h @ sp[(0)+-1]
  4454                           
  4455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4456                           ;incstack = 0
  4457  0175A2  0EFF               	movlw	-1
  4458  0175A4  50E3               	movf	plusw1,w,c
  4459  0175A6  6EE6               	movwf	postinc1,c
  4460  0175A8  ECBB  F0C0         	call	_hid_input	;wreg free
  4461                           
  4462                           ;hid.c: 21:  switch (h->h_state) {
  4463  0175AC  D066               	goto	l9530
  4464  0175AE                     l9508:
  4465                           
  4466                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4467                           ;stkvar	_h @ sp[(0)+-1]
  4468  0175AE  0EFF               	movlw	-1
  4469  0175B0  50E3               	movf	plusw1,w,c
  4470  0175B2  6ED9               	movwf	fsr2l,c
  4471  0175B4  6ADA               	clrf	fsr2h,c
  4472  0175B6  0E01               	movlw	1
  4473  0175B8  26D9               	addwf	fsr2l,f,c
  4474  0175BA  0E01               	movlw	1
  4475  0175BC  6EDF               	movwf	indf2,c
  4476                           
  4477                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4478                           ;stkvar	_h @ sp[(0)+-1]
  4479  0175BE  0EFF               	movlw	-1
  4480  0175C0  50E3               	movf	plusw1,w,c
  4481  0175C2  6ED9               	movwf	fsr2l,c
  4482  0175C4  6ADA               	clrf	fsr2h,c
  4483  0175C6  0E00               	movlw	0
  4484  0175C8  6EDF               	movwf	indf2,c
  4485                           
  4486                           ;hid.c: 25:   h->wait_enter = 1;
  4487                           ;stkvar	_h @ sp[(0)+-1]
  4488  0175CA  0EFF               	movlw	-1
  4489  0175CC  50E3               	movf	plusw1,w,c
  4490  0175CE  6ED9               	movwf	fsr2l,c
  4491  0175D0  6ADA               	clrf	fsr2h,c
  4492  0175D2  0E04               	movlw	4
  4493  0175D4  26D9               	addwf	fsr2l,f,c
  4494  0175D6  0E01               	movlw	1
  4495  0175D8  6EDF               	movwf	indf2,c
  4496                           
  4497                           ;hid.c: 26:   h->wait_select = 1;
  4498                           ;stkvar	_h @ sp[(0)+-1]
  4499  0175DA  0EFF               	movlw	-1
  4500  0175DC  50E3               	movf	plusw1,w,c
  4501  0175DE  6ED9               	movwf	fsr2l,c
  4502  0175E0  6ADA               	clrf	fsr2h,c
  4503  0175E2  0E02               	movlw	2
  4504  0175E4  26D9               	addwf	fsr2l,f,c
  4505  0175E6  0E01               	movlw	1
  4506  0175E8  6EDF               	movwf	indf2,c
  4507                           
  4508                           ;hid.c: 27:   h->select_p = SW_OFF;
  4509                           ;stkvar	_h @ sp[(0)+-1]
  4510  0175EA  0EFF               	movlw	-1
  4511  0175EC  50E3               	movf	plusw1,w,c
  4512  0175EE  6ED9               	movwf	fsr2l,c
  4513  0175F0  6ADA               	clrf	fsr2h,c
  4514  0175F2  0E03               	movlw	3
  4515  0175F4  26D9               	addwf	fsr2l,f,c
  4516  0175F6  0E00               	movlw	0
  4517  0175F8  6EDF               	movwf	indf2,c
  4518                           
  4519                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4520                           ;stkvar	_h @ sp[(0)+-1]
  4521  0175FA  0EFF               	movlw	-1
  4522  0175FC  50E3               	movf	plusw1,w,c
  4523  0175FE  6ED9               	movwf	fsr2l,c
  4524  017600  6ADA               	clrf	fsr2h,c
  4525  017602  0E05               	movlw	5
  4526  017604  26D9               	addwf	fsr2l,f,c
  4527  017606  0E00               	movlw	0
  4528  017608  D036               	goto	L1
  4529  01760A                     l9520:
  4530                           
  4531                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4532                           ;stkvar	_h @ sp[(0)+-1]
  4533  01760A  0EFF               	movlw	-1
  4534  01760C  50E3               	movf	plusw1,w,c
  4535  01760E  6ED9               	movwf	fsr2l,c
  4536  017610  6ADA               	clrf	fsr2h,c
  4537  017612  0E02               	movlw	2
  4538  017614  26D9               	addwf	fsr2l,f,c
  4539  017616  50DF               	movf	indf2,w,c
  4540  017618  A4D8               	btfss	status,2,c
  4541  01761A  D042               	goto	l1894
  4542                           
  4543                           ;stkvar	_h @ sp[(0)+-1]
  4544  01761C  0EFF               	movlw	-1
  4545  01761E  50E3               	movf	plusw1,w,c
  4546  017620  6ED9               	movwf	fsr2l,c
  4547  017622  6ADA               	clrf	fsr2h,c
  4548  017624  0E03               	movlw	3
  4549  017626  26D9               	addwf	fsr2l,f,c
  4550  017628  50DF               	movf	indf2,w,c
  4551  01762A  A4D8               	btfss	status,2,c
  4552  01762C  D039               	goto	l1894
  4553                           
  4554                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4555                           ;stkvar	_h @ sp[(0)+-1]
  4556  01762E  0EFF               	movlw	-1
  4557  017630  50E3               	movf	plusw1,w,c
  4558  017632  6ED9               	movwf	fsr2l,c
  4559  017634  6ADA               	clrf	fsr2h,c
  4560  017636  0E06               	movlw	6
  4561  017638  26D9               	addwf	fsr2l,f,c
  4562                           
  4563                           ;stkvar	_h @ sp[(0)+-1]
  4564  01763A  0EFF               	movlw	-1
  4565  01763C  50E3               	movf	plusw1,w,c
  4566  01763E  6EE9               	movwf	fsr0l,c
  4567  017640  6AEA               	clrf	fsr0h,c
  4568  017642  0E06               	movlw	6
  4569  017644  26E9               	addwf	fsr0l,f,c
  4570  017646  2AEF               	incf	indf0,f,c
  4571  017648  50EF               	movf	indf0,w,c
  4572  01764A  0B03               	andlw	3
  4573  01764C  6EDF               	movwf	indf2,c
  4574                           
  4575                           ;hid.c: 34:    h->hid_display = h->sequence;
  4576                           ;stkvar	_h @ sp[(0)+-1]
  4577  01764E  0EFF               	movlw	-1
  4578  017650  50E3               	movf	plusw1,w,c
  4579  017652  6ED9               	movwf	fsr2l,c
  4580  017654  6ADA               	clrf	fsr2h,c
  4581  017656  0E06               	movlw	6
  4582  017658  26D9               	addwf	fsr2l,f,c
  4583                           
  4584                           ;stkvar	_h @ sp[(0)+-1]
  4585  01765A  0EFF               	movlw	-1
  4586  01765C  50E3               	movf	plusw1,w,c
  4587  01765E  6EE9               	movwf	fsr0l,c
  4588  017660  6AEA               	clrf	fsr0h,c
  4589  017662  006F FF7F FFEF     	movff	indf2,indf0
  4590                           
  4591                           ;hid.c: 35:    h->wait_select = 1;
  4592                           ;stkvar	_h @ sp[(0)+-1]
  4593  017668  0EFF               	movlw	-1
  4594  01766A  50E3               	movf	plusw1,w,c
  4595  01766C  6ED9               	movwf	fsr2l,c
  4596  01766E  6ADA               	clrf	fsr2h,c
  4597  017670  0E02               	movlw	2
  4598  017672  26D9               	addwf	fsr2l,f,c
  4599  017674  0E01               	movlw	1
  4600  017676                     L1:
  4601  017676  6EDF               	movwf	indf2,c
  4602  017678  D013               	goto	l1894
  4603  01767A                     l9530:
  4604                           
  4605                           ;stkvar	_h @ sp[(0)+-1]
  4606  01767A  0EFF               	movlw	-1
  4607  01767C  50E3               	movf	plusw1,w,c
  4608  01767E  6ED9               	movwf	fsr2l,c
  4609  017680  6ADA               	clrf	fsr2h,c
  4610  017682  0E01               	movlw	1
  4611  017684  26D9               	addwf	fsr2l,f,c
  4612  017686  50DF               	movf	indf2,w,c
  4613  017688  6E2F               	movwf	(btemp+10)^0,c
  4614  01768A  6A30               	clrf	(btemp+11)^0,c
  4615                           
  4616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4617                           ; Switch size 1, requested type "simple"
  4618                           ; Number of cases is 1, Range of values is 0 to 0
  4619                           ; switch strategies available:
  4620                           ; Name         Instructions Cycles
  4621                           ; simple_byte            4     3 (average)
  4622                           ;	Chosen strategy is simple_byte
  4623  01768C  5030               	movf	(btemp+11)^0,w,c
  4624  01768E  0A00               	xorlw	0	; case 0
  4625  017690  A4D8               	btfss	status,2,c
  4626  017692  D7BB               	goto	l9520
  4627                           
  4628                           ; Switch size 1, requested type "simple"
  4629                           ; Number of cases is 2, Range of values is 0 to 1
  4630                           ; switch strategies available:
  4631                           ; Name         Instructions Cycles
  4632                           ; simple_byte            7     4 (average)
  4633                           ;	Chosen strategy is simple_byte
  4634  017694  502F               	movf	(btemp+10)^0,w,c
  4635  017696  0A00               	xorlw	0	; case 0
  4636  017698  B4D8               	btfsc	status,2,c
  4637  01769A  D789               	goto	l9508
  4638  01769C  0A01               	xorlw	1	; case 1
  4639  01769E  D7B5               	goto	l9520
  4640  0176A0                     l1894:
  4641                           
  4642                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4643  0176A0  52E5               	movf	postdec1,f,c
  4644  0176A2  0012               	return		;funcret
  4645  0176A4                     __end_of_hid_display:
  4646                           	opt callstack 0
  4647                           
  4648 ;; *************** function _hid_input *****************
  4649 ;; Defined at:
  4650 ;;		line 3 in file "hid.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  h               1  [STACK] PTR struct H_data
  4653 ;;		 -> H(7), 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1  [STACK] PTR struct H_data
  4658 ;; Registers used:
  4659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/1
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    8
  4672 ;; This function calls:
  4673 ;;		_get_switch
  4674 ;; This function is called by:
  4675 ;;		_hid_display
  4676 ;; This function uses a reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text14
  4680  018176                     __ptext14:
  4681                           	opt callstack 0
  4682  018176                     _hid_input:
  4683                           	opt callstack 21
  4684                           
  4685                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4686                           
  4687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4688                           ;incstack = 0
  4689  018176  0E02               	movlw	2
  4690  018178  6EE6               	movwf	postinc1,c
  4691  01817A  EC37  F0C8         	call	_get_switch	;wreg free
  4692  01817E  5025               	movf	btemp^0,w,c
  4693  018180  B4D8               	btfsc	status,2,c
  4694  018182  D01C               	goto	l9214
  4695                           
  4696                           ;hid.c: 6:   h->wait_select = 0;
  4697                           ;stkvar	_h @ sp[(0)+-1]
  4698  018184  0EFF               	movlw	-1
  4699  018186  50E3               	movf	plusw1,w,c
  4700  018188  6ED9               	movwf	fsr2l,c
  4701  01818A  6ADA               	clrf	fsr2h,c
  4702  01818C  0E02               	movlw	2
  4703  01818E  26D9               	addwf	fsr2l,f,c
  4704  018190  0E00               	movlw	0
  4705  018192  6EDF               	movwf	indf2,c
  4706                           
  4707                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4708  018194  0E02               	movlw	2
  4709  018196  6EE6               	movwf	postinc1,c
  4710  018198  EC37  F0C8         	call	_get_switch	;wreg free
  4711  01819C  5025               	movf	btemp^0,w,c
  4712  01819E  B4D8               	btfsc	status,2,c
  4713  0181A0  D003               	goto	u8580
  4714  0181A2  6A30               	clrf	(btemp+11)^0,c
  4715  0181A4  2A30               	incf	(btemp+11)^0,f,c
  4716  0181A6  D001               	goto	u8598
  4717  0181A8                     u8580:
  4718  0181A8  6A30               	clrf	(btemp+11)^0,c
  4719  0181AA                     u8598:
  4720                           
  4721                           ;stkvar	_h @ sp[(0)+-1]
  4722  0181AA  0EFF               	movlw	-1
  4723  0181AC  50E3               	movf	plusw1,w,c
  4724  0181AE  6ED9               	movwf	fsr2l,c
  4725  0181B0  6ADA               	clrf	fsr2h,c
  4726  0181B2  0E03               	movlw	3
  4727  0181B4  26D9               	addwf	fsr2l,f,c
  4728  0181B6  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4729  0181BC                     l9214:
  4730                           
  4731                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4732  0181BC  0E03               	movlw	3
  4733  0181BE  6EE6               	movwf	postinc1,c
  4734  0181C0  EC37  F0C8         	call	_get_switch	;wreg free
  4735  0181C4  5025               	movf	btemp^0,w,c
  4736  0181C6  B4D8               	btfsc	status,2,c
  4737  0181C8  D01C               	goto	l1885
  4738                           
  4739                           ;hid.c: 11:   h->wait_enter = 0;
  4740                           ;stkvar	_h @ sp[(0)+-1]
  4741  0181CA  0EFF               	movlw	-1
  4742  0181CC  50E3               	movf	plusw1,w,c
  4743  0181CE  6ED9               	movwf	fsr2l,c
  4744  0181D0  6ADA               	clrf	fsr2h,c
  4745  0181D2  0E04               	movlw	4
  4746  0181D4  26D9               	addwf	fsr2l,f,c
  4747  0181D6  0E00               	movlw	0
  4748  0181D8  6EDF               	movwf	indf2,c
  4749                           
  4750                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4751  0181DA  0E03               	movlw	3
  4752  0181DC  6EE6               	movwf	postinc1,c
  4753  0181DE  EC37  F0C8         	call	_get_switch	;wreg free
  4754  0181E2  5025               	movf	btemp^0,w,c
  4755  0181E4  B4D8               	btfsc	status,2,c
  4756  0181E6  D003               	goto	u8610
  4757  0181E8  6A30               	clrf	(btemp+11)^0,c
  4758  0181EA  2A30               	incf	(btemp+11)^0,f,c
  4759  0181EC  D001               	goto	u8628
  4760  0181EE                     u8610:
  4761  0181EE  6A30               	clrf	(btemp+11)^0,c
  4762  0181F0                     u8628:
  4763                           
  4764                           ;stkvar	_h @ sp[(0)+-1]
  4765  0181F0  0EFF               	movlw	-1
  4766  0181F2  50E3               	movf	plusw1,w,c
  4767  0181F4  6ED9               	movwf	fsr2l,c
  4768  0181F6  6ADA               	clrf	fsr2h,c
  4769  0181F8  0E05               	movlw	5
  4770  0181FA  26D9               	addwf	fsr2l,f,c
  4771  0181FC  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4772  018202                     l1885:
  4773                           
  4774                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4775  018202  52E5               	movf	postdec1,f,c
  4776  018204  0012               	return		;funcret
  4777  018206                     __end_of_hid_input:
  4778                           	opt callstack 0
  4779                           
  4780 ;; *************** function _get_switch *****************
  4781 ;; Defined at:
  4782 ;;		line 18 in file "dio.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  i               1  [STACK] unsigned char 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1  [STACK] enum E17030
  4789 ;; Registers used:
  4790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/2
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    7
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_main
  4807 ;;		_hid_input
  4808 ;; This function uses a reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text15
  4812  01906E                     __ptext15:
  4813                           	opt callstack 0
  4814  01906E                     _get_switch:
  4815                           	opt callstack 21
  4816                           
  4817                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4818                           ;stkvar	_i @ sp[(0)+-1]
  4819                           
  4820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4821                           ;incstack = 0
  4822  01906E  0EFF               	movlw	-1
  4823  019070  006F FF8C  F025    	movff	plusw1,btemp
  4824  019076  0E03               	movlw	3
  4825  019078  6425               	cpfsgt	btemp^0,c
  4826  01907A  D002               	goto	l7906
  4827                           
  4828                           ;dio.c: 21:   return SW_OFF;
  4829  01907C  0E00               	movlw	0
  4830  01907E  D008               	goto	L2
  4831  019080                     l7906:
  4832                           
  4833                           ;dio.c: 23:  return S.button[i].sw;
  4834                           ;stkvar	_i @ sp[(0)+-1]
  4835  019080  0EFF               	movlw	-1
  4836  019082  50E3               	movf	plusw1,w,c
  4837  019084  0D05               	mullw	5
  4838  019086  50F3               	movf	243,w,c
  4839  019088  0F60               	addlw	low _S
  4840  01908A  6ED9               	movwf	fsr2l,c
  4841  01908C  6ADA               	clrf	fsr2h,c
  4842  01908E  50DF               	movf	indf2,w,c
  4843  019090                     L2:
  4844  019090  6E25               	movwf	btemp^0,c
  4845                           
  4846                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4847  019092  52E5               	movf	postdec1,f,c
  4848  019094  0012               	return		;funcret
  4849  019096                     __end_of_get_switch:
  4850                           	opt callstack 0
  4851                           
  4852 ;; *************** function _eaDogM_WriteCommand *****************
  4853 ;; Defined at:
  4854 ;;		line 173 in file "eadog.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  cmd             1  [STACK] const unsigned char 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1  [STACK] void 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4863 ;; Tracked objects:
  4864 ;;		On entry : 3F/3D
  4865 ;;		On exit  : 3F/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:   17
  4875 ;; This function calls:
  4876 ;;		_send_lcd_cmd_dma
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;; This function uses a reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text16
  4883  019614                     __ptext16:
  4884                           	opt callstack 0
  4885  019614                     _eaDogM_WriteCommand:
  4886                           	opt callstack 13
  4887                           
  4888                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  4889                           ;stkvar	_cmd @ sp[(0)+-1]
  4890                           
  4891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4892                           ;incstack = 0
  4893  019614  0EFF               	movlw	-1
  4894  019616  50E3               	movf	plusw1,w,c
  4895  019618  6EE6               	movwf	postinc1,c
  4896  01961A  EC59  F0C4         	call	_send_lcd_cmd_dma	;wreg free
  4897                           
  4898                           ; BSR set to: 0
  4899                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4900  01961E  52E5               	movf	postdec1,f,c
  4901  019620  0012               	return		;funcret
  4902  019622                     __end_of_eaDogM_WriteCommand:
  4903                           	opt callstack 0
  4904                           
  4905 ;; *************** function _convert_adc_data *****************
  4906 ;; Defined at:
  4907 ;;		line 40 in file "mbmc.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  i               1  [STACK] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1  [STACK] void 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/1
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:   10
  4928 ;; This function calls:
  4929 ;;		_conv_raw_result
  4930 ;;		_lp_filter
  4931 ;; This function is called by:
  4932 ;;		_main
  4933 ;; This function uses a reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text17
  4937  017BAE                     __ptext17:
  4938                           	opt callstack 0
  4939  017BAE                     _convert_adc_data:
  4940                           	opt callstack 0
  4941                           
  4942                           ; BSR set to: 0
  4943                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4944  017BAE  52E6               	movf	postinc1,f,c
  4945                           
  4946                           ;mbmc.c: 42:  uint8_t i = 0;
  4947                           ;stkvar	_i @ sp[(-1)+0]
  4948                           
  4949                           ;incstack = 0
  4950  017BB0  0EFF               	movlw	-1
  4951  017BB2  6AE3               	clrf	plusw1,c
  4952  017BB4                     l9480:
  4953                           
  4954                           ;mbmc.c: 45:   if (V.calib) {
  4955  017BB4  0102               	movlb	2	; () banked
  4956  017BB6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4957  017BB8  B4D8               	btfsc	status,2,c
  4958  017BBA  D01B               	goto	l9484
  4959                           
  4960                           ; BSR set to: 2
  4961                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4962  017BBC  0E01               	movlw	1
  4963  017BBE  6EE6               	movwf	postinc1,c
  4964                           
  4965                           ;stkvar	_i @ sp[(-2)+0]
  4966  017BC0  0EFE               	movlw	-2
  4967  017BC2  50E3               	movf	plusw1,w,c
  4968  017BC4  6EE6               	movwf	postinc1,c
  4969  017BC6  0E01               	movlw	1
  4970  017BC8  6EE6               	movwf	postinc1,c
  4971                           
  4972                           ;stkvar	_i @ sp[(-4)+0]
  4973  017BCA  0EFC               	movlw	-4
  4974  017BCC  50E3               	movf	plusw1,w,c
  4975  017BCE  6EE6               	movwf	postinc1,c
  4976  017BD0  EC41  F0A0         	call	_conv_raw_result	;wreg free
  4977  017BD4  0060  F097  FFE6   	movff	btemp,postinc1
  4978  017BDA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4979  017BE0  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4980  017BE6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4981  017BEC  EC35  F0B3         	call	_lp_filter	;wreg free
  4982  017BF0  D01A               	goto	L3
  4983  017BF2                     l9484:
  4984                           
  4985                           ; BSR set to: 2
  4986                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4987  017BF2  0E00               	movlw	0
  4988  017BF4  6EE6               	movwf	postinc1,c
  4989                           
  4990                           ;stkvar	_i @ sp[(-2)+0]
  4991  017BF6  0EFE               	movlw	-2
  4992  017BF8  50E3               	movf	plusw1,w,c
  4993  017BFA  6EE6               	movwf	postinc1,c
  4994  017BFC  0E00               	movlw	0
  4995  017BFE  6EE6               	movwf	postinc1,c
  4996                           
  4997                           ;stkvar	_i @ sp[(-4)+0]
  4998  017C00  0EFC               	movlw	-4
  4999  017C02  50E3               	movf	plusw1,w,c
  5000  017C04  6EE6               	movwf	postinc1,c
  5001  017C06  EC41  F0A0         	call	_conv_raw_result	;wreg free
  5002  017C0A  0060  F097  FFE6   	movff	btemp,postinc1
  5003  017C10  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5004  017C16  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5005  017C1C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5006  017C22  EC35  F0B3         	call	_lp_filter	;wreg free
  5007  017C26                     L3:
  5008                           
  5009                           ;stkvar	_i @ sp[(-1)+0]
  5010  017C26  0EFF               	movlw	-1
  5011  017C28  50E3               	movf	plusw1,w,c
  5012  017C2A  0D04               	mullw	4
  5013  017C2C  0E00               	movlw	low _C
  5014  017C2E  24F3               	addwf	243,w,c
  5015  017C30  6ED9               	movwf	fsr2l,c
  5016  017C32  0E01               	movlw	high _C
  5017  017C34  20F4               	addwfc	prodh,w,c
  5018  017C36  6EDA               	movwf	fsr2h,c
  5019  017C38  0060  F097  FFDE   	movff	btemp,postinc2
  5020  017C3E  0060  F09B  FFDE   	movff	btemp+1,postinc2
  5021  017C44  0060  F09F  FFDE   	movff	btemp+2,postinc2
  5022  017C4A  0060  F0A3  FFDE   	movff	btemp+3,postinc2
  5023                           
  5024                           ;mbmc.c: 50:  } while (++i < 16);
  5025                           ;stkvar	_i @ sp[(-1)+0]
  5026  017C50  0EFF               	movlw	-1
  5027  017C52  2AE3               	incf	plusw1,f,c
  5028  017C54  0EFF               	movlw	-1
  5029  017C56  006F FF8C  F025    	movff	plusw1,btemp
  5030  017C5C  0E0F               	movlw	15
  5031  017C5E  6425               	cpfsgt	btemp^0,c
  5032  017C60  D7A9               	goto	l9480
  5033                           
  5034                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5035  017C62  52E5               	movf	postdec1,f,c
  5036  017C64  0012               	return		;funcret
  5037  017C66                     __end_of_convert_adc_data:
  5038                           	opt callstack 0
  5039                           
  5040 ;; *************** function _conv_raw_result *****************
  5041 ;; Defined at:
  5042 ;;		line 80 in file "daq.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  chan            1  [STACK] const enum E16136
  5045 ;;  to_what         1  [STACK] const enum E16198
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  4  [STACK] float 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5052 ;; Tracked objects:
  5053 ;;		On entry : 3F/2
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    9
  5064 ;; This function calls:
  5065 ;;		___fldiv
  5066 ;;		___flmul
  5067 ;;		___flsub
  5068 ;;		___xxtofl
  5069 ;;		_get_raw_result
  5070 ;;		_nanf
  5071 ;; This function is called by:
  5072 ;;		_convert_adc_data
  5073 ;; This function uses a reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text18
  5077  014082                     __ptext18:
  5078                           	opt callstack 0
  5079  014082                     _conv_raw_result:
  5080                           	opt callstack 20
  5081                           
  5082                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5083                           
  5084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5085                           ;incstack = 0
  5086  014082  D242               	goto	l9148
  5087  014084                     l9094:
  5088                           
  5089                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5090                           ;stkvar	_chan @ sp[(0)+-1]
  5091  014084  0EFF               	movlw	-1
  5092  014086  006F FF8C  F030    	movff	plusw1,btemp+11
  5093  01408C  0E77               	movlw	119
  5094  01408E  6E2D               	movwf	(btemp+8)^0,c
  5095  014090  0E3C               	movlw	60
  5096  014092  6E2E               	movwf	(btemp+9)^0,c
  5097  014094  2A30               	incf	(btemp+11)^0,f,c
  5098  014096  D003               	goto	u8354
  5099  014098                     u8355:
  5100  014098  342E               	rlcf	(btemp+9)^0,w,c
  5101  01409A  322E               	rrcf	(btemp+9)^0,f,c
  5102  01409C  322D               	rrcf	(btemp+8)^0,f,c
  5103  01409E                     u8354:
  5104  01409E  2E30               	decfsz	(btemp+11)^0,f,c
  5105  0140A0  D7FB               	goto	u8355
  5106  0140A2  B02D               	btfsc	(btemp+8)^0,0,c
  5107  0140A4  D007               	goto	l9100
  5108                           
  5109                           ;daq.c: 86:    return nanf("");
  5110  0140A6  0E7F               	movlw	low (STR_39+18)
  5111  0140A8  6EE6               	movwf	postinc1,c
  5112  0140AA  0EFE               	movlw	high (STR_39+18)
  5113  0140AC  6EE6               	movwf	postinc1,c
  5114  0140AE  EC41  F0C3         	call	_nanf	;wreg free
  5115  0140B2  D23A               	goto	l1765
  5116  0140B4                     l9100:
  5117                           
  5118                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5119                           ;stkvar	_chan @ sp[(0)+-1]
  5120  0140B4  0EFF               	movlw	-1
  5121  0140B6  006F FF8C  F030    	movff	plusw1,btemp+11
  5122  0140BC  0E03               	movlw	3
  5123  0140BE  6E2D               	movwf	(btemp+8)^0,c
  5124  0140C0  0E00               	movlw	0
  5125  0140C2  6E2E               	movwf	(btemp+9)^0,c
  5126  0140C4  2A30               	incf	(btemp+11)^0,f,c
  5127  0140C6  D003               	goto	u8374
  5128  0140C8                     u8375:
  5129  0140C8  342E               	rlcf	(btemp+9)^0,w,c
  5130  0140CA  322E               	rrcf	(btemp+9)^0,f,c
  5131  0140CC  322D               	rrcf	(btemp+8)^0,f,c
  5132  0140CE                     u8374:
  5133  0140CE  2E30               	decfsz	(btemp+11)^0,f,c
  5134  0140D0  D7FB               	goto	u8375
  5135  0140D2  A02D               	btfss	(btemp+8)^0,0,c
  5136  0140D4  D0EB               	goto	l9114
  5137                           
  5138                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5139                           ;stkvar	_chan @ sp[(0)+-1]
  5140  0140D6  0EFF               	movlw	-1
  5141  0140D8  006F FF8C  F030    	movff	plusw1,btemp+11
  5142  0140DE  0E01               	movlw	1
  5143  0140E0  6E2D               	movwf	(btemp+8)^0,c
  5144  0140E2  0E00               	movlw	0
  5145  0140E4  6E2E               	movwf	(btemp+9)^0,c
  5146  0140E6  2A30               	incf	(btemp+11)^0,f,c
  5147  0140E8  D003               	goto	u8394
  5148  0140EA                     u8395:
  5149  0140EA  342E               	rlcf	(btemp+9)^0,w,c
  5150  0140EC  322E               	rrcf	(btemp+9)^0,f,c
  5151  0140EE  322D               	rrcf	(btemp+8)^0,f,c
  5152  0140F0                     u8394:
  5153  0140F0  2E30               	decfsz	(btemp+11)^0,f,c
  5154  0140F2  D7FB               	goto	u8395
  5155  0140F4  A02D               	btfss	(btemp+8)^0,0,c
  5156  0140F6  D06D               	goto	l9110
  5157                           
  5158                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5159  0140F8  0E7B               	movlw	123
  5160  0140FA  6EE6               	movwf	postinc1,c
  5161  0140FC  0E14               	movlw	20
  5162  0140FE  6EE6               	movwf	postinc1,c
  5163  014100  0EAE               	movlw	174
  5164  014102  6EE6               	movwf	postinc1,c
  5165  014104  0E3D               	movlw	61
  5166  014106  6EE6               	movwf	postinc1,c
  5167  014108  0060  F38C  F02D   	movff	_R+32,btemp+8	;volatile
  5168  01410E  0060  F390  F02E   	movff	_R+33,btemp+9	;volatile
  5169  014114  0E00               	movlw	0
  5170  014116  BE2E               	btfsc	(btemp+9)^0,7,c
  5171  014118  0EFF               	movlw	255
  5172  01411A  6E2F               	movwf	(btemp+10)^0,c
  5173  01411C  6E30               	movwf	(btemp+11)^0,c
  5174  01411E  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5175  014124  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5176  01412A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5177  014130  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5178  014136  0E01               	movlw	1
  5179  014138  6EE6               	movwf	postinc1,c
  5180  01413A  EC4F  F0B1         	call	___xxtofl	;wreg free
  5181  01413E  0060  F097  FFE6   	movff	btemp,postinc1
  5182  014144  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5183  01414A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5184  014150  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5185                           
  5186                           ;stkvar	_chan @ sp[(-8)+-1]
  5187  014156  0EF7               	movlw	-9
  5188  014158  50E3               	movf	plusw1,w,c
  5189  01415A  6EE6               	movwf	postinc1,c
  5190  01415C  EC39  F0CA         	call	_get_raw_result	;wreg free
  5191  014160  0060  F094  F02F   	movff	btemp,btemp+10
  5192  014166  0060  F098  F030   	movff	btemp+1,btemp+11
  5193  01416C  502F               	movf	(btemp+10)^0,w,c
  5194  01416E  6E29               	movwf	(btemp+4)^0,c
  5195  014170  5030               	movf	(btemp+11)^0,w,c
  5196  014172  6E2A               	movwf	(btemp+5)^0,c
  5197  014174  6A2B               	clrf	(btemp+6)^0,c
  5198  014176  6A2C               	clrf	(btemp+7)^0,c
  5199  014178  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5200  01417E  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5201  014184  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5202  01418A  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5203  014190  0E00               	movlw	0
  5204  014192  6EE6               	movwf	postinc1,c
  5205  014194  EC4F  F0B1         	call	___xxtofl	;wreg free
  5206  014198  0060  F097  FFE6   	movff	btemp,postinc1
  5207  01419E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5208  0141A4  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5209  0141AA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5210  0141B0  EC3E  F0C5         	call	___flsub	;wreg free
  5211  0141B4  0060  F097  FFE6   	movff	btemp,postinc1
  5212  0141BA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5213  0141C0  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5214  0141C6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5215  0141CC  EC14  F093         	call	___flmul	;wreg free
  5216  0141D0  D1AB               	goto	l1765
  5217  0141D2                     l9110:
  5218                           
  5219                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5220  0141D2  0E29               	movlw	41
  5221  0141D4  6EE6               	movwf	postinc1,c
  5222  0141D6  0E5C               	movlw	92
  5223  0141D8  6EE6               	movwf	postinc1,c
  5224  0141DA  0E0F               	movlw	15
  5225  0141DC  6EE6               	movwf	postinc1,c
  5226  0141DE  0E3D               	movlw	61
  5227  0141E0  6EE6               	movwf	postinc1,c
  5228  0141E2  0060  F394  F02D   	movff	_R+34,btemp+8	;volatile
  5229  0141E8  0060  F398  F02E   	movff	_R+35,btemp+9	;volatile
  5230  0141EE  0E00               	movlw	0
  5231  0141F0  BE2E               	btfsc	(btemp+9)^0,7,c
  5232  0141F2  0EFF               	movlw	255
  5233  0141F4  6E2F               	movwf	(btemp+10)^0,c
  5234  0141F6  6E30               	movwf	(btemp+11)^0,c
  5235  0141F8  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5236  0141FE  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5237  014204  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5238  01420A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5239  014210  0E01               	movlw	1
  5240  014212  6EE6               	movwf	postinc1,c
  5241  014214  EC4F  F0B1         	call	___xxtofl	;wreg free
  5242  014218  0060  F097  FFE6   	movff	btemp,postinc1
  5243  01421E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5244  014224  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5245  01422A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5246                           
  5247                           ;stkvar	_chan @ sp[(-8)+-1]
  5248  014230  0EF7               	movlw	-9
  5249  014232  50E3               	movf	plusw1,w,c
  5250  014234  6EE6               	movwf	postinc1,c
  5251  014236  EC39  F0CA         	call	_get_raw_result	;wreg free
  5252  01423A  0060  F094  F02F   	movff	btemp,btemp+10
  5253  014240  0060  F098  F030   	movff	btemp+1,btemp+11
  5254  014246  502F               	movf	(btemp+10)^0,w,c
  5255  014248  6E29               	movwf	(btemp+4)^0,c
  5256  01424A  5030               	movf	(btemp+11)^0,w,c
  5257  01424C  6E2A               	movwf	(btemp+5)^0,c
  5258  01424E  6A2B               	clrf	(btemp+6)^0,c
  5259  014250  6A2C               	clrf	(btemp+7)^0,c
  5260  014252  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5261  014258  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5262  01425E  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5263  014264  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5264  01426A  0E00               	movlw	0
  5265  01426C  6EE6               	movwf	postinc1,c
  5266  01426E  EC4F  F0B1         	call	___xxtofl	;wreg free
  5267  014272  0060  F097  FFE6   	movff	btemp,postinc1
  5268  014278  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5269  01427E  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5270  014284  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5271  01428A  EC3E  F0C5         	call	___flsub	;wreg free
  5272  01428E  0060  F097  FFE6   	movff	btemp,postinc1
  5273  014294  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5274  01429A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5275  0142A0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5276  0142A6  EC14  F093         	call	___flmul	;wreg free
  5277  0142AA  D13E               	goto	l1765
  5278  0142AC                     l9114:
  5279                           
  5280                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5281                           ;stkvar	_chan @ sp[(0)+-1]
  5282  0142AC  0EFF               	movlw	-1
  5283  0142AE  006F FF8C  F030    	movff	plusw1,btemp+11
  5284  0142B4  0E00               	movlw	0
  5285  0142B6  6E2D               	movwf	(btemp+8)^0,c
  5286  0142B8  0E08               	movlw	8
  5287  0142BA  6E2E               	movwf	(btemp+9)^0,c
  5288  0142BC  2A30               	incf	(btemp+11)^0,f,c
  5289  0142BE  D003               	goto	u8414
  5290  0142C0                     u8415:
  5291  0142C0  342E               	rlcf	(btemp+9)^0,w,c
  5292  0142C2  322E               	rrcf	(btemp+9)^0,f,c
  5293  0142C4  322D               	rrcf	(btemp+8)^0,f,c
  5294  0142C6                     u8414:
  5295  0142C6  2E30               	decfsz	(btemp+11)^0,f,c
  5296  0142C8  D7FB               	goto	u8415
  5297  0142CA  A02D               	btfss	(btemp+8)^0,0,c
  5298  0142CC  D008               	goto	l9122
  5299                           
  5300                           ;daq.c: 96:     return 25.0;
  5301  0142CE  0E00               	movlw	0
  5302  0142D0  6E25               	movwf	btemp^0,c
  5303  0142D2  0E00               	movlw	0
  5304  0142D4  6E26               	movwf	(btemp+1)^0,c
  5305  0142D6  0EC8               	movlw	200
  5306  0142D8  6E27               	movwf	(btemp+2)^0,c
  5307  0142DA  0E41               	movlw	65
  5308  0142DC  D113               	goto	L4
  5309  0142DE                     l9122:
  5310                           
  5311                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5312  0142DE  0E00               	movlw	0
  5313  0142E0  6EE6               	movwf	postinc1,c
  5314  0142E2  0E00               	movlw	0
  5315  0142E4  6EE6               	movwf	postinc1,c
  5316  0142E6  0E7A               	movlw	122
  5317  0142E8  6EE6               	movwf	postinc1,c
  5318  0142EA  0E44               	movlw	68
  5319  0142EC  6EE6               	movwf	postinc1,c
  5320  0142EE  0E61               	movlw	97
  5321  0142F0  6EE6               	movwf	postinc1,c
  5322  0142F2  0E03               	movlw	3
  5323  0142F4  6EE6               	movwf	postinc1,c
  5324  0142F6  0E84               	movlw	132
  5325  0142F8  6EE6               	movwf	postinc1,c
  5326  0142FA  0E40               	movlw	64
  5327  0142FC  6EE6               	movwf	postinc1,c
  5328                           
  5329                           ;stkvar	_chan @ sp[(-8)+-1]
  5330  0142FE  0EF7               	movlw	-9
  5331  014300  50E3               	movf	plusw1,w,c
  5332  014302  6EE6               	movwf	postinc1,c
  5333  014304  EC39  F0CA         	call	_get_raw_result	;wreg free
  5334  014308  0060  F094  F02F   	movff	btemp,btemp+10
  5335  01430E  0060  F098  F030   	movff	btemp+1,btemp+11
  5336  014314  502F               	movf	(btemp+10)^0,w,c
  5337  014316  6E29               	movwf	(btemp+4)^0,c
  5338  014318  5030               	movf	(btemp+11)^0,w,c
  5339  01431A  6E2A               	movwf	(btemp+5)^0,c
  5340  01431C  6A2B               	clrf	(btemp+6)^0,c
  5341  01431E  6A2C               	clrf	(btemp+7)^0,c
  5342  014320  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5343  014326  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5344  01432C  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5345  014332  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5346  014338  0E00               	movlw	0
  5347  01433A  6EE6               	movwf	postinc1,c
  5348  01433C  EC4F  F0B1         	call	___xxtofl	;wreg free
  5349  014340  0060  F097  FFE6   	movff	btemp,postinc1
  5350  014346  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5351  01434C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5352  014352  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5353  014358  EC14  F093         	call	___flmul	;wreg free
  5354  01435C  0060  F097  FFE6   	movff	btemp,postinc1
  5355  014362  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5356  014368  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5357  01436E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5358  014374  EC07  F09B         	call	___fldiv	;wreg free
  5359  014378  D0D7               	goto	l1765
  5360  01437A                     l9126:
  5361                           
  5362                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5363                           ;stkvar	_chan @ sp[(0)+-1]
  5364  01437A  0EFF               	movlw	-1
  5365  01437C  006F FF8C  F030    	movff	plusw1,btemp+11
  5366  014382  0E03               	movlw	3
  5367  014384  6E2D               	movwf	(btemp+8)^0,c
  5368  014386  0E00               	movlw	0
  5369  014388  6E2E               	movwf	(btemp+9)^0,c
  5370  01438A  2A30               	incf	(btemp+11)^0,f,c
  5371  01438C  D003               	goto	u8434
  5372  01438E                     u8435:
  5373  01438E  342E               	rlcf	(btemp+9)^0,w,c
  5374  014390  322E               	rrcf	(btemp+9)^0,f,c
  5375  014392  322D               	rrcf	(btemp+8)^0,f,c
  5376  014394                     u8434:
  5377  014394  2E30               	decfsz	(btemp+11)^0,f,c
  5378  014396  D7FB               	goto	u8435
  5379  014398  B02D               	btfsc	(btemp+8)^0,0,c
  5380  01439A  D011               	goto	u8460
  5381                           
  5382                           ;stkvar	_chan @ sp[(0)+-1]
  5383  01439C  0EFF               	movlw	-1
  5384  01439E  006F FF8C  F030    	movff	plusw1,btemp+11
  5385  0143A4  0E00               	movlw	0
  5386  0143A6  6E2D               	movwf	(btemp+8)^0,c
  5387  0143A8  0E08               	movlw	8
  5388  0143AA  6E2E               	movwf	(btemp+9)^0,c
  5389  0143AC  2A30               	incf	(btemp+11)^0,f,c
  5390  0143AE  D003               	goto	u8454
  5391  0143B0                     u8455:
  5392  0143B0  342E               	rlcf	(btemp+9)^0,w,c
  5393  0143B2  322E               	rrcf	(btemp+9)^0,f,c
  5394  0143B4  322D               	rrcf	(btemp+8)^0,f,c
  5395  0143B6                     u8454:
  5396  0143B6  2E30               	decfsz	(btemp+11)^0,f,c
  5397  0143B8  D7FB               	goto	u8455
  5398  0143BA  A02D               	btfss	(btemp+8)^0,0,c
  5399  0143BC  D04E               	goto	l9134
  5400  0143BE                     u8460:
  5401                           
  5402                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5403  0143BE  0E00               	movlw	0
  5404  0143C0  6EE6               	movwf	postinc1,c
  5405  0143C2  0E00               	movlw	0
  5406  0143C4  6EE6               	movwf	postinc1,c
  5407  0143C6  0E7A               	movlw	122
  5408  0143C8  6EE6               	movwf	postinc1,c
  5409  0143CA  0E44               	movlw	68
  5410  0143CC  6EE6               	movwf	postinc1,c
  5411  0143CE  0E00               	movlw	0
  5412  0143D0  6EE6               	movwf	postinc1,c
  5413  0143D2  0E00               	movlw	0
  5414  0143D4  6EE6               	movwf	postinc1,c
  5415  0143D6  0E20               	movlw	32
  5416  0143D8  6EE6               	movwf	postinc1,c
  5417  0143DA  0E3F               	movlw	63
  5418  0143DC  6EE6               	movwf	postinc1,c
  5419                           
  5420                           ;stkvar	_chan @ sp[(-8)+-1]
  5421  0143DE  0EF7               	movlw	-9
  5422  0143E0  50E3               	movf	plusw1,w,c
  5423  0143E2  6EE6               	movwf	postinc1,c
  5424  0143E4  EC39  F0CA         	call	_get_raw_result	;wreg free
  5425  0143E8  0060  F094  F02F   	movff	btemp,btemp+10
  5426  0143EE  0060  F098  F030   	movff	btemp+1,btemp+11
  5427  0143F4  502F               	movf	(btemp+10)^0,w,c
  5428  0143F6  6E29               	movwf	(btemp+4)^0,c
  5429  0143F8  5030               	movf	(btemp+11)^0,w,c
  5430  0143FA  6E2A               	movwf	(btemp+5)^0,c
  5431  0143FC  6A2B               	clrf	(btemp+6)^0,c
  5432  0143FE  6A2C               	clrf	(btemp+7)^0,c
  5433  014400  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5434  014406  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5435  01440C  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5436  014412  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5437  014418  0E00               	movlw	0
  5438  01441A  6EE6               	movwf	postinc1,c
  5439  01441C  EC4F  F0B1         	call	___xxtofl	;wreg free
  5440  014420  0060  F097  FFE6   	movff	btemp,postinc1
  5441  014426  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5442  01442C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5443  014432  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5444  014438  EC14  F093         	call	___flmul	;wreg free
  5445  01443C  0060  F097  FFE6   	movff	btemp,postinc1
  5446  014442  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5447  014448  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5448  01444E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5449  014454  EC07  F09B         	call	___fldiv	;wreg free
  5450  014458  D067               	goto	l1765
  5451  01445A                     l9134:
  5452                           
  5453                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5454  01445A  0E00               	movlw	0
  5455  01445C  6EE6               	movwf	postinc1,c
  5456  01445E  0E00               	movlw	0
  5457  014460  6EE6               	movwf	postinc1,c
  5458  014462  0E7A               	movlw	122
  5459  014464  6EE6               	movwf	postinc1,c
  5460  014466  0E44               	movlw	68
  5461  014468  6EE6               	movwf	postinc1,c
  5462  01446A  0E61               	movlw	97
  5463  01446C  6EE6               	movwf	postinc1,c
  5464  01446E  0E03               	movlw	3
  5465  014470  6EE6               	movwf	postinc1,c
  5466  014472  0E84               	movlw	132
  5467  014474  6EE6               	movwf	postinc1,c
  5468  014476  0E40               	movlw	64
  5469  014478  6EE6               	movwf	postinc1,c
  5470                           
  5471                           ;stkvar	_chan @ sp[(-8)+-1]
  5472  01447A  0EF7               	movlw	-9
  5473  01447C  50E3               	movf	plusw1,w,c
  5474  01447E  6EE6               	movwf	postinc1,c
  5475  014480  EC39  F0CA         	call	_get_raw_result	;wreg free
  5476  014484  0060  F094  F02F   	movff	btemp,btemp+10
  5477  01448A  0060  F098  F030   	movff	btemp+1,btemp+11
  5478  014490  502F               	movf	(btemp+10)^0,w,c
  5479  014492  6E29               	movwf	(btemp+4)^0,c
  5480  014494  5030               	movf	(btemp+11)^0,w,c
  5481  014496  6E2A               	movwf	(btemp+5)^0,c
  5482  014498  6A2B               	clrf	(btemp+6)^0,c
  5483  01449A  6A2C               	clrf	(btemp+7)^0,c
  5484  01449C  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5485  0144A2  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5486  0144A8  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5487  0144AE  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5488  0144B4  0E00               	movlw	0
  5489  0144B6  6EE6               	movwf	postinc1,c
  5490  0144B8  EC4F  F0B1         	call	___xxtofl	;wreg free
  5491  0144BC  0060  F097  FFE6   	movff	btemp,postinc1
  5492  0144C2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5493  0144C8  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5494  0144CE  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5495  0144D4  EC14  F093         	call	___flmul	;wreg free
  5496  0144D8  0060  F097  FFE6   	movff	btemp,postinc1
  5497  0144DE  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5498  0144E4  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5499  0144EA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5500  0144F0  EC07  F09B         	call	___fldiv	;wreg free
  5501  0144F4  D019               	goto	l1765
  5502  0144F6                     l9140:
  5503                           
  5504                           ;daq.c: 109:   return 0.0;
  5505  0144F6  0E00               	movlw	0
  5506  0144F8  6E25               	movwf	btemp^0,c
  5507  0144FA  0E00               	movlw	0
  5508  0144FC  6E26               	movwf	(btemp+1)^0,c
  5509  0144FE  0E00               	movlw	0
  5510  014500  6E27               	movwf	(btemp+2)^0,c
  5511  014502  0E00               	movlw	0
  5512  014504                     L4:
  5513  014504  6E28               	movwf	(btemp+3)^0,c
  5514  014506  D010               	goto	l1765
  5515  014508                     l9148:
  5516                           
  5517                           ;stkvar	_to_what @ sp[(0)+-2]
  5518  014508  0EFE               	movlw	-2
  5519  01450A  50E3               	movf	plusw1,w,c
  5520  01450C  6E2F               	movwf	(btemp+10)^0,c
  5521  01450E  6A30               	clrf	(btemp+11)^0,c
  5522                           
  5523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5524                           ; Switch size 1, requested type "simple"
  5525                           ; Number of cases is 1, Range of values is 0 to 0
  5526                           ; switch strategies available:
  5527                           ; Name         Instructions Cycles
  5528                           ; simple_byte            4     3 (average)
  5529                           ;	Chosen strategy is simple_byte
  5530  014510  5030               	movf	(btemp+11)^0,w,c
  5531  014512  0A00               	xorlw	0	; case 0
  5532  014514  A4D8               	btfss	status,2,c
  5533  014516  D7EF               	goto	l9140
  5534                           
  5535                           ; Switch size 1, requested type "simple"
  5536                           ; Number of cases is 2, Range of values is 0 to 1
  5537                           ; switch strategies available:
  5538                           ; Name         Instructions Cycles
  5539                           ; simple_byte            7     4 (average)
  5540                           ;	Chosen strategy is simple_byte
  5541  014518  502F               	movf	(btemp+10)^0,w,c
  5542  01451A  0A00               	xorlw	0	; case 0
  5543  01451C  B4D8               	btfsc	status,2,c
  5544  01451E  D5B2               	goto	l9094
  5545  014520  0A01               	xorlw	1	; case 1
  5546  014522  B4D8               	btfsc	status,2,c
  5547  014524  D72A               	goto	l9126
  5548  014526  D7E7               	goto	l9140
  5549  014528                     l1765:
  5550                           
  5551                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5552  014528  52E5               	movf	postdec1,f,c
  5553  01452A  52E5               	movf	postdec1,f,c
  5554  01452C  0012               	return		;funcret
  5555  01452E                     __end_of_conv_raw_result:
  5556                           	opt callstack 0
  5557                           
  5558 ;; *************** function _nanf *****************
  5559 ;; Defined at:
  5560 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  s               2  [STACK] PTR const unsigned char 
  5563 ;;		 -> STR_45(1), 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  u               4  [STACK] struct .
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  4  [STACK] float 
  5568 ;; Registers used:
  5569 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/2
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    7
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_conv_raw_result
  5586 ;; This function uses a reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text19
  5590  018682                     __ptext19:
  5591                           	opt callstack 0
  5592  018682                     _nanf:
  5593                           	opt callstack 0
  5594                           
  5595                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5596  018682  52E6               	movf	postinc1,f,c
  5597  018684  52E6               	movf	postinc1,f,c
  5598  018686  52E6               	movf	postinc1,f,c
  5599  018688  52E6               	movf	postinc1,f,c
  5600                           
  5601                           ;incstack = 0
  5602  01868A  0EFF               	movlw	255
  5603  01868C  6E2D               	movwf	(btemp+8)^0,c
  5604  01868E  0EFF               	movlw	255
  5605  018690  6E2E               	movwf	(btemp+9)^0,c
  5606  018692  0EFF               	movlw	255
  5607  018694  6E2F               	movwf	(btemp+10)^0,c
  5608  018696  0E7F               	movlw	127
  5609  018698  6E30               	movwf	(btemp+11)^0,c
  5610                           
  5611                           ;stkvar	_u @ sp[(-4)+0]
  5612  01869A  0EFC               	movlw	-4
  5613  01869C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5614  0186A2  0EFD               	movlw	-3
  5615  0186A4  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5616  0186AA  0EFE               	movlw	-2
  5617  0186AC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5618  0186B2  0EFF               	movlw	-1
  5619  0186B4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5620                           
  5621                           ;stkvar	_u @ sp[(-4)+0]
  5622  0186BA  0EFC               	movlw	-4
  5623  0186BC  006F FF8C  F025    	movff	plusw1,btemp
  5624  0186C2  0EFD               	movlw	-3
  5625  0186C4  006F FF8C  F026    	movff	plusw1,btemp+1
  5626  0186CA  0EFE               	movlw	-2
  5627  0186CC  006F FF8C  F027    	movff	plusw1,btemp+2
  5628  0186D2  0EFF               	movlw	-1
  5629  0186D4  006F FF8C  F028    	movff	plusw1,btemp+3
  5630                           
  5631                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5632  0186DA  0EFA               	movlw	250
  5633  0186DC  26E1               	addwf	fsr1l,f,c
  5634  0186DE  0EFF               	movlw	255
  5635  0186E0  22E2               	addwfc	fsr1h,f,c
  5636  0186E2  0012               	return		;funcret
  5637  0186E4                     __end_of_nanf:
  5638                           	opt callstack 0
  5639                           
  5640 ;; *************** function _get_raw_result *****************
  5641 ;; Defined at:
  5642 ;;		line 72 in file "daq.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  index           1  [STACK] const enum E16136
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  2  [STACK] unsigned short 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/2
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5660 ;;Total ram usage:        0 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    7
  5663 ;; This function calls:
  5664 ;;		Nothing
  5665 ;; This function is called by:
  5666 ;;		_main
  5667 ;;		_conv_raw_result
  5668 ;; This function uses a reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text20
  5672  019472                     __ptext20:
  5673                           	opt callstack 0
  5674  019472                     _get_raw_result:
  5675                           	opt callstack 23
  5676                           
  5677                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5678                           ;stkvar	_index @ sp[(0)+-1]
  5679                           
  5680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5681                           ;incstack = 0
  5682  019472  0EFF               	movlw	-1
  5683  019474  50E3               	movf	plusw1,w,c
  5684  019476  0D02               	mullw	2
  5685  019478  50F3               	movf	243,w,c
  5686  01947A  0FC3               	addlw	low _R
  5687  01947C  6ED9               	movwf	fsr2l,c
  5688  01947E  6ADA               	clrf	fsr2h,c
  5689  019480  006F FF78  F025    	movff	postinc2,btemp
  5690  019486  006F FF74  F026    	movff	postdec2,btemp+1
  5691                           
  5692                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5693  01948C  52E5               	movf	postdec1,f,c
  5694  01948E  0012               	return		;funcret
  5695  019490                     __end_of_get_raw_result:
  5696                           	opt callstack 0
  5697                           
  5698 ;; *************** function ___xxtofl *****************
  5699 ;; Defined at:
  5700 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  sign            1  [STACK] unsigned char 
  5703 ;;  val             4  [STACK] long 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  arg             4  [STACK] unsigned long 
  5706 ;;  exp             1  [STACK] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  4  [STACK] unsigned char 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/2
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5720 ;;Total ram usage:        0 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    7
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_conv_raw_result
  5727 ;; This function uses a reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text21
  5731  01629E                     __ptext21:
  5732                           	opt callstack 0
  5733  01629E                     ___xxtofl:
  5734                           	opt callstack 0
  5735                           
  5736                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5737  01629E  0E05               	movlw	5
  5738  0162A0  26E1               	addwf	fsr1l,f,c
  5739  0162A2  0E00               	movlw	0
  5740  0162A4  22E2               	addwfc	fsr1h,f,c
  5741                           
  5742                           ;stkvar	_sign @ sp[(-5)+-1]
  5743                           
  5744                           ;incstack = 0
  5745  0162A6  0EFA               	movlw	-6
  5746  0162A8  50E3               	movf	plusw1,w,c
  5747  0162AA  B4D8               	btfsc	status,2,c
  5748  0162AC  D01D               	goto	l8532
  5749                           
  5750                           ;stkvar	_val @ sp[(-5)+-5]
  5751  0162AE  0EF9               	movlw	-7
  5752  0162B0  AEE3               	btfss	plusw1,7,c
  5753  0162B2  D01A               	goto	l8532
  5754                           
  5755                           ;stkvar	_val @ sp[(-5)+-5]
  5756  0162B4  0EF6               	movlw	-10
  5757  0162B6  006F FF8C  F02D    	movff	plusw1,btemp+8
  5758  0162BC  0EF7               	movlw	-9
  5759  0162BE  006F FF8C  F02E    	movff	plusw1,btemp+9
  5760  0162C4  0EF8               	movlw	-8
  5761  0162C6  006F FF8C  F02F    	movff	plusw1,btemp+10
  5762  0162CC  0EF9               	movlw	-7
  5763  0162CE  006F FF8C  F030    	movff	plusw1,btemp+11
  5764  0162D4  1E2D               	comf	(btemp+8)^0,f,c
  5765  0162D6  1E2E               	comf	(btemp+9)^0,f,c
  5766  0162D8  1E2F               	comf	(btemp+10)^0,f,c
  5767  0162DA  1E30               	comf	(btemp+11)^0,f,c
  5768  0162DC  2A2D               	incf	(btemp+8)^0,f,c
  5769  0162DE  0E00               	movlw	0
  5770  0162E0  222E               	addwfc	(btemp+9)^0,f,c
  5771  0162E2  222F               	addwfc	(btemp+10)^0,f,c
  5772  0162E4  2230               	addwfc	(btemp+11)^0,f,c
  5773  0162E6  D010               	goto	L5
  5774  0162E8                     l8532:
  5775                           
  5776                           ;stkvar	_val @ sp[(-5)+-5]
  5777  0162E8  0EF6               	movlw	-10
  5778  0162EA  006F FF8C  F02D    	movff	plusw1,btemp+8
  5779  0162F0  0EF7               	movlw	-9
  5780  0162F2  006F FF8C  F02E    	movff	plusw1,btemp+9
  5781  0162F8  0EF8               	movlw	-8
  5782  0162FA  006F FF8C  F02F    	movff	plusw1,btemp+10
  5783  016300  0EF9               	movlw	-7
  5784  016302  006F FF8C  F030    	movff	plusw1,btemp+11
  5785  016308                     L5:
  5786                           
  5787                           ;stkvar	_arg @ sp[(-5)+0]
  5788  016308  0EFB               	movlw	-5
  5789  01630A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5790  016310  0EFC               	movlw	-4
  5791  016312  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5792  016318  0EFD               	movlw	-3
  5793  01631A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5794  016320  0EFE               	movlw	-2
  5795  016322  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5796                           
  5797                           ;stkvar	_val @ sp[(-5)+-5]
  5798  016328  0EF6               	movlw	-10
  5799  01632A  50E3               	movf	plusw1,w,c
  5800  01632C  E113               	bnz	l8540
  5801  01632E  0EF7               	movlw	-9
  5802  016330  50E3               	movf	plusw1,w,c
  5803  016332  E110               	bnz	l8540
  5804  016334  0EF8               	movlw	-8
  5805  016336  50E3               	movf	plusw1,w,c
  5806  016338  E10D               	bnz	l8540
  5807  01633A  0EF9               	movlw	-7
  5808  01633C  50E3               	movf	plusw1,w,c
  5809  01633E  A4D8               	btfss	status,2,c
  5810  016340  D009               	goto	l8540
  5811  016342  0E00               	movlw	0
  5812  016344  6E25               	movwf	btemp^0,c
  5813  016346  0E00               	movlw	0
  5814  016348  6E26               	movwf	(btemp+1)^0,c
  5815  01634A  0E00               	movlw	0
  5816  01634C  6E27               	movwf	(btemp+2)^0,c
  5817  01634E  0E00               	movlw	0
  5818  016350  6E28               	movwf	(btemp+3)^0,c
  5819  016352  D0A2               	goto	l2885
  5820  016354                     l8540:
  5821  016354  0E96               	movlw	150
  5822  016356  6E30               	movwf	(btemp+11)^0,c
  5823                           
  5824                           ;stkvar	_exp @ sp[(-5)+4]
  5825  016358  0EFF               	movlw	-1
  5826  01635A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5827  016360  D00B               	goto	l8544
  5828  016362                     l8542:
  5829                           
  5830                           ;stkvar	_exp @ sp[(-5)+4]
  5831  016362  0EFF               	movlw	-1
  5832  016364  2AE3               	incf	plusw1,f,c
  5833                           
  5834                           ;stkvar	_arg @ sp[(-5)+0]
  5835  016366  90D8               	bcf	status,0,c
  5836  016368  0EFE               	movlw	-2
  5837  01636A  32E3               	rrcf	plusw1,f,c
  5838  01636C  0EFD               	movlw	-3
  5839  01636E  32E3               	rrcf	plusw1,f,c
  5840  016370  0EFC               	movlw	-4
  5841  016372  32E3               	rrcf	plusw1,f,c
  5842  016374  0EFB               	movlw	-5
  5843  016376  32E3               	rrcf	plusw1,f,c
  5844  016378                     l8544:
  5845                           
  5846                           ;stkvar	_arg @ sp[(-5)+0]
  5847  016378  50E1               	movf	fsr1l,w,c
  5848  01637A  0FFB               	addlw	-5
  5849  01637C  6ED9               	movwf	fsr2l,c
  5850  01637E  50E2               	movf	fsr1h,w,c
  5851  016380  6EDA               	movwf	fsr2h,c
  5852  016382  0EFF               	movlw	255
  5853  016384  22DA               	addwfc	fsr2h,f,c
  5854  016386  52DE               	movf	postinc2,f,c
  5855  016388  52DE               	movf	postinc2,f,c
  5856  01638A  52DE               	movf	postinc2,f,c
  5857  01638C  0EFE               	movlw	254
  5858  01638E  14DD               	andwf	postdec2,w,c
  5859  016390  B4D8               	btfsc	status,2,c
  5860  016392  D018               	goto	l8552
  5861  016394  D7E6               	goto	l8542
  5862  016396                     l8546:
  5863                           
  5864                           ;stkvar	_exp @ sp[(-5)+4]
  5865  016396  0EFF               	movlw	-1
  5866  016398  2AE3               	incf	plusw1,f,c
  5867                           
  5868                           ;stkvar	_arg @ sp[(-5)+0]
  5869  01639A  50E1               	movf	fsr1l,w,c
  5870  01639C  0FFB               	addlw	-5
  5871  01639E  6ED9               	movwf	fsr2l,c
  5872  0163A0  50E2               	movf	fsr1h,w,c
  5873  0163A2  6EDA               	movwf	fsr2h,c
  5874  0163A4  0EFF               	movlw	255
  5875  0163A6  22DA               	addwfc	fsr2h,f,c
  5876  0163A8  2ADE               	incf	postinc2,f,c
  5877  0163AA  0E00               	movlw	0
  5878  0163AC  22DE               	addwfc	postinc2,f,c
  5879  0163AE  22DE               	addwfc	postinc2,f,c
  5880  0163B0  22DE               	addwfc	postinc2,f,c
  5881                           
  5882                           ;stkvar	_arg @ sp[(-5)+0]
  5883  0163B2  90D8               	bcf	status,0,c
  5884  0163B4  0EFE               	movlw	-2
  5885  0163B6  32E3               	rrcf	plusw1,f,c
  5886  0163B8  0EFD               	movlw	-3
  5887  0163BA  32E3               	rrcf	plusw1,f,c
  5888  0163BC  0EFC               	movlw	-4
  5889  0163BE  32E3               	rrcf	plusw1,f,c
  5890  0163C0  0EFB               	movlw	-5
  5891  0163C2  32E3               	rrcf	plusw1,f,c
  5892  0163C4                     l8552:
  5893                           
  5894                           ;stkvar	_arg @ sp[(-5)+0]
  5895  0163C4  50E1               	movf	fsr1l,w,c
  5896  0163C6  0FFB               	addlw	-5
  5897  0163C8  6ED9               	movwf	fsr2l,c
  5898  0163CA  50E2               	movf	fsr1h,w,c
  5899  0163CC  6EDA               	movwf	fsr2h,c
  5900  0163CE  0EFF               	movlw	255
  5901  0163D0  22DA               	addwfc	fsr2h,f,c
  5902  0163D2  52DE               	movf	postinc2,f,c
  5903  0163D4  52DE               	movf	postinc2,f,c
  5904  0163D6  52DE               	movf	postinc2,f,c
  5905  0163D8  0EFF               	movlw	255
  5906  0163DA  14DD               	andwf	postdec2,w,c
  5907  0163DC  B4D8               	btfsc	status,2,c
  5908  0163DE  D00C               	goto	l8556
  5909  0163E0  D7DA               	goto	l8546
  5910  0163E2                     l8554:
  5911                           
  5912                           ;stkvar	_exp @ sp[(-5)+4]
  5913  0163E2  0EFF               	movlw	-1
  5914  0163E4  06E3               	decf	plusw1,f,c
  5915                           
  5916                           ;stkvar	_arg @ sp[(-5)+0]
  5917  0163E6  90D8               	bcf	status,0,c
  5918  0163E8  0EFB               	movlw	-5
  5919  0163EA  36E3               	rlcf	plusw1,f,c
  5920  0163EC  0EFC               	movlw	-4
  5921  0163EE  36E3               	rlcf	plusw1,f,c
  5922  0163F0  0EFD               	movlw	-3
  5923  0163F2  36E3               	rlcf	plusw1,f,c
  5924  0163F4  0EFE               	movlw	-2
  5925  0163F6  36E3               	rlcf	plusw1,f,c
  5926  0163F8                     l8556:
  5927                           
  5928                           ;stkvar	_arg @ sp[(-5)+0]
  5929  0163F8  0EFD               	movlw	-3
  5930  0163FA  BEE3               	btfsc	plusw1,7,c
  5931  0163FC  D007               	goto	u8150
  5932                           
  5933                           ;stkvar	_exp @ sp[(-5)+4]
  5934  0163FE  0EFF               	movlw	-1
  5935  016400  006F FF8C  F025    	movff	plusw1,btemp
  5936  016406  0E02               	movlw	2
  5937  016408  6025               	cpfslt	btemp^0,c
  5938  01640A  D7EB               	goto	l8554
  5939  01640C                     u8150:
  5940                           
  5941                           ;stkvar	_exp @ sp[(-5)+4]
  5942  01640C  0EFF               	movlw	-1
  5943  01640E  B0E3               	btfsc	plusw1,0,c
  5944  016410  D002               	goto	l8564
  5945                           
  5946                           ;stkvar	_arg @ sp[(-5)+0]
  5947  016412  0EFD               	movlw	-3
  5948  016414  9EE3               	bcf	plusw1,7,c
  5949  016416                     l8564:
  5950                           
  5951                           ;stkvar	_exp @ sp[(-5)+4]
  5952  016416  50E1               	movf	fsr1l,w,c
  5953  016418  0FFF               	addlw	-1
  5954  01641A  6ED9               	movwf	fsr2l,c
  5955  01641C  50E2               	movf	fsr1h,w,c
  5956  01641E  6EDA               	movwf	fsr2h,c
  5957  016420  0EFF               	movlw	255
  5958  016422  22DA               	addwfc	fsr2h,f,c
  5959  016424  90D8               	bcf	status,0,c
  5960  016426  32DF               	rrcf	indf2,f,c
  5961                           
  5962                           ;stkvar	_exp @ sp[(-5)+4]
  5963  016428  0EFF               	movlw	-1
  5964  01642A  006F FF8C  F030    	movff	plusw1,btemp+11
  5965  016430  0060  F0C0  F029   	movff	btemp+11,btemp+4
  5966  016436  6A2A               	clrf	(btemp+5)^0,c
  5967  016438  6A2B               	clrf	(btemp+6)^0,c
  5968  01643A  6A2C               	clrf	(btemp+7)^0,c
  5969  01643C  0060  F0A4  F02C   	movff	btemp+4,btemp+7
  5970  016442  6A2B               	clrf	(btemp+6)^0,c
  5971  016444  6A2A               	clrf	(btemp+5)^0,c
  5972  016446  6A29               	clrf	(btemp+4)^0,c
  5973                           
  5974                           ;stkvar	_arg @ sp[(-5)+0]
  5975  016448  50E1               	movf	fsr1l,w,c
  5976  01644A  0FFB               	addlw	-5
  5977  01644C  6ED9               	movwf	fsr2l,c
  5978  01644E  50E2               	movf	fsr1h,w,c
  5979  016450  6EDA               	movwf	fsr2h,c
  5980  016452  0EFF               	movlw	255
  5981  016454  22DA               	addwfc	fsr2h,f,c
  5982  016456  5029               	movf	(btemp+4)^0,w,c
  5983  016458  12DE               	iorwf	postinc2,f,c
  5984  01645A  502A               	movf	(btemp+5)^0,w,c
  5985  01645C  12DE               	iorwf	postinc2,f,c
  5986  01645E  502B               	movf	(btemp+6)^0,w,c
  5987  016460  12DE               	iorwf	postinc2,f,c
  5988  016462  502C               	movf	(btemp+7)^0,w,c
  5989  016464  12DE               	iorwf	postinc2,f,c
  5990                           
  5991                           ;stkvar	_sign @ sp[(-5)+-1]
  5992  016466  0EFA               	movlw	-6
  5993  016468  50E3               	movf	plusw1,w,c
  5994  01646A  B4D8               	btfsc	status,2,c
  5995  01646C  D005               	goto	l8574
  5996                           
  5997                           ;stkvar	_val @ sp[(-5)+-5]
  5998  01646E  0EF9               	movlw	-7
  5999  016470  AEE3               	btfss	plusw1,7,c
  6000  016472  D002               	goto	l8574
  6001                           
  6002                           ;stkvar	_arg @ sp[(-5)+0]
  6003  016474  0EFE               	movlw	-2
  6004  016476  8EE3               	bsf	plusw1,7,c
  6005  016478                     l8574:
  6006                           
  6007                           ;stkvar	_arg @ sp[(-5)+0]
  6008  016478  0EFB               	movlw	-5
  6009  01647A  006F FF8C  F025    	movff	plusw1,btemp
  6010  016480  0EFC               	movlw	-4
  6011  016482  006F FF8C  F026    	movff	plusw1,btemp+1
  6012  016488  0EFD               	movlw	-3
  6013  01648A  006F FF8C  F027    	movff	plusw1,btemp+2
  6014  016490  0EFE               	movlw	-2
  6015  016492  006F FF8C  F028    	movff	plusw1,btemp+3
  6016  016498                     l2885:
  6017                           
  6018                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6019  016498  0EF6               	movlw	246
  6020  01649A  26E1               	addwf	fsr1l,f,c
  6021  01649C  0EFF               	movlw	255
  6022  01649E  22E2               	addwfc	fsr1h,f,c
  6023  0164A0  0012               	return		;funcret
  6024  0164A2                     __end_of___xxtofl:
  6025                           	opt callstack 0
  6026                           
  6027 ;; *************** function _clear_hid_pflags *****************
  6028 ;; Defined at:
  6029 ;;		line 51 in file "hid.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;  h               1  [STACK] PTR struct H_data
  6032 ;;		 -> H(7), 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1  [STACK] void 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 3F/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6048 ;;Total ram usage:        0 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    7
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_main
  6055 ;; This function uses a reentrant model
  6056 ;;
  6057                           
  6058                           	psect	text22
  6059  01933E                     __ptext22:
  6060                           	opt callstack 0
  6061  01933E                     _clear_hid_pflags:
  6062                           	opt callstack 23
  6063                           
  6064                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6065                           ;stkvar	_h @ sp[(0)+-1]
  6066                           
  6067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6068                           ;incstack = 0
  6069  01933E  0EFF               	movlw	-1
  6070  019340  50E3               	movf	plusw1,w,c
  6071  019342  6ED9               	movwf	fsr2l,c
  6072  019344  6ADA               	clrf	fsr2h,c
  6073  019346  0E03               	movlw	3
  6074  019348  26D9               	addwf	fsr2l,f,c
  6075  01934A  0E00               	movlw	0
  6076  01934C  6EDF               	movwf	indf2,c
  6077                           
  6078                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6079                           ;stkvar	_h @ sp[(0)+-1]
  6080  01934E  0EFF               	movlw	-1
  6081  019350  50E3               	movf	plusw1,w,c
  6082  019352  6ED9               	movwf	fsr2l,c
  6083  019354  6ADA               	clrf	fsr2h,c
  6084  019356  0E05               	movlw	5
  6085  019358  26D9               	addwf	fsr2l,f,c
  6086  01935A  0E00               	movlw	0
  6087  01935C  6EDF               	movwf	indf2,c
  6088                           
  6089                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6090  01935E  52E5               	movf	postdec1,f,c
  6091  019360  0012               	return		;funcret
  6092  019362                     __end_of_clear_hid_pflags:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _clear_adc_scan *****************
  6096 ;; Defined at:
  6097 ;;		line 64 in file "daq.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1  [STACK] void 
  6104 ;; Registers used:
  6105 ;;		None
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/1
  6108 ;;		On exit  : 3F/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    7
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;; This function uses a reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text23
  6126  0196A2                     __ptext23:
  6127                           	opt callstack 0
  6128  0196A2                     _clear_adc_scan:
  6129                           	opt callstack 23
  6130                           
  6131                           ;daq.c: 66:  R.done = 0;
  6132                           
  6133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6134                           ;incstack = 0
  6135  0196A2  0100               	movlb	0	; () banked
  6136  0196A4  6BEA               	clrf	(_R+39)& (0+255),b	;volatile
  6137                           
  6138                           ; BSR set to: 0
  6139                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6140  0196A6  0012               	return		;funcret
  6141  0196A8                     __end_of_clear_adc_scan:
  6142                           	opt callstack 0
  6143                           
  6144 ;; *************** function _check_help *****************
  6145 ;; Defined at:
  6146 ;;		line 40 in file "mconfig.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  flipper         1  [STACK] const _Bool 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  estatus         1    0        _Bool 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1  [STACK] _Bool 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6155 ;; Tracked objects:
  6156 ;;		On entry : 3F/2
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:   19
  6167 ;; This function calls:
  6168 ;;		_StartTimer
  6169 ;;		_TimerDone
  6170 ;;		_display_help
  6171 ;;		_display_info
  6172 ;;		_get_vterm_ptr
  6173 ;;		_help_button
  6174 ;;		_mode_lamp_bright
  6175 ;;		_mode_lamp_dim
  6176 ;;		_set_display_info
  6177 ;;		_set_temp_display_help
  6178 ;;		_set_vterm
  6179 ;;		_sprintf
  6180 ;;		_update_lcd
  6181 ;;		_vterm_dump
  6182 ;; This function is called by:
  6183 ;;		_main
  6184 ;; This function uses a reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text24
  6188  01608C                     __ptext24:
  6189                           	opt callstack 0
  6190  01608C                     _check_help:
  6191                           	opt callstack 11
  6192                           
  6193                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6194                           
  6195                           ; BSR set to: 0
  6196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6197                           ;incstack = 0
  6198  01608C  EC89  F0C6         	call	_help_button	;wreg free
  6199  016090  5025               	movf	btemp^0,w,c
  6200  016092  B4D8               	btfsc	status,2,c
  6201  016094  D0D0               	goto	l11054
  6202  016096  EC41  F0CB         	call	_display_info	;wreg free
  6203  01609A  0425               	decf	btemp^0,w,c
  6204  01609C  B4D8               	btfsc	status,2,c
  6205  01609E  D0CB               	goto	l11054
  6206                           
  6207                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6208  0160A0  0EDC               	movlw	220
  6209  0160A2  6EE6               	movwf	postinc1,c
  6210  0160A4  0E05               	movlw	5
  6211  0160A6  6EE6               	movwf	postinc1,c
  6212  0160A8  0E0B               	movlw	11
  6213  0160AA  6EE6               	movwf	postinc1,c
  6214  0160AC  ECEA  F0C5         	call	_StartTimer	;wreg free
  6215                           
  6216                           ;mconfig.c: 48:   if (V.debug)
  6217  0160B0  0102               	movlb	2	; () banked
  6218  0160B2  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6219                           
  6220                           ; BSR set to: 2
  6221                           ;mconfig.c: 49:    vterm_dump();
  6222  0160B4  ECF1  F0B6         	call	_vterm_dump	;wreg free
  6223                           
  6224                           ;mconfig.c: 51:   set_vterm(1);
  6225  0160B8  0E01               	movlw	1
  6226  0160BA  6EE6               	movwf	postinc1,c
  6227  0160BC  EC48  F0CA         	call	_set_vterm	;wreg free
  6228                           
  6229                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6230  0160C0  EC41  F0CB         	call	_display_info	;wreg free
  6231  0160C4  5025               	movf	btemp^0,w,c
  6232  0160C6  6EE6               	movwf	postinc1,c
  6233  0160C8  EC02  F0CB         	call	_set_temp_display_help	;wreg free
  6234                           
  6235                           ; BSR set to: 2
  6236                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6237  0160CC  0E01               	movlw	1
  6238  0160CE  6EE6               	movwf	postinc1,c
  6239  0160D0  EC57  F0CA         	call	_set_display_info	;wreg free
  6240                           
  6241                           ;mconfig.c: 54:   if (flipper) {
  6242                           ;stkvar	_flipper @ sp[(0)+-1]
  6243  0160D4  0EFF               	movlw	-1
  6244  0160D6  50E3               	movf	plusw1,w,c
  6245  0160D8  B4D8               	btfsc	status,2,c
  6246  0160DA  D019               	goto	l11040
  6247                           
  6248                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6249  0160DC  0EC1               	movlw	low STR_27
  6250  0160DE  6EE6               	movwf	postinc1,c
  6251  0160E0  0EFF               	movlw	high STR_27
  6252  0160E2  6EE6               	movwf	postinc1,c
  6253  0160E4  0E80               	movlw	low STR_29
  6254  0160E6  6EE6               	movwf	postinc1,c
  6255  0160E8  0EFE               	movlw	high STR_29
  6256  0160EA  6EE6               	movwf	postinc1,c
  6257  0160EC  0E01               	movlw	1
  6258  0160EE  6EE6               	movwf	postinc1,c
  6259  0160F0  0E00               	movlw	0
  6260  0160F2  6EE6               	movwf	postinc1,c
  6261  0160F4  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6262  0160F8  0060  F097  FFE6   	movff	btemp,postinc1
  6263  0160FE  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6264  016104  0E06               	movlw	6
  6265  016106  6EE6               	movwf	postinc1,c
  6266  016108  EC4C  F0BA         	call	_sprintf	;wreg free
  6267                           
  6268                           ;mconfig.c: 56:   } else {
  6269  01610C  D018               	goto	l1669
  6270  01610E                     l11040:
  6271                           
  6272                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6273  01610E  0ED7               	movlw	low STR_28
  6274  016110  6EE6               	movwf	postinc1,c
  6275  016112  0EFF               	movlw	high STR_28
  6276  016114  6EE6               	movwf	postinc1,c
  6277  016116  0E80               	movlw	low STR_29
  6278  016118  6EE6               	movwf	postinc1,c
  6279  01611A  0EFE               	movlw	high STR_29
  6280  01611C  6EE6               	movwf	postinc1,c
  6281  01611E  0E01               	movlw	1
  6282  016120  6EE6               	movwf	postinc1,c
  6283  016122  0E00               	movlw	0
  6284  016124  6EE6               	movwf	postinc1,c
  6285  016126  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6286  01612A  0060  F097  FFE6   	movff	btemp,postinc1
  6287  016130  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6288  016136  0E06               	movlw	6
  6289  016138  6EE6               	movwf	postinc1,c
  6290  01613A  EC4C  F0BA         	call	_sprintf	;wreg free
  6291  01613E                     l1669:
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6295  01613E  0102               	movlb	2	; () banked
  6296  016140  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6297  016142  32E8               	rrcf	wreg,f,c
  6298  016144  32E8               	rrcf	wreg,f,c
  6299  016146  0B03               	andlw	3
  6300  016148  0D24               	mullw	36
  6301  01614A  0E12               	movlw	18
  6302  01614C  26F3               	addwf	243,f,c
  6303  01614E  0E00               	movlw	0
  6304  016150  22F4               	addwfc	244,f,c
  6305  016152  0EB1               	movlw	low _T
  6306  016154  6E2F               	movwf	(btemp+10)^0,c
  6307  016156  0EFD               	movlw	high _T
  6308  016158  6E30               	movwf	(btemp+11)^0,c
  6309  01615A  50F3               	movf	243,w,c
  6310  01615C  262F               	addwf	(btemp+10)^0,f,c
  6311  01615E  50F4               	movf	244,w,c
  6312  016160  2230               	addwfc	(btemp+11)^0,f,c
  6313  016162  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6314  016168  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6315  01616E  0ECD               	movlw	low STR_31
  6316  016170  6EE6               	movwf	postinc1,c
  6317  016172  0EFF               	movlw	high STR_31
  6318  016174  6EE6               	movwf	postinc1,c
  6319  016176  0E01               	movlw	1
  6320  016178  6EE6               	movwf	postinc1,c
  6321  01617A  0E01               	movlw	1
  6322  01617C  6EE6               	movwf	postinc1,c
  6323  01617E  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6324  016182  0060  F097  FFE6   	movff	btemp,postinc1
  6325  016188  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6326  01618E  0E06               	movlw	6
  6327  016190  6EE6               	movwf	postinc1,c
  6328  016192  EC4C  F0BA         	call	_sprintf	;wreg free
  6329                           
  6330                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6331  016196  0102               	movlb	2	; () banked
  6332  016198  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6333  01619A  32E8               	rrcf	wreg,f,c
  6334  01619C  32E8               	rrcf	wreg,f,c
  6335  01619E  0B03               	andlw	3
  6336  0161A0  0D24               	mullw	36
  6337  0161A2  0EB1               	movlw	low _T
  6338  0161A4  6E2F               	movwf	(btemp+10)^0,c
  6339  0161A6  0EFD               	movlw	high _T
  6340  0161A8  6E30               	movwf	(btemp+11)^0,c
  6341  0161AA  50F3               	movf	243,w,c
  6342  0161AC  262F               	addwf	(btemp+10)^0,f,c
  6343  0161AE  50F4               	movf	244,w,c
  6344  0161B0  2230               	addwfc	(btemp+11)^0,f,c
  6345  0161B2  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6346  0161B8  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6347  0161BE  0ECD               	movlw	low STR_31
  6348  0161C0  6EE6               	movwf	postinc1,c
  6349  0161C2  0EFF               	movlw	high STR_31
  6350  0161C4  6EE6               	movwf	postinc1,c
  6351  0161C6  0E01               	movlw	1
  6352  0161C8  6EE6               	movwf	postinc1,c
  6353  0161CA  0E02               	movlw	2
  6354  0161CC  6EE6               	movwf	postinc1,c
  6355  0161CE  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6356  0161D2  0060  F097  FFE6   	movff	btemp,postinc1
  6357  0161D8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6358  0161DE  0E06               	movlw	6
  6359  0161E0  6EE6               	movwf	postinc1,c
  6360  0161E2  EC4C  F0BA         	call	_sprintf	;wreg free
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;mconfig.c: 61:   V.help_id++;
  6364  0161E6  EE20  F29B         	lfsr	2,_V+155	;volatile
  6365  0161EA  38DF               	swapf	223,w,c
  6366  0161EC  6E30               	movwf	(btemp+11)^0,c
  6367  0161EE  3230               	rrcf	(btemp+11)^0,f,c
  6368  0161F0  3030               	rrcf	(btemp+11)^0,w,c
  6369  0161F2  0B03               	andlw	3
  6370  0161F4  6E30               	movwf	(btemp+11)^0,c
  6371  0161F6  2A30               	incf	(btemp+11)^0,f,c
  6372  0161F8  3A30               	swapf	(btemp+11)^0,f,c
  6373  0161FA  3630               	rlcf	(btemp+11)^0,f,c
  6374  0161FC  3630               	rlcf	(btemp+11)^0,f,c
  6375  0161FE  50DF               	movf	223,w,c
  6376  016200  1830               	xorwf	(btemp+11)^0,w,c
  6377  016202  0B3F               	andlw	-193
  6378  016204  1830               	xorwf	(btemp+11)^0,w,c
  6379  016206  6EDF               	movwf	223,c
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6383  016208  0EB8               	movlw	184
  6384  01620A  6EE6               	movwf	postinc1,c
  6385  01620C  0E0B               	movlw	11
  6386  01620E  6EE6               	movwf	postinc1,c
  6387  016210  0E09               	movlw	9
  6388  016212  6EE6               	movwf	postinc1,c
  6389  016214  ECEA  F0C5         	call	_StartTimer	;wreg free
  6390                           
  6391                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6392  016218  0EB8               	movlw	184
  6393  01621A  6EE6               	movwf	postinc1,c
  6394  01621C  0E0B               	movlw	11
  6395  01621E  6EE6               	movwf	postinc1,c
  6396  016220  0E07               	movlw	7
  6397  016222  6EE6               	movwf	postinc1,c
  6398  016224  ECEA  F0C5         	call	_StartTimer	;wreg free
  6399                           
  6400                           ;mconfig.c: 64:   mode_lamp_bright();
  6401  016228  EC11  F0CB         	call	_mode_lamp_bright	;wreg free
  6402                           
  6403                           ;mconfig.c: 65:   update_lcd(1);
  6404  01622C  0E01               	movlw	1
  6405  01622E  6EE6               	movwf	postinc1,c
  6406  016230  ECC4  F0B9         	call	_update_lcd	;wreg free
  6407                           
  6408                           ;mconfig.c: 67:  } else {
  6409  016234  D032               	goto	l1670
  6410  016236                     l11054:
  6411                           
  6412                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6413  016236  0E09               	movlw	9
  6414  016238  6EE6               	movwf	postinc1,c
  6415  01623A  EC4B  F0C8         	call	_TimerDone	;wreg free
  6416  01623E  5025               	movf	btemp^0,w,c
  6417  016240  B4D8               	btfsc	status,2,c
  6418  016242  D02B               	goto	l1670
  6419                           
  6420                           ;mconfig.c: 69:    set_vterm(0);
  6421  016244  0E00               	movlw	0
  6422  016246  6EE6               	movwf	postinc1,c
  6423  016248  EC48  F0CA         	call	_set_vterm	;wreg free
  6424                           
  6425                           ;mconfig.c: 70:    V.help = 0;
  6426  01624C  0102               	movlb	2	; () banked
  6427  01624E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6428                           
  6429                           ; BSR set to: 2
  6430                           ;mconfig.c: 71:    set_display_info(display_help());
  6431  016250  EC45  F0CB         	call	_display_help	;wreg free
  6432  016254  5025               	movf	btemp^0,w,c
  6433  016256  6EE6               	movwf	postinc1,c
  6434  016258  EC57  F0CA         	call	_set_display_info	;wreg free
  6435                           
  6436                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6437  01625C  0060  FA57  FFE6   	movff	_V+149,postinc1
  6438  016262  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6439  016268  ECAD  F0CA         	call	_mode_lamp_dim	;wreg free
  6440                           
  6441                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6442  01626C  0E0B               	movlw	11
  6443  01626E  6EE6               	movwf	postinc1,c
  6444  016270  EC4B  F0C8         	call	_TimerDone	;wreg free
  6445  016274  5025               	movf	btemp^0,w,c
  6446  016276  B4D8               	btfsc	status,2,c
  6447  016278  D010               	goto	l1670
  6448                           
  6449                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6450  01627A  0102               	movlb	2	; () banked
  6451  01627C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6452  01627E  A4D8               	btfss	status,2,c
  6453  016280  D002               	goto	u10810
  6454  016282  0E01               	movlw	1
  6455  016284  D001               	goto	u10820
  6456  016286                     u10810:
  6457  016286  0E00               	movlw	0
  6458  016288                     u10820:
  6459  016288  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6460                           
  6461                           ; BSR set to: 2
  6462                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6463  01628A  0EDC               	movlw	220
  6464  01628C  6EE6               	movwf	postinc1,c
  6465  01628E  0E05               	movlw	5
  6466  016290  6EE6               	movwf	postinc1,c
  6467  016292  0E0B               	movlw	11
  6468  016294  6EE6               	movwf	postinc1,c
  6469  016296  ECEA  F0C5         	call	_StartTimer	;wreg free
  6470  01629A                     l1670:
  6471                           
  6472                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6473  01629A  52E5               	movf	postdec1,f,c
  6474  01629C  0012               	return		;funcret
  6475  01629E                     __end_of_check_help:
  6476                           	opt callstack 0
  6477                           
  6478 ;; *************** function _vterm_dump *****************
  6479 ;; Defined at:
  6480 ;;		line 121 in file "mconfig.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;		None
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;		None
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1  [STACK] void 
  6487 ;; Registers used:
  6488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6489 ;; Tracked objects:
  6490 ;;		On entry : 3F/2
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6498 ;;Total ram usage:        0 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:   18
  6501 ;; This function calls:
  6502 ;;		_WaitMs
  6503 ;;		_eaDogM_WriteStringAtPos
  6504 ;;		_get_vterm_ptr
  6505 ;;		_sprintf
  6506 ;;		_wait_lcd_done
  6507 ;; This function is called by:
  6508 ;;		_check_help
  6509 ;; This function uses a reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text25
  6513  016DE2                     __ptext25:
  6514                           	opt callstack 0
  6515  016DE2                     _vterm_dump:
  6516                           	opt callstack 11
  6517                           
  6518                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6519                           
  6520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6521                           ;incstack = 0
  6522  016DE2  0E01               	movlw	1
  6523  016DE4  6EE6               	movwf	postinc1,c
  6524  016DE6  0E00               	movlw	0
  6525  016DE8  6EE6               	movwf	postinc1,c
  6526  016DEA  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6527  016DEE  0060  F097  FFE6   	movff	btemp,postinc1
  6528  016DF4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6529  016DFA  0E00               	movlw	0
  6530  016DFC  6EE6               	movwf	postinc1,c
  6531  016DFE  0E00               	movlw	0
  6532  016E00  6EE6               	movwf	postinc1,c
  6533  016E02  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6534  016E06  0060  F097  FFE6   	movff	btemp,postinc1
  6535  016E0C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6536  016E12  0EA3               	movlw	low STR_33
  6537  016E14  6EE6               	movwf	postinc1,c
  6538  016E16  0EFF               	movlw	high STR_33
  6539  016E18  6EE6               	movwf	postinc1,c
  6540  016E1A  0E01               	movlw	low (_V+1)
  6541  016E1C  6EE6               	movwf	postinc1,c
  6542  016E1E  0E02               	movlw	high (_V+1)
  6543  016E20  6EE6               	movwf	postinc1,c
  6544  016E22  0E08               	movlw	8
  6545  016E24  6EE6               	movwf	postinc1,c
  6546  016E26  EC4C  F0BA         	call	_sprintf	;wreg free
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;mconfig.c: 124:  wait_lcd_done();
  6550  016E2A  EC84  F0CA         	call	_wait_lcd_done	;wreg free
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6554  016E2E  0E01               	movlw	low (_V+1)
  6555  016E30  6EE6               	movwf	postinc1,c
  6556  016E32  0E02               	movlw	high (_V+1)
  6557  016E34  6EE6               	movwf	postinc1,c
  6558  016E36  0E00               	movlw	0
  6559  016E38  6EE6               	movwf	postinc1,c
  6560  016E3A  0E00               	movlw	0
  6561  016E3C  6EE6               	movwf	postinc1,c
  6562  016E3E  ECDB  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6563                           
  6564                           ; BSR set to: 59
  6565                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6566  016E42  0E01               	movlw	1
  6567  016E44  6EE6               	movwf	postinc1,c
  6568  016E46  0E01               	movlw	1
  6569  016E48  6EE6               	movwf	postinc1,c
  6570  016E4A  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6571  016E4E  0060  F097  FFE6   	movff	btemp,postinc1
  6572  016E54  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6573  016E5A  0E00               	movlw	0
  6574  016E5C  6EE6               	movwf	postinc1,c
  6575  016E5E  0E01               	movlw	1
  6576  016E60  6EE6               	movwf	postinc1,c
  6577  016E62  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6578  016E66  0060  F097  FFE6   	movff	btemp,postinc1
  6579  016E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6580  016E72  0EA3               	movlw	low STR_33
  6581  016E74  6EE6               	movwf	postinc1,c
  6582  016E76  0EFF               	movlw	high STR_33
  6583  016E78  6EE6               	movwf	postinc1,c
  6584  016E7A  0E01               	movlw	low (_V+1)
  6585  016E7C  6EE6               	movwf	postinc1,c
  6586  016E7E  0E02               	movlw	high (_V+1)
  6587  016E80  6EE6               	movwf	postinc1,c
  6588  016E82  0E08               	movlw	8
  6589  016E84  6EE6               	movwf	postinc1,c
  6590  016E86  EC4C  F0BA         	call	_sprintf	;wreg free
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;mconfig.c: 127:  wait_lcd_done();
  6594  016E8A  EC84  F0CA         	call	_wait_lcd_done	;wreg free
  6595                           
  6596                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6597  016E8E  0E01               	movlw	low (_V+1)
  6598  016E90  6EE6               	movwf	postinc1,c
  6599  016E92  0E02               	movlw	high (_V+1)
  6600  016E94  6EE6               	movwf	postinc1,c
  6601  016E96  0E00               	movlw	0
  6602  016E98  6EE6               	movwf	postinc1,c
  6603  016E9A  0E01               	movlw	1
  6604  016E9C  6EE6               	movwf	postinc1,c
  6605  016E9E  ECDB  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6606                           
  6607                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6608  016EA2  0E01               	movlw	1
  6609  016EA4  6EE6               	movwf	postinc1,c
  6610  016EA6  0E02               	movlw	2
  6611  016EA8  6EE6               	movwf	postinc1,c
  6612  016EAA  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6613  016EAE  0060  F097  FFE6   	movff	btemp,postinc1
  6614  016EB4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6615  016EBA  0E00               	movlw	0
  6616  016EBC  6EE6               	movwf	postinc1,c
  6617  016EBE  0E02               	movlw	2
  6618  016EC0  6EE6               	movwf	postinc1,c
  6619  016EC2  EC8C  F0C7         	call	_get_vterm_ptr	;wreg free
  6620  016EC6  0060  F097  FFE6   	movff	btemp,postinc1
  6621  016ECC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6622  016ED2  0EA3               	movlw	low STR_33
  6623  016ED4  6EE6               	movwf	postinc1,c
  6624  016ED6  0EFF               	movlw	high STR_33
  6625  016ED8  6EE6               	movwf	postinc1,c
  6626  016EDA  0E01               	movlw	low (_V+1)
  6627  016EDC  6EE6               	movwf	postinc1,c
  6628  016EDE  0E02               	movlw	high (_V+1)
  6629  016EE0  6EE6               	movwf	postinc1,c
  6630  016EE2  0E08               	movlw	8
  6631  016EE4  6EE6               	movwf	postinc1,c
  6632  016EE6  EC4C  F0BA         	call	_sprintf	;wreg free
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;mconfig.c: 130:  wait_lcd_done();
  6636  016EEA  EC84  F0CA         	call	_wait_lcd_done	;wreg free
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6640  016EEE  0E01               	movlw	low (_V+1)
  6641  016EF0  6EE6               	movwf	postinc1,c
  6642  016EF2  0E02               	movlw	high (_V+1)
  6643  016EF4  6EE6               	movwf	postinc1,c
  6644  016EF6  0E00               	movlw	0
  6645  016EF8  6EE6               	movwf	postinc1,c
  6646  016EFA  0E02               	movlw	2
  6647  016EFC  6EE6               	movwf	postinc1,c
  6648  016EFE  ECDB  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6649                           
  6650                           ; BSR set to: 59
  6651                           ;mconfig.c: 132:  WaitMs(3000);
  6652  016F02  0EB8               	movlw	184
  6653  016F04  6EE6               	movwf	postinc1,c
  6654  016F06  0E0B               	movlw	11
  6655  016F08  6EE6               	movwf	postinc1,c
  6656  016F0A  ECC0  F0C6         	call	_WaitMs	;wreg free
  6657                           
  6658                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6659  016F0E  0012               	return		;funcret
  6660  016F10                     __end_of_vterm_dump:
  6661                           	opt callstack 0
  6662                           
  6663 ;; *************** function _sprintf *****************
  6664 ;; Defined at:
  6665 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  s               2  [STACK] PTR unsigned char 
  6668 ;;		 -> D.lcd(288), D(290), V(188), 
  6669 ;;  fmt             2  [STACK] PTR const unsigned char 
  6670 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6671 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6672 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6673 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6674 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6675 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  6676 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6677 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6678 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6679 ;;		 -> STR_1(17), 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  f               6  [STACK] struct _IO_FILE
  6682 ;;  ap              2  [STACK] PTR void [1]
  6683 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6684 ;;  ret             2    0        int 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  2  [STACK] int 
  6687 ;; Registers used:
  6688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/1
  6691 ;;		On exit  : 3F/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:   15
  6701 ;; This function calls:
  6702 ;;		_vfprintf
  6703 ;; This function is called by:
  6704 ;;		_main
  6705 ;;		_check_help
  6706 ;;		_vterm_dump
  6707 ;; This function uses a reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text26
  6711  017498                     __ptext26:
  6712                           	opt callstack 0
  6713  017498                     _sprintf:
  6714                           	opt callstack 0
  6715                           
  6716                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6717  017498  0E08               	movlw	8
  6718  01749A  26E1               	addwf	fsr1l,f,c
  6719  01749C  0E00               	movlw	0
  6720  01749E  22E2               	addwfc	fsr1h,f,c
  6721                           
  6722                           ;incstack = 0
  6723  0174A0  0EFE               	movlw	254
  6724  0174A2  6E2F               	movwf	(btemp+10)^0,c
  6725  0174A4  0EFF               	movlw	255
  6726  0174A6  6E30               	movwf	(btemp+11)^0,c
  6727                           
  6728                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6729  0174A8  0EF5               	movlw	245
  6730  0174AA  24E1               	addwf	fsr1l,w,c
  6731  0174AC  6E2D               	movwf	(btemp+8)^0,c
  6732  0174AE  0EFF               	movlw	255
  6733  0174B0  20E2               	addwfc	fsr1h,w,c
  6734  0174B2  6E2E               	movwf	(btemp+9)^0,c
  6735  0174B4  502F               	movf	(btemp+10)^0,w,c
  6736  0174B6  262D               	addwf	(btemp+8)^0,f,c
  6737  0174B8  5030               	movf	(btemp+11)^0,w,c
  6738  0174BA  222E               	addwfc	(btemp+9)^0,f,c
  6739                           
  6740                           ;stkvar	_ap @ sp[(-8)+6]
  6741  0174BC  0EFF               	movlw	-1
  6742  0174BE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  6743  0174C4  0EFE               	movlw	-2
  6744  0174C6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  6745                           
  6746                           ;stkvar	_s @ sp[(-8)+-3]
  6747  0174CC  0EF5               	movlw	-11
  6748  0174CE  006F FF8C  F02F    	movff	plusw1,btemp+10
  6749  0174D4  0EF6               	movlw	-10
  6750  0174D6  006F FF8C  F030    	movff	plusw1,btemp+11
  6751                           
  6752                           ;stkvar	_f @ sp[(-8)+0]
  6753  0174DC  0EF9               	movlw	-7
  6754  0174DE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  6755  0174E4  0EF8               	movlw	-8
  6756  0174E6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  6757                           
  6758                           ;stkvar	_f @ sp[(-8)+0]
  6759  0174EC  0EFA               	movlw	250
  6760  0174EE  24E1               	addwf	fsr1l,w,c
  6761  0174F0  6ED9               	movwf	fsr2l,c
  6762  0174F2  0EFF               	movlw	255
  6763  0174F4  20E2               	addwfc	fsr1h,w,c
  6764  0174F6  6EDA               	movwf	fsr2h,c
  6765  0174F8  0E00               	movlw	0
  6766  0174FA  6EDE               	movwf	postinc2,c
  6767  0174FC  0E00               	movlw	0
  6768  0174FE  6EDD               	movwf	postdec2,c
  6769                           
  6770                           ;stkvar	_f @ sp[(-8)+0]
  6771  017500  0EFC               	movlw	252
  6772  017502  24E1               	addwf	fsr1l,w,c
  6773  017504  6ED9               	movwf	fsr2l,c
  6774  017506  0EFF               	movlw	255
  6775  017508  20E2               	addwfc	fsr1h,w,c
  6776  01750A  6EDA               	movwf	fsr2h,c
  6777  01750C  0E00               	movlw	0
  6778  01750E  6EDE               	movwf	postinc2,c
  6779  017510  0E00               	movlw	0
  6780  017512  6EDD               	movwf	postdec2,c
  6781                           
  6782                           ;stkvar	_ap @ sp[(-8)+6]
  6783  017514  0EFE               	movlw	254
  6784  017516  24E1               	addwf	fsr1l,w,c
  6785  017518  6E25               	movwf	btemp^0,c
  6786  01751A  0EFF               	movlw	255
  6787  01751C  20E2               	addwfc	fsr1h,w,c
  6788  01751E  6E26               	movwf	(btemp+1)^0,c
  6789  017520  0060  F097  FFE6   	movff	btemp,postinc1
  6790  017526  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6791                           
  6792                           ;stkvar	_fmt @ sp[(-10)+-5]
  6793  01752C  0EF1               	movlw	-15
  6794  01752E  006F FF8F FFE6     	movff	plusw1,postinc1
  6795  017534  006F FF8F FFE6     	movff	plusw1,postinc1
  6796                           
  6797                           ;stkvar	_f @ sp[(-12)+0]
  6798  01753A  0EF4               	movlw	244
  6799  01753C  24E1               	addwf	fsr1l,w,c
  6800  01753E  6E25               	movwf	btemp^0,c
  6801  017540  0EFF               	movlw	255
  6802  017542  20E2               	addwfc	fsr1h,w,c
  6803  017544  6E26               	movwf	(btemp+1)^0,c
  6804  017546  0060  F097  FFE6   	movff	btemp,postinc1
  6805  01754C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6806  017552  EC8E  F0BE         	call	_vfprintf	;wreg free
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;stkvar	_f @ sp[(-8)+0]
  6810  017556  0EFA               	movlw	250
  6811  017558  24E1               	addwf	fsr1l,w,c
  6812  01755A  6ED9               	movwf	fsr2l,c
  6813  01755C  0EFF               	movlw	255
  6814  01755E  20E2               	addwfc	fsr1h,w,c
  6815  017560  6EDA               	movwf	fsr2h,c
  6816  017562  006F FF78  F02F    	movff	postinc2,btemp+10
  6817  017568  006F FF74  F030    	movff	postdec2,btemp+11
  6818                           
  6819                           ;stkvar	_s @ sp[(-8)+-3]
  6820  01756E  0EF5               	movlw	-11
  6821  017570  006F FF8C  F02D    	movff	plusw1,btemp+8
  6822  017576  0EF6               	movlw	-10
  6823  017578  006F FF8C  F02E    	movff	plusw1,btemp+9
  6824  01757E  502F               	movf	(btemp+10)^0,w,c
  6825  017580  242D               	addwf	(btemp+8)^0,w,c
  6826  017582  6ED9               	movwf	fsr2l,c
  6827  017584  5030               	movf	(btemp+11)^0,w,c
  6828  017586  202E               	addwfc	(btemp+9)^0,w,c
  6829  017588  6EDA               	movwf	fsr2h,c
  6830  01758A  0E00               	movlw	0
  6831  01758C  6EDF               	movwf	indf2,c
  6832                           
  6833                           ; BSR set to: 0
  6834                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6835  01758E  0EF8               	movlw	248
  6836  017590  26E1               	addwf	fsr1l,f,c
  6837  017592  0EFF               	movlw	255
  6838  017594  22E2               	addwfc	fsr1h,f,c
  6839  017596  52E5               	movf	postdec1,f,c
  6840  017598  50E7               	movf	indf1,w,c
  6841  01759A  5EE1               	subwf	fsr1l,f,c
  6842  01759C  0E00               	movlw	0
  6843  01759E  5AE2               	subwfb	fsr1h,f,c
  6844  0175A0  0012               	return		;funcret
  6845  0175A2                     __end_of_sprintf:
  6846                           	opt callstack 0
  6847                           
  6848 ;; *************** function _get_vterm_ptr *****************
  6849 ;; Defined at:
  6850 ;;		line 116 in file "mconfig.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  line            1  [STACK] const unsigned char 
  6853 ;;  vterm           1  [STACK] const unsigned char 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  2  [STACK] PTR unsigned char 
  6858 ;; Registers used:
  6859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/1
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6869 ;;Total ram usage:        0 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    7
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_main
  6876 ;;		_check_help
  6877 ;;		_vterm_dump
  6878 ;; This function uses a reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text27
  6882  018F18                     __ptext27:
  6883                           	opt callstack 0
  6884  018F18                     _get_vterm_ptr:
  6885                           	opt callstack 23
  6886                           
  6887                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6888                           ;stkvar	_vterm @ sp[(0)+-2]
  6889                           
  6890                           ; BSR set to: 0
  6891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6892                           ;incstack = 0
  6893  018F18  0EFE               	movlw	-2
  6894  018F1A  50E3               	movf	plusw1,w,c
  6895  018F1C  0B03               	andlw	3
  6896  018F1E  0D48               	mullw	72
  6897  018F20  0EFF               	movlw	low _D
  6898  018F22  6E25               	movwf	btemp^0,c
  6899  018F24  0E06               	movlw	high _D
  6900  018F26  6E26               	movwf	(btemp+1)^0,c
  6901  018F28  50F3               	movf	243,w,c
  6902  018F2A  2625               	addwf	btemp^0,f,c
  6903  018F2C  50F4               	movf	244,w,c
  6904  018F2E  2226               	addwfc	(btemp+1)^0,f,c
  6905                           
  6906                           ;stkvar	_line @ sp[(0)+-1]
  6907  018F30  0EFF               	movlw	-1
  6908  018F32  50E3               	movf	plusw1,w,c
  6909  018F34  0B03               	andlw	3
  6910  018F36  0D18               	mullw	24
  6911  018F38  50F3               	movf	243,w,c
  6912  018F3A  2625               	addwf	btemp^0,f,c
  6913  018F3C  50F4               	movf	244,w,c
  6914  018F3E  2226               	addwfc	(btemp+1)^0,f,c
  6915                           
  6916                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6917  018F40  52E5               	movf	postdec1,f,c
  6918  018F42  52E5               	movf	postdec1,f,c
  6919  018F44  0012               	return		;funcret
  6920  018F46                     __end_of_get_vterm_ptr:
  6921                           	opt callstack 0
  6922                           
  6923 ;; *************** function _WaitMs *****************
  6924 ;; Defined at:
  6925 ;;		line 32 in file "timers.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  numMilliseco    2  [STACK] const unsigned short 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;		None
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  1  [STACK] void 
  6932 ;; Registers used:
  6933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/2
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6943 ;;Total ram usage:        0 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    8
  6946 ;; This function calls:
  6947 ;;		_StartTimer
  6948 ;;		_TimerDone
  6949 ;; This function is called by:
  6950 ;;		_main
  6951 ;;		_vterm_dump
  6952 ;; This function uses a reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text28
  6956  018D80                     __ptext28:
  6957                           	opt callstack 0
  6958  018D80                     _WaitMs:
  6959                           	opt callstack 20
  6960                           
  6961                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6962                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6963                           
  6964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6965                           ;incstack = 0
  6966  018D80  0EFE               	movlw	-2
  6967  018D82  006F FF8F FFE6     	movff	plusw1,postinc1
  6968  018D88  006F FF8F FFE6     	movff	plusw1,postinc1
  6969  018D8E  0E00               	movlw	0
  6970  018D90  6EE6               	movwf	postinc1,c
  6971  018D92  ECEA  F0C5         	call	_StartTimer	;wreg free
  6972                           
  6973                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6974  018D96  D005               	goto	l7876
  6975  018D98                     l1599:
  6976                           
  6977                           ;timers.c: 36:   __nop();
  6978  018D98  F000               	nop	
  6979                           
  6980                           ;timers.c: 37:   __nop();
  6981  018D9A  F000               	nop	
  6982                           
  6983                           ;timers.c: 38:   __nop();
  6984  018D9C  F000               	nop	
  6985                           
  6986                           ;timers.c: 39:   __nop();
  6987  018D9E  F000               	nop	
  6988  018DA0  0004               	clrwdt		;# 
  6989  018DA2                     l7876:
  6990                           
  6991                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6992  018DA2  0E00               	movlw	0
  6993  018DA4  6EE6               	movwf	postinc1,c
  6994  018DA6  EC4B  F0C8         	call	_TimerDone	;wreg free
  6995  018DAA  5025               	movf	btemp^0,w,c
  6996  018DAC  B4D8               	btfsc	status,2,c
  6997  018DAE  D7F4               	goto	l1599
  6998                           
  6999                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7000  018DB0  52E5               	movf	postdec1,f,c
  7001  018DB2  52E5               	movf	postdec1,f,c
  7002  018DB4  0012               	return		;funcret
  7003  018DB6                     __end_of_WaitMs:
  7004                           	opt callstack 0
  7005                           
  7006 ;; *************** function _update_lcd *****************
  7007 ;; Defined at:
  7008 ;;		line 85 in file "mconfig.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  vterm           1  [STACK] unsigned char 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;		None
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1  [STACK] unsigned char 
  7015 ;; Registers used:
  7016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7026 ;;Total ram usage:        0 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:   18
  7029 ;; This function calls:
  7030 ;;		_eaDogM_WriteStringAtPos
  7031 ;;		_wait_lcd_done
  7032 ;; This function is called by:
  7033 ;;		_main
  7034 ;;		_check_help
  7035 ;; This function uses a reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text29
  7039  017388                     __ptext29:
  7040                           	opt callstack 0
  7041  017388                     _update_lcd:
  7042                           	opt callstack 12
  7043                           
  7044                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7045                           ;stkvar	_vterm @ sp[(0)+-1]
  7046                           
  7047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7048                           ;incstack = 0
  7049  017388  0EFF               	movlw	-1
  7050  01738A  006F FF8C  F025    	movff	plusw1,btemp
  7051  017390  0E03               	movlw	3
  7052  017392  1625               	andwf	btemp^0,f,c
  7053  017394  0EFF               	movlw	-1
  7054  017396  0060  F097  FFE3   	movff	btemp,plusw1
  7055                           
  7056                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7057  01739C  EE22  F01F         	lfsr	2,_D+288
  7058  0173A0  A0DF               	btfss	indf2,0,c
  7059  0173A2  D004               	goto	l10920
  7060                           
  7061                           ;stkvar	_vterm @ sp[(0)+-1]
  7062  0173A4  0EFF               	movlw	-1
  7063  0173A6  50E3               	movf	plusw1,w,c
  7064  0173A8  B4D8               	btfsc	status,2,c
  7065  0173AA  D074               	goto	l1677
  7066  0173AC                     l10920:
  7067                           
  7068                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7069                           ;stkvar	_vterm @ sp[(0)+-1]
  7070  0173AC  0EFF               	movlw	-1
  7071  0173AE  50E3               	movf	plusw1,w,c
  7072  0173B0  0D48               	mullw	72
  7073  0173B2  0E0F               	movlw	low (_D+16)
  7074  0173B4  24F3               	addwf	243,w,c
  7075  0173B6  6ED9               	movwf	fsr2l,c
  7076  0173B8  0E07               	movlw	high (_D+16)
  7077  0173BA  20F4               	addwfc	prodh,w,c
  7078  0173BC  6EDA               	movwf	fsr2h,c
  7079  0173BE  0E00               	movlw	0
  7080  0173C0  6EDF               	movwf	indf2,c
  7081                           
  7082                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7083                           ;stkvar	_vterm @ sp[(0)+-1]
  7084  0173C2  0EFF               	movlw	-1
  7085  0173C4  50E3               	movf	plusw1,w,c
  7086  0173C6  0D48               	mullw	72
  7087  0173C8  0E27               	movlw	low (_D+40)
  7088  0173CA  24F3               	addwf	243,w,c
  7089  0173CC  6ED9               	movwf	fsr2l,c
  7090  0173CE  0E07               	movlw	high (_D+40)
  7091  0173D0  20F4               	addwfc	prodh,w,c
  7092  0173D2  6EDA               	movwf	fsr2h,c
  7093  0173D4  0E00               	movlw	0
  7094  0173D6  6EDF               	movwf	indf2,c
  7095                           
  7096                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7097                           ;stkvar	_vterm @ sp[(0)+-1]
  7098  0173D8  0EFF               	movlw	-1
  7099  0173DA  50E3               	movf	plusw1,w,c
  7100  0173DC  0D48               	mullw	72
  7101  0173DE  0E3F               	movlw	low (_D+64)
  7102  0173E0  24F3               	addwf	243,w,c
  7103  0173E2  6ED9               	movwf	fsr2l,c
  7104  0173E4  0E07               	movlw	high (_D+64)
  7105  0173E6  20F4               	addwfc	prodh,w,c
  7106  0173E8  6EDA               	movwf	fsr2h,c
  7107  0173EA  0E00               	movlw	0
  7108  0173EC  6EDF               	movwf	indf2,c
  7109                           
  7110                           ;mconfig.c: 95:  wait_lcd_done();
  7111  0173EE  EC84  F0CA         	call	_wait_lcd_done	;wreg free
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7115                           ;stkvar	_vterm @ sp[(0)+-1]
  7116  0173F2  0EFF               	movlw	-1
  7117  0173F4  50E3               	movf	plusw1,w,c
  7118  0173F6  0D48               	mullw	72
  7119  0173F8  0EFF               	movlw	low _D
  7120  0173FA  6E2F               	movwf	(btemp+10)^0,c
  7121  0173FC  0E06               	movlw	high _D
  7122  0173FE  6E30               	movwf	(btemp+11)^0,c
  7123  017400  50F3               	movf	243,w,c
  7124  017402  262F               	addwf	(btemp+10)^0,f,c
  7125  017404  50F4               	movf	244,w,c
  7126  017406  2230               	addwfc	(btemp+11)^0,f,c
  7127  017408  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7128  01740E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7129  017414  0E00               	movlw	0
  7130  017416  6EE6               	movwf	postinc1,c
  7131  017418  0E00               	movlw	0
  7132  01741A  6EE6               	movwf	postinc1,c
  7133  01741C  ECDB  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7134                           
  7135                           ; BSR set to: 59
  7136                           ;mconfig.c: 97:  wait_lcd_done();
  7137  017420  EC84  F0CA         	call	_wait_lcd_done	;wreg free
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7141                           ;stkvar	_vterm @ sp[(0)+-1]
  7142  017424  0EFF               	movlw	-1
  7143  017426  50E3               	movf	plusw1,w,c
  7144  017428  0D48               	mullw	72
  7145  01742A  0EFF               	movlw	low _D
  7146  01742C  6E2F               	movwf	(btemp+10)^0,c
  7147  01742E  0E06               	movlw	high _D
  7148  017430  6E30               	movwf	(btemp+11)^0,c
  7149  017432  0E18               	movlw	24
  7150  017434  262F               	addwf	(btemp+10)^0,f,c
  7151  017436  0E00               	movlw	0
  7152  017438  2230               	addwfc	(btemp+11)^0,f,c
  7153  01743A  50F3               	movf	243,w,c
  7154  01743C  262F               	addwf	(btemp+10)^0,f,c
  7155  01743E  50F4               	movf	244,w,c
  7156  017440  2230               	addwfc	(btemp+11)^0,f,c
  7157  017442  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7158  017448  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7159  01744E  0E00               	movlw	0
  7160  017450  6EE6               	movwf	postinc1,c
  7161  017452  0E01               	movlw	1
  7162  017454  6EE6               	movwf	postinc1,c
  7163  017456  ECDB  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7164                           
  7165                           ; BSR set to: 59
  7166                           ;mconfig.c: 99:  wait_lcd_done();
  7167  01745A  EC84  F0CA         	call	_wait_lcd_done	;wreg free
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7171                           ;stkvar	_vterm @ sp[(0)+-1]
  7172  01745E  0EFF               	movlw	-1
  7173  017460  50E3               	movf	plusw1,w,c
  7174  017462  0D48               	mullw	72
  7175  017464  0EFF               	movlw	low _D
  7176  017466  6E2F               	movwf	(btemp+10)^0,c
  7177  017468  0E06               	movlw	high _D
  7178  01746A  6E30               	movwf	(btemp+11)^0,c
  7179  01746C  0E30               	movlw	48
  7180  01746E  262F               	addwf	(btemp+10)^0,f,c
  7181  017470  0E00               	movlw	0
  7182  017472  2230               	addwfc	(btemp+11)^0,f,c
  7183  017474  50F3               	movf	243,w,c
  7184  017476  262F               	addwf	(btemp+10)^0,f,c
  7185  017478  50F4               	movf	244,w,c
  7186  01747A  2230               	addwfc	(btemp+11)^0,f,c
  7187  01747C  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7188  017482  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7189  017488  0E00               	movlw	0
  7190  01748A  6EE6               	movwf	postinc1,c
  7191  01748C  0E02               	movlw	2
  7192  01748E  6EE6               	movwf	postinc1,c
  7193  017490  ECDB  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7194  017494                     l1677:
  7195                           
  7196                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7197  017494  52E5               	movf	postdec1,f,c
  7198  017496  0012               	return		;funcret
  7199  017498                     __end_of_update_lcd:
  7200                           	opt callstack 0
  7201                           
  7202 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7203 ;; Defined at:
  7204 ;;		line 265 in file "eadog.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  r               1  [STACK] const unsigned char 
  7207 ;;  c               1  [STACK] const unsigned char 
  7208 ;;  strPtr          2  [STACK] PTR unsigned char 
  7209 ;;		 -> D.lcd(288), D(290), V(188), 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  1  [STACK] void 
  7214 ;; Registers used:
  7215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7216 ;; Tracked objects:
  7217 ;;		On entry : 3F/0
  7218 ;;		On exit  : 3F/3B
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7225 ;;Total ram usage:        0 bytes
  7226 ;; Hardware stack levels used:    1
  7227 ;; Hardware stack levels required when called:   17
  7228 ;; This function calls:
  7229 ;;		_eaDogM_WriteString
  7230 ;;		_send_lcd_cmd_dma
  7231 ;; This function is called by:
  7232 ;;		_update_lcd
  7233 ;;		_vterm_dump
  7234 ;; This function uses a reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text30
  7238  018DB6                     __ptext30:
  7239                           	opt callstack 0
  7240  018DB6                     _eaDogM_WriteStringAtPos:
  7241                           	opt callstack 12
  7242                           
  7243                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7244                           ;stkvar	_c @ sp[(0)+-2]
  7245                           
  7246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7247                           ;incstack = 0
  7248  018DB6  0EFE               	movlw	-2
  7249  018DB8  006F FF8C  F030    	movff	plusw1,btemp+11
  7250                           
  7251                           ;stkvar	_r @ sp[(0)+-1]
  7252  018DBE  0EFF               	movlw	-1
  7253  018DC0  50E3               	movf	plusw1,w,c
  7254  018DC2  0D10               	mullw	16
  7255  018DC4  50F3               	movf	243,w,c
  7256  018DC6  2430               	addwf	(btemp+11)^0,w,c
  7257  018DC8  0F80               	addlw	128
  7258  018DCA  6EE6               	movwf	postinc1,c
  7259  018DCC  EC59  F0C4         	call	_send_lcd_cmd_dma	;wreg free
  7260                           
  7261                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7262                           ;stkvar	_strPtr @ sp[(0)+-4]
  7263  018DD0  0EFC               	movlw	-4
  7264  018DD2  006F FF8F FFE6     	movff	plusw1,postinc1
  7265  018DD8  006F FF8F FFE6     	movff	plusw1,postinc1
  7266  018DDE  EC39  F0BF         	call	_eaDogM_WriteString	;wreg free
  7267                           
  7268                           ; BSR set to: 59
  7269                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7270  018DE2  52E5               	movf	postdec1,f,c
  7271  018DE4  52E5               	movf	postdec1,f,c
  7272  018DE6  52E5               	movf	postdec1,f,c
  7273  018DE8  52E5               	movf	postdec1,f,c
  7274  018DEA  0012               	return		;funcret
  7275  018DEC                     __end_of_eaDogM_WriteStringAtPos:
  7276                           	opt callstack 0
  7277                           
  7278 ;; *************** function _send_lcd_cmd_dma *****************
  7279 ;; Defined at:
  7280 ;;		line 218 in file "eadog.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  strPtr          1  [STACK] unsigned char 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1  [STACK] void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/3D
  7291 ;;		On exit  : 3F/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:   16
  7301 ;; This function calls:
  7302 ;;		_printf
  7303 ;;		_ringBufS_flush
  7304 ;;		_start_lcd
  7305 ;;		_wait_lcd_done
  7306 ;;		_wait_lcd_set
  7307 ;; This function is called by:
  7308 ;;		_eaDogM_WriteCommand
  7309 ;;		_eaDogM_WriteStringAtPos
  7310 ;; This function uses a reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text31
  7314  0188B2                     __ptext31:
  7315                           	opt callstack 0
  7316  0188B2                     _send_lcd_cmd_dma:
  7317                           	opt callstack 12
  7318                           
  7319                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7320                           
  7321                           ; BSR set to: 59
  7322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7323                           ;incstack = 0
  7324  0188B2  EC54  F0CB         	call	_wait_lcd_set	;wreg free
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7328  0188B6  0E00               	movlw	0
  7329  0188B8  6EE6               	movwf	postinc1,c
  7330  0188BA  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7331  0188C0  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7332  0188C6  EC29  F0C0         	call	_ringBufS_flush	;wreg free
  7333  0188CA  92BC               	bcf	188,1,c	;volatile
  7334  0188CC  94BC               	bcf	188,2,c	;volatile
  7335                           
  7336                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7337  0188CE  013B               	movlb	59	; () banked
  7338  0188D0  9FFC               	bcf	252,7,b	;volatile
  7339                           
  7340                           ; BSR set to: 59
  7341                           ;eadog.c: 227:  DMA1SSZ = 1;
  7342  0188D2  0E00               	movlw	0
  7343  0188D4  6FF8               	movwf	248,b	;volatile
  7344  0188D6  0E01               	movlw	1
  7345  0188D8  6FF7               	movwf	247,b	;volatile
  7346                           
  7347                           ; BSR set to: 59
  7348                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7349  0188DA  8FFC               	bsf	252,7,b	;volatile
  7350                           
  7351                           ; BSR set to: 59
  7352                           ;eadog.c: 229:  printf("%c", strPtr);
  7353                           ;stkvar	_strPtr @ sp[(0)+-1]
  7354  0188DC  0EFF               	movlw	-1
  7355  0188DE  50E3               	movf	plusw1,w,c
  7356  0188E0  6EE6               	movwf	postinc1,c
  7357  0188E2  0E00               	movlw	0
  7358  0188E4  6EE6               	movwf	postinc1,c
  7359  0188E6  0EF9               	movlw	low STR_25
  7360  0188E8  6EE6               	movwf	postinc1,c
  7361  0188EA  0EFF               	movlw	high STR_25
  7362  0188EC  6EE6               	movwf	postinc1,c
  7363  0188EE  0E04               	movlw	4
  7364  0188F0  6EE6               	movwf	postinc1,c
  7365  0188F2  EC72  F0C3         	call	_printf	;wreg free
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;eadog.c: 230:  start_lcd();
  7369  0188F6  EC57  F0CB         	call	_start_lcd	;wreg free
  7370                           
  7371                           ; BSR set to: 59
  7372                           ;eadog.c: 231:  wait_lcd_done();
  7373  0188FA  EC84  F0CA         	call	_wait_lcd_done	;wreg free
  7374                           
  7375                           ; BSR set to: 0
  7376  0188FE  82BC               	bsf	188,1,c	;volatile
  7377                           
  7378                           ; BSR set to: 0
  7379                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7380  018900  52E5               	movf	postdec1,f,c
  7381  018902  0012               	return		;funcret
  7382  018904                     __end_of_send_lcd_cmd_dma:
  7383                           	opt callstack 0
  7384                           
  7385 ;; *************** function _wait_lcd_done *****************
  7386 ;; Defined at:
  7387 ;;		line 154 in file "eadog.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;		None
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1  [STACK] void 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 3F/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    8
  7408 ;; This function calls:
  7409 ;;		_wdtdelay
  7410 ;; This function is called by:
  7411 ;;		_send_lcd_cmd_dma
  7412 ;;		_update_lcd
  7413 ;;		_vterm_dump
  7414 ;; This function uses a reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text32
  7418  019508                     __ptext32:
  7419                           	opt callstack 0
  7420  019508                     _wait_lcd_done:
  7421                           	opt callstack 21
  7422                           
  7423                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7424                           
  7425                           ; BSR set to: 0
  7426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7427                           ;incstack = 0
  7428  019508  0100               	movlb	0	; () banked
  7429  01950A  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7430  01950C  D7FD               	goto	_wait_lcd_done
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;eadog.c: 157:  wdtdelay(50);
  7434  01950E  0E32               	movlw	50
  7435  019510  6EE6               	movwf	postinc1,c
  7436  019512  0E00               	movlw	0
  7437  019514  6EE6               	movwf	postinc1,c
  7438  019516  0E00               	movlw	0
  7439  019518  6EE6               	movwf	postinc1,c
  7440  01951A  0E00               	movlw	0
  7441  01951C  6EE6               	movwf	postinc1,c
  7442  01951E  ECD2  F0C3         	call	_wdtdelay	;wreg free
  7443                           
  7444                           ; BSR set to: 0
  7445                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7446  019522  0012               	return		;funcret
  7447  019524                     __end_of_wait_lcd_done:
  7448                           	opt callstack 0
  7449                           
  7450 ;; *************** function _wdtdelay *****************
  7451 ;; Defined at:
  7452 ;;		line 22 in file "eadog.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  delay           4  [STACK] const unsigned long 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  1  [STACK] void 
  7459 ;; Registers used:
  7460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 3F/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7470 ;;Total ram usage:        0 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    7
  7473 ;; This function calls:
  7474 ;;		Nothing
  7475 ;; This function is called by:
  7476 ;;		_init_display
  7477 ;;		_send_lcd_cmd
  7478 ;;		_send_lcd_cmd_long
  7479 ;;		_wait_lcd_done
  7480 ;; This function uses a reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text33
  7484  0187A4                     __ptext33:
  7485                           	opt callstack 0
  7486  0187A4                     _wdtdelay:
  7487                           	opt callstack 21
  7488                           
  7489                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7490                           
  7491                           ; BSR set to: 0
  7492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7493                           ;incstack = 0
  7494  0187A4  0100               	movlb	0	; () banked
  7495  0187A6  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7496  0187A8  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7497  0187AA  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7498  0187AC  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7499  0187AE                     l1444:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;eadog.c: 27:   __nop();
  7503  0187AE  F000               	nop	
  7504  0187B0  0004               	clrwdt		;# 
  7505                           
  7506                           ;eadog.c: 29:  };
  7507  0187B2  0E01               	movlw	1
  7508  0187B4  0100               	movlb	0	; () banked
  7509  0187B6  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7510  0187B8  0E00               	movlw	0
  7511  0187BA  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7512  0187BC  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7513  0187BE  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;stkvar	_delay @ sp[(0)+-4]
  7517  0187C0  0EFC               	movlw	-4
  7518  0187C2  006F FF8C  F025    	movff	plusw1,btemp
  7519  0187C8  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7520  0187CA  5C25               	subwf	btemp^0,w,c
  7521  0187CC  0EFD               	movlw	-3
  7522  0187CE  006F FF8C  F025    	movff	plusw1,btemp
  7523  0187D4  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7524  0187D6  5825               	subwfb	btemp^0,w,c
  7525  0187D8  0EFE               	movlw	-2
  7526  0187DA  006F FF8C  F025    	movff	plusw1,btemp
  7527  0187E0  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7528  0187E2  5825               	subwfb	btemp^0,w,c
  7529  0187E4  0EFF               	movlw	-1
  7530  0187E6  006F FF8C  F025    	movff	plusw1,btemp
  7531  0187EC  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7532  0187EE  5825               	subwfb	btemp^0,w,c
  7533  0187F0  B0D8               	btfsc	status,0,c
  7534  0187F2  D7DD               	goto	l1444
  7535                           
  7536                           ; BSR set to: 0
  7537                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7538  0187F4  52E5               	movf	postdec1,f,c
  7539  0187F6  52E5               	movf	postdec1,f,c
  7540  0187F8  52E5               	movf	postdec1,f,c
  7541  0187FA  52E5               	movf	postdec1,f,c
  7542  0187FC  0012               	return		;funcret
  7543  0187FE                     __end_of_wdtdelay:
  7544                           	opt callstack 0
  7545                           
  7546 ;; *************** function _eaDogM_WriteString *****************
  7547 ;; Defined at:
  7548 ;;		line 197 in file "eadog.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  strPtr          2  [STACK] PTR unsigned char 
  7551 ;;		 -> D.lcd(288), D(290), V(188), 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1  [STACK] void 
  7556 ;; Registers used:
  7557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7558 ;; Tracked objects:
  7559 ;;		On entry : 3F/0
  7560 ;;		On exit  : 3F/3B
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;Total ram usage:        0 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:   16
  7570 ;; This function calls:
  7571 ;;		_printf
  7572 ;;		_ringBufS_flush
  7573 ;;		_start_lcd
  7574 ;;		_strlen
  7575 ;;		_wait_lcd_set
  7576 ;; This function is called by:
  7577 ;;		_eaDogM_WriteStringAtPos
  7578 ;; This function uses a reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text34
  7582  017E72                     __ptext34:
  7583                           	opt callstack 0
  7584  017E72                     _eaDogM_WriteString:
  7585                           	opt callstack 12
  7586                           
  7587                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7588                           
  7589                           ; BSR set to: 0
  7590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7591                           ;incstack = 0
  7592  017E72  EC54  F0CB         	call	_wait_lcd_set	;wreg free
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7596  017E76  0E00               	movlw	0
  7597  017E78  6EE6               	movwf	postinc1,c
  7598  017E7A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7599  017E80  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7600  017E86  EC29  F0C0         	call	_ringBufS_flush	;wreg free
  7601  017E8A  94BC               	bcf	188,2,c	;volatile
  7602                           
  7603                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7604                           ;stkvar	_strPtr @ sp[(0)+-2]
  7605  017E8C  0EFE               	movlw	-2
  7606  017E8E  006F FF8F FFE6     	movff	plusw1,postinc1
  7607  017E94  006F FF8F FFE6     	movff	plusw1,postinc1
  7608  017E9A  EC8C  F0BF         	call	_strlen	;wreg free
  7609  017E9E  5026               	movf	(btemp+1)^0,w,c
  7610  017EA0  E104               	bnz	u10720
  7611  017EA2  0E41               	movlw	65
  7612  017EA4  5C25               	subwf	btemp^0,w,c
  7613  017EA6  A0D8               	btfss	status,0,c
  7614  017EA8  D010               	goto	l10886
  7615  017EAA                     u10720:
  7616                           
  7617                           ;stkvar	_strPtr @ sp[(0)+-2]
  7618  017EAA  0EFE               	movlw	-2
  7619  017EAC  006F FF8C  F02F    	movff	plusw1,btemp+10
  7620  017EB2  0EFF               	movlw	-1
  7621  017EB4  006F FF8C  F030    	movff	plusw1,btemp+11
  7622  017EBA  0E40               	movlw	64
  7623  017EBC  242F               	addwf	(btemp+10)^0,w,c
  7624  017EBE  6ED9               	movwf	fsr2l,c
  7625  017EC0  0E00               	movlw	0
  7626  017EC2  2030               	addwfc	(btemp+11)^0,w,c
  7627  017EC4  6EDA               	movwf	fsr2h,c
  7628  017EC6  0E00               	movlw	0
  7629  017EC8  6EDF               	movwf	indf2,c
  7630  017ECA                     l10886:
  7631                           
  7632                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  7633  017ECA  013B               	movlb	59	; () banked
  7634  017ECC  9FFC               	bcf	252,7,b	;volatile
  7635                           
  7636                           ; BSR set to: 59
  7637                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  7638                           ;stkvar	_strPtr @ sp[(0)+-2]
  7639  017ECE  0EFE               	movlw	-2
  7640  017ED0  006F FF8F FFE6     	movff	plusw1,postinc1
  7641  017ED6  006F FF8F FFE6     	movff	plusw1,postinc1
  7642  017EDC  EC8C  F0BF         	call	_strlen	;wreg free
  7643  017EE0  0060  F097  FBF7   	movff	btemp,15351	;volatile
  7644  017EE6  0060  F09B  FBF8   	movff	btemp+1,15352	;volatile
  7645                           
  7646                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  7647  017EEC  013B               	movlb	59	; () banked
  7648  017EEE  8FFC               	bsf	252,7,b	;volatile
  7649                           
  7650                           ; BSR set to: 59
  7651                           ;eadog.c: 208:  printf("%s", strPtr);
  7652                           ;stkvar	_strPtr @ sp[(0)+-2]
  7653  017EF0  0EFE               	movlw	-2
  7654  017EF2  006F FF8F FFE6     	movff	plusw1,postinc1
  7655  017EF8  006F FF8F FFE6     	movff	plusw1,postinc1
  7656  017EFE  0EFC               	movlw	low STR_24
  7657  017F00  6EE6               	movwf	postinc1,c
  7658  017F02  0EFF               	movlw	high STR_24
  7659  017F04  6EE6               	movwf	postinc1,c
  7660  017F06  0E04               	movlw	4
  7661  017F08  6EE6               	movwf	postinc1,c
  7662  017F0A  EC72  F0C3         	call	_printf	;wreg free
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;eadog.c: 209:  start_lcd();
  7666  017F0E  EC57  F0CB         	call	_start_lcd	;wreg free
  7667                           
  7668                           ; BSR set to: 59
  7669                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7670  017F12  52E5               	movf	postdec1,f,c
  7671  017F14  52E5               	movf	postdec1,f,c
  7672  017F16  0012               	return		;funcret
  7673  017F18                     __end_of_eaDogM_WriteString:
  7674                           	opt callstack 0
  7675                           
  7676 ;; *************** function _wait_lcd_set *****************
  7677 ;; Defined at:
  7678 ;;		line 144 in file "eadog.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;		None
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;		None
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1  [STACK] void 
  7685 ;; Registers used:
  7686 ;;		None
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/3D
  7689 ;;		On exit  : 3F/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7696 ;;Total ram usage:        0 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    7
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_eaDogM_WriteString
  7703 ;;		_send_lcd_cmd_dma
  7704 ;; This function uses a reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text35
  7708  0196A8                     __ptext35:
  7709                           	opt callstack 0
  7710  0196A8                     _wait_lcd_set:
  7711                           	opt callstack 20
  7712                           
  7713                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  7714                           
  7715                           ; BSR set to: 59
  7716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7717                           ;incstack = 0
  7718  0196A8  0100               	movlb	0	; () banked
  7719  0196AA  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  7720                           
  7721                           ; BSR set to: 0
  7722                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7723  0196AC  0012               	return		;funcret
  7724  0196AE                     __end_of_wait_lcd_set:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _start_lcd *****************
  7728 ;; Defined at:
  7729 ;;		line 139 in file "eadog.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1  [STACK] void 
  7736 ;; Registers used:
  7737 ;;		None
  7738 ;; Tracked objects:
  7739 ;;		On entry : 3F/0
  7740 ;;		On exit  : 3F/3B
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    7
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_eaDogM_WriteString
  7754 ;;		_send_lcd_cmd_dma
  7755 ;; This function uses a reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text36
  7759  0196AE                     __ptext36:
  7760                           	opt callstack 0
  7761  0196AE                     _start_lcd:
  7762                           	opt callstack 20
  7763                           
  7764                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  7765                           
  7766                           ; BSR set to: 0
  7767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7768                           ;incstack = 0
  7769  0196AE  013B               	movlb	59	; () banked
  7770  0196B0  8DFC               	bsf	252,6,b	;volatile
  7771                           
  7772                           ; BSR set to: 59
  7773                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7774  0196B2  0012               	return		;funcret
  7775  0196B4                     __end_of_start_lcd:
  7776                           	opt callstack 0
  7777                           
  7778 ;; *************** function _ringBufS_flush *****************
  7779 ;; Defined at:
  7780 ;;		line 76 in file "ringbufs.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7783 ;;		 -> ring_buf1(67), 
  7784 ;;  clearBuffer     1  [STACK] const char 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1  [STACK] void 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7791 ;; Tracked objects:
  7792 ;;		On entry : 3F/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7800 ;;Total ram usage:        0 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    8
  7803 ;; This function calls:
  7804 ;;		_memset
  7805 ;; This function is called by:
  7806 ;;		_eaDogM_WriteString
  7807 ;;		_send_lcd_cmd_dma
  7808 ;; This function uses a reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text37
  7812  018052                     __ptext37:
  7813                           	opt callstack 0
  7814  018052                     _ringBufS_flush:
  7815                           	opt callstack 19
  7816                           
  7817                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7818                           ;stkvar	__this @ sp[(0)+-2]
  7819                           
  7820                           ; BSR set to: 59
  7821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7822                           ;incstack = 0
  7823  018052  0EFE               	movlw	-2
  7824  018054  006F FF8C  F02F    	movff	plusw1,btemp+10
  7825  01805A  0EFF               	movlw	-1
  7826  01805C  006F FF8C  F030    	movff	plusw1,btemp+11
  7827  018062  0E42               	movlw	66
  7828  018064  242F               	addwf	(btemp+10)^0,w,c
  7829  018066  6ED9               	movwf	fsr2l,c
  7830  018068  0E00               	movlw	0
  7831  01806A  2030               	addwfc	(btemp+11)^0,w,c
  7832  01806C  6EDA               	movwf	fsr2h,c
  7833  01806E  0E00               	movlw	0
  7834  018070  6EDF               	movwf	indf2,c
  7835                           
  7836                           ;ringbufs.c: 79:  _this->head = 0;
  7837                           ;stkvar	__this @ sp[(0)+-2]
  7838  018072  0EFE               	movlw	-2
  7839  018074  006F FF8C  F02F    	movff	plusw1,btemp+10
  7840  01807A  0EFF               	movlw	-1
  7841  01807C  006F FF8C  F030    	movff	plusw1,btemp+11
  7842  018082  0E40               	movlw	64
  7843  018084  242F               	addwf	(btemp+10)^0,w,c
  7844  018086  6ED9               	movwf	fsr2l,c
  7845  018088  0E00               	movlw	0
  7846  01808A  2030               	addwfc	(btemp+11)^0,w,c
  7847  01808C  6EDA               	movwf	fsr2h,c
  7848  01808E  0E00               	movlw	0
  7849  018090  6EDF               	movwf	indf2,c
  7850                           
  7851                           ;ringbufs.c: 80:  _this->tail = 0;
  7852                           ;stkvar	__this @ sp[(0)+-2]
  7853  018092  0EFE               	movlw	-2
  7854  018094  006F FF8C  F02F    	movff	plusw1,btemp+10
  7855  01809A  0EFF               	movlw	-1
  7856  01809C  006F FF8C  F030    	movff	plusw1,btemp+11
  7857  0180A2  0E41               	movlw	65
  7858  0180A4  242F               	addwf	(btemp+10)^0,w,c
  7859  0180A6  6ED9               	movwf	fsr2l,c
  7860  0180A8  0E00               	movlw	0
  7861  0180AA  2030               	addwfc	(btemp+11)^0,w,c
  7862  0180AC  6EDA               	movwf	fsr2h,c
  7863  0180AE  0E00               	movlw	0
  7864  0180B0  6EDF               	movwf	indf2,c
  7865                           
  7866                           ;ringbufs.c: 81:  if (clearBuffer) {
  7867                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7868  0180B2  0EFD               	movlw	-3
  7869  0180B4  50E3               	movf	plusw1,w,c
  7870  0180B6  B4D8               	btfsc	status,2,c
  7871  0180B8  D011               	goto	l1584
  7872                           
  7873                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7874  0180BA  0E40               	movlw	64
  7875  0180BC  6EE6               	movwf	postinc1,c
  7876  0180BE  0E00               	movlw	0
  7877  0180C0  6EE6               	movwf	postinc1,c
  7878  0180C2  0E00               	movlw	0
  7879  0180C4  6EE6               	movwf	postinc1,c
  7880  0180C6  0E00               	movlw	0
  7881  0180C8  6EE6               	movwf	postinc1,c
  7882                           
  7883                           ;stkvar	__this @ sp[(-4)+-2]
  7884  0180CA  0EFA               	movlw	-6
  7885  0180CC  006F FF8F FFE6     	movff	plusw1,postinc1
  7886  0180D2  006F FF8F FFE6     	movff	plusw1,postinc1
  7887  0180D8  EC6A  F0A8         	call	_memset	;wreg free
  7888  0180DC                     l1584:
  7889                           
  7890                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7891  0180DC  52E5               	movf	postdec1,f,c
  7892  0180DE  52E5               	movf	postdec1,f,c
  7893  0180E0  52E5               	movf	postdec1,f,c
  7894  0180E2  0012               	return		;funcret
  7895  0180E4                     __end_of_ringBufS_flush:
  7896                           	opt callstack 0
  7897                           
  7898 ;; *************** function _memset *****************
  7899 ;; Defined at:
  7900 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  dest            2  [STACK] PTR void 
  7903 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7904 ;;  c               2  [STACK] int 
  7905 ;;  n               2  [STACK] unsigned int 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  s               2  [STACK] PTR unsigned char 
  7908 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7909 ;;  k               2  [STACK] unsigned int 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  2  [STACK] PTR void 
  7912 ;; Registers used:
  7913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7923 ;;Total ram usage:        0 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    7
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		_ringBufS_init
  7930 ;;		_ringBufS_flush
  7931 ;; This function uses a reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text38
  7935  0150D4                     __ptext38:
  7936                           	opt callstack 0
  7937  0150D4                     _memset:
  7938                           	opt callstack 0
  7939                           
  7940                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7941  0150D4  52E6               	movf	postinc1,f,c
  7942  0150D6  52E6               	movf	postinc1,f,c
  7943  0150D8  52E6               	movf	postinc1,f,c
  7944  0150DA  52E6               	movf	postinc1,f,c
  7945                           
  7946                           ;stkvar	_dest @ sp[(-4)+-2]
  7947                           
  7948                           ;incstack = 0
  7949  0150DC  0EFA               	movlw	-6
  7950  0150DE  006F FF8C  F02F    	movff	plusw1,btemp+10
  7951  0150E4  0EFB               	movlw	-5
  7952  0150E6  006F FF8C  F030    	movff	plusw1,btemp+11
  7953                           
  7954                           ;stkvar	_s @ sp[(-4)+0]
  7955  0150EC  0EFD               	movlw	-3
  7956  0150EE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  7957  0150F4  0EFC               	movlw	-4
  7958  0150F6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  7959                           
  7960                           ;stkvar	_n @ sp[(-4)+-6]
  7961  0150FC  0EF6               	movlw	-10
  7962  0150FE  006F FF8C  F025    	movff	plusw1,btemp
  7963  015104  0EF7               	movlw	-9
  7964  015106  50E3               	movf	plusw1,w,c
  7965  015108  1025               	iorwf	btemp^0,w,c
  7966  01510A  B4D8               	btfsc	status,2,c
  7967  01510C  D154               	goto	u10690
  7968                           
  7969                           ;stkvar	_c @ sp[(-4)+-4]
  7970                           ;stkvar	_s @ sp[(-4)+0]
  7971  01510E  0EFC               	movlw	-4
  7972  015110  006F FF8F FFD9     	movff	plusw1,fsr2l
  7973  015116  0EFD               	movlw	-3
  7974  015118  006F FF8F FFDA     	movff	plusw1,fsr2h
  7975  01511E  0EF8               	movlw	-8
  7976  015120  006F FF8F FFDF     	movff	plusw1,indf2
  7977                           
  7978                           ;stkvar	_c @ sp[(-4)+-4]
  7979                           ;stkvar	_n @ sp[(-4)+-6]
  7980                           ;stkvar	_s @ sp[(-4)+0]
  7981  015126  0EFC               	movlw	-4
  7982  015128  006F FF8C  F02F    	movff	plusw1,btemp+10
  7983  01512E  0EFD               	movlw	-3
  7984  015130  006F FF8C  F030    	movff	plusw1,btemp+11
  7985  015136  0EF6               	movlw	-10
  7986  015138  50E3               	movf	plusw1,w,c
  7987  01513A  262F               	addwf	(btemp+10)^0,f,c
  7988  01513C  0EF7               	movlw	-9
  7989  01513E  50E3               	movf	plusw1,w,c
  7990  015140  2230               	addwfc	(btemp+11)^0,f,c
  7991  015142  0EFF               	movlw	255
  7992  015144  242F               	addwf	(btemp+10)^0,w,c
  7993  015146  6ED9               	movwf	fsr2l,c
  7994  015148  0EFF               	movlw	255
  7995  01514A  2030               	addwfc	(btemp+11)^0,w,c
  7996  01514C  6EDA               	movwf	fsr2h,c
  7997  01514E  0EF8               	movlw	-8
  7998  015150  006F FF8F FFDF     	movff	plusw1,indf2
  7999                           
  8000                           ;stkvar	_n @ sp[(-4)+-6]
  8001  015156  0EF7               	movlw	-9
  8002  015158  50E3               	movf	plusw1,w,c
  8003  01515A  E108               	bnz	l10802
  8004  01515C  0EF6               	movlw	-10
  8005  01515E  006F FF8C  F025    	movff	plusw1,btemp
  8006  015164  0E03               	movlw	3
  8007  015166  5E25               	subwf	btemp^0,f,c
  8008  015168  A0D8               	btfss	status,0,c
  8009  01516A  D125               	goto	u10690
  8010  01516C                     l10802:
  8011                           
  8012                           ;stkvar	_c @ sp[(-4)+-4]
  8013                           ;stkvar	_s @ sp[(-4)+0]
  8014  01516C  0EFC               	movlw	-4
  8015  01516E  006F FF8C  F02F    	movff	plusw1,btemp+10
  8016  015174  0EFD               	movlw	-3
  8017  015176  006F FF8C  F030    	movff	plusw1,btemp+11
  8018  01517C  0E01               	movlw	1
  8019  01517E  242F               	addwf	(btemp+10)^0,w,c
  8020  015180  6ED9               	movwf	fsr2l,c
  8021  015182  0E00               	movlw	0
  8022  015184  2030               	addwfc	(btemp+11)^0,w,c
  8023  015186  6EDA               	movwf	fsr2h,c
  8024  015188  0EF8               	movlw	-8
  8025  01518A  006F FF8F FFDF     	movff	plusw1,indf2
  8026                           
  8027                           ;stkvar	_c @ sp[(-4)+-4]
  8028                           ;stkvar	_s @ sp[(-4)+0]
  8029  015190  0EFC               	movlw	-4
  8030  015192  006F FF8C  F02F    	movff	plusw1,btemp+10
  8031  015198  0EFD               	movlw	-3
  8032  01519A  006F FF8C  F030    	movff	plusw1,btemp+11
  8033  0151A0  0E02               	movlw	2
  8034  0151A2  242F               	addwf	(btemp+10)^0,w,c
  8035  0151A4  6ED9               	movwf	fsr2l,c
  8036  0151A6  0E00               	movlw	0
  8037  0151A8  2030               	addwfc	(btemp+11)^0,w,c
  8038  0151AA  6EDA               	movwf	fsr2h,c
  8039  0151AC  0EF8               	movlw	-8
  8040  0151AE  006F FF8F FFDF     	movff	plusw1,indf2
  8041                           
  8042                           ;stkvar	_c @ sp[(-4)+-4]
  8043                           ;stkvar	_n @ sp[(-4)+-6]
  8044                           ;stkvar	_s @ sp[(-4)+0]
  8045  0151B4  0EFC               	movlw	-4
  8046  0151B6  006F FF8C  F02F    	movff	plusw1,btemp+10
  8047  0151BC  0EFD               	movlw	-3
  8048  0151BE  006F FF8C  F030    	movff	plusw1,btemp+11
  8049  0151C4  0EF6               	movlw	-10
  8050  0151C6  50E3               	movf	plusw1,w,c
  8051  0151C8  262F               	addwf	(btemp+10)^0,f,c
  8052  0151CA  0EF7               	movlw	-9
  8053  0151CC  50E3               	movf	plusw1,w,c
  8054  0151CE  2230               	addwfc	(btemp+11)^0,f,c
  8055  0151D0  0EFE               	movlw	254
  8056  0151D2  242F               	addwf	(btemp+10)^0,w,c
  8057  0151D4  6ED9               	movwf	fsr2l,c
  8058  0151D6  0EFF               	movlw	255
  8059  0151D8  2030               	addwfc	(btemp+11)^0,w,c
  8060  0151DA  6EDA               	movwf	fsr2h,c
  8061  0151DC  0EF8               	movlw	-8
  8062  0151DE  006F FF8F FFDF     	movff	plusw1,indf2
  8063                           
  8064                           ;stkvar	_c @ sp[(-4)+-4]
  8065                           ;stkvar	_n @ sp[(-4)+-6]
  8066                           ;stkvar	_s @ sp[(-4)+0]
  8067  0151E4  0EFC               	movlw	-4
  8068  0151E6  006F FF8C  F02F    	movff	plusw1,btemp+10
  8069  0151EC  0EFD               	movlw	-3
  8070  0151EE  006F FF8C  F030    	movff	plusw1,btemp+11
  8071  0151F4  0EF6               	movlw	-10
  8072  0151F6  50E3               	movf	plusw1,w,c
  8073  0151F8  262F               	addwf	(btemp+10)^0,f,c
  8074  0151FA  0EF7               	movlw	-9
  8075  0151FC  50E3               	movf	plusw1,w,c
  8076  0151FE  2230               	addwfc	(btemp+11)^0,f,c
  8077  015200  0EFD               	movlw	253
  8078  015202  242F               	addwf	(btemp+10)^0,w,c
  8079  015204  6ED9               	movwf	fsr2l,c
  8080  015206  0EFF               	movlw	255
  8081  015208  2030               	addwfc	(btemp+11)^0,w,c
  8082  01520A  6EDA               	movwf	fsr2h,c
  8083  01520C  0EF8               	movlw	-8
  8084  01520E  006F FF8F FFDF     	movff	plusw1,indf2
  8085                           
  8086                           ;stkvar	_n @ sp[(-4)+-6]
  8087  015214  0EF7               	movlw	-9
  8088  015216  50E3               	movf	plusw1,w,c
  8089  015218  E108               	bnz	l10808
  8090  01521A  0EF6               	movlw	-10
  8091  01521C  006F FF8C  F025    	movff	plusw1,btemp
  8092  015222  0E07               	movlw	7
  8093  015224  5E25               	subwf	btemp^0,f,c
  8094  015226  A0D8               	btfss	status,0,c
  8095  015228  D0C6               	goto	u10690
  8096  01522A                     l10808:
  8097                           
  8098                           ;stkvar	_c @ sp[(-4)+-4]
  8099                           ;stkvar	_s @ sp[(-4)+0]
  8100  01522A  0EFC               	movlw	-4
  8101  01522C  006F FF8C  F02F    	movff	plusw1,btemp+10
  8102  015232  0EFD               	movlw	-3
  8103  015234  006F FF8C  F030    	movff	plusw1,btemp+11
  8104  01523A  0E03               	movlw	3
  8105  01523C  242F               	addwf	(btemp+10)^0,w,c
  8106  01523E  6ED9               	movwf	fsr2l,c
  8107  015240  0E00               	movlw	0
  8108  015242  2030               	addwfc	(btemp+11)^0,w,c
  8109  015244  6EDA               	movwf	fsr2h,c
  8110  015246  0EF8               	movlw	-8
  8111  015248  006F FF8F FFDF     	movff	plusw1,indf2
  8112                           
  8113                           ;stkvar	_c @ sp[(-4)+-4]
  8114                           ;stkvar	_n @ sp[(-4)+-6]
  8115                           ;stkvar	_s @ sp[(-4)+0]
  8116  01524E  0EFC               	movlw	-4
  8117  015250  006F FF8C  F02F    	movff	plusw1,btemp+10
  8118  015256  0EFD               	movlw	-3
  8119  015258  006F FF8C  F030    	movff	plusw1,btemp+11
  8120  01525E  0EF6               	movlw	-10
  8121  015260  50E3               	movf	plusw1,w,c
  8122  015262  262F               	addwf	(btemp+10)^0,f,c
  8123  015264  0EF7               	movlw	-9
  8124  015266  50E3               	movf	plusw1,w,c
  8125  015268  2230               	addwfc	(btemp+11)^0,f,c
  8126  01526A  0EFC               	movlw	252
  8127  01526C  242F               	addwf	(btemp+10)^0,w,c
  8128  01526E  6ED9               	movwf	fsr2l,c
  8129  015270  0EFF               	movlw	255
  8130  015272  2030               	addwfc	(btemp+11)^0,w,c
  8131  015274  6EDA               	movwf	fsr2h,c
  8132  015276  0EF8               	movlw	-8
  8133  015278  006F FF8F FFDF     	movff	plusw1,indf2
  8134                           
  8135                           ;stkvar	_n @ sp[(-4)+-6]
  8136  01527E  0EF7               	movlw	-9
  8137  015280  50E3               	movf	plusw1,w,c
  8138  015282  E108               	bnz	l10814
  8139  015284  0EF6               	movlw	-10
  8140  015286  006F FF8C  F025    	movff	plusw1,btemp
  8141  01528C  0E09               	movlw	9
  8142  01528E  5E25               	subwf	btemp^0,f,c
  8143  015290  A0D8               	btfss	status,0,c
  8144  015292  D091               	goto	u10690
  8145  015294                     l10814:
  8146                           
  8147                           ;stkvar	_s @ sp[(-4)+0]
  8148  015294  0EFC               	movlw	-4
  8149  015296  006F FF8C  F02F    	movff	plusw1,btemp+10
  8150  01529C  1E2F               	comf	(btemp+10)^0,f,c
  8151  01529E  0EFD               	movlw	-3
  8152  0152A0  006F FF8C  F030    	movff	plusw1,btemp+11
  8153  0152A6  1E30               	comf	(btemp+11)^0,f,c
  8154  0152A8  2A2F               	incf	(btemp+10)^0,f,c
  8155  0152AA  B4D8               	btfsc	status,2,c
  8156  0152AC  2A30               	incf	(btemp+11)^0,f,c
  8157  0152AE  0E03               	movlw	3
  8158  0152B0  162F               	andwf	(btemp+10)^0,f,c
  8159  0152B2  0E00               	movlw	0
  8160  0152B4  1630               	andwf	(btemp+11)^0,f,c
  8161                           
  8162                           ;stkvar	_k @ sp[(-4)+2]
  8163  0152B6  0EFE               	movlw	-2
  8164  0152B8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8165  0152BE  0EFF               	movlw	-1
  8166  0152C0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8167                           
  8168                           ;stkvar	_k @ sp[(-4)+2]
  8169                           ;stkvar	_s @ sp[(-4)+0]
  8170  0152C6  0EFC               	movlw	-4
  8171  0152C8  50E3               	movf	plusw1,w,c
  8172  0152CA  6E25               	movwf	btemp^0,c
  8173  0152CC  0EFE               	movlw	-2
  8174  0152CE  50E3               	movf	plusw1,w,c
  8175  0152D0  2625               	addwf	btemp^0,f,c
  8176  0152D2  0EFC               	movlw	-4
  8177  0152D4  0060  F097  FFE3   	movff	btemp,plusw1
  8178  0152DA  0EFD               	movlw	-3
  8179  0152DC  50E3               	movf	plusw1,w,c
  8180  0152DE  6E25               	movwf	btemp^0,c
  8181  0152E0  0EFF               	movlw	-1
  8182  0152E2  50E3               	movf	plusw1,w,c
  8183  0152E4  2225               	addwfc	btemp^0,f,c
  8184  0152E6  0EFD               	movlw	-3
  8185  0152E8  0060  F097  FFE3   	movff	btemp,plusw1
  8186                           
  8187                           ;stkvar	_k @ sp[(-4)+2]
  8188                           ;stkvar	_n @ sp[(-4)+-6]
  8189  0152EE  0EF6               	movlw	-10
  8190  0152F0  50E3               	movf	plusw1,w,c
  8191  0152F2  6E25               	movwf	btemp^0,c
  8192  0152F4  0EFE               	movlw	-2
  8193  0152F6  50E3               	movf	plusw1,w,c
  8194  0152F8  5E25               	subwf	btemp^0,f,c
  8195  0152FA  0EF6               	movlw	-10
  8196  0152FC  0060  F097  FFE3   	movff	btemp,plusw1
  8197  015302  0EF7               	movlw	-9
  8198  015304  50E3               	movf	plusw1,w,c
  8199  015306  6E25               	movwf	btemp^0,c
  8200  015308  0EFF               	movlw	-1
  8201  01530A  50E3               	movf	plusw1,w,c
  8202  01530C  5A25               	subwfb	btemp^0,f,c
  8203  01530E  0EF7               	movlw	-9
  8204  015310  0060  F097  FFE3   	movff	btemp,plusw1
  8205  015316  0EFC               	movlw	252
  8206  015318  6E2F               	movwf	(btemp+10)^0,c
  8207  01531A  0EFF               	movlw	255
  8208  01531C  6E30               	movwf	(btemp+11)^0,c
  8209                           
  8210                           ;stkvar	_n @ sp[(-4)+-6]
  8211  01531E  0EF6               	movlw	-10
  8212  015320  006F FF8C  F025    	movff	plusw1,btemp
  8213  015326  502F               	movf	(btemp+10)^0,w,c
  8214  015328  1625               	andwf	btemp^0,f,c
  8215  01532A  0EF6               	movlw	-10
  8216  01532C  0060  F097  FFE3   	movff	btemp,plusw1
  8217  015332  0EF7               	movlw	-9
  8218  015334  006F FF8C  F025    	movff	plusw1,btemp
  8219  01533A  5030               	movf	(btemp+11)^0,w,c
  8220  01533C  1625               	andwf	btemp^0,f,c
  8221  01533E  0EF7               	movlw	-9
  8222  015340  D02E               	goto	L6
  8223  015342                     l10822:
  8224                           
  8225                           ;stkvar	_c @ sp[(-4)+-4]
  8226                           ;stkvar	_s @ sp[(-4)+0]
  8227  015342  0EFC               	movlw	-4
  8228  015344  006F FF8F FFD9     	movff	plusw1,fsr2l
  8229  01534A  0EFD               	movlw	-3
  8230  01534C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8231  015352  0EF8               	movlw	-8
  8232  015354  006F FF8F FFDF     	movff	plusw1,indf2
  8233                           
  8234                           ;stkvar	_n @ sp[(-4)+-6]
  8235  01535A  0EF6               	movlw	-10
  8236  01535C  006F FF8C  F025    	movff	plusw1,btemp
  8237  015362  0E01               	movlw	1
  8238  015364  5E25               	subwf	btemp^0,f,c
  8239  015366  0EF6               	movlw	-10
  8240  015368  0060  F097  FFE3   	movff	btemp,plusw1
  8241  01536E  0EF7               	movlw	-9
  8242  015370  006F FF8C  F025    	movff	plusw1,btemp
  8243  015376  0E00               	movlw	0
  8244  015378  5A25               	subwfb	btemp^0,f,c
  8245  01537A  0EF7               	movlw	-9
  8246  01537C  0060  F097  FFE3   	movff	btemp,plusw1
  8247                           
  8248                           ;stkvar	_s @ sp[(-4)+0]
  8249  015382  0EFC               	movlw	-4
  8250  015384  50E3               	movf	plusw1,w,c
  8251  015386  0F01               	addlw	1
  8252  015388  6E25               	movwf	btemp^0,c
  8253  01538A  0EFC               	movlw	-4
  8254  01538C  0060  F097  FFE3   	movff	btemp,plusw1
  8255  015392  6A25               	clrf	btemp^0,c
  8256  015394  0EFD               	movlw	-3
  8257  015396  50E3               	movf	plusw1,w,c
  8258  015398  2025               	addwfc	btemp^0,w,c
  8259  01539A  6E25               	movwf	btemp^0,c
  8260  01539C  0EFD               	movlw	-3
  8261  01539E                     L6:
  8262  01539E  0060  F097  FFE3   	movff	btemp,plusw1
  8263                           
  8264                           ;stkvar	_n @ sp[(-4)+-6]
  8265  0153A4  0EF6               	movlw	-10
  8266  0153A6  006F FF8C  F025    	movff	plusw1,btemp
  8267  0153AC  0EF7               	movlw	-9
  8268  0153AE  50E3               	movf	plusw1,w,c
  8269  0153B0  1025               	iorwf	btemp^0,w,c
  8270  0153B2  A4D8               	btfss	status,2,c
  8271  0153B4  D7C6               	goto	l10822
  8272  0153B6                     u10690:
  8273                           
  8274                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8275  0153B6  0EF6               	movlw	246
  8276  0153B8  26E1               	addwf	fsr1l,f,c
  8277  0153BA  0EFF               	movlw	255
  8278  0153BC  22E2               	addwfc	fsr1h,f,c
  8279  0153BE  0012               	return		;funcret
  8280  0153C0                     __end_of_memset:
  8281                           	opt callstack 0
  8282                           
  8283 ;; *************** function _printf *****************
  8284 ;; Defined at:
  8285 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  fmt             2  [STACK] PTR const unsigned char 
  8288 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  ap              2  [STACK] PTR void [1]
  8291 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8292 ;;  ret             2    0        int 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  2  [STACK] int 
  8295 ;; Registers used:
  8296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8297 ;; Tracked objects:
  8298 ;;		On entry : 3F/3B
  8299 ;;		On exit  : 3F/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8306 ;;Total ram usage:        0 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:   15
  8309 ;; This function calls:
  8310 ;;		_vfprintf
  8311 ;; This function is called by:
  8312 ;;		_eaDogM_WriteString
  8313 ;;		_send_lcd_cmd_dma
  8314 ;; This function uses a reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text39
  8318  0186E4                     __ptext39:
  8319                           	opt callstack 0
  8320  0186E4                     _printf:
  8321                           	opt callstack 0
  8322                           
  8323                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8324  0186E4  52E6               	movf	postinc1,f,c
  8325  0186E6  52E6               	movf	postinc1,f,c
  8326                           
  8327                           ;stkvar	?_printf @ sp[(-2)+-3]
  8328                           
  8329                           ;incstack = 0
  8330  0186E8  0EFB               	movlw	251
  8331  0186EA  24E1               	addwf	fsr1l,w,c
  8332  0186EC  6E2F               	movwf	(btemp+10)^0,c
  8333  0186EE  0EFF               	movlw	255
  8334  0186F0  20E2               	addwfc	fsr1h,w,c
  8335  0186F2  6E30               	movwf	(btemp+11)^0,c
  8336                           
  8337                           ;stkvar	_ap @ sp[(-2)+0]
  8338  0186F4  0EFF               	movlw	-1
  8339  0186F6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8340  0186FC  0EFE               	movlw	-2
  8341  0186FE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8342                           
  8343                           ;stkvar	_ap @ sp[(-2)+0]
  8344  018704  0EFE               	movlw	254
  8345  018706  24E1               	addwf	fsr1l,w,c
  8346  018708  6E25               	movwf	btemp^0,c
  8347  01870A  0EFF               	movlw	255
  8348  01870C  20E2               	addwfc	fsr1h,w,c
  8349  01870E  6E26               	movwf	(btemp+1)^0,c
  8350  018710  0060  F097  FFE6   	movff	btemp,postinc1
  8351  018716  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8352                           
  8353                           ;stkvar	_fmt @ sp[(-4)+-3]
  8354  01871C  0EF9               	movlw	-7
  8355  01871E  006F FF8F FFE6     	movff	plusw1,postinc1
  8356  018724  006F FF8F FFE6     	movff	plusw1,postinc1
  8357  01872A  0E00               	movlw	0
  8358  01872C  6EE6               	movwf	postinc1,c
  8359  01872E  0E00               	movlw	0
  8360  018730  6EE6               	movwf	postinc1,c
  8361  018732  EC8E  F0BE         	call	_vfprintf	;wreg free
  8362                           
  8363                           ; BSR set to: 0
  8364                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8365  018736  52E5               	movf	postdec1,f,c
  8366  018738  52E5               	movf	postdec1,f,c
  8367  01873A  52E5               	movf	postdec1,f,c
  8368  01873C  50E7               	movf	indf1,w,c
  8369  01873E  5EE1               	subwf	fsr1l,f,c
  8370  018740  0E00               	movlw	0
  8371  018742  5AE2               	subwfb	fsr1h,f,c
  8372  018744  0012               	return		;funcret
  8373  018746                     __end_of_printf:
  8374                           	opt callstack 0
  8375                           
  8376 ;; *************** function _vfprintf *****************
  8377 ;; Defined at:
  8378 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8381 ;;		 -> f(6), NULL(0), 
  8382 ;;  fmt             2  [STACK] PTR const unsigned char 
  8383 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8384 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8385 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8386 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8387 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8388 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8389 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8390 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8391 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8392 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8393 ;;  ap              2  [STACK] PTR PTR void 
  8394 ;;		 -> ap(2), ap(2), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  cfmt            2  [STACK] PTR unsigned char 
  8397 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8398 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8399 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8400 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8401 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8402 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8403 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8404 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8405 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8406 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  2  [STACK] int 
  8409 ;; Registers used:
  8410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/1
  8413 ;;		On exit  : 3F/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8420 ;;Total ram usage:        0 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:   14
  8423 ;; This function calls:
  8424 ;;		_vfpfcnvrt
  8425 ;; This function is called by:
  8426 ;;		_sprintf
  8427 ;;		_printf
  8428 ;; This function uses a reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text40
  8432  017D1C                     __ptext40:
  8433                           	opt callstack 0
  8434  017D1C                     _vfprintf:
  8435                           	opt callstack 0
  8436                           
  8437                           ; BSR set to: 0
  8438                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8439  017D1C  52E6               	movf	postinc1,f,c
  8440  017D1E  52E6               	movf	postinc1,f,c
  8441                           
  8442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8443                           ;stkvar	_fmt @ sp[(-2)+-4]
  8444                           
  8445                           ;incstack = 0
  8446  017D20  0EFA               	movlw	-6
  8447  017D22  006F FF8C  F02F    	movff	plusw1,btemp+10
  8448  017D28  0EFB               	movlw	-5
  8449  017D2A  006F FF8C  F030    	movff	plusw1,btemp+11
  8450                           
  8451                           ;stkvar	_cfmt @ sp[(-2)+0]
  8452  017D30  0EFF               	movlw	-1
  8453  017D32  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8454  017D38  0EFE               	movlw	-2
  8455  017D3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8456                           
  8457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8458  017D40  0100               	movlb	0	; () banked
  8459  017D42  6BC1               	clrf	_nout& (0+255),b
  8460  017D44  6BC2               	clrf	(_nout+1)& (0+255),b
  8461                           
  8462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8463  017D46  D021               	goto	l10836
  8464  017D48                     l10834:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8468                           ;stkvar	_ap @ sp[(-2)+-6]
  8469  017D48  0EF8               	movlw	-8
  8470  017D4A  006F FF8F FFE6     	movff	plusw1,postinc1
  8471  017D50  006F FF8F FFE6     	movff	plusw1,postinc1
  8472                           
  8473                           ;stkvar	_cfmt @ sp[(-4)+0]
  8474  017D56  0EFC               	movlw	252
  8475  017D58  24E1               	addwf	fsr1l,w,c
  8476  017D5A  6E25               	movwf	btemp^0,c
  8477  017D5C  0EFF               	movlw	255
  8478  017D5E  20E2               	addwfc	fsr1h,w,c
  8479  017D60  6E26               	movwf	(btemp+1)^0,c
  8480  017D62  0060  F097  FFE6   	movff	btemp,postinc1
  8481  017D68  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8482                           
  8483                           ;stkvar	_fp @ sp[(-6)+-2]
  8484  017D6E  0EF8               	movlw	-8
  8485  017D70  006F FF8F FFE6     	movff	plusw1,postinc1
  8486  017D76  006F FF8F FFE6     	movff	plusw1,postinc1
  8487  017D7C  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8488  017D80  5025               	movf	btemp^0,w,c
  8489  017D82  0100               	movlb	0	; () banked
  8490  017D84  27C1               	addwf	_nout& (0+255),f,b
  8491  017D86  5026               	movf	(btemp+1)^0,w,c
  8492  017D88  23C2               	addwfc	(_nout+1)& (0+255),f,b
  8493  017D8A                     l10836:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8497                           ;stkvar	_cfmt @ sp[(-2)+0]
  8498  017D8A  50E1               	movf	fsr1l,w,c
  8499  017D8C  0FFE               	addlw	-2
  8500  017D8E  6ED9               	movwf	fsr2l,c
  8501  017D90  50E2               	movf	fsr1h,w,c
  8502  017D92  6EDA               	movwf	fsr2h,c
  8503  017D94  0EFF               	movlw	255
  8504  017D96  22DA               	addwfc	fsr2h,f,c
  8505  017D98  006F FF7B FFF6     	movff	postinc2,tblptrl
  8506  017D9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8507  017DA4                     	if	0	;tblptru may be non-zero
  8508  017DA4                     	endif
  8509  017DA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8510  017DA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8511  017DA6  6EF8               	movwf	tblptru,c
  8512  017DA8                     	endif
  8513  017DA8  0008               	tblrd		*
  8514  017DAA  50F5               	movf	tablat,w,c
  8515  017DAC  0900               	iorlw	0
  8516  017DAE  A4D8               	btfss	status,2,c
  8517  017DB0  D7CB               	goto	l10834
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8521  017DB2  0060  F304  F025   	movff	_nout,btemp
  8522  017DB8  0060  F308  F026   	movff	_nout+1,btemp+1
  8523                           
  8524                           ; BSR set to: 0
  8525                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8526  017DBE  0EF8               	movlw	248
  8527  017DC0  26E1               	addwf	fsr1l,f,c
  8528  017DC2  0EFF               	movlw	255
  8529  017DC4  22E2               	addwfc	fsr1h,f,c
  8530  017DC6  0012               	return		;funcret
  8531  017DC8                     __end_of_vfprintf:
  8532                           	opt callstack 0
  8533                           
  8534 ;; *************** function _vfpfcnvrt *****************
  8535 ;; Defined at:
  8536 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8539 ;;		 -> f(6), NULL(0), 
  8540 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8541 ;;		 -> cfmt(2), 
  8542 ;;  ap              2  [STACK] PTR PTR void 
  8543 ;;		 -> ap(2), ap(2), 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  llu             8  [STACK] unsigned long long 
  8546 ;;  ll              8  [STACK] long long 
  8547 ;;  f               4  [STACK] long long 
  8548 ;;  ct              3  [STACK] unsigned char [3]
  8549 ;;  vp              3    0        PTR void 
  8550 ;;  cp              2  [STACK] PTR unsigned char 
  8551 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8552 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8553 ;;		 -> STR_3(6), V(188), 
  8554 ;;  i               2    0        int 
  8555 ;;  done            2    0        int 
  8556 ;;  c               1  [STACK] unsigned char 
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  2  [STACK] int 
  8559 ;; Registers used:
  8560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8570 ;;Total ram usage:        0 bytes
  8571 ;; Hardware stack levels used:    1
  8572 ;; Hardware stack levels required when called:   13
  8573 ;; This function calls:
  8574 ;;		_atoi
  8575 ;;		_ctoa
  8576 ;;		_dtoa
  8577 ;;		_efgtoa
  8578 ;;		_fputc
  8579 ;;		_isdigit
  8580 ;;		_isupper
  8581 ;;		_stoa
  8582 ;;		_strncmp
  8583 ;;		_tolower
  8584 ;;		_xtoa
  8585 ;; This function is called by:
  8586 ;;		_vfprintf
  8587 ;; This function uses a reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text41
  8591  011244                     __ptext41:
  8592                           	opt callstack 0
  8593  011244                     _vfpfcnvrt:
  8594                           	opt callstack 0
  8595                           
  8596                           ; BSR set to: 0
  8597                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8598  011244  0E20               	movlw	32
  8599  011246  26E1               	addwf	fsr1l,f,c
  8600  011248  0E00               	movlw	0
  8601  01124A  22E2               	addwfc	fsr1h,f,c
  8602                           
  8603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8604                           ;stkvar	_fmt @ sp[(-32)+-4]
  8605                           
  8606                           ;incstack = 0
  8607  01124C  0EDC               	movlw	-36
  8608  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8609  011254  0EDD               	movlw	-35
  8610  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8611  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8612  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8613  011268                     	if	0	;tblptru may be non-zero
  8614  011268                     	endif
  8615  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8616  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8617  01126A  6EF8               	movwf	tblptru,c
  8618  01126C                     	endif
  8619  01126C  0008               	tblrd		*
  8620  01126E  50F5               	movf	tablat,w,c
  8621  011270  0A25               	xorlw	37
  8622  011272  A4D8               	btfss	status,2,c
  8623  011274  EF92  F08E         	goto	l10780
  8624                           
  8625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8626                           ;stkvar	_fmt @ sp[(-32)+-4]
  8627  011278  0EDC               	movlw	-36
  8628  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8629  011280  0EDD               	movlw	-35
  8630  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8631  011288  2ADE               	incf	postinc2,f,c
  8632  01128A  0E00               	movlw	0
  8633  01128C  22DD               	addwfc	postdec2,f,c
  8634                           
  8635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8636  01128E  6A0A               	clrf	_width^0,c
  8637  011290  6A0B               	clrf	(_width+1)^0,c
  8638  011292  6A0E               	clrf	_flags^0,c
  8639  011294  6A0F               	clrf	(_flags+1)^0,c
  8640                           
  8641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8642  011296  680C               	setf	_prec^0,c
  8643  011298  680D               	setf	(_prec+1)^0,c
  8644                           
  8645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8646                           ;stkvar	_fmt @ sp[(-32)+-4]
  8647  01129A  0EDC               	movlw	-36
  8648  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8649  0112A2  0EDD               	movlw	-35
  8650  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8651  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8652  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8653  0112B6                     	if	0	;tblptru may be non-zero
  8654  0112B6                     	endif
  8655  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8656  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8657  0112B8  6EF8               	movwf	tblptru,c
  8658  0112BA                     	endif
  8659  0112BA  0008               	tblrd		*
  8660  0112BC  50F5               	movf	tablat,w,c
  8661  0112BE  0A2A               	xorlw	42
  8662  0112C0  A4D8               	btfss	status,2,c
  8663  0112C2  D031               	goto	l10644
  8664                           
  8665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8666                           ;stkvar	_fmt @ sp[(-32)+-4]
  8667  0112C4  0EDC               	movlw	-36
  8668  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8669  0112CC  0EDD               	movlw	-35
  8670  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8671  0112D4  2ADE               	incf	postinc2,f,c
  8672  0112D6  0E00               	movlw	0
  8673  0112D8  22DD               	addwfc	postdec2,f,c
  8674                           
  8675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8676                           ;stkvar	_ap @ sp[(-32)+-6]
  8677  0112DA  0EDA               	movlw	-38
  8678  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8679  0112E2  0EDB               	movlw	-37
  8680  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8681  0112EA  0E02               	movlw	2
  8682  0112EC  5EDE               	subwf	postinc2,f,c
  8683  0112EE  0E00               	movlw	0
  8684  0112F0  5ADD               	subwfb	postdec2,f,c
  8685  0112F2  006F FF78  F02F    	movff	postinc2,btemp+10
  8686  0112F8  006F FF74  F030    	movff	postdec2,btemp+11
  8687  0112FE  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8688  011304  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8689  01130A  006F FF78  F00A    	movff	postinc2,_width
  8690  011310  006F FF74  F00B    	movff	postdec2,_width+1
  8691                           
  8692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8693  011316  AE0B               	btfss	(_width+1)^0,7,c
  8694  011318  D066               	goto	u10450
  8695                           
  8696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8697  01131A  800E               	bsf	_flags^0,0,c
  8698                           
  8699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8700  01131C  6C0A               	negf	_width^0,c
  8701  01131E  1E0B               	comf	(_width+1)^0,f,c
  8702  011320  B0D8               	btfsc	status,0,c
  8703  011322  2A0B               	incf	(_width+1)^0,f,c
  8704  011324  D060               	goto	u10450
  8705  011326                     l10644:
  8706                           
  8707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8708                           ;stkvar	_fmt @ sp[(-32)+-4]
  8709  011326  0EDC               	movlw	-36
  8710  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8711  01132E  0EDD               	movlw	-35
  8712  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8713  011336  006F FF78  F02F    	movff	postinc2,btemp+10
  8714  01133C  006F FF74  F030    	movff	postdec2,btemp+11
  8715  011342  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8716  011348  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8717  01134E  ECEC  F0AD         	call	_atoi	;wreg free
  8718  011352  0060  F094  F00A   	movff	btemp,_width
  8719  011358  0060  F098  F00B   	movff	btemp+1,_width+1
  8720                           
  8721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8722  01135E  D00B               	goto	l10648
  8723  011360                     l10646:
  8724                           
  8725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8726                           ;stkvar	_fmt @ sp[(-32)+-4]
  8727  011360  0EDC               	movlw	-36
  8728  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8729  011368  0EDD               	movlw	-35
  8730  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8731  011370  2ADE               	incf	postinc2,f,c
  8732  011372  0E00               	movlw	0
  8733  011374  22DD               	addwfc	postdec2,f,c
  8734  011376                     l10648:
  8735  011376  0ED0               	movlw	208
  8736  011378  6E2F               	movwf	(btemp+10)^0,c
  8737  01137A  0EFF               	movlw	255
  8738  01137C  6E30               	movwf	(btemp+11)^0,c
  8739                           
  8740                           ;stkvar	_fmt @ sp[(-32)+-4]
  8741  01137E  0EDC               	movlw	-36
  8742  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8743  011386  0EDD               	movlw	-35
  8744  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8745  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8746  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8747  01139A                     	if	0	;tblptru may be non-zero
  8748  01139A                     	endif
  8749  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8750  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8751  01139C  6EF8               	movwf	tblptru,c
  8752  01139E                     	endif
  8753  01139E  0008               	tblrd		*
  8754  0113A0  50F5               	movf	tablat,w,c
  8755  0113A2  6E2D               	movwf	(btemp+8)^0,c
  8756  0113A4  6A2E               	clrf	(btemp+9)^0,c
  8757  0113A6  502F               	movf	(btemp+10)^0,w,c
  8758  0113A8  262D               	addwf	(btemp+8)^0,f,c
  8759  0113AA  5030               	movf	(btemp+11)^0,w,c
  8760  0113AC  222E               	addwfc	(btemp+9)^0,f,c
  8761  0113AE  502E               	movf	(btemp+9)^0,w,c
  8762  0113B0  E106               	bnz	u10430
  8763  0113B2  0E0A               	movlw	10
  8764  0113B4  5C2D               	subwf	(btemp+8)^0,w,c
  8765  0113B6  B0D8               	btfsc	status,0,c
  8766  0113B8  D002               	goto	u10430
  8767  0113BA  0E01               	movlw	1
  8768  0113BC  D001               	goto	u10440
  8769  0113BE                     u10430:
  8770  0113BE  0E00               	movlw	0
  8771  0113C0                     u10440:
  8772  0113C0  6E2F               	movwf	(btemp+10)^0,c
  8773  0113C2  6A30               	clrf	(btemp+11)^0,c
  8774                           
  8775                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8776  0113C4  0EE4               	movlw	-28
  8777  0113C6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8778  0113CC  0EE5               	movlw	-27
  8779  0113CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8780                           
  8781                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8782  0113D4  0EE4               	movlw	-28
  8783  0113D6  006F FF8C  F025    	movff	plusw1,btemp
  8784  0113DC  0EE5               	movlw	-27
  8785  0113DE  50E3               	movf	plusw1,w,c
  8786  0113E0  1025               	iorwf	btemp^0,w,c
  8787  0113E2  A4D8               	btfss	status,2,c
  8788  0113E4  D7BD               	goto	l10646
  8789  0113E6                     u10450:
  8790                           
  8791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8792                           ;stkvar	_fmt @ sp[(-32)+-4]
  8793  0113E6  0EDC               	movlw	-36
  8794  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8795  0113EE  0EDD               	movlw	-35
  8796  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8797  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8798  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8799  011402                     	if	0	;tblptru may be non-zero
  8800  011402                     	endif
  8801  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8802  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8803  011404  6EF8               	movwf	tblptru,c
  8804  011406                     	endif
  8805  011406  0008               	tblrd		*
  8806  011408  50F5               	movf	tablat,w,c
  8807  01140A  0A2E               	xorlw	46
  8808  01140C  A4D8               	btfss	status,2,c
  8809  01140E  D0AC               	goto	u10500
  8810                           
  8811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8812  011410  6A0C               	clrf	_prec^0,c
  8813  011412  6A0D               	clrf	(_prec+1)^0,c
  8814                           
  8815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8816                           ;stkvar	_fmt @ sp[(-32)+-4]
  8817  011414  0EDC               	movlw	-36
  8818  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8819  01141C  0EDD               	movlw	-35
  8820  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8821  011424  2ADE               	incf	postinc2,f,c
  8822  011426  0E00               	movlw	0
  8823  011428  22DD               	addwfc	postdec2,f,c
  8824                           
  8825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8826                           ;stkvar	_fmt @ sp[(-32)+-4]
  8827  01142A  0EDC               	movlw	-36
  8828  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8829  011432  0EDD               	movlw	-35
  8830  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8831  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8832  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8833  011446                     	if	0	;tblptru may be non-zero
  8834  011446                     	endif
  8835  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8836  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8837  011448  6EF8               	movwf	tblptru,c
  8838  01144A                     	endif
  8839  01144A  0008               	tblrd		*
  8840  01144C  50F5               	movf	tablat,w,c
  8841  01144E  0A2A               	xorlw	42
  8842  011450  A4D8               	btfss	status,2,c
  8843  011452  D02A               	goto	l10666
  8844                           
  8845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8846                           ;stkvar	_fmt @ sp[(-32)+-4]
  8847  011454  0EDC               	movlw	-36
  8848  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8849  01145C  0EDD               	movlw	-35
  8850  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8851  011464  2ADE               	incf	postinc2,f,c
  8852  011466  0E00               	movlw	0
  8853  011468  22DD               	addwfc	postdec2,f,c
  8854                           
  8855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8856                           ;stkvar	_ap @ sp[(-32)+-6]
  8857  01146A  0EDA               	movlw	-38
  8858  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8859  011472  0EDB               	movlw	-37
  8860  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8861  01147A  0E02               	movlw	2
  8862  01147C  5EDE               	subwf	postinc2,f,c
  8863  01147E  0E00               	movlw	0
  8864  011480  5ADD               	subwfb	postdec2,f,c
  8865  011482  006F FF78  F02F    	movff	postinc2,btemp+10
  8866  011488  006F FF74  F030    	movff	postdec2,btemp+11
  8867  01148E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8868  011494  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8869  01149A  006F FF78  F00C    	movff	postinc2,_prec
  8870  0114A0  006F FF74  F00D    	movff	postdec2,_prec+1
  8871                           
  8872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8873  0114A6  D060               	goto	u10500
  8874  0114A8                     l10666:
  8875                           
  8876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8877                           ;stkvar	_fmt @ sp[(-32)+-4]
  8878  0114A8  0EDC               	movlw	-36
  8879  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8880  0114B0  0EDD               	movlw	-35
  8881  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8882  0114B8  006F FF78  F02F    	movff	postinc2,btemp+10
  8883  0114BE  006F FF74  F030    	movff	postdec2,btemp+11
  8884  0114C4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8885  0114CA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8886  0114D0  ECEC  F0AD         	call	_atoi	;wreg free
  8887  0114D4  0060  F094  F00C   	movff	btemp,_prec
  8888  0114DA  0060  F098  F00D   	movff	btemp+1,_prec+1
  8889                           
  8890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8891  0114E0  D00B               	goto	l10670
  8892  0114E2                     l10668:
  8893                           
  8894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8895                           ;stkvar	_fmt @ sp[(-32)+-4]
  8896  0114E2  0EDC               	movlw	-36
  8897  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8898  0114EA  0EDD               	movlw	-35
  8899  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8900  0114F2  2ADE               	incf	postinc2,f,c
  8901  0114F4  0E00               	movlw	0
  8902  0114F6  22DD               	addwfc	postdec2,f,c
  8903  0114F8                     l10670:
  8904  0114F8  0ED0               	movlw	208
  8905  0114FA  6E2F               	movwf	(btemp+10)^0,c
  8906  0114FC  0EFF               	movlw	255
  8907  0114FE  6E30               	movwf	(btemp+11)^0,c
  8908                           
  8909                           ;stkvar	_fmt @ sp[(-32)+-4]
  8910  011500  0EDC               	movlw	-36
  8911  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8912  011508  0EDD               	movlw	-35
  8913  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8914  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8915  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8916  01151C                     	if	0	;tblptru may be non-zero
  8917  01151C                     	endif
  8918  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8919  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8920  01151E  6EF8               	movwf	tblptru,c
  8921  011520                     	endif
  8922  011520  0008               	tblrd		*
  8923  011522  50F5               	movf	tablat,w,c
  8924  011524  6E2D               	movwf	(btemp+8)^0,c
  8925  011526  6A2E               	clrf	(btemp+9)^0,c
  8926  011528  502F               	movf	(btemp+10)^0,w,c
  8927  01152A  262D               	addwf	(btemp+8)^0,f,c
  8928  01152C  5030               	movf	(btemp+11)^0,w,c
  8929  01152E  222E               	addwfc	(btemp+9)^0,f,c
  8930  011530  502E               	movf	(btemp+9)^0,w,c
  8931  011532  E106               	bnz	u10480
  8932  011534  0E0A               	movlw	10
  8933  011536  5C2D               	subwf	(btemp+8)^0,w,c
  8934  011538  B0D8               	btfsc	status,0,c
  8935  01153A  D002               	goto	u10480
  8936  01153C  0E01               	movlw	1
  8937  01153E  D001               	goto	u10490
  8938  011540                     u10480:
  8939  011540  0E00               	movlw	0
  8940  011542                     u10490:
  8941  011542  6E2F               	movwf	(btemp+10)^0,c
  8942  011544  6A30               	clrf	(btemp+11)^0,c
  8943                           
  8944                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8945  011546  0EE0               	movlw	-32
  8946  011548  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8947  01154E  0EE1               	movlw	-31
  8948  011550  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8949                           
  8950                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8951  011556  0EE0               	movlw	-32
  8952  011558  006F FF8C  F025    	movff	plusw1,btemp
  8953  01155E  0EE1               	movlw	-31
  8954  011560  50E3               	movf	plusw1,w,c
  8955  011562  1025               	iorwf	btemp^0,w,c
  8956  011564  A4D8               	btfss	status,2,c
  8957  011566  D7BD               	goto	l10668
  8958  011568                     u10500:
  8959                           
  8960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8961                           ;stkvar	_fmt @ sp[(-32)+-4]
  8962  011568  0EDC               	movlw	-36
  8963  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8964  011570  0EDD               	movlw	-35
  8965  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8966  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8967  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8968  011584                     	if	0	;tblptru may be non-zero
  8969  011584                     	endif
  8970  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8971  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8972  011586  6EF8               	movwf	tblptru,c
  8973  011588                     	endif
  8974  011588  0008               	tblrd		*
  8975  01158A  50F5               	movf	tablat,w,c
  8976  01158C  6EE6               	movwf	postinc1,c
  8977  01158E  0E00               	movlw	0
  8978  011590  6EE6               	movwf	postinc1,c
  8979  011592  EC89  F0C1         	call	_tolower	;wreg free
  8980                           
  8981                           ;stkvar	_ct @ sp[(-32)+26]
  8982  011596  0EFA               	movlw	-6
  8983  011598  0060  F097  FFE3   	movff	btemp,plusw1
  8984                           
  8985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8986                           ;stkvar	_ct @ sp[(-32)+26]
  8987  01159E  0EFA               	movlw	-6
  8988  0115A0  50E3               	movf	plusw1,w,c
  8989  0115A2  B4D8               	btfsc	status,2,c
  8990  0115A4  D05B               	goto	l10686
  8991                           
  8992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8993                           ;stkvar	_ct @ sp[(-32)+26]
  8994  0115A6  0EFB               	movlw	251
  8995  0115A8  24E1               	addwf	fsr1l,w,c
  8996  0115AA  6ED9               	movwf	fsr2l,c
  8997  0115AC  0EFF               	movlw	255
  8998  0115AE  20E2               	addwfc	fsr1h,w,c
  8999  0115B0  6EDA               	movwf	fsr2h,c
  9000                           
  9001                           ;stkvar	_fmt @ sp[(-32)+-4]
  9002  0115B2  0EDC               	movlw	-36
  9003  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9004  0115BA  0EDD               	movlw	-35
  9005  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9006  0115C2  006F FFB8  F02F    	movff	postinc0,btemp+10
  9007  0115C8  006F FFB4  F030    	movff	postdec0,btemp+11
  9008  0115CE  0E01               	movlw	1
  9009  0115D0  262F               	addwf	(btemp+10)^0,f,c
  9010  0115D2  0E00               	movlw	0
  9011  0115D4  2230               	addwfc	(btemp+11)^0,f,c
  9012  0115D6  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9013  0115DC  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9014  0115E2                     	if	0	;tblptru may be non-zero
  9015  0115E2                     	endif
  9016  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9017  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9018  0115E4  6EF8               	movwf	tblptru,c
  9019  0115E6                     	endif
  9020  0115E6  0008               	tblrd		*
  9021  0115E8  50F5               	movf	tablat,w,c
  9022  0115EA  6EE6               	movwf	postinc1,c
  9023  0115EC  0E00               	movlw	0
  9024  0115EE  6EE6               	movwf	postinc1,c
  9025  0115F0  EC89  F0C1         	call	_tolower	;wreg free
  9026  0115F4  5025               	movf	btemp^0,w,c
  9027  0115F6  6EDF               	movwf	indf2,c
  9028                           
  9029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9030                           ;stkvar	_ct @ sp[(-32)+26]
  9031  0115F8  0EFB               	movlw	251
  9032  0115FA  24E1               	addwf	fsr1l,w,c
  9033  0115FC  6ED9               	movwf	fsr2l,c
  9034  0115FE  0EFF               	movlw	255
  9035  011600  20E2               	addwfc	fsr1h,w,c
  9036  011602  6EDA               	movwf	fsr2h,c
  9037  011604  50DF               	movf	indf2,w,c
  9038  011606  B4D8               	btfsc	status,2,c
  9039  011608  D029               	goto	l10686
  9040                           
  9041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9042                           ;stkvar	_ct @ sp[(-32)+26]
  9043  01160A  0EFC               	movlw	252
  9044  01160C  24E1               	addwf	fsr1l,w,c
  9045  01160E  6ED9               	movwf	fsr2l,c
  9046  011610  0EFF               	movlw	255
  9047  011612  20E2               	addwfc	fsr1h,w,c
  9048  011614  6EDA               	movwf	fsr2h,c
  9049                           
  9050                           ;stkvar	_fmt @ sp[(-32)+-4]
  9051  011616  0EDC               	movlw	-36
  9052  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9053  01161E  0EDD               	movlw	-35
  9054  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9055  011626  006F FFB8  F02F    	movff	postinc0,btemp+10
  9056  01162C  006F FFB4  F030    	movff	postdec0,btemp+11
  9057  011632  0E02               	movlw	2
  9058  011634  262F               	addwf	(btemp+10)^0,f,c
  9059  011636  0E00               	movlw	0
  9060  011638  2230               	addwfc	(btemp+11)^0,f,c
  9061  01163A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9062  011640  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9063  011646                     	if	0	;tblptru may be non-zero
  9064  011646                     	endif
  9065  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9066  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9067  011648  6EF8               	movwf	tblptru,c
  9068  01164A                     	endif
  9069  01164A  0008               	tblrd		*
  9070  01164C  50F5               	movf	tablat,w,c
  9071  01164E  6EE6               	movwf	postinc1,c
  9072  011650  0E00               	movlw	0
  9073  011652  6EE6               	movwf	postinc1,c
  9074  011654  EC89  F0C1         	call	_tolower	;wreg free
  9075  011658  5025               	movf	btemp^0,w,c
  9076  01165A  6EDF               	movwf	indf2,c
  9077  01165C                     l10686:
  9078                           
  9079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9080                           ;stkvar	_fmt @ sp[(-32)+-4]
  9081  01165C  0EDC               	movlw	-36
  9082  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9083  011664  0EDD               	movlw	-35
  9084  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9085  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9086  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9087  011678                     	if	0	;tblptru may be non-zero
  9088  011678                     	endif
  9089  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9090  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9091  01167A  6EF8               	movwf	tblptru,c
  9092  01167C                     	endif
  9093  01167C  0008               	tblrd		*
  9094  01167E  50F5               	movf	tablat,w,c
  9095  011680  0A63               	xorlw	99
  9096  011682  A4D8               	btfss	status,2,c
  9097  011684  D036               	goto	l10696
  9098                           
  9099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9100                           ;stkvar	_fmt @ sp[(-32)+-4]
  9101  011686  0EDC               	movlw	-36
  9102  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9103  01168E  0EDD               	movlw	-35
  9104  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9105  011696  2ADE               	incf	postinc2,f,c
  9106  011698  0E00               	movlw	0
  9107  01169A  22DD               	addwfc	postdec2,f,c
  9108                           
  9109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9110                           ;stkvar	_ap @ sp[(-32)+-6]
  9111  01169C  0EDA               	movlw	-38
  9112  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9113  0116A4  0EDB               	movlw	-37
  9114  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9115  0116AC  0E02               	movlw	2
  9116  0116AE  5EDE               	subwf	postinc2,f,c
  9117  0116B0  0E00               	movlw	0
  9118  0116B2  5ADD               	subwfb	postdec2,f,c
  9119  0116B4  006F FF78  F02F    	movff	postinc2,btemp+10
  9120  0116BA  006F FF74  F030    	movff	postdec2,btemp+11
  9121  0116C0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9122  0116C6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9123  0116CC  50DF               	movf	indf2,w,c
  9124  0116CE  6E30               	movwf	(btemp+11)^0,c
  9125                           
  9126                           ;stkvar	_c @ sp[(-32)+31]
  9127  0116D0  0EFF               	movlw	-1
  9128  0116D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9129                           
  9130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9131                           ;stkvar	_c @ sp[(-32)+31]
  9132  0116D8  0EFF               	movlw	-1
  9133  0116DA  50E3               	movf	plusw1,w,c
  9134  0116DC  6EE6               	movwf	postinc1,c
  9135                           
  9136                           ;stkvar	_fp @ sp[(-33)+-2]
  9137  0116DE  0EDD               	movlw	-35
  9138  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9139  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9140  0116EC  EC03  F0C1         	call	_ctoa	;wreg free
  9141  0116F0  D343               	goto	l2202
  9142  0116F2                     l10696:
  9143                           
  9144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9145                           ;stkvar	_fmt @ sp[(-32)+-4]
  9146  0116F2  0EDC               	movlw	-36
  9147  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9148  0116FA  0EDD               	movlw	-35
  9149  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9150  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9151  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9152  01170E                     	if	0	;tblptru may be non-zero
  9153  01170E                     	endif
  9154  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9155  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9156  011710  6EF8               	movwf	tblptru,c
  9157  011712                     	endif
  9158  011712  0008               	tblrd		*
  9159  011714  50F5               	movf	tablat,w,c
  9160  011716  0A64               	xorlw	100
  9161  011718  B4D8               	btfsc	status,2,c
  9162  01171A  D015               	goto	u10550
  9163                           
  9164                           ;stkvar	_fmt @ sp[(-32)+-4]
  9165  01171C  0EDC               	movlw	-36
  9166  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9167  011724  0EDD               	movlw	-35
  9168  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9169  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9170  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9171  011738                     	if	0	;tblptru may be non-zero
  9172  011738                     	endif
  9173  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9174  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9175  01173A  6EF8               	movwf	tblptru,c
  9176  01173C                     	endif
  9177  01173C  0008               	tblrd		*
  9178  01173E  50F5               	movf	tablat,w,c
  9179  011740  0A69               	xorlw	105
  9180  011742  A4D8               	btfss	status,2,c
  9181  011744  D075               	goto	l10708
  9182  011746                     u10550:
  9183                           
  9184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9185                           ;stkvar	_fmt @ sp[(-32)+-4]
  9186  011746  0EDC               	movlw	-36
  9187  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9188  01174E  0EDD               	movlw	-35
  9189  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9190  011756  2ADE               	incf	postinc2,f,c
  9191  011758  0E00               	movlw	0
  9192  01175A  22DD               	addwfc	postdec2,f,c
  9193                           
  9194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9195                           ;stkvar	_ap @ sp[(-32)+-6]
  9196  01175C  0EDA               	movlw	-38
  9197  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9198  011764  0EDB               	movlw	-37
  9199  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9200  01176C  0E02               	movlw	2
  9201  01176E  5EDE               	subwf	postinc2,f,c
  9202  011770  0E00               	movlw	0
  9203  011772  5ADD               	subwfb	postdec2,f,c
  9204  011774  006F FF78  F02F    	movff	postinc2,btemp+10
  9205  01177A  006F FF74  F030    	movff	postdec2,btemp+11
  9206  011780  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9207  011786  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9208  01178C  006F FF78  F02F    	movff	postinc2,btemp+10
  9209  011792  006F FF74  F030    	movff	postdec2,btemp+11
  9210                           
  9211                           ;stkvar	_ll @ sp[(-32)+14]
  9212  011798  0EEE               	movlw	-18
  9213  01179A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9214  0117A0  0EEF               	movlw	-17
  9215  0117A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9216  0117A8  6A25               	clrf	btemp^0,c
  9217  0117AA  BEE3               	btfsc	plusw1,7,c
  9218  0117AC  6825               	setf	btemp^0,c
  9219  0117AE  0EF0               	movlw	-16
  9220  0117B0  0060  F097  FFE3   	movff	btemp,plusw1
  9221  0117B6  0EF1               	movlw	-15
  9222  0117B8  0060  F097  FFE3   	movff	btemp,plusw1
  9223  0117BE  0EF2               	movlw	-14
  9224  0117C0  0060  F097  FFE3   	movff	btemp,plusw1
  9225  0117C6  0EF3               	movlw	-13
  9226  0117C8  0060  F097  FFE3   	movff	btemp,plusw1
  9227  0117CE  0EF4               	movlw	-12
  9228  0117D0  0060  F097  FFE3   	movff	btemp,plusw1
  9229  0117D6  0EF5               	movlw	-11
  9230  0117D8  0060  F097  FFE3   	movff	btemp,plusw1
  9231                           
  9232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9233                           ;stkvar	_ll @ sp[(-32)+14]
  9234  0117DE  50E1               	movf	fsr1l,w,c
  9235  0117E0  0FEE               	addlw	-18
  9236  0117E2  6ED9               	movwf	fsr2l,c
  9237  0117E4  50E2               	movf	fsr1h,w,c
  9238  0117E6  6EDA               	movwf	fsr2h,c
  9239  0117E8  0EFF               	movlw	255
  9240  0117EA  22DA               	addwfc	fsr2h,f,c
  9241  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9242  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9243  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9244  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9245  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9246  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9247  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9248  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9249                           
  9250                           ;stkvar	_fp @ sp[(-40)+-2]
  9251  01181C  0ED6               	movlw	-42
  9252  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9253  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9254  01182A  EC97  F0A2         	call	_dtoa	;wreg free
  9255  01182E  D2A4               	goto	l2202
  9256  011830                     l10708:
  9257                           
  9258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9259                           ;stkvar	_ct @ sp[(-32)+26]
  9260  011830  0EFA               	movlw	-6
  9261  011832  006F FF8C  F025    	movff	plusw1,btemp
  9262  011838  0E66               	movlw	102
  9263  01183A  1825               	xorwf	btemp^0,w,c
  9264  01183C  A4D8               	btfss	status,2,c
  9265  01183E  D06E               	goto	l10720
  9266                           
  9267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9268                           ;stkvar	_fmt @ sp[(-32)+-4]
  9269  011840  0EDC               	movlw	-36
  9270  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9271  011848  0EDD               	movlw	-35
  9272  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9273  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9274  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9275  01185C                     	if	0	;tblptru may be non-zero
  9276  01185C                     	endif
  9277  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9278  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9279  01185E  6EF8               	movwf	tblptru,c
  9280  011860                     	endif
  9281                           
  9282                           ;stkvar	_c @ sp[(-32)+31]
  9283  011860  0008               	tblrd		*
  9284  011862  0EFF               	movlw	-1
  9285  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9286                           
  9287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9288                           ;stkvar	_fmt @ sp[(-32)+-4]
  9289  01186A  0EDC               	movlw	-36
  9290  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9291  011872  0EDD               	movlw	-35
  9292  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9293  01187A  2ADE               	incf	postinc2,f,c
  9294  01187C  0E00               	movlw	0
  9295  01187E  22DD               	addwfc	postdec2,f,c
  9296                           
  9297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9298                           ;stkvar	_ap @ sp[(-32)+-6]
  9299  011880  0EDA               	movlw	-38
  9300  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9301  011888  0EDB               	movlw	-37
  9302  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9303  011890  0E04               	movlw	4
  9304  011892  5EDE               	subwf	postinc2,f,c
  9305  011894  0E00               	movlw	0
  9306  011896  5ADD               	subwfb	postdec2,f,c
  9307  011898  006F FF78  F02F    	movff	postinc2,btemp+10
  9308  01189E  006F FF74  F030    	movff	postdec2,btemp+11
  9309  0118A4  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9310  0118AA  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9311  0118B0  006F FF78  F02D    	movff	postinc2,btemp+8
  9312  0118B6  006F FF78  F02E    	movff	postinc2,btemp+9
  9313  0118BC  006F FF78  F02F    	movff	postinc2,btemp+10
  9314  0118C2  006F FF78  F030    	movff	postinc2,btemp+11
  9315                           
  9316                           ;stkvar	_f @ sp[(-32)+22]
  9317  0118C8  0EF6               	movlw	-10
  9318  0118CA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9319  0118D0  0EF7               	movlw	-9
  9320  0118D2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9321  0118D8  0EF8               	movlw	-8
  9322  0118DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9323  0118E0  0EF9               	movlw	-7
  9324  0118E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9325  0118E8                     l10716:
  9326                           
  9327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9328                           ;stkvar	_c @ sp[(-32)+31]
  9329  0118E8  0EFF               	movlw	-1
  9330  0118EA  50E3               	movf	plusw1,w,c
  9331  0118EC  6EE6               	movwf	postinc1,c
  9332                           
  9333                           ;stkvar	_f @ sp[(-33)+22]
  9334  0118EE  0EF5               	movlw	-11
  9335  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9336  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9337  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9338  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9339                           
  9340                           ;stkvar	_fp @ sp[(-37)+-2]
  9341  011908  0ED9               	movlw	-39
  9342  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9343  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9344  011916  EC00  F080         	call	_efgtoa	;wreg free
  9345  01191A  D22E               	goto	l2202
  9346  01191C                     l10720:
  9347                           
  9348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9349  01191C  0E02               	movlw	2
  9350  01191E  6EE6               	movwf	postinc1,c
  9351  011920  0E00               	movlw	0
  9352  011922  6EE6               	movwf	postinc1,c
  9353  011924  0EF6               	movlw	low STR_54
  9354  011926  6EE6               	movwf	postinc1,c
  9355  011928  0EFF               	movlw	high STR_54
  9356  01192A  6EE6               	movwf	postinc1,c
  9357                           
  9358                           ;stkvar	_ct @ sp[(-36)+26]
  9359  01192C  0EF6               	movlw	246
  9360  01192E  24E1               	addwf	fsr1l,w,c
  9361  011930  6E25               	movwf	btemp^0,c
  9362  011932  0EFF               	movlw	255
  9363  011934  20E2               	addwfc	fsr1h,w,c
  9364  011936  6E26               	movwf	(btemp+1)^0,c
  9365  011938  0060  F097  FFE6   	movff	btemp,postinc1
  9366  01193E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  9367  011944  EC51  F0B2         	call	_strncmp	;wreg free
  9368  011948  5025               	movf	btemp^0,w,c
  9369  01194A  1026               	iorwf	(btemp+1)^0,w,c
  9370  01194C  A4D8               	btfss	status,2,c
  9371  01194E  D096               	goto	l10740
  9372                           
  9373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9374                           ;stkvar	_fmt @ sp[(-32)+-4]
  9375  011950  0EDC               	movlw	-36
  9376  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9377  011958  0EDD               	movlw	-35
  9378  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9379  011960  006F FF78  F02F    	movff	postinc2,btemp+10
  9380  011966  006F FF74  F030    	movff	postdec2,btemp+11
  9381  01196C  0E01               	movlw	1
  9382  01196E  262F               	addwf	(btemp+10)^0,f,c
  9383  011970  0E00               	movlw	0
  9384  011972  2230               	addwfc	(btemp+11)^0,f,c
  9385  011974  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9386  01197A  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9387  011980                     	if	0	;tblptru may be non-zero
  9388  011980                     	endif
  9389  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9390  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9391  011982  6EF8               	movwf	tblptru,c
  9392  011984                     	endif
  9393                           
  9394                           ;stkvar	_c @ sp[(-32)+31]
  9395  011984  0008               	tblrd		*
  9396  011986  0EFF               	movlw	-1
  9397  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9398  01198E  0EBF               	movlw	191
  9399  011990  6E2F               	movwf	(btemp+10)^0,c
  9400  011992  0EFF               	movlw	255
  9401  011994  6E30               	movwf	(btemp+11)^0,c
  9402                           
  9403                           ;stkvar	_fmt @ sp[(-32)+-4]
  9404  011996  0EDC               	movlw	-36
  9405  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9406  01199E  0EDD               	movlw	-35
  9407  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9408  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9409  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9410  0119B2                     	if	0	;tblptru may be non-zero
  9411  0119B2                     	endif
  9412  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9413  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9414  0119B4  6EF8               	movwf	tblptru,c
  9415  0119B6                     	endif
  9416  0119B6  0008               	tblrd		*
  9417  0119B8  50F5               	movf	tablat,w,c
  9418  0119BA  6E2D               	movwf	(btemp+8)^0,c
  9419  0119BC  6A2E               	clrf	(btemp+9)^0,c
  9420  0119BE  502F               	movf	(btemp+10)^0,w,c
  9421  0119C0  262D               	addwf	(btemp+8)^0,f,c
  9422  0119C2  5030               	movf	(btemp+11)^0,w,c
  9423  0119C4  222E               	addwfc	(btemp+9)^0,f,c
  9424  0119C6  502E               	movf	(btemp+9)^0,w,c
  9425  0119C8  E106               	bnz	u10580
  9426  0119CA  0E1A               	movlw	26
  9427  0119CC  5C2D               	subwf	(btemp+8)^0,w,c
  9428  0119CE  B0D8               	btfsc	status,0,c
  9429  0119D0  D002               	goto	u10580
  9430  0119D2  0E01               	movlw	1
  9431  0119D4  D001               	goto	u10590
  9432  0119D6                     u10580:
  9433  0119D6  0E00               	movlw	0
  9434  0119D8                     u10590:
  9435  0119D8  6E2F               	movwf	(btemp+10)^0,c
  9436  0119DA  6A30               	clrf	(btemp+11)^0,c
  9437                           
  9438                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9439  0119DC  0EE2               	movlw	-30
  9440  0119DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9441  0119E4  0EE3               	movlw	-29
  9442  0119E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9443                           
  9444                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9445  0119EC  0EE2               	movlw	-30
  9446  0119EE  006F FF8C  F025    	movff	plusw1,btemp
  9447  0119F4  0EE3               	movlw	-29
  9448  0119F6  50E3               	movf	plusw1,w,c
  9449  0119F8  1025               	iorwf	btemp^0,w,c
  9450                           
  9451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9452                           ;stkvar	_ap @ sp[(-32)+-6]
  9453                           
  9454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9455                           
  9456                           ;stkvar	_f @ sp[(-32)+22]
  9457                           
  9458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9459                           ;stkvar	_ap @ sp[(-32)+-6]
  9460  0119FA  0EDA               	movlw	-38
  9461  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9462  011A02  0EDB               	movlw	-37
  9463  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9464  011A0A  0E04               	movlw	4
  9465  011A0C  5EDE               	subwf	postinc2,f,c
  9466  011A0E  0E00               	movlw	0
  9467  011A10  5ADD               	subwfb	postdec2,f,c
  9468  011A12  006F FF78  F02F    	movff	postinc2,btemp+10
  9469  011A18  006F FF74  F030    	movff	postdec2,btemp+11
  9470  011A1E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9471  011A24  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9472  011A2A  006F FF78  F02D    	movff	postinc2,btemp+8
  9473  011A30  006F FF78  F02E    	movff	postinc2,btemp+9
  9474  011A36  006F FF78  F02F    	movff	postinc2,btemp+10
  9475  011A3C  006F FF78  F030    	movff	postinc2,btemp+11
  9476                           
  9477                           ;stkvar	_f @ sp[(-32)+22]
  9478  011A42  0EF6               	movlw	-10
  9479  011A44  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9480  011A4A  0EF7               	movlw	-9
  9481  011A4C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9482  011A52  0EF8               	movlw	-8
  9483  011A54  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9484  011A5A  0EF9               	movlw	-7
  9485  011A5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9486                           
  9487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9488                           ;stkvar	_fmt @ sp[(-32)+-4]
  9489  011A62  0EDC               	movlw	-36
  9490  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9491  011A6A  0EDD               	movlw	-35
  9492  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9493  011A72  0E02               	movlw	2
  9494  011A74  26DE               	addwf	postinc2,f,c
  9495  011A76  0E00               	movlw	0
  9496  011A78  22DD               	addwfc	postdec2,f,c
  9497  011A7A  D736               	goto	l10716
  9498  011A7C                     l10740:
  9499                           
  9500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9501                           ;stkvar	_fmt @ sp[(-32)+-4]
  9502  011A7C  0EDC               	movlw	-36
  9503  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9504  011A84  0EDD               	movlw	-35
  9505  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9506  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9507  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9508  011A98                     	if	0	;tblptru may be non-zero
  9509  011A98                     	endif
  9510  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9511  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9512  011A9A  6EF8               	movwf	tblptru,c
  9513  011A9C                     	endif
  9514  011A9C  0008               	tblrd		*
  9515  011A9E  50F5               	movf	tablat,w,c
  9516  011AA0  0A73               	xorlw	115
  9517  011AA2  A4D8               	btfss	status,2,c
  9518  011AA4  D042               	goto	l10750
  9519                           
  9520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9521                           ;stkvar	_fmt @ sp[(-32)+-4]
  9522  011AA6  0EDC               	movlw	-36
  9523  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9524  011AAE  0EDD               	movlw	-35
  9525  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9526  011AB6  2ADE               	incf	postinc2,f,c
  9527  011AB8  0E00               	movlw	0
  9528  011ABA  22DD               	addwfc	postdec2,f,c
  9529                           
  9530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9531                           ;stkvar	_ap @ sp[(-32)+-6]
  9532  011ABC  0EDA               	movlw	-38
  9533  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9534  011AC4  0EDB               	movlw	-37
  9535  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9536  011ACC  0E02               	movlw	2
  9537  011ACE  5EDE               	subwf	postinc2,f,c
  9538  011AD0  0E00               	movlw	0
  9539  011AD2  5ADD               	subwfb	postdec2,f,c
  9540  011AD4  006F FF78  F02F    	movff	postinc2,btemp+10
  9541  011ADA  006F FF74  F030    	movff	postdec2,btemp+11
  9542  011AE0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9543  011AE6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9544  011AEC  006F FF78  F02F    	movff	postinc2,btemp+10
  9545  011AF2  006F FF74  F030    	movff	postdec2,btemp+11
  9546                           
  9547                           ;stkvar	_cp @ sp[(-32)+29]
  9548  011AF8  0EFE               	movlw	-2
  9549  011AFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9550  011B00  0EFD               	movlw	-3
  9551  011B02  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9552                           
  9553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9554                           ;stkvar	_cp @ sp[(-32)+29]
  9555  011B08  0EFD               	movlw	-3
  9556  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9557  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9558                           
  9559                           ;stkvar	_fp @ sp[(-34)+-2]
  9560  011B16  0EDC               	movlw	-36
  9561  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9562  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9563  011B24  EC4D  F0AB         	call	_stoa	;wreg free
  9564  011B28  D127               	goto	l2202
  9565  011B2A                     l10750:
  9566                           
  9567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9568                           ;stkvar	_fmt @ sp[(-32)+-4]
  9569  011B2A  0EDC               	movlw	-36
  9570  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9571  011B32  0EDD               	movlw	-35
  9572  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9573  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9574  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9575  011B46                     	if	0	;tblptru may be non-zero
  9576  011B46                     	endif
  9577  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9578  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9579  011B48  6EF8               	movwf	tblptru,c
  9580  011B4A                     	endif
  9581  011B4A  0008               	tblrd		*
  9582  011B4C  50F5               	movf	tablat,w,c
  9583  011B4E  0A78               	xorlw	120
  9584  011B50  B4D8               	btfsc	status,2,c
  9585  011B52  D015               	goto	u10630
  9586                           
  9587                           ;stkvar	_fmt @ sp[(-32)+-4]
  9588  011B54  0EDC               	movlw	-36
  9589  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9590  011B5C  0EDD               	movlw	-35
  9591  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9592  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9593  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9594  011B70                     	if	0	;tblptru may be non-zero
  9595  011B70                     	endif
  9596  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9597  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9598  011B72  6EF8               	movwf	tblptru,c
  9599  011B74                     	endif
  9600  011B74  0008               	tblrd		*
  9601  011B76  50F5               	movf	tablat,w,c
  9602  011B78  0A58               	xorlw	88
  9603  011B7A  A4D8               	btfss	status,2,c
  9604  011B7C  D094               	goto	l10764
  9605  011B7E                     u10630:
  9606                           
  9607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9608                           ;stkvar	_fmt @ sp[(-32)+-4]
  9609  011B7E  0EDC               	movlw	-36
  9610  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9611  011B86  0EDD               	movlw	-35
  9612  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9613  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9614  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9615  011B9A                     	if	0	;tblptru may be non-zero
  9616  011B9A                     	endif
  9617  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9618  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9619  011B9C  6EF8               	movwf	tblptru,c
  9620  011B9E                     	endif
  9621                           
  9622                           ;stkvar	_c @ sp[(-32)+31]
  9623  011B9E  0008               	tblrd		*
  9624  011BA0  0EFF               	movlw	-1
  9625  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9626                           
  9627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9628                           ;stkvar	_fmt @ sp[(-32)+-4]
  9629  011BA8  0EDC               	movlw	-36
  9630  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9631  011BB0  0EDD               	movlw	-35
  9632  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9633  011BB8  2ADE               	incf	postinc2,f,c
  9634  011BBA  0E00               	movlw	0
  9635  011BBC  22DD               	addwfc	postdec2,f,c
  9636                           
  9637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9638                           ;stkvar	_ap @ sp[(-32)+-6]
  9639  011BBE  0EDA               	movlw	-38
  9640  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9641  011BC6  0EDB               	movlw	-37
  9642  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9643  011BCE  0E02               	movlw	2
  9644  011BD0  5EDE               	subwf	postinc2,f,c
  9645  011BD2  0E00               	movlw	0
  9646  011BD4  5ADD               	subwfb	postdec2,f,c
  9647  011BD6  006F FF78  F02F    	movff	postinc2,btemp+10
  9648  011BDC  006F FF74  F030    	movff	postdec2,btemp+11
  9649  011BE2  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9650  011BE8  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9651  011BEE  006F FF78  F02F    	movff	postinc2,btemp+10
  9652  011BF4  006F FF74  F030    	movff	postdec2,btemp+11
  9653  011BFA  502F               	movf	(btemp+10)^0,w,c
  9654  011BFC  6E35               	movwf	(btemp+16)^0,c
  9655  011BFE  5030               	movf	(btemp+11)^0,w,c
  9656  011C00  6E36               	movwf	(btemp+17)^0,c
  9657  011C02  6A37               	clrf	(btemp+18)^0,c
  9658  011C04  6A38               	clrf	(btemp+19)^0,c
  9659  011C06  6A39               	clrf	(btemp+20)^0,c
  9660  011C08  6A3A               	clrf	(btemp+21)^0,c
  9661  011C0A  6A3B               	clrf	(btemp+22)^0,c
  9662  011C0C  6A3C               	clrf	(btemp+23)^0,c
  9663                           
  9664                           ;stkvar	_llu @ sp[(-32)+6]
  9665  011C0E  0EE6               	movlw	-26
  9666  011C10  0060  F0D7  FFE3   	movff	btemp+16,plusw1
  9667  011C16  0EE7               	movlw	-25
  9668  011C18  0060  F0DB  FFE3   	movff	btemp+17,plusw1
  9669  011C1E  0EE8               	movlw	-24
  9670  011C20  0060  F0DF  FFE3   	movff	btemp+18,plusw1
  9671  011C26  0EE9               	movlw	-23
  9672  011C28  0060  F0E3  FFE3   	movff	btemp+19,plusw1
  9673  011C2E  0EEA               	movlw	-22
  9674  011C30  0060  F0E7  FFE3   	movff	btemp+20,plusw1
  9675  011C36  0EEB               	movlw	-21
  9676  011C38  0060  F0EB  FFE3   	movff	btemp+21,plusw1
  9677  011C3E  0EEC               	movlw	-20
  9678  011C40  0060  F0EF  FFE3   	movff	btemp+22,plusw1
  9679  011C46  0EED               	movlw	-19
  9680  011C48  0060  F0F3  FFE3   	movff	btemp+23,plusw1
  9681                           
  9682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9683                           ;stkvar	_c @ sp[(-32)+31]
  9684  011C4E  0EFF               	movlw	-1
  9685  011C50  50E3               	movf	plusw1,w,c
  9686  011C52  6EE6               	movwf	postinc1,c
  9687                           
  9688                           ;stkvar	_llu @ sp[(-33)+6]
  9689  011C54  50E1               	movf	fsr1l,w,c
  9690  011C56  0FE5               	addlw	-27
  9691  011C58  6ED9               	movwf	fsr2l,c
  9692  011C5A  50E2               	movf	fsr1h,w,c
  9693  011C5C  6EDA               	movwf	fsr2h,c
  9694  011C5E  0EFF               	movlw	255
  9695  011C60  22DA               	addwfc	fsr2h,f,c
  9696  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9697  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9698  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9699  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9700  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9701  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9702  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9703  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9704                           
  9705                           ;stkvar	_fp @ sp[(-41)+-2]
  9706  011C92  0ED5               	movlw	-43
  9707  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9708  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9709  011CA0  ECD7  F0A4         	call	_xtoa	;wreg free
  9710  011CA4  D069               	goto	l2202
  9711  011CA6                     l10764:
  9712                           
  9713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9714                           ;stkvar	_fmt @ sp[(-32)+-4]
  9715  011CA6  0EDC               	movlw	-36
  9716  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9717  011CAE  0EDD               	movlw	-35
  9718  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9719  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9720  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9721  011CC2                     	if	0	;tblptru may be non-zero
  9722  011CC2                     	endif
  9723  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9724  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9725  011CC4  6EF8               	movwf	tblptru,c
  9726  011CC6                     	endif
  9727  011CC6  0008               	tblrd		*
  9728  011CC8  50F5               	movf	tablat,w,c
  9729  011CCA  0A25               	xorlw	37
  9730  011CCC  A4D8               	btfss	status,2,c
  9731  011CCE  D01A               	goto	l10774
  9732                           
  9733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9734                           ;stkvar	_fmt @ sp[(-32)+-4]
  9735  011CD0  0EDC               	movlw	-36
  9736  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9737  011CD8  0EDD               	movlw	-35
  9738  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9739  011CE0  2ADE               	incf	postinc2,f,c
  9740  011CE2  0E00               	movlw	0
  9741  011CE4  22DD               	addwfc	postdec2,f,c
  9742                           
  9743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9744                           ;stkvar	_fp @ sp[(-32)+-2]
  9745  011CE6  0EDE               	movlw	-34
  9746  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9747  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9748  011CF4  0E25               	movlw	37
  9749  011CF6  6EE6               	movwf	postinc1,c
  9750  011CF8  0E00               	movlw	0
  9751  011CFA  6EE6               	movwf	postinc1,c
  9752  011CFC  EC1C  F0B8         	call	_fputc	;wreg free
  9753  011D00                     l10770:
  9754                           
  9755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9756  011D00  0E01               	movlw	1
  9757  011D02  D00C               	goto	L7
  9758  011D04                     l10774:
  9759                           
  9760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9761                           ;stkvar	_fmt @ sp[(-32)+-4]
  9762  011D04  0EDC               	movlw	-36
  9763  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9764  011D0C  0EDD               	movlw	-35
  9765  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9766  011D14  2ADE               	incf	postinc2,f,c
  9767  011D16  0E00               	movlw	0
  9768  011D18  22DD               	addwfc	postdec2,f,c
  9769                           
  9770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9771  011D1A  0E00               	movlw	0
  9772  011D1C                     L7:
  9773  011D1C  6E25               	movwf	btemp^0,c
  9774  011D1E  0E00               	movlw	0
  9775  011D20  6E26               	movwf	(btemp+1)^0,c
  9776  011D22  D02A               	goto	l2202
  9777  011D24                     l10780:
  9778                           
  9779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9780                           ;stkvar	_fp @ sp[(-32)+-2]
  9781  011D24  0EDE               	movlw	-34
  9782  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9783  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9784                           
  9785                           ;stkvar	_fmt @ sp[(-34)+-4]
  9786  011D32  0EDA               	movlw	-38
  9787  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9788  011D3A  0EDB               	movlw	-37
  9789  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9790  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9791  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9792  011D4E                     	if	0	;tblptru may be non-zero
  9793  011D4E                     	endif
  9794  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9795  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9796  011D50  6EF8               	movwf	tblptru,c
  9797  011D52                     	endif
  9798  011D52  0008               	tblrd		*
  9799  011D54  50F5               	movf	tablat,w,c
  9800  011D56  6EE6               	movwf	postinc1,c
  9801  011D58  0E00               	movlw	0
  9802  011D5A  6EE6               	movwf	postinc1,c
  9803  011D5C  EC1C  F0B8         	call	_fputc	;wreg free
  9804                           
  9805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9806                           ;stkvar	_fmt @ sp[(-32)+-4]
  9807  011D60  0EDC               	movlw	-36
  9808  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9809  011D68  0EDD               	movlw	-35
  9810  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9811  011D70  2ADE               	incf	postinc2,f,c
  9812  011D72  0E00               	movlw	0
  9813  011D74  22DD               	addwfc	postdec2,f,c
  9814  011D76  D7C4               	goto	l10770
  9815  011D78                     l2202:
  9816                           
  9817                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9818  011D78  0EDA               	movlw	218
  9819  011D7A  26E1               	addwf	fsr1l,f,c
  9820  011D7C  0EFF               	movlw	255
  9821  011D7E  22E2               	addwfc	fsr1h,f,c
  9822  011D80  0012               	return		;funcret
  9823  011D82                     __end_of_vfpfcnvrt:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function _xtoa *****************
  9827 ;; Defined at:
  9828 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9831 ;;		 -> f(6), NULL(0), 
  9832 ;;  d               8  [STACK] unsigned long long 
  9833 ;;  x               1  [STACK] unsigned char 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  n               8  [STACK] unsigned long long 
  9836 ;;  c               2  [STACK] int 
  9837 ;;  i               2  [STACK] int 
  9838 ;;  w               2  [STACK] int 
  9839 ;;  p               2  [STACK] int 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  2  [STACK] int 
  9842 ;; Registers used:
  9843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9853 ;;Total ram usage:        0 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; Hardware stack levels required when called:   12
  9856 ;; This function calls:
  9857 ;;		_isalpha
  9858 ;;		_isupper
  9859 ;;		_pad
  9860 ;;		_toupper
  9861 ;; This function is called by:
  9862 ;;		_vfpfcnvrt
  9863 ;; This function uses a reentrant model
  9864 ;;
  9865                           
  9866                           	psect	text42
  9867  0149AE                     __ptext42:
  9868                           	opt callstack 0
  9869  0149AE                     _xtoa:
  9870                           	opt callstack 0
  9871                           
  9872                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9873  0149AE  0E14               	movlw	20
  9874  0149B0  26E1               	addwf	fsr1l,f,c
  9875  0149B2  0E00               	movlw	0
  9876  0149B4  22E2               	addwfc	fsr1h,f,c
  9877                           
  9878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9879                           
  9880                           ;incstack = 0
  9881  0149B6  AE0D               	btfss	(_prec+1)^0,7,c
  9882                           
  9883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9884  0149B8  920E               	bcf	_flags^0,1,c
  9885                           
  9886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9887  0149BA  BE0D               	btfsc	(_prec+1)^0,7,c
  9888  0149BC  D005               	goto	u10230
  9889  0149BE  500D               	movf	(_prec+1)^0,w,c
  9890  0149C0  E110               	bnz	l10562
  9891  0149C2  040C               	decf	_prec^0,w,c
  9892  0149C4  B0D8               	btfsc	status,0,c
  9893  0149C6  D00D               	goto	l10562
  9894  0149C8                     u10230:
  9895  0149C8  0E01               	movlw	1
  9896  0149CA  6E2F               	movwf	(btemp+10)^0,c
  9897  0149CC  0E00               	movlw	0
  9898  0149CE  6E30               	movwf	(btemp+11)^0,c
  9899                           
  9900                           ;stkvar	_p @ sp[(-20)+18]
  9901  0149D0  0EFE               	movlw	-2
  9902  0149D2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9903  0149D8  0EFF               	movlw	-1
  9904  0149DA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9905  0149E0  D008               	goto	l2152
  9906  0149E2                     l10562:
  9907                           
  9908                           ;stkvar	_p @ sp[(-20)+18]
  9909  0149E2  0EFE               	movlw	-2
  9910  0149E4  0060  F033  FFE3   	movff	_prec,plusw1
  9911  0149EA  0EFF               	movlw	-1
  9912  0149EC  0060  F037  FFE3   	movff	_prec+1,plusw1
  9913  0149F2                     l2152:
  9914                           
  9915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9916                           ;stkvar	_w @ sp[(-20)+16]
  9917  0149F2  0EFC               	movlw	-4
  9918  0149F4  0060  F02B  FFE3   	movff	_width,plusw1
  9919  0149FA  0EFD               	movlw	-3
  9920  0149FC  0060  F02F  FFE3   	movff	_width+1,plusw1
  9921                           
  9922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9923  014A02  A80E               	btfss	_flags^0,4,c
  9924  014A04  D00B               	goto	l10568
  9925                           
  9926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9927                           ;stkvar	_w @ sp[(-20)+16]
  9928  014A06  50E1               	movf	fsr1l,w,c
  9929  014A08  0FFC               	addlw	-4
  9930  014A0A  6ED9               	movwf	fsr2l,c
  9931  014A0C  50E2               	movf	fsr1h,w,c
  9932  014A0E  6EDA               	movwf	fsr2h,c
  9933  014A10  0EFF               	movlw	255
  9934  014A12  22DA               	addwfc	fsr2h,f,c
  9935  014A14  0EFE               	movlw	254
  9936  014A16  26DE               	addwf	postinc2,f,c
  9937  014A18  0EFF               	movlw	255
  9938  014A1A  22DD               	addwfc	postdec2,f,c
  9939  014A1C                     l10568:
  9940                           
  9941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9942                           ;stkvar	_d @ sp[(-20)+-10]
  9943  014A1C  0EE2               	movlw	226
  9944  014A1E  24E1               	addwf	fsr1l,w,c
  9945  014A20  6ED9               	movwf	fsr2l,c
  9946  014A22  0EFF               	movlw	255
  9947  014A24  20E2               	addwfc	fsr1h,w,c
  9948  014A26  6EDA               	movwf	fsr2h,c
  9949                           
  9950                           ;stkvar	_n @ sp[(-20)+4]
  9951  014A28  0E08               	movlw	8
  9952  014A2A  6E25               	movwf	btemp^0,c
  9953  014A2C  0EF0               	movlw	-16
  9954  014A2E                     us1025999:
  9955  014A2E  006F FF7B FFE3     	movff	postinc2,plusw1
  9956  014A34  28E8               	incf	wreg,w,c
  9957  014A36  2E25               	decfsz	btemp^0,f,c
  9958  014A38  D7FA               	bra	us1025999
  9959                           
  9960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9961  014A3A  0E4F               	movlw	79
  9962  014A3C  6E2F               	movwf	(btemp+10)^0,c
  9963  014A3E  0E00               	movlw	0
  9964  014A40  6E30               	movwf	(btemp+11)^0,c
  9965                           
  9966                           ;stkvar	_i @ sp[(-20)+14]
  9967  014A42  0EFA               	movlw	-6
  9968  014A44  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9969  014A4A  0EFB               	movlw	-5
  9970  014A4C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9971                           
  9972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9973  014A52  0103               	movlb	3	; () banked
  9974  014A54  6BE3               	clrf	(_dbuf+79)& (0+255),b
  9975                           
  9976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9977  014A56  D0EE               	goto	l10606
  9978  014A58                     l10574:
  9979                           
  9980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9981                           ;stkvar	_i @ sp[(-20)+14]
  9982  014A58  50E1               	movf	fsr1l,w,c
  9983  014A5A  0FFA               	addlw	-6
  9984  014A5C  6ED9               	movwf	fsr2l,c
  9985  014A5E  50E2               	movf	fsr1h,w,c
  9986  014A60  6EDA               	movwf	fsr2h,c
  9987  014A62  0EFF               	movlw	255
  9988  014A64  22DA               	addwfc	fsr2h,f,c
  9989  014A66  06DE               	decf	postinc2,f,c
  9990  014A68  0E00               	movlw	0
  9991  014A6A  5ADD               	subwfb	postdec2,f,c
  9992                           
  9993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9994                           ;stkvar	_n @ sp[(-20)+4]
  9995  014A6C  0EF0               	movlw	-16
  9996  014A6E  006F FF8C  F02F    	movff	plusw1,btemp+10
  9997  014A74  0EF1               	movlw	-15
  9998  014A76  006F FF8C  F030    	movff	plusw1,btemp+11
  9999  014A7C  0E0F               	movlw	15
 10000  014A7E  162F               	andwf	(btemp+10)^0,f,c
 10001  014A80  0E00               	movlw	0
 10002  014A82  1630               	andwf	(btemp+11)^0,f,c
 10003                           
 10004                           ;stkvar	_c @ sp[(-20)+12]
 10005  014A84  0EF8               	movlw	-8
 10006  014A86  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10007  014A8C  0EF9               	movlw	-7
 10008  014A8E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10009                           
 10010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 10011                           ;stkvar	_c @ sp[(-20)+12]
 10012  014A94  0EF9               	movlw	-7
 10013  014A96  BEE3               	btfsc	plusw1,7,c
 10014  014A98  D00F               	goto	l10582
 10015  014A9A  0EF9               	movlw	-7
 10016  014A9C  50E3               	movf	plusw1,w,c
 10017  014A9E  E108               	bnz	u10260
 10018  014AA0  0EF8               	movlw	-8
 10019  014AA2  006F FF8C  F025    	movff	plusw1,btemp
 10020  014AA8  0E0A               	movlw	10
 10021  014AAA  5E25               	subwf	btemp^0,f,c
 10022  014AAC  A0D8               	btfss	status,0,c
 10023  014AAE  D004               	goto	l10582
 10024  014AB0                     u10260:
 10025                           
 10026                           ;stkvar	_c @ sp[(-20)+12]
 10027  014AB0  0EF8               	movlw	-8
 10028  014AB2  50E3               	movf	plusw1,w,c
 10029  014AB4  0F57               	addlw	87
 10030  014AB6  D003               	goto	L8
 10031  014AB8                     l10582:
 10032                           
 10033                           ;stkvar	_c @ sp[(-20)+12]
 10034  014AB8  0EF8               	movlw	-8
 10035  014ABA  50E3               	movf	plusw1,w,c
 10036  014ABC  0F30               	addlw	48
 10037  014ABE                     L8:
 10038  014ABE  6E2F               	movwf	(btemp+10)^0,c
 10039  014AC0  0EF9               	movlw	-7
 10040  014AC2  006F FF8C  F030    	movff	plusw1,btemp+11
 10041  014AC8  0E00               	movlw	0
 10042  014ACA  2230               	addwfc	(btemp+11)^0,f,c
 10043                           
 10044                           ;stkvar	_c @ sp[(-20)+12]
 10045  014ACC  0EF8               	movlw	-8
 10046  014ACE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10047  014AD4  0EF9               	movlw	-7
 10048  014AD6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10049  014ADC  0EBF               	movlw	191
 10050  014ADE  6E2F               	movwf	(btemp+10)^0,c
 10051  014AE0  0EFF               	movlw	255
 10052  014AE2  6E30               	movwf	(btemp+11)^0,c
 10053                           
 10054                           ;stkvar	_x @ sp[(-20)+-11]
 10055  014AE4  0EE1               	movlw	-31
 10056  014AE6  50E3               	movf	plusw1,w,c
 10057  014AE8  6E2D               	movwf	(btemp+8)^0,c
 10058  014AEA  6A2E               	clrf	(btemp+9)^0,c
 10059  014AEC  502F               	movf	(btemp+10)^0,w,c
 10060  014AEE  262D               	addwf	(btemp+8)^0,f,c
 10061  014AF0  5030               	movf	(btemp+11)^0,w,c
 10062  014AF2  222E               	addwfc	(btemp+9)^0,f,c
 10063  014AF4  502E               	movf	(btemp+9)^0,w,c
 10064  014AF6  E106               	bnz	u10270
 10065  014AF8  0E1A               	movlw	26
 10066  014AFA  5C2D               	subwf	(btemp+8)^0,w,c
 10067  014AFC  B0D8               	btfsc	status,0,c
 10068  014AFE  D002               	goto	u10270
 10069  014B00  0E01               	movlw	1
 10070  014B02  D001               	goto	u10280
 10071  014B04                     u10270:
 10072  014B04  0E00               	movlw	0
 10073  014B06                     u10280:
 10074  014B06  6E2F               	movwf	(btemp+10)^0,c
 10075  014B08  6A30               	clrf	(btemp+11)^0,c
 10076                           
 10077                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10078  014B0A  0EEE               	movlw	-18
 10079  014B0C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10080  014B12  0EEF               	movlw	-17
 10081  014B14  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10082                           
 10083                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10084  014B1A  0EEE               	movlw	-18
 10085  014B1C  006F FF8C  F025    	movff	plusw1,btemp
 10086  014B22  0EEF               	movlw	-17
 10087  014B24  50E3               	movf	plusw1,w,c
 10088  014B26  1025               	iorwf	btemp^0,w,c
 10089  014B28  B4D8               	btfsc	status,2,c
 10090  014B2A  D041               	goto	l10598
 10091  014B2C  0E9F               	movlw	159
 10092  014B2E  6E2F               	movwf	(btemp+10)^0,c
 10093  014B30  0EFF               	movlw	255
 10094  014B32  6E30               	movwf	(btemp+11)^0,c
 10095                           
 10096                           ;stkvar	_c @ sp[(-20)+12]
 10097  014B34  0EF8               	movlw	-8
 10098  014B36  006F FF8C  F02D    	movff	plusw1,btemp+8
 10099  014B3C  0EF9               	movlw	-7
 10100  014B3E  006F FF8C  F02E    	movff	plusw1,btemp+9
 10101  014B44  0E20               	movlw	32
 10102  014B46  122D               	iorwf	(btemp+8)^0,f,c
 10103  014B48  0E00               	movlw	0
 10104  014B4A  122E               	iorwf	(btemp+9)^0,f,c
 10105  014B4C  502F               	movf	(btemp+10)^0,w,c
 10106  014B4E  262D               	addwf	(btemp+8)^0,f,c
 10107  014B50  5030               	movf	(btemp+11)^0,w,c
 10108  014B52  222E               	addwfc	(btemp+9)^0,f,c
 10109  014B54  502E               	movf	(btemp+9)^0,w,c
 10110  014B56  E106               	bnz	u10300
 10111  014B58  0E1A               	movlw	26
 10112  014B5A  5C2D               	subwf	(btemp+8)^0,w,c
 10113  014B5C  B0D8               	btfsc	status,0,c
 10114  014B5E  D002               	goto	u10300
 10115  014B60  0E01               	movlw	1
 10116  014B62  D001               	goto	u10310
 10117  014B64                     u10300:
 10118  014B64  0E00               	movlw	0
 10119  014B66                     u10310:
 10120  014B66  6E2F               	movwf	(btemp+10)^0,c
 10121  014B68  6A30               	clrf	(btemp+11)^0,c
 10122                           
 10123                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10124  014B6A  0EEC               	movlw	-20
 10125  014B6C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10126  014B72  0EED               	movlw	-19
 10127  014B74  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10128                           
 10129                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10130  014B7A  0EEC               	movlw	-20
 10131  014B7C  006F FF8C  F025    	movff	plusw1,btemp
 10132  014B82  0EED               	movlw	-19
 10133  014B84  50E3               	movf	plusw1,w,c
 10134  014B86  1025               	iorwf	btemp^0,w,c
 10135  014B88  B4D8               	btfsc	status,2,c
 10136  014B8A  D011               	goto	l10598
 10137                           
 10138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10139                           ;stkvar	_c @ sp[(-20)+12]
 10140  014B8C  0EF8               	movlw	-8
 10141  014B8E  006F FF8F FFE6     	movff	plusw1,postinc1
 10142  014B94  006F FF8F FFE6     	movff	plusw1,postinc1
 10143  014B9A  EC47  F0C1         	call	_toupper	;wreg free
 10144                           
 10145                           ;stkvar	_c @ sp[(-20)+12]
 10146  014B9E  0EF8               	movlw	-8
 10147  014BA0  0060  F097  FFE3   	movff	btemp,plusw1
 10148  014BA6  0EF9               	movlw	-7
 10149  014BA8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10150  014BAE                     l10598:
 10151                           
 10152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10153                           ;stkvar	_c @ sp[(-20)+12]
 10154                           ;stkvar	_i @ sp[(-20)+14]
 10155  014BAE  0EFA               	movlw	-6
 10156  014BB0  006F FF8C  F02F    	movff	plusw1,btemp+10
 10157  014BB6  0EFB               	movlw	-5
 10158  014BB8  006F FF8C  F030    	movff	plusw1,btemp+11
 10159  014BBE  0E94               	movlw	low _dbuf
 10160  014BC0  242F               	addwf	(btemp+10)^0,w,c
 10161  014BC2  6ED9               	movwf	fsr2l,c
 10162  014BC4  0E03               	movlw	high _dbuf
 10163  014BC6  2030               	addwfc	(btemp+11)^0,w,c
 10164  014BC8  6EDA               	movwf	fsr2h,c
 10165  014BCA  0EF8               	movlw	-8
 10166  014BCC  006F FF8F FFDF     	movff	plusw1,indf2
 10167                           
 10168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10169                           ;stkvar	_p @ sp[(-20)+18]
 10170  014BD2  50E1               	movf	fsr1l,w,c
 10171  014BD4  0FFE               	addlw	-2
 10172  014BD6  6ED9               	movwf	fsr2l,c
 10173  014BD8  50E2               	movf	fsr1h,w,c
 10174  014BDA  6EDA               	movwf	fsr2h,c
 10175  014BDC  0EFF               	movlw	255
 10176  014BDE  22DA               	addwfc	fsr2h,f,c
 10177  014BE0  06DE               	decf	postinc2,f,c
 10178  014BE2  0E00               	movlw	0
 10179  014BE4  5ADD               	subwfb	postdec2,f,c
 10180                           
 10181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10182                           ;stkvar	_w @ sp[(-20)+16]
 10183  014BE6  50E1               	movf	fsr1l,w,c
 10184  014BE8  0FFC               	addlw	-4
 10185  014BEA  6ED9               	movwf	fsr2l,c
 10186  014BEC  50E2               	movf	fsr1h,w,c
 10187  014BEE  6EDA               	movwf	fsr2h,c
 10188  014BF0  0EFF               	movlw	255
 10189  014BF2  22DA               	addwfc	fsr2h,f,c
 10190  014BF4  06DE               	decf	postinc2,f,c
 10191  014BF6  0E00               	movlw	0
 10192  014BF8  5ADD               	subwfb	postdec2,f,c
 10193                           
 10194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10195  014BFA  0E04               	movlw	4
 10196  014BFC  6E30               	movwf	(btemp+11)^0,c
 10197                           
 10198                           ;stkvar	_n @ sp[(-20)+4]
 10199  014BFE  50E1               	movf	fsr1l,w,c
 10200  014C00  0FF0               	addlw	-16
 10201  014C02  6ED9               	movwf	fsr2l,c
 10202  014C04  50E2               	movf	fsr1h,w,c
 10203  014C06  6EDA               	movwf	fsr2h,c
 10204  014C08  0EFF               	movlw	255
 10205  014C0A  22DA               	addwfc	fsr2h,f,c
 10206  014C0C  2830               	incf	(btemp+11)^0,w,c
 10207  014C0E  52DE               	movf	postinc2,f,c
 10208  014C10  D00F               	goto	u10330
 10209  014C12                     u10335:
 10210  014C12  52DE               	movf	postinc2,f,c
 10211  014C14  52DE               	movf	postinc2,f,c
 10212  014C16  52DE               	movf	postinc2,f,c
 10213  014C18  52DE               	movf	postinc2,f,c
 10214  014C1A  52DE               	movf	postinc2,f,c
 10215  014C1C  52DE               	movf	postinc2,f,c
 10216  014C1E  90D8               	bcf	status,0,c
 10217  014C20  32DD               	rrcf	postdec2,f,c
 10218  014C22  32DD               	rrcf	postdec2,f,c
 10219  014C24  32DD               	rrcf	postdec2,f,c
 10220  014C26  32DD               	rrcf	postdec2,f,c
 10221  014C28  32DD               	rrcf	postdec2,f,c
 10222  014C2A  32DD               	rrcf	postdec2,f,c
 10223  014C2C  32DD               	rrcf	postdec2,f,c
 10224  014C2E  32DE               	rrcf	postinc2,f,c
 10225  014C30                     u10330:
 10226  014C30  2EE8               	decfsz	wreg,f,c
 10227  014C32  D7EF               	goto	u10335
 10228  014C34                     l10606:
 10229                           
 10230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10231                           ;stkvar	_i @ sp[(-20)+14]
 10232  014C34  0EFB               	movlw	-5
 10233  014C36  BEE3               	btfsc	plusw1,7,c
 10234  014C38  D03A               	goto	u10380
 10235  014C3A  0EFB               	movlw	-5
 10236  014C3C  50E3               	movf	plusw1,w,c
 10237  014C3E  E108               	bnz	u10340
 10238  014C40  0EFA               	movlw	-6
 10239  014C42  006F FF8C  F025    	movff	plusw1,btemp
 10240  014C48  0E02               	movlw	2
 10241  014C4A  5E25               	subwf	btemp^0,f,c
 10242  014C4C  A0D8               	btfss	status,0,c
 10243  014C4E  D02F               	goto	u10380
 10244  014C50                     u10340:
 10245                           
 10246                           ;stkvar	_n @ sp[(-20)+4]
 10247  014C50  0EF0               	movlw	-16
 10248  014C52  50E3               	movf	plusw1,w,c
 10249  014C54  E115               	bnz	u10351
 10250  014C56  0EF1               	movlw	-15
 10251  014C58  50E3               	movf	plusw1,w,c
 10252  014C5A  E112               	bnz	u10351
 10253  014C5C  0EF2               	movlw	-14
 10254  014C5E  50E3               	movf	plusw1,w,c
 10255  014C60  E10F               	bnz	u10351
 10256  014C62  0EF3               	movlw	-13
 10257  014C64  50E3               	movf	plusw1,w,c
 10258  014C66  E10C               	bnz	u10351
 10259  014C68  0EF4               	movlw	-12
 10260  014C6A  50E3               	movf	plusw1,w,c
 10261  014C6C  E109               	bnz	u10351
 10262  014C6E  0EF5               	movlw	-11
 10263  014C70  50E3               	movf	plusw1,w,c
 10264  014C72  E106               	bnz	u10351
 10265  014C74  0EF6               	movlw	-10
 10266  014C76  50E3               	movf	plusw1,w,c
 10267  014C78  E103               	bnz	u10351
 10268  014C7A  0EF7               	movlw	-9
 10269  014C7C  50E3               	movf	plusw1,w,c
 10270  014C7E  A4D8               	btfss	status,2,c
 10271  014C80                     u10351:
 10272  014C80  D6EB               	goto	l10574
 10273                           
 10274                           ;stkvar	_p @ sp[(-20)+18]
 10275  014C82  0EFF               	movlw	-1
 10276  014C84  BEE3               	btfsc	plusw1,7,c
 10277  014C86  D007               	goto	u10360
 10278  014C88  0EFF               	movlw	-1
 10279  014C8A  50E3               	movf	plusw1,w,c
 10280  014C8C  E103               	bnz	u10361
 10281  014C8E  0EFE               	movlw	-2
 10282  014C90  04E3               	decf	plusw1,w,c
 10283  014C92  B0D8               	btfsc	status,0,c
 10284  014C94                     u10361:
 10285  014C94  D6E1               	goto	l10574
 10286  014C96                     u10360:
 10287                           
 10288                           ;stkvar	_w @ sp[(-20)+16]
 10289  014C96  0EFD               	movlw	-3
 10290  014C98  BEE3               	btfsc	plusw1,7,c
 10291  014C9A  D009               	goto	u10380
 10292  014C9C  0EFD               	movlw	-3
 10293  014C9E  50E3               	movf	plusw1,w,c
 10294  014CA0  E104               	bnz	u10370
 10295  014CA2  0EFC               	movlw	-4
 10296  014CA4  04E3               	decf	plusw1,w,c
 10297  014CA6  A0D8               	btfss	status,0,c
 10298  014CA8  D002               	goto	u10380
 10299  014CAA                     u10370:
 10300  014CAA  B20E               	btfsc	_flags^0,1,c
 10301  014CAC  D6D5               	goto	l10574
 10302  014CAE                     u10380:
 10303                           
 10304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10305  014CAE  A80E               	btfss	_flags^0,4,c
 10306  014CB0  D036               	goto	l10622
 10307                           
 10308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10309                           ;stkvar	_i @ sp[(-20)+14]
 10310  014CB2  50E1               	movf	fsr1l,w,c
 10311  014CB4  0FFA               	addlw	-6
 10312  014CB6  6ED9               	movwf	fsr2l,c
 10313  014CB8  50E2               	movf	fsr1h,w,c
 10314  014CBA  6EDA               	movwf	fsr2h,c
 10315  014CBC  0EFF               	movlw	255
 10316  014CBE  22DA               	addwfc	fsr2h,f,c
 10317  014CC0  06DE               	decf	postinc2,f,c
 10318  014CC2  0E00               	movlw	0
 10319  014CC4  5ADD               	subwfb	postdec2,f,c
 10320                           
 10321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10322                           ;stkvar	_x @ sp[(-20)+-11]
 10323                           ;stkvar	_i @ sp[(-20)+14]
 10324  014CC6  0EFA               	movlw	-6
 10325  014CC8  006F FF8C  F02F    	movff	plusw1,btemp+10
 10326  014CCE  0EFB               	movlw	-5
 10327  014CD0  006F FF8C  F030    	movff	plusw1,btemp+11
 10328  014CD6  0E94               	movlw	low _dbuf
 10329  014CD8  242F               	addwf	(btemp+10)^0,w,c
 10330  014CDA  6ED9               	movwf	fsr2l,c
 10331  014CDC  0E03               	movlw	high _dbuf
 10332  014CDE  2030               	addwfc	(btemp+11)^0,w,c
 10333  014CE0  6EDA               	movwf	fsr2h,c
 10334  014CE2  0EE1               	movlw	-31
 10335  014CE4  006F FF8F FFDF     	movff	plusw1,indf2
 10336                           
 10337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10338                           ;stkvar	_i @ sp[(-20)+14]
 10339  014CEA  50E1               	movf	fsr1l,w,c
 10340  014CEC  0FFA               	addlw	-6
 10341  014CEE  6ED9               	movwf	fsr2l,c
 10342  014CF0  50E2               	movf	fsr1h,w,c
 10343  014CF2  6EDA               	movwf	fsr2h,c
 10344  014CF4  0EFF               	movlw	255
 10345  014CF6  22DA               	addwfc	fsr2h,f,c
 10346  014CF8  06DE               	decf	postinc2,f,c
 10347  014CFA  0E00               	movlw	0
 10348  014CFC  5ADD               	subwfb	postdec2,f,c
 10349                           
 10350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10351                           ;stkvar	_i @ sp[(-20)+14]
 10352  014CFE  0EFA               	movlw	-6
 10353  014D00  006F FF8C  F02F    	movff	plusw1,btemp+10
 10354  014D06  0EFB               	movlw	-5
 10355  014D08  006F FF8C  F030    	movff	plusw1,btemp+11
 10356  014D0E  0E94               	movlw	low _dbuf
 10357  014D10  242F               	addwf	(btemp+10)^0,w,c
 10358  014D12  6ED9               	movwf	fsr2l,c
 10359  014D14  0E03               	movlw	high _dbuf
 10360  014D16  2030               	addwfc	(btemp+11)^0,w,c
 10361  014D18  6EDA               	movwf	fsr2h,c
 10362  014D1A  0E30               	movlw	48
 10363  014D1C  6EDF               	movwf	indf2,c
 10364  014D1E                     l10622:
 10365                           
 10366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10367                           ;stkvar	_w @ sp[(-20)+16]
 10368  014D1E  0EFC               	movlw	-4
 10369  014D20  006F FF8F FFE6     	movff	plusw1,postinc1
 10370  014D26  006F FF8F FFE6     	movff	plusw1,postinc1
 10371                           
 10372                           ;stkvar	_i @ sp[(-22)+14]
 10373  014D2C  0E94               	movlw	low _dbuf
 10374  014D2E  6E2F               	movwf	(btemp+10)^0,c
 10375  014D30  0E03               	movlw	high _dbuf
 10376  014D32  6E30               	movwf	(btemp+11)^0,c
 10377  014D34  0EF8               	movlw	-8
 10378  014D36  50E3               	movf	plusw1,w,c
 10379  014D38  262F               	addwf	(btemp+10)^0,f,c
 10380  014D3A  0EF9               	movlw	-7
 10381  014D3C  50E3               	movf	plusw1,w,c
 10382  014D3E  2230               	addwfc	(btemp+11)^0,f,c
 10383  014D40  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 10384  014D46  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 10385                           
 10386                           ;stkvar	_fp @ sp[(-24)+-2]
 10387  014D4C  0EE6               	movlw	-26
 10388  014D4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10389  014D54  006F FF8F FFE6     	movff	plusw1,postinc1
 10390  014D5A  EC3A  F0B9         	call	_pad	;wreg free
 10391                           
 10392                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10393  014D5E  0EE1               	movlw	225
 10394  014D60  26E1               	addwf	fsr1l,f,c
 10395  014D62  0EFF               	movlw	255
 10396  014D64  22E2               	addwfc	fsr1h,f,c
 10397  014D66  0012               	return		;funcret
 10398  014D68                     __end_of_xtoa:
 10399                           	opt callstack 0
 10400                           
 10401 ;; *************** function _toupper *****************
 10402 ;; Defined at:
 10403 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  c               2  [STACK] int 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  2  [STACK] int 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/3
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10421 ;;Total ram usage:        0 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    8
 10424 ;; This function calls:
 10425 ;;		_islower
 10426 ;; This function is called by:
 10427 ;;		_xtoa
 10428 ;; This function uses a reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text43
 10432  01828E                     __ptext43:
 10433                           	opt callstack 0
 10434  01828E                     _toupper:
 10435                           	opt callstack 0
 10436                           
 10437                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10438  01828E  52E6               	movf	postinc1,f,c
 10439  018290  52E6               	movf	postinc1,f,c
 10440                           
 10441                           ;stkvar	_c @ sp[(-2)+-2]
 10442                           
 10443                           ;incstack = 0
 10444  018292  0EFC               	movlw	-4
 10445  018294  50E3               	movf	plusw1,w,c
 10446  018296  0F9F               	addlw	159
 10447  018298  6E2F               	movwf	(btemp+10)^0,c
 10448  01829A  0EFD               	movlw	-3
 10449  01829C  006F FF8C  F030    	movff	plusw1,btemp+11
 10450  0182A2  0EFF               	movlw	255
 10451  0182A4  2230               	addwfc	(btemp+11)^0,f,c
 10452  0182A6  5030               	movf	(btemp+11)^0,w,c
 10453  0182A8  E106               	bnz	u5080
 10454  0182AA  0E1A               	movlw	26
 10455  0182AC  5C2F               	subwf	(btemp+10)^0,w,c
 10456  0182AE  B0D8               	btfsc	status,0,c
 10457  0182B0  D002               	goto	u5080
 10458  0182B2  0E01               	movlw	1
 10459  0182B4  D001               	goto	u5090
 10460  0182B6                     u5080:
 10461  0182B6  0E00               	movlw	0
 10462  0182B8                     u5090:
 10463  0182B8  6E2F               	movwf	(btemp+10)^0,c
 10464  0182BA  6A30               	clrf	(btemp+11)^0,c
 10465                           
 10466                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10467  0182BC  0EFE               	movlw	-2
 10468  0182BE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10469  0182C4  0EFF               	movlw	-1
 10470  0182C6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10471                           
 10472                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10473  0182CC  0EFE               	movlw	-2
 10474  0182CE  006F FF8C  F025    	movff	plusw1,btemp
 10475  0182D4  0EFF               	movlw	-1
 10476  0182D6  50E3               	movf	plusw1,w,c
 10477  0182D8  1025               	iorwf	btemp^0,w,c
 10478  0182DA  B4D8               	btfsc	status,2,c
 10479  0182DC  D00D               	goto	l6756
 10480                           
 10481                           ;stkvar	_c @ sp[(-2)+-2]
 10482  0182DE  0EFC               	movlw	-4
 10483  0182E0  006F FF8C  F025    	movff	plusw1,btemp
 10484  0182E6  0EFD               	movlw	-3
 10485  0182E8  006F FF8C  F026    	movff	plusw1,btemp+1
 10486  0182EE  0E5F               	movlw	95
 10487  0182F0  1625               	andwf	btemp^0,f,c
 10488  0182F2  0E00               	movlw	0
 10489  0182F4  1626               	andwf	(btemp+1)^0,f,c
 10490  0182F6  D008               	goto	l3085
 10491  0182F8                     l6756:
 10492                           
 10493                           ;stkvar	_c @ sp[(-2)+-2]
 10494  0182F8  0EFC               	movlw	-4
 10495  0182FA  006F FF8C  F025    	movff	plusw1,btemp
 10496  018300  0EFD               	movlw	-3
 10497  018302  006F FF8C  F026    	movff	plusw1,btemp+1
 10498  018308                     l3085:
 10499                           
 10500                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10501  018308  52E5               	movf	postdec1,f,c
 10502  01830A  52E5               	movf	postdec1,f,c
 10503  01830C  52E5               	movf	postdec1,f,c
 10504  01830E  52E5               	movf	postdec1,f,c
 10505  018310  0012               	return		;funcret
 10506  018312                     __end_of_toupper:
 10507                           	opt callstack 0
 10508                           
 10509 ;; *************** function _islower *****************
 10510 ;; Defined at:
 10511 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;  c               2  [STACK] int 
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;		None
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  2  [STACK] int 
 10518 ;; Registers used:
 10519 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10529 ;;Total ram usage:        0 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; Hardware stack levels required when called:    7
 10532 ;; This function calls:
 10533 ;;		Nothing
 10534 ;; This function is called by:
 10535 ;;		_toupper
 10536 ;; This function uses a reentrant model
 10537 ;;
 10538                           
 10539                           	psect	text44
 10540  018E88                     __ptext44:
 10541                           	opt callstack 0
 10542  018E88                     _islower:
 10543                           	opt callstack 15
 10544                           
 10545                           ;stkvar	_c @ sp[(0)+-2]
 10546                           
 10547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10548                           ;incstack = 0
 10549  018E88  0EFE               	movlw	-2
 10550  018E8A  50E3               	movf	plusw1,w,c
 10551  018E8C  0F9F               	addlw	159
 10552  018E8E  6E2F               	movwf	(btemp+10)^0,c
 10553  018E90  0EFF               	movlw	-1
 10554  018E92  006F FF8C  F030    	movff	plusw1,btemp+11
 10555  018E98  0EFF               	movlw	255
 10556  018E9A  2230               	addwfc	(btemp+11)^0,f,c
 10557  018E9C  5030               	movf	(btemp+11)^0,w,c
 10558  018E9E  E106               	bnz	u4770
 10559  018EA0  0E1A               	movlw	26
 10560  018EA2  5C2F               	subwf	(btemp+10)^0,w,c
 10561  018EA4  B0D8               	btfsc	status,0,c
 10562  018EA6  D002               	goto	u4770
 10563  018EA8  0E01               	movlw	1
 10564  018EAA  D001               	goto	u4780
 10565  018EAC                     u4770:
 10566  018EAC  0E00               	movlw	0
 10567  018EAE                     u4780:
 10568  018EAE  6E25               	movwf	btemp^0,c
 10569  018EB0  6A26               	clrf	(btemp+1)^0,c
 10570                           
 10571                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10572  018EB2  52E5               	movf	postdec1,f,c
 10573  018EB4  52E5               	movf	postdec1,f,c
 10574  018EB6  0012               	return		;funcret
 10575  018EB8                     __end_of_islower:
 10576                           	opt callstack 0
 10577                           
 10578 ;; *************** function _isalpha *****************
 10579 ;; Defined at:
 10580 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  c               2  [STACK] int 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  2  [STACK] int 
 10587 ;; Registers used:
 10588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;Total ram usage:        0 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:    7
 10601 ;; This function calls:
 10602 ;;		Nothing
 10603 ;; This function is called by:
 10604 ;;		_xtoa
 10605 ;; This function uses a reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text45
 10609  018B4E                     __ptext45:
 10610                           	opt callstack 0
 10611  018B4E                     _isalpha:
 10612                           	opt callstack 16
 10613                           
 10614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10615                           ;incstack = 0
 10616  018B4E  0E9F               	movlw	159
 10617  018B50  6E2F               	movwf	(btemp+10)^0,c
 10618  018B52  0EFF               	movlw	255
 10619  018B54  6E30               	movwf	(btemp+11)^0,c
 10620                           
 10621                           ;stkvar	_c @ sp[(0)+-2]
 10622  018B56  0EFE               	movlw	-2
 10623  018B58  006F FF8C  F02D    	movff	plusw1,btemp+8
 10624  018B5E  0EFF               	movlw	-1
 10625  018B60  006F FF8C  F02E    	movff	plusw1,btemp+9
 10626  018B66  0E20               	movlw	32
 10627  018B68  122D               	iorwf	(btemp+8)^0,f,c
 10628  018B6A  0E00               	movlw	0
 10629  018B6C  122E               	iorwf	(btemp+9)^0,f,c
 10630  018B6E  502F               	movf	(btemp+10)^0,w,c
 10631  018B70  262D               	addwf	(btemp+8)^0,f,c
 10632  018B72  5030               	movf	(btemp+11)^0,w,c
 10633  018B74  222E               	addwfc	(btemp+9)^0,f,c
 10634  018B76  502E               	movf	(btemp+9)^0,w,c
 10635  018B78  E106               	bnz	u5060
 10636  018B7A  0E1A               	movlw	26
 10637  018B7C  5C2D               	subwf	(btemp+8)^0,w,c
 10638  018B7E  B0D8               	btfsc	status,0,c
 10639  018B80  D002               	goto	u5060
 10640  018B82  0E01               	movlw	1
 10641  018B84  D001               	goto	u5070
 10642  018B86                     u5060:
 10643  018B86  0E00               	movlw	0
 10644  018B88                     u5070:
 10645  018B88  6E25               	movwf	btemp^0,c
 10646  018B8A  6A26               	clrf	(btemp+1)^0,c
 10647                           
 10648                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10649  018B8C  52E5               	movf	postdec1,f,c
 10650  018B8E  52E5               	movf	postdec1,f,c
 10651  018B90  0012               	return		;funcret
 10652  018B92                     __end_of_isalpha:
 10653                           	opt callstack 0
 10654                           
 10655 ;; *************** function _strncmp *****************
 10656 ;; Defined at:
 10657 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;  _l              2  [STACK] PTR const unsigned char 
 10660 ;;		 -> ct(3), 
 10661 ;;  _r              2  [STACK] PTR const unsigned char 
 10662 ;;		 -> STR_56(3), 
 10663 ;;  n               2  [STACK] unsigned int 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;  r               2  [STACK] PTR const unsigned char 
 10666 ;;		 -> STR_56(3), 
 10667 ;;  l               2  [STACK] PTR const unsigned char 
 10668 ;;		 -> ct(3), 
 10669 ;; Return value:  Size  Location     Type
 10670 ;;                  2  [STACK] int 
 10671 ;; Registers used:
 10672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10673 ;; Tracked objects:
 10674 ;;		On entry : 0/0
 10675 ;;		On exit  : 0/0
 10676 ;;		Unchanged: 0/0
 10677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10682 ;;Total ram usage:        0 bytes
 10683 ;; Hardware stack levels used:    1
 10684 ;; Hardware stack levels required when called:    7
 10685 ;; This function calls:
 10686 ;;		Nothing
 10687 ;; This function is called by:
 10688 ;;		_vfpfcnvrt
 10689 ;; This function uses a reentrant model
 10690 ;;
 10691                           
 10692                           	psect	text46
 10693  0164A2                     __ptext46:
 10694                           	opt callstack 0
 10695  0164A2                     _strncmp:
 10696                           	opt callstack 0
 10697                           
 10698                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10699  0164A2  52E6               	movf	postinc1,f,c
 10700  0164A4  52E6               	movf	postinc1,f,c
 10701  0164A6  52E6               	movf	postinc1,f,c
 10702  0164A8  52E6               	movf	postinc1,f,c
 10703                           
 10704                           ;stkvar	__l @ sp[(-4)+-2]
 10705                           
 10706                           ;incstack = 0
 10707  0164AA  0EFA               	movlw	-6
 10708  0164AC  006F FF8C  F02F    	movff	plusw1,btemp+10
 10709  0164B2  0EFB               	movlw	-5
 10710  0164B4  006F FF8C  F030    	movff	plusw1,btemp+11
 10711                           
 10712                           ;stkvar	_l @ sp[(-4)+2]
 10713  0164BA  0EFF               	movlw	-1
 10714  0164BC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10715  0164C2  0EFE               	movlw	-2
 10716  0164C4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10717                           
 10718                           ;stkvar	__r @ sp[(-4)+-4]
 10719  0164CA  0EF8               	movlw	-8
 10720  0164CC  006F FF8C  F02F    	movff	plusw1,btemp+10
 10721  0164D2  0EF9               	movlw	-7
 10722  0164D4  006F FF8C  F030    	movff	plusw1,btemp+11
 10723                           
 10724                           ;stkvar	_r @ sp[(-4)+0]
 10725  0164DA  0EFD               	movlw	-3
 10726  0164DC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10727  0164E2  0EFC               	movlw	-4
 10728  0164E4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10729                           
 10730                           ;stkvar	_n @ sp[(-4)+-6]
 10731  0164EA  0EF6               	movlw	-10
 10732  0164EC  006F FF8C  F025    	movff	plusw1,btemp
 10733  0164F2  0E01               	movlw	1
 10734  0164F4  5E25               	subwf	btemp^0,f,c
 10735  0164F6  0EF6               	movlw	-10
 10736  0164F8  0060  F097  FFE3   	movff	btemp,plusw1
 10737  0164FE  0EF7               	movlw	-9
 10738  016500  006F FF8C  F025    	movff	plusw1,btemp
 10739  016506  0E00               	movlw	0
 10740  016508  5A25               	subwfb	btemp^0,f,c
 10741  01650A  0EF7               	movlw	-9
 10742  01650C  0060  F097  FFE3   	movff	btemp,plusw1
 10743  016512  0EF6               	movlw	-10
 10744  016514  28E3               	incf	plusw1,w,c
 10745  016516  E13F               	bnz	l7526
 10746  016518  0EF7               	movlw	-9
 10747  01651A  28E3               	incf	plusw1,w,c
 10748  01651C  A4D8               	btfss	status,2,c
 10749  01651E  D03B               	goto	l7526
 10750  016520  0E00               	movlw	0
 10751  016522  6E25               	movwf	btemp^0,c
 10752  016524  0E00               	movlw	0
 10753  016526  6E26               	movwf	(btemp+1)^0,c
 10754  016528  D09B               	goto	l3057
 10755  01652A                     l7524:
 10756                           
 10757                           ;stkvar	_l @ sp[(-4)+2]
 10758  01652A  0EFE               	movlw	-2
 10759  01652C  50E3               	movf	plusw1,w,c
 10760  01652E  0F01               	addlw	1
 10761  016530  6E25               	movwf	btemp^0,c
 10762  016532  0EFE               	movlw	-2
 10763  016534  0060  F097  FFE3   	movff	btemp,plusw1
 10764  01653A  6A25               	clrf	btemp^0,c
 10765  01653C  0EFF               	movlw	-1
 10766  01653E  50E3               	movf	plusw1,w,c
 10767  016540  2025               	addwfc	btemp^0,w,c
 10768  016542  6E25               	movwf	btemp^0,c
 10769  016544  0EFF               	movlw	-1
 10770  016546  0060  F097  FFE3   	movff	btemp,plusw1
 10771                           
 10772                           ;stkvar	_r @ sp[(-4)+0]
 10773  01654C  0EFC               	movlw	-4
 10774  01654E  50E3               	movf	plusw1,w,c
 10775  016550  0F01               	addlw	1
 10776  016552  6E25               	movwf	btemp^0,c
 10777  016554  0EFC               	movlw	-4
 10778  016556  0060  F097  FFE3   	movff	btemp,plusw1
 10779  01655C  6A25               	clrf	btemp^0,c
 10780  01655E  0EFD               	movlw	-3
 10781  016560  50E3               	movf	plusw1,w,c
 10782  016562  2025               	addwfc	btemp^0,w,c
 10783  016564  6E25               	movwf	btemp^0,c
 10784  016566  0EFD               	movlw	-3
 10785  016568  0060  F097  FFE3   	movff	btemp,plusw1
 10786                           
 10787                           ;stkvar	_n @ sp[(-4)+-6]
 10788  01656E  0EF6               	movlw	-10
 10789  016570  006F FF8C  F025    	movff	plusw1,btemp
 10790  016576  0E01               	movlw	1
 10791  016578  5E25               	subwf	btemp^0,f,c
 10792  01657A  0EF6               	movlw	-10
 10793  01657C  0060  F097  FFE3   	movff	btemp,plusw1
 10794  016582  0EF7               	movlw	-9
 10795  016584  006F FF8C  F025    	movff	plusw1,btemp
 10796  01658A  0E00               	movlw	0
 10797  01658C  5A25               	subwfb	btemp^0,f,c
 10798  01658E  0EF7               	movlw	-9
 10799  016590  0060  F097  FFE3   	movff	btemp,plusw1
 10800  016596                     l7526:
 10801                           
 10802                           ;stkvar	_l @ sp[(-4)+2]
 10803  016596  0EFE               	movlw	-2
 10804  016598  006F FF8F FFD9     	movff	plusw1,fsr2l
 10805  01659E  0EFF               	movlw	-1
 10806  0165A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10807  0165A6  50DF               	movf	indf2,w,c
 10808  0165A8  B4D8               	btfsc	status,2,c
 10809  0165AA  D03B               	goto	u6640
 10810                           
 10811                           ;stkvar	_r @ sp[(-4)+0]
 10812  0165AC  50E1               	movf	fsr1l,w,c
 10813  0165AE  0FFC               	addlw	-4
 10814  0165B0  6ED9               	movwf	fsr2l,c
 10815  0165B2  50E2               	movf	fsr1h,w,c
 10816  0165B4  6EDA               	movwf	fsr2h,c
 10817  0165B6  0EFF               	movlw	255
 10818  0165B8  22DA               	addwfc	fsr2h,f,c
 10819  0165BA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10820  0165C0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10821  0165C6                     	if	0	;tblptru may be non-zero
 10822  0165C6                     	endif
 10823  0165C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10824  0165C6  0E00               	movlw	low (__mediumconst shr (0+16))
 10825  0165C8  6EF8               	movwf	tblptru,c
 10826  0165CA                     	endif
 10827  0165CA  0008               	tblrd		*
 10828  0165CC  50F5               	movf	tablat,w,c
 10829  0165CE  0900               	iorlw	0
 10830  0165D0  B4D8               	btfsc	status,2,c
 10831  0165D2  D027               	goto	u6640
 10832                           
 10833                           ;stkvar	_n @ sp[(-4)+-6]
 10834  0165D4  0EF6               	movlw	-10
 10835  0165D6  006F FF8C  F025    	movff	plusw1,btemp
 10836  0165DC  0EF7               	movlw	-9
 10837  0165DE  50E3               	movf	plusw1,w,c
 10838  0165E0  1025               	iorwf	btemp^0,w,c
 10839  0165E2  B4D8               	btfsc	status,2,c
 10840  0165E4  D01E               	goto	u6640
 10841                           
 10842                           ;stkvar	_l @ sp[(-4)+2]
 10843  0165E6  0EFE               	movlw	-2
 10844  0165E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10845  0165EE  0EFF               	movlw	-1
 10846  0165F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10847  0165F6  50DF               	movf	indf2,w,c
 10848  0165F8  6E30               	movwf	(btemp+11)^0,c
 10849                           
 10850                           ;stkvar	_r @ sp[(-4)+0]
 10851  0165FA  50E1               	movf	fsr1l,w,c
 10852  0165FC  0FFC               	addlw	-4
 10853  0165FE  6ED9               	movwf	fsr2l,c
 10854  016600  50E2               	movf	fsr1h,w,c
 10855  016602  6EDA               	movwf	fsr2h,c
 10856  016604  0EFF               	movlw	255
 10857  016606  22DA               	addwfc	fsr2h,f,c
 10858  016608  006F FF7B FFF6     	movff	postinc2,tblptrl
 10859  01660E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10860  016614                     	if	0	;tblptru may be non-zero
 10861  016614                     	endif
 10862  016614                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10863  016614  0E00               	movlw	low (__mediumconst shr (0+16))
 10864  016616  6EF8               	movwf	tblptru,c
 10865  016618                     	endif
 10866  016618  0008               	tblrd		*
 10867  01661A  50F5               	movf	tablat,w,c
 10868  01661C  1830               	xorwf	(btemp+11)^0,w,c
 10869  01661E  B4D8               	btfsc	status,2,c
 10870  016620  D784               	goto	l7524
 10871  016622                     u6640:
 10872                           
 10873                           ;stkvar	_l @ sp[(-4)+2]
 10874  016622  0EFE               	movlw	-2
 10875  016624  006F FF8F FFD9     	movff	plusw1,fsr2l
 10876  01662A  0EFF               	movlw	-1
 10877  01662C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10878  016632  50DF               	movf	indf2,w,c
 10879  016634  6E25               	movwf	btemp^0,c
 10880  016636  6A26               	clrf	(btemp+1)^0,c
 10881                           
 10882                           ;stkvar	_r @ sp[(-4)+0]
 10883  016638  50E1               	movf	fsr1l,w,c
 10884  01663A  0FFC               	addlw	-4
 10885  01663C  6ED9               	movwf	fsr2l,c
 10886  01663E  50E2               	movf	fsr1h,w,c
 10887  016640  6EDA               	movwf	fsr2h,c
 10888  016642  0EFF               	movlw	255
 10889  016644  22DA               	addwfc	fsr2h,f,c
 10890  016646  006F FF7B FFF6     	movff	postinc2,tblptrl
 10891  01664C  006F FF77 FFF7     	movff	postdec2,tblptrh
 10892  016652                     	if	0	;tblptru may be non-zero
 10893  016652                     	endif
 10894  016652                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10895  016652  0E00               	movlw	low (__mediumconst shr (0+16))
 10896  016654  6EF8               	movwf	tblptru,c
 10897  016656                     	endif
 10898  016656  0008               	tblrd		*
 10899  016658  50F5               	movf	tablat,w,c
 10900  01665A  5E25               	subwf	btemp^0,f,c
 10901  01665C  0E00               	movlw	0
 10902  01665E  5A26               	subwfb	(btemp+1)^0,f,c
 10903  016660                     l3057:
 10904                           
 10905                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10906  016660  0EF6               	movlw	246
 10907  016662  26E1               	addwf	fsr1l,f,c
 10908  016664  0EFF               	movlw	255
 10909  016666  22E2               	addwfc	fsr1h,f,c
 10910  016668  0012               	return		;funcret
 10911  01666A                     __end_of_strncmp:
 10912                           	opt callstack 0
 10913                           
 10914 ;; *************** function _stoa *****************
 10915 ;; Defined at:
 10916 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10919 ;;		 -> f(6), NULL(0), 
 10920 ;;  s               2  [STACK] PTR unsigned char 
 10921 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10922 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10923 ;;		 -> STR_3(6), V(188), 
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;  nuls            7  [STACK] unsigned char [7]
 10926 ;;  l               2  [STACK] int 
 10927 ;;  p               2  [STACK] int 
 10928 ;;  cp              2  [STACK] PTR unsigned char 
 10929 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10930 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10931 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10932 ;;  w               2  [STACK] int 
 10933 ;;  i               2  [STACK] int 
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  2  [STACK] int 
 10936 ;; Registers used:
 10937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10947 ;;Total ram usage:        0 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; Hardware stack levels required when called:   10
 10950 ;; This function calls:
 10951 ;;		_fputc
 10952 ;;		_strlen
 10953 ;; This function is called by:
 10954 ;;		_vfpfcnvrt
 10955 ;; This function uses a reentrant model
 10956 ;;
 10957                           
 10958                           	psect	text47
 10959  01569A                     __ptext47:
 10960                           	opt callstack 0
 10961  01569A                     _stoa:
 10962                           	opt callstack 0
 10963                           
 10964                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10965  01569A  0E11               	movlw	17
 10966  01569C  26E1               	addwf	fsr1l,f,c
 10967  01569E  0E00               	movlw	0
 10968  0156A0  22E2               	addwfc	fsr1h,f,c
 10969                           
 10970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10971                           
 10972                           ;incstack = 0
 10973  0156A2  EE20  F0EB         	lfsr	2,stoa@F1166
 10974                           
 10975                           ;stkvar	_nuls @ sp[(-17)+0]
 10976  0156A6  0E07               	movlw	7
 10977  0156A8  6E25               	movwf	btemp^0,c
 10978  0156AA  0EEF               	movlw	-17
 10979  0156AC                     us1012999:
 10980  0156AC  006F FF7B FFE3     	movff	postinc2,plusw1
 10981  0156B2  28E8               	incf	wreg,w,c
 10982  0156B4  2E25               	decfsz	btemp^0,f,c
 10983  0156B6  D7FA               	bra	us1012999
 10984                           
 10985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10986                           ;stkvar	_s @ sp[(-17)+-4]
 10987  0156B8  0EEB               	movlw	-21
 10988  0156BA  006F FF8C  F02F    	movff	plusw1,btemp+10
 10989  0156C0  0EEC               	movlw	-20
 10990  0156C2  006F FF8C  F030    	movff	plusw1,btemp+11
 10991                           
 10992                           ;stkvar	_cp @ sp[(-17)+11]
 10993  0156C8  0EFB               	movlw	-5
 10994  0156CA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10995  0156D0  0EFA               	movlw	-6
 10996  0156D2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10997                           
 10998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10999                           ;stkvar	_cp @ sp[(-17)+11]
 11000  0156D8  0EFA               	movlw	-6
 11001  0156DA  006F FF8C  F025    	movff	plusw1,btemp
 11002  0156E0  0EFB               	movlw	-5
 11003  0156E2  50E3               	movf	plusw1,w,c
 11004  0156E4  1025               	iorwf	btemp^0,w,c
 11005  0156E6  A4D8               	btfss	status,2,c
 11006  0156E8  D00E               	goto	l10510
 11007                           
 11008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11009                           ;stkvar	_nuls @ sp[(-17)+0]
 11010  0156EA  0EEF               	movlw	239
 11011  0156EC  24E1               	addwf	fsr1l,w,c
 11012  0156EE  6E2F               	movwf	(btemp+10)^0,c
 11013  0156F0  0EFF               	movlw	255
 11014  0156F2  20E2               	addwfc	fsr1h,w,c
 11015  0156F4  6E30               	movwf	(btemp+11)^0,c
 11016                           
 11017                           ;stkvar	_cp @ sp[(-17)+11]
 11018  0156F6  0EFB               	movlw	-5
 11019  0156F8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11020  0156FE  0EFA               	movlw	-6
 11021  015700  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11022  015706                     l10510:
 11023                           
 11024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11025                           ;stkvar	_cp @ sp[(-17)+11]
 11026  015706  0EFA               	movlw	-6
 11027  015708  006F FF8F FFE6     	movff	plusw1,postinc1
 11028  01570E  006F FF8F FFE6     	movff	plusw1,postinc1
 11029  015714  EC8C  F0BF         	call	_strlen	;wreg free
 11030                           
 11031                           ;stkvar	_l @ sp[(-17)+7]
 11032  015718  0EF6               	movlw	-10
 11033  01571A  0060  F097  FFE3   	movff	btemp,plusw1
 11034  015720  0EF7               	movlw	-9
 11035  015722  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11036                           
 11037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11038                           ;stkvar	_p @ sp[(-17)+9]
 11039  015728  0EF8               	movlw	-8
 11040  01572A  0060  F033  FFE3   	movff	_prec,plusw1
 11041  015730  0EF9               	movlw	-7
 11042  015732  0060  F037  FFE3   	movff	_prec+1,plusw1
 11043                           
 11044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11045                           ;stkvar	_p @ sp[(-17)+9]
 11046  015738  0EF9               	movlw	-7
 11047  01573A  BEE3               	btfsc	plusw1,7,c
 11048  01573C  D023               	goto	l2131
 11049                           
 11050                           ;stkvar	_l @ sp[(-17)+7]
 11051                           ;stkvar	_p @ sp[(-17)+9]
 11052  01573E  50E1               	movf	fsr1l,w,c
 11053  015740  0FF8               	addlw	-8
 11054  015742  6ED9               	movwf	fsr2l,c
 11055  015744  50E2               	movf	fsr1h,w,c
 11056  015746  6EDA               	movwf	fsr2h,c
 11057  015748  0EFF               	movlw	255
 11058  01574A  22DA               	addwfc	fsr2h,f,c
 11059  01574C  0EF6               	movlw	-10
 11060  01574E  50E3               	movf	plusw1,w,c
 11061  015750  5CDE               	subwf	postinc2,w,c
 11062  015752  50DE               	movf	postinc2,w,c
 11063  015754  0A80               	xorlw	128
 11064  015756  6E25               	movwf	btemp^0,c
 11065  015758  0EF7               	movlw	-9
 11066  01575A  50E3               	movf	plusw1,w,c
 11067  01575C  0A80               	xorlw	128
 11068  01575E  5825               	subwfb	btemp^0,w,c
 11069  015760  B0D8               	btfsc	status,0,c
 11070  015762  D010               	goto	l2131
 11071                           
 11072                           ;stkvar	_p @ sp[(-17)+9]
 11073                           ;stkvar	_l @ sp[(-17)+7]
 11074  015764  0EF8               	movlw	-8
 11075  015766  006F FF8C  F025    	movff	plusw1,btemp
 11076  01576C  0EF6               	movlw	-10
 11077  01576E  0060  F097  FFE3   	movff	btemp,plusw1
 11078  015774  0EF9               	movlw	-7
 11079  015776  006F FF8C  F025    	movff	plusw1,btemp
 11080  01577C  0EF7               	movlw	-9
 11081  01577E  0060  F097  FFE3   	movff	btemp,plusw1
 11082  015784                     l2131:
 11083                           
 11084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11085                           ;stkvar	_l @ sp[(-17)+7]
 11086                           ;stkvar	_p @ sp[(-17)+9]
 11087  015784  0EF6               	movlw	-10
 11088  015786  006F FF8C  F025    	movff	plusw1,btemp
 11089  01578C  0EF8               	movlw	-8
 11090  01578E  0060  F097  FFE3   	movff	btemp,plusw1
 11091  015794  0EF7               	movlw	-9
 11092  015796  006F FF8C  F025    	movff	plusw1,btemp
 11093  01579C  0EF9               	movlw	-7
 11094  01579E  0060  F097  FFE3   	movff	btemp,plusw1
 11095                           
 11096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11097                           ;stkvar	_w @ sp[(-17)+13]
 11098  0157A4  0EFC               	movlw	-4
 11099  0157A6  0060  F02B  FFE3   	movff	_width,plusw1
 11100  0157AC  0EFD               	movlw	-3
 11101  0157AE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11102                           
 11103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11104  0157B4  A00E               	btfss	_flags^0,0,c
 11105  0157B6  D01F               	goto	l10530
 11106  0157B8  D031               	goto	u10170
 11107  0157BA                     l10526:
 11108                           
 11109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11110                           ;stkvar	_fp @ sp[(-17)+-2]
 11111  0157BA  0EED               	movlw	-19
 11112  0157BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11113  0157C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11114  0157C8  0E20               	movlw	32
 11115  0157CA  6EE6               	movwf	postinc1,c
 11116  0157CC  0E00               	movlw	0
 11117  0157CE  6EE6               	movwf	postinc1,c
 11118  0157D0  EC1C  F0B8         	call	_fputc	;wreg free
 11119                           
 11120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11121                           ;stkvar	_l @ sp[(-17)+7]
 11122  0157D4  0EF6               	movlw	-10
 11123  0157D6  50E3               	movf	plusw1,w,c
 11124  0157D8  0F01               	addlw	1
 11125  0157DA  6E25               	movwf	btemp^0,c
 11126  0157DC  0EF6               	movlw	-10
 11127  0157DE  0060  F097  FFE3   	movff	btemp,plusw1
 11128  0157E4  6A25               	clrf	btemp^0,c
 11129  0157E6  0EF7               	movlw	-9
 11130  0157E8  50E3               	movf	plusw1,w,c
 11131  0157EA  2025               	addwfc	btemp^0,w,c
 11132  0157EC  6E25               	movwf	btemp^0,c
 11133  0157EE  0EF7               	movlw	-9
 11134  0157F0  0060  F097  FFE3   	movff	btemp,plusw1
 11135  0157F6                     l10530:
 11136                           
 11137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11138                           ;stkvar	_w @ sp[(-17)+13]
 11139                           ;stkvar	_l @ sp[(-17)+7]
 11140  0157F6  50E1               	movf	fsr1l,w,c
 11141  0157F8  0FF6               	addlw	-10
 11142  0157FA  6ED9               	movwf	fsr2l,c
 11143  0157FC  50E2               	movf	fsr1h,w,c
 11144  0157FE  6EDA               	movwf	fsr2h,c
 11145  015800  0EFF               	movlw	255
 11146  015802  22DA               	addwfc	fsr2h,f,c
 11147  015804  0EFC               	movlw	-4
 11148  015806  50E3               	movf	plusw1,w,c
 11149  015808  5CDE               	subwf	postinc2,w,c
 11150  01580A  50DE               	movf	postinc2,w,c
 11151  01580C  0A80               	xorlw	128
 11152  01580E  6E25               	movwf	btemp^0,c
 11153  015810  0EFD               	movlw	-3
 11154  015812  50E3               	movf	plusw1,w,c
 11155  015814  0A80               	xorlw	128
 11156  015816  5825               	subwfb	btemp^0,w,c
 11157  015818  A0D8               	btfss	status,0,c
 11158  01581A  D7CF               	goto	l10526
 11159  01581C                     u10170:
 11160                           
 11161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11162                           ;stkvar	_i @ sp[(-17)+15]
 11163  01581C  0EFE               	movlw	-2
 11164  01581E  6AE3               	clrf	plusw1,c
 11165  015820  0EFF               	movlw	-1
 11166  015822  6AE3               	clrf	plusw1,c
 11167                           
 11168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11169  015824  D045               	goto	l10540
 11170  015826                     l10534:
 11171                           
 11172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11173                           ;stkvar	_fp @ sp[(-17)+-2]
 11174  015826  0EED               	movlw	-19
 11175  015828  006F FF8F FFE6     	movff	plusw1,postinc1
 11176  01582E  006F FF8F FFE6     	movff	plusw1,postinc1
 11177                           
 11178                           ;stkvar	_cp @ sp[(-19)+11]
 11179  015834  0EF8               	movlw	-8
 11180  015836  006F FF8F FFF6     	movff	plusw1,tblptrl
 11181  01583C  0EF9               	movlw	-7
 11182  01583E  006F FF8F FFF7     	movff	plusw1,tblptrh
 11183  015844  0E00               	movlw	low (__mediumconst shr (0+16))
 11184  015846  6EF8               	movwf	tblptru,c
 11185  015848  0E1F               	movlw	(high __ramtop+-1)
 11186  01584A  64F7               	cpfsgt	tblptrh,c
 11187  01584C  D003               	bra	u10187
 11188  01584E  0008               	tblrd		*
 11189  015850  50F5               	movf	tablat,w,c
 11190  015852  D007               	bra	u10180
 11191  015854                     u10187:
 11192  015854  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11193  01585A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11194  015860  50EF               	movf	indf0,w,c
 11195  015862                     u10180:
 11196  015862  6EE6               	movwf	postinc1,c
 11197  015864  0E00               	movlw	0
 11198  015866  6EE6               	movwf	postinc1,c
 11199  015868  EC1C  F0B8         	call	_fputc	;wreg free
 11200                           
 11201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11202                           ;stkvar	_cp @ sp[(-17)+11]
 11203  01586C  0EFA               	movlw	-6
 11204  01586E  50E3               	movf	plusw1,w,c
 11205  015870  0F01               	addlw	1
 11206  015872  6E25               	movwf	btemp^0,c
 11207  015874  0EFA               	movlw	-6
 11208  015876  0060  F097  FFE3   	movff	btemp,plusw1
 11209  01587C  6A25               	clrf	btemp^0,c
 11210  01587E  0EFB               	movlw	-5
 11211  015880  50E3               	movf	plusw1,w,c
 11212  015882  2025               	addwfc	btemp^0,w,c
 11213  015884  6E25               	movwf	btemp^0,c
 11214  015886  0EFB               	movlw	-5
 11215  015888  0060  F097  FFE3   	movff	btemp,plusw1
 11216                           
 11217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11218                           ;stkvar	_i @ sp[(-17)+15]
 11219  01588E  0EFE               	movlw	-2
 11220  015890  50E3               	movf	plusw1,w,c
 11221  015892  0F01               	addlw	1
 11222  015894  6E25               	movwf	btemp^0,c
 11223  015896  0EFE               	movlw	-2
 11224  015898  0060  F097  FFE3   	movff	btemp,plusw1
 11225  01589E  6A25               	clrf	btemp^0,c
 11226  0158A0  0EFF               	movlw	-1
 11227  0158A2  50E3               	movf	plusw1,w,c
 11228  0158A4  2025               	addwfc	btemp^0,w,c
 11229  0158A6  6E25               	movwf	btemp^0,c
 11230  0158A8  0EFF               	movlw	-1
 11231  0158AA  0060  F097  FFE3   	movff	btemp,plusw1
 11232  0158B0                     l10540:
 11233                           
 11234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11235                           ;stkvar	_p @ sp[(-17)+9]
 11236                           ;stkvar	_i @ sp[(-17)+15]
 11237  0158B0  50E1               	movf	fsr1l,w,c
 11238  0158B2  0FFE               	addlw	-2
 11239  0158B4  6ED9               	movwf	fsr2l,c
 11240  0158B6  50E2               	movf	fsr1h,w,c
 11241  0158B8  6EDA               	movwf	fsr2h,c
 11242  0158BA  0EFF               	movlw	255
 11243  0158BC  22DA               	addwfc	fsr2h,f,c
 11244  0158BE  0EF8               	movlw	-8
 11245  0158C0  50E3               	movf	plusw1,w,c
 11246  0158C2  5CDE               	subwf	postinc2,w,c
 11247  0158C4  50DE               	movf	postinc2,w,c
 11248  0158C6  0A80               	xorlw	128
 11249  0158C8  6E25               	movwf	btemp^0,c
 11250  0158CA  0EF9               	movlw	-7
 11251  0158CC  50E3               	movf	plusw1,w,c
 11252  0158CE  0A80               	xorlw	128
 11253  0158D0  5825               	subwfb	btemp^0,w,c
 11254  0158D2  A0D8               	btfss	status,0,c
 11255  0158D4  D7A8               	goto	l10534
 11256                           
 11257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11258  0158D6  B00E               	btfsc	_flags^0,0,c
 11259  0158D8  D01F               	goto	l10548
 11260  0158DA  D031               	goto	u10210
 11261  0158DC                     l10544:
 11262                           
 11263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11264                           ;stkvar	_fp @ sp[(-17)+-2]
 11265  0158DC  0EED               	movlw	-19
 11266  0158DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11267  0158E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11268  0158EA  0E20               	movlw	32
 11269  0158EC  6EE6               	movwf	postinc1,c
 11270  0158EE  0E00               	movlw	0
 11271  0158F0  6EE6               	movwf	postinc1,c
 11272  0158F2  EC1C  F0B8         	call	_fputc	;wreg free
 11273                           
 11274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11275                           ;stkvar	_l @ sp[(-17)+7]
 11276  0158F6  0EF6               	movlw	-10
 11277  0158F8  50E3               	movf	plusw1,w,c
 11278  0158FA  0F01               	addlw	1
 11279  0158FC  6E25               	movwf	btemp^0,c
 11280  0158FE  0EF6               	movlw	-10
 11281  015900  0060  F097  FFE3   	movff	btemp,plusw1
 11282  015906  6A25               	clrf	btemp^0,c
 11283  015908  0EF7               	movlw	-9
 11284  01590A  50E3               	movf	plusw1,w,c
 11285  01590C  2025               	addwfc	btemp^0,w,c
 11286  01590E  6E25               	movwf	btemp^0,c
 11287  015910  0EF7               	movlw	-9
 11288  015912  0060  F097  FFE3   	movff	btemp,plusw1
 11289  015918                     l10548:
 11290                           
 11291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11292                           ;stkvar	_w @ sp[(-17)+13]
 11293                           ;stkvar	_l @ sp[(-17)+7]
 11294  015918  50E1               	movf	fsr1l,w,c
 11295  01591A  0FF6               	addlw	-10
 11296  01591C  6ED9               	movwf	fsr2l,c
 11297  01591E  50E2               	movf	fsr1h,w,c
 11298  015920  6EDA               	movwf	fsr2h,c
 11299  015922  0EFF               	movlw	255
 11300  015924  22DA               	addwfc	fsr2h,f,c
 11301  015926  0EFC               	movlw	-4
 11302  015928  50E3               	movf	plusw1,w,c
 11303  01592A  5CDE               	subwf	postinc2,w,c
 11304  01592C  50DE               	movf	postinc2,w,c
 11305  01592E  0A80               	xorlw	128
 11306  015930  6E25               	movwf	btemp^0,c
 11307  015932  0EFD               	movlw	-3
 11308  015934  50E3               	movf	plusw1,w,c
 11309  015936  0A80               	xorlw	128
 11310  015938  5825               	subwfb	btemp^0,w,c
 11311  01593A  A0D8               	btfss	status,0,c
 11312  01593C  D7CF               	goto	l10544
 11313  01593E                     u10210:
 11314                           
 11315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11316                           ;stkvar	_l @ sp[(-17)+7]
 11317  01593E  0EF6               	movlw	-10
 11318  015940  006F FF8C  F025    	movff	plusw1,btemp
 11319  015946  0EF7               	movlw	-9
 11320  015948  006F FF8C  F026    	movff	plusw1,btemp+1
 11321                           
 11322                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11323  01594E  0EEB               	movlw	235
 11324  015950  26E1               	addwf	fsr1l,f,c
 11325  015952  0EFF               	movlw	255
 11326  015954  22E2               	addwfc	fsr1h,f,c
 11327  015956  0012               	return		;funcret
 11328  015958                     __end_of_stoa:
 11329                           	opt callstack 0
 11330                           
 11331 ;; *************** function _efgtoa *****************
 11332 ;; Defined at:
 11333 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11336 ;;		 -> f(6), NULL(0), 
 11337 ;;  f               4  [STACK] PTR struct _IO_FILE
 11338 ;;  c               1  [STACK] unsigned char 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  u               4  [STACK] unsigned char 
 11341 ;;  g               4  [STACK] unsigned char 
 11342 ;;  l               4  [STACK] unsigned char 
 11343 ;;  h               4  [STACK] unsigned char 
 11344 ;;  ou              4  [STACK] unsigned char 
 11345 ;;  n               2  [STACK] int 
 11346 ;;  e               2  [STACK] int 
 11347 ;;  i               2  [STACK] int 
 11348 ;;  w               2  [STACK] int 
 11349 ;;  p               2  [STACK] int 
 11350 ;;  sign            2  [STACK] int 
 11351 ;;  d               2  [STACK] int 
 11352 ;;  ne              2  [STACK] int 
 11353 ;;  m               2  [STACK] int 
 11354 ;;  pp              2  [STACK] int 
 11355 ;;  t               2  [STACK] int 
 11356 ;;  mode            1  [STACK] unsigned char 
 11357 ;;  nmode           1  [STACK] unsigned char 
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  2  [STACK] int 
 11360 ;; Registers used:
 11361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11371 ;;Total ram usage:        0 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:   12
 11374 ;; This function calls:
 11375 ;;		___awdiv
 11376 ;;		___awmod
 11377 ;;		___fladd
 11378 ;;		___fldiv
 11379 ;;		___fleq
 11380 ;;		___flge
 11381 ;;		___flmul
 11382 ;;		___flneg
 11383 ;;		___flsub
 11384 ;;		___fltol
 11385 ;;		___fpclassifyf
 11386 ;;		_floorf
 11387 ;;		_isupper
 11388 ;;		_pad
 11389 ;;		_strcpy
 11390 ;;		_tolower
 11391 ;; This function is called by:
 11392 ;;		_vfpfcnvrt
 11393 ;; This function uses a reentrant model
 11394 ;;
 11395                           
 11396                           	psect	text48
 11397  010000                     __ptext48:
 11398                           	opt callstack 0
 11399  010000                     _efgtoa:
 11400                           	opt callstack 0
 11401                           
 11402                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11403  010000  0E38               	movlw	56
 11404  010002  26E1               	addwf	fsr1l,f,c
 11405  010004  0E00               	movlw	0
 11406  010006  22E2               	addwfc	fsr1h,f,c
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11409                           ;stkvar	_sign @ sp[(-56)+42]
 11410                           
 11411                           ;incstack = 0
 11412  010008  0EF2               	movlw	-14
 11413  01000A  6AE3               	clrf	plusw1,c
 11414  01000C  0EF3               	movlw	-13
 11415  01000E  6AE3               	clrf	plusw1,c
 11416                           
 11417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11418                           ;stkvar	_f @ sp[(-56)+-6]
 11419  010010  0EC2               	movlw	-62
 11420  010012  006F FF8C  F02D    	movff	plusw1,btemp+8
 11421  010018  0EC3               	movlw	-61
 11422  01001A  006F FF8C  F02E    	movff	plusw1,btemp+9
 11423  010020  0EC4               	movlw	-60
 11424  010022  006F FF8C  F02F    	movff	plusw1,btemp+10
 11425  010028  0EC5               	movlw	-59
 11426  01002A  006F FF8C  F030    	movff	plusw1,btemp+11
 11427                           
 11428                           ;stkvar	_g @ sp[(-56)+16]
 11429  010030  0ED8               	movlw	-40
 11430  010032  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11431  010038  0ED9               	movlw	-39
 11432  01003A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11433  010040  0EDA               	movlw	-38
 11434  010042  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11435  010048  0EDB               	movlw	-37
 11436  01004A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11437                           
 11438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11439                           ;stkvar	_g @ sp[(-56)+16]
 11440  010050  0EDB               	movlw	-37
 11441  010052  AEE3               	btfss	plusw1,7,c
 11442  010054  D02B               	goto	l10208
 11443                           
 11444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11445  010056  0E01               	movlw	1
 11446  010058  6E2F               	movwf	(btemp+10)^0,c
 11447  01005A  0E00               	movlw	0
 11448  01005C  6E30               	movwf	(btemp+11)^0,c
 11449                           
 11450                           ;stkvar	_sign @ sp[(-56)+42]
 11451  01005E  0EF2               	movlw	-14
 11452  010060  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11453  010066  0EF3               	movlw	-13
 11454  010068  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11455                           
 11456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11457                           ;stkvar	_g @ sp[(-56)+16]
 11458  01006E  0ED8               	movlw	-40
 11459  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11460  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11461  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11462  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11463  010088  ECF7  F0C4         	call	___flneg	;wreg free
 11464                           
 11465                           ;stkvar	_g @ sp[(-56)+16]
 11466  01008C  0ED8               	movlw	-40
 11467  01008E  0060  F097  FFE3   	movff	btemp,plusw1
 11468  010094  0ED9               	movlw	-39
 11469  010096  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11470  01009C  0EDA               	movlw	-38
 11471  01009E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11472  0100A4  0EDB               	movlw	-37
 11473  0100A6  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11474  0100AC                     l10208:
 11475                           
 11476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11477                           ;stkvar	_n @ sp[(-56)+32]
 11478  0100AC  0EE8               	movlw	-24
 11479  0100AE  6AE3               	clrf	plusw1,c
 11480  0100B0  0EE9               	movlw	-23
 11481  0100B2  6AE3               	clrf	plusw1,c
 11482                           
 11483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11484                           ;stkvar	_w @ sp[(-56)+38]
 11485  0100B4  0EEE               	movlw	-18
 11486  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 11487  0100BC  0EEF               	movlw	-17
 11488  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11489                           
 11490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11491                           ;stkvar	_sign @ sp[(-56)+42]
 11492  0100C4  0EF2               	movlw	-14
 11493  0100C6  006F FF8C  F025    	movff	plusw1,btemp
 11494  0100CC  0EF3               	movlw	-13
 11495  0100CE  50E3               	movf	plusw1,w,c
 11496  0100D0  1025               	iorwf	btemp^0,w,c
 11497  0100D2  A4D8               	btfss	status,2,c
 11498  0100D4  D002               	goto	u9620
 11499  0100D6  A40E               	btfss	_flags^0,2,c
 11500  0100D8  D036               	goto	l10228
 11501  0100DA                     u9620:
 11502                           
 11503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11504                           ;stkvar	_sign @ sp[(-56)+42]
 11505  0100DA  0EF2               	movlw	-14
 11506  0100DC  006F FF8C  F025    	movff	plusw1,btemp
 11507  0100E2  0EF3               	movlw	-13
 11508  0100E4  50E3               	movf	plusw1,w,c
 11509  0100E6  1025               	iorwf	btemp^0,w,c
 11510  0100E8  A4D8               	btfss	status,2,c
 11511  0100EA  D002               	goto	l10220
 11512  0100EC  0E2B               	movlw	43
 11513  0100EE  D001               	goto	L9
 11514  0100F0                     l10220:
 11515  0100F0  0E2D               	movlw	45
 11516  0100F2                     L9:
 11517  0100F2  6E2F               	movwf	(btemp+10)^0,c
 11518  0100F4  0E00               	movlw	0
 11519  0100F6  6E30               	movwf	(btemp+11)^0,c
 11520                           
 11521                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11522  0100F8  0ED2               	movlw	-46
 11523  0100FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11524  010100  0ED3               	movlw	-45
 11525  010102  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11526                           
 11527                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11528  010108  0ED2               	movlw	-46
 11529  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11530                           
 11531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11532                           ;stkvar	_n @ sp[(-56)+32]
 11533  010110  0EE8               	movlw	-24
 11534  010112  50E3               	movf	plusw1,w,c
 11535  010114  0F01               	addlw	1
 11536  010116  6E25               	movwf	btemp^0,c
 11537  010118  0EE8               	movlw	-24
 11538  01011A  0060  F097  FFE3   	movff	btemp,plusw1
 11539  010120  6A25               	clrf	btemp^0,c
 11540  010122  0EE9               	movlw	-23
 11541  010124  50E3               	movf	plusw1,w,c
 11542  010126  2025               	addwfc	btemp^0,w,c
 11543  010128  6E25               	movwf	btemp^0,c
 11544  01012A  0EE9               	movlw	-23
 11545  01012C  0060  F097  FFE3   	movff	btemp,plusw1
 11546                           
 11547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11548                           ;stkvar	_w @ sp[(-56)+38]
 11549  010132  50E1               	movf	fsr1l,w,c
 11550  010134  0FEE               	addlw	-18
 11551  010136  6ED9               	movwf	fsr2l,c
 11552  010138  50E2               	movf	fsr1h,w,c
 11553  01013A  6EDA               	movwf	fsr2h,c
 11554  01013C  0EFF               	movlw	255
 11555  01013E  22DA               	addwfc	fsr2h,f,c
 11556  010140  06DE               	decf	postinc2,f,c
 11557  010142  0E00               	movlw	0
 11558  010144  5ADD               	subwfb	postdec2,f,c
 11559  010146                     l10228:
 11560                           
 11561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11562                           ;stkvar	_g @ sp[(-56)+16]
 11563  010146  0ED8               	movlw	-40
 11564  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11565  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11566  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11567  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11568  010160  EC15  F0B4         	call	___fpclassifyf	;wreg free
 11569  010164  0425               	decf	btemp^0,w,c
 11570  010166  1026               	iorwf	(btemp+1)^0,w,c
 11571  010168  A4D8               	btfss	status,2,c
 11572  01016A  D076               	goto	l10246
 11573  01016C  0EBF               	movlw	191
 11574  01016E  6E2F               	movwf	(btemp+10)^0,c
 11575  010170  0EFF               	movlw	255
 11576  010172  6E30               	movwf	(btemp+11)^0,c
 11577                           
 11578                           ;stkvar	_c @ sp[(-56)+-7]
 11579  010174  0EC1               	movlw	-63
 11580  010176  50E3               	movf	plusw1,w,c
 11581  010178  6E2D               	movwf	(btemp+8)^0,c
 11582  01017A  6A2E               	clrf	(btemp+9)^0,c
 11583  01017C  502F               	movf	(btemp+10)^0,w,c
 11584  01017E  262D               	addwf	(btemp+8)^0,f,c
 11585  010180  5030               	movf	(btemp+11)^0,w,c
 11586  010182  222E               	addwfc	(btemp+9)^0,f,c
 11587  010184  502E               	movf	(btemp+9)^0,w,c
 11588  010186  E106               	bnz	u9650
 11589  010188  0E1A               	movlw	26
 11590  01018A  5C2D               	subwf	(btemp+8)^0,w,c
 11591  01018C  B0D8               	btfsc	status,0,c
 11592  01018E  D002               	goto	u9650
 11593  010190  0E01               	movlw	1
 11594  010192  D001               	goto	u9660
 11595  010194                     u9650:
 11596  010194  0E00               	movlw	0
 11597  010196                     u9660:
 11598  010196  6E2F               	movwf	(btemp+10)^0,c
 11599  010198  6A30               	clrf	(btemp+11)^0,c
 11600                           
 11601                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11602  01019A  0ED0               	movlw	-48
 11603  01019C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11604  0101A2  0ED1               	movlw	-47
 11605  0101A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11606                           
 11607                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11608  0101AA  0ED0               	movlw	-48
 11609  0101AC  006F FF8C  F025    	movff	plusw1,btemp
 11610  0101B2  0ED1               	movlw	-47
 11611  0101B4  50E3               	movf	plusw1,w,c
 11612  0101B6  1025               	iorwf	btemp^0,w,c
 11613  0101B8  B4D8               	btfsc	status,2,c
 11614  0101BA  D017               	goto	l10238
 11615                           
 11616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11617  0101BC  0EE6               	movlw	low STR_46
 11618  0101BE  6EE6               	movwf	postinc1,c
 11619  0101C0  0EFF               	movlw	high STR_46
 11620  0101C2  6EE6               	movwf	postinc1,c
 11621                           
 11622                           ;stkvar	_n @ sp[(-58)+32]
 11623  0101C4  0E94               	movlw	low _dbuf
 11624  0101C6  6E2F               	movwf	(btemp+10)^0,c
 11625  0101C8  0E03               	movlw	high _dbuf
 11626  0101CA  6E30               	movwf	(btemp+11)^0,c
 11627  0101CC  0EE6               	movlw	-26
 11628  0101CE  50E3               	movf	plusw1,w,c
 11629  0101D0  262F               	addwf	(btemp+10)^0,f,c
 11630  0101D2  0EE7               	movlw	-25
 11631  0101D4  50E3               	movf	plusw1,w,c
 11632  0101D6  2230               	addwfc	(btemp+11)^0,f,c
 11633  0101D8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11634  0101DE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11635  0101E4  EC45  F0BC         	call	_strcpy	;wreg free
 11636                           
 11637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11638  0101E8  D016               	goto	l10240
 11639  0101EA                     l10238:
 11640                           
 11641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11642  0101EA  0EEE               	movlw	low STR_47
 11643  0101EC  6EE6               	movwf	postinc1,c
 11644  0101EE  0EFF               	movlw	high STR_47
 11645  0101F0  6EE6               	movwf	postinc1,c
 11646                           
 11647                           ;stkvar	_n @ sp[(-58)+32]
 11648  0101F2  0E94               	movlw	low _dbuf
 11649  0101F4  6E2F               	movwf	(btemp+10)^0,c
 11650  0101F6  0E03               	movlw	high _dbuf
 11651  0101F8  6E30               	movwf	(btemp+11)^0,c
 11652  0101FA  0EE6               	movlw	-26
 11653  0101FC  50E3               	movf	plusw1,w,c
 11654  0101FE  262F               	addwf	(btemp+10)^0,f,c
 11655  010200  0EE7               	movlw	-25
 11656  010202  50E3               	movf	plusw1,w,c
 11657  010204  2230               	addwfc	(btemp+11)^0,f,c
 11658  010206  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11659  01020C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11660  010212  EC45  F0BC         	call	_strcpy	;wreg free
 11661  010216                     l10240:
 11662                           
 11663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11664                           ;stkvar	_w @ sp[(-56)+38]
 11665  010216  50E1               	movf	fsr1l,w,c
 11666  010218  0FEE               	addlw	-18
 11667  01021A  6ED9               	movwf	fsr2l,c
 11668  01021C  50E2               	movf	fsr1h,w,c
 11669  01021E  6EDA               	movwf	fsr2h,c
 11670  010220  0EFF               	movlw	255
 11671  010222  22DA               	addwfc	fsr2h,f,c
 11672  010224  0EFD               	movlw	253
 11673  010226  26DE               	addwf	postinc2,f,c
 11674  010228  0EFF               	movlw	255
 11675  01022A  22DD               	addwfc	postdec2,f,c
 11676  01022C                     l10242:
 11677                           
 11678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11679                           ;stkvar	_w @ sp[(-56)+38]
 11680  01022C  0EEE               	movlw	-18
 11681  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11682  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11683  01023A  0E94               	movlw	low _dbuf
 11684  01023C  6EE6               	movwf	postinc1,c
 11685  01023E  0E03               	movlw	high _dbuf
 11686  010240  6EE6               	movwf	postinc1,c
 11687                           
 11688                           ;stkvar	_fp @ sp[(-60)+-2]
 11689  010242  0EC2               	movlw	-62
 11690  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11691  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11692  010250  EC3A  F0B9         	call	_pad	;wreg free
 11693  010254  EF1D  F089         	goto	l2049
 11694  010258                     l10246:
 11695                           
 11696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11697                           ;stkvar	_g @ sp[(-56)+16]
 11698  010258  0ED8               	movlw	-40
 11699  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11700  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11701  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11702  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11703  010272  EC15  F0B4         	call	___fpclassifyf	;wreg free
 11704  010276  5025               	movf	btemp^0,w,c
 11705  010278  1026               	iorwf	(btemp+1)^0,w,c
 11706  01027A  A4D8               	btfss	status,2,c
 11707  01027C  D056               	goto	l10264
 11708  01027E  0EBF               	movlw	191
 11709  010280  6E2F               	movwf	(btemp+10)^0,c
 11710  010282  0EFF               	movlw	255
 11711  010284  6E30               	movwf	(btemp+11)^0,c
 11712                           
 11713                           ;stkvar	_c @ sp[(-56)+-7]
 11714  010286  0EC1               	movlw	-63
 11715  010288  50E3               	movf	plusw1,w,c
 11716  01028A  6E2D               	movwf	(btemp+8)^0,c
 11717  01028C  6A2E               	clrf	(btemp+9)^0,c
 11718  01028E  502F               	movf	(btemp+10)^0,w,c
 11719  010290  262D               	addwf	(btemp+8)^0,f,c
 11720  010292  5030               	movf	(btemp+11)^0,w,c
 11721  010294  222E               	addwfc	(btemp+9)^0,f,c
 11722  010296  502E               	movf	(btemp+9)^0,w,c
 11723  010298  E106               	bnz	u9690
 11724  01029A  0E1A               	movlw	26
 11725  01029C  5C2D               	subwf	(btemp+8)^0,w,c
 11726  01029E  B0D8               	btfsc	status,0,c
 11727  0102A0  D002               	goto	u9690
 11728  0102A2  0E01               	movlw	1
 11729  0102A4  D001               	goto	u9700
 11730  0102A6                     u9690:
 11731  0102A6  0E00               	movlw	0
 11732  0102A8                     u9700:
 11733  0102A8  6E2F               	movwf	(btemp+10)^0,c
 11734  0102AA  6A30               	clrf	(btemp+11)^0,c
 11735                           
 11736                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11737  0102AC  0ECE               	movlw	-50
 11738  0102AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11739  0102B4  0ECF               	movlw	-49
 11740  0102B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11741                           
 11742                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11743  0102BC  0ECE               	movlw	-50
 11744  0102BE  006F FF8C  F025    	movff	plusw1,btemp
 11745  0102C4  0ECF               	movlw	-49
 11746  0102C6  50E3               	movf	plusw1,w,c
 11747  0102C8  1025               	iorwf	btemp^0,w,c
 11748  0102CA  B4D8               	btfsc	status,2,c
 11749  0102CC  D017               	goto	l10256
 11750                           
 11751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11752  0102CE  0EEA               	movlw	low STR_50
 11753  0102D0  6EE6               	movwf	postinc1,c
 11754  0102D2  0EFF               	movlw	high STR_50
 11755  0102D4  6EE6               	movwf	postinc1,c
 11756                           
 11757                           ;stkvar	_n @ sp[(-58)+32]
 11758  0102D6  0E94               	movlw	low _dbuf
 11759  0102D8  6E2F               	movwf	(btemp+10)^0,c
 11760  0102DA  0E03               	movlw	high _dbuf
 11761  0102DC  6E30               	movwf	(btemp+11)^0,c
 11762  0102DE  0EE6               	movlw	-26
 11763  0102E0  50E3               	movf	plusw1,w,c
 11764  0102E2  262F               	addwf	(btemp+10)^0,f,c
 11765  0102E4  0EE7               	movlw	-25
 11766  0102E6  50E3               	movf	plusw1,w,c
 11767  0102E8  2230               	addwfc	(btemp+11)^0,f,c
 11768  0102EA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11769  0102F0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11770  0102F6  EC45  F0BC         	call	_strcpy	;wreg free
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11773  0102FA  D78D               	goto	l10240
 11774  0102FC                     l10256:
 11775                           
 11776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11777  0102FC  0EF2               	movlw	low STR_51
 11778  0102FE  6EE6               	movwf	postinc1,c
 11779  010300  0EFF               	movlw	high STR_51
 11780  010302  6EE6               	movwf	postinc1,c
 11781                           
 11782                           ;stkvar	_n @ sp[(-58)+32]
 11783  010304  0E94               	movlw	low _dbuf
 11784  010306  6E2F               	movwf	(btemp+10)^0,c
 11785  010308  0E03               	movlw	high _dbuf
 11786  01030A  6E30               	movwf	(btemp+11)^0,c
 11787  01030C  0EE6               	movlw	-26
 11788  01030E  50E3               	movf	plusw1,w,c
 11789  010310  262F               	addwf	(btemp+10)^0,f,c
 11790  010312  0EE7               	movlw	-25
 11791  010314  50E3               	movf	plusw1,w,c
 11792  010316  2230               	addwfc	(btemp+11)^0,f,c
 11793  010318  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11794  01031E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11795  010324  EC45  F0BC         	call	_strcpy	;wreg free
 11796  010328  D776               	goto	l10240
 11797  01032A                     l10264:
 11798                           
 11799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11800  01032A  0E00               	movlw	0
 11801  01032C  6E2D               	movwf	(btemp+8)^0,c
 11802  01032E  0E00               	movlw	0
 11803  010330  6E2E               	movwf	(btemp+9)^0,c
 11804  010332  0E80               	movlw	128
 11805  010334  6E2F               	movwf	(btemp+10)^0,c
 11806  010336  0E3F               	movlw	63
 11807  010338  6E30               	movwf	(btemp+11)^0,c
 11808                           
 11809                           ;stkvar	_u @ sp[(-56)+12]
 11810  01033A  0ED4               	movlw	-44
 11811  01033C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11812  010342  0ED5               	movlw	-43
 11813  010344  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11814  01034A  0ED6               	movlw	-42
 11815  01034C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11816  010352  0ED7               	movlw	-41
 11817  010354  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11818                           
 11819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11820                           ;stkvar	_e @ sp[(-56)+34]
 11821  01035A  0EEA               	movlw	-22
 11822  01035C  6AE3               	clrf	plusw1,c
 11823  01035E  0EEB               	movlw	-21
 11824  010360  6AE3               	clrf	plusw1,c
 11825                           
 11826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11827  010362  0E00               	movlw	0
 11828  010364  6EE6               	movwf	postinc1,c
 11829  010366  0E00               	movlw	0
 11830  010368  6EE6               	movwf	postinc1,c
 11831  01036A  0E00               	movlw	0
 11832  01036C  6EE6               	movwf	postinc1,c
 11833  01036E  0E00               	movlw	0
 11834  010370  6EE6               	movwf	postinc1,c
 11835                           
 11836                           ;stkvar	_g @ sp[(-60)+16]
 11837  010372  0ED4               	movlw	-44
 11838  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11839  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11840  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11841  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11842  01038C  EC17  F0BD         	call	___fleq	;wreg free
 11843  010390  A025               	btfss	btemp& (0+255),0,c
 11844  010392  D039               	goto	l10276
 11845  010394  D0BC               	goto	u9740
 11846  010396                     l10272:
 11847                           
 11848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11849  010396  0E00               	movlw	0
 11850  010398  6EE6               	movwf	postinc1,c
 11851  01039A  0E00               	movlw	0
 11852  01039C  6EE6               	movwf	postinc1,c
 11853  01039E  0E20               	movlw	32
 11854  0103A0  6EE6               	movwf	postinc1,c
 11855  0103A2  0E41               	movlw	65
 11856  0103A4  6EE6               	movwf	postinc1,c
 11857                           
 11858                           ;stkvar	_u @ sp[(-60)+12]
 11859  0103A6  0ED0               	movlw	-48
 11860  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11861  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11862  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11863  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11864  0103C0  EC14  F093         	call	___flmul	;wreg free
 11865                           
 11866                           ;stkvar	_u @ sp[(-56)+12]
 11867  0103C4  0ED4               	movlw	-44
 11868  0103C6  0060  F097  FFE3   	movff	btemp,plusw1
 11869  0103CC  0ED5               	movlw	-43
 11870  0103CE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11871  0103D4  0ED6               	movlw	-42
 11872  0103D6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11873  0103DC  0ED7               	movlw	-41
 11874  0103DE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11875                           
 11876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11877                           ;stkvar	_e @ sp[(-56)+34]
 11878  0103E4  0EEA               	movlw	-22
 11879  0103E6  50E3               	movf	plusw1,w,c
 11880  0103E8  0F01               	addlw	1
 11881  0103EA  6E25               	movwf	btemp^0,c
 11882  0103EC  0EEA               	movlw	-22
 11883  0103EE  0060  F097  FFE3   	movff	btemp,plusw1
 11884  0103F4  6A25               	clrf	btemp^0,c
 11885  0103F6  0EEB               	movlw	-21
 11886  0103F8  50E3               	movf	plusw1,w,c
 11887  0103FA  2025               	addwfc	btemp^0,w,c
 11888  0103FC  6E25               	movwf	btemp^0,c
 11889  0103FE  0EEB               	movlw	-21
 11890  010400  0060  F097  FFE3   	movff	btemp,plusw1
 11891  010406                     l10276:
 11892                           
 11893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11894  010406  0E00               	movlw	0
 11895  010408  6EE6               	movwf	postinc1,c
 11896  01040A  0E00               	movlw	0
 11897  01040C  6EE6               	movwf	postinc1,c
 11898  01040E  0E20               	movlw	32
 11899  010410  6EE6               	movwf	postinc1,c
 11900  010412  0E41               	movlw	65
 11901  010414  6EE6               	movwf	postinc1,c
 11902                           
 11903                           ;stkvar	_u @ sp[(-60)+12]
 11904  010416  0ED0               	movlw	-48
 11905  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11906  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11907  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11908  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11909  010430  EC14  F093         	call	___flmul	;wreg free
 11910  010434  0060  F097  FFE6   	movff	btemp,postinc1
 11911  01043A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 11912  010440  0060  F09F  FFE6   	movff	btemp+2,postinc1
 11913  010446  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 11914                           
 11915                           ;stkvar	_g @ sp[(-60)+16]
 11916  01044C  0ED4               	movlw	-44
 11917  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11919  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11920  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11921  010466  EC99  F0B5         	call	___flge	;wreg free
 11922  01046A  A025               	btfss	btemp& (0+255),0,c
 11923  01046C  D032               	goto	l10282
 11924  01046E  D793               	goto	l10272
 11925  010470                     l10278:
 11926                           
 11927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11928  010470  0E00               	movlw	0
 11929  010472  6EE6               	movwf	postinc1,c
 11930  010474  0E00               	movlw	0
 11931  010476  6EE6               	movwf	postinc1,c
 11932  010478  0E20               	movlw	32
 11933  01047A  6EE6               	movwf	postinc1,c
 11934  01047C  0E41               	movlw	65
 11935  01047E  6EE6               	movwf	postinc1,c
 11936                           
 11937                           ;stkvar	_u @ sp[(-60)+12]
 11938  010480  0ED0               	movlw	-48
 11939  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11940  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11941  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11942  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11943  01049A  EC07  F09B         	call	___fldiv	;wreg free
 11944                           
 11945                           ;stkvar	_u @ sp[(-56)+12]
 11946  01049E  0ED4               	movlw	-44
 11947  0104A0  0060  F097  FFE3   	movff	btemp,plusw1
 11948  0104A6  0ED5               	movlw	-43
 11949  0104A8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11950  0104AE  0ED6               	movlw	-42
 11951  0104B0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11952  0104B6  0ED7               	movlw	-41
 11953  0104B8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11954                           
 11955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11956                           ;stkvar	_e @ sp[(-56)+34]
 11957  0104BE  50E1               	movf	fsr1l,w,c
 11958  0104C0  0FEA               	addlw	-22
 11959  0104C2  6ED9               	movwf	fsr2l,c
 11960  0104C4  50E2               	movf	fsr1h,w,c
 11961  0104C6  6EDA               	movwf	fsr2h,c
 11962  0104C8  0EFF               	movlw	255
 11963  0104CA  22DA               	addwfc	fsr2h,f,c
 11964  0104CC  06DE               	decf	postinc2,f,c
 11965  0104CE  0E00               	movlw	0
 11966  0104D0  5ADD               	subwfb	postdec2,f,c
 11967  0104D2                     l10282:
 11968                           
 11969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11970                           ;stkvar	_u @ sp[(-56)+12]
 11971  0104D2  0ED4               	movlw	-44
 11972  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11973  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11974  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11975  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11976                           
 11977                           ;stkvar	_g @ sp[(-60)+16]
 11978  0104EC  0ED4               	movlw	-44
 11979  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11980  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11981  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11982  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11983  010506  EC99  F0B5         	call	___flge	;wreg free
 11984  01050A  A025               	btfss	btemp& (0+255),0,c
 11985  01050C  D7B1               	goto	l10278
 11986  01050E                     u9740:
 11987                           
 11988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11989                           ;stkvar	_c @ sp[(-56)+-7]
 11990  01050E  0EC1               	movlw	-63
 11991  010510  50E3               	movf	plusw1,w,c
 11992  010512  6EE6               	movwf	postinc1,c
 11993  010514  0E00               	movlw	0
 11994  010516  6EE6               	movwf	postinc1,c
 11995  010518  EC89  F0C1         	call	_tolower	;wreg free
 11996                           
 11997                           ;stkvar	_mode @ sp[(-56)+54]
 11998  01051C  0EFE               	movlw	-2
 11999  01051E  0060  F097  FFE3   	movff	btemp,plusw1
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 12002                           ;stkvar	_mode @ sp[(-56)+54]
 12003                           ;stkvar	_nmode @ sp[(-56)+55]
 12004  010524  0EFE               	movlw	-2
 12005  010526  006F FF8C  F025    	movff	plusw1,btemp
 12006  01052C  0EFF               	movlw	-1
 12007  01052E  0060  F097  FFE3   	movff	btemp,plusw1
 12008                           
 12009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 12010                           ;stkvar	_mode @ sp[(-56)+54]
 12011  010534  0EFE               	movlw	-2
 12012  010536  006F FF8C  F025    	movff	plusw1,btemp
 12013  01053C  0E67               	movlw	103
 12014  01053E  1825               	xorwf	btemp^0,w,c
 12015  010540  A4D8               	btfss	status,2,c
 12016  010542  D025               	goto	l10300
 12017                           
 12018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 12019  010544  500C               	movf	_prec^0,w,c
 12020  010546  100D               	iorwf	(_prec+1)^0,w,c
 12021  010548  A4D8               	btfss	status,2,c
 12022  01054A  D004               	goto	l10294
 12023                           
 12024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12025  01054C  0E00               	movlw	0
 12026  01054E  6E0D               	movwf	(_prec+1)^0,c
 12027  010550  0E01               	movlw	1
 12028  010552  6E0C               	movwf	_prec^0,c
 12029  010554                     l10294:
 12030                           
 12031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12032  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 12033  010556  D005               	goto	u9770
 12034  010558  500D               	movf	(_prec+1)^0,w,c
 12035  01055A  E110               	bnz	l10298
 12036  01055C  040C               	decf	_prec^0,w,c
 12037  01055E  B0D8               	btfsc	status,0,c
 12038  010560  D00D               	goto	l10298
 12039  010562                     u9770:
 12040  010562  0E06               	movlw	6
 12041  010564  6E2F               	movwf	(btemp+10)^0,c
 12042  010566  0E00               	movlw	0
 12043  010568  6E30               	movwf	(btemp+11)^0,c
 12044                           
 12045                           ;stkvar	_p @ sp[(-56)+40]
 12046  01056A  0EF0               	movlw	-16
 12047  01056C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12048  010572  0EF1               	movlw	-15
 12049  010574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12050  01057A  D00C               	goto	l10306
 12051  01057C                     l10298:
 12052                           
 12053                           ;stkvar	_p @ sp[(-56)+40]
 12054  01057C  0EF0               	movlw	-16
 12055  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 12056  010584  0EF1               	movlw	-15
 12057  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 12058  01058C  D003               	goto	l10306
 12059  01058E                     l10300:
 12060                           
 12061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12062  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 12063  010590  D7F5               	goto	l10298
 12064  010592  D7E7               	goto	u9770
 12065  010594                     l10306:
 12066                           
 12067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12068                           ;stkvar	_mode @ sp[(-56)+54]
 12069  010594  0EFE               	movlw	-2
 12070  010596  006F FF8C  F025    	movff	plusw1,btemp
 12071  01059C  0E67               	movlw	103
 12072  01059E  1825               	xorwf	btemp^0,w,c
 12073  0105A0  A4D8               	btfss	status,2,c
 12074  0105A2  D02F               	goto	l10316
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12077                           ;stkvar	_e @ sp[(-56)+34]
 12078  0105A4  0EEB               	movlw	-21
 12079  0105A6  AEE3               	btfss	plusw1,7,c
 12080  0105A8  D00E               	goto	u9800
 12081  0105AA  0EEA               	movlw	-22
 12082  0105AC  006F FF8C  F025    	movff	plusw1,btemp
 12083  0105B2  0EFC               	movlw	252
 12084  0105B4  5E25               	subwf	btemp^0,f,c
 12085  0105B6  0EEB               	movlw	-21
 12086  0105B8  006F FF8C  F025    	movff	plusw1,btemp
 12087  0105BE  0EFF               	movlw	255
 12088  0105C0  5A25               	subwfb	btemp^0,f,c
 12089  0105C2  A0D8               	btfss	status,0,c
 12090  0105C4  D018               	goto	l10314
 12091  0105C6                     u9800:
 12092                           
 12093                           ;stkvar	_e @ sp[(-56)+34]
 12094                           ;stkvar	_p @ sp[(-56)+40]
 12095  0105C6  0EF0               	movlw	-16
 12096  0105C8  50E3               	movf	plusw1,w,c
 12097  0105CA  0FFF               	addlw	255
 12098  0105CC  6E2F               	movwf	(btemp+10)^0,c
 12099  0105CE  0EF1               	movlw	-15
 12100  0105D0  006F FF8C  F030    	movff	plusw1,btemp+11
 12101  0105D6  0EFF               	movlw	255
 12102  0105D8  2230               	addwfc	(btemp+11)^0,f,c
 12103  0105DA  0EEA               	movlw	-22
 12104  0105DC  50E3               	movf	plusw1,w,c
 12105  0105DE  5C2F               	subwf	(btemp+10)^0,w,c
 12106  0105E0  5030               	movf	(btemp+11)^0,w,c
 12107  0105E2  0A80               	xorlw	128
 12108  0105E4  6E25               	movwf	btemp^0,c
 12109  0105E6  0EEB               	movlw	-21
 12110  0105E8  50E3               	movf	plusw1,w,c
 12111  0105EA  0A80               	xorlw	128
 12112  0105EC  5825               	subwfb	btemp^0,w,c
 12113  0105EE  A0D8               	btfss	status,0,c
 12114  0105F0  D002               	goto	l10314
 12115                           
 12116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12117  0105F2  0E66               	movlw	102
 12118  0105F4  D001               	goto	L10
 12119  0105F6                     l10314:
 12120                           
 12121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12122  0105F6  0E65               	movlw	101
 12123  0105F8                     L10:
 12124  0105F8  6E30               	movwf	(btemp+11)^0,c
 12125                           
 12126                           ;stkvar	_nmode @ sp[(-56)+55]
 12127  0105FA  0EFF               	movlw	-1
 12128  0105FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12129  010602                     l10316:
 12130                           
 12131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12132                           ;stkvar	_p @ sp[(-56)+40]
 12133                           ;stkvar	_m @ sp[(-56)+48]
 12134  010602  0EF0               	movlw	-16
 12135  010604  006F FF8C  F025    	movff	plusw1,btemp
 12136  01060A  0EF8               	movlw	-8
 12137  01060C  0060  F097  FFE3   	movff	btemp,plusw1
 12138  010612  0EF1               	movlw	-15
 12139  010614  006F FF8C  F025    	movff	plusw1,btemp
 12140  01061A  0EF9               	movlw	-7
 12141  01061C  0060  F097  FFE3   	movff	btemp,plusw1
 12142                           
 12143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12144                           ;stkvar	_mode @ sp[(-56)+54]
 12145  010622  0EFE               	movlw	-2
 12146  010624  006F FF8C  F025    	movff	plusw1,btemp
 12147  01062A  0E67               	movlw	103
 12148  01062C  1825               	xorwf	btemp^0,w,c
 12149  01062E  A4D8               	btfss	status,2,c
 12150  010630  D00B               	goto	u9840
 12151                           
 12152                           ;stkvar	_nmode @ sp[(-56)+55]
 12153  010632  0EFF               	movlw	-1
 12154  010634  006F FF8C  F025    	movff	plusw1,btemp
 12155  01063A  0E66               	movlw	102
 12156  01063C  1825               	xorwf	btemp^0,w,c
 12157  01063E  A4D8               	btfss	status,2,c
 12158  010640  D014               	goto	l2078
 12159                           
 12160                           ;stkvar	_e @ sp[(-56)+34]
 12161  010642  0EEB               	movlw	-21
 12162  010644  AEE3               	btfss	plusw1,7,c
 12163  010646  D011               	goto	l2078
 12164  010648                     u9840:
 12165                           
 12166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12167                           ;stkvar	_m @ sp[(-56)+48]
 12168  010648  0EF8               	movlw	-8
 12169  01064A  50E3               	movf	plusw1,w,c
 12170  01064C  0F01               	addlw	1
 12171  01064E  6E25               	movwf	btemp^0,c
 12172  010650  0EF8               	movlw	-8
 12173  010652  0060  F097  FFE3   	movff	btemp,plusw1
 12174  010658  6A25               	clrf	btemp^0,c
 12175  01065A  0EF9               	movlw	-7
 12176  01065C  50E3               	movf	plusw1,w,c
 12177  01065E  2025               	addwfc	btemp^0,w,c
 12178  010660  6E25               	movwf	btemp^0,c
 12179  010662  0EF9               	movlw	-7
 12180  010664  0060  F097  FFE3   	movff	btemp,plusw1
 12181  01066A                     l2078:
 12182                           
 12183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12184                           ;stkvar	_nmode @ sp[(-56)+55]
 12185  01066A  0EFF               	movlw	-1
 12186  01066C  006F FF8C  F025    	movff	plusw1,btemp
 12187  010672  0E66               	movlw	102
 12188  010674  1825               	xorwf	btemp^0,w,c
 12189  010676  A4D8               	btfss	status,2,c
 12190  010678  D03B               	goto	l10336
 12191                           
 12192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12193                           ;stkvar	_e @ sp[(-56)+34]
 12194  01067A  0EEB               	movlw	-21
 12195  01067C  AEE3               	btfss	plusw1,7,c
 12196  01067E  D01C               	goto	l10332
 12197                           
 12198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12199  010680  0E00               	movlw	0
 12200  010682  6E2D               	movwf	(btemp+8)^0,c
 12201  010684  0E00               	movlw	0
 12202  010686  6E2E               	movwf	(btemp+9)^0,c
 12203  010688  0E80               	movlw	128
 12204  01068A  6E2F               	movwf	(btemp+10)^0,c
 12205  01068C  0E3F               	movlw	63
 12206  01068E  6E30               	movwf	(btemp+11)^0,c
 12207                           
 12208                           ;stkvar	_u @ sp[(-56)+12]
 12209  010690  0ED4               	movlw	-44
 12210  010692  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12211  010698  0ED5               	movlw	-43
 12212  01069A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12213  0106A0  0ED6               	movlw	-42
 12214  0106A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12215  0106A8  0ED7               	movlw	-41
 12216  0106AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12217                           
 12218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12219                           ;stkvar	_e @ sp[(-56)+34]
 12220  0106B0  0EEA               	movlw	-22
 12221  0106B2  6AE3               	clrf	plusw1,c
 12222  0106B4  0EEB               	movlw	-21
 12223  0106B6  6AE3               	clrf	plusw1,c
 12224  0106B8                     l10332:
 12225                           
 12226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12227                           ;stkvar	_mode @ sp[(-56)+54]
 12228  0106B8  0EFE               	movlw	-2
 12229  0106BA  006F FF8C  F025    	movff	plusw1,btemp
 12230  0106C0  0E67               	movlw	103
 12231  0106C2  1825               	xorwf	btemp^0,w,c
 12232  0106C4  B4D8               	btfsc	status,2,c
 12233  0106C6  D014               	goto	l10336
 12234                           
 12235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12236                           ;stkvar	_e @ sp[(-56)+34]
 12237                           ;stkvar	_m @ sp[(-56)+48]
 12238  0106C8  0EF8               	movlw	-8
 12239  0106CA  50E3               	movf	plusw1,w,c
 12240  0106CC  6E25               	movwf	btemp^0,c
 12241  0106CE  0EEA               	movlw	-22
 12242  0106D0  50E3               	movf	plusw1,w,c
 12243  0106D2  2625               	addwf	btemp^0,f,c
 12244  0106D4  0EF8               	movlw	-8
 12245  0106D6  0060  F097  FFE3   	movff	btemp,plusw1
 12246  0106DC  0EF9               	movlw	-7
 12247  0106DE  50E3               	movf	plusw1,w,c
 12248  0106E0  6E25               	movwf	btemp^0,c
 12249  0106E2  0EEB               	movlw	-21
 12250  0106E4  50E3               	movf	plusw1,w,c
 12251  0106E6  2225               	addwfc	btemp^0,f,c
 12252  0106E8  0EF9               	movlw	-7
 12253  0106EA  0060  F097  FFE3   	movff	btemp,plusw1
 12254  0106F0                     l10336:
 12255                           
 12256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12257                           ;stkvar	_i @ sp[(-56)+36]
 12258  0106F0  0EEC               	movlw	-20
 12259  0106F2  6AE3               	clrf	plusw1,c
 12260  0106F4  0EED               	movlw	-19
 12261  0106F6  6AE3               	clrf	plusw1,c
 12262                           
 12263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12264                           ;stkvar	_g @ sp[(-56)+16]
 12265  0106F8  0ED8               	movlw	-40
 12266  0106FA  006F FF8C  F02D    	movff	plusw1,btemp+8
 12267  010700  0ED9               	movlw	-39
 12268  010702  006F FF8C  F02E    	movff	plusw1,btemp+9
 12269  010708  0EDA               	movlw	-38
 12270  01070A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12271  010710  0EDB               	movlw	-37
 12272  010712  006F FF8C  F030    	movff	plusw1,btemp+11
 12273                           
 12274                           ;stkvar	_h @ sp[(-56)+24]
 12275  010718  0EE0               	movlw	-32
 12276  01071A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12277  010720  0EE1               	movlw	-31
 12278  010722  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12279  010728  0EE2               	movlw	-30
 12280  01072A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12281  010730  0EE3               	movlw	-29
 12282  010732  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12283                           
 12284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12285                           ;stkvar	_u @ sp[(-56)+12]
 12286  010738  0ED4               	movlw	-44
 12287  01073A  006F FF8C  F02D    	movff	plusw1,btemp+8
 12288  010740  0ED5               	movlw	-43
 12289  010742  006F FF8C  F02E    	movff	plusw1,btemp+9
 12290  010748  0ED6               	movlw	-42
 12291  01074A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12292  010750  0ED7               	movlw	-41
 12293  010752  006F FF8C  F030    	movff	plusw1,btemp+11
 12294                           
 12295                           ;stkvar	_ou @ sp[(-56)+28]
 12296  010758  0EE4               	movlw	-28
 12297  01075A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12298  010760  0EE5               	movlw	-27
 12299  010762  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12300  010768  0EE6               	movlw	-26
 12301  01076A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12302  010770  0EE7               	movlw	-25
 12303  010772  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12304                           
 12305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12306  010778  D0D6               	goto	l10352
 12307  01077A                     l10342:
 12308                           
 12309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12310                           ;stkvar	_u @ sp[(-56)+12]
 12311  01077A  0ED4               	movlw	-44
 12312  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12313  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12314  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12315  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12316                           
 12317                           ;stkvar	_h @ sp[(-60)+24]
 12318  010794  0EDC               	movlw	-36
 12319  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12320  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12322  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  0107AE  EC07  F09B         	call	___fldiv	;wreg free
 12324  0107B2  0060  F097  FFE6   	movff	btemp,postinc1
 12325  0107B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12326  0107BE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12327  0107C4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12328  0107CA  ECB4  F0A6         	call	_floorf	;wreg free
 12329                           
 12330                           ;stkvar	_l @ sp[(-56)+20]
 12331  0107CE  0EDC               	movlw	-36
 12332  0107D0  0060  F097  FFE3   	movff	btemp,plusw1
 12333  0107D6  0EDD               	movlw	-35
 12334  0107D8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12335  0107DE  0EDE               	movlw	-34
 12336  0107E0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12337  0107E6  0EDF               	movlw	-33
 12338  0107E8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12339                           
 12340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12341                           ;stkvar	_l @ sp[(-56)+20]
 12342  0107EE  0EDC               	movlw	-36
 12343  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12344  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  010808  ECE0  F0B4         	call	___fltol	;wreg free
 12348  01080C  0060  F094  F02F   	movff	btemp,btemp+10
 12349  010812  0060  F098  F030   	movff	btemp+1,btemp+11
 12350                           
 12351                           ;stkvar	_d @ sp[(-56)+44]
 12352  010818  0EF4               	movlw	-12
 12353  01081A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12354  010820  0EF5               	movlw	-11
 12355  010822  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12356                           
 12357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12358                           ;stkvar	_u @ sp[(-56)+12]
 12359  010828  0ED4               	movlw	-44
 12360  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12361  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12362  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12363  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12364                           
 12365                           ;stkvar	_l @ sp[(-60)+20]
 12366  010842  0ED8               	movlw	-40
 12367  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12368  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12369  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12370  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  01085C  EC14  F093         	call	___flmul	;wreg free
 12372  010860  0060  F097  FFE6   	movff	btemp,postinc1
 12373  010866  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12374  01086C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12375  010872  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12376                           
 12377                           ;stkvar	_h @ sp[(-60)+24]
 12378  010878  0EDC               	movlw	-36
 12379  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12380  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12381  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12382  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12383  010892  EC3E  F0C5         	call	___flsub	;wreg free
 12384                           
 12385                           ;stkvar	_h @ sp[(-56)+24]
 12386  010896  0EE0               	movlw	-32
 12387  010898  0060  F097  FFE3   	movff	btemp,plusw1
 12388  01089E  0EE1               	movlw	-31
 12389  0108A0  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12390  0108A6  0EE2               	movlw	-30
 12391  0108A8  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12392  0108AE  0EE3               	movlw	-29
 12393  0108B0  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12394                           
 12395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12396  0108B6  0E00               	movlw	0
 12397  0108B8  6EE6               	movwf	postinc1,c
 12398  0108BA  0E00               	movlw	0
 12399  0108BC  6EE6               	movwf	postinc1,c
 12400  0108BE  0E20               	movlw	32
 12401  0108C0  6EE6               	movwf	postinc1,c
 12402  0108C2  0E41               	movlw	65
 12403  0108C4  6EE6               	movwf	postinc1,c
 12404                           
 12405                           ;stkvar	_u @ sp[(-60)+12]
 12406  0108C6  0ED0               	movlw	-48
 12407  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12408  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12409  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12410  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12411  0108E0  EC07  F09B         	call	___fldiv	;wreg free
 12412                           
 12413                           ;stkvar	_u @ sp[(-56)+12]
 12414  0108E4  0ED4               	movlw	-44
 12415  0108E6  0060  F097  FFE3   	movff	btemp,plusw1
 12416  0108EC  0ED5               	movlw	-43
 12417  0108EE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12418  0108F4  0ED6               	movlw	-42
 12419  0108F6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12420  0108FC  0ED7               	movlw	-41
 12421  0108FE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12422                           
 12423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12424                           ;stkvar	_i @ sp[(-56)+36]
 12425  010904  0EEC               	movlw	-20
 12426  010906  50E3               	movf	plusw1,w,c
 12427  010908  0F01               	addlw	1
 12428  01090A  6E25               	movwf	btemp^0,c
 12429  01090C  0EEC               	movlw	-20
 12430  01090E  0060  F097  FFE3   	movff	btemp,plusw1
 12431  010914  6A25               	clrf	btemp^0,c
 12432  010916  0EED               	movlw	-19
 12433  010918  50E3               	movf	plusw1,w,c
 12434  01091A  2025               	addwfc	btemp^0,w,c
 12435  01091C  6E25               	movwf	btemp^0,c
 12436  01091E  0EED               	movlw	-19
 12437  010920  0060  F097  FFE3   	movff	btemp,plusw1
 12438  010926                     l10352:
 12439                           
 12440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12441                           ;stkvar	_m @ sp[(-56)+48]
 12442                           ;stkvar	_i @ sp[(-56)+36]
 12443  010926  50E1               	movf	fsr1l,w,c
 12444  010928  0FEC               	addlw	-20
 12445  01092A  6ED9               	movwf	fsr2l,c
 12446  01092C  50E2               	movf	fsr1h,w,c
 12447  01092E  6EDA               	movwf	fsr2h,c
 12448  010930  0EFF               	movlw	255
 12449  010932  22DA               	addwfc	fsr2h,f,c
 12450  010934  0EF8               	movlw	-8
 12451  010936  50E3               	movf	plusw1,w,c
 12452  010938  5CDE               	subwf	postinc2,w,c
 12453  01093A  50DE               	movf	postinc2,w,c
 12454  01093C  0A80               	xorlw	128
 12455  01093E  6E25               	movwf	btemp^0,c
 12456  010940  0EF9               	movlw	-7
 12457  010942  50E3               	movf	plusw1,w,c
 12458  010944  0A80               	xorlw	128
 12459  010946  5825               	subwfb	btemp^0,w,c
 12460  010948  A0D8               	btfss	status,0,c
 12461  01094A  D717               	goto	l10342
 12462                           
 12463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12464  01094C  0E00               	movlw	0
 12465  01094E  6EE6               	movwf	postinc1,c
 12466  010950  0E00               	movlw	0
 12467  010952  6EE6               	movwf	postinc1,c
 12468  010954  0EA0               	movlw	160
 12469  010956  6EE6               	movwf	postinc1,c
 12470  010958  0E40               	movlw	64
 12471  01095A  6EE6               	movwf	postinc1,c
 12472                           
 12473                           ;stkvar	_u @ sp[(-60)+12]
 12474  01095C  0ED0               	movlw	-48
 12475  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12476  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12477  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12478  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12479  010976  EC14  F093         	call	___flmul	;wreg free
 12480                           
 12481                           ;stkvar	_l @ sp[(-56)+20]
 12482  01097A  0EDC               	movlw	-36
 12483  01097C  0060  F097  FFE3   	movff	btemp,plusw1
 12484  010982  0EDD               	movlw	-35
 12485  010984  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12486  01098A  0EDE               	movlw	-34
 12487  01098C  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12488  010992  0EDF               	movlw	-33
 12489  010994  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12490                           
 12491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12492                           ;stkvar	_l @ sp[(-56)+20]
 12493  01099A  0EDC               	movlw	-36
 12494  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12495  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12496  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12497  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12498                           
 12499                           ;stkvar	_h @ sp[(-60)+24]
 12500  0109B4  0EDC               	movlw	-36
 12501  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12502  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12503  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12504  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12505  0109CE  EC99  F0B5         	call	___flge	;wreg free
 12506  0109D2  A025               	btfss	btemp& (0+255),0,c
 12507  0109D4  D021               	goto	u9910
 12508                           
 12509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12510                           ;stkvar	_l @ sp[(-56)+20]
 12511                           
 12512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12513                           
 12514                           ;stkvar	_l @ sp[(-56)+20]
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12517  0109D6  0EDC               	movlw	-36
 12518  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12519  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12520  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12521  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12522                           
 12523                           ;stkvar	_h @ sp[(-60)+24]
 12524  0109F0  0EDC               	movlw	-36
 12525  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12526  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12527  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12528  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12529  010A0A  EC17  F0BD         	call	___fleq	;wreg free
 12530  010A0E  A025               	btfss	btemp& (0+255),0,c
 12531  010A10  D01B               	goto	l10366
 12532                           
 12533                           ;stkvar	_d @ sp[(-56)+44]
 12534  010A12  0EF4               	movlw	-12
 12535  010A14  B0E3               	btfsc	plusw1,0,c
 12536  010A16  D018               	goto	l10366
 12537  010A18                     u9910:
 12538                           
 12539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12540  010A18  0E00               	movlw	0
 12541  010A1A  6E2D               	movwf	(btemp+8)^0,c
 12542  010A1C  0E00               	movlw	0
 12543  010A1E  6E2E               	movwf	(btemp+9)^0,c
 12544  010A20  0E00               	movlw	0
 12545  010A22  6E2F               	movwf	(btemp+10)^0,c
 12546  010A24  0E00               	movlw	0
 12547  010A26  6E30               	movwf	(btemp+11)^0,c
 12548                           
 12549                           ;stkvar	_l @ sp[(-56)+20]
 12550  010A28  0EDC               	movlw	-36
 12551  010A2A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12552  010A30  0EDD               	movlw	-35
 12553  010A32  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12554  010A38  0EDE               	movlw	-34
 12555  010A3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12556  010A40  0EDF               	movlw	-33
 12557  010A42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12558  010A48                     l10366:
 12559                           
 12560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12561                           ;stkvar	_l @ sp[(-56)+20]
 12562  010A48  0EDC               	movlw	-36
 12563  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12564  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12565  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12566  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12567                           
 12568                           ;stkvar	_g @ sp[(-60)+16]
 12569  010A62  0ED4               	movlw	-44
 12570  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12571  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12572  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12573  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12574  010A7C  EC29  F097         	call	___fladd	;wreg free
 12575                           
 12576                           ;stkvar	_h @ sp[(-56)+24]
 12577  010A80  0EE0               	movlw	-32
 12578  010A82  0060  F097  FFE3   	movff	btemp,plusw1
 12579  010A88  0EE1               	movlw	-31
 12580  010A8A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12581  010A90  0EE2               	movlw	-30
 12582  010A92  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12583  010A98  0EE3               	movlw	-29
 12584  010A9A  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12585                           
 12586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12587                           ;stkvar	_ou @ sp[(-56)+28]
 12588  010AA0  0EE4               	movlw	-28
 12589  010AA2  006F FF8C  F02D    	movff	plusw1,btemp+8
 12590  010AA8  0EE5               	movlw	-27
 12591  010AAA  006F FF8C  F02E    	movff	plusw1,btemp+9
 12592  010AB0  0EE6               	movlw	-26
 12593  010AB2  006F FF8C  F02F    	movff	plusw1,btemp+10
 12594  010AB8  0EE7               	movlw	-25
 12595  010ABA  006F FF8C  F030    	movff	plusw1,btemp+11
 12596                           
 12597                           ;stkvar	_u @ sp[(-56)+12]
 12598  010AC0  0ED4               	movlw	-44
 12599  010AC2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12600  010AC8  0ED5               	movlw	-43
 12601  010ACA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12602  010AD0  0ED6               	movlw	-42
 12603  010AD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12604  010AD8  0ED7               	movlw	-41
 12605  010ADA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12606                           
 12607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12608                           ;stkvar	_nmode @ sp[(-56)+55]
 12609  010AE0  0EFF               	movlw	-1
 12610  010AE2  006F FF8C  F025    	movff	plusw1,btemp
 12611  010AE8  0E65               	movlw	101
 12612  010AEA  1825               	xorwf	btemp^0,w,c
 12613  010AEC  B4D8               	btfsc	status,2,c
 12614  010AEE  D011               	goto	l10374
 12615                           
 12616                           ;stkvar	_e @ sp[(-56)+34]
 12617                           ;stkvar	_ne @ sp[(-56)+46]
 12618  010AF0  0EEA               	movlw	-22
 12619  010AF2  006F FF8C  F025    	movff	plusw1,btemp
 12620  010AF8  0EF6               	movlw	-10
 12621  010AFA  0060  F097  FFE3   	movff	btemp,plusw1
 12622  010B00  0EEB               	movlw	-21
 12623  010B02  006F FF8C  F025    	movff	plusw1,btemp
 12624  010B08  0EF7               	movlw	-9
 12625  010B0A  0060  F097  FFE3   	movff	btemp,plusw1
 12626  010B10  D004               	goto	l2093
 12627  010B12                     l10374:
 12628                           
 12629                           ;stkvar	_ne @ sp[(-56)+46]
 12630  010B12  0EF6               	movlw	-10
 12631  010B14  6AE3               	clrf	plusw1,c
 12632  010B16  0EF7               	movlw	-9
 12633  010B18  6AE3               	clrf	plusw1,c
 12634  010B1A                     l2093:
 12635                           
 12636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12637                           ;stkvar	_pp @ sp[(-56)+50]
 12638  010B1A  0EFA               	movlw	-6
 12639  010B1C  6AE3               	clrf	plusw1,c
 12640  010B1E  0EFB               	movlw	-5
 12641  010B20  6AE3               	clrf	plusw1,c
 12642                           
 12643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12644                           ;stkvar	_t @ sp[(-56)+52]
 12645  010B22  0EFC               	movlw	-4
 12646  010B24  6AE3               	clrf	plusw1,c
 12647  010B26  0EFD               	movlw	-3
 12648  010B28  6AE3               	clrf	plusw1,c
 12649                           
 12650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12651                           ;stkvar	_i @ sp[(-56)+36]
 12652  010B2A  0EEC               	movlw	-20
 12653  010B2C  6AE3               	clrf	plusw1,c
 12654  010B2E  0EED               	movlw	-19
 12655  010B30  6AE3               	clrf	plusw1,c
 12656                           
 12657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12658  010B32  D1B7               	goto	l10426
 12659  010B34                     l10376:
 12660                           
 12661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12662                           ;stkvar	_u @ sp[(-56)+12]
 12663  010B34  0ED4               	movlw	-44
 12664  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12665  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12666  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12667  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12668                           
 12669                           ;stkvar	_h @ sp[(-60)+24]
 12670  010B4E  0EDC               	movlw	-36
 12671  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12672  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12673  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12674  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12675  010B68  EC07  F09B         	call	___fldiv	;wreg free
 12676  010B6C  0060  F097  FFE6   	movff	btemp,postinc1
 12677  010B72  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12678  010B78  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12679  010B7E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12680  010B84  ECB4  F0A6         	call	_floorf	;wreg free
 12681                           
 12682                           ;stkvar	_l @ sp[(-56)+20]
 12683  010B88  0EDC               	movlw	-36
 12684  010B8A  0060  F097  FFE3   	movff	btemp,plusw1
 12685  010B90  0EDD               	movlw	-35
 12686  010B92  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12687  010B98  0EDE               	movlw	-34
 12688  010B9A  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12689  010BA0  0EDF               	movlw	-33
 12690  010BA2  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12691                           
 12692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12693                           ;stkvar	_l @ sp[(-56)+20]
 12694  010BA8  0EDC               	movlw	-36
 12695  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12696  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12697  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12698  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12699  010BC2  ECE0  F0B4         	call	___fltol	;wreg free
 12700  010BC6  0060  F094  F02F   	movff	btemp,btemp+10
 12701  010BCC  0060  F098  F030   	movff	btemp+1,btemp+11
 12702                           
 12703                           ;stkvar	_d @ sp[(-56)+44]
 12704  010BD2  0EF4               	movlw	-12
 12705  010BD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12706  010BDA  0EF5               	movlw	-11
 12707  010BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12708                           
 12709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12710  010BE2  B80E               	btfsc	_flags^0,4,c
 12711  010BE4  D026               	goto	l10390
 12712                           
 12713                           ;stkvar	_d @ sp[(-56)+44]
 12714  010BE6  0EF4               	movlw	-12
 12715  010BE8  006F FF8C  F025    	movff	plusw1,btemp
 12716  010BEE  0EF5               	movlw	-11
 12717  010BF0  50E3               	movf	plusw1,w,c
 12718  010BF2  1025               	iorwf	btemp^0,w,c
 12719  010BF4  A4D8               	btfss	status,2,c
 12720  010BF6  D01D               	goto	l10390
 12721                           
 12722                           ;stkvar	_mode @ sp[(-56)+54]
 12723  010BF8  0EFE               	movlw	-2
 12724  010BFA  006F FF8C  F025    	movff	plusw1,btemp
 12725  010C00  0E67               	movlw	103
 12726  010C02  1825               	xorwf	btemp^0,w,c
 12727  010C04  A4D8               	btfss	status,2,c
 12728  010C06  D015               	goto	l10390
 12729                           
 12730                           ;stkvar	_ne @ sp[(-56)+46]
 12731  010C08  0EF7               	movlw	-9
 12732  010C0A  AEE3               	btfss	plusw1,7,c
 12733  010C0C  D012               	goto	l10390
 12734                           
 12735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12736                           ;stkvar	_t @ sp[(-56)+52]
 12737  010C0E  0EFC               	movlw	-4
 12738  010C10  50E3               	movf	plusw1,w,c
 12739  010C12  0F01               	addlw	1
 12740  010C14  6E25               	movwf	btemp^0,c
 12741  010C16  0EFC               	movlw	-4
 12742  010C18  0060  F097  FFE3   	movff	btemp,plusw1
 12743  010C1E  6A25               	clrf	btemp^0,c
 12744  010C20  0EFD               	movlw	-3
 12745  010C22  50E3               	movf	plusw1,w,c
 12746  010C24  2025               	addwfc	btemp^0,w,c
 12747  010C26  6E25               	movwf	btemp^0,c
 12748  010C28  0EFD               	movlw	-3
 12749  010C2A  0060  F097  FFE3   	movff	btemp,plusw1
 12750                           
 12751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12752  010C30  D0AF               	goto	l10418
 12753  010C32                     l10390:
 12754                           
 12755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12756                           ;stkvar	_pp @ sp[(-56)+50]
 12757  010C32  0EFA               	movlw	-6
 12758  010C34  006F FF8C  F025    	movff	plusw1,btemp
 12759  010C3A  0EFB               	movlw	-5
 12760  010C3C  50E3               	movf	plusw1,w,c
 12761  010C3E  1025               	iorwf	btemp^0,w,c
 12762  010C40  A4D8               	btfss	status,2,c
 12763  010C42  D070               	goto	l10410
 12764                           
 12765                           ;stkvar	_ne @ sp[(-56)+46]
 12766  010C44  0EF7               	movlw	-9
 12767  010C46  AEE3               	btfss	plusw1,7,c
 12768  010C48  D06D               	goto	l10410
 12769                           
 12770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12771                           ;stkvar	_n @ sp[(-56)+32]
 12772  010C4A  0EE8               	movlw	-24
 12773  010C4C  006F FF8C  F02F    	movff	plusw1,btemp+10
 12774  010C52  0EE9               	movlw	-23
 12775  010C54  006F FF8C  F030    	movff	plusw1,btemp+11
 12776  010C5A  0E94               	movlw	low _dbuf
 12777  010C5C  242F               	addwf	(btemp+10)^0,w,c
 12778  010C5E  6ED9               	movwf	fsr2l,c
 12779  010C60  0E03               	movlw	high _dbuf
 12780  010C62  2030               	addwfc	(btemp+11)^0,w,c
 12781  010C64  6EDA               	movwf	fsr2h,c
 12782  010C66  0E2E               	movlw	46
 12783  010C68  6EDF               	movwf	indf2,c
 12784                           
 12785                           ;stkvar	_n @ sp[(-56)+32]
 12786  010C6A  0EE8               	movlw	-24
 12787  010C6C  50E3               	movf	plusw1,w,c
 12788  010C6E  0F01               	addlw	1
 12789  010C70  6E25               	movwf	btemp^0,c
 12790  010C72  0EE8               	movlw	-24
 12791  010C74  0060  F097  FFE3   	movff	btemp,plusw1
 12792  010C7A  6A25               	clrf	btemp^0,c
 12793  010C7C  0EE9               	movlw	-23
 12794  010C7E  50E3               	movf	plusw1,w,c
 12795  010C80  2025               	addwfc	btemp^0,w,c
 12796  010C82  6E25               	movwf	btemp^0,c
 12797  010C84  0EE9               	movlw	-23
 12798  010C86  0060  F097  FFE3   	movff	btemp,plusw1
 12799                           
 12800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12801                           ;stkvar	_w @ sp[(-56)+38]
 12802  010C8C  50E1               	movf	fsr1l,w,c
 12803  010C8E  0FEE               	addlw	-18
 12804  010C90  6ED9               	movwf	fsr2l,c
 12805  010C92  50E2               	movf	fsr1h,w,c
 12806  010C94  6EDA               	movwf	fsr2h,c
 12807  010C96  0EFF               	movlw	255
 12808  010C98  22DA               	addwfc	fsr2h,f,c
 12809  010C9A  06DE               	decf	postinc2,f,c
 12810  010C9C  0E00               	movlw	0
 12811  010C9E  5ADD               	subwfb	postdec2,f,c
 12812                           
 12813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12814  010CA0  0E01               	movlw	1
 12815  010CA2  6E2F               	movwf	(btemp+10)^0,c
 12816  010CA4  0E00               	movlw	0
 12817  010CA6  6E30               	movwf	(btemp+11)^0,c
 12818                           
 12819                           ;stkvar	_pp @ sp[(-56)+50]
 12820  010CA8  0EFA               	movlw	-6
 12821  010CAA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12822  010CB0  0EFB               	movlw	-5
 12823  010CB2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12824  010CB8  D035               	goto	l10410
 12825  010CBA                     l10402:
 12826                           
 12827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12828                           ;stkvar	_n @ sp[(-56)+32]
 12829  010CBA  0EE8               	movlw	-24
 12830  010CBC  006F FF8C  F02F    	movff	plusw1,btemp+10
 12831  010CC2  0EE9               	movlw	-23
 12832  010CC4  006F FF8C  F030    	movff	plusw1,btemp+11
 12833  010CCA  0E94               	movlw	low _dbuf
 12834  010CCC  242F               	addwf	(btemp+10)^0,w,c
 12835  010CCE  6ED9               	movwf	fsr2l,c
 12836  010CD0  0E03               	movlw	high _dbuf
 12837  010CD2  2030               	addwfc	(btemp+11)^0,w,c
 12838  010CD4  6EDA               	movwf	fsr2h,c
 12839  010CD6  0E30               	movlw	48
 12840  010CD8  6EDF               	movwf	indf2,c
 12841                           
 12842                           ;stkvar	_n @ sp[(-56)+32]
 12843  010CDA  0EE8               	movlw	-24
 12844  010CDC  50E3               	movf	plusw1,w,c
 12845  010CDE  0F01               	addlw	1
 12846  010CE0  6E25               	movwf	btemp^0,c
 12847  010CE2  0EE8               	movlw	-24
 12848  010CE4  0060  F097  FFE3   	movff	btemp,plusw1
 12849  010CEA  6A25               	clrf	btemp^0,c
 12850  010CEC  0EE9               	movlw	-23
 12851  010CEE  50E3               	movf	plusw1,w,c
 12852  010CF0  2025               	addwfc	btemp^0,w,c
 12853  010CF2  6E25               	movwf	btemp^0,c
 12854  010CF4  0EE9               	movlw	-23
 12855  010CF6  0060  F097  FFE3   	movff	btemp,plusw1
 12856                           
 12857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12858                           ;stkvar	_w @ sp[(-56)+38]
 12859  010CFC  50E1               	movf	fsr1l,w,c
 12860  010CFE  0FEE               	addlw	-18
 12861  010D00  6ED9               	movwf	fsr2l,c
 12862  010D02  50E2               	movf	fsr1h,w,c
 12863  010D04  6EDA               	movwf	fsr2h,c
 12864  010D06  0EFF               	movlw	255
 12865  010D08  22DA               	addwfc	fsr2h,f,c
 12866  010D0A  06DE               	decf	postinc2,f,c
 12867  010D0C  0E00               	movlw	0
 12868  010D0E  5ADD               	subwfb	postdec2,f,c
 12869                           
 12870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12871                           ;stkvar	_t @ sp[(-56)+52]
 12872  010D10  50E1               	movf	fsr1l,w,c
 12873  010D12  0FFC               	addlw	-4
 12874  010D14  6ED9               	movwf	fsr2l,c
 12875  010D16  50E2               	movf	fsr1h,w,c
 12876  010D18  6EDA               	movwf	fsr2h,c
 12877  010D1A  0EFF               	movlw	255
 12878  010D1C  22DA               	addwfc	fsr2h,f,c
 12879  010D1E  06DE               	decf	postinc2,f,c
 12880  010D20  0E00               	movlw	0
 12881  010D22  5ADD               	subwfb	postdec2,f,c
 12882  010D24                     l10410:
 12883                           
 12884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12885                           ;stkvar	_t @ sp[(-56)+52]
 12886  010D24  0EFC               	movlw	-4
 12887  010D26  006F FF8C  F025    	movff	plusw1,btemp
 12888  010D2C  0EFD               	movlw	-3
 12889  010D2E  50E3               	movf	plusw1,w,c
 12890  010D30  1025               	iorwf	btemp^0,w,c
 12891  010D32  A4D8               	btfss	status,2,c
 12892  010D34  D7C2               	goto	l10402
 12893                           
 12894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12895                           ;stkvar	_n @ sp[(-56)+32]
 12896  010D36  0EE8               	movlw	-24
 12897  010D38  006F FF8C  F02F    	movff	plusw1,btemp+10
 12898  010D3E  0EE9               	movlw	-23
 12899  010D40  006F FF8C  F030    	movff	plusw1,btemp+11
 12900  010D46  0E94               	movlw	low _dbuf
 12901  010D48  242F               	addwf	(btemp+10)^0,w,c
 12902  010D4A  6ED9               	movwf	fsr2l,c
 12903  010D4C  0E03               	movlw	high _dbuf
 12904  010D4E  2030               	addwfc	(btemp+11)^0,w,c
 12905  010D50  6EDA               	movwf	fsr2h,c
 12906                           
 12907                           ;stkvar	_d @ sp[(-56)+44]
 12908  010D52  0EF4               	movlw	-12
 12909  010D54  50E3               	movf	plusw1,w,c
 12910  010D56  0F30               	addlw	48
 12911  010D58  6EDF               	movwf	indf2,c
 12912                           
 12913                           ;stkvar	_n @ sp[(-56)+32]
 12914  010D5A  0EE8               	movlw	-24
 12915  010D5C  50E3               	movf	plusw1,w,c
 12916  010D5E  0F01               	addlw	1
 12917  010D60  6E25               	movwf	btemp^0,c
 12918  010D62  0EE8               	movlw	-24
 12919  010D64  0060  F097  FFE3   	movff	btemp,plusw1
 12920  010D6A  6A25               	clrf	btemp^0,c
 12921  010D6C  0EE9               	movlw	-23
 12922  010D6E  50E3               	movf	plusw1,w,c
 12923  010D70  2025               	addwfc	btemp^0,w,c
 12924  010D72  6E25               	movwf	btemp^0,c
 12925  010D74  0EE9               	movlw	-23
 12926  010D76  0060  F097  FFE3   	movff	btemp,plusw1
 12927                           
 12928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12929                           ;stkvar	_w @ sp[(-56)+38]
 12930  010D7C  50E1               	movf	fsr1l,w,c
 12931  010D7E  0FEE               	addlw	-18
 12932  010D80  6ED9               	movwf	fsr2l,c
 12933  010D82  50E2               	movf	fsr1h,w,c
 12934  010D84  6EDA               	movwf	fsr2h,c
 12935  010D86  0EFF               	movlw	255
 12936  010D88  22DA               	addwfc	fsr2h,f,c
 12937  010D8A  06DE               	decf	postinc2,f,c
 12938  010D8C  0E00               	movlw	0
 12939  010D8E  5ADD               	subwfb	postdec2,f,c
 12940  010D90                     l10418:
 12941                           
 12942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12943                           ;stkvar	_u @ sp[(-56)+12]
 12944  010D90  0ED4               	movlw	-44
 12945  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12946  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12947  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12948  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12949                           
 12950                           ;stkvar	_l @ sp[(-60)+20]
 12951  010DAA  0ED8               	movlw	-40
 12952  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12953  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12954  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12955  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12956  010DC4  EC14  F093         	call	___flmul	;wreg free
 12957  010DC8  0060  F097  FFE6   	movff	btemp,postinc1
 12958  010DCE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12959  010DD4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12960  010DDA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12961                           
 12962                           ;stkvar	_h @ sp[(-60)+24]
 12963  010DE0  0EDC               	movlw	-36
 12964  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12965  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12966  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12967  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12968  010DFA  EC3E  F0C5         	call	___flsub	;wreg free
 12969                           
 12970                           ;stkvar	_h @ sp[(-56)+24]
 12971  010DFE  0EE0               	movlw	-32
 12972  010E00  0060  F097  FFE3   	movff	btemp,plusw1
 12973  010E06  0EE1               	movlw	-31
 12974  010E08  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12975  010E0E  0EE2               	movlw	-30
 12976  010E10  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12977  010E16  0EE3               	movlw	-29
 12978  010E18  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12979                           
 12980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12981  010E1E  0E00               	movlw	0
 12982  010E20  6EE6               	movwf	postinc1,c
 12983  010E22  0E00               	movlw	0
 12984  010E24  6EE6               	movwf	postinc1,c
 12985  010E26  0E20               	movlw	32
 12986  010E28  6EE6               	movwf	postinc1,c
 12987  010E2A  0E41               	movlw	65
 12988  010E2C  6EE6               	movwf	postinc1,c
 12989                           
 12990                           ;stkvar	_u @ sp[(-60)+12]
 12991  010E2E  0ED0               	movlw	-48
 12992  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12993  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12994  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12995  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12996  010E48  EC07  F09B         	call	___fldiv	;wreg free
 12997                           
 12998                           ;stkvar	_u @ sp[(-56)+12]
 12999  010E4C  0ED4               	movlw	-44
 13000  010E4E  0060  F097  FFE3   	movff	btemp,plusw1
 13001  010E54  0ED5               	movlw	-43
 13002  010E56  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13003  010E5C  0ED6               	movlw	-42
 13004  010E5E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 13005  010E64  0ED7               	movlw	-41
 13006  010E66  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 13007                           
 13008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 13009                           ;stkvar	_ne @ sp[(-56)+46]
 13010  010E6C  50E1               	movf	fsr1l,w,c
 13011  010E6E  0FF6               	addlw	-10
 13012  010E70  6ED9               	movwf	fsr2l,c
 13013  010E72  50E2               	movf	fsr1h,w,c
 13014  010E74  6EDA               	movwf	fsr2h,c
 13015  010E76  0EFF               	movlw	255
 13016  010E78  22DA               	addwfc	fsr2h,f,c
 13017  010E7A  06DE               	decf	postinc2,f,c
 13018  010E7C  0E00               	movlw	0
 13019  010E7E  5ADD               	subwfb	postdec2,f,c
 13020                           
 13021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 13022                           ;stkvar	_i @ sp[(-56)+36]
 13023  010E80  0EEC               	movlw	-20
 13024  010E82  50E3               	movf	plusw1,w,c
 13025  010E84  0F01               	addlw	1
 13026  010E86  6E25               	movwf	btemp^0,c
 13027  010E88  0EEC               	movlw	-20
 13028  010E8A  0060  F097  FFE3   	movff	btemp,plusw1
 13029  010E90  6A25               	clrf	btemp^0,c
 13030  010E92  0EED               	movlw	-19
 13031  010E94  50E3               	movf	plusw1,w,c
 13032  010E96  2025               	addwfc	btemp^0,w,c
 13033  010E98  6E25               	movwf	btemp^0,c
 13034  010E9A  0EED               	movlw	-19
 13035  010E9C  0060  F097  FFE3   	movff	btemp,plusw1
 13036  010EA2                     l10426:
 13037                           
 13038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13039                           ;stkvar	_m @ sp[(-56)+48]
 13040                           ;stkvar	_i @ sp[(-56)+36]
 13041  010EA2  50E1               	movf	fsr1l,w,c
 13042  010EA4  0FEC               	addlw	-20
 13043  010EA6  6ED9               	movwf	fsr2l,c
 13044  010EA8  50E2               	movf	fsr1h,w,c
 13045  010EAA  6EDA               	movwf	fsr2h,c
 13046  010EAC  0EFF               	movlw	255
 13047  010EAE  22DA               	addwfc	fsr2h,f,c
 13048  010EB0  0EF8               	movlw	-8
 13049  010EB2  50E3               	movf	plusw1,w,c
 13050  010EB4  5CDE               	subwf	postinc2,w,c
 13051  010EB6  50DE               	movf	postinc2,w,c
 13052  010EB8  0A80               	xorlw	128
 13053  010EBA  6E25               	movwf	btemp^0,c
 13054  010EBC  0EF9               	movlw	-7
 13055  010EBE  50E3               	movf	plusw1,w,c
 13056  010EC0  0A80               	xorlw	128
 13057  010EC2  5825               	subwfb	btemp^0,w,c
 13058  010EC4  B0D8               	btfsc	status,0,c
 13059  010EC6  D00E               	goto	u10010
 13060                           
 13061                           ;stkvar	_n @ sp[(-56)+32]
 13062  010EC8  0EE9               	movlw	-23
 13063  010ECA  BEE3               	btfsc	plusw1,7,c
 13064  010ECC  D633               	goto	l10376
 13065  010ECE  0EE9               	movlw	-23
 13066  010ED0  50E3               	movf	plusw1,w,c
 13067  010ED2  E108               	bnz	u10010
 13068  010ED4  0EE8               	movlw	-24
 13069  010ED6  006F FF8C  F025    	movff	plusw1,btemp
 13070  010EDC  0E4B               	movlw	75
 13071  010EDE  5E25               	subwf	btemp^0,f,c
 13072  010EE0  A0D8               	btfss	status,0,c
 13073  010EE2  D628               	goto	l10376
 13074  010EE4                     u10010:
 13075                           
 13076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13077                           ;stkvar	_pp @ sp[(-56)+50]
 13078  010EE4  0EFA               	movlw	-6
 13079  010EE6  006F FF8C  F025    	movff	plusw1,btemp
 13080  010EEC  0EFB               	movlw	-5
 13081  010EEE  50E3               	movf	plusw1,w,c
 13082  010EF0  1025               	iorwf	btemp^0,w,c
 13083  010EF2  B4D8               	btfsc	status,2,c
 13084  010EF4  A80E               	btfss	_flags^0,4,c
 13085  010EF6  D021               	goto	l10438
 13086                           
 13087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13088                           ;stkvar	_n @ sp[(-56)+32]
 13089  010EF8  0EE8               	movlw	-24
 13090  010EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13091  010F00  0EE9               	movlw	-23
 13092  010F02  006F FF8C  F030    	movff	plusw1,btemp+11
 13093  010F08  0E94               	movlw	low _dbuf
 13094  010F0A  242F               	addwf	(btemp+10)^0,w,c
 13095  010F0C  6ED9               	movwf	fsr2l,c
 13096  010F0E  0E03               	movlw	high _dbuf
 13097  010F10  2030               	addwfc	(btemp+11)^0,w,c
 13098  010F12  6EDA               	movwf	fsr2h,c
 13099  010F14  0E2E               	movlw	46
 13100  010F16  6EDF               	movwf	indf2,c
 13101                           
 13102                           ;stkvar	_n @ sp[(-56)+32]
 13103  010F18  0EE8               	movlw	-24
 13104  010F1A  50E3               	movf	plusw1,w,c
 13105  010F1C  0F01               	addlw	1
 13106  010F1E  6E25               	movwf	btemp^0,c
 13107  010F20  0EE8               	movlw	-24
 13108  010F22  0060  F097  FFE3   	movff	btemp,plusw1
 13109  010F28  6A25               	clrf	btemp^0,c
 13110  010F2A  0EE9               	movlw	-23
 13111  010F2C  50E3               	movf	plusw1,w,c
 13112  010F2E  2025               	addwfc	btemp^0,w,c
 13113  010F30  6E25               	movwf	btemp^0,c
 13114  010F32  0EE9               	movlw	-23
 13115  010F34  0060  F097  FFE3   	movff	btemp,plusw1
 13116  010F3A                     l10438:
 13117                           
 13118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13119                           ;stkvar	_n @ sp[(-56)+32]
 13120  010F3A  0EE8               	movlw	-24
 13121  010F3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13122  010F42  0EE9               	movlw	-23
 13123  010F44  006F FF8C  F030    	movff	plusw1,btemp+11
 13124  010F4A  0E94               	movlw	low _dbuf
 13125  010F4C  242F               	addwf	(btemp+10)^0,w,c
 13126  010F4E  6ED9               	movwf	fsr2l,c
 13127  010F50  0E03               	movlw	high _dbuf
 13128  010F52  2030               	addwfc	(btemp+11)^0,w,c
 13129  010F54  6EDA               	movwf	fsr2h,c
 13130  010F56  0E00               	movlw	0
 13131  010F58  6EDF               	movwf	indf2,c
 13132                           
 13133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13134                           ;stkvar	_nmode @ sp[(-56)+55]
 13135  010F5A  0EFF               	movlw	-1
 13136  010F5C  006F FF8C  F025    	movff	plusw1,btemp
 13137  010F62  0E65               	movlw	101
 13138  010F64  1825               	xorwf	btemp^0,w,c
 13139  010F66  A4D8               	btfss	status,2,c
 13140  010F68  EF16  F081         	goto	l10242
 13141                           
 13142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13143  010F6C  0E4F               	movlw	79
 13144  010F6E  6E2F               	movwf	(btemp+10)^0,c
 13145  010F70  0E00               	movlw	0
 13146  010F72  6E30               	movwf	(btemp+11)^0,c
 13147                           
 13148                           ;stkvar	_i @ sp[(-56)+36]
 13149  010F74  0EEC               	movlw	-20
 13150  010F76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13151  010F7C  0EED               	movlw	-19
 13152  010F7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13153                           
 13154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13155                           ;stkvar	_i @ sp[(-56)+36]
 13156  010F84  0EEC               	movlw	-20
 13157  010F86  006F FF8C  F02F    	movff	plusw1,btemp+10
 13158  010F8C  0EED               	movlw	-19
 13159  010F8E  006F FF8C  F030    	movff	plusw1,btemp+11
 13160  010F94  0E94               	movlw	low _dbuf
 13161  010F96  242F               	addwf	(btemp+10)^0,w,c
 13162  010F98  6ED9               	movwf	fsr2l,c
 13163  010F9A  0E03               	movlw	high _dbuf
 13164  010F9C  2030               	addwfc	(btemp+11)^0,w,c
 13165  010F9E  6EDA               	movwf	fsr2h,c
 13166  010FA0  0E00               	movlw	0
 13167  010FA2  6EDF               	movwf	indf2,c
 13168                           
 13169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13170                           ;stkvar	_sign @ sp[(-56)+42]
 13171  010FA4  0EF2               	movlw	-14
 13172  010FA6  6AE3               	clrf	plusw1,c
 13173  010FA8  0EF3               	movlw	-13
 13174  010FAA  6AE3               	clrf	plusw1,c
 13175                           
 13176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13177                           ;stkvar	_e @ sp[(-56)+34]
 13178  010FAC  0EEB               	movlw	-21
 13179  010FAE  AEE3               	btfss	plusw1,7,c
 13180  010FB0  D012               	goto	l10452
 13181                           
 13182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13183  010FB2  0E01               	movlw	1
 13184  010FB4  6E2F               	movwf	(btemp+10)^0,c
 13185  010FB6  0E00               	movlw	0
 13186  010FB8  6E30               	movwf	(btemp+11)^0,c
 13187                           
 13188                           ;stkvar	_sign @ sp[(-56)+42]
 13189  010FBA  0EF2               	movlw	-14
 13190  010FBC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13191  010FC2  0EF3               	movlw	-13
 13192  010FC4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13193                           
 13194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13195                           ;stkvar	_e @ sp[(-56)+34]
 13196                           ;stkvar	_e @ sp[(-56)+34]
 13197  010FCA  0EEA               	movlw	-22
 13198  010FCC  6CE3               	negf	plusw1,c
 13199  010FCE  0EEB               	movlw	-21
 13200  010FD0  1EE3               	comf	plusw1,f,c
 13201  010FD2  B0D8               	btfsc	status,0,c
 13202  010FD4  2AE3               	incf	plusw1,f,c
 13203  010FD6                     l10452:
 13204                           
 13205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13206  010FD6  0E02               	movlw	2
 13207  010FD8  6E2F               	movwf	(btemp+10)^0,c
 13208  010FDA  0E00               	movlw	0
 13209  010FDC  6E30               	movwf	(btemp+11)^0,c
 13210                           
 13211                           ;stkvar	_p @ sp[(-56)+40]
 13212  010FDE  0EF0               	movlw	-16
 13213  010FE0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13214  010FE6  0EF1               	movlw	-15
 13215  010FE8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13216                           
 13217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13218  010FEE  D051               	goto	l10464
 13219  010FF0                     l10454:
 13220                           
 13221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13222                           ;stkvar	_i @ sp[(-56)+36]
 13223  010FF0  50E1               	movf	fsr1l,w,c
 13224  010FF2  0FEC               	addlw	-20
 13225  010FF4  6ED9               	movwf	fsr2l,c
 13226  010FF6  50E2               	movf	fsr1h,w,c
 13227  010FF8  6EDA               	movwf	fsr2h,c
 13228  010FFA  0EFF               	movlw	255
 13229  010FFC  22DA               	addwfc	fsr2h,f,c
 13230  010FFE  06DE               	decf	postinc2,f,c
 13231  011000  0E00               	movlw	0
 13232  011002  5ADD               	subwfb	postdec2,f,c
 13233                           
 13234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13235                           ;stkvar	_i @ sp[(-56)+36]
 13236  011004  0EEC               	movlw	-20
 13237  011006  006F FF8C  F02F    	movff	plusw1,btemp+10
 13238  01100C  0EED               	movlw	-19
 13239  01100E  006F FF8C  F030    	movff	plusw1,btemp+11
 13240  011014  0E94               	movlw	low _dbuf
 13241  011016  242F               	addwf	(btemp+10)^0,w,c
 13242  011018  6ED9               	movwf	fsr2l,c
 13243  01101A  0E03               	movlw	high _dbuf
 13244  01101C  2030               	addwfc	(btemp+11)^0,w,c
 13245  01101E  6EDA               	movwf	fsr2h,c
 13246  011020  0E0A               	movlw	10
 13247  011022  6EE6               	movwf	postinc1,c
 13248  011024  0E00               	movlw	0
 13249  011026  6EE6               	movwf	postinc1,c
 13250                           
 13251                           ;stkvar	_e @ sp[(-58)+34]
 13252  011028  0EE8               	movlw	-24
 13253  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13254  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13255  011036  ECAE  F0B8         	call	___awmod	;wreg free
 13256  01103A  5025               	movf	btemp^0,w,c
 13257  01103C  0F30               	addlw	48
 13258  01103E  6EDF               	movwf	indf2,c
 13259                           
 13260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13261  011040  0E0A               	movlw	10
 13262  011042  6EE6               	movwf	postinc1,c
 13263  011044  0E00               	movlw	0
 13264  011046  6EE6               	movwf	postinc1,c
 13265                           
 13266                           ;stkvar	_e @ sp[(-58)+34]
 13267  011048  0EE8               	movlw	-24
 13268  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13269  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13270  011056  EC4A  F0B6         	call	___awdiv	;wreg free
 13271                           
 13272                           ;stkvar	_e @ sp[(-56)+34]
 13273  01105A  0EEA               	movlw	-22
 13274  01105C  0060  F097  FFE3   	movff	btemp,plusw1
 13275  011062  0EEB               	movlw	-21
 13276  011064  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13277                           
 13278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13279                           ;stkvar	_p @ sp[(-56)+40]
 13280  01106A  50E1               	movf	fsr1l,w,c
 13281  01106C  0FF0               	addlw	-16
 13282  01106E  6ED9               	movwf	fsr2l,c
 13283  011070  50E2               	movf	fsr1h,w,c
 13284  011072  6EDA               	movwf	fsr2h,c
 13285  011074  0EFF               	movlw	255
 13286  011076  22DA               	addwfc	fsr2h,f,c
 13287  011078  06DE               	decf	postinc2,f,c
 13288  01107A  0E00               	movlw	0
 13289  01107C  5ADD               	subwfb	postdec2,f,c
 13290                           
 13291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13292                           ;stkvar	_w @ sp[(-56)+38]
 13293  01107E  50E1               	movf	fsr1l,w,c
 13294  011080  0FEE               	addlw	-18
 13295  011082  6ED9               	movwf	fsr2l,c
 13296  011084  50E2               	movf	fsr1h,w,c
 13297  011086  6EDA               	movwf	fsr2h,c
 13298  011088  0EFF               	movlw	255
 13299  01108A  22DA               	addwfc	fsr2h,f,c
 13300  01108C  06DE               	decf	postinc2,f,c
 13301  01108E  0E00               	movlw	0
 13302  011090  5ADD               	subwfb	postdec2,f,c
 13303  011092                     l10464:
 13304                           
 13305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13306                           ;stkvar	_e @ sp[(-56)+34]
 13307  011092  0EEA               	movlw	-22
 13308  011094  006F FF8C  F025    	movff	plusw1,btemp
 13309  01109A  0EEB               	movlw	-21
 13310  01109C  50E3               	movf	plusw1,w,c
 13311  01109E  1025               	iorwf	btemp^0,w,c
 13312  0110A0  A4D8               	btfss	status,2,c
 13313  0110A2  D7A6               	goto	l10454
 13314                           
 13315                           ;stkvar	_p @ sp[(-56)+40]
 13316  0110A4  0EF1               	movlw	-15
 13317  0110A6  BEE3               	btfsc	plusw1,7,c
 13318  0110A8  D007               	goto	u10070
 13319  0110AA  0EF1               	movlw	-15
 13320  0110AC  50E3               	movf	plusw1,w,c
 13321  0110AE  E1A0               	bnz	l10454
 13322  0110B0  0EF0               	movlw	-16
 13323  0110B2  04E3               	decf	plusw1,w,c
 13324  0110B4  B0D8               	btfsc	status,0,c
 13325  0110B6  D79C               	goto	l10454
 13326  0110B8                     u10070:
 13327                           
 13328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13329                           ;stkvar	_i @ sp[(-56)+36]
 13330  0110B8  50E1               	movf	fsr1l,w,c
 13331  0110BA  0FEC               	addlw	-20
 13332  0110BC  6ED9               	movwf	fsr2l,c
 13333  0110BE  50E2               	movf	fsr1h,w,c
 13334  0110C0  6EDA               	movwf	fsr2h,c
 13335  0110C2  0EFF               	movlw	255
 13336  0110C4  22DA               	addwfc	fsr2h,f,c
 13337  0110C6  06DE               	decf	postinc2,f,c
 13338  0110C8  0E00               	movlw	0
 13339  0110CA  5ADD               	subwfb	postdec2,f,c
 13340                           
 13341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13342                           ;stkvar	_sign @ sp[(-56)+42]
 13343  0110CC  0EF2               	movlw	-14
 13344  0110CE  006F FF8C  F025    	movff	plusw1,btemp
 13345  0110D4  0EF3               	movlw	-13
 13346  0110D6  50E3               	movf	plusw1,w,c
 13347  0110D8  1025               	iorwf	btemp^0,w,c
 13348  0110DA  A4D8               	btfss	status,2,c
 13349  0110DC  D002               	goto	l10474
 13350  0110DE  0E2B               	movlw	43
 13351  0110E0  D001               	goto	L11
 13352  0110E2                     l10474:
 13353  0110E2  0E2D               	movlw	45
 13354  0110E4                     L11:
 13355  0110E4  6E2F               	movwf	(btemp+10)^0,c
 13356  0110E6  0E00               	movlw	0
 13357  0110E8  6E30               	movwf	(btemp+11)^0,c
 13358                           
 13359                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13360  0110EA  0ECC               	movlw	-52
 13361  0110EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13362  0110F2  0ECD               	movlw	-51
 13363  0110F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13364                           
 13365                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13366                           ;stkvar	_i @ sp[(-56)+36]
 13367  0110FA  0EEC               	movlw	-20
 13368  0110FC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13369  011102  0EED               	movlw	-19
 13370  011104  006F FF8C  F030    	movff	plusw1,btemp+11
 13371  01110A  0E94               	movlw	low _dbuf
 13372  01110C  242F               	addwf	(btemp+10)^0,w,c
 13373  01110E  6ED9               	movwf	fsr2l,c
 13374  011110  0E03               	movlw	high _dbuf
 13375  011112  2030               	addwfc	(btemp+11)^0,w,c
 13376  011114  6EDA               	movwf	fsr2h,c
 13377  011116  0ECC               	movlw	-52
 13378  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13379                           
 13380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13381                           ;stkvar	_w @ sp[(-56)+38]
 13382  01111E  50E1               	movf	fsr1l,w,c
 13383  011120  0FEE               	addlw	-18
 13384  011122  6ED9               	movwf	fsr2l,c
 13385  011124  50E2               	movf	fsr1h,w,c
 13386  011126  6EDA               	movwf	fsr2h,c
 13387  011128  0EFF               	movlw	255
 13388  01112A  22DA               	addwfc	fsr2h,f,c
 13389  01112C  06DE               	decf	postinc2,f,c
 13390  01112E  0E00               	movlw	0
 13391  011130  5ADD               	subwfb	postdec2,f,c
 13392                           
 13393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13394                           ;stkvar	_i @ sp[(-56)+36]
 13395  011132  50E1               	movf	fsr1l,w,c
 13396  011134  0FEC               	addlw	-20
 13397  011136  6ED9               	movwf	fsr2l,c
 13398  011138  50E2               	movf	fsr1h,w,c
 13399  01113A  6EDA               	movwf	fsr2h,c
 13400  01113C  0EFF               	movlw	255
 13401  01113E  22DA               	addwfc	fsr2h,f,c
 13402  011140  06DE               	decf	postinc2,f,c
 13403  011142  0E00               	movlw	0
 13404  011144  5ADD               	subwfb	postdec2,f,c
 13405  011146  0EBF               	movlw	191
 13406  011148  6E2F               	movwf	(btemp+10)^0,c
 13407  01114A  0EFF               	movlw	255
 13408  01114C  6E30               	movwf	(btemp+11)^0,c
 13409                           
 13410                           ;stkvar	_c @ sp[(-56)+-7]
 13411  01114E  0EC1               	movlw	-63
 13412  011150  50E3               	movf	plusw1,w,c
 13413  011152  6E2D               	movwf	(btemp+8)^0,c
 13414  011154  6A2E               	clrf	(btemp+9)^0,c
 13415  011156  502F               	movf	(btemp+10)^0,w,c
 13416  011158  262D               	addwf	(btemp+8)^0,f,c
 13417  01115A  5030               	movf	(btemp+11)^0,w,c
 13418  01115C  222E               	addwfc	(btemp+9)^0,f,c
 13419  01115E  502E               	movf	(btemp+9)^0,w,c
 13420  011160  E106               	bnz	u10090
 13421  011162  0E1A               	movlw	26
 13422  011164  5C2D               	subwf	(btemp+8)^0,w,c
 13423  011166  B0D8               	btfsc	status,0,c
 13424  011168  D002               	goto	u10090
 13425  01116A  0E01               	movlw	1
 13426  01116C  D001               	goto	u10100
 13427  01116E                     u10090:
 13428  01116E  0E00               	movlw	0
 13429  011170                     u10100:
 13430  011170  6E2F               	movwf	(btemp+10)^0,c
 13431  011172  6A30               	clrf	(btemp+11)^0,c
 13432                           
 13433                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13434  011174  0EC8               	movlw	-56
 13435  011176  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13436  01117C  0EC9               	movlw	-55
 13437  01117E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13438                           
 13439                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13440  011184  0EC8               	movlw	-56
 13441  011186  006F FF8C  F025    	movff	plusw1,btemp
 13442  01118C  0EC9               	movlw	-55
 13443  01118E  50E3               	movf	plusw1,w,c
 13444  011190  1025               	iorwf	btemp^0,w,c
 13445  011192  A4D8               	btfss	status,2,c
 13446  011194  D002               	goto	l10490
 13447  011196  0E65               	movlw	101
 13448  011198  D001               	goto	L12
 13449  01119A                     l10490:
 13450  01119A  0E45               	movlw	69
 13451  01119C                     L12:
 13452  01119C  6E2F               	movwf	(btemp+10)^0,c
 13453  01119E  0E00               	movlw	0
 13454  0111A0  6E30               	movwf	(btemp+11)^0,c
 13455                           
 13456                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13457  0111A2  0ECA               	movlw	-54
 13458  0111A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13459  0111AA  0ECB               	movlw	-53
 13460  0111AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13461                           
 13462                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13463                           ;stkvar	_i @ sp[(-56)+36]
 13464  0111B2  0EEC               	movlw	-20
 13465  0111B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13466  0111BA  0EED               	movlw	-19
 13467  0111BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13468  0111C2  0E94               	movlw	low _dbuf
 13469  0111C4  242F               	addwf	(btemp+10)^0,w,c
 13470  0111C6  6ED9               	movwf	fsr2l,c
 13471  0111C8  0E03               	movlw	high _dbuf
 13472  0111CA  2030               	addwfc	(btemp+11)^0,w,c
 13473  0111CC  6EDA               	movwf	fsr2h,c
 13474  0111CE  0ECA               	movlw	-54
 13475  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13476                           
 13477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13478                           ;stkvar	_w @ sp[(-56)+38]
 13479  0111D6  50E1               	movf	fsr1l,w,c
 13480  0111D8  0FEE               	addlw	-18
 13481  0111DA  6ED9               	movwf	fsr2l,c
 13482  0111DC  50E2               	movf	fsr1h,w,c
 13483  0111DE  6EDA               	movwf	fsr2h,c
 13484  0111E0  0EFF               	movlw	255
 13485  0111E2  22DA               	addwfc	fsr2h,f,c
 13486  0111E4  06DE               	decf	postinc2,f,c
 13487  0111E6  0E00               	movlw	0
 13488  0111E8  5ADD               	subwfb	postdec2,f,c
 13489                           
 13490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13491                           ;stkvar	_i @ sp[(-56)+36]
 13492  0111EA  0EEC               	movlw	-20
 13493  0111EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13494  0111F2  0EED               	movlw	-19
 13495  0111F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13496  0111FA  0E94               	movlw	low _dbuf
 13497  0111FC  242F               	addwf	(btemp+10)^0,w,c
 13498  0111FE  6E2D               	movwf	(btemp+8)^0,c
 13499  011200  0E03               	movlw	high _dbuf
 13500  011202  2030               	addwfc	(btemp+11)^0,w,c
 13501  011204  6E2E               	movwf	(btemp+9)^0,c
 13502  011206  0060  F0B7  FFE6   	movff	btemp+8,postinc1
 13503  01120C  0060  F0BB  FFE6   	movff	btemp+9,postinc1
 13504                           
 13505                           ;stkvar	_n @ sp[(-58)+32]
 13506  011212  0E94               	movlw	low _dbuf
 13507  011214  6E2F               	movwf	(btemp+10)^0,c
 13508  011216  0E03               	movlw	high _dbuf
 13509  011218  6E30               	movwf	(btemp+11)^0,c
 13510  01121A  0EE6               	movlw	-26
 13511  01121C  50E3               	movf	plusw1,w,c
 13512  01121E  262F               	addwf	(btemp+10)^0,f,c
 13513  011220  0EE7               	movlw	-25
 13514  011222  50E3               	movf	plusw1,w,c
 13515  011224  2230               	addwfc	(btemp+11)^0,f,c
 13516  011226  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 13517  01122C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 13518  011232  EC45  F0BC         	call	_strcpy	;wreg free
 13519  011236  EF16  F081         	goto	l10242
 13520  01123A                     l2049:
 13521                           
 13522                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13523  01123A  0EC1               	movlw	193
 13524  01123C  26E1               	addwf	fsr1l,f,c
 13525  01123E  0EFF               	movlw	255
 13526  011240  22E2               	addwfc	fsr1h,f,c
 13527  011242  0012               	return		;funcret
 13528  011244                     __end_of_efgtoa:
 13529                           	opt callstack 0
 13530                           
 13531 ;; *************** function _tolower *****************
 13532 ;; Defined at:
 13533 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13534 ;; Parameters:    Size  Location     Type
 13535 ;;  c               2  [STACK] int 
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;		None
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  2  [STACK] int 
 13540 ;; Registers used:
 13541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13551 ;;Total ram usage:        0 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:    8
 13554 ;; This function calls:
 13555 ;;		_isupper
 13556 ;; This function is called by:
 13557 ;;		_efgtoa
 13558 ;;		_vfpfcnvrt
 13559 ;; This function uses a reentrant model
 13560 ;;
 13561                           
 13562                           	psect	text49
 13563  018312                     __ptext49:
 13564                           	opt callstack 0
 13565  018312                     _tolower:
 13566                           	opt callstack 0
 13567                           
 13568                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13569  018312  52E6               	movf	postinc1,f,c
 13570  018314  52E6               	movf	postinc1,f,c
 13571                           
 13572                           ;stkvar	_c @ sp[(-2)+-2]
 13573                           
 13574                           ;incstack = 0
 13575  018316  0EFC               	movlw	-4
 13576  018318  50E3               	movf	plusw1,w,c
 13577  01831A  0FBF               	addlw	191
 13578  01831C  6E2F               	movwf	(btemp+10)^0,c
 13579  01831E  0EFD               	movlw	-3
 13580  018320  006F FF8C  F030    	movff	plusw1,btemp+11
 13581  018326  0EFF               	movlw	255
 13582  018328  2230               	addwfc	(btemp+11)^0,f,c
 13583  01832A  5030               	movf	(btemp+11)^0,w,c
 13584  01832C  E106               	bnz	u4930
 13585  01832E  0E1A               	movlw	26
 13586  018330  5C2F               	subwf	(btemp+10)^0,w,c
 13587  018332  B0D8               	btfsc	status,0,c
 13588  018334  D002               	goto	u4930
 13589  018336  0E01               	movlw	1
 13590  018338  D001               	goto	u4940
 13591  01833A                     u4930:
 13592  01833A  0E00               	movlw	0
 13593  01833C                     u4940:
 13594  01833C  6E2F               	movwf	(btemp+10)^0,c
 13595  01833E  6A30               	clrf	(btemp+11)^0,c
 13596                           
 13597                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13598  018340  0EFE               	movlw	-2
 13599  018342  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13600  018348  0EFF               	movlw	-1
 13601  01834A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13602                           
 13603                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13604  018350  0EFE               	movlw	-2
 13605  018352  006F FF8C  F025    	movff	plusw1,btemp
 13606  018358  0EFF               	movlw	-1
 13607  01835A  50E3               	movf	plusw1,w,c
 13608  01835C  1025               	iorwf	btemp^0,w,c
 13609  01835E  B4D8               	btfsc	status,2,c
 13610  018360  D00D               	goto	l6700
 13611                           
 13612                           ;stkvar	_c @ sp[(-2)+-2]
 13613  018362  0EFC               	movlw	-4
 13614  018364  006F FF8C  F025    	movff	plusw1,btemp
 13615  01836A  0EFD               	movlw	-3
 13616  01836C  006F FF8C  F026    	movff	plusw1,btemp+1
 13617  018372  0E20               	movlw	32
 13618  018374  1225               	iorwf	btemp^0,f,c
 13619  018376  0E00               	movlw	0
 13620  018378  1226               	iorwf	(btemp+1)^0,f,c
 13621  01837A  D008               	goto	l3072
 13622  01837C                     l6700:
 13623                           
 13624                           ;stkvar	_c @ sp[(-2)+-2]
 13625  01837C  0EFC               	movlw	-4
 13626  01837E  006F FF8C  F025    	movff	plusw1,btemp
 13627  018384  0EFD               	movlw	-3
 13628  018386  006F FF8C  F026    	movff	plusw1,btemp+1
 13629  01838C                     l3072:
 13630                           
 13631                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13632  01838C  52E5               	movf	postdec1,f,c
 13633  01838E  52E5               	movf	postdec1,f,c
 13634  018390  52E5               	movf	postdec1,f,c
 13635  018392  52E5               	movf	postdec1,f,c
 13636  018394  0012               	return		;funcret
 13637  018396                     __end_of_tolower:
 13638                           	opt callstack 0
 13639                           
 13640 ;; *************** function _isupper *****************
 13641 ;; Defined at:
 13642 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  c               2  [STACK] int 
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;		None
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  2  [STACK] int 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13660 ;;Total ram usage:        0 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    7
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_efgtoa
 13667 ;;		_xtoa
 13668 ;;		_vfpfcnvrt
 13669 ;;		_tolower
 13670 ;; This function uses a reentrant model
 13671 ;;
 13672                           
 13673                           	psect	text50
 13674  018EB8                     __ptext50:
 13675                           	opt callstack 0
 13676  018EB8                     _isupper:
 13677                           	opt callstack 16
 13678                           
 13679                           ;stkvar	_c @ sp[(0)+-2]
 13680                           
 13681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13682                           ;incstack = 0
 13683  018EB8  0EFE               	movlw	-2
 13684  018EBA  50E3               	movf	plusw1,w,c
 13685  018EBC  0FBF               	addlw	191
 13686  018EBE  6E2F               	movwf	(btemp+10)^0,c
 13687  018EC0  0EFF               	movlw	-1
 13688  018EC2  006F FF8C  F030    	movff	plusw1,btemp+11
 13689  018EC8  0EFF               	movlw	255
 13690  018ECA  2230               	addwfc	(btemp+11)^0,f,c
 13691  018ECC  5030               	movf	(btemp+11)^0,w,c
 13692  018ECE  E106               	bnz	u4750
 13693  018ED0  0E1A               	movlw	26
 13694  018ED2  5C2F               	subwf	(btemp+10)^0,w,c
 13695  018ED4  B0D8               	btfsc	status,0,c
 13696  018ED6  D002               	goto	u4750
 13697  018ED8  0E01               	movlw	1
 13698  018EDA  D001               	goto	u4760
 13699  018EDC                     u4750:
 13700  018EDC  0E00               	movlw	0
 13701  018EDE                     u4760:
 13702  018EDE  6E25               	movwf	btemp^0,c
 13703  018EE0  6A26               	clrf	(btemp+1)^0,c
 13704                           
 13705                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13706  018EE2  52E5               	movf	postdec1,f,c
 13707  018EE4  52E5               	movf	postdec1,f,c
 13708  018EE6  0012               	return		;funcret
 13709  018EE8                     __end_of_isupper:
 13710                           	opt callstack 0
 13711                           
 13712 ;; *************** function _strcpy *****************
 13713 ;; Defined at:
 13714 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13715 ;; Parameters:    Size  Location     Type
 13716 ;;  dest            2  [STACK] PTR unsigned char 
 13717 ;;		 -> dbuf(80), 
 13718 ;;  src             2  [STACK] PTR const unsigned char 
 13719 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13720 ;;		 -> dbuf(80), 
 13721 ;; Auto vars:     Size  Location     Type
 13722 ;;  d               2  [STACK] PTR unsigned char 
 13723 ;;		 -> dbuf(80), 
 13724 ;;  s               2  [STACK] PTR const unsigned char 
 13725 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13726 ;;		 -> dbuf(80), 
 13727 ;; Return value:  Size  Location     Type
 13728 ;;                  2  [STACK] PTR unsigned char 
 13729 ;; Registers used:
 13730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13731 ;; Tracked objects:
 13732 ;;		On entry : 0/0
 13733 ;;		On exit  : 0/0
 13734 ;;		Unchanged: 0/0
 13735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13740 ;;Total ram usage:        0 bytes
 13741 ;; Hardware stack levels used:    1
 13742 ;; Hardware stack levels required when called:    7
 13743 ;; This function calls:
 13744 ;;		Nothing
 13745 ;; This function is called by:
 13746 ;;		_efgtoa
 13747 ;; This function uses a reentrant model
 13748 ;;
 13749                           
 13750                           	psect	text51
 13751  01788A                     __ptext51:
 13752                           	opt callstack 0
 13753  01788A                     _strcpy:
 13754                           	opt callstack 0
 13755                           
 13756                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13757  01788A  52E6               	movf	postinc1,f,c
 13758  01788C  52E6               	movf	postinc1,f,c
 13759  01788E  52E6               	movf	postinc1,f,c
 13760  017890  52E6               	movf	postinc1,f,c
 13761                           
 13762                           ;stkvar	_src @ sp[(-4)+-4]
 13763                           
 13764                           ;incstack = 0
 13765  017892  0EF8               	movlw	-8
 13766  017894  006F FF8C  F02F    	movff	plusw1,btemp+10
 13767  01789A  0EF9               	movlw	-7
 13768  01789C  006F FF8C  F030    	movff	plusw1,btemp+11
 13769                           
 13770                           ;stkvar	_s @ sp[(-4)+2]
 13771  0178A2  0EFF               	movlw	-1
 13772  0178A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13773  0178AA  0EFE               	movlw	-2
 13774  0178AC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13775                           
 13776                           ;stkvar	_dest @ sp[(-4)+-2]
 13777  0178B2  0EFA               	movlw	-6
 13778  0178B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13779  0178BA  0EFB               	movlw	-5
 13780  0178BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13781                           
 13782                           ;stkvar	_d @ sp[(-4)+0]
 13783  0178C2  0EFD               	movlw	-3
 13784  0178C4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13785  0178CA  0EFC               	movlw	-4
 13786  0178CC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13787  0178D2                     l10116:
 13788                           
 13789                           ;stkvar	_s @ sp[(-4)+2]
 13790  0178D2  50E1               	movf	fsr1l,w,c
 13791  0178D4  0FFE               	addlw	-2
 13792  0178D6  6ED9               	movwf	fsr2l,c
 13793  0178D8  50E2               	movf	fsr1h,w,c
 13794  0178DA  6EDA               	movwf	fsr2h,c
 13795  0178DC  0EFF               	movlw	255
 13796  0178DE  22DA               	addwfc	fsr2h,f,c
 13797  0178E0  006F FF7C  F02F    	movff	indf2,btemp+10
 13798  0178E6  0E01               	movlw	1
 13799  0178E8  26DE               	addwf	postinc2,f,c
 13800  0178EA  006F FF7C  F030    	movff	indf2,btemp+11
 13801  0178F0  0E00               	movlw	0
 13802  0178F2  22DD               	addwfc	postdec2,f,c
 13803  0178F4  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
 13804  0178FA  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
 13805  017900  0E00               	movlw	low (__mediumconst shr (0+16))
 13806  017902  6EF8               	movwf	tblptru,c
 13807                           
 13808                           ;stkvar	_d @ sp[(-4)+0]
 13809  017904  50E1               	movf	fsr1l,w,c
 13810  017906  0FFC               	addlw	-4
 13811  017908  6ED9               	movwf	fsr2l,c
 13812  01790A  50E2               	movf	fsr1h,w,c
 13813  01790C  6EDA               	movwf	fsr2h,c
 13814  01790E  0EFF               	movlw	255
 13815  017910  22DA               	addwfc	fsr2h,f,c
 13816  017912  006F FF7C  F02F    	movff	indf2,btemp+10
 13817  017918  0E01               	movlw	1
 13818  01791A  26DE               	addwf	postinc2,f,c
 13819  01791C  006F FF7C  F030    	movff	indf2,btemp+11
 13820  017922  0E00               	movlw	0
 13821  017924  22DD               	addwfc	postdec2,f,c
 13822  017926  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
 13823  01792C  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
 13824  017932  0E1F               	movlw	(high __ramtop+-1)
 13825  017934  64F7               	cpfsgt	tblptrh,c
 13826  017936  D003               	bra	u9407
 13827  017938  0008               	tblrd		*
 13828  01793A  50F5               	movf	tablat,w,c
 13829  01793C  D007               	bra	u9400
 13830  01793E                     u9407:
 13831  01793E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13832  017944  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13833  01794A  50EF               	movf	indf0,w,c
 13834  01794C                     u9400:
 13835  01794C  6EDF               	movwf	indf2,c
 13836  01794E  50DF               	movf	indf2,w,c
 13837  017950  A4D8               	btfss	status,2,c
 13838  017952  D7BF               	goto	l10116
 13839                           
 13840                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13841  017954  0EF8               	movlw	248
 13842  017956  26E1               	addwf	fsr1l,f,c
 13843  017958  0EFF               	movlw	255
 13844  01795A  22E2               	addwfc	fsr1h,f,c
 13845  01795C  0012               	return		;funcret
 13846  01795E                     __end_of_strcpy:
 13847                           	opt callstack 0
 13848                           
 13849 ;; *************** function _floorf *****************
 13850 ;; Defined at:
 13851 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;  x               4  [STACK] float 
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;  u               4  [STACK] struct .
 13856 ;;  m               4  [STACK] unsigned long 
 13857 ;;  e               2  [STACK] int 
 13858 ;; Return value:  Size  Location     Type
 13859 ;;                  4  [STACK] float 
 13860 ;; Registers used:
 13861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13862 ;; Tracked objects:
 13863 ;;		On entry : 0/0
 13864 ;;		On exit  : 0/0
 13865 ;;		Unchanged: 0/0
 13866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13871 ;;Total ram usage:        0 bytes
 13872 ;; Hardware stack levels used:    1
 13873 ;; Hardware stack levels required when called:    7
 13874 ;; This function calls:
 13875 ;;		Nothing
 13876 ;; This function is called by:
 13877 ;;		_efgtoa
 13878 ;; This function uses a reentrant model
 13879 ;;
 13880                           
 13881                           	psect	text52
 13882  014D68                     __ptext52:
 13883                           	opt callstack 0
 13884  014D68                     _floorf:
 13885                           	opt callstack 0
 13886                           
 13887                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13888  014D68  0E0A               	movlw	10
 13889  014D6A  26E1               	addwf	fsr1l,f,c
 13890  014D6C  0E00               	movlw	0
 13891  014D6E  22E2               	addwfc	fsr1h,f,c
 13892                           
 13893                           ;incstack = 0
 13894  014D70  0060  F254  F02D   	movff	floorf@F524,btemp+8
 13895  014D76  0060  F258  F02E   	movff	floorf@F524+1,btemp+9
 13896  014D7C  0060  F25C  F02F   	movff	floorf@F524+2,btemp+10
 13897  014D82  0060  F260  F030   	movff	floorf@F524+3,btemp+11
 13898                           
 13899                           ;stkvar	_u @ sp[(-10)+0]
 13900  014D88  0EF6               	movlw	-10
 13901  014D8A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13902  014D90  0EF7               	movlw	-9
 13903  014D92  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13904  014D98  0EF8               	movlw	-8
 13905  014D9A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13906  014DA0  0EF9               	movlw	-7
 13907  014DA2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13908                           
 13909                           ;stkvar	_x @ sp[(-10)+-4]
 13910  014DA8  0EF2               	movlw	-14
 13911  014DAA  006F FF8C  F02D    	movff	plusw1,btemp+8
 13912  014DB0  0EF3               	movlw	-13
 13913  014DB2  006F FF8C  F02E    	movff	plusw1,btemp+9
 13914  014DB8  0EF4               	movlw	-12
 13915  014DBA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13916  014DC0  0EF5               	movlw	-11
 13917  014DC2  006F FF8C  F030    	movff	plusw1,btemp+11
 13918                           
 13919                           ;stkvar	_u @ sp[(-10)+0]
 13920  014DC8  0EF6               	movlw	-10
 13921  014DCA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13922  014DD0  0EF7               	movlw	-9
 13923  014DD2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13924  014DD8  0EF8               	movlw	-8
 13925  014DDA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13926  014DE0  0EF9               	movlw	-7
 13927  014DE2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13928  014DE8  0E81               	movlw	129
 13929  014DEA  6E2F               	movwf	(btemp+10)^0,c
 13930  014DEC  0EFF               	movlw	255
 13931  014DEE  6E30               	movwf	(btemp+11)^0,c
 13932                           
 13933                           ;stkvar	_u @ sp[(-10)+0]
 13934  014DF0  0EF6               	movlw	-10
 13935  014DF2  006F FF8C  F029    	movff	plusw1,btemp+4
 13936  014DF8  0EF7               	movlw	-9
 13937  014DFA  006F FF8C  F02A    	movff	plusw1,btemp+5
 13938  014E00  0EF8               	movlw	-8
 13939  014E02  006F FF8C  F02B    	movff	plusw1,btemp+6
 13940  014E08  0EF9               	movlw	-7
 13941  014E0A  006F FF8C  F02C    	movff	plusw1,btemp+7
 13942  014E10  0E18               	movlw	24
 13943  014E12  D005               	goto	u4960
 13944  014E14                     u4965:
 13945  014E14  90D8               	bcf	status,0,c
 13946  014E16  322C               	rrcf	(btemp+7)^0,f,c
 13947  014E18  322B               	rrcf	(btemp+6)^0,f,c
 13948  014E1A  322A               	rrcf	(btemp+5)^0,f,c
 13949  014E1C  3229               	rrcf	(btemp+4)^0,f,c
 13950  014E1E                     u4960:
 13951  014E1E  2EE8               	decfsz	wreg,f,c
 13952  014E20  D7F9               	goto	u4965
 13953  014E22  0060  F0A4  F02D   	movff	btemp+4,btemp+8
 13954  014E28  0060  F0A8  F02E   	movff	btemp+5,btemp+9
 13955  014E2E  0EFF               	movlw	255
 13956  014E30  162D               	andwf	(btemp+8)^0,f,c
 13957  014E32  0E00               	movlw	0
 13958  014E34  162E               	andwf	(btemp+9)^0,f,c
 13959  014E36  502F               	movf	(btemp+10)^0,w,c
 13960  014E38  262D               	addwf	(btemp+8)^0,f,c
 13961  014E3A  5030               	movf	(btemp+11)^0,w,c
 13962  014E3C  222E               	addwfc	(btemp+9)^0,f,c
 13963                           
 13964                           ;stkvar	_e @ sp[(-10)+8]
 13965  014E3E  0EFE               	movlw	-2
 13966  014E40  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13967  014E46  0EFF               	movlw	-1
 13968  014E48  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13969                           
 13970                           ;stkvar	_e @ sp[(-10)+8]
 13971  014E4E  0EFF               	movlw	-1
 13972  014E50  BEE3               	btfsc	plusw1,7,c
 13973  014E52  D019               	goto	l6714
 13974  014E54  0EFF               	movlw	-1
 13975  014E56  50E3               	movf	plusw1,w,c
 13976  014E58  E108               	bnz	u4970
 13977  014E5A  0EFE               	movlw	-2
 13978  014E5C  006F FF8C  F025    	movff	plusw1,btemp
 13979  014E62  0E17               	movlw	23
 13980  014E64  5E25               	subwf	btemp^0,f,c
 13981  014E66  A0D8               	btfss	status,0,c
 13982  014E68  D00E               	goto	l6714
 13983  014E6A                     u4970:
 13984                           
 13985                           ;stkvar	_x @ sp[(-10)+-4]
 13986  014E6A  0EF2               	movlw	-14
 13987  014E6C  006F FF8C  F025    	movff	plusw1,btemp
 13988  014E72  0EF3               	movlw	-13
 13989  014E74  006F FF8C  F026    	movff	plusw1,btemp+1
 13990  014E7A  0EF4               	movlw	-12
 13991  014E7C  006F FF8C  F027    	movff	plusw1,btemp+2
 13992  014E82  0EF5               	movlw	-11
 13993  014E84  D11F               	goto	L13
 13994  014E86                     l6714:
 13995                           
 13996                           ;stkvar	_e @ sp[(-10)+8]
 13997  014E86  0EFF               	movlw	-1
 13998  014E88  BEE3               	btfsc	plusw1,7,c
 13999  014E8A  D0B4               	goto	l6730
 14000                           
 14001                           ;stkvar	_e @ sp[(-10)+8]
 14002  014E8C  0EFE               	movlw	-2
 14003  014E8E  006F FF8C  F030    	movff	plusw1,btemp+11
 14004  014E94  0EFF               	movlw	255
 14005  014E96  6E29               	movwf	(btemp+4)^0,c
 14006  014E98  0EFF               	movlw	255
 14007  014E9A  6E2A               	movwf	(btemp+5)^0,c
 14008  014E9C  0E7F               	movlw	127
 14009  014E9E  6E2B               	movwf	(btemp+6)^0,c
 14010  014EA0  0E00               	movlw	0
 14011  014EA2  6E2C               	movwf	(btemp+7)^0,c
 14012  014EA4                     u4995:
 14013  014EA4  6630               	tstfsz	(btemp+11)^0,c
 14014  014EA6  D001               	goto	u4996
 14015  014EA8  D007               	goto	u4997
 14016  014EAA                     u4996:
 14017  014EAA  342C               	rlcf	(btemp+7)^0,w,c
 14018  014EAC  322C               	rrcf	(btemp+7)^0,f,c
 14019  014EAE  322B               	rrcf	(btemp+6)^0,f,c
 14020  014EB0  322A               	rrcf	(btemp+5)^0,f,c
 14021  014EB2  3229               	rrcf	(btemp+4)^0,f,c
 14022  014EB4  2E30               	decfsz	(btemp+11)^0,f,c
 14023  014EB6  D7F6               	goto	u4995
 14024  014EB8                     u4997:
 14025                           
 14026                           ;stkvar	_m @ sp[(-10)+4]
 14027  014EB8  0EFA               	movlw	-6
 14028  014EBA  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 14029  014EC0  0EFB               	movlw	-5
 14030  014EC2  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 14031  014EC8  0EFC               	movlw	-4
 14032  014ECA  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14033  014ED0  0EFD               	movlw	-3
 14034  014ED2  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14035                           
 14036                           ;stkvar	_m @ sp[(-10)+4]
 14037                           ;stkvar	_u @ sp[(-10)+0]
 14038  014ED8  0EF6               	movlw	-10
 14039  014EDA  006F FF8C  F02D    	movff	plusw1,btemp+8
 14040  014EE0  0EF7               	movlw	-9
 14041  014EE2  006F FF8C  F02E    	movff	plusw1,btemp+9
 14042  014EE8  0EF8               	movlw	-8
 14043  014EEA  006F FF8C  F02F    	movff	plusw1,btemp+10
 14044  014EF0  0EF9               	movlw	-7
 14045  014EF2  006F FF8C  F030    	movff	plusw1,btemp+11
 14046  014EF8  0EFA               	movlw	-6
 14047  014EFA  50E3               	movf	plusw1,w,c
 14048  014EFC  162D               	andwf	(btemp+8)^0,f,c
 14049  014EFE  0EFB               	movlw	-5
 14050  014F00  50E3               	movf	plusw1,w,c
 14051  014F02  162E               	andwf	(btemp+9)^0,f,c
 14052  014F04  0EFC               	movlw	-4
 14053  014F06  50E3               	movf	plusw1,w,c
 14054  014F08  162F               	andwf	(btemp+10)^0,f,c
 14055  014F0A  0EFD               	movlw	-3
 14056  014F0C  50E3               	movf	plusw1,w,c
 14057  014F0E  1630               	andwf	(btemp+11)^0,f,c
 14058  014F10  502D               	movf	(btemp+8)^0,w,c
 14059  014F12  102E               	iorwf	(btemp+9)^0,w,c
 14060  014F14  102F               	iorwf	(btemp+10)^0,w,c
 14061  014F16  1030               	iorwf	(btemp+11)^0,w,c
 14062  014F18  B4D8               	btfsc	status,2,c
 14063  014F1A  D7A7               	goto	u4970
 14064                           
 14065                           ;stkvar	_u @ sp[(-10)+0]
 14066  014F1C  0EF6               	movlw	-10
 14067  014F1E  006F FF8C  F02D    	movff	plusw1,btemp+8
 14068  014F24  0EF7               	movlw	-9
 14069  014F26  006F FF8C  F02E    	movff	plusw1,btemp+9
 14070  014F2C  0EF8               	movlw	-8
 14071  014F2E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14072  014F34  0EF9               	movlw	-7
 14073  014F36  006F FF8C  F030    	movff	plusw1,btemp+11
 14074  014F3C  0E20               	movlw	32
 14075  014F3E  D005               	goto	u5010
 14076  014F40                     u5015:
 14077  014F40  90D8               	bcf	status,0,c
 14078  014F42  3230               	rrcf	(btemp+11)^0,f,c
 14079  014F44  322F               	rrcf	(btemp+10)^0,f,c
 14080  014F46  322E               	rrcf	(btemp+9)^0,f,c
 14081  014F48  322D               	rrcf	(btemp+8)^0,f,c
 14082  014F4A                     u5010:
 14083  014F4A  2EE8               	decfsz	wreg,f,c
 14084  014F4C  D7F9               	goto	u5015
 14085  014F4E  502D               	movf	(btemp+8)^0,w,c
 14086  014F50  B4D8               	btfsc	status,2,c
 14087  014F52  D028               	goto	l6728
 14088                           
 14089                           ;stkvar	_m @ sp[(-10)+4]
 14090                           ;stkvar	_u @ sp[(-10)+0]
 14091  014F54  0EF6               	movlw	-10
 14092  014F56  50E3               	movf	plusw1,w,c
 14093  014F58  6E25               	movwf	btemp^0,c
 14094  014F5A  0EFA               	movlw	-6
 14095  014F5C  50E3               	movf	plusw1,w,c
 14096  014F5E  2625               	addwf	btemp^0,f,c
 14097  014F60  0EF6               	movlw	-10
 14098  014F62  0060  F097  FFE3   	movff	btemp,plusw1
 14099  014F68  0EF7               	movlw	-9
 14100  014F6A  50E3               	movf	plusw1,w,c
 14101  014F6C  6E25               	movwf	btemp^0,c
 14102  014F6E  0EFB               	movlw	-5
 14103  014F70  50E3               	movf	plusw1,w,c
 14104  014F72  2225               	addwfc	btemp^0,f,c
 14105  014F74  0EF7               	movlw	-9
 14106  014F76  0060  F097  FFE3   	movff	btemp,plusw1
 14107  014F7C  0EF8               	movlw	-8
 14108  014F7E  50E3               	movf	plusw1,w,c
 14109  014F80  6E25               	movwf	btemp^0,c
 14110  014F82  0EFC               	movlw	-4
 14111  014F84  50E3               	movf	plusw1,w,c
 14112  014F86  2225               	addwfc	btemp^0,f,c
 14113  014F88  0EF8               	movlw	-8
 14114  014F8A  0060  F097  FFE3   	movff	btemp,plusw1
 14115  014F90  0EF9               	movlw	-7
 14116  014F92  50E3               	movf	plusw1,w,c
 14117  014F94  6E25               	movwf	btemp^0,c
 14118  014F96  0EFD               	movlw	-3
 14119  014F98  50E3               	movf	plusw1,w,c
 14120  014F9A  2225               	addwfc	btemp^0,f,c
 14121  014F9C  0EF9               	movlw	-7
 14122  014F9E  0060  F097  FFE3   	movff	btemp,plusw1
 14123  014FA4                     l6728:
 14124                           
 14125                           ;stkvar	_m @ sp[(-10)+4]
 14126  014FA4  0EFA               	movlw	-6
 14127  014FA6  006F FF8C  F02D    	movff	plusw1,btemp+8
 14128  014FAC  0EFB               	movlw	-5
 14129  014FAE  006F FF8C  F02E    	movff	plusw1,btemp+9
 14130  014FB4  0EFC               	movlw	-4
 14131  014FB6  006F FF8C  F02F    	movff	plusw1,btemp+10
 14132  014FBC  0EFD               	movlw	-3
 14133  014FBE  006F FF8C  F030    	movff	plusw1,btemp+11
 14134  014FC4  1C2D               	comf	(btemp+8)^0,w,c
 14135  014FC6  6E29               	movwf	(btemp+4)^0,c
 14136  014FC8  1C2E               	comf	(btemp+9)^0,w,c
 14137  014FCA  6E2A               	movwf	(btemp+5)^0,c
 14138  014FCC  1C2F               	comf	(btemp+10)^0,w,c
 14139  014FCE  6E2B               	movwf	(btemp+6)^0,c
 14140  014FD0  1C30               	comf	(btemp+11)^0,w,c
 14141  014FD2  6E2C               	movwf	(btemp+7)^0,c
 14142                           
 14143                           ;stkvar	_u @ sp[(-10)+0]
 14144  014FD4  50E1               	movf	fsr1l,w,c
 14145  014FD6  0FF6               	addlw	-10
 14146  014FD8  6ED9               	movwf	fsr2l,c
 14147  014FDA  50E2               	movf	fsr1h,w,c
 14148  014FDC  6EDA               	movwf	fsr2h,c
 14149  014FDE  0EFF               	movlw	255
 14150  014FE0  22DA               	addwfc	fsr2h,f,c
 14151  014FE2  5029               	movf	(btemp+4)^0,w,c
 14152  014FE4  16DE               	andwf	postinc2,f,c
 14153  014FE6  502A               	movf	(btemp+5)^0,w,c
 14154  014FE8  16DE               	andwf	postinc2,f,c
 14155  014FEA  502B               	movf	(btemp+6)^0,w,c
 14156  014FEC  16DE               	andwf	postinc2,f,c
 14157  014FEE  502C               	movf	(btemp+7)^0,w,c
 14158  014FF0  16DE               	andwf	postinc2,f,c
 14159  014FF2  D05B               	goto	l6738
 14160  014FF4                     l6730:
 14161                           
 14162                           ;stkvar	_u @ sp[(-10)+0]
 14163  014FF4  0EF6               	movlw	-10
 14164  014FF6  006F FF8C  F02D    	movff	plusw1,btemp+8
 14165  014FFC  0EF7               	movlw	-9
 14166  014FFE  006F FF8C  F02E    	movff	plusw1,btemp+9
 14167  015004  0EF8               	movlw	-8
 14168  015006  006F FF8C  F02F    	movff	plusw1,btemp+10
 14169  01500C  0EF9               	movlw	-7
 14170  01500E  006F FF8C  F030    	movff	plusw1,btemp+11
 14171  015014  0E20               	movlw	32
 14172  015016  D005               	goto	u5030
 14173  015018                     u5035:
 14174  015018  90D8               	bcf	status,0,c
 14175  01501A  3230               	rrcf	(btemp+11)^0,f,c
 14176  01501C  322F               	rrcf	(btemp+10)^0,f,c
 14177  01501E  322E               	rrcf	(btemp+9)^0,f,c
 14178  015020  322D               	rrcf	(btemp+8)^0,f,c
 14179  015022                     u5030:
 14180  015022  2EE8               	decfsz	wreg,f,c
 14181  015024  D7F9               	goto	u5035
 14182  015026  662D               	tstfsz	(btemp+8)^0,c
 14183  015028  D009               	goto	l6734
 14184                           
 14185                           ;stkvar	_u @ sp[(-10)+0]
 14186  01502A  0EF6               	movlw	-10
 14187  01502C  6AE3               	clrf	plusw1,c
 14188  01502E  0EF7               	movlw	-9
 14189  015030  6AE3               	clrf	plusw1,c
 14190  015032  0EF8               	movlw	-8
 14191  015034  6AE3               	clrf	plusw1,c
 14192  015036  0EF9               	movlw	-7
 14193  015038  6AE3               	clrf	plusw1,c
 14194  01503A  D037               	goto	l6738
 14195  01503C                     l6734:
 14196                           
 14197                           ;stkvar	_u @ sp[(-10)+0]
 14198  01503C  0EF6               	movlw	-10
 14199  01503E  006F FF8C  F02D    	movff	plusw1,btemp+8
 14200  015044  0EF7               	movlw	-9
 14201  015046  006F FF8C  F02E    	movff	plusw1,btemp+9
 14202  01504C  0EF8               	movlw	-8
 14203  01504E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14204  015054  0EF9               	movlw	-7
 14205  015056  006F FF8C  F030    	movff	plusw1,btemp+11
 14206  01505C  90D8               	bcf	status,0,c
 14207  01505E  342D               	rlcf	(btemp+8)^0,w,c
 14208  015060  6E29               	movwf	(btemp+4)^0,c
 14209  015062  342E               	rlcf	(btemp+9)^0,w,c
 14210  015064  6E2A               	movwf	(btemp+5)^0,c
 14211  015066  342F               	rlcf	(btemp+10)^0,w,c
 14212  015068  6E2B               	movwf	(btemp+6)^0,c
 14213  01506A  3430               	rlcf	(btemp+11)^0,w,c
 14214  01506C  6E2C               	movwf	(btemp+7)^0,c
 14215  01506E  5029               	movf	(btemp+4)^0,w,c
 14216  015070  102A               	iorwf	(btemp+5)^0,w,c
 14217  015072  102B               	iorwf	(btemp+6)^0,w,c
 14218  015074  102C               	iorwf	(btemp+7)^0,w,c
 14219  015076  B4D8               	btfsc	status,2,c
 14220  015078  D018               	goto	l6738
 14221  01507A  0E00               	movlw	0
 14222  01507C  6E2D               	movwf	(btemp+8)^0,c
 14223  01507E  0E00               	movlw	0
 14224  015080  6E2E               	movwf	(btemp+9)^0,c
 14225  015082  0E80               	movlw	128
 14226  015084  6E2F               	movwf	(btemp+10)^0,c
 14227  015086  0EBF               	movlw	191
 14228  015088  6E30               	movwf	(btemp+11)^0,c
 14229                           
 14230                           ;stkvar	_u @ sp[(-10)+0]
 14231  01508A  0EF6               	movlw	-10
 14232  01508C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14233  015092  0EF7               	movlw	-9
 14234  015094  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14235  01509A  0EF8               	movlw	-8
 14236  01509C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14237  0150A2  0EF9               	movlw	-7
 14238  0150A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14239  0150AA                     l6738:
 14240                           
 14241                           ;stkvar	_u @ sp[(-10)+0]
 14242  0150AA  0EF6               	movlw	-10
 14243  0150AC  006F FF8C  F025    	movff	plusw1,btemp
 14244  0150B2  0EF7               	movlw	-9
 14245  0150B4  006F FF8C  F026    	movff	plusw1,btemp+1
 14246  0150BA  0EF8               	movlw	-8
 14247  0150BC  006F FF8C  F027    	movff	plusw1,btemp+2
 14248  0150C2  0EF9               	movlw	-7
 14249  0150C4                     L13:
 14250  0150C4  006F FF8C  F028    	movff	plusw1,btemp+3
 14251                           
 14252                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14253  0150CA  0EF2               	movlw	242
 14254  0150CC  26E1               	addwf	fsr1l,f,c
 14255  0150CE  0EFF               	movlw	255
 14256  0150D0  22E2               	addwfc	fsr1h,f,c
 14257  0150D2  0012               	return		;funcret
 14258  0150D4                     __end_of_floorf:
 14259                           	opt callstack 0
 14260                           
 14261 ;; *************** function ___fpclassifyf *****************
 14262 ;; Defined at:
 14263 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  x               4  [STACK] float 
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;  u               4  [STACK] struct .
 14268 ;;  e               2  [STACK] int 
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  2  [STACK] int 
 14271 ;; Registers used:
 14272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14273 ;; Tracked objects:
 14274 ;;		On entry : 0/0
 14275 ;;		On exit  : 0/0
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14282 ;;Total ram usage:        0 bytes
 14283 ;; Hardware stack levels used:    1
 14284 ;; Hardware stack levels required when called:    7
 14285 ;; This function calls:
 14286 ;;		Nothing
 14287 ;; This function is called by:
 14288 ;;		_efgtoa
 14289 ;; This function uses a reentrant model
 14290 ;;
 14291                           
 14292                           	psect	text53
 14293  01682A                     __ptext53:
 14294                           	opt callstack 0
 14295  01682A                     ___fpclassifyf:
 14296                           	opt callstack 0
 14297                           
 14298                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14299  01682A  0E06               	movlw	6
 14300  01682C  26E1               	addwf	fsr1l,f,c
 14301  01682E  0E00               	movlw	0
 14302  016830  22E2               	addwfc	fsr1h,f,c
 14303                           
 14304                           ;incstack = 0
 14305  016832  0060  F264  F02D   	movff	___fpclassifyf@F463,btemp+8
 14306  016838  0060  F268  F02E   	movff	___fpclassifyf@F463+1,btemp+9
 14307  01683E  0060  F26C  F02F   	movff	___fpclassifyf@F463+2,btemp+10
 14308  016844  0060  F270  F030   	movff	___fpclassifyf@F463+3,btemp+11
 14309                           
 14310                           ;stkvar	_u @ sp[(-6)+0]
 14311  01684A  0EFA               	movlw	-6
 14312  01684C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14313  016852  0EFB               	movlw	-5
 14314  016854  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14315  01685A  0EFC               	movlw	-4
 14316  01685C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14317  016862  0EFD               	movlw	-3
 14318  016864  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14319                           
 14320                           ;stkvar	_x @ sp[(-6)+-4]
 14321  01686A  0EF6               	movlw	-10
 14322  01686C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14323  016872  0EF7               	movlw	-9
 14324  016874  006F FF8C  F02E    	movff	plusw1,btemp+9
 14325  01687A  0EF8               	movlw	-8
 14326  01687C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14327  016882  0EF9               	movlw	-7
 14328  016884  006F FF8C  F030    	movff	plusw1,btemp+11
 14329                           
 14330                           ;stkvar	_u @ sp[(-6)+0]
 14331  01688A  0EFA               	movlw	-6
 14332  01688C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14333  016892  0EFB               	movlw	-5
 14334  016894  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14335  01689A  0EFC               	movlw	-4
 14336  01689C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14337  0168A2  0EFD               	movlw	-3
 14338  0168A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14339                           
 14340                           ;stkvar	_u @ sp[(-6)+0]
 14341  0168AA  0EFA               	movlw	-6
 14342  0168AC  006F FF8C  F02D    	movff	plusw1,btemp+8
 14343  0168B2  0EFB               	movlw	-5
 14344  0168B4  006F FF8C  F02E    	movff	plusw1,btemp+9
 14345  0168BA  0EFC               	movlw	-4
 14346  0168BC  006F FF8C  F02F    	movff	plusw1,btemp+10
 14347  0168C2  0EFD               	movlw	-3
 14348  0168C4  006F FF8C  F030    	movff	plusw1,btemp+11
 14349  0168CA  0E18               	movlw	24
 14350  0168CC  D005               	goto	u4840
 14351  0168CE                     u4845:
 14352  0168CE  90D8               	bcf	status,0,c
 14353  0168D0  3230               	rrcf	(btemp+11)^0,f,c
 14354  0168D2  322F               	rrcf	(btemp+10)^0,f,c
 14355  0168D4  322E               	rrcf	(btemp+9)^0,f,c
 14356  0168D6  322D               	rrcf	(btemp+8)^0,f,c
 14357  0168D8                     u4840:
 14358  0168D8  2EE8               	decfsz	wreg,f,c
 14359  0168DA  D7F9               	goto	u4845
 14360  0168DC  0060  F0B4  F02B   	movff	btemp+8,btemp+6
 14361  0168E2  0060  F0B8  F02C   	movff	btemp+9,btemp+7
 14362  0168E8  0EFF               	movlw	255
 14363  0168EA  162B               	andwf	(btemp+6)^0,f,c
 14364  0168EC  0E00               	movlw	0
 14365  0168EE  162C               	andwf	(btemp+7)^0,f,c
 14366                           
 14367                           ;stkvar	_e @ sp[(-6)+4]
 14368  0168F0  0EFE               	movlw	-2
 14369  0168F2  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14370  0168F8  0EFF               	movlw	-1
 14371  0168FA  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14372                           
 14373                           ;stkvar	_e @ sp[(-6)+4]
 14374  016900  0EFE               	movlw	-2
 14375  016902  006F FF8C  F025    	movff	plusw1,btemp
 14376  016908  0EFF               	movlw	-1
 14377  01690A  50E3               	movf	plusw1,w,c
 14378  01690C  1025               	iorwf	btemp^0,w,c
 14379  01690E  A4D8               	btfss	status,2,c
 14380  016910  D023               	goto	l6676
 14381                           
 14382                           ;stkvar	_u @ sp[(-6)+0]
 14383  016912  0EFA               	movlw	-6
 14384  016914  006F FF8C  F02D    	movff	plusw1,btemp+8
 14385  01691A  0EFB               	movlw	-5
 14386  01691C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14387  016922  0EFC               	movlw	-4
 14388  016924  006F FF8C  F02F    	movff	plusw1,btemp+10
 14389  01692A  0EFD               	movlw	-3
 14390  01692C  006F FF8C  F030    	movff	plusw1,btemp+11
 14391  016932  90D8               	bcf	status,0,c
 14392  016934  342D               	rlcf	(btemp+8)^0,w,c
 14393  016936  6E29               	movwf	(btemp+4)^0,c
 14394  016938  342E               	rlcf	(btemp+9)^0,w,c
 14395  01693A  6E2A               	movwf	(btemp+5)^0,c
 14396  01693C  342F               	rlcf	(btemp+10)^0,w,c
 14397  01693E  6E2B               	movwf	(btemp+6)^0,c
 14398  016940  3430               	rlcf	(btemp+11)^0,w,c
 14399  016942  6E2C               	movwf	(btemp+7)^0,c
 14400  016944  5029               	movf	(btemp+4)^0,w,c
 14401  016946  102A               	iorwf	(btemp+5)^0,w,c
 14402  016948  102B               	iorwf	(btemp+6)^0,w,c
 14403  01694A  102C               	iorwf	(btemp+7)^0,w,c
 14404  01694C  A4D8               	btfss	status,2,c
 14405  01694E  D002               	goto	l6672
 14406  016950  0E02               	movlw	2
 14407  016952  D02E               	goto	L14
 14408  016954                     l6672:
 14409  016954  0E03               	movlw	3
 14410  016956  D02C               	goto	L14
 14411  016958                     l6676:
 14412                           
 14413                           ;stkvar	_e @ sp[(-6)+4]
 14414  016958  0EFE               	movlw	-2
 14415  01695A  28E3               	incf	plusw1,w,c
 14416  01695C  E128               	bnz	l6682
 14417  01695E  0EFF               	movlw	-1
 14418  016960  50E3               	movf	plusw1,w,c
 14419  016962  A4D8               	btfss	status,2,c
 14420  016964  D024               	goto	l6682
 14421                           
 14422                           ;stkvar	_u @ sp[(-6)+0]
 14423  016966  0EFA               	movlw	-6
 14424  016968  006F FF8C  F02D    	movff	plusw1,btemp+8
 14425  01696E  0EFB               	movlw	-5
 14426  016970  006F FF8C  F02E    	movff	plusw1,btemp+9
 14427  016976  0EFC               	movlw	-4
 14428  016978  006F FF8C  F02F    	movff	plusw1,btemp+10
 14429  01697E  0EFD               	movlw	-3
 14430  016980  006F FF8C  F030    	movff	plusw1,btemp+11
 14431  016986  0E09               	movlw	9
 14432  016988                     u4885:
 14433  016988  90D8               	bcf	status,0,c
 14434  01698A  362D               	rlcf	(btemp+8)^0,f,c
 14435  01698C  362E               	rlcf	(btemp+9)^0,f,c
 14436  01698E  362F               	rlcf	(btemp+10)^0,f,c
 14437  016990  3630               	rlcf	(btemp+11)^0,f,c
 14438  016992  2EE8               	decfsz	wreg,f,c
 14439  016994  D7F9               	goto	u4885
 14440  016996  502D               	movf	(btemp+8)^0,w,c
 14441  016998  102E               	iorwf	(btemp+9)^0,w,c
 14442  01699A  102F               	iorwf	(btemp+10)^0,w,c
 14443  01699C  1030               	iorwf	(btemp+11)^0,w,c
 14444  01699E  A4D8               	btfss	status,2,c
 14445  0169A0  D002               	goto	u4890
 14446  0169A2  0E01               	movlw	1
 14447  0169A4  D001               	goto	u4900
 14448  0169A6                     u4890:
 14449  0169A6  0E00               	movlw	0
 14450  0169A8                     u4900:
 14451  0169A8  6E25               	movwf	btemp^0,c
 14452  0169AA  6A26               	clrf	(btemp+1)^0,c
 14453  0169AC  D004               	goto	l2908
 14454  0169AE                     l6682:
 14455  0169AE  0E04               	movlw	4
 14456  0169B0                     L14:
 14457  0169B0  6E25               	movwf	btemp^0,c
 14458  0169B2  0E00               	movlw	0
 14459  0169B4  6E26               	movwf	(btemp+1)^0,c
 14460  0169B6                     l2908:
 14461                           
 14462                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14463  0169B6  0EF6               	movlw	246
 14464  0169B8  26E1               	addwf	fsr1l,f,c
 14465  0169BA  0EFF               	movlw	255
 14466  0169BC  22E2               	addwfc	fsr1h,f,c
 14467  0169BE  0012               	return		;funcret
 14468  0169C0                     __end_of___fpclassifyf:
 14469                           	opt callstack 0
 14470                           
 14471 ;; *************** function ___fltol *****************
 14472 ;; Defined at:
 14473 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;  f1              4  [STACK] int 
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;  exp1            1  [STACK] unsigned char 
 14478 ;;  sign1           1  [STACK] unsigned char 
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  4  [STACK] long 
 14481 ;; Registers used:
 14482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;Total ram usage:        0 bytes
 14493 ;; Hardware stack levels used:    1
 14494 ;; Hardware stack levels required when called:    7
 14495 ;; This function calls:
 14496 ;;		Nothing
 14497 ;; This function is called by:
 14498 ;;		_calc_bsoc
 14499 ;;		_efgtoa
 14500 ;; This function uses a reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text54
 14504  0169C0                     __ptext54:
 14505                           	opt callstack 0
 14506  0169C0                     ___fltol:
 14507                           	opt callstack 0
 14508                           
 14509                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14510  0169C0  52E6               	movf	postinc1,f,c
 14511  0169C2  52E6               	movf	postinc1,f,c
 14512                           
 14513                           ;stkvar	_f1 @ sp[(-2)+-4]
 14514                           
 14515                           ;incstack = 0
 14516  0169C4  0EFA               	movlw	-6
 14517  0169C6  006F FF8C  F02D    	movff	plusw1,btemp+8
 14518  0169CC  0EFB               	movlw	-5
 14519  0169CE  006F FF8C  F02E    	movff	plusw1,btemp+9
 14520  0169D4  0EFC               	movlw	-4
 14521  0169D6  006F FF8C  F02F    	movff	plusw1,btemp+10
 14522  0169DC  0EFD               	movlw	-3
 14523  0169DE  006F FF8C  F030    	movff	plusw1,btemp+11
 14524  0169E4  0E18               	movlw	24
 14525  0169E6  D005               	goto	u7990
 14526  0169E8                     u7995:
 14527  0169E8  90D8               	bcf	status,0,c
 14528  0169EA  3230               	rrcf	(btemp+11)^0,f,c
 14529  0169EC  322F               	rrcf	(btemp+10)^0,f,c
 14530  0169EE  322E               	rrcf	(btemp+9)^0,f,c
 14531  0169F0  322D               	rrcf	(btemp+8)^0,f,c
 14532  0169F2                     u7990:
 14533  0169F2  2EE8               	decfsz	wreg,f,c
 14534  0169F4  D7F9               	goto	u7995
 14535                           
 14536                           ;stkvar	_exp1 @ sp[(-2)+0]
 14537  0169F6  0EFE               	movlw	-2
 14538  0169F8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14539  0169FE  0EFE               	movlw	-2
 14540  016A00  50E3               	movf	plusw1,w,c
 14541  016A02  A4D8               	btfss	status,2,c
 14542  016A04  D006               	goto	l8490
 14543  016A06                     u8000:
 14544  016A06  0E00               	movlw	0
 14545  016A08  6E25               	movwf	btemp^0,c
 14546  016A0A  6A26               	clrf	(btemp+1)^0,c
 14547  016A0C  6A27               	clrf	(btemp+2)^0,c
 14548  016A0E  6A28               	clrf	(btemp+3)^0,c
 14549  016A10  D08B               	goto	l2524
 14550  016A12                     l8490:
 14551                           
 14552                           ;stkvar	_f1 @ sp[(-2)+-4]
 14553  016A12  0EFA               	movlw	-6
 14554  016A14  006F FF8C  F02D    	movff	plusw1,btemp+8
 14555  016A1A  0EFB               	movlw	-5
 14556  016A1C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14557  016A22  0EFC               	movlw	-4
 14558  016A24  006F FF8C  F02F    	movff	plusw1,btemp+10
 14559  016A2A  0EFD               	movlw	-3
 14560  016A2C  006F FF8C  F030    	movff	plusw1,btemp+11
 14561  016A32  0E20               	movlw	32
 14562  016A34  D005               	goto	u8010
 14563  016A36                     u8015:
 14564  016A36  90D8               	bcf	status,0,c
 14565  016A38  3230               	rrcf	(btemp+11)^0,f,c
 14566  016A3A  322F               	rrcf	(btemp+10)^0,f,c
 14567  016A3C  322E               	rrcf	(btemp+9)^0,f,c
 14568  016A3E  322D               	rrcf	(btemp+8)^0,f,c
 14569  016A40                     u8010:
 14570  016A40  2EE8               	decfsz	wreg,f,c
 14571  016A42  D7F9               	goto	u8015
 14572                           
 14573                           ;stkvar	_sign1 @ sp[(-2)+1]
 14574  016A44  0EFF               	movlw	-1
 14575  016A46  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14576                           
 14577                           ;stkvar	_f1 @ sp[(-2)+-4]
 14578  016A4C  0EFC               	movlw	-4
 14579  016A4E  8EE3               	bsf	plusw1,7,c
 14580                           
 14581                           ;stkvar	_f1 @ sp[(-2)+-4]
 14582  016A50  50E1               	movf	fsr1l,w,c
 14583  016A52  0FFA               	addlw	-6
 14584  016A54  6ED9               	movwf	fsr2l,c
 14585  016A56  50E2               	movf	fsr1h,w,c
 14586  016A58  6EDA               	movwf	fsr2h,c
 14587  016A5A  0EFF               	movlw	255
 14588  016A5C  22DA               	addwfc	fsr2h,f,c
 14589  016A5E  0EFF               	movlw	255
 14590  016A60  16DE               	andwf	postinc2,f,c
 14591  016A62  0EFF               	movlw	255
 14592  016A64  16DE               	andwf	postinc2,f,c
 14593  016A66  0EFF               	movlw	255
 14594  016A68  16DE               	andwf	postinc2,f,c
 14595  016A6A  0E00               	movlw	0
 14596  016A6C  16DE               	andwf	postinc2,f,c
 14597                           
 14598                           ;stkvar	_exp1 @ sp[(-2)+0]
 14599  016A6E  0EFE               	movlw	-2
 14600  016A70  006F FF8C  F025    	movff	plusw1,btemp
 14601  016A76  0E96               	movlw	150
 14602  016A78  5E25               	subwf	btemp^0,f,c
 14603  016A7A  0EFE               	movlw	-2
 14604  016A7C  0060  F097  FFE3   	movff	btemp,plusw1
 14605                           
 14606                           ;stkvar	_exp1 @ sp[(-2)+0]
 14607  016A82  0EFE               	movlw	-2
 14608  016A84  AEE3               	btfss	plusw1,7,c
 14609  016A86  D014               	goto	l8508
 14610                           
 14611                           ;stkvar	_exp1 @ sp[(-2)+0]
 14612  016A88  0EFE               	movlw	-2
 14613  016A8A  50E3               	movf	plusw1,w,c
 14614  016A8C  0A80               	xorlw	128
 14615  016A8E  0F97               	addlw	151
 14616  016A90  A0D8               	btfss	status,0,c
 14617  016A92  D7B9               	goto	u8000
 14618  016A94                     l8506:
 14619                           
 14620                           ;stkvar	_f1 @ sp[(-2)+-4]
 14621  016A94  90D8               	bcf	status,0,c
 14622  016A96  0EFD               	movlw	-3
 14623  016A98  32E3               	rrcf	plusw1,f,c
 14624  016A9A  0EFC               	movlw	-4
 14625  016A9C  32E3               	rrcf	plusw1,f,c
 14626  016A9E  0EFB               	movlw	-5
 14627  016AA0  32E3               	rrcf	plusw1,f,c
 14628  016AA2  0EFA               	movlw	-6
 14629  016AA4  32E3               	rrcf	plusw1,f,c
 14630                           
 14631                           ;stkvar	_exp1 @ sp[(-2)+0]
 14632  016AA6  0EFE               	movlw	-2
 14633  016AA8  2AE3               	incf	plusw1,f,c
 14634  016AAA  B4D8               	btfsc	status,2,c
 14635  016AAC  D018               	goto	u8060
 14636  016AAE  D7F2               	goto	l8506
 14637  016AB0                     l8508:
 14638                           
 14639                           ;stkvar	_exp1 @ sp[(-2)+0]
 14640  016AB0  0EFE               	movlw	-2
 14641  016AB2  006F FF8C  F025    	movff	plusw1,btemp
 14642  016AB8  0E1F               	movlw	31
 14643  016ABA  6425               	cpfsgt	btemp^0,c
 14644  016ABC  D00C               	goto	l8516
 14645  016ABE  D7A3               	goto	u8000
 14646  016AC0                     l8514:
 14647                           
 14648                           ;stkvar	_f1 @ sp[(-2)+-4]
 14649  016AC0  90D8               	bcf	status,0,c
 14650  016AC2  0EFA               	movlw	-6
 14651  016AC4  36E3               	rlcf	plusw1,f,c
 14652  016AC6  0EFB               	movlw	-5
 14653  016AC8  36E3               	rlcf	plusw1,f,c
 14654  016ACA  0EFC               	movlw	-4
 14655  016ACC  36E3               	rlcf	plusw1,f,c
 14656  016ACE  0EFD               	movlw	-3
 14657  016AD0  36E3               	rlcf	plusw1,f,c
 14658                           
 14659                           ;stkvar	_exp1 @ sp[(-2)+0]
 14660  016AD2  0EFE               	movlw	-2
 14661  016AD4  06E3               	decf	plusw1,f,c
 14662  016AD6                     l8516:
 14663                           
 14664                           ;stkvar	_exp1 @ sp[(-2)+0]
 14665  016AD6  0EFE               	movlw	-2
 14666  016AD8  50E3               	movf	plusw1,w,c
 14667  016ADA  A4D8               	btfss	status,2,c
 14668  016ADC  D7F1               	goto	l8514
 14669  016ADE                     u8060:
 14670                           
 14671                           ;stkvar	_sign1 @ sp[(-2)+1]
 14672  016ADE  0EFF               	movlw	-1
 14673  016AE0  50E3               	movf	plusw1,w,c
 14674  016AE2  B4D8               	btfsc	status,2,c
 14675  016AE4  D011               	goto	u8080
 14676                           
 14677                           ;stkvar	_f1 @ sp[(-2)+-4]
 14678                           ;stkvar	_f1 @ sp[(-2)+-4]
 14679  016AE6  0EFA               	movlw	-6
 14680  016AE8  6CE3               	negf	plusw1,c
 14681  016AEA  0EFB               	movlw	-5
 14682  016AEC  1EE3               	comf	plusw1,f,c
 14683  016AEE  0EFC               	movlw	-4
 14684  016AF0  1EE3               	comf	plusw1,f,c
 14685  016AF2  0EFD               	movlw	-3
 14686  016AF4  1EE3               	comf	plusw1,f,c
 14687  016AF6  E308               	bnc	u8080
 14688  016AF8  0EFB               	movlw	-5
 14689  016AFA  2AE3               	incf	plusw1,f,c
 14690  016AFC  E305               	bnc	u8080
 14691  016AFE  0EFC               	movlw	-4
 14692  016B00  2AE3               	incf	plusw1,f,c
 14693  016B02  E302               	bnc	u8080
 14694  016B04  0EFD               	movlw	-3
 14695  016B06  2AE3               	incf	plusw1,f,c
 14696  016B08                     u8080:
 14697                           
 14698                           ;stkvar	_f1 @ sp[(-2)+-4]
 14699  016B08  0EFA               	movlw	-6
 14700  016B0A  006F FF8C  F025    	movff	plusw1,btemp
 14701  016B10  0EFB               	movlw	-5
 14702  016B12  006F FF8C  F026    	movff	plusw1,btemp+1
 14703  016B18  0EFC               	movlw	-4
 14704  016B1A  006F FF8C  F027    	movff	plusw1,btemp+2
 14705  016B20  0EFD               	movlw	-3
 14706  016B22  006F FF8C  F028    	movff	plusw1,btemp+3
 14707  016B28                     l2524:
 14708                           
 14709                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14710  016B28  0EFA               	movlw	250
 14711  016B2A  26E1               	addwf	fsr1l,f,c
 14712  016B2C  0EFF               	movlw	255
 14713  016B2E  22E2               	addwfc	fsr1h,f,c
 14714  016B30  0012               	return		;funcret
 14715  016B32                     __end_of___fltol:
 14716                           	opt callstack 0
 14717                           
 14718 ;; *************** function ___flneg *****************
 14719 ;; Defined at:
 14720 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14721 ;; Parameters:    Size  Location     Type
 14722 ;;  f1              4  [STACK] long 
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  4  [STACK] long 
 14727 ;; Registers used:
 14728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14738 ;;Total ram usage:        0 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:    7
 14741 ;; This function calls:
 14742 ;;		Nothing
 14743 ;; This function is called by:
 14744 ;;		_calc_bsoc
 14745 ;;		_efgtoa
 14746 ;; This function uses a reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text55
 14750  0189EE                     __ptext55:
 14751                           	opt callstack 0
 14752  0189EE                     ___flneg:
 14753                           	opt callstack 7
 14754                           
 14755                           ;stkvar	_f1 @ sp[(0)+-4]
 14756                           
 14757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14758                           ;incstack = 0
 14759  0189EE  0EFC               	movlw	-4
 14760  0189F0  50E3               	movf	plusw1,w,c
 14761  0189F2  E10A               	bnz	u7980
 14762  0189F4  0EFD               	movlw	-3
 14763  0189F6  50E3               	movf	plusw1,w,c
 14764  0189F8  E107               	bnz	u7980
 14765  0189FA  0EFE               	movlw	-2
 14766  0189FC  50E3               	movf	plusw1,w,c
 14767  0189FE  E104               	bnz	u7980
 14768  018A00  0EFF               	movlw	-1
 14769  018A02  50E3               	movf	plusw1,w,c
 14770  018A04  B4D8               	btfsc	status,2,c
 14771  018A06  D002               	goto	l8480
 14772  018A08                     u7980:
 14773                           
 14774                           ;stkvar	_f1 @ sp[(0)+-4]
 14775  018A08  0EFF               	movlw	-1
 14776  018A0A  7EE3               	btg	plusw1,7,c
 14777  018A0C                     l8480:
 14778                           
 14779                           ;stkvar	_f1 @ sp[(0)+-4]
 14780  018A0C  0EFC               	movlw	-4
 14781  018A0E  006F FF8C  F025    	movff	plusw1,btemp
 14782  018A14  0EFD               	movlw	-3
 14783  018A16  006F FF8C  F026    	movff	plusw1,btemp+1
 14784  018A1C  0EFE               	movlw	-2
 14785  018A1E  006F FF8C  F027    	movff	plusw1,btemp+2
 14786  018A24  0EFF               	movlw	-1
 14787  018A26  006F FF8C  F028    	movff	plusw1,btemp+3
 14788                           
 14789                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14790  018A2C  52E5               	movf	postdec1,f,c
 14791  018A2E  52E5               	movf	postdec1,f,c
 14792  018A30  52E5               	movf	postdec1,f,c
 14793  018A32  52E5               	movf	postdec1,f,c
 14794  018A34  0012               	return		;funcret
 14795  018A36                     __end_of___flneg:
 14796                           	opt callstack 0
 14797                           
 14798 ;; *************** function ___flge *****************
 14799 ;; Defined at:
 14800 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;  ff1             4  [STACK] long 
 14803 ;;  ff2             4  [STACK] long 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;		None
 14806 ;; Return value:  Size  Location     Type
 14807 ;;		None               void
 14808 ;; Registers used:
 14809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14819 ;;Total ram usage:        0 bytes
 14820 ;; Hardware stack levels used:    1
 14821 ;; Hardware stack levels required when called:    7
 14822 ;; This function calls:
 14823 ;;		Nothing
 14824 ;; This function is called by:
 14825 ;;		_calc_bsoc
 14826 ;;		_efgtoa
 14827 ;; This function uses a reentrant model
 14828 ;;
 14829                           
 14830                           	psect	text56
 14831  016B32                     __ptext56:
 14832                           	opt callstack 0
 14833  016B32                     ___flge:
 14834                           	opt callstack 7
 14835                           
 14836                           ;stkvar	_ff1 @ sp[(0)+-4]
 14837                           
 14838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14839                           ;incstack = 0
 14840  016B32  50E1               	movf	fsr1l,w,c
 14841  016B34  0FFC               	addlw	-4
 14842  016B36  6ED9               	movwf	fsr2l,c
 14843  016B38  50E2               	movf	fsr1h,w,c
 14844  016B3A  6EDA               	movwf	fsr2h,c
 14845  016B3C  0EFF               	movlw	255
 14846  016B3E  22DA               	addwfc	fsr2h,f,c
 14847  016B40  0E00               	movlw	0
 14848  016B42  14DE               	andwf	postinc2,w,c
 14849  016B44  6E2D               	movwf	(btemp+8)^0,c
 14850  016B46  0E00               	movlw	0
 14851  016B48  14DE               	andwf	postinc2,w,c
 14852  016B4A  6E2E               	movwf	(btemp+9)^0,c
 14853  016B4C  0E80               	movlw	128
 14854  016B4E  14DE               	andwf	postinc2,w,c
 14855  016B50  6E2F               	movwf	(btemp+10)^0,c
 14856  016B52  0E7F               	movlw	127
 14857  016B54  14DE               	andwf	postinc2,w,c
 14858  016B56  6E30               	movwf	(btemp+11)^0,c
 14859  016B58  502D               	movf	(btemp+8)^0,w,c
 14860  016B5A  102E               	iorwf	(btemp+9)^0,w,c
 14861  016B5C  102F               	iorwf	(btemp+10)^0,w,c
 14862  016B5E  1030               	iorwf	(btemp+11)^0,w,c
 14863  016B60  A4D8               	btfss	status,2,c
 14864  016B62  D008               	goto	l8454
 14865                           
 14866                           ;stkvar	_ff1 @ sp[(0)+-4]
 14867  016B64  0EFC               	movlw	-4
 14868  016B66  6AE3               	clrf	plusw1,c
 14869  016B68  0EFD               	movlw	-3
 14870  016B6A  6AE3               	clrf	plusw1,c
 14871  016B6C  0EFE               	movlw	-2
 14872  016B6E  6AE3               	clrf	plusw1,c
 14873  016B70  0EFF               	movlw	-1
 14874  016B72  6AE3               	clrf	plusw1,c
 14875  016B74                     l8454:
 14876                           
 14877                           ;stkvar	_ff2 @ sp[(0)+-8]
 14878  016B74  50E1               	movf	fsr1l,w,c
 14879  016B76  0FF8               	addlw	-8
 14880  016B78  6ED9               	movwf	fsr2l,c
 14881  016B7A  50E2               	movf	fsr1h,w,c
 14882  016B7C  6EDA               	movwf	fsr2h,c
 14883  016B7E  0EFF               	movlw	255
 14884  016B80  22DA               	addwfc	fsr2h,f,c
 14885  016B82  0E00               	movlw	0
 14886  016B84  14DE               	andwf	postinc2,w,c
 14887  016B86  6E2D               	movwf	(btemp+8)^0,c
 14888  016B88  0E00               	movlw	0
 14889  016B8A  14DE               	andwf	postinc2,w,c
 14890  016B8C  6E2E               	movwf	(btemp+9)^0,c
 14891  016B8E  0E80               	movlw	128
 14892  016B90  14DE               	andwf	postinc2,w,c
 14893  016B92  6E2F               	movwf	(btemp+10)^0,c
 14894  016B94  0E7F               	movlw	127
 14895  016B96  14DE               	andwf	postinc2,w,c
 14896  016B98  6E30               	movwf	(btemp+11)^0,c
 14897  016B9A  502D               	movf	(btemp+8)^0,w,c
 14898  016B9C  102E               	iorwf	(btemp+9)^0,w,c
 14899  016B9E  102F               	iorwf	(btemp+10)^0,w,c
 14900  016BA0  1030               	iorwf	(btemp+11)^0,w,c
 14901  016BA2  A4D8               	btfss	status,2,c
 14902  016BA4  D008               	goto	l2490
 14903                           
 14904                           ;stkvar	_ff2 @ sp[(0)+-8]
 14905  016BA6  0EF8               	movlw	-8
 14906  016BA8  6AE3               	clrf	plusw1,c
 14907  016BAA  0EF9               	movlw	-7
 14908  016BAC  6AE3               	clrf	plusw1,c
 14909  016BAE  0EFA               	movlw	-6
 14910  016BB0  6AE3               	clrf	plusw1,c
 14911  016BB2  0EFB               	movlw	-5
 14912  016BB4  6AE3               	clrf	plusw1,c
 14913  016BB6                     l2490:
 14914                           
 14915                           ;stkvar	_ff1 @ sp[(0)+-4]
 14916  016BB6  0EFF               	movlw	-1
 14917  016BB8  AEE3               	btfss	plusw1,7,c
 14918  016BBA  D024               	goto	l8460
 14919                           
 14920                           ;stkvar	_ff1 @ sp[(0)+-4]
 14921  016BBC  0E00               	movlw	0
 14922  016BBE  6E2D               	movwf	(btemp+8)^0,c
 14923  016BC0  0E00               	movlw	0
 14924  016BC2  6E2E               	movwf	(btemp+9)^0,c
 14925  016BC4  0E00               	movlw	0
 14926  016BC6  6E2F               	movwf	(btemp+10)^0,c
 14927  016BC8  0E80               	movlw	128
 14928  016BCA  6E30               	movwf	(btemp+11)^0,c
 14929  016BCC  0EFC               	movlw	-4
 14930  016BCE  50E3               	movf	plusw1,w,c
 14931  016BD0  5E2D               	subwf	(btemp+8)^0,f,c
 14932  016BD2  0EFD               	movlw	-3
 14933  016BD4  50E3               	movf	plusw1,w,c
 14934  016BD6  5A2E               	subwfb	(btemp+9)^0,f,c
 14935  016BD8  0EFE               	movlw	-2
 14936  016BDA  50E3               	movf	plusw1,w,c
 14937  016BDC  5A2F               	subwfb	(btemp+10)^0,f,c
 14938  016BDE  0EFF               	movlw	-1
 14939  016BE0  50E3               	movf	plusw1,w,c
 14940  016BE2  5A30               	subwfb	(btemp+11)^0,f,c
 14941                           
 14942                           ;stkvar	_ff1 @ sp[(0)+-4]
 14943  016BE4  0EFC               	movlw	-4
 14944  016BE6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14945  016BEC  0EFD               	movlw	-3
 14946  016BEE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14947  016BF4  0EFE               	movlw	-2
 14948  016BF6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14949  016BFC  0EFF               	movlw	-1
 14950  016BFE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14951  016C04                     l8460:
 14952                           
 14953                           ;stkvar	_ff2 @ sp[(0)+-8]
 14954  016C04  0EFB               	movlw	-5
 14955  016C06  AEE3               	btfss	plusw1,7,c
 14956  016C08  D024               	goto	l8464
 14957                           
 14958                           ;stkvar	_ff2 @ sp[(0)+-8]
 14959  016C0A  0E00               	movlw	0
 14960  016C0C  6E2D               	movwf	(btemp+8)^0,c
 14961  016C0E  0E00               	movlw	0
 14962  016C10  6E2E               	movwf	(btemp+9)^0,c
 14963  016C12  0E00               	movlw	0
 14964  016C14  6E2F               	movwf	(btemp+10)^0,c
 14965  016C16  0E80               	movlw	128
 14966  016C18  6E30               	movwf	(btemp+11)^0,c
 14967  016C1A  0EF8               	movlw	-8
 14968  016C1C  50E3               	movf	plusw1,w,c
 14969  016C1E  5E2D               	subwf	(btemp+8)^0,f,c
 14970  016C20  0EF9               	movlw	-7
 14971  016C22  50E3               	movf	plusw1,w,c
 14972  016C24  5A2E               	subwfb	(btemp+9)^0,f,c
 14973  016C26  0EFA               	movlw	-6
 14974  016C28  50E3               	movf	plusw1,w,c
 14975  016C2A  5A2F               	subwfb	(btemp+10)^0,f,c
 14976  016C2C  0EFB               	movlw	-5
 14977  016C2E  50E3               	movf	plusw1,w,c
 14978  016C30  5A30               	subwfb	(btemp+11)^0,f,c
 14979                           
 14980                           ;stkvar	_ff2 @ sp[(0)+-8]
 14981  016C32  0EF8               	movlw	-8
 14982  016C34  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14983  016C3A  0EF9               	movlw	-7
 14984  016C3C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14985  016C42  0EFA               	movlw	-6
 14986  016C44  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14987  016C4A  0EFB               	movlw	-5
 14988  016C4C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14989  016C52                     l8464:
 14990                           
 14991                           ;stkvar	_ff1 @ sp[(0)+-4]
 14992  016C52  0EFF               	movlw	-1
 14993  016C54  7EE3               	btg	plusw1,7,c
 14994                           
 14995                           ;stkvar	_ff2 @ sp[(0)+-8]
 14996  016C56  0EFB               	movlw	-5
 14997  016C58  7EE3               	btg	plusw1,7,c
 14998                           
 14999                           ;stkvar	_ff2 @ sp[(0)+-8]
 15000                           ;stkvar	_ff1 @ sp[(0)+-4]
 15001  016C5A  50E1               	movf	fsr1l,w,c
 15002  016C5C  0FFC               	addlw	-4
 15003  016C5E  6ED9               	movwf	fsr2l,c
 15004  016C60  50E2               	movf	fsr1h,w,c
 15005  016C62  6EDA               	movwf	fsr2h,c
 15006  016C64  0EFF               	movlw	255
 15007  016C66  22DA               	addwfc	fsr2h,f,c
 15008  016C68  0EF8               	movlw	-8
 15009  016C6A  50E3               	movf	plusw1,w,c
 15010  016C6C  5CDE               	subwf	postinc2,w,c
 15011  016C6E  0EF9               	movlw	-7
 15012  016C70  50E3               	movf	plusw1,w,c
 15013  016C72  58DE               	subwfb	postinc2,w,c
 15014  016C74  0EFA               	movlw	-6
 15015  016C76  50E3               	movf	plusw1,w,c
 15016  016C78  58DE               	subwfb	postinc2,w,c
 15017  016C7A  0EFB               	movlw	-5
 15018  016C7C  50E3               	movf	plusw1,w,c
 15019  016C7E  58DE               	subwfb	postinc2,w,c
 15020  016C80  B0D8               	btfsc	status,0,c
 15021  016C82  D002               	goto	l8472
 15022  016C84  9025               	bcf	btemp& (0+255),0,c
 15023  016C86  D001               	goto	l2497
 15024  016C88                     l8472:
 15025  016C88  8025               	bsf	btemp& (0+255),0,c
 15026  016C8A                     l2497:
 15027                           
 15028                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15029  016C8A  0EF8               	movlw	248
 15030  016C8C  26E1               	addwf	fsr1l,f,c
 15031  016C8E  0EFF               	movlw	255
 15032  016C90  22E2               	addwfc	fsr1h,f,c
 15033  016C92  0012               	return		;funcret
 15034  016C94                     __end_of___flge:
 15035                           	opt callstack 0
 15036                           
 15037 ;; *************** function ___fleq *****************
 15038 ;; Defined at:
 15039 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;  ff1             4  [STACK] long 
 15042 ;;  ff2             4  [STACK] long 
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;		None
 15045 ;; Return value:  Size  Location     Type
 15046 ;;		None               void
 15047 ;; Registers used:
 15048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15049 ;; Tracked objects:
 15050 ;;		On entry : 0/0
 15051 ;;		On exit  : 0/0
 15052 ;;		Unchanged: 0/0
 15053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15058 ;;Total ram usage:        0 bytes
 15059 ;; Hardware stack levels used:    1
 15060 ;; Hardware stack levels required when called:    7
 15061 ;; This function calls:
 15062 ;;		Nothing
 15063 ;; This function is called by:
 15064 ;;		_efgtoa
 15065 ;; This function uses a reentrant model
 15066 ;;
 15067                           
 15068                           	psect	text57
 15069  017A2E                     __ptext57:
 15070                           	opt callstack 0
 15071  017A2E                     ___fleq:
 15072                           	opt callstack 16
 15073                           
 15074                           ;stkvar	_ff1 @ sp[(0)+-4]
 15075                           
 15076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15077                           ;incstack = 0
 15078  017A2E  50E1               	movf	fsr1l,w,c
 15079  017A30  0FFC               	addlw	-4
 15080  017A32  6ED9               	movwf	fsr2l,c
 15081  017A34  50E2               	movf	fsr1h,w,c
 15082  017A36  6EDA               	movwf	fsr2h,c
 15083  017A38  0EFF               	movlw	255
 15084  017A3A  22DA               	addwfc	fsr2h,f,c
 15085  017A3C  0E00               	movlw	0
 15086  017A3E  14DE               	andwf	postinc2,w,c
 15087  017A40  6E2D               	movwf	(btemp+8)^0,c
 15088  017A42  0E00               	movlw	0
 15089  017A44  14DE               	andwf	postinc2,w,c
 15090  017A46  6E2E               	movwf	(btemp+9)^0,c
 15091  017A48  0E80               	movlw	128
 15092  017A4A  14DE               	andwf	postinc2,w,c
 15093  017A4C  6E2F               	movwf	(btemp+10)^0,c
 15094  017A4E  0E7F               	movlw	127
 15095  017A50  14DE               	andwf	postinc2,w,c
 15096  017A52  6E30               	movwf	(btemp+11)^0,c
 15097  017A54  502D               	movf	(btemp+8)^0,w,c
 15098  017A56  102E               	iorwf	(btemp+9)^0,w,c
 15099  017A58  102F               	iorwf	(btemp+10)^0,w,c
 15100  017A5A  1030               	iorwf	(btemp+11)^0,w,c
 15101  017A5C  A4D8               	btfss	status,2,c
 15102  017A5E  D008               	goto	l6938
 15103                           
 15104                           ;stkvar	_ff1 @ sp[(0)+-4]
 15105  017A60  0EFC               	movlw	-4
 15106  017A62  6AE3               	clrf	plusw1,c
 15107  017A64  0EFD               	movlw	-3
 15108  017A66  6AE3               	clrf	plusw1,c
 15109  017A68  0EFE               	movlw	-2
 15110  017A6A  6AE3               	clrf	plusw1,c
 15111  017A6C  0EFF               	movlw	-1
 15112  017A6E  6AE3               	clrf	plusw1,c
 15113  017A70                     l6938:
 15114                           
 15115                           ;stkvar	_ff2 @ sp[(0)+-8]
 15116  017A70  50E1               	movf	fsr1l,w,c
 15117  017A72  0FF8               	addlw	-8
 15118  017A74  6ED9               	movwf	fsr2l,c
 15119  017A76  50E2               	movf	fsr1h,w,c
 15120  017A78  6EDA               	movwf	fsr2h,c
 15121  017A7A  0EFF               	movlw	255
 15122  017A7C  22DA               	addwfc	fsr2h,f,c
 15123  017A7E  0E00               	movlw	0
 15124  017A80  14DE               	andwf	postinc2,w,c
 15125  017A82  6E2D               	movwf	(btemp+8)^0,c
 15126  017A84  0E00               	movlw	0
 15127  017A86  14DE               	andwf	postinc2,w,c
 15128  017A88  6E2E               	movwf	(btemp+9)^0,c
 15129  017A8A  0E80               	movlw	128
 15130  017A8C  14DE               	andwf	postinc2,w,c
 15131  017A8E  6E2F               	movwf	(btemp+10)^0,c
 15132  017A90  0E7F               	movlw	127
 15133  017A92  14DE               	andwf	postinc2,w,c
 15134  017A94  6E30               	movwf	(btemp+11)^0,c
 15135  017A96  502D               	movf	(btemp+8)^0,w,c
 15136  017A98  102E               	iorwf	(btemp+9)^0,w,c
 15137  017A9A  102F               	iorwf	(btemp+10)^0,w,c
 15138  017A9C  1030               	iorwf	(btemp+11)^0,w,c
 15139  017A9E  A4D8               	btfss	status,2,c
 15140  017AA0  D008               	goto	l6942
 15141                           
 15142                           ;stkvar	_ff2 @ sp[(0)+-8]
 15143  017AA2  0EF8               	movlw	-8
 15144  017AA4  6AE3               	clrf	plusw1,c
 15145  017AA6  0EF9               	movlw	-7
 15146  017AA8  6AE3               	clrf	plusw1,c
 15147  017AAA  0EFA               	movlw	-6
 15148  017AAC  6AE3               	clrf	plusw1,c
 15149  017AAE  0EFB               	movlw	-5
 15150  017AB0  6AE3               	clrf	plusw1,c
 15151  017AB2                     l6942:
 15152                           
 15153                           ;stkvar	_ff2 @ sp[(0)+-8]
 15154                           ;stkvar	_ff1 @ sp[(0)+-4]
 15155  017AB2  50E1               	movf	fsr1l,w,c
 15156  017AB4  0FFC               	addlw	-4
 15157  017AB6  6ED9               	movwf	fsr2l,c
 15158  017AB8  50E2               	movf	fsr1h,w,c
 15159  017ABA  6EDA               	movwf	fsr2h,c
 15160  017ABC  0EFF               	movlw	255
 15161  017ABE  22DA               	addwfc	fsr2h,f,c
 15162  017AC0  0EF8               	movlw	-8
 15163  017AC2  50E3               	movf	plusw1,w,c
 15164  017AC4  18DE               	xorwf	postinc2,w,c
 15165  017AC6  E10D               	bnz	u5520
 15166  017AC8  0EF9               	movlw	-7
 15167  017ACA  50E3               	movf	plusw1,w,c
 15168  017ACC  18DE               	xorwf	postinc2,w,c
 15169  017ACE  E109               	bnz	u5520
 15170  017AD0  0EFA               	movlw	-6
 15171  017AD2  50E3               	movf	plusw1,w,c
 15172  017AD4  18DE               	xorwf	postinc2,w,c
 15173  017AD6  E105               	bnz	u5520
 15174  017AD8  0EFB               	movlw	-5
 15175  017ADA  50E3               	movf	plusw1,w,c
 15176  017ADC  18DE               	xorwf	postinc2,w,c
 15177  017ADE  B4D8               	btfsc	status,2,c
 15178  017AE0  D002               	goto	l6946
 15179  017AE2                     u5520:
 15180  017AE2  9025               	bcf	btemp& (0+255),0,c
 15181  017AE4  D001               	goto	l2486
 15182  017AE6                     l6946:
 15183  017AE6  8025               	bsf	btemp& (0+255),0,c
 15184  017AE8                     l2486:
 15185                           
 15186                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15187  017AE8  0EF8               	movlw	248
 15188  017AEA  26E1               	addwf	fsr1l,f,c
 15189  017AEC  0EFF               	movlw	255
 15190  017AEE  22E2               	addwfc	fsr1h,f,c
 15191  017AF0  0012               	return		;funcret
 15192  017AF2                     __end_of___fleq:
 15193                           	opt callstack 0
 15194                           
 15195 ;; *************** function ___fldiv *****************
 15196 ;; Defined at:
 15197 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15198 ;; Parameters:    Size  Location     Type
 15199 ;;  b               4  [STACK] long 
 15200 ;;  a               4  [STACK] long 
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;  grs             4  [STACK] unsigned long 
 15203 ;;  rem             4  [STACK] unsigned long 
 15204 ;;  new_exp         2  [STACK] short 
 15205 ;;  aexp            1  [STACK] unsigned char 
 15206 ;;  bexp            1  [STACK] unsigned char 
 15207 ;;  sign            1  [STACK] unsigned char 
 15208 ;; Return value:  Size  Location     Type
 15209 ;;                  4  [STACK] unsigned char 
 15210 ;; Registers used:
 15211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15212 ;; Tracked objects:
 15213 ;;		On entry : 0/2
 15214 ;;		On exit  : 0/0
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;Total ram usage:        0 bytes
 15222 ;; Hardware stack levels used:    1
 15223 ;; Hardware stack levels required when called:    7
 15224 ;; This function calls:
 15225 ;;		Nothing
 15226 ;; This function is called by:
 15227 ;;		_conv_raw_result
 15228 ;;		_calc_bsoc
 15229 ;;		_efgtoa
 15230 ;; This function uses a reentrant model
 15231 ;;
 15232                           
 15233                           	psect	text58
 15234  01360E                     __ptext58:
 15235                           	opt callstack 0
 15236  01360E                     ___fldiv:
 15237                           	opt callstack 0
 15238                           
 15239                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15240  01360E  0E0D               	movlw	13
 15241  013610  26E1               	addwf	fsr1l,f,c
 15242  013612  0E00               	movlw	0
 15243  013614  22E2               	addwfc	fsr1h,f,c
 15244                           
 15245                           ;stkvar	_b @ sp[(-13)+-4]
 15246                           
 15247                           ;incstack = 0
 15248  013616  0EF2               	movlw	242
 15249  013618  24E1               	addwf	fsr1l,w,c
 15250  01361A  6ED9               	movwf	fsr2l,c
 15251  01361C  0EFF               	movlw	255
 15252  01361E  20E2               	addwfc	fsr1h,w,c
 15253  013620  6EDA               	movwf	fsr2h,c
 15254  013622  50DF               	movf	indf2,w,c
 15255  013624  6E30               	movwf	(btemp+11)^0,c
 15256  013626  0E80               	movlw	128
 15257  013628  1630               	andwf	(btemp+11)^0,f,c
 15258                           
 15259                           ;stkvar	_sign @ sp[(-13)+12]
 15260  01362A  0EFF               	movlw	-1
 15261  01362C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15262                           
 15263                           ;stkvar	_b @ sp[(-13)+-4]
 15264  013632  0EF2               	movlw	242
 15265  013634  24E1               	addwf	fsr1l,w,c
 15266  013636  6ED9               	movwf	fsr2l,c
 15267  013638  0EFF               	movlw	255
 15268  01363A  20E2               	addwfc	fsr1h,w,c
 15269  01363C  6EDA               	movwf	fsr2h,c
 15270  01363E  50DF               	movf	indf2,w,c
 15271  013640  6E30               	movwf	(btemp+11)^0,c
 15272  013642  90D8               	bcf	status,0,c
 15273  013644  3430               	rlcf	(btemp+11)^0,w,c
 15274  013646  6E2F               	movwf	(btemp+10)^0,c
 15275                           
 15276                           ;stkvar	_bexp @ sp[(-13)+11]
 15277  013648  0EFE               	movlw	-2
 15278  01364A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15279                           
 15280                           ;stkvar	_b @ sp[(-13)+-4]
 15281  013650  0EF1               	movlw	241
 15282  013652  24E1               	addwf	fsr1l,w,c
 15283  013654  6ED9               	movwf	fsr2l,c
 15284  013656  0EFF               	movlw	255
 15285  013658  20E2               	addwfc	fsr1h,w,c
 15286  01365A  6EDA               	movwf	fsr2h,c
 15287  01365C  AEDF               	btfss	indf2,7,c
 15288  01365E  D002               	goto	l8146
 15289                           
 15290                           ;stkvar	_bexp @ sp[(-13)+11]
 15291  013660  0EFE               	movlw	-2
 15292  013662  80E3               	bsf	plusw1,0,c
 15293  013664                     l8146:
 15294                           
 15295                           ;stkvar	_bexp @ sp[(-13)+11]
 15296  013664  0EFE               	movlw	-2
 15297  013666  50E3               	movf	plusw1,w,c
 15298  013668  B4D8               	btfsc	status,2,c
 15299  01366A  D027               	goto	l8156
 15300                           
 15301                           ;stkvar	_bexp @ sp[(-13)+11]
 15302  01366C  0EFE               	movlw	-2
 15303  01366E  28E3               	incf	plusw1,w,c
 15304  013670  A4D8               	btfss	status,2,c
 15305  013672  D018               	goto	l8152
 15306  013674  0E00               	movlw	0
 15307  013676  6E2D               	movwf	(btemp+8)^0,c
 15308  013678  0E00               	movlw	0
 15309  01367A  6E2E               	movwf	(btemp+9)^0,c
 15310  01367C  0E00               	movlw	0
 15311  01367E  6E2F               	movwf	(btemp+10)^0,c
 15312  013680  0E00               	movlw	0
 15313  013682  6E30               	movwf	(btemp+11)^0,c
 15314                           
 15315                           ;stkvar	_b @ sp[(-13)+-4]
 15316  013684  0EEF               	movlw	-17
 15317  013686  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15318  01368C  0EF0               	movlw	-16
 15319  01368E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15320  013694  0EF1               	movlw	-15
 15321  013696  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15322  01369C  0EF2               	movlw	-14
 15323  01369E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15324  0136A4                     l8152:
 15325                           
 15326                           ;stkvar	_b @ sp[(-13)+-4]
 15327  0136A4  0EF1               	movlw	-15
 15328  0136A6  8EE3               	bsf	plusw1,7,c
 15329                           
 15330                           ;stkvar	_b @ sp[(-13)+-4]
 15331  0136A8  0EF2               	movlw	242
 15332  0136AA  24E1               	addwf	fsr1l,w,c
 15333  0136AC  6ED9               	movwf	fsr2l,c
 15334  0136AE  0EFF               	movlw	255
 15335  0136B0  20E2               	addwfc	fsr1h,w,c
 15336  0136B2  6EDA               	movwf	fsr2h,c
 15337  0136B4  0E00               	movlw	0
 15338  0136B6  6EDF               	movwf	indf2,c
 15339  0136B8  D018               	goto	l8158
 15340  0136BA                     l8156:
 15341  0136BA  0E00               	movlw	0
 15342  0136BC  6E2D               	movwf	(btemp+8)^0,c
 15343  0136BE  0E00               	movlw	0
 15344  0136C0  6E2E               	movwf	(btemp+9)^0,c
 15345  0136C2  0E00               	movlw	0
 15346  0136C4  6E2F               	movwf	(btemp+10)^0,c
 15347  0136C6  0E00               	movlw	0
 15348  0136C8  6E30               	movwf	(btemp+11)^0,c
 15349                           
 15350                           ;stkvar	_b @ sp[(-13)+-4]
 15351  0136CA  0EEF               	movlw	-17
 15352  0136CC  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15353  0136D2  0EF0               	movlw	-16
 15354  0136D4  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15355  0136DA  0EF1               	movlw	-15
 15356  0136DC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15357  0136E2  0EF2               	movlw	-14
 15358  0136E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15359  0136EA                     l8158:
 15360                           
 15361                           ;stkvar	_a @ sp[(-13)+-8]
 15362  0136EA  0EEE               	movlw	238
 15363  0136EC  24E1               	addwf	fsr1l,w,c
 15364  0136EE  6ED9               	movwf	fsr2l,c
 15365  0136F0  0EFF               	movlw	255
 15366  0136F2  20E2               	addwfc	fsr1h,w,c
 15367  0136F4  6EDA               	movwf	fsr2h,c
 15368  0136F6  50DF               	movf	indf2,w,c
 15369  0136F8  6E30               	movwf	(btemp+11)^0,c
 15370  0136FA  0E80               	movlw	128
 15371  0136FC  1630               	andwf	(btemp+11)^0,f,c
 15372                           
 15373                           ;stkvar	_sign @ sp[(-13)+12]
 15374  0136FE  50E1               	movf	fsr1l,w,c
 15375  013700  0FFF               	addlw	-1
 15376  013702  6ED9               	movwf	fsr2l,c
 15377  013704  50E2               	movf	fsr1h,w,c
 15378  013706  6EDA               	movwf	fsr2h,c
 15379  013708  0EFF               	movlw	255
 15380  01370A  22DA               	addwfc	fsr2h,f,c
 15381  01370C  5030               	movf	(btemp+11)^0,w,c
 15382  01370E  1ADF               	xorwf	indf2,f,c
 15383                           
 15384                           ;stkvar	_a @ sp[(-13)+-8]
 15385  013710  0EEE               	movlw	238
 15386  013712  24E1               	addwf	fsr1l,w,c
 15387  013714  6ED9               	movwf	fsr2l,c
 15388  013716  0EFF               	movlw	255
 15389  013718  20E2               	addwfc	fsr1h,w,c
 15390  01371A  6EDA               	movwf	fsr2h,c
 15391  01371C  50DF               	movf	indf2,w,c
 15392  01371E  6E30               	movwf	(btemp+11)^0,c
 15393  013720  90D8               	bcf	status,0,c
 15394  013722  3430               	rlcf	(btemp+11)^0,w,c
 15395  013724  6E2F               	movwf	(btemp+10)^0,c
 15396                           
 15397                           ;stkvar	_aexp @ sp[(-13)+10]
 15398  013726  0EFD               	movlw	-3
 15399  013728  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15400                           
 15401                           ;stkvar	_a @ sp[(-13)+-8]
 15402  01372E  0EED               	movlw	237
 15403  013730  24E1               	addwf	fsr1l,w,c
 15404  013732  6ED9               	movwf	fsr2l,c
 15405  013734  0EFF               	movlw	255
 15406  013736  20E2               	addwfc	fsr1h,w,c
 15407  013738  6EDA               	movwf	fsr2h,c
 15408  01373A  AEDF               	btfss	indf2,7,c
 15409  01373C  D002               	goto	l8166
 15410                           
 15411                           ;stkvar	_aexp @ sp[(-13)+10]
 15412  01373E  0EFD               	movlw	-3
 15413  013740  80E3               	bsf	plusw1,0,c
 15414  013742                     l8166:
 15415                           
 15416                           ;stkvar	_aexp @ sp[(-13)+10]
 15417  013742  0EFD               	movlw	-3
 15418  013744  50E3               	movf	plusw1,w,c
 15419  013746  B4D8               	btfsc	status,2,c
 15420  013748  D027               	goto	l8176
 15421                           
 15422                           ;stkvar	_aexp @ sp[(-13)+10]
 15423  01374A  0EFD               	movlw	-3
 15424  01374C  28E3               	incf	plusw1,w,c
 15425  01374E  A4D8               	btfss	status,2,c
 15426  013750  D018               	goto	l8172
 15427  013752  0E00               	movlw	0
 15428  013754  6E2D               	movwf	(btemp+8)^0,c
 15429  013756  0E00               	movlw	0
 15430  013758  6E2E               	movwf	(btemp+9)^0,c
 15431  01375A  0E00               	movlw	0
 15432  01375C  6E2F               	movwf	(btemp+10)^0,c
 15433  01375E  0E00               	movlw	0
 15434  013760  6E30               	movwf	(btemp+11)^0,c
 15435                           
 15436                           ;stkvar	_a @ sp[(-13)+-8]
 15437  013762  0EEB               	movlw	-21
 15438  013764  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15439  01376A  0EEC               	movlw	-20
 15440  01376C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15441  013772  0EED               	movlw	-19
 15442  013774  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15443  01377A  0EEE               	movlw	-18
 15444  01377C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15445  013782                     l8172:
 15446                           
 15447                           ;stkvar	_a @ sp[(-13)+-8]
 15448  013782  0EED               	movlw	-19
 15449  013784  8EE3               	bsf	plusw1,7,c
 15450                           
 15451                           ;stkvar	_a @ sp[(-13)+-8]
 15452  013786  0EEE               	movlw	238
 15453  013788  24E1               	addwf	fsr1l,w,c
 15454  01378A  6ED9               	movwf	fsr2l,c
 15455  01378C  0EFF               	movlw	255
 15456  01378E  20E2               	addwfc	fsr1h,w,c
 15457  013790  6EDA               	movwf	fsr2h,c
 15458  013792  0E00               	movlw	0
 15459  013794  6EDF               	movwf	indf2,c
 15460  013796  D018               	goto	l8178
 15461  013798                     l8176:
 15462  013798  0E00               	movlw	0
 15463  01379A  6E2D               	movwf	(btemp+8)^0,c
 15464  01379C  0E00               	movlw	0
 15465  01379E  6E2E               	movwf	(btemp+9)^0,c
 15466  0137A0  0E00               	movlw	0
 15467  0137A2  6E2F               	movwf	(btemp+10)^0,c
 15468  0137A4  0E00               	movlw	0
 15469  0137A6  6E30               	movwf	(btemp+11)^0,c
 15470                           
 15471                           ;stkvar	_a @ sp[(-13)+-8]
 15472  0137A8  0EEB               	movlw	-21
 15473  0137AA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15474  0137B0  0EEC               	movlw	-20
 15475  0137B2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15476  0137B8  0EED               	movlw	-19
 15477  0137BA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15478  0137C0  0EEE               	movlw	-18
 15479  0137C2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15480  0137C8                     l8178:
 15481                           
 15482                           ;stkvar	_a @ sp[(-13)+-8]
 15483  0137C8  0EEB               	movlw	-21
 15484  0137CA  50E3               	movf	plusw1,w,c
 15485  0137CC  E139               	bnz	l8190
 15486  0137CE  0EEC               	movlw	-20
 15487  0137D0  50E3               	movf	plusw1,w,c
 15488  0137D2  E136               	bnz	l8190
 15489  0137D4  0EED               	movlw	-19
 15490  0137D6  50E3               	movf	plusw1,w,c
 15491  0137D8  E133               	bnz	l8190
 15492  0137DA  0EEE               	movlw	-18
 15493  0137DC  50E3               	movf	plusw1,w,c
 15494  0137DE  A4D8               	btfss	status,2,c
 15495  0137E0  D02F               	goto	l8190
 15496                           
 15497                           ;stkvar	_b @ sp[(-13)+-4]
 15498  0137E2  0EEF               	movlw	-17
 15499  0137E4  6AE3               	clrf	plusw1,c
 15500  0137E6  0EF0               	movlw	-16
 15501  0137E8  6AE3               	clrf	plusw1,c
 15502  0137EA  0EF1               	movlw	-15
 15503  0137EC  6AE3               	clrf	plusw1,c
 15504  0137EE  0EF2               	movlw	-14
 15505  0137F0  6AE3               	clrf	plusw1,c
 15506                           
 15507                           ;stkvar	_b @ sp[(-13)+-4]
 15508  0137F2  0EF1               	movlw	241
 15509  0137F4  24E1               	addwf	fsr1l,w,c
 15510  0137F6  6ED9               	movwf	fsr2l,c
 15511  0137F8  0EFF               	movlw	255
 15512  0137FA  20E2               	addwfc	fsr1h,w,c
 15513  0137FC  6EDA               	movwf	fsr2h,c
 15514  0137FE  0E80               	movlw	128
 15515  013800  12DE               	iorwf	postinc2,f,c
 15516  013802  0E7F               	movlw	127
 15517  013804  12DD               	iorwf	postdec2,f,c
 15518  013806                     l8184:
 15519                           
 15520                           ;stkvar	_sign @ sp[(-13)+12]
 15521  013806  0EFF               	movlw	-1
 15522  013808  006F FF8C  F030    	movff	plusw1,btemp+11
 15523                           
 15524                           ;stkvar	_b @ sp[(-13)+-4]
 15525  01380E  0EF2               	movlw	242
 15526  013810  24E1               	addwf	fsr1l,w,c
 15527  013812  6ED9               	movwf	fsr2l,c
 15528  013814  0EFF               	movlw	255
 15529  013816  20E2               	addwfc	fsr1h,w,c
 15530  013818  6EDA               	movwf	fsr2h,c
 15531  01381A  5030               	movf	(btemp+11)^0,w,c
 15532  01381C  12DF               	iorwf	indf2,f,c
 15533                           
 15534                           ;stkvar	_b @ sp[(-13)+-4]
 15535  01381E  0EEF               	movlw	-17
 15536  013820  006F FF8C  F025    	movff	plusw1,btemp
 15537  013826  0EF0               	movlw	-16
 15538  013828  006F FF8C  F026    	movff	plusw1,btemp+1
 15539  01382E  0EF1               	movlw	-15
 15540  013830  006F FF8C  F027    	movff	plusw1,btemp+2
 15541  013836  0EF2               	movlw	-14
 15542  013838  006F FF8C  F028    	movff	plusw1,btemp+3
 15543  01383E  D19F               	goto	l2809
 15544  013840                     l8190:
 15545                           
 15546                           ;stkvar	_bexp @ sp[(-13)+11]
 15547  013840  0EFE               	movlw	-2
 15548  013842  50E3               	movf	plusw1,w,c
 15549  013844  A4D8               	btfss	status,2,c
 15550  013846  D009               	goto	l8198
 15551  013848  0E00               	movlw	0
 15552  01384A  6E25               	movwf	btemp^0,c
 15553  01384C  0E00               	movlw	0
 15554  01384E  6E26               	movwf	(btemp+1)^0,c
 15555  013850  0E00               	movlw	0
 15556  013852  6E27               	movwf	(btemp+2)^0,c
 15557  013854  0E00               	movlw	0
 15558  013856  6E28               	movwf	(btemp+3)^0,c
 15559  013858  D192               	goto	l2809
 15560  01385A                     l8198:
 15561                           
 15562                           ;stkvar	_bexp @ sp[(-13)+11]
 15563  01385A  0EFE               	movlw	-2
 15564  01385C  50E3               	movf	plusw1,w,c
 15565  01385E  6E2F               	movwf	(btemp+10)^0,c
 15566  013860  6A30               	clrf	(btemp+11)^0,c
 15567                           
 15568                           ;stkvar	_aexp @ sp[(-13)+10]
 15569  013862  0EFD               	movlw	-3
 15570  013864  50E3               	movf	plusw1,w,c
 15571  013866  5E2F               	subwf	(btemp+10)^0,f,c
 15572  013868  0E00               	movlw	0
 15573  01386A  5A30               	subwfb	(btemp+11)^0,f,c
 15574  01386C  0E7F               	movlw	127
 15575  01386E  262F               	addwf	(btemp+10)^0,f,c
 15576  013870  0E00               	movlw	0
 15577  013872  2230               	addwfc	(btemp+11)^0,f,c
 15578                           
 15579                           ;stkvar	_new_exp @ sp[(-13)+8]
 15580  013874  0EFB               	movlw	-5
 15581  013876  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15582  01387C  0EFC               	movlw	-4
 15583  01387E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15584                           
 15585                           ;stkvar	_b @ sp[(-13)+-4]
 15586  013884  0EEF               	movlw	-17
 15587  013886  006F FF8C  F02D    	movff	plusw1,btemp+8
 15588  01388C  0EF0               	movlw	-16
 15589  01388E  006F FF8C  F02E    	movff	plusw1,btemp+9
 15590  013894  0EF1               	movlw	-15
 15591  013896  006F FF8C  F02F    	movff	plusw1,btemp+10
 15592  01389C  0EF2               	movlw	-14
 15593  01389E  006F FF8C  F030    	movff	plusw1,btemp+11
 15594                           
 15595                           ;stkvar	_rem @ sp[(-13)+4]
 15596  0138A4  0EF7               	movlw	-9
 15597  0138A6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15598  0138AC  0EF8               	movlw	-8
 15599  0138AE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15600  0138B4  0EF9               	movlw	-7
 15601  0138B6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15602  0138BC  0EFA               	movlw	-6
 15603  0138BE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15604                           
 15605                           ;stkvar	_b @ sp[(-13)+-4]
 15606  0138C4  0EEF               	movlw	-17
 15607  0138C6  6AE3               	clrf	plusw1,c
 15608  0138C8  0EF0               	movlw	-16
 15609  0138CA  6AE3               	clrf	plusw1,c
 15610  0138CC  0EF1               	movlw	-15
 15611  0138CE  6AE3               	clrf	plusw1,c
 15612  0138D0  0EF2               	movlw	-14
 15613  0138D2  6AE3               	clrf	plusw1,c
 15614                           
 15615                           ;stkvar	_grs @ sp[(-13)+0]
 15616  0138D4  0EF3               	movlw	-13
 15617  0138D6  6AE3               	clrf	plusw1,c
 15618  0138D8  0EF4               	movlw	-12
 15619  0138DA  6AE3               	clrf	plusw1,c
 15620  0138DC  0EF5               	movlw	-11
 15621  0138DE  6AE3               	clrf	plusw1,c
 15622  0138E0  0EF6               	movlw	-10
 15623  0138E2  6AE3               	clrf	plusw1,c
 15624                           
 15625                           ;stkvar	_aexp @ sp[(-13)+10]
 15626  0138E4  0EFD               	movlw	-3
 15627  0138E6  6AE3               	clrf	plusw1,c
 15628  0138E8  D050               	goto	l8226
 15629  0138EA                     l8208:
 15630                           
 15631                           ;stkvar	_aexp @ sp[(-13)+10]
 15632  0138EA  0EFD               	movlw	-3
 15633  0138EC  50E3               	movf	plusw1,w,c
 15634  0138EE  B4D8               	btfsc	status,2,c
 15635  0138F0  D020               	goto	l8218
 15636                           
 15637                           ;stkvar	_rem @ sp[(-13)+4]
 15638  0138F2  90D8               	bcf	status,0,c
 15639  0138F4  0EF7               	movlw	-9
 15640  0138F6  36E3               	rlcf	plusw1,f,c
 15641  0138F8  0EF8               	movlw	-8
 15642  0138FA  36E3               	rlcf	plusw1,f,c
 15643  0138FC  0EF9               	movlw	-7
 15644  0138FE  36E3               	rlcf	plusw1,f,c
 15645  013900  0EFA               	movlw	-6
 15646  013902  36E3               	rlcf	plusw1,f,c
 15647                           
 15648                           ;stkvar	_b @ sp[(-13)+-4]
 15649  013904  90D8               	bcf	status,0,c
 15650  013906  0EEF               	movlw	-17
 15651  013908  36E3               	rlcf	plusw1,f,c
 15652  01390A  0EF0               	movlw	-16
 15653  01390C  36E3               	rlcf	plusw1,f,c
 15654  01390E  0EF1               	movlw	-15
 15655  013910  36E3               	rlcf	plusw1,f,c
 15656  013912  0EF2               	movlw	-14
 15657  013914  36E3               	rlcf	plusw1,f,c
 15658                           
 15659                           ;stkvar	_grs @ sp[(-13)+0]
 15660  013916  0EF6               	movlw	-10
 15661  013918  AEE3               	btfss	plusw1,7,c
 15662  01391A  D002               	goto	l8216
 15663                           
 15664                           ;stkvar	_b @ sp[(-13)+-4]
 15665  01391C  0EEF               	movlw	-17
 15666  01391E  80E3               	bsf	plusw1,0,c
 15667  013920                     l8216:
 15668                           
 15669                           ;stkvar	_grs @ sp[(-13)+0]
 15670  013920  90D8               	bcf	status,0,c
 15671  013922  0EF3               	movlw	-13
 15672  013924  36E3               	rlcf	plusw1,f,c
 15673  013926  0EF4               	movlw	-12
 15674  013928  36E3               	rlcf	plusw1,f,c
 15675  01392A  0EF5               	movlw	-11
 15676  01392C  36E3               	rlcf	plusw1,f,c
 15677  01392E  0EF6               	movlw	-10
 15678  013930  36E3               	rlcf	plusw1,f,c
 15679  013932                     l8218:
 15680                           
 15681                           ;stkvar	_a @ sp[(-13)+-8]
 15682                           ;stkvar	_rem @ sp[(-13)+4]
 15683  013932  50E1               	movf	fsr1l,w,c
 15684  013934  0FF7               	addlw	-9
 15685  013936  6ED9               	movwf	fsr2l,c
 15686  013938  50E2               	movf	fsr1h,w,c
 15687  01393A  6EDA               	movwf	fsr2h,c
 15688  01393C  0EFF               	movlw	255
 15689  01393E  22DA               	addwfc	fsr2h,f,c
 15690  013940  0EEB               	movlw	-21
 15691  013942  50E3               	movf	plusw1,w,c
 15692  013944  5CDE               	subwf	postinc2,w,c
 15693  013946  0EEC               	movlw	-20
 15694  013948  50E3               	movf	plusw1,w,c
 15695  01394A  58DE               	subwfb	postinc2,w,c
 15696  01394C  0EED               	movlw	-19
 15697  01394E  50E3               	movf	plusw1,w,c
 15698  013950  58DE               	subwfb	postinc2,w,c
 15699  013952  0EEE               	movlw	-18
 15700  013954  50E3               	movf	plusw1,w,c
 15701  013956  58DE               	subwfb	postinc2,w,c
 15702  013958  A0D8               	btfss	status,0,c
 15703  01395A  D015               	goto	l8224
 15704                           
 15705                           ;stkvar	_grs @ sp[(-13)+0]
 15706  01395C  0EF6               	movlw	-10
 15707  01395E  8CE3               	bsf	plusw1,6,c
 15708                           
 15709                           ;stkvar	_a @ sp[(-13)+-8]
 15710                           ;stkvar	_rem @ sp[(-13)+4]
 15711  013960  50E1               	movf	fsr1l,w,c
 15712  013962  0FF7               	addlw	-9
 15713  013964  6ED9               	movwf	fsr2l,c
 15714  013966  50E2               	movf	fsr1h,w,c
 15715  013968  6EDA               	movwf	fsr2h,c
 15716  01396A  0EFF               	movlw	255
 15717  01396C  22DA               	addwfc	fsr2h,f,c
 15718  01396E  0EEB               	movlw	-21
 15719  013970  50E3               	movf	plusw1,w,c
 15720  013972  5EDE               	subwf	postinc2,f,c
 15721  013974  0EEC               	movlw	-20
 15722  013976  50E3               	movf	plusw1,w,c
 15723  013978  5ADE               	subwfb	postinc2,f,c
 15724  01397A  0EED               	movlw	-19
 15725  01397C  50E3               	movf	plusw1,w,c
 15726  01397E  5ADE               	subwfb	postinc2,f,c
 15727  013980  0EEE               	movlw	-18
 15728  013982  50E3               	movf	plusw1,w,c
 15729  013984  5ADE               	subwfb	postinc2,f,c
 15730  013986                     l8224:
 15731                           
 15732                           ;stkvar	_aexp @ sp[(-13)+10]
 15733  013986  0EFD               	movlw	-3
 15734  013988  2AE3               	incf	plusw1,f,c
 15735  01398A                     l8226:
 15736                           
 15737                           ;stkvar	_aexp @ sp[(-13)+10]
 15738  01398A  0EFD               	movlw	-3
 15739  01398C  006F FF8C  F025    	movff	plusw1,btemp
 15740  013992  0E19               	movlw	25
 15741  013994  6425               	cpfsgt	btemp^0,c
 15742  013996  D7A9               	goto	l8208
 15743                           
 15744                           ;stkvar	_rem @ sp[(-13)+4]
 15745  013998  0EF7               	movlw	-9
 15746  01399A  50E3               	movf	plusw1,w,c
 15747  01399C  E10A               	bnz	u7590
 15748  01399E  0EF8               	movlw	-8
 15749  0139A0  50E3               	movf	plusw1,w,c
 15750  0139A2  E107               	bnz	u7590
 15751  0139A4  0EF9               	movlw	-7
 15752  0139A6  50E3               	movf	plusw1,w,c
 15753  0139A8  E104               	bnz	u7590
 15754  0139AA  0EFA               	movlw	-6
 15755  0139AC  50E3               	movf	plusw1,w,c
 15756  0139AE  B4D8               	btfsc	status,2,c
 15757  0139B0  D024               	goto	l8242
 15758  0139B2                     u7590:
 15759                           
 15760                           ;stkvar	_grs @ sp[(-13)+0]
 15761  0139B2  0EF3               	movlw	-13
 15762  0139B4  80E3               	bsf	plusw1,0,c
 15763  0139B6  D021               	goto	l8242
 15764  0139B8                     l8232:
 15765                           
 15766                           ;stkvar	_b @ sp[(-13)+-4]
 15767  0139B8  90D8               	bcf	status,0,c
 15768  0139BA  0EEF               	movlw	-17
 15769  0139BC  36E3               	rlcf	plusw1,f,c
 15770  0139BE  0EF0               	movlw	-16
 15771  0139C0  36E3               	rlcf	plusw1,f,c
 15772  0139C2  0EF1               	movlw	-15
 15773  0139C4  36E3               	rlcf	plusw1,f,c
 15774  0139C6  0EF2               	movlw	-14
 15775  0139C8  36E3               	rlcf	plusw1,f,c
 15776                           
 15777                           ;stkvar	_grs @ sp[(-13)+0]
 15778  0139CA  0EF6               	movlw	-10
 15779  0139CC  AEE3               	btfss	plusw1,7,c
 15780  0139CE  D002               	goto	l8238
 15781                           
 15782                           ;stkvar	_b @ sp[(-13)+-4]
 15783  0139D0  0EEF               	movlw	-17
 15784  0139D2  80E3               	bsf	plusw1,0,c
 15785  0139D4                     l8238:
 15786                           
 15787                           ;stkvar	_grs @ sp[(-13)+0]
 15788  0139D4  90D8               	bcf	status,0,c
 15789  0139D6  0EF3               	movlw	-13
 15790  0139D8  36E3               	rlcf	plusw1,f,c
 15791  0139DA  0EF4               	movlw	-12
 15792  0139DC  36E3               	rlcf	plusw1,f,c
 15793  0139DE  0EF5               	movlw	-11
 15794  0139E0  36E3               	rlcf	plusw1,f,c
 15795  0139E2  0EF6               	movlw	-10
 15796  0139E4  36E3               	rlcf	plusw1,f,c
 15797                           
 15798                           ;stkvar	_new_exp @ sp[(-13)+8]
 15799  0139E6  50E1               	movf	fsr1l,w,c
 15800  0139E8  0FFB               	addlw	-5
 15801  0139EA  6ED9               	movwf	fsr2l,c
 15802  0139EC  50E2               	movf	fsr1h,w,c
 15803  0139EE  6EDA               	movwf	fsr2h,c
 15804  0139F0  0EFF               	movlw	255
 15805  0139F2  22DA               	addwfc	fsr2h,f,c
 15806  0139F4  06DE               	decf	postinc2,f,c
 15807  0139F6  0E00               	movlw	0
 15808  0139F8  5ADD               	subwfb	postdec2,f,c
 15809  0139FA                     l8242:
 15810                           
 15811                           ;stkvar	_b @ sp[(-13)+-4]
 15812  0139FA  0EF1               	movlw	-15
 15813  0139FC  AEE3               	btfss	plusw1,7,c
 15814  0139FE  D7DC               	goto	l8232
 15815                           
 15816                           ;stkvar	_aexp @ sp[(-13)+10]
 15817  013A00  0EFD               	movlw	-3
 15818  013A02  6AE3               	clrf	plusw1,c
 15819                           
 15820                           ;stkvar	_grs @ sp[(-13)+0]
 15821  013A04  0EF6               	movlw	-10
 15822  013A06  AEE3               	btfss	plusw1,7,c
 15823  013A08  D020               	goto	l8256
 15824                           
 15825                           ;stkvar	_grs @ sp[(-13)+0]
 15826  013A0A  50E1               	movf	fsr1l,w,c
 15827  013A0C  0FF3               	addlw	-13
 15828  013A0E  6ED9               	movwf	fsr2l,c
 15829  013A10  50E2               	movf	fsr1h,w,c
 15830  013A12  6EDA               	movwf	fsr2h,c
 15831  013A14  0EFF               	movlw	255
 15832  013A16  22DA               	addwfc	fsr2h,f,c
 15833  013A18  0EFF               	movlw	255
 15834  013A1A  14DE               	andwf	postinc2,w,c
 15835  013A1C  6E2D               	movwf	(btemp+8)^0,c
 15836  013A1E  0EFF               	movlw	255
 15837  013A20  14DE               	andwf	postinc2,w,c
 15838  013A22  6E2E               	movwf	(btemp+9)^0,c
 15839  013A24  0EFF               	movlw	255
 15840  013A26  14DE               	andwf	postinc2,w,c
 15841  013A28  6E2F               	movwf	(btemp+10)^0,c
 15842  013A2A  0E7F               	movlw	127
 15843  013A2C  14DE               	andwf	postinc2,w,c
 15844  013A2E  6E30               	movwf	(btemp+11)^0,c
 15845  013A30  502D               	movf	(btemp+8)^0,w,c
 15846  013A32  102E               	iorwf	(btemp+9)^0,w,c
 15847  013A34  102F               	iorwf	(btemp+10)^0,w,c
 15848  013A36  1030               	iorwf	(btemp+11)^0,w,c
 15849  013A38  B4D8               	btfsc	status,2,c
 15850  013A3A  D004               	goto	l8252
 15851  013A3C                     u7630:
 15852                           
 15853                           ;stkvar	_aexp @ sp[(-13)+10]
 15854  013A3C  0EFD               	movlw	-3
 15855  013A3E  6AE3               	clrf	plusw1,c
 15856  013A40  2AE3               	incf	plusw1,f,c
 15857  013A42  D003               	goto	l8256
 15858  013A44                     l8252:
 15859                           
 15860                           ;stkvar	_b @ sp[(-13)+-4]
 15861  013A44  0EEF               	movlw	-17
 15862  013A46  B0E3               	btfsc	plusw1,0,c
 15863  013A48  D7F9               	goto	u7630
 15864  013A4A                     l8256:
 15865                           
 15866                           ;stkvar	_aexp @ sp[(-13)+10]
 15867  013A4A  0EFD               	movlw	-3
 15868  013A4C  50E3               	movf	plusw1,w,c
 15869  013A4E  B4D8               	btfsc	status,2,c
 15870  013A50  D036               	goto	l8266
 15871                           
 15872                           ;stkvar	_b @ sp[(-13)+-4]
 15873  013A52  50E1               	movf	fsr1l,w,c
 15874  013A54  0FEF               	addlw	-17
 15875  013A56  6ED9               	movwf	fsr2l,c
 15876  013A58  50E2               	movf	fsr1h,w,c
 15877  013A5A  6EDA               	movwf	fsr2h,c
 15878  013A5C  0EFF               	movlw	255
 15879  013A5E  22DA               	addwfc	fsr2h,f,c
 15880  013A60  2ADE               	incf	postinc2,f,c
 15881  013A62  0E00               	movlw	0
 15882  013A64  22DE               	addwfc	postinc2,f,c
 15883  013A66  22DE               	addwfc	postinc2,f,c
 15884  013A68  22DE               	addwfc	postinc2,f,c
 15885                           
 15886                           ;stkvar	_b @ sp[(-13)+-4]
 15887  013A6A  0EF2               	movlw	-14
 15888  013A6C  A0E3               	btfss	plusw1,0,c
 15889  013A6E  D027               	goto	l8266
 15890  013A70  0E01               	movlw	1
 15891  013A72  6E30               	movwf	(btemp+11)^0,c
 15892                           
 15893                           ;stkvar	_b @ sp[(-13)+-4]
 15894  013A74  50E1               	movf	fsr1l,w,c
 15895  013A76  0FEF               	addlw	-17
 15896  013A78  6ED9               	movwf	fsr2l,c
 15897  013A7A  50E2               	movf	fsr1h,w,c
 15898  013A7C  6EDA               	movwf	fsr2h,c
 15899  013A7E  0EFF               	movlw	255
 15900  013A80  22DA               	addwfc	fsr2h,f,c
 15901  013A82  2830               	incf	(btemp+11)^0,w,c
 15902  013A84  52DE               	movf	postinc2,f,c
 15903  013A86  D008               	goto	u7670
 15904  013A88                     u7675:
 15905  013A88  52DE               	movf	postinc2,f,c
 15906  013A8A  90D8               	bcf	status,0,c
 15907  013A8C  BEDC               	btfsc	preinc2,7,c
 15908  013A8E  80D8               	bsf	status,0,c
 15909  013A90  32DD               	rrcf	postdec2,f,c
 15910  013A92  32DD               	rrcf	postdec2,f,c
 15911  013A94  32DD               	rrcf	postdec2,f,c
 15912  013A96  32DE               	rrcf	postinc2,f,c
 15913  013A98                     u7670:
 15914  013A98  2EE8               	decfsz	wreg,f,c
 15915  013A9A  D7F6               	goto	u7675
 15916                           
 15917                           ;stkvar	_new_exp @ sp[(-13)+8]
 15918  013A9C  0EFB               	movlw	-5
 15919  013A9E  50E3               	movf	plusw1,w,c
 15920  013AA0  0F01               	addlw	1
 15921  013AA2  6E25               	movwf	btemp^0,c
 15922  013AA4  0EFB               	movlw	-5
 15923  013AA6  0060  F097  FFE3   	movff	btemp,plusw1
 15924  013AAC  6A25               	clrf	btemp^0,c
 15925  013AAE  0EFC               	movlw	-4
 15926  013AB0  50E3               	movf	plusw1,w,c
 15927  013AB2  2025               	addwfc	btemp^0,w,c
 15928  013AB4  6E25               	movwf	btemp^0,c
 15929  013AB6  0EFC               	movlw	-4
 15930  013AB8  0060  F097  FFE3   	movff	btemp,plusw1
 15931  013ABE                     l8266:
 15932                           
 15933                           ;stkvar	_new_exp @ sp[(-13)+8]
 15934  013ABE  0EFC               	movlw	-4
 15935  013AC0  BEE3               	btfsc	plusw1,7,c
 15936  013AC2  D01B               	goto	l8272
 15937  013AC4  0EFC               	movlw	-4
 15938  013AC6  50E3               	movf	plusw1,w,c
 15939  013AC8  E104               	bnz	u7680
 15940  013ACA  0EFB               	movlw	-5
 15941  013ACC  28E3               	incf	plusw1,w,c
 15942  013ACE  A0D8               	btfss	status,0,c
 15943  013AD0  D014               	goto	l8272
 15944  013AD2                     u7680:
 15945  013AD2  0EFF               	movlw	255
 15946  013AD4  6E2F               	movwf	(btemp+10)^0,c
 15947  013AD6  0E00               	movlw	0
 15948  013AD8  6E30               	movwf	(btemp+11)^0,c
 15949                           
 15950                           ;stkvar	_new_exp @ sp[(-13)+8]
 15951  013ADA  0EFB               	movlw	-5
 15952  013ADC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15953  013AE2  0EFC               	movlw	-4
 15954  013AE4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15955                           
 15956                           ;stkvar	_b @ sp[(-13)+-4]
 15957  013AEA  0EEF               	movlw	-17
 15958  013AEC  6AE3               	clrf	plusw1,c
 15959  013AEE  0EF0               	movlw	-16
 15960  013AF0  6AE3               	clrf	plusw1,c
 15961  013AF2  0EF1               	movlw	-15
 15962  013AF4  6AE3               	clrf	plusw1,c
 15963  013AF6  0EF2               	movlw	-14
 15964  013AF8  6AE3               	clrf	plusw1,c
 15965  013AFA                     l8272:
 15966                           
 15967                           ;stkvar	_new_exp @ sp[(-13)+8]
 15968  013AFA  0EFC               	movlw	-4
 15969  013AFC  BEE3               	btfsc	plusw1,7,c
 15970  013AFE  D007               	goto	u7690
 15971  013B00  0EFC               	movlw	-4
 15972  013B02  50E3               	movf	plusw1,w,c
 15973  013B04  E112               	bnz	l8278
 15974  013B06  0EFB               	movlw	-5
 15975  013B08  04E3               	decf	plusw1,w,c
 15976  013B0A  B0D8               	btfsc	status,0,c
 15977  013B0C  D00E               	goto	l8278
 15978  013B0E                     u7690:
 15979                           
 15980                           ;stkvar	_new_exp @ sp[(-13)+8]
 15981  013B0E  0EFB               	movlw	-5
 15982  013B10  6AE3               	clrf	plusw1,c
 15983  013B12  0EFC               	movlw	-4
 15984  013B14  6AE3               	clrf	plusw1,c
 15985                           
 15986                           ;stkvar	_b @ sp[(-13)+-4]
 15987  013B16  0EEF               	movlw	-17
 15988  013B18  6AE3               	clrf	plusw1,c
 15989  013B1A  0EF0               	movlw	-16
 15990  013B1C  6AE3               	clrf	plusw1,c
 15991  013B1E  0EF1               	movlw	-15
 15992  013B20  6AE3               	clrf	plusw1,c
 15993  013B22  0EF2               	movlw	-14
 15994  013B24  6AE3               	clrf	plusw1,c
 15995                           
 15996                           ;stkvar	_sign @ sp[(-13)+12]
 15997  013B26  0EFF               	movlw	-1
 15998  013B28  6AE3               	clrf	plusw1,c
 15999  013B2A                     l8278:
 16000                           
 16001                           ;stkvar	_new_exp @ sp[(-13)+8]
 16002                           ;stkvar	_bexp @ sp[(-13)+11]
 16003  013B2A  0EFB               	movlw	-5
 16004  013B2C  006F FF8C  F025    	movff	plusw1,btemp
 16005  013B32  0EFE               	movlw	-2
 16006  013B34  0060  F097  FFE3   	movff	btemp,plusw1
 16007                           
 16008                           ;stkvar	_bexp @ sp[(-13)+11]
 16009  013B3A  0EFE               	movlw	-2
 16010  013B3C  A0E3               	btfss	plusw1,0,c
 16011  013B3E  D009               	goto	l8284
 16012                           
 16013                           ;stkvar	_b @ sp[(-13)+-4]
 16014  013B40  0EF1               	movlw	241
 16015  013B42  24E1               	addwf	fsr1l,w,c
 16016  013B44  6ED9               	movwf	fsr2l,c
 16017  013B46  0EFF               	movlw	255
 16018  013B48  20E2               	addwfc	fsr1h,w,c
 16019  013B4A  6EDA               	movwf	fsr2h,c
 16020  013B4C  0E00               	movlw	0
 16021  013B4E  8EDB               	bsf	plusw2,7,c
 16022  013B50  D008               	goto	l8286
 16023  013B52                     l8284:
 16024                           
 16025                           ;stkvar	_b @ sp[(-13)+-4]
 16026  013B52  0EF1               	movlw	241
 16027  013B54  24E1               	addwf	fsr1l,w,c
 16028  013B56  6ED9               	movwf	fsr2l,c
 16029  013B58  0EFF               	movlw	255
 16030  013B5A  20E2               	addwfc	fsr1h,w,c
 16031  013B5C  6EDA               	movwf	fsr2h,c
 16032  013B5E  0E7F               	movlw	127
 16033  013B60  16DF               	andwf	indf2,f,c
 16034  013B62                     l8286:
 16035                           
 16036                           ;stkvar	_b @ sp[(-13)+-4]
 16037  013B62  0EF2               	movlw	242
 16038  013B64  24E1               	addwf	fsr1l,w,c
 16039  013B66  6ED9               	movwf	fsr2l,c
 16040  013B68  0EFF               	movlw	255
 16041  013B6A  20E2               	addwfc	fsr1h,w,c
 16042  013B6C  6EDA               	movwf	fsr2h,c
 16043                           
 16044                           ;stkvar	_bexp @ sp[(-13)+11]
 16045  013B6E  0EFE               	movlw	-2
 16046  013B70  006F FF8C  F030    	movff	plusw1,btemp+11
 16047  013B76  90D8               	bcf	status,0,c
 16048  013B78  3030               	rrcf	(btemp+11)^0,w,c
 16049  013B7A  6EDF               	movwf	indf2,c
 16050  013B7C  D644               	goto	l8184
 16051  013B7E                     l2809:
 16052                           
 16053                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16054  013B7E  0EEB               	movlw	235
 16055  013B80  26E1               	addwf	fsr1l,f,c
 16056  013B82  0EFF               	movlw	255
 16057  013B84  22E2               	addwfc	fsr1h,f,c
 16058  013B86  0012               	return		;funcret
 16059  013B88                     __end_of___fldiv:
 16060                           	opt callstack 0
 16061                           
 16062 ;; *************** function ___awmod *****************
 16063 ;; Defined at:
 16064 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16065 ;; Parameters:    Size  Location     Type
 16066 ;;  dividend        2  [STACK] int 
 16067 ;;  divisor         2  [STACK] int 
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;  sign            1  [STACK] unsigned char 
 16070 ;;  counter         1  [STACK] unsigned char 
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  2  [STACK] int 
 16073 ;; Registers used:
 16074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16084 ;;Total ram usage:        0 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; Hardware stack levels required when called:    7
 16087 ;; This function calls:
 16088 ;;		Nothing
 16089 ;; This function is called by:
 16090 ;;		_efgtoa
 16091 ;; This function uses a reentrant model
 16092 ;;
 16093                           
 16094                           	psect	text59
 16095  01715C                     __ptext59:
 16096                           	opt callstack 0
 16097  01715C                     ___awmod:
 16098                           	opt callstack 0
 16099                           
 16100                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16101  01715C  52E6               	movf	postinc1,f,c
 16102  01715E  52E6               	movf	postinc1,f,c
 16103                           
 16104                           ;stkvar	_sign @ sp[(-2)+0]
 16105                           
 16106                           ;incstack = 0
 16107  017160  0EFE               	movlw	-2
 16108  017162  6AE3               	clrf	plusw1,c
 16109                           
 16110                           ;stkvar	_dividend @ sp[(-2)+-2]
 16111  017164  0EFD               	movlw	-3
 16112  017166  AEE3               	btfss	plusw1,7,c
 16113  017168  D009               	goto	l6904
 16114                           
 16115                           ;stkvar	_dividend @ sp[(-2)+-2]
 16116                           ;stkvar	_dividend @ sp[(-2)+-2]
 16117  01716A  0EFC               	movlw	-4
 16118  01716C  6CE3               	negf	plusw1,c
 16119  01716E  0EFD               	movlw	-3
 16120  017170  1EE3               	comf	plusw1,f,c
 16121  017172  B0D8               	btfsc	status,0,c
 16122  017174  2AE3               	incf	plusw1,f,c
 16123                           
 16124                           ;stkvar	_sign @ sp[(-2)+0]
 16125  017176  0EFE               	movlw	-2
 16126  017178  6AE3               	clrf	plusw1,c
 16127  01717A  2AE3               	incf	plusw1,f,c
 16128  01717C                     l6904:
 16129                           
 16130                           ;stkvar	_divisor @ sp[(-2)+-4]
 16131  01717C  0EFB               	movlw	-5
 16132  01717E  AEE3               	btfss	plusw1,7,c
 16133  017180  D006               	goto	l6908
 16134                           
 16135                           ;stkvar	_divisor @ sp[(-2)+-4]
 16136                           ;stkvar	_divisor @ sp[(-2)+-4]
 16137  017182  0EFA               	movlw	-6
 16138  017184  6CE3               	negf	plusw1,c
 16139  017186  0EFB               	movlw	-5
 16140  017188  1EE3               	comf	plusw1,f,c
 16141  01718A  B0D8               	btfsc	status,0,c
 16142  01718C  2AE3               	incf	plusw1,f,c
 16143  01718E                     l6908:
 16144                           
 16145                           ;stkvar	_divisor @ sp[(-2)+-4]
 16146  01718E  0EFA               	movlw	-6
 16147  017190  006F FF8C  F025    	movff	plusw1,btemp
 16148  017196  0EFB               	movlw	-5
 16149  017198  50E3               	movf	plusw1,w,c
 16150  01719A  1025               	iorwf	btemp^0,w,c
 16151  01719C  B4D8               	btfsc	status,2,c
 16152  01719E  D053               	goto	u5480
 16153                           
 16154                           ;stkvar	_counter @ sp[(-2)+1]
 16155  0171A0  0EFF               	movlw	-1
 16156  0171A2  6AE3               	clrf	plusw1,c
 16157  0171A4  D012               	goto	L15
 16158  0171A6                     l6912:
 16159                           
 16160                           ;stkvar	_divisor @ sp[(-2)+-4]
 16161  0171A6  0EFA               	movlw	-6
 16162  0171A8  50E3               	movf	plusw1,w,c
 16163  0171AA  90D8               	bcf	status,0,c
 16164  0171AC  34E8               	rlcf	wreg,w,c
 16165  0171AE  6E25               	movwf	btemp^0,c
 16166  0171B0  0EFA               	movlw	-6
 16167  0171B2  0060  F097  FFE3   	movff	btemp,plusw1
 16168  0171B8  0EFB               	movlw	-5
 16169  0171BA  50E3               	movf	plusw1,w,c
 16170  0171BC  34E8               	rlcf	wreg,w,c
 16171  0171BE  6E25               	movwf	btemp^0,c
 16172  0171C0  0EFB               	movlw	-5
 16173  0171C2  0060  F097  FFE3   	movff	btemp,plusw1
 16174                           
 16175                           ;stkvar	_counter @ sp[(-2)+1]
 16176  0171C8  0EFF               	movlw	-1
 16177  0171CA                     L15:
 16178  0171CA  2AE3               	incf	plusw1,f,c
 16179                           
 16180                           ;stkvar	_divisor @ sp[(-2)+-4]
 16181  0171CC  0EFB               	movlw	-5
 16182  0171CE  AEE3               	btfss	plusw1,7,c
 16183  0171D0  D7EA               	goto	l6912
 16184  0171D2                     u5460:
 16185                           
 16186                           ;stkvar	_divisor @ sp[(-2)+-4]
 16187  0171D2  0EFA               	movlw	-6
 16188  0171D4  006F FF8C  F02F    	movff	plusw1,btemp+10
 16189  0171DA  0EFB               	movlw	-5
 16190  0171DC  006F FF8C  F030    	movff	plusw1,btemp+11
 16191                           
 16192                           ;stkvar	_dividend @ sp[(-2)+-2]
 16193  0171E2  0EFC               	movlw	-4
 16194  0171E4  006F FF8C  F02D    	movff	plusw1,btemp+8
 16195  0171EA  0EFD               	movlw	-3
 16196  0171EC  006F FF8C  F02E    	movff	plusw1,btemp+9
 16197  0171F2  502F               	movf	(btemp+10)^0,w,c
 16198  0171F4  5C2D               	subwf	(btemp+8)^0,w,c
 16199  0171F6  5030               	movf	(btemp+11)^0,w,c
 16200  0171F8  582E               	subwfb	(btemp+9)^0,w,c
 16201  0171FA  A0D8               	btfss	status,0,c
 16202  0171FC  D014               	goto	l6922
 16203                           
 16204                           ;stkvar	_divisor @ sp[(-2)+-4]
 16205                           ;stkvar	_dividend @ sp[(-2)+-2]
 16206  0171FE  0EFC               	movlw	-4
 16207  017200  50E3               	movf	plusw1,w,c
 16208  017202  6E25               	movwf	btemp^0,c
 16209  017204  0EFA               	movlw	-6
 16210  017206  50E3               	movf	plusw1,w,c
 16211  017208  5E25               	subwf	btemp^0,f,c
 16212  01720A  0EFC               	movlw	-4
 16213  01720C  0060  F097  FFE3   	movff	btemp,plusw1
 16214  017212  0EFD               	movlw	-3
 16215  017214  50E3               	movf	plusw1,w,c
 16216  017216  6E25               	movwf	btemp^0,c
 16217  017218  0EFB               	movlw	-5
 16218  01721A  50E3               	movf	plusw1,w,c
 16219  01721C  5A25               	subwfb	btemp^0,f,c
 16220  01721E  0EFD               	movlw	-3
 16221  017220  0060  F097  FFE3   	movff	btemp,plusw1
 16222  017226                     l6922:
 16223                           
 16224                           ;stkvar	_divisor @ sp[(-2)+-4]
 16225  017226  90D8               	bcf	status,0,c
 16226  017228  0EFB               	movlw	-5
 16227  01722A  32E3               	rrcf	plusw1,f,c
 16228  01722C  0EFA               	movlw	-6
 16229  01722E  32E3               	rrcf	plusw1,f,c
 16230                           
 16231                           ;stkvar	_counter @ sp[(-2)+1]
 16232  017230  0EFF               	movlw	-1
 16233  017232  50E3               	movf	plusw1,w,c
 16234  017234  6E25               	movwf	btemp^0,c
 16235  017236  0E01               	movlw	1
 16236  017238  5E25               	subwf	btemp^0,f,c
 16237  01723A  0EFF               	movlw	-1
 16238  01723C  0060  F097  FFE3   	movff	btemp,plusw1
 16239  017242  A4D8               	btfss	status,2,c
 16240  017244  D7C6               	goto	u5460
 16241  017246                     u5480:
 16242                           
 16243                           ;stkvar	_sign @ sp[(-2)+0]
 16244  017246  0EFE               	movlw	-2
 16245  017248  50E3               	movf	plusw1,w,c
 16246  01724A  B4D8               	btfsc	status,2,c
 16247  01724C  D006               	goto	l6930
 16248                           
 16249                           ;stkvar	_dividend @ sp[(-2)+-2]
 16250                           ;stkvar	_dividend @ sp[(-2)+-2]
 16251  01724E  0EFC               	movlw	-4
 16252  017250  6CE3               	negf	plusw1,c
 16253  017252  0EFD               	movlw	-3
 16254  017254  1EE3               	comf	plusw1,f,c
 16255  017256  B0D8               	btfsc	status,0,c
 16256  017258  2AE3               	incf	plusw1,f,c
 16257  01725A                     l6930:
 16258                           
 16259                           ;stkvar	_dividend @ sp[(-2)+-2]
 16260  01725A  0EFC               	movlw	-4
 16261  01725C  006F FF8C  F025    	movff	plusw1,btemp
 16262  017262  0EFD               	movlw	-3
 16263  017264  006F FF8C  F026    	movff	plusw1,btemp+1
 16264                           
 16265                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16266  01726A  0EFA               	movlw	250
 16267  01726C  26E1               	addwf	fsr1l,f,c
 16268  01726E  0EFF               	movlw	255
 16269  017270  22E2               	addwfc	fsr1h,f,c
 16270  017272  0012               	return		;funcret
 16271  017274                     __end_of___awmod:
 16272                           	opt callstack 0
 16273                           
 16274 ;; *************** function ___awdiv *****************
 16275 ;; Defined at:
 16276 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16277 ;; Parameters:    Size  Location     Type
 16278 ;;  dividend        2  [STACK] int 
 16279 ;;  divisor         2  [STACK] int 
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;  quotient        2  [STACK] int 
 16282 ;;  sign            1  [STACK] unsigned char 
 16283 ;;  counter         1  [STACK] unsigned char 
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  2  [STACK] int 
 16286 ;; Registers used:
 16287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 0/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;Total ram usage:        0 bytes
 16298 ;; Hardware stack levels used:    1
 16299 ;; Hardware stack levels required when called:    7
 16300 ;; This function calls:
 16301 ;;		Nothing
 16302 ;; This function is called by:
 16303 ;;		_efgtoa
 16304 ;; This function uses a reentrant model
 16305 ;;
 16306                           
 16307                           	psect	text60
 16308  016C94                     __ptext60:
 16309                           	opt callstack 0
 16310  016C94                     ___awdiv:
 16311                           	opt callstack 0
 16312                           
 16313                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16314  016C94  52E6               	movf	postinc1,f,c
 16315  016C96  52E6               	movf	postinc1,f,c
 16316  016C98  52E6               	movf	postinc1,f,c
 16317  016C9A  52E6               	movf	postinc1,f,c
 16318                           
 16319                           ;stkvar	_sign @ sp[(-4)+2]
 16320                           
 16321                           ;incstack = 0
 16322  016C9C  0EFE               	movlw	-2
 16323  016C9E  6AE3               	clrf	plusw1,c
 16324                           
 16325                           ;stkvar	_divisor @ sp[(-4)+-4]
 16326  016CA0  0EF9               	movlw	-7
 16327  016CA2  AEE3               	btfss	plusw1,7,c
 16328  016CA4  D009               	goto	l6858
 16329                           
 16330                           ;stkvar	_divisor @ sp[(-4)+-4]
 16331                           ;stkvar	_divisor @ sp[(-4)+-4]
 16332  016CA6  0EF8               	movlw	-8
 16333  016CA8  6CE3               	negf	plusw1,c
 16334  016CAA  0EF9               	movlw	-7
 16335  016CAC  1EE3               	comf	plusw1,f,c
 16336  016CAE  B0D8               	btfsc	status,0,c
 16337  016CB0  2AE3               	incf	plusw1,f,c
 16338                           
 16339                           ;stkvar	_sign @ sp[(-4)+2]
 16340  016CB2  0EFE               	movlw	-2
 16341  016CB4  6AE3               	clrf	plusw1,c
 16342  016CB6  2AE3               	incf	plusw1,f,c
 16343  016CB8                     l6858:
 16344                           
 16345                           ;stkvar	_dividend @ sp[(-4)+-2]
 16346  016CB8  0EFB               	movlw	-5
 16347  016CBA  AEE3               	btfss	plusw1,7,c
 16348  016CBC  D008               	goto	l6864
 16349                           
 16350                           ;stkvar	_dividend @ sp[(-4)+-2]
 16351                           ;stkvar	_dividend @ sp[(-4)+-2]
 16352  016CBE  0EFA               	movlw	-6
 16353  016CC0  6CE3               	negf	plusw1,c
 16354  016CC2  0EFB               	movlw	-5
 16355  016CC4  1EE3               	comf	plusw1,f,c
 16356  016CC6  B0D8               	btfsc	status,0,c
 16357  016CC8  2AE3               	incf	plusw1,f,c
 16358                           
 16359                           ;stkvar	_sign @ sp[(-4)+2]
 16360  016CCA  0EFE               	movlw	-2
 16361  016CCC  70E3               	btg	plusw1,0,c
 16362  016CCE                     l6864:
 16363                           
 16364                           ;stkvar	_quotient @ sp[(-4)+0]
 16365  016CCE  0EFC               	movlw	-4
 16366  016CD0  6AE3               	clrf	plusw1,c
 16367  016CD2  0EFD               	movlw	-3
 16368  016CD4  6AE3               	clrf	plusw1,c
 16369                           
 16370                           ;stkvar	_divisor @ sp[(-4)+-4]
 16371  016CD6  0EF8               	movlw	-8
 16372  016CD8  006F FF8C  F025    	movff	plusw1,btemp
 16373  016CDE  0EF9               	movlw	-7
 16374  016CE0  50E3               	movf	plusw1,w,c
 16375  016CE2  1025               	iorwf	btemp^0,w,c
 16376  016CE4  B4D8               	btfsc	status,2,c
 16377  016CE6  D066               	goto	u5410
 16378                           
 16379                           ;stkvar	_counter @ sp[(-4)+3]
 16380  016CE8  0EFF               	movlw	-1
 16381  016CEA  6AE3               	clrf	plusw1,c
 16382  016CEC  D012               	goto	L16
 16383  016CEE                     l6870:
 16384                           
 16385                           ;stkvar	_divisor @ sp[(-4)+-4]
 16386  016CEE  0EF8               	movlw	-8
 16387  016CF0  50E3               	movf	plusw1,w,c
 16388  016CF2  90D8               	bcf	status,0,c
 16389  016CF4  34E8               	rlcf	wreg,w,c
 16390  016CF6  6E25               	movwf	btemp^0,c
 16391  016CF8  0EF8               	movlw	-8
 16392  016CFA  0060  F097  FFE3   	movff	btemp,plusw1
 16393  016D00  0EF9               	movlw	-7
 16394  016D02  50E3               	movf	plusw1,w,c
 16395  016D04  34E8               	rlcf	wreg,w,c
 16396  016D06  6E25               	movwf	btemp^0,c
 16397  016D08  0EF9               	movlw	-7
 16398  016D0A  0060  F097  FFE3   	movff	btemp,plusw1
 16399                           
 16400                           ;stkvar	_counter @ sp[(-4)+3]
 16401  016D10  0EFF               	movlw	-1
 16402  016D12                     L16:
 16403  016D12  2AE3               	incf	plusw1,f,c
 16404                           
 16405                           ;stkvar	_divisor @ sp[(-4)+-4]
 16406  016D14  0EF9               	movlw	-7
 16407  016D16  AEE3               	btfss	plusw1,7,c
 16408  016D18  D7EA               	goto	l6870
 16409  016D1A                     u5390:
 16410                           
 16411                           ;stkvar	_quotient @ sp[(-4)+0]
 16412  016D1A  0EFC               	movlw	-4
 16413  016D1C  50E3               	movf	plusw1,w,c
 16414  016D1E  90D8               	bcf	status,0,c
 16415  016D20  34E8               	rlcf	wreg,w,c
 16416  016D22  6E25               	movwf	btemp^0,c
 16417  016D24  0EFC               	movlw	-4
 16418  016D26  0060  F097  FFE3   	movff	btemp,plusw1
 16419  016D2C  0EFD               	movlw	-3
 16420  016D2E  50E3               	movf	plusw1,w,c
 16421  016D30  34E8               	rlcf	wreg,w,c
 16422  016D32  6E25               	movwf	btemp^0,c
 16423  016D34  0EFD               	movlw	-3
 16424  016D36  0060  F097  FFE3   	movff	btemp,plusw1
 16425                           
 16426                           ;stkvar	_divisor @ sp[(-4)+-4]
 16427  016D3C  0EF8               	movlw	-8
 16428  016D3E  006F FF8C  F02F    	movff	plusw1,btemp+10
 16429  016D44  0EF9               	movlw	-7
 16430  016D46  006F FF8C  F030    	movff	plusw1,btemp+11
 16431                           
 16432                           ;stkvar	_dividend @ sp[(-4)+-2]
 16433  016D4C  0EFA               	movlw	-6
 16434  016D4E  006F FF8C  F02D    	movff	plusw1,btemp+8
 16435  016D54  0EFB               	movlw	-5
 16436  016D56  006F FF8C  F02E    	movff	plusw1,btemp+9
 16437  016D5C  502F               	movf	(btemp+10)^0,w,c
 16438  016D5E  5C2D               	subwf	(btemp+8)^0,w,c
 16439  016D60  5030               	movf	(btemp+11)^0,w,c
 16440  016D62  582E               	subwfb	(btemp+9)^0,w,c
 16441  016D64  A0D8               	btfss	status,0,c
 16442  016D66  D016               	goto	l6884
 16443                           
 16444                           ;stkvar	_divisor @ sp[(-4)+-4]
 16445                           ;stkvar	_dividend @ sp[(-4)+-2]
 16446  016D68  0EFA               	movlw	-6
 16447  016D6A  50E3               	movf	plusw1,w,c
 16448  016D6C  6E25               	movwf	btemp^0,c
 16449  016D6E  0EF8               	movlw	-8
 16450  016D70  50E3               	movf	plusw1,w,c
 16451  016D72  5E25               	subwf	btemp^0,f,c
 16452  016D74  0EFA               	movlw	-6
 16453  016D76  0060  F097  FFE3   	movff	btemp,plusw1
 16454  016D7C  0EFB               	movlw	-5
 16455  016D7E  50E3               	movf	plusw1,w,c
 16456  016D80  6E25               	movwf	btemp^0,c
 16457  016D82  0EF9               	movlw	-7
 16458  016D84  50E3               	movf	plusw1,w,c
 16459  016D86  5A25               	subwfb	btemp^0,f,c
 16460  016D88  0EFB               	movlw	-5
 16461  016D8A  0060  F097  FFE3   	movff	btemp,plusw1
 16462                           
 16463                           ;stkvar	_quotient @ sp[(-4)+0]
 16464  016D90  0EFC               	movlw	-4
 16465  016D92  80E3               	bsf	plusw1,0,c
 16466  016D94                     l6884:
 16467                           
 16468                           ;stkvar	_divisor @ sp[(-4)+-4]
 16469  016D94  90D8               	bcf	status,0,c
 16470  016D96  0EF9               	movlw	-7
 16471  016D98  32E3               	rrcf	plusw1,f,c
 16472  016D9A  0EF8               	movlw	-8
 16473  016D9C  32E3               	rrcf	plusw1,f,c
 16474                           
 16475                           ;stkvar	_counter @ sp[(-4)+3]
 16476  016D9E  0EFF               	movlw	-1
 16477  016DA0  50E3               	movf	plusw1,w,c
 16478  016DA2  6E25               	movwf	btemp^0,c
 16479  016DA4  0E01               	movlw	1
 16480  016DA6  5E25               	subwf	btemp^0,f,c
 16481  016DA8  0EFF               	movlw	-1
 16482  016DAA  0060  F097  FFE3   	movff	btemp,plusw1
 16483  016DB0  A4D8               	btfss	status,2,c
 16484  016DB2  D7B3               	goto	u5390
 16485  016DB4                     u5410:
 16486                           
 16487                           ;stkvar	_sign @ sp[(-4)+2]
 16488  016DB4  0EFE               	movlw	-2
 16489  016DB6  50E3               	movf	plusw1,w,c
 16490  016DB8  B4D8               	btfsc	status,2,c
 16491  016DBA  D006               	goto	l6892
 16492                           
 16493                           ;stkvar	_quotient @ sp[(-4)+0]
 16494                           ;stkvar	_quotient @ sp[(-4)+0]
 16495  016DBC  0EFC               	movlw	-4
 16496  016DBE  6CE3               	negf	plusw1,c
 16497  016DC0  0EFD               	movlw	-3
 16498  016DC2  1EE3               	comf	plusw1,f,c
 16499  016DC4  B0D8               	btfsc	status,0,c
 16500  016DC6  2AE3               	incf	plusw1,f,c
 16501  016DC8                     l6892:
 16502                           
 16503                           ;stkvar	_quotient @ sp[(-4)+0]
 16504  016DC8  0EFC               	movlw	-4
 16505  016DCA  006F FF8C  F025    	movff	plusw1,btemp
 16506  016DD0  0EFD               	movlw	-3
 16507  016DD2  006F FF8C  F026    	movff	plusw1,btemp+1
 16508                           
 16509                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16510  016DD8  0EF8               	movlw	248
 16511  016DDA  26E1               	addwf	fsr1l,f,c
 16512  016DDC  0EFF               	movlw	255
 16513  016DDE  22E2               	addwfc	fsr1h,f,c
 16514  016DE0  0012               	return		;funcret
 16515  016DE2                     __end_of___awdiv:
 16516                           	opt callstack 0
 16517                           
 16518 ;; *************** function _dtoa *****************
 16519 ;; Defined at:
 16520 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16521 ;; Parameters:    Size  Location     Type
 16522 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16523 ;;		 -> f(6), NULL(0), 
 16524 ;;  d               8  [STACK] long long 
 16525 ;; Auto vars:     Size  Location     Type
 16526 ;;  n               8  [STACK] long long 
 16527 ;;  i               2  [STACK] int 
 16528 ;;  s               2  [STACK] int 
 16529 ;;  w               2  [STACK] int 
 16530 ;;  p               2  [STACK] int 
 16531 ;; Return value:  Size  Location     Type
 16532 ;;                  2  [STACK] int 
 16533 ;; Registers used:
 16534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16535 ;; Tracked objects:
 16536 ;;		On entry : 0/0
 16537 ;;		On exit  : 0/0
 16538 ;;		Unchanged: 0/0
 16539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16544 ;;Total ram usage:        0 bytes
 16545 ;; Hardware stack levels used:    1
 16546 ;; Hardware stack levels required when called:   12
 16547 ;; This function calls:
 16548 ;;		___aodiv
 16549 ;;		___aomod
 16550 ;;		_abs
 16551 ;;		_pad
 16552 ;; This function is called by:
 16553 ;;		_vfpfcnvrt
 16554 ;; This function uses a reentrant model
 16555 ;;
 16556                           
 16557                           	psect	text61
 16558  01452E                     __ptext61:
 16559                           	opt callstack 0
 16560  01452E                     _dtoa:
 16561                           	opt callstack 0
 16562                           
 16563                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16564  01452E  0E12               	movlw	18
 16565  014530  26E1               	addwf	fsr1l,f,c
 16566  014532  0E00               	movlw	0
 16567  014534  22E2               	addwfc	fsr1h,f,c
 16568                           
 16569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16570                           ;stkvar	_d @ sp[(-18)+-10]
 16571                           
 16572                           ;incstack = 0
 16573  014536  0EE4               	movlw	228
 16574  014538  24E1               	addwf	fsr1l,w,c
 16575  01453A  6ED9               	movwf	fsr2l,c
 16576  01453C  0EFF               	movlw	255
 16577  01453E  20E2               	addwfc	fsr1h,w,c
 16578  014540  6EDA               	movwf	fsr2h,c
 16579                           
 16580                           ;stkvar	_n @ sp[(-18)+2]
 16581  014542  0E08               	movlw	8
 16582  014544  6E25               	movwf	btemp^0,c
 16583  014546  0EF0               	movlw	-16
 16584  014548                     us943999:
 16585  014548  006F FF7B FFE3     	movff	postinc2,plusw1
 16586  01454E  28E8               	incf	wreg,w,c
 16587  014550  2E25               	decfsz	btemp^0,f,c
 16588  014552  D7FA               	bra	us943999
 16589                           
 16590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16591                           ;stkvar	_n @ sp[(-18)+2]
 16592  014554  0EF7               	movlw	-9
 16593  014556  AEE3               	btfss	plusw1,7,c
 16594  014558  D002               	goto	u9440
 16595  01455A  0E01               	movlw	1
 16596  01455C  D001               	goto	u9450
 16597  01455E                     u9440:
 16598  01455E  0E00               	movlw	0
 16599  014560                     u9450:
 16600  014560  6E2F               	movwf	(btemp+10)^0,c
 16601  014562  6A30               	clrf	(btemp+11)^0,c
 16602                           
 16603                           ;stkvar	_s @ sp[(-18)+12]
 16604  014564  0EFA               	movlw	-6
 16605  014566  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16606  01456C  0EFB               	movlw	-5
 16607  01456E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16608                           
 16609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16610                           ;stkvar	_s @ sp[(-18)+12]
 16611  014574  0EFA               	movlw	-6
 16612  014576  006F FF8C  F025    	movff	plusw1,btemp
 16613  01457C  0EFB               	movlw	-5
 16614  01457E  50E3               	movf	plusw1,w,c
 16615  014580  1025               	iorwf	btemp^0,w,c
 16616  014582  B4D8               	btfsc	status,2,c
 16617  014584  D025               	goto	u9470
 16618                           
 16619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16620                           ;stkvar	_n @ sp[(-18)+2]
 16621                           ;stkvar	_n @ sp[(-18)+2]
 16622  014586  0EF0               	movlw	-16
 16623  014588  6CE3               	negf	plusw1,c
 16624  01458A  0EF1               	movlw	-15
 16625  01458C  1EE3               	comf	plusw1,f,c
 16626  01458E  0EF2               	movlw	-14
 16627  014590  1EE3               	comf	plusw1,f,c
 16628  014592  0EF3               	movlw	-13
 16629  014594  1EE3               	comf	plusw1,f,c
 16630  014596  0EF4               	movlw	-12
 16631  014598  1EE3               	comf	plusw1,f,c
 16632  01459A  0EF5               	movlw	-11
 16633  01459C  1EE3               	comf	plusw1,f,c
 16634  01459E  0EF6               	movlw	-10
 16635  0145A0  1EE3               	comf	plusw1,f,c
 16636  0145A2  0EF7               	movlw	-9
 16637  0145A4  1EE3               	comf	plusw1,f,c
 16638  0145A6  E314               	bnc	u9470
 16639  0145A8  0EF1               	movlw	-15
 16640  0145AA  2AE3               	incf	plusw1,f,c
 16641  0145AC  E311               	bnc	u9470
 16642  0145AE  0EF2               	movlw	-14
 16643  0145B0  2AE3               	incf	plusw1,f,c
 16644  0145B2  E30E               	bnc	u9470
 16645  0145B4  0EF3               	movlw	-13
 16646  0145B6  2AE3               	incf	plusw1,f,c
 16647  0145B8  E30B               	bnc	u9470
 16648  0145BA  0EF4               	movlw	-12
 16649  0145BC  2AE3               	incf	plusw1,f,c
 16650  0145BE  E308               	bnc	u9470
 16651  0145C0  0EF5               	movlw	-11
 16652  0145C2  2AE3               	incf	plusw1,f,c
 16653  0145C4  E305               	bnc	u9470
 16654  0145C6  0EF6               	movlw	-10
 16655  0145C8  2AE3               	incf	plusw1,f,c
 16656  0145CA  E302               	bnc	u9470
 16657  0145CC  0EF7               	movlw	-9
 16658  0145CE  2AE3               	incf	plusw1,f,c
 16659  0145D0                     u9470:
 16660                           
 16661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16662  0145D0  AE0D               	btfss	(_prec+1)^0,7,c
 16663                           
 16664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16665  0145D2  920E               	bcf	_flags^0,1,c
 16666                           
 16667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16668  0145D4  BE0D               	btfsc	(_prec+1)^0,7,c
 16669  0145D6  D005               	goto	u9490
 16670  0145D8  500D               	movf	(_prec+1)^0,w,c
 16671  0145DA  E110               	bnz	l10148
 16672  0145DC  040C               	decf	_prec^0,w,c
 16673  0145DE  B0D8               	btfsc	status,0,c
 16674  0145E0  D00D               	goto	l10148
 16675  0145E2                     u9490:
 16676  0145E2  0E01               	movlw	1
 16677  0145E4  6E2F               	movwf	(btemp+10)^0,c
 16678  0145E6  0E00               	movlw	0
 16679  0145E8  6E30               	movwf	(btemp+11)^0,c
 16680                           
 16681                           ;stkvar	_p @ sp[(-18)+16]
 16682  0145EA  0EFE               	movlw	-2
 16683  0145EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16684  0145F2  0EFF               	movlw	-1
 16685  0145F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16686  0145FA  D008               	goto	l2013
 16687  0145FC                     l10148:
 16688                           
 16689                           ;stkvar	_p @ sp[(-18)+16]
 16690  0145FC  0EFE               	movlw	-2
 16691  0145FE  0060  F033  FFE3   	movff	_prec,plusw1
 16692  014604  0EFF               	movlw	-1
 16693  014606  0060  F037  FFE3   	movff	_prec+1,plusw1
 16694  01460C                     l2013:
 16695                           
 16696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16697                           ;stkvar	_w @ sp[(-18)+14]
 16698  01460C  0EFC               	movlw	-4
 16699  01460E  0060  F02B  FFE3   	movff	_width,plusw1
 16700  014614  0EFD               	movlw	-3
 16701  014616  0060  F02F  FFE3   	movff	_width+1,plusw1
 16702                           
 16703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16704                           ;stkvar	_s @ sp[(-18)+12]
 16705  01461C  0EFA               	movlw	-6
 16706  01461E  006F FF8C  F025    	movff	plusw1,btemp
 16707  014624  0EFB               	movlw	-5
 16708  014626  50E3               	movf	plusw1,w,c
 16709  014628  1025               	iorwf	btemp^0,w,c
 16710  01462A  A4D8               	btfss	status,2,c
 16711  01462C  D002               	goto	u9510
 16712  01462E  A40E               	btfss	_flags^0,2,c
 16713  014630  D00A               	goto	l10156
 16714  014632                     u9510:
 16715                           
 16716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16717                           ;stkvar	_w @ sp[(-18)+14]
 16718  014632  50E1               	movf	fsr1l,w,c
 16719  014634  0FFC               	addlw	-4
 16720  014636  6ED9               	movwf	fsr2l,c
 16721  014638  50E2               	movf	fsr1h,w,c
 16722  01463A  6EDA               	movwf	fsr2h,c
 16723  01463C  0EFF               	movlw	255
 16724  01463E  22DA               	addwfc	fsr2h,f,c
 16725  014640  06DE               	decf	postinc2,f,c
 16726  014642  0E00               	movlw	0
 16727  014644  5ADD               	subwfb	postdec2,f,c
 16728  014646                     l10156:
 16729                           
 16730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16731  014646  0E4F               	movlw	79
 16732  014648  6E2F               	movwf	(btemp+10)^0,c
 16733  01464A  0E00               	movlw	0
 16734  01464C  6E30               	movwf	(btemp+11)^0,c
 16735                           
 16736                           ;stkvar	_i @ sp[(-18)+10]
 16737  01464E  0EF8               	movlw	-8
 16738  014650  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16739  014656  0EF9               	movlw	-7
 16740  014658  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16741                           
 16742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16743  01465E  0103               	movlb	3	; () banked
 16744  014660  6BE3               	clrf	(_dbuf+79)& (0+255),b
 16745                           
 16746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16747  014662  D109               	goto	l10170
 16748  014664                     l10160:
 16749                           
 16750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16751                           ;stkvar	_i @ sp[(-18)+10]
 16752  014664  50E1               	movf	fsr1l,w,c
 16753  014666  0FF8               	addlw	-8
 16754  014668  6ED9               	movwf	fsr2l,c
 16755  01466A  50E2               	movf	fsr1h,w,c
 16756  01466C  6EDA               	movwf	fsr2h,c
 16757  01466E  0EFF               	movlw	255
 16758  014670  22DA               	addwfc	fsr2h,f,c
 16759  014672  06DE               	decf	postinc2,f,c
 16760  014674  0E00               	movlw	0
 16761  014676  5ADD               	subwfb	postdec2,f,c
 16762                           
 16763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16764  014678  0E0A               	movlw	10
 16765  01467A  6EE6               	movwf	postinc1,c
 16766  01467C  0E00               	movlw	0
 16767  01467E  6EE6               	movwf	postinc1,c
 16768  014680  0E00               	movlw	0
 16769  014682  6EE6               	movwf	postinc1,c
 16770  014684  0E00               	movlw	0
 16771  014686  6EE6               	movwf	postinc1,c
 16772  014688  0E00               	movlw	0
 16773  01468A  6EE6               	movwf	postinc1,c
 16774  01468C  0E00               	movlw	0
 16775  01468E  6EE6               	movwf	postinc1,c
 16776  014690  0E00               	movlw	0
 16777  014692  6EE6               	movwf	postinc1,c
 16778  014694  0E00               	movlw	0
 16779  014696  6EE6               	movwf	postinc1,c
 16780                           
 16781                           ;stkvar	_n @ sp[(-26)+2]
 16782  014698  50E1               	movf	fsr1l,w,c
 16783  01469A  0FE8               	addlw	-24
 16784  01469C  6ED9               	movwf	fsr2l,c
 16785  01469E  50E2               	movf	fsr1h,w,c
 16786  0146A0  6EDA               	movwf	fsr2h,c
 16787  0146A2  0EFF               	movlw	255
 16788  0146A4  22DA               	addwfc	fsr2h,f,c
 16789  0146A6  006F FF7B FFE6     	movff	postinc2,postinc1
 16790  0146AC  006F FF7B FFE6     	movff	postinc2,postinc1
 16791  0146B2  006F FF7B FFE6     	movff	postinc2,postinc1
 16792  0146B8  006F FF7B FFE6     	movff	postinc2,postinc1
 16793  0146BE  006F FF7B FFE6     	movff	postinc2,postinc1
 16794  0146C4  006F FF7B FFE6     	movff	postinc2,postinc1
 16795  0146CA  006F FF7B FFE6     	movff	postinc2,postinc1
 16796  0146D0  006F FF7B FFE6     	movff	postinc2,postinc1
 16797  0146D6  EC26  F0AF         	call	___aomod	;wreg free
 16798  0146DA  52E5               	movf	postdec1,f,c
 16799  0146DC  006F FF9C  F03C    	movff	indf1,btemp+23
 16800  0146E2  52E5               	movf	postdec1,f,c
 16801  0146E4  006F FF9C  F03B    	movff	indf1,btemp+22
 16802  0146EA  52E5               	movf	postdec1,f,c
 16803  0146EC  006F FF9C  F03A    	movff	indf1,btemp+21
 16804  0146F2  52E5               	movf	postdec1,f,c
 16805  0146F4  006F FF9C  F039    	movff	indf1,btemp+20
 16806  0146FA  52E5               	movf	postdec1,f,c
 16807  0146FC  006F FF9C  F038    	movff	indf1,btemp+19
 16808  014702  52E5               	movf	postdec1,f,c
 16809  014704  006F FF9C  F037    	movff	indf1,btemp+18
 16810  01470A  52E5               	movf	postdec1,f,c
 16811  01470C  006F FF9C  F036    	movff	indf1,btemp+17
 16812  014712  52E5               	movf	postdec1,f,c
 16813  014714  006F FF9C  F035    	movff	indf1,btemp+16
 16814  01471A  0EF8               	movlw	248
 16815  01471C  26E1               	addwf	fsr1l,f,c
 16816  01471E  0EFF               	movlw	255
 16817  014720  22E2               	addwfc	fsr1h,f,c
 16818  014722  0060  F0D4  F02F   	movff	btemp+16,btemp+10
 16819  014728  0060  F0D8  F030   	movff	btemp+17,btemp+11
 16820  01472E  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 16821  014734  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 16822  01473A  EC1B  F0C5         	call	_abs	;wreg free
 16823  01473E  0E30               	movlw	48
 16824  014740  2625               	addwf	btemp^0,f,c
 16825                           
 16826                           ;stkvar	_i @ sp[(-18)+10]
 16827  014742  0EF8               	movlw	-8
 16828  014744  006F FF8C  F02F    	movff	plusw1,btemp+10
 16829  01474A  0EF9               	movlw	-7
 16830  01474C  006F FF8C  F030    	movff	plusw1,btemp+11
 16831  014752  0E94               	movlw	low _dbuf
 16832  014754  242F               	addwf	(btemp+10)^0,w,c
 16833  014756  6ED9               	movwf	fsr2l,c
 16834  014758  0E03               	movlw	high _dbuf
 16835  01475A  2030               	addwfc	(btemp+11)^0,w,c
 16836  01475C  6EDA               	movwf	fsr2h,c
 16837  01475E  0060  F097  FFDF   	movff	btemp,indf2
 16838                           
 16839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16840                           ;stkvar	_p @ sp[(-18)+16]
 16841  014764  50E1               	movf	fsr1l,w,c
 16842  014766  0FFE               	addlw	-2
 16843  014768  6ED9               	movwf	fsr2l,c
 16844  01476A  50E2               	movf	fsr1h,w,c
 16845  01476C  6EDA               	movwf	fsr2h,c
 16846  01476E  0EFF               	movlw	255
 16847  014770  22DA               	addwfc	fsr2h,f,c
 16848  014772  06DE               	decf	postinc2,f,c
 16849  014774  0E00               	movlw	0
 16850  014776  5ADD               	subwfb	postdec2,f,c
 16851                           
 16852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16853                           ;stkvar	_w @ sp[(-18)+14]
 16854  014778  50E1               	movf	fsr1l,w,c
 16855  01477A  0FFC               	addlw	-4
 16856  01477C  6ED9               	movwf	fsr2l,c
 16857  01477E  50E2               	movf	fsr1h,w,c
 16858  014780  6EDA               	movwf	fsr2h,c
 16859  014782  0EFF               	movlw	255
 16860  014784  22DA               	addwfc	fsr2h,f,c
 16861  014786  06DE               	decf	postinc2,f,c
 16862  014788  0E00               	movlw	0
 16863  01478A  5ADD               	subwfb	postdec2,f,c
 16864                           
 16865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16866  01478C  0E0A               	movlw	10
 16867  01478E  6EE6               	movwf	postinc1,c
 16868  014790  0E00               	movlw	0
 16869  014792  6EE6               	movwf	postinc1,c
 16870  014794  0E00               	movlw	0
 16871  014796  6EE6               	movwf	postinc1,c
 16872  014798  0E00               	movlw	0
 16873  01479A  6EE6               	movwf	postinc1,c
 16874  01479C  0E00               	movlw	0
 16875  01479E  6EE6               	movwf	postinc1,c
 16876  0147A0  0E00               	movlw	0
 16877  0147A2  6EE6               	movwf	postinc1,c
 16878  0147A4  0E00               	movlw	0
 16879  0147A6  6EE6               	movwf	postinc1,c
 16880  0147A8  0E00               	movlw	0
 16881  0147AA  6EE6               	movwf	postinc1,c
 16882                           
 16883                           ;stkvar	_n @ sp[(-26)+2]
 16884  0147AC  50E1               	movf	fsr1l,w,c
 16885  0147AE  0FE8               	addlw	-24
 16886  0147B0  6ED9               	movwf	fsr2l,c
 16887  0147B2  50E2               	movf	fsr1h,w,c
 16888  0147B4  6EDA               	movwf	fsr2h,c
 16889  0147B6  0EFF               	movlw	255
 16890  0147B8  22DA               	addwfc	fsr2h,f,c
 16891  0147BA  006F FF7B FFE6     	movff	postinc2,postinc1
 16892  0147C0  006F FF7B FFE6     	movff	postinc2,postinc1
 16893  0147C6  006F FF7B FFE6     	movff	postinc2,postinc1
 16894  0147CC  006F FF7B FFE6     	movff	postinc2,postinc1
 16895  0147D2  006F FF7B FFE6     	movff	postinc2,postinc1
 16896  0147D8  006F FF7B FFE6     	movff	postinc2,postinc1
 16897  0147DE  006F FF7B FFE6     	movff	postinc2,postinc1
 16898  0147E4  006F FF7B FFE6     	movff	postinc2,postinc1
 16899  0147EA  ECAC  F0AC         	call	___aodiv	;wreg free
 16900  0147EE  52E5               	movf	postdec1,f,c
 16901  0147F0  006F FF9C  F03C    	movff	indf1,btemp+23
 16902  0147F6  52E5               	movf	postdec1,f,c
 16903  0147F8  006F FF9C  F03B    	movff	indf1,btemp+22
 16904  0147FE  52E5               	movf	postdec1,f,c
 16905  014800  006F FF9C  F03A    	movff	indf1,btemp+21
 16906  014806  52E5               	movf	postdec1,f,c
 16907  014808  006F FF9C  F039    	movff	indf1,btemp+20
 16908  01480E  52E5               	movf	postdec1,f,c
 16909  014810  006F FF9C  F038    	movff	indf1,btemp+19
 16910  014816  52E5               	movf	postdec1,f,c
 16911  014818  006F FF9C  F037    	movff	indf1,btemp+18
 16912  01481E  52E5               	movf	postdec1,f,c
 16913  014820  006F FF9C  F036    	movff	indf1,btemp+17
 16914  014826  52E5               	movf	postdec1,f,c
 16915  014828  006F FF9C  F035    	movff	indf1,btemp+16
 16916  01482E  0EF8               	movlw	248
 16917  014830  26E1               	addwf	fsr1l,f,c
 16918  014832  0EFF               	movlw	255
 16919  014834  22E2               	addwfc	fsr1h,f,c
 16920                           
 16921                           ;stkvar	_n @ sp[(-18)+2]
 16922  014836  0EF0               	movlw	-16
 16923  014838  0060  F0D7  FFE3   	movff	btemp+16,plusw1
 16924  01483E  0EF1               	movlw	-15
 16925  014840  0060  F0DB  FFE3   	movff	btemp+17,plusw1
 16926  014846  0EF2               	movlw	-14
 16927  014848  0060  F0DF  FFE3   	movff	btemp+18,plusw1
 16928  01484E  0EF3               	movlw	-13
 16929  014850  0060  F0E3  FFE3   	movff	btemp+19,plusw1
 16930  014856  0EF4               	movlw	-12
 16931  014858  0060  F0E7  FFE3   	movff	btemp+20,plusw1
 16932  01485E  0EF5               	movlw	-11
 16933  014860  0060  F0EB  FFE3   	movff	btemp+21,plusw1
 16934  014866  0EF6               	movlw	-10
 16935  014868  0060  F0EF  FFE3   	movff	btemp+22,plusw1
 16936  01486E  0EF7               	movlw	-9
 16937  014870  0060  F0F3  FFE3   	movff	btemp+23,plusw1
 16938  014876                     l10170:
 16939                           
 16940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16941                           ;stkvar	_i @ sp[(-18)+10]
 16942  014876  0EF9               	movlw	-7
 16943  014878  BEE3               	btfsc	plusw1,7,c
 16944  01487A  D036               	goto	u9560
 16945  01487C  0EF9               	movlw	-7
 16946  01487E  50E3               	movf	plusw1,w,c
 16947  014880  E104               	bnz	u9520
 16948  014882  0EF8               	movlw	-8
 16949  014884  04E3               	decf	plusw1,w,c
 16950  014886  A0D8               	btfss	status,0,c
 16951  014888  D02F               	goto	u9560
 16952  01488A                     u9520:
 16953                           
 16954                           ;stkvar	_n @ sp[(-18)+2]
 16955  01488A  0EF0               	movlw	-16
 16956  01488C  50E3               	movf	plusw1,w,c
 16957  01488E  E115               	bnz	u9531
 16958  014890  0EF1               	movlw	-15
 16959  014892  50E3               	movf	plusw1,w,c
 16960  014894  E112               	bnz	u9531
 16961  014896  0EF2               	movlw	-14
 16962  014898  50E3               	movf	plusw1,w,c
 16963  01489A  E10F               	bnz	u9531
 16964  01489C  0EF3               	movlw	-13
 16965  01489E  50E3               	movf	plusw1,w,c
 16966  0148A0  E10C               	bnz	u9531
 16967  0148A2  0EF4               	movlw	-12
 16968  0148A4  50E3               	movf	plusw1,w,c
 16969  0148A6  E109               	bnz	u9531
 16970  0148A8  0EF5               	movlw	-11
 16971  0148AA  50E3               	movf	plusw1,w,c
 16972  0148AC  E106               	bnz	u9531
 16973  0148AE  0EF6               	movlw	-10
 16974  0148B0  50E3               	movf	plusw1,w,c
 16975  0148B2  E103               	bnz	u9531
 16976  0148B4  0EF7               	movlw	-9
 16977  0148B6  50E3               	movf	plusw1,w,c
 16978  0148B8  A4D8               	btfss	status,2,c
 16979  0148BA                     u9531:
 16980  0148BA  D6D4               	goto	l10160
 16981                           
 16982                           ;stkvar	_p @ sp[(-18)+16]
 16983  0148BC  0EFF               	movlw	-1
 16984  0148BE  BEE3               	btfsc	plusw1,7,c
 16985  0148C0  D007               	goto	u9540
 16986  0148C2  0EFF               	movlw	-1
 16987  0148C4  50E3               	movf	plusw1,w,c
 16988  0148C6  E103               	bnz	u9541
 16989  0148C8  0EFE               	movlw	-2
 16990  0148CA  04E3               	decf	plusw1,w,c
 16991  0148CC  B0D8               	btfsc	status,0,c
 16992  0148CE                     u9541:
 16993  0148CE  D6CA               	goto	l10160
 16994  0148D0                     u9540:
 16995                           
 16996                           ;stkvar	_w @ sp[(-18)+14]
 16997  0148D0  0EFD               	movlw	-3
 16998  0148D2  BEE3               	btfsc	plusw1,7,c
 16999  0148D4  D009               	goto	u9560
 17000  0148D6  0EFD               	movlw	-3
 17001  0148D8  50E3               	movf	plusw1,w,c
 17002  0148DA  E104               	bnz	u9550
 17003  0148DC  0EFC               	movlw	-4
 17004  0148DE  04E3               	decf	plusw1,w,c
 17005  0148E0  A0D8               	btfss	status,0,c
 17006  0148E2  D002               	goto	u9560
 17007  0148E4                     u9550:
 17008  0148E4  B20E               	btfsc	_flags^0,1,c
 17009  0148E6  D6BE               	goto	l10160
 17010  0148E8                     u9560:
 17011                           
 17012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17013                           ;stkvar	_s @ sp[(-18)+12]
 17014  0148E8  0EFA               	movlw	-6
 17015  0148EA  006F FF8C  F025    	movff	plusw1,btemp
 17016  0148F0  0EFB               	movlw	-5
 17017  0148F2  50E3               	movf	plusw1,w,c
 17018  0148F4  1025               	iorwf	btemp^0,w,c
 17019  0148F6  A4D8               	btfss	status,2,c
 17020  0148F8  D002               	goto	u9580
 17021  0148FA  A40E               	btfss	_flags^0,2,c
 17022  0148FC  D033               	goto	l10194
 17023  0148FE                     u9580:
 17024                           
 17025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17026                           ;stkvar	_i @ sp[(-18)+10]
 17027  0148FE  50E1               	movf	fsr1l,w,c
 17028  014900  0FF8               	addlw	-8
 17029  014902  6ED9               	movwf	fsr2l,c
 17030  014904  50E2               	movf	fsr1h,w,c
 17031  014906  6EDA               	movwf	fsr2h,c
 17032  014908  0EFF               	movlw	255
 17033  01490A  22DA               	addwfc	fsr2h,f,c
 17034  01490C  06DE               	decf	postinc2,f,c
 17035  01490E  0E00               	movlw	0
 17036  014910  5ADD               	subwfb	postdec2,f,c
 17037                           
 17038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17039                           ;stkvar	_s @ sp[(-18)+12]
 17040  014912  0EFA               	movlw	-6
 17041  014914  006F FF8C  F025    	movff	plusw1,btemp
 17042  01491A  0EFB               	movlw	-5
 17043  01491C  50E3               	movf	plusw1,w,c
 17044  01491E  1025               	iorwf	btemp^0,w,c
 17045  014920  A4D8               	btfss	status,2,c
 17046  014922  D002               	goto	l10190
 17047  014924  0E2B               	movlw	43
 17048  014926  D001               	goto	L17
 17049  014928                     l10190:
 17050  014928  0E2D               	movlw	45
 17051  01492A                     L17:
 17052  01492A  6E2F               	movwf	(btemp+10)^0,c
 17053  01492C  0E00               	movlw	0
 17054  01492E  6E30               	movwf	(btemp+11)^0,c
 17055                           
 17056                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17057  014930  0EEE               	movlw	-18
 17058  014932  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 17059  014938  0EEF               	movlw	-17
 17060  01493A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 17061                           
 17062                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17063                           ;stkvar	_i @ sp[(-18)+10]
 17064  014940  0EF8               	movlw	-8
 17065  014942  006F FF8C  F02F    	movff	plusw1,btemp+10
 17066  014948  0EF9               	movlw	-7
 17067  01494A  006F FF8C  F030    	movff	plusw1,btemp+11
 17068  014950  0E94               	movlw	low _dbuf
 17069  014952  242F               	addwf	(btemp+10)^0,w,c
 17070  014954  6ED9               	movwf	fsr2l,c
 17071  014956  0E03               	movlw	high _dbuf
 17072  014958  2030               	addwfc	(btemp+11)^0,w,c
 17073  01495A  6EDA               	movwf	fsr2h,c
 17074  01495C  0EEE               	movlw	-18
 17075  01495E  006F FF8F FFDF     	movff	plusw1,indf2
 17076  014964                     l10194:
 17077                           
 17078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17079                           ;stkvar	_w @ sp[(-18)+14]
 17080  014964  0EFC               	movlw	-4
 17081  014966  006F FF8F FFE6     	movff	plusw1,postinc1
 17082  01496C  006F FF8F FFE6     	movff	plusw1,postinc1
 17083                           
 17084                           ;stkvar	_i @ sp[(-20)+10]
 17085  014972  0E94               	movlw	low _dbuf
 17086  014974  6E2F               	movwf	(btemp+10)^0,c
 17087  014976  0E03               	movlw	high _dbuf
 17088  014978  6E30               	movwf	(btemp+11)^0,c
 17089  01497A  0EF6               	movlw	-10
 17090  01497C  50E3               	movf	plusw1,w,c
 17091  01497E  262F               	addwf	(btemp+10)^0,f,c
 17092  014980  0EF7               	movlw	-9
 17093  014982  50E3               	movf	plusw1,w,c
 17094  014984  2230               	addwfc	(btemp+11)^0,f,c
 17095  014986  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 17096  01498C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 17097                           
 17098                           ;stkvar	_fp @ sp[(-22)+-2]
 17099  014992  0EE8               	movlw	-24
 17100  014994  006F FF8F FFE6     	movff	plusw1,postinc1
 17101  01499A  006F FF8F FFE6     	movff	plusw1,postinc1
 17102  0149A0  EC3A  F0B9         	call	_pad	;wreg free
 17103                           
 17104                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17105  0149A4  0EE4               	movlw	228
 17106  0149A6  26E1               	addwf	fsr1l,f,c
 17107  0149A8  0EFF               	movlw	255
 17108  0149AA  22E2               	addwfc	fsr1h,f,c
 17109  0149AC  0012               	return		;funcret
 17110  0149AE                     __end_of_dtoa:
 17111                           	opt callstack 0
 17112                           
 17113 ;; *************** function _abs *****************
 17114 ;; Defined at:
 17115 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;  a               2  [STACK] int 
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;		None
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  2  [STACK] int 
 17122 ;; Registers used:
 17123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/3
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17133 ;;Total ram usage:        0 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:    7
 17136 ;; This function calls:
 17137 ;;		Nothing
 17138 ;; This function is called by:
 17139 ;;		_dtoa
 17140 ;; This function uses a reentrant model
 17141 ;;
 17142                           
 17143                           	psect	text62
 17144  018A36                     __ptext62:
 17145                           	opt callstack 0
 17146  018A36                     _abs:
 17147                           	opt callstack 16
 17148                           
 17149                           ;stkvar	_a @ sp[(0)+-2]
 17150                           
 17151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17152                           ;incstack = 0
 17153  018A36  0EFF               	movlw	-1
 17154  018A38  BEE3               	btfsc	plusw1,7,c
 17155  018A3A  D007               	goto	u4830
 17156  018A3C  0EFF               	movlw	-1
 17157  018A3E  50E3               	movf	plusw1,w,c
 17158  018A40  E112               	bnz	l6658
 17159  018A42  0EFE               	movlw	-2
 17160  018A44  04E3               	decf	plusw1,w,c
 17161  018A46  B0D8               	btfsc	status,0,c
 17162  018A48  D00E               	goto	l6658
 17163  018A4A                     u4830:
 17164                           
 17165                           ;stkvar	_a @ sp[(0)+-2]
 17166  018A4A  0EFE               	movlw	-2
 17167  018A4C  006F FF8C  F025    	movff	plusw1,btemp
 17168  018A52  1E25               	comf	btemp^0,f,c
 17169  018A54  0EFF               	movlw	-1
 17170  018A56  006F FF8C  F026    	movff	plusw1,btemp+1
 17171  018A5C  1E26               	comf	(btemp+1)^0,f,c
 17172  018A5E  2A25               	incf	btemp^0,f,c
 17173  018A60  B4D8               	btfsc	status,2,c
 17174  018A62  2A26               	incf	(btemp+1)^0,f,c
 17175  018A64  D008               	goto	l2916
 17176  018A66                     l6658:
 17177                           
 17178                           ;stkvar	_a @ sp[(0)+-2]
 17179  018A66  0EFE               	movlw	-2
 17180  018A68  006F FF8C  F025    	movff	plusw1,btemp
 17181  018A6E  0EFF               	movlw	-1
 17182  018A70  006F FF8C  F026    	movff	plusw1,btemp+1
 17183  018A76                     l2916:
 17184                           
 17185                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17186  018A76  52E5               	movf	postdec1,f,c
 17187  018A78  52E5               	movf	postdec1,f,c
 17188  018A7A  0012               	return		;funcret
 17189  018A7C                     __end_of_abs:
 17190                           	opt callstack 0
 17191                           
 17192 ;; *************** function ___aomod *****************
 17193 ;; Defined at:
 17194 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17195 ;; Parameters:    Size  Location     Type
 17196 ;;  dividend        8  [STACK] long long 
 17197 ;;  divisor         8  [STACK] long long 
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;  sign            1  [STACK] unsigned char 
 17200 ;;  counter         1  [STACK] unsigned char 
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  8  [STACK] long long 
 17203 ;; Registers used:
 17204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17205 ;; Tracked objects:
 17206 ;;		On entry : 0/3
 17207 ;;		On exit  : 0/0
 17208 ;;		Unchanged: 0/0
 17209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17214 ;;Total ram usage:        0 bytes
 17215 ;; Hardware stack levels used:    1
 17216 ;; Hardware stack levels required when called:    7
 17217 ;; This function calls:
 17218 ;;		Nothing
 17219 ;; This function is called by:
 17220 ;;		_dtoa
 17221 ;; This function uses a reentrant model
 17222 ;;
 17223                           
 17224                           	psect	text63
 17225  015E4C                     __ptext63:
 17226                           	opt callstack 0
 17227  015E4C                     ___aomod:
 17228                           	opt callstack 0
 17229                           
 17230                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17231  015E4C  52E6               	movf	postinc1,f,c
 17232  015E4E  52E6               	movf	postinc1,f,c
 17233                           
 17234                           ;stkvar	_sign @ sp[(-2)+0]
 17235                           
 17236                           ;incstack = 0
 17237  015E50  0EFE               	movlw	-2
 17238  015E52  6AE3               	clrf	plusw1,c
 17239                           
 17240                           ;stkvar	_dividend @ sp[(-2)+-8]
 17241  015E54  0EFD               	movlw	-3
 17242  015E56  AEE3               	btfss	plusw1,7,c
 17243  015E58  D028               	goto	l6816
 17244                           
 17245                           ;stkvar	_dividend @ sp[(-2)+-8]
 17246                           ;stkvar	_dividend @ sp[(-2)+-8]
 17247  015E5A  0EF6               	movlw	-10
 17248  015E5C  6CE3               	negf	plusw1,c
 17249  015E5E  0EF7               	movlw	-9
 17250  015E60  1EE3               	comf	plusw1,f,c
 17251  015E62  0EF8               	movlw	-8
 17252  015E64  1EE3               	comf	plusw1,f,c
 17253  015E66  0EF9               	movlw	-7
 17254  015E68  1EE3               	comf	plusw1,f,c
 17255  015E6A  0EFA               	movlw	-6
 17256  015E6C  1EE3               	comf	plusw1,f,c
 17257  015E6E  0EFB               	movlw	-5
 17258  015E70  1EE3               	comf	plusw1,f,c
 17259  015E72  0EFC               	movlw	-4
 17260  015E74  1EE3               	comf	plusw1,f,c
 17261  015E76  0EFD               	movlw	-3
 17262  015E78  1EE3               	comf	plusw1,f,c
 17263  015E7A  E314               	bnc	u5260
 17264  015E7C  0EF7               	movlw	-9
 17265  015E7E  2AE3               	incf	plusw1,f,c
 17266  015E80  E311               	bnc	u5260
 17267  015E82  0EF8               	movlw	-8
 17268  015E84  2AE3               	incf	plusw1,f,c
 17269  015E86  E30E               	bnc	u5260
 17270  015E88  0EF9               	movlw	-7
 17271  015E8A  2AE3               	incf	plusw1,f,c
 17272  015E8C  E30B               	bnc	u5260
 17273  015E8E  0EFA               	movlw	-6
 17274  015E90  2AE3               	incf	plusw1,f,c
 17275  015E92  E308               	bnc	u5260
 17276  015E94  0EFB               	movlw	-5
 17277  015E96  2AE3               	incf	plusw1,f,c
 17278  015E98  E305               	bnc	u5260
 17279  015E9A  0EFC               	movlw	-4
 17280  015E9C  2AE3               	incf	plusw1,f,c
 17281  015E9E  E302               	bnc	u5260
 17282  015EA0  0EFD               	movlw	-3
 17283  015EA2  2AE3               	incf	plusw1,f,c
 17284  015EA4                     u5260:
 17285                           
 17286                           ;stkvar	_sign @ sp[(-2)+0]
 17287  015EA4  0EFE               	movlw	-2
 17288  015EA6  6AE3               	clrf	plusw1,c
 17289  015EA8  2AE3               	incf	plusw1,f,c
 17290  015EAA                     l6816:
 17291                           
 17292                           ;stkvar	_divisor @ sp[(-2)+-16]
 17293  015EAA  0EF5               	movlw	-11
 17294  015EAC  AEE3               	btfss	plusw1,7,c
 17295  015EAE  D025               	goto	u5280
 17296                           
 17297                           ;stkvar	_divisor @ sp[(-2)+-16]
 17298                           ;stkvar	_divisor @ sp[(-2)+-16]
 17299  015EB0  0EEE               	movlw	-18
 17300  015EB2  6CE3               	negf	plusw1,c
 17301  015EB4  0EEF               	movlw	-17
 17302  015EB6  1EE3               	comf	plusw1,f,c
 17303  015EB8  0EF0               	movlw	-16
 17304  015EBA  1EE3               	comf	plusw1,f,c
 17305  015EBC  0EF1               	movlw	-15
 17306  015EBE  1EE3               	comf	plusw1,f,c
 17307  015EC0  0EF2               	movlw	-14
 17308  015EC2  1EE3               	comf	plusw1,f,c
 17309  015EC4  0EF3               	movlw	-13
 17310  015EC6  1EE3               	comf	plusw1,f,c
 17311  015EC8  0EF4               	movlw	-12
 17312  015ECA  1EE3               	comf	plusw1,f,c
 17313  015ECC  0EF5               	movlw	-11
 17314  015ECE  1EE3               	comf	plusw1,f,c
 17315  015ED0  E314               	bnc	u5280
 17316  015ED2  0EEF               	movlw	-17
 17317  015ED4  2AE3               	incf	plusw1,f,c
 17318  015ED6  E311               	bnc	u5280
 17319  015ED8  0EF0               	movlw	-16
 17320  015EDA  2AE3               	incf	plusw1,f,c
 17321  015EDC  E30E               	bnc	u5280
 17322  015EDE  0EF1               	movlw	-15
 17323  015EE0  2AE3               	incf	plusw1,f,c
 17324  015EE2  E30B               	bnc	u5280
 17325  015EE4  0EF2               	movlw	-14
 17326  015EE6  2AE3               	incf	plusw1,f,c
 17327  015EE8  E308               	bnc	u5280
 17328  015EEA  0EF3               	movlw	-13
 17329  015EEC  2AE3               	incf	plusw1,f,c
 17330  015EEE  E305               	bnc	u5280
 17331  015EF0  0EF4               	movlw	-12
 17332  015EF2  2AE3               	incf	plusw1,f,c
 17333  015EF4  E302               	bnc	u5280
 17334  015EF6  0EF5               	movlw	-11
 17335  015EF8  2AE3               	incf	plusw1,f,c
 17336  015EFA                     u5280:
 17337                           
 17338                           ;stkvar	_divisor @ sp[(-2)+-16]
 17339  015EFA  0EEE               	movlw	-18
 17340  015EFC  50E3               	movf	plusw1,w,c
 17341  015EFE  E116               	bnz	u5290
 17342  015F00  0EEF               	movlw	-17
 17343  015F02  50E3               	movf	plusw1,w,c
 17344  015F04  E113               	bnz	u5290
 17345  015F06  0EF0               	movlw	-16
 17346  015F08  50E3               	movf	plusw1,w,c
 17347  015F0A  E110               	bnz	u5290
 17348  015F0C  0EF1               	movlw	-15
 17349  015F0E  50E3               	movf	plusw1,w,c
 17350  015F10  E10D               	bnz	u5290
 17351  015F12  0EF2               	movlw	-14
 17352  015F14  50E3               	movf	plusw1,w,c
 17353  015F16  E10A               	bnz	u5290
 17354  015F18  0EF3               	movlw	-13
 17355  015F1A  50E3               	movf	plusw1,w,c
 17356  015F1C  E107               	bnz	u5290
 17357  015F1E  0EF4               	movlw	-12
 17358  015F20  50E3               	movf	plusw1,w,c
 17359  015F22  E104               	bnz	u5290
 17360  015F24  0EF5               	movlw	-11
 17361  015F26  50E3               	movf	plusw1,w,c
 17362  015F28  B4D8               	btfsc	status,2,c
 17363  015F2A  D075               	goto	u5320
 17364  015F2C                     u5290:
 17365                           
 17366                           ;stkvar	_counter @ sp[(-2)+1]
 17367  015F2C  0EFF               	movlw	-1
 17368  015F2E  6AE3               	clrf	plusw1,c
 17369  015F30  D012               	goto	L18
 17370  015F32                     l6824:
 17371                           
 17372                           ;stkvar	_divisor @ sp[(-2)+-16]
 17373  015F32  90D8               	bcf	status,0,c
 17374  015F34  0EEE               	movlw	-18
 17375  015F36  36E3               	rlcf	plusw1,f,c
 17376  015F38  0EEF               	movlw	-17
 17377  015F3A  36E3               	rlcf	plusw1,f,c
 17378  015F3C  0EF0               	movlw	-16
 17379  015F3E  36E3               	rlcf	plusw1,f,c
 17380  015F40  0EF1               	movlw	-15
 17381  015F42  36E3               	rlcf	plusw1,f,c
 17382  015F44  0EF2               	movlw	-14
 17383  015F46  36E3               	rlcf	plusw1,f,c
 17384  015F48  0EF3               	movlw	-13
 17385  015F4A  36E3               	rlcf	plusw1,f,c
 17386  015F4C  0EF4               	movlw	-12
 17387  015F4E  36E3               	rlcf	plusw1,f,c
 17388  015F50  0EF5               	movlw	-11
 17389  015F52  36E3               	rlcf	plusw1,f,c
 17390                           
 17391                           ;stkvar	_counter @ sp[(-2)+1]
 17392  015F54  0EFF               	movlw	-1
 17393  015F56                     L18:
 17394  015F56  2AE3               	incf	plusw1,f,c
 17395                           
 17396                           ;stkvar	_divisor @ sp[(-2)+-16]
 17397  015F58  0EF5               	movlw	-11
 17398  015F5A  AEE3               	btfss	plusw1,7,c
 17399  015F5C  D7EA               	goto	l6824
 17400  015F5E                     u5300:
 17401                           
 17402                           ;stkvar	_divisor @ sp[(-2)+-16]
 17403                           ;stkvar	_dividend @ sp[(-2)+-8]
 17404  015F5E  50E1               	movf	fsr1l,w,c
 17405  015F60  0FF6               	addlw	-10
 17406  015F62  6ED9               	movwf	fsr2l,c
 17407  015F64  50E2               	movf	fsr1h,w,c
 17408  015F66  6EDA               	movwf	fsr2h,c
 17409  015F68  0EFF               	movlw	255
 17410  015F6A  22DA               	addwfc	fsr2h,f,c
 17411  015F6C  0EEE               	movlw	-18
 17412  015F6E  50E3               	movf	plusw1,w,c
 17413  015F70  5CDE               	subwf	postinc2,w,c
 17414  015F72  0EEF               	movlw	-17
 17415  015F74  50E3               	movf	plusw1,w,c
 17416  015F76  58DE               	subwfb	postinc2,w,c
 17417  015F78  0EF0               	movlw	-16
 17418  015F7A  50E3               	movf	plusw1,w,c
 17419  015F7C  58DE               	subwfb	postinc2,w,c
 17420  015F7E  0EF1               	movlw	-15
 17421  015F80  50E3               	movf	plusw1,w,c
 17422  015F82  58DE               	subwfb	postinc2,w,c
 17423  015F84  0EF2               	movlw	-14
 17424  015F86  50E3               	movf	plusw1,w,c
 17425  015F88  58DE               	subwfb	postinc2,w,c
 17426  015F8A  0EF3               	movlw	-13
 17427  015F8C  50E3               	movf	plusw1,w,c
 17428  015F8E  58DE               	subwfb	postinc2,w,c
 17429  015F90  0EF4               	movlw	-12
 17430  015F92  50E3               	movf	plusw1,w,c
 17431  015F94  58DE               	subwfb	postinc2,w,c
 17432  015F96  0EF5               	movlw	-11
 17433  015F98  50E3               	movf	plusw1,w,c
 17434  015F9A  58DE               	subwfb	postinc2,w,c
 17435  015F9C  A0D8               	btfss	status,0,c
 17436  015F9E  D01F               	goto	l6832
 17437                           
 17438                           ;stkvar	_divisor @ sp[(-2)+-16]
 17439                           ;stkvar	_dividend @ sp[(-2)+-8]
 17440  015FA0  50E1               	movf	fsr1l,w,c
 17441  015FA2  0FF6               	addlw	-10
 17442  015FA4  6ED9               	movwf	fsr2l,c
 17443  015FA6  50E2               	movf	fsr1h,w,c
 17444  015FA8  6EDA               	movwf	fsr2h,c
 17445  015FAA  0EFF               	movlw	255
 17446  015FAC  22DA               	addwfc	fsr2h,f,c
 17447  015FAE  0EEE               	movlw	-18
 17448  015FB0  50E3               	movf	plusw1,w,c
 17449  015FB2  5EDE               	subwf	postinc2,f,c
 17450  015FB4  0EEF               	movlw	-17
 17451  015FB6  50E3               	movf	plusw1,w,c
 17452  015FB8  5ADE               	subwfb	postinc2,f,c
 17453  015FBA  0EF0               	movlw	-16
 17454  015FBC  50E3               	movf	plusw1,w,c
 17455  015FBE  5ADE               	subwfb	postinc2,f,c
 17456  015FC0  0EF1               	movlw	-15
 17457  015FC2  50E3               	movf	plusw1,w,c
 17458  015FC4  5ADE               	subwfb	postinc2,f,c
 17459  015FC6  0EF2               	movlw	-14
 17460  015FC8  50E3               	movf	plusw1,w,c
 17461  015FCA  5ADE               	subwfb	postinc2,f,c
 17462  015FCC  0EF3               	movlw	-13
 17463  015FCE  50E3               	movf	plusw1,w,c
 17464  015FD0  5ADE               	subwfb	postinc2,f,c
 17465  015FD2  0EF4               	movlw	-12
 17466  015FD4  50E3               	movf	plusw1,w,c
 17467  015FD6  5ADE               	subwfb	postinc2,f,c
 17468  015FD8  0EF5               	movlw	-11
 17469  015FDA  50E3               	movf	plusw1,w,c
 17470  015FDC  5ADE               	subwfb	postinc2,f,c
 17471  015FDE                     l6832:
 17472                           
 17473                           ;stkvar	_divisor @ sp[(-2)+-16]
 17474  015FDE  90D8               	bcf	status,0,c
 17475  015FE0  0EF5               	movlw	-11
 17476  015FE2  32E3               	rrcf	plusw1,f,c
 17477  015FE4  0EF4               	movlw	-12
 17478  015FE6  32E3               	rrcf	plusw1,f,c
 17479  015FE8  0EF3               	movlw	-13
 17480  015FEA  32E3               	rrcf	plusw1,f,c
 17481  015FEC  0EF2               	movlw	-14
 17482  015FEE  32E3               	rrcf	plusw1,f,c
 17483  015FF0  0EF1               	movlw	-15
 17484  015FF2  32E3               	rrcf	plusw1,f,c
 17485  015FF4  0EF0               	movlw	-16
 17486  015FF6  32E3               	rrcf	plusw1,f,c
 17487  015FF8  0EEF               	movlw	-17
 17488  015FFA  32E3               	rrcf	plusw1,f,c
 17489  015FFC  0EEE               	movlw	-18
 17490  015FFE  32E3               	rrcf	plusw1,f,c
 17491                           
 17492                           ;stkvar	_counter @ sp[(-2)+1]
 17493  016000  0EFF               	movlw	-1
 17494  016002  50E3               	movf	plusw1,w,c
 17495  016004  6E25               	movwf	btemp^0,c
 17496  016006  0E01               	movlw	1
 17497  016008  5E25               	subwf	btemp^0,f,c
 17498  01600A  0EFF               	movlw	-1
 17499  01600C  0060  F097  FFE3   	movff	btemp,plusw1
 17500  016012  A4D8               	btfss	status,2,c
 17501  016014  D7A4               	goto	u5300
 17502  016016                     u5320:
 17503                           
 17504                           ;stkvar	_sign @ sp[(-2)+0]
 17505  016016  0EFE               	movlw	-2
 17506  016018  50E3               	movf	plusw1,w,c
 17507  01601A  B4D8               	btfsc	status,2,c
 17508  01601C  D025               	goto	u5340
 17509                           
 17510                           ;stkvar	_dividend @ sp[(-2)+-8]
 17511                           ;stkvar	_dividend @ sp[(-2)+-8]
 17512  01601E  0EF6               	movlw	-10
 17513  016020  6CE3               	negf	plusw1,c
 17514  016022  0EF7               	movlw	-9
 17515  016024  1EE3               	comf	plusw1,f,c
 17516  016026  0EF8               	movlw	-8
 17517  016028  1EE3               	comf	plusw1,f,c
 17518  01602A  0EF9               	movlw	-7
 17519  01602C  1EE3               	comf	plusw1,f,c
 17520  01602E  0EFA               	movlw	-6
 17521  016030  1EE3               	comf	plusw1,f,c
 17522  016032  0EFB               	movlw	-5
 17523  016034  1EE3               	comf	plusw1,f,c
 17524  016036  0EFC               	movlw	-4
 17525  016038  1EE3               	comf	plusw1,f,c
 17526  01603A  0EFD               	movlw	-3
 17527  01603C  1EE3               	comf	plusw1,f,c
 17528  01603E  E314               	bnc	u5340
 17529  016040  0EF7               	movlw	-9
 17530  016042  2AE3               	incf	plusw1,f,c
 17531  016044  E311               	bnc	u5340
 17532  016046  0EF8               	movlw	-8
 17533  016048  2AE3               	incf	plusw1,f,c
 17534  01604A  E30E               	bnc	u5340
 17535  01604C  0EF9               	movlw	-7
 17536  01604E  2AE3               	incf	plusw1,f,c
 17537  016050  E30B               	bnc	u5340
 17538  016052  0EFA               	movlw	-6
 17539  016054  2AE3               	incf	plusw1,f,c
 17540  016056  E308               	bnc	u5340
 17541  016058  0EFB               	movlw	-5
 17542  01605A  2AE3               	incf	plusw1,f,c
 17543  01605C  E305               	bnc	u5340
 17544  01605E  0EFC               	movlw	-4
 17545  016060  2AE3               	incf	plusw1,f,c
 17546  016062  E302               	bnc	u5340
 17547  016064  0EFD               	movlw	-3
 17548  016066  2AE3               	incf	plusw1,f,c
 17549  016068                     u5340:
 17550                           
 17551                           ;stkvar	_dividend @ sp[(-2)+-8]
 17552  016068  0EF6               	movlw	246
 17553  01606A  24E1               	addwf	fsr1l,w,c
 17554  01606C  6ED9               	movwf	fsr2l,c
 17555  01606E  0EFF               	movlw	255
 17556  016070  20E2               	addwfc	fsr1h,w,c
 17557  016072  6EDA               	movwf	fsr2h,c
 17558                           
 17559                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17560  016074  0E08               	movlw	8
 17561  016076  6E25               	movwf	btemp^0,c
 17562  016078  0EF6               	movlw	-10
 17563  01607A                     us535999:
 17564  01607A  006F FF7B FFE3     	movff	postinc2,plusw1
 17565  016080  28E8               	incf	wreg,w,c
 17566  016082  2E25               	decfsz	btemp^0,f,c
 17567  016084  D7FA               	bra	us535999
 17568                           
 17569                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17570  016086  52E5               	movf	postdec1,f,c
 17571  016088  52E5               	movf	postdec1,f,c
 17572  01608A  0012               	return		;funcret
 17573  01608C                     __end_of___aomod:
 17574                           	opt callstack 0
 17575                           
 17576 ;; *************** function ___aodiv *****************
 17577 ;; Defined at:
 17578 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;  dividend        8  [STACK] long long 
 17581 ;;  divisor         8  [STACK] long long 
 17582 ;; Auto vars:     Size  Location     Type
 17583 ;;  quotient        8  [STACK] long long 
 17584 ;;  sign            1  [STACK] unsigned char 
 17585 ;;  counter         1  [STACK] unsigned char 
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  8  [STACK] long long 
 17588 ;; Registers used:
 17589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/3
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17599 ;;Total ram usage:        0 bytes
 17600 ;; Hardware stack levels used:    1
 17601 ;; Hardware stack levels required when called:    7
 17602 ;; This function calls:
 17603 ;;		Nothing
 17604 ;; This function is called by:
 17605 ;;		_dtoa
 17606 ;; This function uses a reentrant model
 17607 ;;
 17608                           
 17609                           	psect	text64
 17610  015958                     __ptext64:
 17611                           	opt callstack 0
 17612  015958                     ___aodiv:
 17613                           	opt callstack 0
 17614                           
 17615                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17616  015958  0E0A               	movlw	10
 17617  01595A  26E1               	addwf	fsr1l,f,c
 17618  01595C  0E00               	movlw	0
 17619  01595E  22E2               	addwfc	fsr1h,f,c
 17620                           
 17621                           ;stkvar	_sign @ sp[(-10)+8]
 17622                           
 17623                           ;incstack = 0
 17624  015960  0EFE               	movlw	-2
 17625  015962  6AE3               	clrf	plusw1,c
 17626                           
 17627                           ;stkvar	_divisor @ sp[(-10)+-16]
 17628  015964  0EED               	movlw	-19
 17629  015966  AEE3               	btfss	plusw1,7,c
 17630  015968  D028               	goto	l6772
 17631                           
 17632                           ;stkvar	_divisor @ sp[(-10)+-16]
 17633                           ;stkvar	_divisor @ sp[(-10)+-16]
 17634  01596A  0EE6               	movlw	-26
 17635  01596C  6CE3               	negf	plusw1,c
 17636  01596E  0EE7               	movlw	-25
 17637  015970  1EE3               	comf	plusw1,f,c
 17638  015972  0EE8               	movlw	-24
 17639  015974  1EE3               	comf	plusw1,f,c
 17640  015976  0EE9               	movlw	-23
 17641  015978  1EE3               	comf	plusw1,f,c
 17642  01597A  0EEA               	movlw	-22
 17643  01597C  1EE3               	comf	plusw1,f,c
 17644  01597E  0EEB               	movlw	-21
 17645  015980  1EE3               	comf	plusw1,f,c
 17646  015982  0EEC               	movlw	-20
 17647  015984  1EE3               	comf	plusw1,f,c
 17648  015986  0EED               	movlw	-19
 17649  015988  1EE3               	comf	plusw1,f,c
 17650  01598A  E314               	bnc	u5140
 17651  01598C  0EE7               	movlw	-25
 17652  01598E  2AE3               	incf	plusw1,f,c
 17653  015990  E311               	bnc	u5140
 17654  015992  0EE8               	movlw	-24
 17655  015994  2AE3               	incf	plusw1,f,c
 17656  015996  E30E               	bnc	u5140
 17657  015998  0EE9               	movlw	-23
 17658  01599A  2AE3               	incf	plusw1,f,c
 17659  01599C  E30B               	bnc	u5140
 17660  01599E  0EEA               	movlw	-22
 17661  0159A0  2AE3               	incf	plusw1,f,c
 17662  0159A2  E308               	bnc	u5140
 17663  0159A4  0EEB               	movlw	-21
 17664  0159A6  2AE3               	incf	plusw1,f,c
 17665  0159A8  E305               	bnc	u5140
 17666  0159AA  0EEC               	movlw	-20
 17667  0159AC  2AE3               	incf	plusw1,f,c
 17668  0159AE  E302               	bnc	u5140
 17669  0159B0  0EED               	movlw	-19
 17670  0159B2  2AE3               	incf	plusw1,f,c
 17671  0159B4                     u5140:
 17672                           
 17673                           ;stkvar	_sign @ sp[(-10)+8]
 17674  0159B4  0EFE               	movlw	-2
 17675  0159B6  6AE3               	clrf	plusw1,c
 17676  0159B8  2AE3               	incf	plusw1,f,c
 17677  0159BA                     l6772:
 17678                           
 17679                           ;stkvar	_dividend @ sp[(-10)+-8]
 17680  0159BA  0EF5               	movlw	-11
 17681  0159BC  AEE3               	btfss	plusw1,7,c
 17682  0159BE  D027               	goto	l6778
 17683                           
 17684                           ;stkvar	_dividend @ sp[(-10)+-8]
 17685                           ;stkvar	_dividend @ sp[(-10)+-8]
 17686  0159C0  0EEE               	movlw	-18
 17687  0159C2  6CE3               	negf	plusw1,c
 17688  0159C4  0EEF               	movlw	-17
 17689  0159C6  1EE3               	comf	plusw1,f,c
 17690  0159C8  0EF0               	movlw	-16
 17691  0159CA  1EE3               	comf	plusw1,f,c
 17692  0159CC  0EF1               	movlw	-15
 17693  0159CE  1EE3               	comf	plusw1,f,c
 17694  0159D0  0EF2               	movlw	-14
 17695  0159D2  1EE3               	comf	plusw1,f,c
 17696  0159D4  0EF3               	movlw	-13
 17697  0159D6  1EE3               	comf	plusw1,f,c
 17698  0159D8  0EF4               	movlw	-12
 17699  0159DA  1EE3               	comf	plusw1,f,c
 17700  0159DC  0EF5               	movlw	-11
 17701  0159DE  1EE3               	comf	plusw1,f,c
 17702  0159E0  E314               	bnc	u5160
 17703  0159E2  0EEF               	movlw	-17
 17704  0159E4  2AE3               	incf	plusw1,f,c
 17705  0159E6  E311               	bnc	u5160
 17706  0159E8  0EF0               	movlw	-16
 17707  0159EA  2AE3               	incf	plusw1,f,c
 17708  0159EC  E30E               	bnc	u5160
 17709  0159EE  0EF1               	movlw	-15
 17710  0159F0  2AE3               	incf	plusw1,f,c
 17711  0159F2  E30B               	bnc	u5160
 17712  0159F4  0EF2               	movlw	-14
 17713  0159F6  2AE3               	incf	plusw1,f,c
 17714  0159F8  E308               	bnc	u5160
 17715  0159FA  0EF3               	movlw	-13
 17716  0159FC  2AE3               	incf	plusw1,f,c
 17717  0159FE  E305               	bnc	u5160
 17718  015A00  0EF4               	movlw	-12
 17719  015A02  2AE3               	incf	plusw1,f,c
 17720  015A04  E302               	bnc	u5160
 17721  015A06  0EF5               	movlw	-11
 17722  015A08  2AE3               	incf	plusw1,f,c
 17723  015A0A                     u5160:
 17724                           
 17725                           ;stkvar	_sign @ sp[(-10)+8]
 17726  015A0A  0EFE               	movlw	-2
 17727  015A0C  70E3               	btg	plusw1,0,c
 17728  015A0E                     l6778:
 17729                           
 17730                           ;stkvar	_quotient @ sp[(-10)+0]
 17731  015A0E  0E07               	movlw	7
 17732  015A10  6E25               	movwf	btemp^0,c
 17733  015A12  0EF6               	movlw	-10
 17734  015A14                     u5171:
 17735  015A14  6AE3               	clrf	plusw1,c
 17736  015A16  2AE8               	incf	wreg,f,c
 17737  015A18  0625               	decf	btemp^0,f,c
 17738  015A1A  E2FC               	bc	u5171
 17739                           
 17740                           ;stkvar	_divisor @ sp[(-10)+-16]
 17741  015A1C  0EE6               	movlw	-26
 17742  015A1E  50E3               	movf	plusw1,w,c
 17743  015A20  E116               	bnz	u5180
 17744  015A22  0EE7               	movlw	-25
 17745  015A24  50E3               	movf	plusw1,w,c
 17746  015A26  E113               	bnz	u5180
 17747  015A28  0EE8               	movlw	-24
 17748  015A2A  50E3               	movf	plusw1,w,c
 17749  015A2C  E110               	bnz	u5180
 17750  015A2E  0EE9               	movlw	-23
 17751  015A30  50E3               	movf	plusw1,w,c
 17752  015A32  E10D               	bnz	u5180
 17753  015A34  0EEA               	movlw	-22
 17754  015A36  50E3               	movf	plusw1,w,c
 17755  015A38  E10A               	bnz	u5180
 17756  015A3A  0EEB               	movlw	-21
 17757  015A3C  50E3               	movf	plusw1,w,c
 17758  015A3E  E107               	bnz	u5180
 17759  015A40  0EEC               	movlw	-20
 17760  015A42  50E3               	movf	plusw1,w,c
 17761  015A44  E104               	bnz	u5180
 17762  015A46  0EED               	movlw	-19
 17763  015A48  50E3               	movf	plusw1,w,c
 17764  015A4A  B4D8               	btfsc	status,2,c
 17765  015A4C  D088               	goto	u5210
 17766  015A4E                     u5180:
 17767                           
 17768                           ;stkvar	_counter @ sp[(-10)+9]
 17769  015A4E  0EFF               	movlw	-1
 17770  015A50  6AE3               	clrf	plusw1,c
 17771  015A52  D012               	goto	L19
 17772  015A54                     l6784:
 17773                           
 17774                           ;stkvar	_divisor @ sp[(-10)+-16]
 17775  015A54  90D8               	bcf	status,0,c
 17776  015A56  0EE6               	movlw	-26
 17777  015A58  36E3               	rlcf	plusw1,f,c
 17778  015A5A  0EE7               	movlw	-25
 17779  015A5C  36E3               	rlcf	plusw1,f,c
 17780  015A5E  0EE8               	movlw	-24
 17781  015A60  36E3               	rlcf	plusw1,f,c
 17782  015A62  0EE9               	movlw	-23
 17783  015A64  36E3               	rlcf	plusw1,f,c
 17784  015A66  0EEA               	movlw	-22
 17785  015A68  36E3               	rlcf	plusw1,f,c
 17786  015A6A  0EEB               	movlw	-21
 17787  015A6C  36E3               	rlcf	plusw1,f,c
 17788  015A6E  0EEC               	movlw	-20
 17789  015A70  36E3               	rlcf	plusw1,f,c
 17790  015A72  0EED               	movlw	-19
 17791  015A74  36E3               	rlcf	plusw1,f,c
 17792                           
 17793                           ;stkvar	_counter @ sp[(-10)+9]
 17794  015A76  0EFF               	movlw	-1
 17795  015A78                     L19:
 17796  015A78  2AE3               	incf	plusw1,f,c
 17797                           
 17798                           ;stkvar	_divisor @ sp[(-10)+-16]
 17799  015A7A  0EED               	movlw	-19
 17800  015A7C  AEE3               	btfss	plusw1,7,c
 17801  015A7E  D7EA               	goto	l6784
 17802  015A80                     u5190:
 17803                           
 17804                           ;stkvar	_quotient @ sp[(-10)+0]
 17805  015A80  90D8               	bcf	status,0,c
 17806  015A82  0EF6               	movlw	-10
 17807  015A84  36E3               	rlcf	plusw1,f,c
 17808  015A86  0EF7               	movlw	-9
 17809  015A88  36E3               	rlcf	plusw1,f,c
 17810  015A8A  0EF8               	movlw	-8
 17811  015A8C  36E3               	rlcf	plusw1,f,c
 17812  015A8E  0EF9               	movlw	-7
 17813  015A90  36E3               	rlcf	plusw1,f,c
 17814  015A92  0EFA               	movlw	-6
 17815  015A94  36E3               	rlcf	plusw1,f,c
 17816  015A96  0EFB               	movlw	-5
 17817  015A98  36E3               	rlcf	plusw1,f,c
 17818  015A9A  0EFC               	movlw	-4
 17819  015A9C  36E3               	rlcf	plusw1,f,c
 17820  015A9E  0EFD               	movlw	-3
 17821  015AA0  36E3               	rlcf	plusw1,f,c
 17822                           
 17823                           ;stkvar	_divisor @ sp[(-10)+-16]
 17824                           ;stkvar	_dividend @ sp[(-10)+-8]
 17825  015AA2  50E1               	movf	fsr1l,w,c
 17826  015AA4  0FEE               	addlw	-18
 17827  015AA6  6ED9               	movwf	fsr2l,c
 17828  015AA8  50E2               	movf	fsr1h,w,c
 17829  015AAA  6EDA               	movwf	fsr2h,c
 17830  015AAC  0EFF               	movlw	255
 17831  015AAE  22DA               	addwfc	fsr2h,f,c
 17832  015AB0  0EE6               	movlw	-26
 17833  015AB2  50E3               	movf	plusw1,w,c
 17834  015AB4  5CDE               	subwf	postinc2,w,c
 17835  015AB6  0EE7               	movlw	-25
 17836  015AB8  50E3               	movf	plusw1,w,c
 17837  015ABA  58DE               	subwfb	postinc2,w,c
 17838  015ABC  0EE8               	movlw	-24
 17839  015ABE  50E3               	movf	plusw1,w,c
 17840  015AC0  58DE               	subwfb	postinc2,w,c
 17841  015AC2  0EE9               	movlw	-23
 17842  015AC4  50E3               	movf	plusw1,w,c
 17843  015AC6  58DE               	subwfb	postinc2,w,c
 17844  015AC8  0EEA               	movlw	-22
 17845  015ACA  50E3               	movf	plusw1,w,c
 17846  015ACC  58DE               	subwfb	postinc2,w,c
 17847  015ACE  0EEB               	movlw	-21
 17848  015AD0  50E3               	movf	plusw1,w,c
 17849  015AD2  58DE               	subwfb	postinc2,w,c
 17850  015AD4  0EEC               	movlw	-20
 17851  015AD6  50E3               	movf	plusw1,w,c
 17852  015AD8  58DE               	subwfb	postinc2,w,c
 17853  015ADA  0EED               	movlw	-19
 17854  015ADC  50E3               	movf	plusw1,w,c
 17855  015ADE  58DE               	subwfb	postinc2,w,c
 17856  015AE0  A0D8               	btfss	status,0,c
 17857  015AE2  D021               	goto	l6796
 17858                           
 17859                           ;stkvar	_divisor @ sp[(-10)+-16]
 17860                           ;stkvar	_dividend @ sp[(-10)+-8]
 17861  015AE4  50E1               	movf	fsr1l,w,c
 17862  015AE6  0FEE               	addlw	-18
 17863  015AE8  6ED9               	movwf	fsr2l,c
 17864  015AEA  50E2               	movf	fsr1h,w,c
 17865  015AEC  6EDA               	movwf	fsr2h,c
 17866  015AEE  0EFF               	movlw	255
 17867  015AF0  22DA               	addwfc	fsr2h,f,c
 17868  015AF2  0EE6               	movlw	-26
 17869  015AF4  50E3               	movf	plusw1,w,c
 17870  015AF6  5EDE               	subwf	postinc2,f,c
 17871  015AF8  0EE7               	movlw	-25
 17872  015AFA  50E3               	movf	plusw1,w,c
 17873  015AFC  5ADE               	subwfb	postinc2,f,c
 17874  015AFE  0EE8               	movlw	-24
 17875  015B00  50E3               	movf	plusw1,w,c
 17876  015B02  5ADE               	subwfb	postinc2,f,c
 17877  015B04  0EE9               	movlw	-23
 17878  015B06  50E3               	movf	plusw1,w,c
 17879  015B08  5ADE               	subwfb	postinc2,f,c
 17880  015B0A  0EEA               	movlw	-22
 17881  015B0C  50E3               	movf	plusw1,w,c
 17882  015B0E  5ADE               	subwfb	postinc2,f,c
 17883  015B10  0EEB               	movlw	-21
 17884  015B12  50E3               	movf	plusw1,w,c
 17885  015B14  5ADE               	subwfb	postinc2,f,c
 17886  015B16  0EEC               	movlw	-20
 17887  015B18  50E3               	movf	plusw1,w,c
 17888  015B1A  5ADE               	subwfb	postinc2,f,c
 17889  015B1C  0EED               	movlw	-19
 17890  015B1E  50E3               	movf	plusw1,w,c
 17891  015B20  5ADE               	subwfb	postinc2,f,c
 17892                           
 17893                           ;stkvar	_quotient @ sp[(-10)+0]
 17894  015B22  0EF6               	movlw	-10
 17895  015B24  80E3               	bsf	plusw1,0,c
 17896  015B26                     l6796:
 17897                           
 17898                           ;stkvar	_divisor @ sp[(-10)+-16]
 17899  015B26  90D8               	bcf	status,0,c
 17900  015B28  0EED               	movlw	-19
 17901  015B2A  32E3               	rrcf	plusw1,f,c
 17902  015B2C  0EEC               	movlw	-20
 17903  015B2E  32E3               	rrcf	plusw1,f,c
 17904  015B30  0EEB               	movlw	-21
 17905  015B32  32E3               	rrcf	plusw1,f,c
 17906  015B34  0EEA               	movlw	-22
 17907  015B36  32E3               	rrcf	plusw1,f,c
 17908  015B38  0EE9               	movlw	-23
 17909  015B3A  32E3               	rrcf	plusw1,f,c
 17910  015B3C  0EE8               	movlw	-24
 17911  015B3E  32E3               	rrcf	plusw1,f,c
 17912  015B40  0EE7               	movlw	-25
 17913  015B42  32E3               	rrcf	plusw1,f,c
 17914  015B44  0EE6               	movlw	-26
 17915  015B46  32E3               	rrcf	plusw1,f,c
 17916                           
 17917                           ;stkvar	_counter @ sp[(-10)+9]
 17918  015B48  0EFF               	movlw	-1
 17919  015B4A  50E3               	movf	plusw1,w,c
 17920  015B4C  6E25               	movwf	btemp^0,c
 17921  015B4E  0E01               	movlw	1
 17922  015B50  5E25               	subwf	btemp^0,f,c
 17923  015B52  0EFF               	movlw	-1
 17924  015B54  0060  F097  FFE3   	movff	btemp,plusw1
 17925  015B5A  A4D8               	btfss	status,2,c
 17926  015B5C  D791               	goto	u5190
 17927  015B5E                     u5210:
 17928                           
 17929                           ;stkvar	_sign @ sp[(-10)+8]
 17930  015B5E  0EFE               	movlw	-2
 17931  015B60  50E3               	movf	plusw1,w,c
 17932  015B62  B4D8               	btfsc	status,2,c
 17933  015B64  D025               	goto	u5230
 17934                           
 17935                           ;stkvar	_quotient @ sp[(-10)+0]
 17936                           ;stkvar	_quotient @ sp[(-10)+0]
 17937  015B66  0EF6               	movlw	-10
 17938  015B68  6CE3               	negf	plusw1,c
 17939  015B6A  0EF7               	movlw	-9
 17940  015B6C  1EE3               	comf	plusw1,f,c
 17941  015B6E  0EF8               	movlw	-8
 17942  015B70  1EE3               	comf	plusw1,f,c
 17943  015B72  0EF9               	movlw	-7
 17944  015B74  1EE3               	comf	plusw1,f,c
 17945  015B76  0EFA               	movlw	-6
 17946  015B78  1EE3               	comf	plusw1,f,c
 17947  015B7A  0EFB               	movlw	-5
 17948  015B7C  1EE3               	comf	plusw1,f,c
 17949  015B7E  0EFC               	movlw	-4
 17950  015B80  1EE3               	comf	plusw1,f,c
 17951  015B82  0EFD               	movlw	-3
 17952  015B84  1EE3               	comf	plusw1,f,c
 17953  015B86  E314               	bnc	u5230
 17954  015B88  0EF7               	movlw	-9
 17955  015B8A  2AE3               	incf	plusw1,f,c
 17956  015B8C  E311               	bnc	u5230
 17957  015B8E  0EF8               	movlw	-8
 17958  015B90  2AE3               	incf	plusw1,f,c
 17959  015B92  E30E               	bnc	u5230
 17960  015B94  0EF9               	movlw	-7
 17961  015B96  2AE3               	incf	plusw1,f,c
 17962  015B98  E30B               	bnc	u5230
 17963  015B9A  0EFA               	movlw	-6
 17964  015B9C  2AE3               	incf	plusw1,f,c
 17965  015B9E  E308               	bnc	u5230
 17966  015BA0  0EFB               	movlw	-5
 17967  015BA2  2AE3               	incf	plusw1,f,c
 17968  015BA4  E305               	bnc	u5230
 17969  015BA6  0EFC               	movlw	-4
 17970  015BA8  2AE3               	incf	plusw1,f,c
 17971  015BAA  E302               	bnc	u5230
 17972  015BAC  0EFD               	movlw	-3
 17973  015BAE  2AE3               	incf	plusw1,f,c
 17974  015BB0                     u5230:
 17975                           
 17976                           ;stkvar	_quotient @ sp[(-10)+0]
 17977  015BB0  0EF6               	movlw	246
 17978  015BB2  24E1               	addwf	fsr1l,w,c
 17979  015BB4  6ED9               	movwf	fsr2l,c
 17980  015BB6  0EFF               	movlw	255
 17981  015BB8  20E2               	addwfc	fsr1h,w,c
 17982  015BBA  6EDA               	movwf	fsr2h,c
 17983                           
 17984                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17985  015BBC  0E08               	movlw	8
 17986  015BBE  6E25               	movwf	btemp^0,c
 17987  015BC0  0EEE               	movlw	-18
 17988  015BC2                     us524999:
 17989  015BC2  006F FF7B FFE3     	movff	postinc2,plusw1
 17990  015BC8  28E8               	incf	wreg,w,c
 17991  015BCA  2E25               	decfsz	btemp^0,f,c
 17992  015BCC  D7FA               	bra	us524999
 17993                           
 17994                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17995  015BCE  0EF6               	movlw	246
 17996  015BD0  26E1               	addwf	fsr1l,f,c
 17997  015BD2  0EFF               	movlw	255
 17998  015BD4  22E2               	addwfc	fsr1h,f,c
 17999  015BD6  0012               	return		;funcret
 18000  015BD8                     __end_of___aodiv:
 18001                           	opt callstack 0
 18002                           
 18003 ;; *************** function _ctoa *****************
 18004 ;; Defined at:
 18005 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18006 ;; Parameters:    Size  Location     Type
 18007 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18008 ;;		 -> f(6), NULL(0), 
 18009 ;;  c               1  [STACK] unsigned char 
 18010 ;; Auto vars:     Size  Location     Type
 18011 ;;  w               2  [STACK] int 
 18012 ;;  l               2    0        int 
 18013 ;; Return value:  Size  Location     Type
 18014 ;;                  2  [STACK] int 
 18015 ;; Registers used:
 18016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18017 ;; Tracked objects:
 18018 ;;		On entry : 0/0
 18019 ;;		On exit  : 0/0
 18020 ;;		Unchanged: 0/0
 18021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18026 ;;Total ram usage:        0 bytes
 18027 ;; Hardware stack levels used:    1
 18028 ;; Hardware stack levels required when called:   12
 18029 ;; This function calls:
 18030 ;;		_pad
 18031 ;; This function is called by:
 18032 ;;		_vfpfcnvrt
 18033 ;; This function uses a reentrant model
 18034 ;;
 18035                           
 18036                           	psect	text65
 18037  018206                     __ptext65:
 18038                           	opt callstack 0
 18039  018206                     _ctoa:
 18040                           	opt callstack 0
 18041                           
 18042                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18043  018206  52E6               	movf	postinc1,f,c
 18044  018208  52E6               	movf	postinc1,f,c
 18045                           
 18046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18047                           
 18048                           ;incstack = 0
 18049  01820A  500A               	movf	_width^0,w,c
 18050  01820C  100B               	iorwf	(_width+1)^0,w,c
 18051  01820E  A4D8               	btfss	status,2,c
 18052  018210  D009               	goto	l10122
 18053                           
 18054                           ;stkvar	_w @ sp[(-2)+0]
 18055  018212  0EFE               	movlw	-2
 18056  018214  0060  F02B  FFE3   	movff	_width,plusw1
 18057  01821A  0EFF               	movlw	-1
 18058  01821C  0060  F02F  FFE3   	movff	_width+1,plusw1
 18059  018222  D016               	goto	l10124
 18060  018224                     l10122:
 18061  018224  0EFF               	movlw	255
 18062  018226  6E2F               	movwf	(btemp+10)^0,c
 18063  018228  0EFF               	movlw	255
 18064  01822A  6E30               	movwf	(btemp+11)^0,c
 18065  01822C  0060  F028  F02D   	movff	_width,btemp+8
 18066  018232  0060  F02C  F02E   	movff	_width+1,btemp+9
 18067  018238  502F               	movf	(btemp+10)^0,w,c
 18068  01823A  262D               	addwf	(btemp+8)^0,f,c
 18069  01823C  5030               	movf	(btemp+11)^0,w,c
 18070  01823E  222E               	addwfc	(btemp+9)^0,f,c
 18071                           
 18072                           ;stkvar	_w @ sp[(-2)+0]
 18073  018240  0EFE               	movlw	-2
 18074  018242  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 18075  018248  0EFF               	movlw	-1
 18076  01824A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 18077  018250                     l10124:
 18078                           
 18079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18080                           ;stkvar	_c @ sp[(-2)+-3]
 18081  018250  0EFB               	movlw	-5
 18082  018252  006F FF8C  F394    	movff	plusw1,_dbuf
 18083                           
 18084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18085  018258  0103               	movlb	3	; () banked
 18086  01825A  6B95               	clrf	(_dbuf+1)& (0+255),b
 18087                           
 18088                           ; BSR set to: 3
 18089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18090                           ;stkvar	_w @ sp[(-2)+0]
 18091  01825C  0EFE               	movlw	-2
 18092  01825E  006F FF8F FFE6     	movff	plusw1,postinc1
 18093  018264  006F FF8F FFE6     	movff	plusw1,postinc1
 18094  01826A  0E94               	movlw	low _dbuf
 18095  01826C  6EE6               	movwf	postinc1,c
 18096  01826E  0E03               	movlw	high _dbuf
 18097  018270  6EE6               	movwf	postinc1,c
 18098                           
 18099                           ;stkvar	_fp @ sp[(-6)+-2]
 18100  018272  0EF8               	movlw	-8
 18101  018274  006F FF8F FFE6     	movff	plusw1,postinc1
 18102  01827A  006F FF8F FFE6     	movff	plusw1,postinc1
 18103  018280  EC3A  F0B9         	call	_pad	;wreg free
 18104                           
 18105                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18106  018284  0EFB               	movlw	251
 18107  018286  26E1               	addwf	fsr1l,f,c
 18108  018288  0EFF               	movlw	255
 18109  01828A  22E2               	addwfc	fsr1h,f,c
 18110  01828C  0012               	return		;funcret
 18111  01828E                     __end_of_ctoa:
 18112                           	opt callstack 0
 18113                           
 18114 ;; *************** function _pad *****************
 18115 ;; Defined at:
 18116 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18117 ;; Parameters:    Size  Location     Type
 18118 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18119 ;;		 -> f(6), NULL(0), 
 18120 ;;  buf             2  [STACK] PTR unsigned char 
 18121 ;;		 -> dbuf(80), 
 18122 ;;  p               2  [STACK] int 
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;  w               2  [STACK] int 
 18125 ;;  i               2  [STACK] int 
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  2  [STACK] int 
 18128 ;; Registers used:
 18129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18130 ;; Tracked objects:
 18131 ;;		On entry : 0/3
 18132 ;;		On exit  : 0/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18139 ;;Total ram usage:        0 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; Hardware stack levels required when called:   11
 18142 ;; This function calls:
 18143 ;;		_fputc
 18144 ;;		_fputs
 18145 ;;		_strlen
 18146 ;; This function is called by:
 18147 ;;		_ctoa
 18148 ;;		_dtoa
 18149 ;;		_efgtoa
 18150 ;;		_xtoa
 18151 ;; This function uses a reentrant model
 18152 ;;
 18153                           
 18154                           	psect	text66
 18155  017274                     __ptext66:
 18156                           	opt callstack 0
 18157  017274                     _pad:
 18158                           	opt callstack 0
 18159                           
 18160                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18161  017274  52E6               	movf	postinc1,f,c
 18162  017276  52E6               	movf	postinc1,f,c
 18163  017278  52E6               	movf	postinc1,f,c
 18164  01727A  52E6               	movf	postinc1,f,c
 18165                           
 18166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18167                           
 18168                           ;incstack = 0
 18169  01727C  A00E               	btfss	_flags^0,0,c
 18170  01727E  D010               	goto	l10096
 18171                           
 18172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18173                           ;stkvar	_fp @ sp[(-4)+-2]
 18174  017280  0EFA               	movlw	-6
 18175  017282  006F FF8F FFE6     	movff	plusw1,postinc1
 18176  017288  006F FF8F FFE6     	movff	plusw1,postinc1
 18177                           
 18178                           ;stkvar	_buf @ sp[(-6)+-4]
 18179  01728E  0EF6               	movlw	-10
 18180  017290  006F FF8F FFE6     	movff	plusw1,postinc1
 18181  017296  006F FF8F FFE6     	movff	plusw1,postinc1
 18182  01729C  ECDD  F0BF         	call	_fputs	;wreg free
 18183  0172A0                     l10096:
 18184                           
 18185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18186                           ;stkvar	_p @ sp[(-4)+-6]
 18187  0172A0  0EF7               	movlw	-9
 18188  0172A2  BEE3               	btfsc	plusw1,7,c
 18189  0172A4  D011               	goto	l10100
 18190                           
 18191                           ;stkvar	_p @ sp[(-4)+-6]
 18192                           ;stkvar	_w @ sp[(-4)+0]
 18193  0172A6  0EF6               	movlw	-10
 18194  0172A8  006F FF8C  F025    	movff	plusw1,btemp
 18195  0172AE  0EFC               	movlw	-4
 18196  0172B0  0060  F097  FFE3   	movff	btemp,plusw1
 18197  0172B6  0EF7               	movlw	-9
 18198  0172B8  006F FF8C  F025    	movff	plusw1,btemp
 18199  0172BE  0EFD               	movlw	-3
 18200  0172C0  0060  F097  FFE3   	movff	btemp,plusw1
 18201  0172C6  D004               	goto	l1993
 18202  0172C8                     l10100:
 18203                           
 18204                           ;stkvar	_w @ sp[(-4)+0]
 18205  0172C8  0EFC               	movlw	-4
 18206  0172CA  6AE3               	clrf	plusw1,c
 18207  0172CC  0EFD               	movlw	-3
 18208  0172CE  6AE3               	clrf	plusw1,c
 18209  0172D0                     l1993:
 18210                           
 18211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18212                           ;stkvar	_i @ sp[(-4)+2]
 18213  0172D0  0EFE               	movlw	-2
 18214  0172D2  6AE3               	clrf	plusw1,c
 18215  0172D4  0EFF               	movlw	-1
 18216  0172D6  6AE3               	clrf	plusw1,c
 18217                           
 18218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18219  0172D8  D01E               	goto	l10106
 18220  0172DA                     l10102:
 18221                           
 18222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18223                           ;stkvar	_fp @ sp[(-4)+-2]
 18224  0172DA  0EFA               	movlw	-6
 18225  0172DC  006F FF8F FFE6     	movff	plusw1,postinc1
 18226  0172E2  006F FF8F FFE6     	movff	plusw1,postinc1
 18227  0172E8  0E20               	movlw	32
 18228  0172EA  6EE6               	movwf	postinc1,c
 18229  0172EC  0E00               	movlw	0
 18230  0172EE  6EE6               	movwf	postinc1,c
 18231  0172F0  EC1C  F0B8         	call	_fputc	;wreg free
 18232                           
 18233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18234                           ;stkvar	_i @ sp[(-4)+2]
 18235  0172F4  0EFE               	movlw	-2
 18236  0172F6  50E3               	movf	plusw1,w,c
 18237  0172F8  0F01               	addlw	1
 18238  0172FA  6E25               	movwf	btemp^0,c
 18239  0172FC  0EFE               	movlw	-2
 18240  0172FE  0060  F097  FFE3   	movff	btemp,plusw1
 18241  017304  6A25               	clrf	btemp^0,c
 18242  017306  0EFF               	movlw	-1
 18243  017308  50E3               	movf	plusw1,w,c
 18244  01730A  2025               	addwfc	btemp^0,w,c
 18245  01730C  6E25               	movwf	btemp^0,c
 18246  01730E  0EFF               	movlw	-1
 18247  017310  0060  F097  FFE3   	movff	btemp,plusw1
 18248  017316                     l10106:
 18249                           
 18250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18251                           ;stkvar	_w @ sp[(-4)+0]
 18252                           ;stkvar	_i @ sp[(-4)+2]
 18253  017316  50E1               	movf	fsr1l,w,c
 18254  017318  0FFE               	addlw	-2
 18255  01731A  6ED9               	movwf	fsr2l,c
 18256  01731C  50E2               	movf	fsr1h,w,c
 18257  01731E  6EDA               	movwf	fsr2h,c
 18258  017320  0EFF               	movlw	255
 18259  017322  22DA               	addwfc	fsr2h,f,c
 18260  017324  0EFC               	movlw	-4
 18261  017326  50E3               	movf	plusw1,w,c
 18262  017328  5CDE               	subwf	postinc2,w,c
 18263  01732A  50DE               	movf	postinc2,w,c
 18264  01732C  0A80               	xorlw	128
 18265  01732E  6E25               	movwf	btemp^0,c
 18266  017330  0EFD               	movlw	-3
 18267  017332  50E3               	movf	plusw1,w,c
 18268  017334  0A80               	xorlw	128
 18269  017336  5825               	subwfb	btemp^0,w,c
 18270  017338  A0D8               	btfss	status,0,c
 18271  01733A  D7CF               	goto	l10102
 18272                           
 18273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18274  01733C  B00E               	btfsc	_flags^0,0,c
 18275  01733E  D010               	goto	l10110
 18276                           
 18277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18278                           ;stkvar	_fp @ sp[(-4)+-2]
 18279  017340  0EFA               	movlw	-6
 18280  017342  006F FF8F FFE6     	movff	plusw1,postinc1
 18281  017348  006F FF8F FFE6     	movff	plusw1,postinc1
 18282                           
 18283                           ;stkvar	_buf @ sp[(-6)+-4]
 18284  01734E  0EF6               	movlw	-10
 18285  017350  006F FF8F FFE6     	movff	plusw1,postinc1
 18286  017356  006F FF8F FFE6     	movff	plusw1,postinc1
 18287  01735C  ECDD  F0BF         	call	_fputs	;wreg free
 18288  017360                     l10110:
 18289                           
 18290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18291                           ;stkvar	_w @ sp[(-4)+0]
 18292                           ;stkvar	_buf @ sp[(-4)+-4]
 18293  017360  0EF8               	movlw	-8
 18294  017362  006F FF8F FFE6     	movff	plusw1,postinc1
 18295  017368  006F FF8F FFE6     	movff	plusw1,postinc1
 18296  01736E  EC8C  F0BF         	call	_strlen	;wreg free
 18297  017372  0EFC               	movlw	-4
 18298  017374  50E3               	movf	plusw1,w,c
 18299  017376  2625               	addwf	btemp^0,f,c
 18300  017378  0EFD               	movlw	-3
 18301  01737A  50E3               	movf	plusw1,w,c
 18302  01737C  2226               	addwfc	(btemp+1)^0,f,c
 18303                           
 18304                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18305  01737E  0EF6               	movlw	246
 18306  017380  26E1               	addwf	fsr1l,f,c
 18307  017382  0EFF               	movlw	255
 18308  017384  22E2               	addwfc	fsr1h,f,c
 18309  017386  0012               	return		;funcret
 18310  017388                     __end_of_pad:
 18311                           	opt callstack 0
 18312                           
 18313 ;; *************** function _strlen *****************
 18314 ;; Defined at:
 18315 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18316 ;; Parameters:    Size  Location     Type
 18317 ;;  s               2  [STACK] PTR const unsigned char 
 18318 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18319 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18320 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18321 ;; Auto vars:     Size  Location     Type
 18322 ;;  a               2  [STACK] PTR const unsigned char 
 18323 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18324 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18325 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18326 ;; Return value:  Size  Location     Type
 18327 ;;                  2  [STACK] unsigned int 
 18328 ;; Registers used:
 18329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18339 ;;Total ram usage:        0 bytes
 18340 ;; Hardware stack levels used:    1
 18341 ;; Hardware stack levels required when called:    7
 18342 ;; This function calls:
 18343 ;;		Nothing
 18344 ;; This function is called by:
 18345 ;;		_eaDogM_WriteString
 18346 ;;		_pad
 18347 ;;		_stoa
 18348 ;; This function uses a reentrant model
 18349 ;;
 18350                           
 18351                           	psect	text67
 18352  017F18                     __ptext67:
 18353                           	opt callstack 0
 18354  017F18                     _strlen:
 18355                           	opt callstack 0
 18356                           
 18357                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18358  017F18  52E6               	movf	postinc1,f,c
 18359  017F1A  52E6               	movf	postinc1,f,c
 18360                           
 18361                           ;stkvar	_s @ sp[(-2)+-2]
 18362                           
 18363                           ;incstack = 0
 18364  017F1C  0EFC               	movlw	-4
 18365  017F1E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18366  017F24  0EFD               	movlw	-3
 18367  017F26  006F FF8C  F030    	movff	plusw1,btemp+11
 18368                           
 18369                           ;stkvar	_a @ sp[(-2)+0]
 18370  017F2C  0EFF               	movlw	-1
 18371  017F2E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18372  017F34  0EFE               	movlw	-2
 18373  017F36  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 18374  017F3C  D011               	goto	l6610
 18375  017F3E                     l6608:
 18376                           
 18377                           ;stkvar	_s @ sp[(-2)+-2]
 18378  017F3E  0EFC               	movlw	-4
 18379  017F40  50E3               	movf	plusw1,w,c
 18380  017F42  0F01               	addlw	1
 18381  017F44  6E25               	movwf	btemp^0,c
 18382  017F46  0EFC               	movlw	-4
 18383  017F48  0060  F097  FFE3   	movff	btemp,plusw1
 18384  017F4E  6A25               	clrf	btemp^0,c
 18385  017F50  0EFD               	movlw	-3
 18386  017F52  50E3               	movf	plusw1,w,c
 18387  017F54  2025               	addwfc	btemp^0,w,c
 18388  017F56  6E25               	movwf	btemp^0,c
 18389  017F58  0EFD               	movlw	-3
 18390  017F5A  0060  F097  FFE3   	movff	btemp,plusw1
 18391  017F60                     l6610:
 18392                           
 18393                           ;stkvar	_s @ sp[(-2)+-2]
 18394  017F60  0EFC               	movlw	-4
 18395  017F62  006F FF8F FFF6     	movff	plusw1,tblptrl
 18396  017F68  0EFD               	movlw	-3
 18397  017F6A  006F FF8F FFF7     	movff	plusw1,tblptrh
 18398  017F70  0E00               	movlw	low (__mediumconst shr (0+16))
 18399  017F72  6EF8               	movwf	tblptru,c
 18400  017F74  0E1F               	movlw	(high __ramtop+-1)
 18401  017F76  64F7               	cpfsgt	tblptrh,c
 18402  017F78  D003               	bra	u4727
 18403  017F7A  0008               	tblrd		*
 18404  017F7C  50F5               	movf	tablat,w,c
 18405  017F7E  D007               	bra	u4720
 18406  017F80                     u4727:
 18407  017F80  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18408  017F86  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18409  017F8C  50EF               	movf	indf0,w,c
 18410  017F8E                     u4720:
 18411  017F8E  0900               	iorlw	0
 18412  017F90  A4D8               	btfss	status,2,c
 18413  017F92  D7D5               	goto	l6608
 18414                           
 18415                           ;stkvar	_a @ sp[(-2)+0]
 18416                           ;stkvar	_s @ sp[(-2)+-2]
 18417  017F94  0EFC               	movlw	-4
 18418  017F96  006F FF8C  F025    	movff	plusw1,btemp
 18419  017F9C  0EFD               	movlw	-3
 18420  017F9E  006F FF8C  F026    	movff	plusw1,btemp+1
 18421  017FA4  0EFE               	movlw	-2
 18422  017FA6  50E3               	movf	plusw1,w,c
 18423  017FA8  5E25               	subwf	btemp^0,f,c
 18424  017FAA  0EFF               	movlw	-1
 18425  017FAC  50E3               	movf	plusw1,w,c
 18426  017FAE  5A26               	subwfb	(btemp+1)^0,f,c
 18427                           
 18428                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18429  017FB0  52E5               	movf	postdec1,f,c
 18430  017FB2  52E5               	movf	postdec1,f,c
 18431  017FB4  52E5               	movf	postdec1,f,c
 18432  017FB6  52E5               	movf	postdec1,f,c
 18433  017FB8  0012               	return		;funcret
 18434  017FBA                     __end_of_strlen:
 18435                           	opt callstack 0
 18436                           
 18437 ;; *************** function _fputs *****************
 18438 ;; Defined at:
 18439 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;  s               2  [STACK] PTR const unsigned char 
 18442 ;;		 -> dbuf(80), 
 18443 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18444 ;;		 -> f(6), NULL(0), 
 18445 ;; Auto vars:     Size  Location     Type
 18446 ;;  i               2  [STACK] int 
 18447 ;;  c               1  [STACK] unsigned char 
 18448 ;; Return value:  Size  Location     Type
 18449 ;;                  2  [STACK] int 
 18450 ;; Registers used:
 18451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18452 ;; Tracked objects:
 18453 ;;		On entry : 0/3
 18454 ;;		On exit  : 0/0
 18455 ;;		Unchanged: 0/0
 18456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18461 ;;Total ram usage:        0 bytes
 18462 ;; Hardware stack levels used:    1
 18463 ;; Hardware stack levels required when called:   10
 18464 ;; This function calls:
 18465 ;;		_fputc
 18466 ;; This function is called by:
 18467 ;;		_pad
 18468 ;; This function uses a reentrant model
 18469 ;;
 18470                           
 18471                           	psect	text68
 18472  017FBA                     __ptext68:
 18473                           	opt callstack 0
 18474  017FBA                     _fputs:
 18475                           	opt callstack 0
 18476                           
 18477                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18478  017FBA  52E6               	movf	postinc1,f,c
 18479  017FBC  52E6               	movf	postinc1,f,c
 18480  017FBE  52E6               	movf	postinc1,f,c
 18481                           
 18482                           ;stkvar	_i @ sp[(-3)+0]
 18483                           
 18484                           ;incstack = 0
 18485  017FC0  0EFD               	movlw	-3
 18486  017FC2  6AE3               	clrf	plusw1,c
 18487  017FC4  0EFE               	movlw	-2
 18488  017FC6  6AE3               	clrf	plusw1,c
 18489  017FC8  D01F               	goto	l10090
 18490  017FCA                     l10086:
 18491                           
 18492                           ;stkvar	_fp @ sp[(-3)+-4]
 18493  017FCA  0EF9               	movlw	-7
 18494  017FCC  006F FF8F FFE6     	movff	plusw1,postinc1
 18495  017FD2  006F FF8F FFE6     	movff	plusw1,postinc1
 18496                           
 18497                           ;stkvar	_c @ sp[(-5)+2]
 18498  017FD8  0EFD               	movlw	-3
 18499  017FDA  50E3               	movf	plusw1,w,c
 18500  017FDC  6EE6               	movwf	postinc1,c
 18501  017FDE  0E00               	movlw	0
 18502  017FE0  6EE6               	movwf	postinc1,c
 18503  017FE2  EC1C  F0B8         	call	_fputc	;wreg free
 18504                           
 18505                           ;stkvar	_i @ sp[(-3)+0]
 18506  017FE6  0EFD               	movlw	-3
 18507  017FE8  50E3               	movf	plusw1,w,c
 18508  017FEA  0F01               	addlw	1
 18509  017FEC  6E25               	movwf	btemp^0,c
 18510  017FEE  0EFD               	movlw	-3
 18511  017FF0  0060  F097  FFE3   	movff	btemp,plusw1
 18512  017FF6  6A25               	clrf	btemp^0,c
 18513  017FF8  0EFE               	movlw	-2
 18514  017FFA  50E3               	movf	plusw1,w,c
 18515  017FFC  2025               	addwfc	btemp^0,w,c
 18516  017FFE  6E25               	movwf	btemp^0,c
 18517  018000  0EFE               	movlw	-2
 18518  018002  0060  F097  FFE3   	movff	btemp,plusw1
 18519  018008                     l10090:
 18520                           
 18521                           ;stkvar	_i @ sp[(-3)+0]
 18522  018008  0EFD               	movlw	-3
 18523  01800A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18524  018010  0EFE               	movlw	-2
 18525  018012  006F FF8C  F030    	movff	plusw1,btemp+11
 18526                           
 18527                           ;stkvar	_s @ sp[(-3)+-2]
 18528  018018  0EFB               	movlw	-5
 18529  01801A  006F FF8C  F02D    	movff	plusw1,btemp+8
 18530  018020  0EFC               	movlw	-4
 18531  018022  006F FF8C  F02E    	movff	plusw1,btemp+9
 18532  018028  502F               	movf	(btemp+10)^0,w,c
 18533  01802A  242D               	addwf	(btemp+8)^0,w,c
 18534  01802C  6ED9               	movwf	fsr2l,c
 18535  01802E  5030               	movf	(btemp+11)^0,w,c
 18536  018030  202E               	addwfc	(btemp+9)^0,w,c
 18537  018032  6EDA               	movwf	fsr2h,c
 18538  018034  50DF               	movf	indf2,w,c
 18539  018036  6E30               	movwf	(btemp+11)^0,c
 18540                           
 18541                           ;stkvar	_c @ sp[(-3)+2]
 18542  018038  0EFF               	movlw	-1
 18543  01803A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18544  018040  0EFF               	movlw	-1
 18545  018042  50E3               	movf	plusw1,w,c
 18546  018044  A4D8               	btfss	status,2,c
 18547  018046  D7C1               	goto	l10086
 18548                           
 18549                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18550  018048  0EF9               	movlw	249
 18551  01804A  26E1               	addwf	fsr1l,f,c
 18552  01804C  0EFF               	movlw	255
 18553  01804E  22E2               	addwfc	fsr1h,f,c
 18554  018050  0012               	return		;funcret
 18555  018052                     __end_of_fputs:
 18556                           	opt callstack 0
 18557                           
 18558 ;; *************** function _fputc *****************
 18559 ;; Defined at:
 18560 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18561 ;; Parameters:    Size  Location     Type
 18562 ;;  c               2  [STACK] int 
 18563 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18564 ;;		 -> f(6), NULL(0), 
 18565 ;; Auto vars:     Size  Location     Type
 18566 ;;		None
 18567 ;; Return value:  Size  Location     Type
 18568 ;;                  2  [STACK] int 
 18569 ;; Registers used:
 18570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18571 ;; Tracked objects:
 18572 ;;		On entry : 0/0
 18573 ;;		On exit  : 0/0
 18574 ;;		Unchanged: 0/0
 18575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18580 ;;Total ram usage:        0 bytes
 18581 ;; Hardware stack levels used:    1
 18582 ;; Hardware stack levels required when called:    9
 18583 ;; This function calls:
 18584 ;;		_putch
 18585 ;; This function is called by:
 18586 ;;		_pad
 18587 ;;		_stoa
 18588 ;;		_vfpfcnvrt
 18589 ;;		_fputs
 18590 ;; This function uses a reentrant model
 18591 ;;
 18592                           
 18593                           	psect	text69
 18594  017038                     __ptext69:
 18595                           	opt callstack 0
 18596  017038                     _fputc:
 18597                           	opt callstack 12
 18598                           
 18599                           ;stkvar	_fp @ sp[(0)+-4]
 18600                           
 18601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18602                           ;incstack = 0
 18603  017038  0EFC               	movlw	-4
 18604  01703A  006F FF8C  F025    	movff	plusw1,btemp
 18605  017040  0EFD               	movlw	-3
 18606  017042  50E3               	movf	plusw1,w,c
 18607  017044  1025               	iorwf	btemp^0,w,c
 18608  017046  B4D8               	btfsc	status,2,c
 18609  017048  D009               	goto	u9320
 18610                           
 18611                           ;stkvar	_fp @ sp[(0)+-4]
 18612  01704A  0EFC               	movlw	-4
 18613  01704C  006F FF8C  F025    	movff	plusw1,btemp
 18614  017052  0EFD               	movlw	-3
 18615  017054  50E3               	movf	plusw1,w,c
 18616  017056  1025               	iorwf	btemp^0,w,c
 18617  017058  A4D8               	btfss	status,2,c
 18618  01705A  D006               	goto	l10074
 18619  01705C                     u9320:
 18620                           
 18621                           ;stkvar	_c @ sp[(0)+-2]
 18622  01705C  0EFE               	movlw	-2
 18623  01705E  50E3               	movf	plusw1,w,c
 18624  017060  6EE6               	movwf	postinc1,c
 18625  017062  EC92  F0CA         	call	_putch	;wreg free
 18626  017066  D075               	goto	l3011
 18627  017068                     l10074:
 18628                           
 18629                           ;stkvar	_fp @ sp[(0)+-4]
 18630  017068  0EFC               	movlw	-4
 18631  01706A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18632  017070  0EFD               	movlw	-3
 18633  017072  006F FF8C  F030    	movff	plusw1,btemp+11
 18634  017078  0E04               	movlw	4
 18635  01707A  242F               	addwf	(btemp+10)^0,w,c
 18636  01707C  6ED9               	movwf	fsr2l,c
 18637  01707E  0E00               	movlw	0
 18638  017080  2030               	addwfc	(btemp+11)^0,w,c
 18639  017082  6EDA               	movwf	fsr2h,c
 18640  017084  50DE               	movf	postinc2,w,c
 18641  017086  10DE               	iorwf	postinc2,w,c
 18642  017088  B4D8               	btfsc	status,2,c
 18643  01708A  D026               	goto	u9340
 18644                           
 18645                           ;stkvar	_fp @ sp[(0)+-4]
 18646  01708C  0EFC               	movlw	-4
 18647  01708E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18648  017094  0EFD               	movlw	-3
 18649  017096  006F FF8C  F030    	movff	plusw1,btemp+11
 18650  01709C  0E04               	movlw	4
 18651  01709E  242F               	addwf	(btemp+10)^0,w,c
 18652  0170A0  6ED9               	movwf	fsr2l,c
 18653  0170A2  0E00               	movlw	0
 18654  0170A4  2030               	addwfc	(btemp+11)^0,w,c
 18655  0170A6  6EDA               	movwf	fsr2h,c
 18656                           
 18657                           ;stkvar	_fp @ sp[(0)+-4]
 18658  0170A8  0EFC               	movlw	-4
 18659  0170AA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18660  0170B0  0EFD               	movlw	-3
 18661  0170B2  006F FF8C  F030    	movff	plusw1,btemp+11
 18662  0170B8  0E02               	movlw	2
 18663  0170BA  242F               	addwf	(btemp+10)^0,w,c
 18664  0170BC  6EE9               	movwf	fsr0l,c
 18665  0170BE  0E00               	movlw	0
 18666  0170C0  2030               	addwfc	(btemp+11)^0,w,c
 18667  0170C2  6EEA               	movwf	fsr0h,c
 18668  0170C4  50DE               	movf	postinc2,w,c
 18669  0170C6  5CEE               	subwf	postinc0,w,c
 18670  0170C8  50EE               	movf	postinc0,w,c
 18671  0170CA  0A80               	xorlw	128
 18672  0170CC  6E25               	movwf	btemp^0,c
 18673  0170CE  50DE               	movf	postinc2,w,c
 18674  0170D0  0A80               	xorlw	128
 18675  0170D2  5825               	subwfb	btemp^0,w,c
 18676  0170D4  B0D8               	btfsc	status,0,c
 18677  0170D6  D03D               	goto	l3011
 18678  0170D8                     u9340:
 18679                           
 18680                           ;stkvar	_c @ sp[(0)+-2]
 18681                           ;stkvar	_fp @ sp[(0)+-4]
 18682  0170D8  0EFC               	movlw	-4
 18683  0170DA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18684  0170E0  0EFD               	movlw	-3
 18685  0170E2  006F FF8C  F030    	movff	plusw1,btemp+11
 18686  0170E8  0E02               	movlw	2
 18687  0170EA  242F               	addwf	(btemp+10)^0,w,c
 18688  0170EC  6ED9               	movwf	fsr2l,c
 18689  0170EE  0E00               	movlw	0
 18690  0170F0  2030               	addwfc	(btemp+11)^0,w,c
 18691  0170F2  6EDA               	movwf	fsr2h,c
 18692  0170F4  006F FF78  F02F    	movff	postinc2,btemp+10
 18693  0170FA  006F FF74  F030    	movff	postdec2,btemp+11
 18694                           
 18695                           ;stkvar	_fp @ sp[(0)+-4]
 18696  017100  0EFC               	movlw	-4
 18697  017102  006F FF8F FFD9     	movff	plusw1,fsr2l
 18698  017108  0EFD               	movlw	-3
 18699  01710A  006F FF8F FFDA     	movff	plusw1,fsr2h
 18700  017110  006F FF78  F02D    	movff	postinc2,btemp+8
 18701  017116  006F FF74  F02E    	movff	postdec2,btemp+9
 18702  01711C  502F               	movf	(btemp+10)^0,w,c
 18703  01711E  242D               	addwf	(btemp+8)^0,w,c
 18704  017120  6ED9               	movwf	fsr2l,c
 18705  017122  5030               	movf	(btemp+11)^0,w,c
 18706  017124  202E               	addwfc	(btemp+9)^0,w,c
 18707  017126  6EDA               	movwf	fsr2h,c
 18708  017128  0EFE               	movlw	-2
 18709  01712A  006F FF8F FFDF     	movff	plusw1,indf2
 18710                           
 18711                           ;stkvar	_fp @ sp[(0)+-4]
 18712  017130  0EFC               	movlw	-4
 18713  017132  006F FF8C  F02F    	movff	plusw1,btemp+10
 18714  017138  0EFD               	movlw	-3
 18715  01713A  006F FF8C  F030    	movff	plusw1,btemp+11
 18716  017140  0E02               	movlw	2
 18717  017142  242F               	addwf	(btemp+10)^0,w,c
 18718  017144  6ED9               	movwf	fsr2l,c
 18719  017146  0E00               	movlw	0
 18720  017148  2030               	addwfc	(btemp+11)^0,w,c
 18721  01714A  6EDA               	movwf	fsr2h,c
 18722  01714C  2ADE               	incf	postinc2,f,c
 18723  01714E  0E00               	movlw	0
 18724  017150  22DD               	addwfc	postdec2,f,c
 18725  017152                     l3011:
 18726                           
 18727                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18728  017152  52E5               	movf	postdec1,f,c
 18729  017154  52E5               	movf	postdec1,f,c
 18730  017156  52E5               	movf	postdec1,f,c
 18731  017158  52E5               	movf	postdec1,f,c
 18732  01715A  0012               	return		;funcret
 18733  01715C                     __end_of_fputc:
 18734                           	opt callstack 0
 18735                           
 18736 ;; *************** function _putch *****************
 18737 ;; Defined at:
 18738 ;;		line 168 in file "eadog.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;  c               1  [STACK] unsigned char 
 18741 ;; Auto vars:     Size  Location     Type
 18742 ;;		None
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  1  [STACK] void 
 18745 ;; Registers used:
 18746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18756 ;;Total ram usage:        0 bytes
 18757 ;; Hardware stack levels used:    1
 18758 ;; Hardware stack levels required when called:    8
 18759 ;; This function calls:
 18760 ;;		_ringBufS_put_dma
 18761 ;; This function is called by:
 18762 ;;		_fputc
 18763 ;; This function uses a reentrant model
 18764 ;;
 18765                           
 18766                           	psect	text70
 18767  019524                     __ptext70:
 18768                           	opt callstack 0
 18769  019524                     _putch:
 18770                           	opt callstack 12
 18771                           
 18772                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18773                           ;stkvar	_c @ sp[(0)+-1]
 18774                           
 18775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18776                           ;incstack = 0
 18777  019524  0EFF               	movlw	-1
 18778  019526  50E3               	movf	plusw1,w,c
 18779  019528  6EE6               	movwf	postinc1,c
 18780  01952A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 18781  019530  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 18782  019536  ECE4  F0BE         	call	_ringBufS_put_dma	;wreg free
 18783                           
 18784                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18785  01953A  52E5               	movf	postdec1,f,c
 18786  01953C  0012               	return		;funcret
 18787  01953E                     __end_of_putch:
 18788                           	opt callstack 0
 18789                           
 18790 ;; *************** function _ringBufS_put_dma *****************
 18791 ;; Defined at:
 18792 ;;		line 67 in file "ringbufs.c"
 18793 ;; Parameters:    Size  Location     Type
 18794 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18795 ;;		 -> ring_buf1(67), 
 18796 ;;  c               1  [STACK] const unsigned char 
 18797 ;; Auto vars:     Size  Location     Type
 18798 ;;		None
 18799 ;; Return value:  Size  Location     Type
 18800 ;;                  1  [STACK] void 
 18801 ;; Registers used:
 18802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18803 ;; Tracked objects:
 18804 ;;		On entry : 0/0
 18805 ;;		On exit  : 0/0
 18806 ;;		Unchanged: 0/0
 18807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18812 ;;Total ram usage:        0 bytes
 18813 ;; Hardware stack levels used:    1
 18814 ;; Hardware stack levels required when called:    7
 18815 ;; This function calls:
 18816 ;;		Nothing
 18817 ;; This function is called by:
 18818 ;;		_putch
 18819 ;; This function uses a reentrant model
 18820 ;;
 18821                           
 18822                           	psect	text71
 18823  017DC8                     __ptext71:
 18824                           	opt callstack 0
 18825  017DC8                     _ringBufS_put_dma:
 18826                           	opt callstack 12
 18827                           
 18828                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18829                           ;stkvar	__this @ sp[(0)+-2]
 18830                           
 18831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18832                           ;incstack = 0
 18833  017DC8  0EFE               	movlw	-2
 18834  017DCA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18835  017DD0  0EFF               	movlw	-1
 18836  017DD2  006F FF8C  F030    	movff	plusw1,btemp+11
 18837  017DD8  0E42               	movlw	66
 18838  017DDA  242F               	addwf	(btemp+10)^0,w,c
 18839  017DDC  6ED9               	movwf	fsr2l,c
 18840  017DDE  0E00               	movlw	0
 18841  017DE0  2030               	addwfc	(btemp+11)^0,w,c
 18842  017DE2  6EDA               	movwf	fsr2h,c
 18843  017DE4  0E40               	movlw	64
 18844  017DE6  60DF               	cpfslt	indf2,c
 18845  017DE8  D040               	goto	l1580
 18846                           
 18847                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18848                           ;stkvar	_c @ sp[(0)+-3]
 18849                           ;stkvar	__this @ sp[(0)+-2]
 18850  017DEA  0EFE               	movlw	-2
 18851  017DEC  006F FF8C  F02F    	movff	plusw1,btemp+10
 18852  017DF2  0EFF               	movlw	-1
 18853  017DF4  006F FF8C  F030    	movff	plusw1,btemp+11
 18854  017DFA  0E40               	movlw	64
 18855  017DFC  242F               	addwf	(btemp+10)^0,w,c
 18856  017DFE  6ED9               	movwf	fsr2l,c
 18857  017E00  0E00               	movlw	0
 18858  017E02  2030               	addwfc	(btemp+11)^0,w,c
 18859  017E04  6EDA               	movwf	fsr2h,c
 18860  017E06  50DF               	movf	indf2,w,c
 18861  017E08  6E30               	movwf	(btemp+11)^0,c
 18862                           
 18863                           ;stkvar	__this @ sp[(0)+-2]
 18864  017E0A  0EFE               	movlw	-2
 18865  017E0C  006F FF8C  F02D    	movff	plusw1,btemp+8
 18866  017E12  0EFF               	movlw	-1
 18867  017E14  006F FF8C  F02E    	movff	plusw1,btemp+9
 18868  017E1A  5030               	movf	(btemp+11)^0,w,c
 18869  017E1C  242D               	addwf	(btemp+8)^0,w,c
 18870  017E1E  6ED9               	movwf	fsr2l,c
 18871  017E20  0E00               	movlw	0
 18872  017E22  202E               	addwfc	(btemp+9)^0,w,c
 18873  017E24  6EDA               	movwf	fsr2h,c
 18874  017E26  0EFD               	movlw	-3
 18875  017E28  006F FF8F FFDF     	movff	plusw1,indf2
 18876                           
 18877                           ;ringbufs.c: 71:   ++_this->head;
 18878                           ;stkvar	__this @ sp[(0)+-2]
 18879  017E2E  0EFE               	movlw	-2
 18880  017E30  006F FF8C  F02F    	movff	plusw1,btemp+10
 18881  017E36  0EFF               	movlw	-1
 18882  017E38  006F FF8C  F030    	movff	plusw1,btemp+11
 18883  017E3E  0E40               	movlw	64
 18884  017E40  242F               	addwf	(btemp+10)^0,w,c
 18885  017E42  6ED9               	movwf	fsr2l,c
 18886  017E44  0E00               	movlw	0
 18887  017E46  2030               	addwfc	(btemp+11)^0,w,c
 18888  017E48  6EDA               	movwf	fsr2h,c
 18889  017E4A  2ADF               	incf	indf2,f,c
 18890                           
 18891                           ;ringbufs.c: 72:   ++_this->count;
 18892                           ;stkvar	__this @ sp[(0)+-2]
 18893  017E4C  0EFE               	movlw	-2
 18894  017E4E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18895  017E54  0EFF               	movlw	-1
 18896  017E56  006F FF8C  F030    	movff	plusw1,btemp+11
 18897  017E5C  0E42               	movlw	66
 18898  017E5E  242F               	addwf	(btemp+10)^0,w,c
 18899  017E60  6ED9               	movwf	fsr2l,c
 18900  017E62  0E00               	movlw	0
 18901  017E64  2030               	addwfc	(btemp+11)^0,w,c
 18902  017E66  6EDA               	movwf	fsr2h,c
 18903  017E68  2ADF               	incf	indf2,f,c
 18904  017E6A                     l1580:
 18905                           
 18906                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18907  017E6A  52E5               	movf	postdec1,f,c
 18908  017E6C  52E5               	movf	postdec1,f,c
 18909  017E6E  52E5               	movf	postdec1,f,c
 18910  017E70  0012               	return		;funcret
 18911  017E72                     __end_of_ringBufS_put_dma:
 18912                           	opt callstack 0
 18913                           
 18914 ;; *************** function _atoi *****************
 18915 ;; Defined at:
 18916 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18917 ;; Parameters:    Size  Location     Type
 18918 ;;  s               2  [STACK] PTR const unsigned char 
 18919 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18920 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18921 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18922 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18923 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18924 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
 18925 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18926 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18927 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18928 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18929 ;; Auto vars:     Size  Location     Type
 18930 ;;  n               2  [STACK] int 
 18931 ;;  neg             2  [STACK] int 
 18932 ;; Return value:  Size  Location     Type
 18933 ;;                  2  [STACK] int 
 18934 ;; Registers used:
 18935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18936 ;; Tracked objects:
 18937 ;;		On entry : 0/0
 18938 ;;		On exit  : 0/0
 18939 ;;		Unchanged: 0/0
 18940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18945 ;;Total ram usage:        0 bytes
 18946 ;; Hardware stack levels used:    1
 18947 ;; Hardware stack levels required when called:    8
 18948 ;; This function calls:
 18949 ;;		_isdigit
 18950 ;;		_isspace
 18951 ;; This function is called by:
 18952 ;;		_vfpfcnvrt
 18953 ;; This function uses a reentrant model
 18954 ;;
 18955                           
 18956                           	psect	text72
 18957  015BD8                     __ptext72:
 18958                           	opt callstack 0
 18959  015BD8                     _atoi:
 18960                           	opt callstack 0
 18961                           
 18962                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18963  015BD8  0E09               	movlw	9
 18964  015BDA  26E1               	addwf	fsr1l,f,c
 18965  015BDC  0E00               	movlw	0
 18966  015BDE  22E2               	addwfc	fsr1h,f,c
 18967                           
 18968                           ;stkvar	_n @ sp[(-9)+5]
 18969                           
 18970                           ;incstack = 0
 18971  015BE0  0EFC               	movlw	-4
 18972  015BE2  6AE3               	clrf	plusw1,c
 18973  015BE4  0EFD               	movlw	-3
 18974  015BE6  6AE3               	clrf	plusw1,c
 18975                           
 18976                           ;stkvar	_neg @ sp[(-9)+7]
 18977  015BE8  0EFE               	movlw	-2
 18978  015BEA  6AE3               	clrf	plusw1,c
 18979  015BEC  0EFF               	movlw	-1
 18980  015BEE  6AE3               	clrf	plusw1,c
 18981  015BF0  D011               	goto	l7474
 18982  015BF2                     l7472:
 18983                           
 18984                           ;stkvar	_s @ sp[(-9)+-2]
 18985  015BF2  0EF5               	movlw	-11
 18986  015BF4  50E3               	movf	plusw1,w,c
 18987  015BF6  0F01               	addlw	1
 18988  015BF8  6E25               	movwf	btemp^0,c
 18989  015BFA  0EF5               	movlw	-11
 18990  015BFC  0060  F097  FFE3   	movff	btemp,plusw1
 18991  015C02  6A25               	clrf	btemp^0,c
 18992  015C04  0EF6               	movlw	-10
 18993  015C06  50E3               	movf	plusw1,w,c
 18994  015C08  2025               	addwfc	btemp^0,w,c
 18995  015C0A  6E25               	movwf	btemp^0,c
 18996  015C0C  0EF6               	movlw	-10
 18997  015C0E  0060  F097  FFE3   	movff	btemp,plusw1
 18998  015C14                     l7474:
 18999                           
 19000                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19001  015C14  0EFB               	movlw	-5
 19002  015C16  6AE3               	clrf	plusw1,c
 19003  015C18  2AE3               	incf	plusw1,f,c
 19004                           
 19005                           ;stkvar	_s @ sp[(-9)+-2]
 19006  015C1A  50E1               	movf	fsr1l,w,c
 19007  015C1C  0FF5               	addlw	-11
 19008  015C1E  6ED9               	movwf	fsr2l,c
 19009  015C20  50E2               	movf	fsr1h,w,c
 19010  015C22  6EDA               	movwf	fsr2h,c
 19011  015C24  0EFF               	movlw	255
 19012  015C26  22DA               	addwfc	fsr2h,f,c
 19013  015C28  006F FF7B FFF6     	movff	postinc2,tblptrl
 19014  015C2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19015  015C34                     	if	0	;tblptru may be non-zero
 19016  015C34                     	endif
 19017  015C34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19018  015C34  0E00               	movlw	low (__mediumconst shr (0+16))
 19019  015C36  6EF8               	movwf	tblptru,c
 19020  015C38                     	endif
 19021  015C38  0008               	tblrd		*
 19022  015C3A  50F5               	movf	tablat,w,c
 19023  015C3C  0A20               	xorlw	32
 19024  015C3E  B4D8               	btfsc	status,2,c
 19025  015C40  D023               	goto	l7482
 19026  015C42  0EF7               	movlw	247
 19027  015C44  6E2F               	movwf	(btemp+10)^0,c
 19028  015C46  0EFF               	movlw	255
 19029  015C48  6E30               	movwf	(btemp+11)^0,c
 19030                           
 19031                           ;stkvar	_s @ sp[(-9)+-2]
 19032  015C4A  50E1               	movf	fsr1l,w,c
 19033  015C4C  0FF5               	addlw	-11
 19034  015C4E  6ED9               	movwf	fsr2l,c
 19035  015C50  50E2               	movf	fsr1h,w,c
 19036  015C52  6EDA               	movwf	fsr2h,c
 19037  015C54  0EFF               	movlw	255
 19038  015C56  22DA               	addwfc	fsr2h,f,c
 19039  015C58  006F FF7B FFF6     	movff	postinc2,tblptrl
 19040  015C5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19041  015C64                     	if	0	;tblptru may be non-zero
 19042  015C64                     	endif
 19043  015C64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19044  015C64  0E00               	movlw	low (__mediumconst shr (0+16))
 19045  015C66  6EF8               	movwf	tblptru,c
 19046  015C68                     	endif
 19047  015C68  0008               	tblrd		*
 19048  015C6A  50F5               	movf	tablat,w,c
 19049  015C6C  6E2D               	movwf	(btemp+8)^0,c
 19050  015C6E  6A2E               	clrf	(btemp+9)^0,c
 19051  015C70  502F               	movf	(btemp+10)^0,w,c
 19052  015C72  262D               	addwf	(btemp+8)^0,f,c
 19053  015C74  5030               	movf	(btemp+11)^0,w,c
 19054  015C76  222E               	addwfc	(btemp+9)^0,f,c
 19055  015C78  502E               	movf	(btemp+9)^0,w,c
 19056  015C7A  E104               	bnz	u6540
 19057  015C7C  0E05               	movlw	5
 19058  015C7E  5C2D               	subwf	(btemp+8)^0,w,c
 19059  015C80  A0D8               	btfss	status,0,c
 19060  015C82  D002               	goto	l7482
 19061  015C84                     u6540:
 19062                           
 19063                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19064  015C84  0EFB               	movlw	-5
 19065  015C86  6AE3               	clrf	plusw1,c
 19066  015C88                     l7482:
 19067                           
 19068                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19069  015C88  0EFB               	movlw	-5
 19070  015C8A  50E3               	movf	plusw1,w,c
 19071  015C8C  6E2F               	movwf	(btemp+10)^0,c
 19072  015C8E  6A30               	clrf	(btemp+11)^0,c
 19073                           
 19074                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19075  015C90  0EF9               	movlw	-7
 19076  015C92  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19077  015C98  0EFA               	movlw	-6
 19078  015C9A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19079                           
 19080                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19081  015CA0  0EF9               	movlw	-7
 19082  015CA2  006F FF8C  F025    	movff	plusw1,btemp
 19083  015CA8  0EFA               	movlw	-6
 19084  015CAA  50E3               	movf	plusw1,w,c
 19085  015CAC  1025               	iorwf	btemp^0,w,c
 19086  015CAE  B4D8               	btfsc	status,2,c
 19087  015CB0  D01F               	goto	l7492
 19088  015CB2  D79F               	goto	l7472
 19089  015CB4                     l7488:
 19090  015CB4  0E01               	movlw	1
 19091  015CB6  6E2F               	movwf	(btemp+10)^0,c
 19092  015CB8  0E00               	movlw	0
 19093  015CBA  6E30               	movwf	(btemp+11)^0,c
 19094                           
 19095                           ;stkvar	_neg @ sp[(-9)+7]
 19096  015CBC  0EFE               	movlw	-2
 19097  015CBE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19098  015CC4  0EFF               	movlw	-1
 19099  015CC6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19100  015CCC                     l7490:
 19101                           
 19102                           ;stkvar	_s @ sp[(-9)+-2]
 19103  015CCC  0EF5               	movlw	-11
 19104  015CCE  50E3               	movf	plusw1,w,c
 19105  015CD0  0F01               	addlw	1
 19106  015CD2  6E25               	movwf	btemp^0,c
 19107  015CD4  0EF5               	movlw	-11
 19108  015CD6  0060  F097  FFE3   	movff	btemp,plusw1
 19109  015CDC  6A25               	clrf	btemp^0,c
 19110  015CDE  0EF6               	movlw	-10
 19111  015CE0  50E3               	movf	plusw1,w,c
 19112  015CE2  2025               	addwfc	btemp^0,w,c
 19113  015CE4  6E25               	movwf	btemp^0,c
 19114  015CE6  0EF6               	movlw	-10
 19115  015CE8  0060  F097  FFE3   	movff	btemp,plusw1
 19116  015CEE  D053               	goto	l7498
 19117  015CF0                     l7492:
 19118                           
 19119                           ;stkvar	_s @ sp[(-9)+-2]
 19120  015CF0  50E1               	movf	fsr1l,w,c
 19121  015CF2  0FF5               	addlw	-11
 19122  015CF4  6ED9               	movwf	fsr2l,c
 19123  015CF6  50E2               	movf	fsr1h,w,c
 19124  015CF8  6EDA               	movwf	fsr2h,c
 19125  015CFA  0EFF               	movlw	255
 19126  015CFC  22DA               	addwfc	fsr2h,f,c
 19127  015CFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19128  015D04  006F FF77 FFF7     	movff	postdec2,tblptrh
 19129  015D0A                     	if	0	;tblptru may be non-zero
 19130  015D0A                     	endif
 19131  015D0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19132  015D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 19133  015D0C  6EF8               	movwf	tblptru,c
 19134  015D0E                     	endif
 19135  015D0E  0008               	tblrd		*
 19136  015D10  50F5               	movf	tablat,w,c
 19137  015D12  6E2F               	movwf	(btemp+10)^0,c
 19138  015D14  6A30               	clrf	(btemp+11)^0,c
 19139                           
 19140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19141                           ; Switch size 1, requested type "simple"
 19142                           ; Number of cases is 1, Range of values is 0 to 0
 19143                           ; switch strategies available:
 19144                           ; Name         Instructions Cycles
 19145                           ; simple_byte            4     3 (average)
 19146                           ;	Chosen strategy is simple_byte
 19147  015D16  5030               	movf	(btemp+11)^0,w,c
 19148  015D18  0A00               	xorlw	0	; case 0
 19149  015D1A  A4D8               	btfss	status,2,c
 19150  015D1C  D03C               	goto	l7498
 19151                           
 19152                           ; Switch size 1, requested type "simple"
 19153                           ; Number of cases is 2, Range of values is 43 to 45
 19154                           ; switch strategies available:
 19155                           ; Name         Instructions Cycles
 19156                           ; simple_byte            7     4 (average)
 19157                           ;	Chosen strategy is simple_byte
 19158  015D1E  502F               	movf	(btemp+10)^0,w,c
 19159  015D20  0A2B               	xorlw	43	; case 43
 19160  015D22  B4D8               	btfsc	status,2,c
 19161  015D24  D7D3               	goto	l7490
 19162  015D26  0A06               	xorlw	6	; case 45
 19163  015D28  B4D8               	btfsc	status,2,c
 19164  015D2A  D7C4               	goto	l7488
 19165  015D2C  D034               	goto	l7498
 19166  015D2E                     l7494:
 19167                           
 19168                           ;stkvar	_n @ sp[(-9)+5]
 19169  015D2E  0EFC               	movlw	-4
 19170  015D30  006F FF8C  F02F    	movff	plusw1,btemp+10
 19171  015D36  0EFD               	movlw	-3
 19172  015D38  006F FF8C  F030    	movff	plusw1,btemp+11
 19173  015D3E  0E0A               	movlw	10
 19174  015D40  022F               	mulwf	(btemp+10)^0,c
 19175  015D42  006F FFCC  F02D    	movff	prodl,btemp+8
 19176  015D48  006F FFD0  F02E    	movff	prodh,btemp+9
 19177  015D4E  0230               	mulwf	(btemp+11)^0,c
 19178  015D50  50F3               	movf	prodl,w,c
 19179  015D52  262E               	addwf	(btemp+9)^0,f,c
 19180                           
 19181                           ;stkvar	_s @ sp[(-9)+-2]
 19182  015D54  50E1               	movf	fsr1l,w,c
 19183  015D56  0FF5               	addlw	-11
 19184  015D58  6ED9               	movwf	fsr2l,c
 19185  015D5A  50E2               	movf	fsr1h,w,c
 19186  015D5C  6EDA               	movwf	fsr2h,c
 19187  015D5E  0EFF               	movlw	255
 19188  015D60  22DA               	addwfc	fsr2h,f,c
 19189  015D62  006F FF7B FFF6     	movff	postinc2,tblptrl
 19190  015D68  006F FF77 FFF7     	movff	postdec2,tblptrh
 19191  015D6E                     	if	0	;tblptru may be non-zero
 19192  015D6E                     	endif
 19193  015D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19194  015D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 19195  015D70  6EF8               	movwf	tblptru,c
 19196  015D72                     	endif
 19197  015D72  0008               	tblrd		*
 19198  015D74  50F5               	movf	tablat,w,c
 19199  015D76  5E2D               	subwf	(btemp+8)^0,f,c
 19200  015D78  0E00               	movlw	0
 19201  015D7A  5A2E               	subwfb	(btemp+9)^0,f,c
 19202  015D7C  0E30               	movlw	48
 19203  015D7E  262D               	addwf	(btemp+8)^0,f,c
 19204  015D80  0E00               	movlw	0
 19205  015D82  222E               	addwfc	(btemp+9)^0,f,c
 19206                           
 19207                           ;stkvar	_n @ sp[(-9)+5]
 19208  015D84  0EFC               	movlw	-4
 19209  015D86  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 19210  015D8C  0EFD               	movlw	-3
 19211  015D8E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 19212  015D94  D79B               	goto	l7490
 19213  015D96                     l7498:
 19214  015D96  0ED0               	movlw	208
 19215  015D98  6E2F               	movwf	(btemp+10)^0,c
 19216  015D9A  0EFF               	movlw	255
 19217  015D9C  6E30               	movwf	(btemp+11)^0,c
 19218                           
 19219                           ;stkvar	_s @ sp[(-9)+-2]
 19220  015D9E  50E1               	movf	fsr1l,w,c
 19221  015DA0  0FF5               	addlw	-11
 19222  015DA2  6ED9               	movwf	fsr2l,c
 19223  015DA4  50E2               	movf	fsr1h,w,c
 19224  015DA6  6EDA               	movwf	fsr2h,c
 19225  015DA8  0EFF               	movlw	255
 19226  015DAA  22DA               	addwfc	fsr2h,f,c
 19227  015DAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19228  015DB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19229  015DB8                     	if	0	;tblptru may be non-zero
 19230  015DB8                     	endif
 19231  015DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19232  015DB8  0E00               	movlw	low (__mediumconst shr (0+16))
 19233  015DBA  6EF8               	movwf	tblptru,c
 19234  015DBC                     	endif
 19235  015DBC  0008               	tblrd		*
 19236  015DBE  50F5               	movf	tablat,w,c
 19237  015DC0  6E2D               	movwf	(btemp+8)^0,c
 19238  015DC2  6A2E               	clrf	(btemp+9)^0,c
 19239  015DC4  502F               	movf	(btemp+10)^0,w,c
 19240  015DC6  262D               	addwf	(btemp+8)^0,f,c
 19241  015DC8  5030               	movf	(btemp+11)^0,w,c
 19242  015DCA  222E               	addwfc	(btemp+9)^0,f,c
 19243  015DCC  502E               	movf	(btemp+9)^0,w,c
 19244  015DCE  E106               	bnz	u6560
 19245  015DD0  0E0A               	movlw	10
 19246  015DD2  5C2D               	subwf	(btemp+8)^0,w,c
 19247  015DD4  B0D8               	btfsc	status,0,c
 19248  015DD6  D002               	goto	u6560
 19249  015DD8  0E01               	movlw	1
 19250  015DDA  D001               	goto	u6570
 19251  015DDC                     u6560:
 19252  015DDC  0E00               	movlw	0
 19253  015DDE                     u6570:
 19254  015DDE  6E2F               	movwf	(btemp+10)^0,c
 19255  015DE0  6A30               	clrf	(btemp+11)^0,c
 19256                           
 19257                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19258  015DE2  0EF7               	movlw	-9
 19259  015DE4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19260  015DEA  0EF8               	movlw	-8
 19261  015DEC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19262                           
 19263                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19264  015DF2  0EF7               	movlw	-9
 19265  015DF4  006F FF8C  F025    	movff	plusw1,btemp
 19266  015DFA  0EF8               	movlw	-8
 19267  015DFC  50E3               	movf	plusw1,w,c
 19268  015DFE  1025               	iorwf	btemp^0,w,c
 19269  015E00  A4D8               	btfss	status,2,c
 19270  015E02  D795               	goto	l7494
 19271                           
 19272                           ;stkvar	_neg @ sp[(-9)+7]
 19273  015E04  0EFE               	movlw	-2
 19274  015E06  006F FF8C  F025    	movff	plusw1,btemp
 19275  015E0C  0EFF               	movlw	-1
 19276  015E0E  50E3               	movf	plusw1,w,c
 19277  015E10  1025               	iorwf	btemp^0,w,c
 19278  015E12  A4D8               	btfss	status,2,c
 19279  015E14  D00E               	goto	l7508
 19280                           
 19281                           ;stkvar	_n @ sp[(-9)+5]
 19282  015E16  0EFC               	movlw	-4
 19283  015E18  006F FF8C  F025    	movff	plusw1,btemp
 19284  015E1E  1E25               	comf	btemp^0,f,c
 19285  015E20  0EFD               	movlw	-3
 19286  015E22  006F FF8C  F026    	movff	plusw1,btemp+1
 19287  015E28  1E26               	comf	(btemp+1)^0,f,c
 19288  015E2A  2A25               	incf	btemp^0,f,c
 19289  015E2C  B4D8               	btfsc	status,2,c
 19290  015E2E  2A26               	incf	(btemp+1)^0,f,c
 19291  015E30  D008               	goto	l2947
 19292  015E32                     l7508:
 19293                           
 19294                           ;stkvar	_n @ sp[(-9)+5]
 19295  015E32  0EFC               	movlw	-4
 19296  015E34  006F FF8C  F025    	movff	plusw1,btemp
 19297  015E3A  0EFD               	movlw	-3
 19298  015E3C  006F FF8C  F026    	movff	plusw1,btemp+1
 19299  015E42                     l2947:
 19300                           
 19301                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19302  015E42  0EF5               	movlw	245
 19303  015E44  26E1               	addwf	fsr1l,f,c
 19304  015E46  0EFF               	movlw	255
 19305  015E48  22E2               	addwfc	fsr1h,f,c
 19306  015E4A  0012               	return		;funcret
 19307  015E4C                     __end_of_atoi:
 19308                           	opt callstack 0
 19309                           
 19310 ;; *************** function _isspace *****************
 19311 ;; Defined at:
 19312 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19313 ;; Parameters:    Size  Location     Type
 19314 ;;  c               2  [STACK] int 
 19315 ;; Auto vars:     Size  Location     Type
 19316 ;;		None
 19317 ;; Return value:  Size  Location     Type
 19318 ;;                  2  [STACK] int 
 19319 ;; Registers used:
 19320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19321 ;; Tracked objects:
 19322 ;;		On entry : 0/0
 19323 ;;		On exit  : 0/0
 19324 ;;		Unchanged: 0/0
 19325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19330 ;;Total ram usage:        0 bytes
 19331 ;; Hardware stack levels used:    1
 19332 ;; Hardware stack levels required when called:    7
 19333 ;; This function calls:
 19334 ;;		Nothing
 19335 ;; This function is called by:
 19336 ;;		_atoi
 19337 ;; This function uses a reentrant model
 19338 ;;
 19339                           
 19340                           	psect	text73
 19341  018904                     __ptext73:
 19342                           	opt callstack 0
 19343  018904                     _isspace:
 19344                           	opt callstack 0
 19345                           
 19346                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19347  018904  52E6               	movf	postinc1,f,c
 19348                           
 19349                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19350                           
 19351                           ;incstack = 0
 19352  018906  0EFF               	movlw	-1
 19353  018908  6AE3               	clrf	plusw1,c
 19354  01890A  2AE3               	incf	plusw1,f,c
 19355                           
 19356                           ;stkvar	_c @ sp[(-1)+-2]
 19357  01890C  0EFD               	movlw	-3
 19358  01890E  006F FF8C  F025    	movff	plusw1,btemp
 19359  018914  0E20               	movlw	32
 19360  018916  1825               	xorwf	btemp^0,w,c
 19361  018918  E104               	bnz	u5530
 19362  01891A  0EFE               	movlw	-2
 19363  01891C  50E3               	movf	plusw1,w,c
 19364  01891E  B4D8               	btfsc	status,2,c
 19365  018920  D012               	goto	l6958
 19366  018922                     u5530:
 19367                           
 19368                           ;stkvar	_c @ sp[(-1)+-2]
 19369  018922  0EFD               	movlw	-3
 19370  018924  50E3               	movf	plusw1,w,c
 19371  018926  0FF7               	addlw	247
 19372  018928  6E2F               	movwf	(btemp+10)^0,c
 19373  01892A  0EFE               	movlw	-2
 19374  01892C  006F FF8C  F030    	movff	plusw1,btemp+11
 19375  018932  0EFF               	movlw	255
 19376  018934  2230               	addwfc	(btemp+11)^0,f,c
 19377  018936  5030               	movf	(btemp+11)^0,w,c
 19378  018938  E104               	bnz	u5540
 19379  01893A  0E05               	movlw	5
 19380  01893C  5C2F               	subwf	(btemp+10)^0,w,c
 19381  01893E  A0D8               	btfss	status,0,c
 19382  018940  D002               	goto	l6958
 19383  018942                     u5540:
 19384                           
 19385                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19386  018942  0EFF               	movlw	-1
 19387  018944  6AE3               	clrf	plusw1,c
 19388  018946                     l6958:
 19389                           
 19390                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19391  018946  0EFF               	movlw	-1
 19392  018948  50E3               	movf	plusw1,w,c
 19393  01894A  6E25               	movwf	btemp^0,c
 19394  01894C  6A26               	clrf	(btemp+1)^0,c
 19395                           
 19396                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19397  01894E  52E5               	movf	postdec1,f,c
 19398  018950  52E5               	movf	postdec1,f,c
 19399  018952  52E5               	movf	postdec1,f,c
 19400  018954  0012               	return		;funcret
 19401  018956                     __end_of_isspace:
 19402                           	opt callstack 0
 19403                           
 19404 ;; *************** function _isdigit *****************
 19405 ;; Defined at:
 19406 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19407 ;; Parameters:    Size  Location     Type
 19408 ;;  c               2  [STACK] int 
 19409 ;; Auto vars:     Size  Location     Type
 19410 ;;		None
 19411 ;; Return value:  Size  Location     Type
 19412 ;;                  2  [STACK] int 
 19413 ;; Registers used:
 19414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19415 ;; Tracked objects:
 19416 ;;		On entry : 0/0
 19417 ;;		On exit  : 0/0
 19418 ;;		Unchanged: 0/0
 19419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19424 ;;Total ram usage:        0 bytes
 19425 ;; Hardware stack levels used:    1
 19426 ;; Hardware stack levels required when called:    7
 19427 ;; This function calls:
 19428 ;;		Nothing
 19429 ;; This function is called by:
 19430 ;;		_vfpfcnvrt
 19431 ;;		_atoi
 19432 ;; This function uses a reentrant model
 19433 ;;
 19434                           
 19435                           	psect	text74
 19436  018EE8                     __ptext74:
 19437                           	opt callstack 0
 19438  018EE8                     _isdigit:
 19439                           	opt callstack 17
 19440                           
 19441                           ;stkvar	_c @ sp[(0)+-2]
 19442                           
 19443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19444                           ;incstack = 0
 19445  018EE8  0EFE               	movlw	-2
 19446  018EEA  50E3               	movf	plusw1,w,c
 19447  018EEC  0FD0               	addlw	208
 19448  018EEE  6E2F               	movwf	(btemp+10)^0,c
 19449  018EF0  0EFF               	movlw	-1
 19450  018EF2  006F FF8C  F030    	movff	plusw1,btemp+11
 19451  018EF8  0EFF               	movlw	255
 19452  018EFA  2230               	addwfc	(btemp+11)^0,f,c
 19453  018EFC  5030               	movf	(btemp+11)^0,w,c
 19454  018EFE  E106               	bnz	u5110
 19455  018F00  0E0A               	movlw	10
 19456  018F02  5C2F               	subwf	(btemp+10)^0,w,c
 19457  018F04  B0D8               	btfsc	status,0,c
 19458  018F06  D002               	goto	u5110
 19459  018F08  0E01               	movlw	1
 19460  018F0A  D001               	goto	u5120
 19461  018F0C                     u5110:
 19462  018F0C  0E00               	movlw	0
 19463  018F0E                     u5120:
 19464  018F0E  6E25               	movwf	btemp^0,c
 19465  018F10  6A26               	clrf	(btemp+1)^0,c
 19466                           
 19467                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19468  018F12  52E5               	movf	postdec1,f,c
 19469  018F14  52E5               	movf	postdec1,f,c
 19470  018F16  0012               	return		;funcret
 19471  018F18                     __end_of_isdigit:
 19472                           	opt callstack 0
 19473                           
 19474 ;; *************** function _set_vterm *****************
 19475 ;; Defined at:
 19476 ;;		line 107 in file "mconfig.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  vterm           1  [STACK] const unsigned char 
 19479 ;; Auto vars:     Size  Location     Type
 19480 ;;		None
 19481 ;; Return value:  Size  Location     Type
 19482 ;;                  1  [STACK] unsigned char 
 19483 ;; Registers used:
 19484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19485 ;; Tracked objects:
 19486 ;;		On entry : 0/1
 19487 ;;		On exit  : 0/0
 19488 ;;		Unchanged: 0/0
 19489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19494 ;;Total ram usage:        0 bytes
 19495 ;; Hardware stack levels used:    1
 19496 ;; Hardware stack levels required when called:    7
 19497 ;; This function calls:
 19498 ;;		Nothing
 19499 ;; This function is called by:
 19500 ;;		_main
 19501 ;;		_check_help
 19502 ;; This function uses a reentrant model
 19503 ;;
 19504                           
 19505                           	psect	text75
 19506  019490                     __ptext75:
 19507                           	opt callstack 0
 19508  019490                     _set_vterm:
 19509                           	opt callstack 23
 19510                           
 19511                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19512                           ;stkvar	_vterm @ sp[(0)+-1]
 19513                           
 19514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19515                           ;incstack = 0
 19516  019490  0EFF               	movlw	-1
 19517  019492  006F FF8C  F030    	movff	plusw1,btemp+11
 19518  019498  0E03               	movlw	3
 19519  01949A  1630               	andwf	(btemp+11)^0,f,c
 19520  01949C  EE22  F01F         	lfsr	2,_D+288
 19521  0194A0  50DF               	movf	223,w,c
 19522  0194A2  1830               	xorwf	(btemp+11)^0,w,c
 19523  0194A4  0BFE               	andlw	-2
 19524  0194A6  1830               	xorwf	(btemp+11)^0,w,c
 19525  0194A8  6EDF               	movwf	223,c
 19526                           
 19527                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19528  0194AA  52E5               	movf	postdec1,f,c
 19529  0194AC  0012               	return		;funcret
 19530  0194AE                     __end_of_set_vterm:
 19531                           	opt callstack 0
 19532                           
 19533 ;; *************** function _set_temp_display_help *****************
 19534 ;; Defined at:
 19535 ;;		line 211 in file "mconfig.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  new_response    1  [STACK] const enum E16518
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;		None
 19540 ;; Return value:  Size  Location     Type
 19541 ;;                  1  [STACK] enum E16518
 19542 ;; Registers used:
 19543 ;;		wreg, fsr1l, fsr1h
 19544 ;; Tracked objects:
 19545 ;;		On entry : 0/2
 19546 ;;		On exit  : 3F/2
 19547 ;;		Unchanged: 0/0
 19548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19553 ;;Total ram usage:        0 bytes
 19554 ;; Hardware stack levels used:    1
 19555 ;; Hardware stack levels required when called:    7
 19556 ;; This function calls:
 19557 ;;		Nothing
 19558 ;; This function is called by:
 19559 ;;		_check_help
 19560 ;; This function uses a reentrant model
 19561 ;;
 19562                           
 19563                           	psect	text76
 19564  019604                     __ptext76:
 19565                           	opt callstack 0
 19566  019604                     _set_temp_display_help:
 19567                           	opt callstack 22
 19568                           
 19569                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19570                           
 19571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19572                           ;incstack = 0
 19573  019604  0102               	movlb	2	; () banked
 19574  019606  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19575                           
 19576                           ; BSR set to: 2
 19577                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19578                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19579  019608  0EFF               	movlw	-1
 19580  01960A  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19581                           
 19582                           ; BSR set to: 2
 19583                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19584  019610  52E5               	movf	postdec1,f,c
 19585  019612  0012               	return		;funcret
 19586  019614                     __end_of_set_temp_display_help:
 19587                           	opt callstack 0
 19588                           
 19589 ;; *************** function _set_display_info *****************
 19590 ;; Defined at:
 19591 ;;		line 200 in file "mconfig.c"
 19592 ;; Parameters:    Size  Location     Type
 19593 ;;  new_response    1  [STACK] const enum E16518
 19594 ;; Auto vars:     Size  Location     Type
 19595 ;;		None
 19596 ;; Return value:  Size  Location     Type
 19597 ;;                  1  [STACK] enum E17003
 19598 ;; Registers used:
 19599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19600 ;; Tracked objects:
 19601 ;;		On entry : 0/1
 19602 ;;		On exit  : 0/0
 19603 ;;		Unchanged: 0/0
 19604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19609 ;;Total ram usage:        0 bytes
 19610 ;; Hardware stack levels used:    1
 19611 ;; Hardware stack levels required when called:    8
 19612 ;; This function calls:
 19613 ;;		_TimerDone
 19614 ;; This function is called by:
 19615 ;;		_main
 19616 ;;		_check_help
 19617 ;; This function uses a reentrant model
 19618 ;;
 19619                           
 19620                           	psect	text77
 19621  0194AE                     __ptext77:
 19622                           	opt callstack 0
 19623  0194AE                     _set_display_info:
 19624                           	opt callstack 22
 19625                           
 19626                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19627                           
 19628                           ; BSR set to: 2
 19629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19630                           ;incstack = 0
 19631  0194AE  0E07               	movlw	7
 19632  0194B0  6EE6               	movwf	postinc1,c
 19633  0194B2  EC4B  F0C8         	call	_TimerDone	;wreg free
 19634  0194B6  5025               	movf	btemp^0,w,c
 19635  0194B8  B4D8               	btfsc	status,2,c
 19636  0194BA  D006               	goto	l1717
 19637                           
 19638                           ;mconfig.c: 205:   old_info = V.response.info;
 19639  0194BC  0102               	movlb	2	; () banked
 19640  0194BE  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19641                           
 19642                           ; BSR set to: 2
 19643                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19644                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19645  0194C0  0EFF               	movlw	-1
 19646  0194C2  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19647  0194C8                     l1717:
 19648                           
 19649                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19650  0194C8  52E5               	movf	postdec1,f,c
 19651  0194CA  0012               	return		;funcret
 19652  0194CC                     __end_of_set_display_info:
 19653                           	opt callstack 0
 19654                           
 19655 ;; *************** function _mode_lamp_dim *****************
 19656 ;; Defined at:
 19657 ;;		line 13 in file "mconfig.c"
 19658 ;; Parameters:    Size  Location     Type
 19659 ;;  level           2  [STACK] const unsigned short 
 19660 ;; Auto vars:     Size  Location     Type
 19661 ;;		None
 19662 ;; Return value:  Size  Location     Type
 19663 ;;                  1  [STACK] void 
 19664 ;; Registers used:
 19665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19666 ;; Tracked objects:
 19667 ;;		On entry : 0/2
 19668 ;;		On exit  : 0/0
 19669 ;;		Unchanged: 0/0
 19670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19675 ;;Total ram usage:        0 bytes
 19676 ;; Hardware stack levels used:    1
 19677 ;; Hardware stack levels required when called:    8
 19678 ;; This function calls:
 19679 ;;		_PWM8_LoadDutyValue
 19680 ;; This function is called by:
 19681 ;;		_main
 19682 ;;		_check_help
 19683 ;; This function uses a reentrant model
 19684 ;;
 19685                           
 19686                           	psect	text78
 19687  01955A                     __ptext78:
 19688                           	opt callstack 0
 19689  01955A                     _mode_lamp_dim:
 19690                           	opt callstack 22
 19691                           
 19692                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19693                           ;stkvar	_level @ sp[(0)+-2]
 19694                           
 19695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19696                           ;incstack = 0
 19697  01955A  0EFE               	movlw	-2
 19698  01955C  006F FF8F FFE6     	movff	plusw1,postinc1
 19699  019562  006F FF8F FFE6     	movff	plusw1,postinc1
 19700  019568  ECC9  F0C5         	call	_PWM8_LoadDutyValue	;wreg free
 19701                           
 19702                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19703  01956C  52E5               	movf	postdec1,f,c
 19704  01956E  52E5               	movf	postdec1,f,c
 19705  019570  0012               	return		;funcret
 19706  019572                     __end_of_mode_lamp_dim:
 19707                           	opt callstack 0
 19708                           
 19709 ;; *************** function _mode_lamp_bright *****************
 19710 ;; Defined at:
 19711 ;;		line 18 in file "mconfig.c"
 19712 ;; Parameters:    Size  Location     Type
 19713 ;;		None
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;		None
 19716 ;; Return value:  Size  Location     Type
 19717 ;;                  1  [STACK] void 
 19718 ;; Registers used:
 19719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19720 ;; Tracked objects:
 19721 ;;		On entry : 0/0
 19722 ;;		On exit  : 0/0
 19723 ;;		Unchanged: 0/0
 19724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19729 ;;Total ram usage:        0 bytes
 19730 ;; Hardware stack levels used:    1
 19731 ;; Hardware stack levels required when called:    8
 19732 ;; This function calls:
 19733 ;;		_PWM8_LoadDutyValue
 19734 ;; This function is called by:
 19735 ;;		_check_help
 19736 ;; This function uses a reentrant model
 19737 ;;
 19738                           
 19739                           	psect	text79
 19740  019622                     __ptext79:
 19741                           	opt callstack 0
 19742  019622                     _mode_lamp_bright:
 19743                           	opt callstack 21
 19744                           
 19745                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19746                           
 19747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19748                           ;incstack = 0
 19749  019622  0E2C               	movlw	44
 19750  019624  6EE6               	movwf	postinc1,c
 19751  019626  0E01               	movlw	1
 19752  019628  6EE6               	movwf	postinc1,c
 19753  01962A  ECC9  F0C5         	call	_PWM8_LoadDutyValue	;wreg free
 19754                           
 19755                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19756  01962E  0012               	return		;funcret
 19757  019630                     __end_of_mode_lamp_bright:
 19758                           	opt callstack 0
 19759                           
 19760 ;; *************** function _PWM8_LoadDutyValue *****************
 19761 ;; Defined at:
 19762 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19763 ;; Parameters:    Size  Location     Type
 19764 ;;  dutyValue       2  [STACK] unsigned short 
 19765 ;; Auto vars:     Size  Location     Type
 19766 ;;		None
 19767 ;; Return value:  Size  Location     Type
 19768 ;;                  1  [STACK] void 
 19769 ;; Registers used:
 19770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19771 ;; Tracked objects:
 19772 ;;		On entry : 0/2
 19773 ;;		On exit  : 0/0
 19774 ;;		Unchanged: 0/0
 19775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19780 ;;Total ram usage:        0 bytes
 19781 ;; Hardware stack levels used:    1
 19782 ;; Hardware stack levels required when called:    7
 19783 ;; This function calls:
 19784 ;;		Nothing
 19785 ;; This function is called by:
 19786 ;;		_mode_lamp_dim
 19787 ;;		_mode_lamp_bright
 19788 ;; This function uses a reentrant model
 19789 ;;
 19790                           
 19791                           	psect	text80
 19792  018B92                     __ptext80:
 19793                           	opt callstack 0
 19794  018B92                     _PWM8_LoadDutyValue:
 19795                           	opt callstack 22
 19796                           
 19797                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19798                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19799                           
 19800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19801                           ;incstack = 0
 19802  018B92  0EFE               	movlw	-2
 19803  018B94  006F FF8C  F02F    	movff	plusw1,btemp+10
 19804  018B9A  0EFF               	movlw	-1
 19805  018B9C  006F FF8C  F030    	movff	plusw1,btemp+11
 19806  018BA2  90D8               	bcf	status,0,c
 19807  018BA4  3230               	rrcf	(btemp+11)^0,f,c
 19808  018BA6  322F               	rrcf	(btemp+10)^0,f,c
 19809  018BA8  90D8               	bcf	status,0,c
 19810  018BAA  3230               	rrcf	(btemp+11)^0,f,c
 19811  018BAC  322F               	rrcf	(btemp+10)^0,f,c
 19812  018BAE  502F               	movf	(btemp+10)^0,w,c
 19813  018BB0  6E61               	movwf	97,c	;volatile
 19814                           
 19815                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19816                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19817  018BB2  0EFE               	movlw	-2
 19818  018BB4  006F FF8C  F030    	movff	plusw1,btemp+11
 19819  018BBA  0E03               	movlw	3
 19820  018BBC  1630               	andwf	(btemp+11)^0,f,c
 19821  018BBE  0E06               	movlw	6
 19822  018BC0  6E25               	movwf	btemp^0,c
 19823  018BC2                     u7025:
 19824  018BC2  90D8               	bcf	status,0,c
 19825  018BC4  3630               	rlcf	(btemp+11)^0,f,c
 19826  018BC6  2E25               	decfsz	btemp^0,f,c
 19827  018BC8  D7FC               	goto	u7025
 19828  018BCA  5030               	movf	(btemp+11)^0,w,c
 19829  018BCC  6E60               	movwf	96,c	;volatile
 19830                           
 19831                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19832  018BCE  52E5               	movf	postdec1,f,c
 19833  018BD0  52E5               	movf	postdec1,f,c
 19834  018BD2  0012               	return		;funcret
 19835  018BD4                     __end_of_PWM8_LoadDutyValue:
 19836                           	opt callstack 0
 19837                           
 19838 ;; *************** function _help_button *****************
 19839 ;; Defined at:
 19840 ;;		line 26 in file "mconfig.c"
 19841 ;; Parameters:    Size  Location     Type
 19842 ;;		None
 19843 ;; Auto vars:     Size  Location     Type
 19844 ;;		None
 19845 ;; Return value:  Size  Location     Type
 19846 ;;                  1  [STACK] _Bool 
 19847 ;; Registers used:
 19848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19849 ;; Tracked objects:
 19850 ;;		On entry : 0/2
 19851 ;;		On exit  : 0/0
 19852 ;;		Unchanged: 0/0
 19853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19858 ;;Total ram usage:        0 bytes
 19859 ;; Hardware stack levels used:    1
 19860 ;; Hardware stack levels required when called:    8
 19861 ;; This function calls:
 19862 ;;		_StartTimer
 19863 ;;		_TimerDone
 19864 ;; This function is called by:
 19865 ;;		_check_help
 19866 ;; This function uses a reentrant model
 19867 ;;
 19868                           
 19869                           	psect	text81
 19870  018D12                     __ptext81:
 19871                           	opt callstack 0
 19872  018D12                     _help_button:
 19873                           	opt callstack 21
 19874                           
 19875                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19876                           
 19877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19878                           ;incstack = 0
 19879  018D12  B0CB               	btfsc	203,0,c	;volatile
 19880  018D14  D00C               	goto	l1660
 19881                           
 19882                           ;mconfig.c: 29:   V.help = 1;
 19883  018D16  0102               	movlb	2	; () banked
 19884  018D18  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19885                           
 19886                           ; BSR set to: 2
 19887                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19888  018D1A  0E08               	movlw	8
 19889  018D1C  6EE6               	movwf	postinc1,c
 19890  018D1E  EC4B  F0C8         	call	_TimerDone	;wreg free
 19891  018D22  5025               	movf	btemp^0,w,c
 19892  018D24  B4D8               	btfsc	status,2,c
 19893  018D26  D003               	goto	l1660
 19894                           
 19895                           ;mconfig.c: 31:    return 1;
 19896  018D28  0E01               	movlw	1
 19897  018D2A  6E25               	movwf	btemp^0,c
 19898  018D2C  0012               	return	
 19899  018D2E                     l1660:
 19900                           
 19901                           ;mconfig.c: 34:  if (!V.help)
 19902  018D2E  0102               	movlb	2	; () banked
 19903  018D30  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19904  018D32  D008               	goto	l9058
 19905                           
 19906                           ; BSR set to: 2
 19907                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19908  018D34  0E2C               	movlw	44
 19909  018D36  6EE6               	movwf	postinc1,c
 19910  018D38  0E01               	movlw	1
 19911  018D3A  6EE6               	movwf	postinc1,c
 19912  018D3C  0E08               	movlw	8
 19913  018D3E  6EE6               	movwf	postinc1,c
 19914  018D40  ECEA  F0C5         	call	_StartTimer	;wreg free
 19915  018D44                     l9058:
 19916                           
 19917                           ;mconfig.c: 37:  return 0;
 19918  018D44  0E00               	movlw	0
 19919  018D46  6E25               	movwf	btemp^0,c
 19920                           
 19921                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19922  018D48  0012               	return		;funcret
 19923  018D4A                     __end_of_help_button:
 19924                           	opt callstack 0
 19925                           
 19926 ;; *************** function _TimerDone *****************
 19927 ;; Defined at:
 19928 ;;		line 20 in file "timers.c"
 19929 ;; Parameters:    Size  Location     Type
 19930 ;;  timer           1  [STACK] const unsigned char 
 19931 ;; Auto vars:     Size  Location     Type
 19932 ;;		None
 19933 ;; Return value:  Size  Location     Type
 19934 ;;                  1  [STACK] _Bool 
 19935 ;; Registers used:
 19936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19937 ;; Tracked objects:
 19938 ;;		On entry : 0/1
 19939 ;;		On exit  : 0/0
 19940 ;;		Unchanged: 0/0
 19941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19946 ;;Total ram usage:        0 bytes
 19947 ;; Hardware stack levels used:    1
 19948 ;; Hardware stack levels required when called:    7
 19949 ;; This function calls:
 19950 ;;		Nothing
 19951 ;; This function is called by:
 19952 ;;		_main
 19953 ;;		_WaitMs
 19954 ;;		_help_button
 19955 ;;		_check_help
 19956 ;;		_set_display_info
 19957 ;; This function uses a reentrant model
 19958 ;;
 19959                           
 19960                           	psect	text82
 19961  019096                     __ptext82:
 19962                           	opt callstack 0
 19963  019096                     _TimerDone:
 19964                           	opt callstack 22
 19965                           
 19966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19967                           ;incstack = 0
 19968  019096  0004               	clrwdt		;# 
 19969                           
 19970                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19971                           ;stkvar	_timer @ sp[(0)+-1]
 19972  019098  0EFF               	movlw	-1
 19973  01909A  50E3               	movf	plusw1,w,c
 19974  01909C  0D02               	mullw	2
 19975  01909E  0EB5               	movlw	low _tickCount
 19976  0190A0  24F3               	addwf	243,w,c
 19977  0190A2  6ED9               	movwf	fsr2l,c
 19978  0190A4  0E01               	movlw	high _tickCount
 19979  0190A6  20F4               	addwfc	prodh,w,c
 19980  0190A8  6EDA               	movwf	fsr2h,c
 19981  0190AA  50DE               	movf	postinc2,w,c
 19982  0190AC  10DE               	iorwf	postinc2,w,c
 19983  0190AE  A4D8               	btfss	status,2,c
 19984  0190B0  D002               	goto	l7794
 19985                           
 19986                           ;timers.c: 24:   return 1;
 19987  0190B2  0E01               	movlw	1
 19988  0190B4  D001               	goto	L20
 19989  0190B6                     l7794:
 19990                           
 19991                           ;timers.c: 26:  return 0;
 19992  0190B6  0E00               	movlw	0
 19993  0190B8                     L20:
 19994  0190B8  6E25               	movwf	btemp^0,c
 19995                           
 19996                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19997  0190BA  52E5               	movf	postdec1,f,c
 19998  0190BC  0012               	return		;funcret
 19999  0190BE                     __end_of_TimerDone:
 20000                           	opt callstack 0
 20001                           
 20002 ;; *************** function _StartTimer *****************
 20003 ;; Defined at:
 20004 ;;		line 12 in file "timers.c"
 20005 ;; Parameters:    Size  Location     Type
 20006 ;;  timer           1  [STACK] const unsigned char 
 20007 ;;  count           2  [STACK] const unsigned short 
 20008 ;; Auto vars:     Size  Location     Type
 20009 ;;		None
 20010 ;; Return value:  Size  Location     Type
 20011 ;;                  1  [STACK] void 
 20012 ;; Registers used:
 20013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20014 ;; Tracked objects:
 20015 ;;		On entry : 0/0
 20016 ;;		On exit  : 0/0
 20017 ;;		Unchanged: 0/0
 20018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20023 ;;Total ram usage:        0 bytes
 20024 ;; Hardware stack levels used:    1
 20025 ;; Hardware stack levels required when called:    7
 20026 ;; This function calls:
 20027 ;;		Nothing
 20028 ;; This function is called by:
 20029 ;;		_main
 20030 ;;		_WaitMs
 20031 ;;		_help_button
 20032 ;;		_check_help
 20033 ;; This function uses a reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text83
 20037  018BD4                     __ptext83:
 20038                           	opt callstack 0
 20039  018BD4                     _StartTimer:
 20040                           	opt callstack 20
 20041                           
 20042                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20043                           ;stkvar	_count @ sp[(0)+-3]
 20044                           
 20045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20046                           ;incstack = 0
 20047  018BD4  0EFD               	movlw	-3
 20048  018BD6  006F FF8C  F02F    	movff	plusw1,btemp+10
 20049  018BDC  0EFE               	movlw	-2
 20050  018BDE  006F FF8C  F030    	movff	plusw1,btemp+11
 20051  018BE4  90D8               	bcf	status,0,c
 20052  018BE6  342F               	rlcf	(btemp+10)^0,w,c
 20053  018BE8  6E2D               	movwf	(btemp+8)^0,c
 20054  018BEA  3430               	rlcf	(btemp+11)^0,w,c
 20055  018BEC  6E2E               	movwf	(btemp+9)^0,c
 20056                           
 20057                           ;stkvar	_timer @ sp[(0)+-1]
 20058  018BEE  0EFF               	movlw	-1
 20059  018BF0  50E3               	movf	plusw1,w,c
 20060  018BF2  0D02               	mullw	2
 20061  018BF4  0EB5               	movlw	low _tickCount
 20062  018BF6  24F3               	addwf	243,w,c
 20063  018BF8  6ED9               	movwf	fsr2l,c
 20064  018BFA  0E01               	movlw	high _tickCount
 20065  018BFC  20F4               	addwfc	prodh,w,c
 20066  018BFE  6EDA               	movwf	fsr2h,c
 20067  018C00  0060  F0B7  FFDE   	movff	btemp+8,postinc2
 20068  018C06  0060  F0BB  FFDD   	movff	btemp+9,postdec2
 20069                           
 20070                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20071  018C0C  52E5               	movf	postdec1,f,c
 20072  018C0E  52E5               	movf	postdec1,f,c
 20073  018C10  52E5               	movf	postdec1,f,c
 20074  018C12  0012               	return		;funcret
 20075  018C14                     __end_of_StartTimer:
 20076                           	opt callstack 0
 20077                           
 20078 ;; *************** function _display_info *****************
 20079 ;; Defined at:
 20080 ;;		line 190 in file "mconfig.c"
 20081 ;; Parameters:    Size  Location     Type
 20082 ;;		None
 20083 ;; Auto vars:     Size  Location     Type
 20084 ;;		None
 20085 ;; Return value:  Size  Location     Type
 20086 ;;                  1  [STACK] enum E16518
 20087 ;; Registers used:
 20088 ;;		btemp
 20089 ;; Tracked objects:
 20090 ;;		On entry : 0/2
 20091 ;;		On exit  : 0/0
 20092 ;;		Unchanged: 0/0
 20093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20098 ;;Total ram usage:        0 bytes
 20099 ;; Hardware stack levels used:    1
 20100 ;; Hardware stack levels required when called:    7
 20101 ;; This function calls:
 20102 ;;		Nothing
 20103 ;; This function is called by:
 20104 ;;		_check_help
 20105 ;; This function uses a reentrant model
 20106 ;;
 20107                           
 20108                           	psect	text84
 20109  019682                     __ptext84:
 20110                           	opt callstack 0
 20111  019682                     _display_info:
 20112                           	opt callstack 22
 20113                           
 20114                           ;mconfig.c: 192:  return V.response.info;
 20115                           
 20116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20117                           ;incstack = 0
 20118  019682  0060  FA8C  F025   	movff	_V+163,btemp	;volatile
 20119                           
 20120                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20121  019688  0012               	return		;funcret
 20122  01968A                     __end_of_display_info:
 20123                           	opt callstack 0
 20124                           
 20125 ;; *************** function _display_help *****************
 20126 ;; Defined at:
 20127 ;;		line 195 in file "mconfig.c"
 20128 ;; Parameters:    Size  Location     Type
 20129 ;;		None
 20130 ;; Auto vars:     Size  Location     Type
 20131 ;;		None
 20132 ;; Return value:  Size  Location     Type
 20133 ;;                  1  [STACK] enum E16518
 20134 ;; Registers used:
 20135 ;;		btemp
 20136 ;; Tracked objects:
 20137 ;;		On entry : 3F/2
 20138 ;;		On exit  : 0/0
 20139 ;;		Unchanged: 0/0
 20140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20145 ;;Total ram usage:        0 bytes
 20146 ;; Hardware stack levels used:    1
 20147 ;; Hardware stack levels required when called:    7
 20148 ;; This function calls:
 20149 ;;		Nothing
 20150 ;; This function is called by:
 20151 ;;		_check_help
 20152 ;; This function uses a reentrant model
 20153 ;;
 20154                           
 20155                           	psect	text85
 20156  01968A                     __ptext85:
 20157                           	opt callstack 0
 20158  01968A                     _display_help:
 20159                           	opt callstack 22
 20160                           
 20161                           ;mconfig.c: 197:  return V.response.help_temp;
 20162                           
 20163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20164                           ;incstack = 0
 20165  01968A  0060  FA90  F025   	movff	_V+164,btemp	;volatile
 20166                           
 20167                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20168  019690  0012               	return		;funcret
 20169  019692                     __end_of_display_help:
 20170                           	opt callstack 0
 20171                           
 20172 ;; *************** function _check_enter_button *****************
 20173 ;; Defined at:
 20174 ;;		line 42 in file "hid.c"
 20175 ;; Parameters:    Size  Location     Type
 20176 ;;  h               1  [STACK] PTR struct H_data
 20177 ;;		 -> H(7), 
 20178 ;; Auto vars:     Size  Location     Type
 20179 ;;		None
 20180 ;; Return value:  Size  Location     Type
 20181 ;;                  1  [STACK] _Bool 
 20182 ;; Registers used:
 20183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20184 ;; Tracked objects:
 20185 ;;		On entry : 0/1
 20186 ;;		On exit  : 0/0
 20187 ;;		Unchanged: 0/0
 20188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20193 ;;Total ram usage:        0 bytes
 20194 ;; Hardware stack levels used:    1
 20195 ;; Hardware stack levels required when called:    7
 20196 ;; This function calls:
 20197 ;;		Nothing
 20198 ;; This function is called by:
 20199 ;;		_main
 20200 ;; This function uses a reentrant model
 20201 ;;
 20202                           
 20203                           	psect	text86
 20204  018C14                     __ptext86:
 20205                           	opt callstack 0
 20206  018C14                     _check_enter_button:
 20207                           	opt callstack 23
 20208                           
 20209                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20210                           ;stkvar	_h @ sp[(0)+-1]
 20211                           
 20212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20213                           ;incstack = 0
 20214  018C14  0EFF               	movlw	-1
 20215  018C16  50E3               	movf	plusw1,w,c
 20216  018C18  6ED9               	movwf	fsr2l,c
 20217  018C1A  6ADA               	clrf	fsr2h,c
 20218  018C1C  0E04               	movlw	4
 20219  018C1E  26D9               	addwf	fsr2l,f,c
 20220  018C20  50DF               	movf	indf2,w,c
 20221  018C22  A4D8               	btfss	status,2,c
 20222  018C24  D013               	goto	l9602
 20223                           
 20224                           ;stkvar	_h @ sp[(0)+-1]
 20225  018C26  0EFF               	movlw	-1
 20226  018C28  50E3               	movf	plusw1,w,c
 20227  018C2A  6ED9               	movwf	fsr2l,c
 20228  018C2C  6ADA               	clrf	fsr2h,c
 20229  018C2E  0E05               	movlw	5
 20230  018C30  26D9               	addwf	fsr2l,f,c
 20231  018C32  50DF               	movf	indf2,w,c
 20232  018C34  A4D8               	btfss	status,2,c
 20233  018C36  D00A               	goto	l9602
 20234                           
 20235                           ;hid.c: 45:   h->wait_enter = 1;
 20236                           ;stkvar	_h @ sp[(0)+-1]
 20237  018C38  0EFF               	movlw	-1
 20238  018C3A  50E3               	movf	plusw1,w,c
 20239  018C3C  6ED9               	movwf	fsr2l,c
 20240  018C3E  6ADA               	clrf	fsr2h,c
 20241  018C40  0E04               	movlw	4
 20242  018C42  26D9               	addwf	fsr2l,f,c
 20243  018C44  0E01               	movlw	1
 20244  018C46  6EDF               	movwf	indf2,c
 20245                           
 20246                           ;hid.c: 46:   return 1;
 20247  018C48  0E01               	movlw	1
 20248  018C4A  D001               	goto	L21
 20249  018C4C                     l9602:
 20250                           
 20251                           ;hid.c: 48:  return 0;
 20252  018C4C  0E00               	movlw	0
 20253  018C4E                     L21:
 20254  018C4E  6E25               	movwf	btemp^0,c
 20255                           
 20256                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20257  018C50  52E5               	movf	postdec1,f,c
 20258  018C52  0012               	return		;funcret
 20259  018C54                     __end_of_check_enter_button:
 20260                           	opt callstack 0
 20261                           
 20262 ;; *************** function _check_adc_scan *****************
 20263 ;; Defined at:
 20264 ;;		line 56 in file "daq.c"
 20265 ;; Parameters:    Size  Location     Type
 20266 ;;		None
 20267 ;; Auto vars:     Size  Location     Type
 20268 ;;		None
 20269 ;; Return value:  Size  Location     Type
 20270 ;;                  1  [STACK] _Bool 
 20271 ;; Registers used:
 20272 ;;		btemp
 20273 ;; Tracked objects:
 20274 ;;		On entry : 0/1
 20275 ;;		On exit  : 0/0
 20276 ;;		Unchanged: 0/0
 20277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20282 ;;Total ram usage:        0 bytes
 20283 ;; Hardware stack levels used:    1
 20284 ;; Hardware stack levels required when called:    7
 20285 ;; This function calls:
 20286 ;;		Nothing
 20287 ;; This function is called by:
 20288 ;;		_main
 20289 ;; This function uses a reentrant model
 20290 ;;
 20291                           
 20292                           	psect	text87
 20293  019692                     __ptext87:
 20294                           	opt callstack 0
 20295  019692                     _check_adc_scan:
 20296                           	opt callstack 23
 20297                           
 20298                           ;daq.c: 58:  return R.done;
 20299                           
 20300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20301                           ;incstack = 0
 20302  019692  0060  F3A8  F025   	movff	_R+39,btemp	;volatile
 20303                           
 20304                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20305  019698  0012               	return		;funcret
 20306  01969A                     __end_of_check_adc_scan:
 20307                           	opt callstack 0
 20308                           
 20309 ;; *************** function _calc_model_data *****************
 20310 ;; Defined at:
 20311 ;;		line 56 in file "mbmc.c"
 20312 ;; Parameters:    Size  Location     Type
 20313 ;;		None
 20314 ;; Auto vars:     Size  Location     Type
 20315 ;;		None
 20316 ;; Return value:  Size  Location     Type
 20317 ;;                  1  [STACK] void 
 20318 ;; Registers used:
 20319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20320 ;; Tracked objects:
 20321 ;;		On entry : 0/1
 20322 ;;		On exit  : 3F/1
 20323 ;;		Unchanged: 0/0
 20324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20329 ;;Total ram usage:        0 bytes
 20330 ;; Hardware stack levels used:    1
 20331 ;; Hardware stack levels required when called:   10
 20332 ;; This function calls:
 20333 ;;		___fladd
 20334 ;;		___flmul
 20335 ;;		___flsub
 20336 ;;		_lp_filter
 20337 ;;		_start_bsoc
 20338 ;;		_stop_bsoc
 20339 ;; This function is called by:
 20340 ;;		_main
 20341 ;; This function uses a reentrant model
 20342 ;;
 20343                           
 20344                           	psect	text88
 20345  0153C0                     __ptext88:
 20346                           	opt callstack 0
 20347  0153C0                     _calc_model_data:
 20348                           	opt callstack 20
 20349                           
 20350                           ;mbmc.c: 58:  stop_bsoc();
 20351                           
 20352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20353                           ;incstack = 0
 20354  0153C0  EC5A  F0CB         	call	_stop_bsoc	;wreg free
 20355                           
 20356                           ; BSR set to: 57
 20357                           ;mbmc.c: 60:  if (!V.calib) {
 20358  0153C4  0102               	movlb	2	; () banked
 20359  0153C6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20360  0153C8  A4D8               	btfss	status,2,c
 20361  0153CA  D161               	goto	l9502
 20362                           
 20363                           ; BSR set to: 2
 20364                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20365  0153CC  C100  F144         	movff	_C,_C+68	;volatile
 20366  0153D0  C101  F145         	movff	_C+1,_C+69	;volatile
 20367  0153D4  C102  F146         	movff	_C+2,_C+70	;volatile
 20368  0153D8  C103  F147         	movff	_C+3,_C+71	;volatile
 20369                           
 20370                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20371  0153DC  C104  F148         	movff	_C+4,_C+72	;volatile
 20372  0153E0  C105  F149         	movff	_C+5,_C+73	;volatile
 20373  0153E4  C106  F14A         	movff	_C+6,_C+74	;volatile
 20374  0153E8  C107  F14B         	movff	_C+7,_C+75	;volatile
 20375                           
 20376                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20377  0153EC  C110  F154         	movff	_C+16,_C+84	;volatile
 20378  0153F0  C111  F155         	movff	_C+17,_C+85	;volatile
 20379  0153F4  C112  F156         	movff	_C+18,_C+86	;volatile
 20380  0153F8  C113  F157         	movff	_C+19,_C+87	;volatile
 20381                           
 20382                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20383  0153FC  C114  F150         	movff	_C+20,_C+80	;volatile
 20384  015400  C115  F151         	movff	_C+21,_C+81	;volatile
 20385  015404  C116  F152         	movff	_C+22,_C+82	;volatile
 20386  015408  C117  F153         	movff	_C+23,_C+83	;volatile
 20387                           
 20388                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20389  01540C  C130  F164         	movff	_C+48,_C+100	;volatile
 20390  015410  C131  F165         	movff	_C+49,_C+101	;volatile
 20391  015414  C132  F166         	movff	_C+50,_C+102	;volatile
 20392  015418  C133  F167         	movff	_C+51,_C+103	;volatile
 20393                           
 20394                           ; BSR set to: 2
 20395                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20396  01541C  0E01               	movlw	1
 20397  01541E  6EE6               	movwf	postinc1,c
 20398  015420  0E10               	movlw	16
 20399  015422  6EE6               	movwf	postinc1,c
 20400  015424  0060  F403  FFE6   	movff	_C,postinc1
 20401  01542A  0060  F407  FFE6   	movff	_C+1,postinc1
 20402  015430  0060  F40B  FFE6   	movff	_C+2,postinc1
 20403  015436  0060  F40F  FFE6   	movff	_C+3,postinc1
 20404  01543C  0060  F413  FFE6   	movff	_C+4,postinc1
 20405  015442  0060  F417  FFE6   	movff	_C+5,postinc1
 20406  015448  0060  F41B  FFE6   	movff	_C+6,postinc1
 20407  01544E  0060  F41F  FFE6   	movff	_C+7,postinc1
 20408  015454  EC3E  F0C5         	call	___flsub	;wreg free
 20409  015458  0060  F097  FFE6   	movff	btemp,postinc1
 20410  01545E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20411  015464  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20412  01546A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20413  015470  EC35  F0B3         	call	_lp_filter	;wreg free
 20414  015474  0060  F094  F140   	movff	btemp,_C+64	;volatile
 20415  01547A  0060  F098  F141   	movff	btemp+1,_C+65	;volatile
 20416  015480  0060  F09C  F142   	movff	btemp+2,_C+66	;volatile
 20417  015486  0060  F0A0  F143   	movff	btemp+3,_C+67	;volatile
 20418                           
 20419                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20420  01548C  0E01               	movlw	1
 20421  01548E  6EE6               	movwf	postinc1,c
 20422  015490  0E11               	movlw	17
 20423  015492  6EE6               	movwf	postinc1,c
 20424  015494  0060  F553  FFE6   	movff	_C+84,postinc1
 20425  01549A  0060  F557  FFE6   	movff	_C+85,postinc1
 20426  0154A0  0060  F55B  FFE6   	movff	_C+86,postinc1
 20427  0154A6  0060  F55F  FFE6   	movff	_C+87,postinc1
 20428  0154AC  0060  F503  FFE6   	movff	_C+64,postinc1
 20429  0154B2  0060  F507  FFE6   	movff	_C+65,postinc1
 20430  0154B8  0060  F50B  FFE6   	movff	_C+66,postinc1
 20431  0154BE  0060  F50F  FFE6   	movff	_C+67,postinc1
 20432  0154C4  EC14  F093         	call	___flmul	;wreg free
 20433  0154C8  0060  F097  FFE6   	movff	btemp,postinc1
 20434  0154CE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20435  0154D4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20436  0154DA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20437  0154E0  EC35  F0B3         	call	_lp_filter	;wreg free
 20438  0154E4  0060  F094  F168   	movff	btemp,_C+104	;volatile
 20439  0154EA  0060  F098  F169   	movff	btemp+1,_C+105	;volatile
 20440  0154F0  0060  F09C  F16A   	movff	btemp+2,_C+106	;volatile
 20441  0154F6  0060  F0A0  F16B   	movff	btemp+3,_C+107	;volatile
 20442                           
 20443                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20444  0154FC  0E01               	movlw	1
 20445  0154FE  6EE6               	movwf	postinc1,c
 20446  015500  0E12               	movlw	18
 20447  015502  6EE6               	movwf	postinc1,c
 20448  015504  0060  F543  FFE6   	movff	_C+80,postinc1
 20449  01550A  0060  F547  FFE6   	movff	_C+81,postinc1
 20450  015510  0060  F54B  FFE6   	movff	_C+82,postinc1
 20451  015516  0060  F54F  FFE6   	movff	_C+83,postinc1
 20452  01551C  0060  F523  FFE6   	movff	_C+72,postinc1
 20453  015522  0060  F527  FFE6   	movff	_C+73,postinc1
 20454  015528  0060  F52B  FFE6   	movff	_C+74,postinc1
 20455  01552E  0060  F52F  FFE6   	movff	_C+75,postinc1
 20456  015534  EC14  F093         	call	___flmul	;wreg free
 20457  015538  0060  F097  FFE6   	movff	btemp,postinc1
 20458  01553E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20459  015544  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20460  01554A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20461  015550  EC35  F0B3         	call	_lp_filter	;wreg free
 20462  015554  0060  F094  F170   	movff	btemp,_C+112	;volatile
 20463  01555A  0060  F098  F171   	movff	btemp+1,_C+113	;volatile
 20464  015560  0060  F09C  F172   	movff	btemp+2,_C+114	;volatile
 20465  015566  0060  F0A0  F173   	movff	btemp+3,_C+115	;volatile
 20466                           
 20467                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20468  01556C  0E01               	movlw	1
 20469  01556E  6EE6               	movwf	postinc1,c
 20470  015570  0E13               	movlw	19
 20471  015572  6EE6               	movwf	postinc1,c
 20472  015574  0E00               	movlw	0
 20473  015576  6EE6               	movwf	postinc1,c
 20474  015578  0E00               	movlw	0
 20475  01557A  6EE6               	movwf	postinc1,c
 20476  01557C  0E60               	movlw	96
 20477  01557E  6EE6               	movwf	postinc1,c
 20478  015580  0EC1               	movlw	193
 20479  015582  6EE6               	movwf	postinc1,c
 20480  015584  0060  F593  FFE6   	movff	_C+100,postinc1
 20481  01558A  0060  F597  FFE6   	movff	_C+101,postinc1
 20482  015590  0060  F59B  FFE6   	movff	_C+102,postinc1
 20483  015596  0060  F59F  FFE6   	movff	_C+103,postinc1
 20484  01559C  0060  F503  FFE6   	movff	_C+64,postinc1
 20485  0155A2  0060  F507  FFE6   	movff	_C+65,postinc1
 20486  0155A8  0060  F50B  FFE6   	movff	_C+66,postinc1
 20487  0155AE  0060  F50F  FFE6   	movff	_C+67,postinc1
 20488  0155B4  EC14  F093         	call	___flmul	;wreg free
 20489  0155B8  0060  F097  FFE6   	movff	btemp,postinc1
 20490  0155BE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20491  0155C4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20492  0155CA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20493  0155D0  EC29  F097         	call	___fladd	;wreg free
 20494  0155D4  0060  F097  FFE6   	movff	btemp,postinc1
 20495  0155DA  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20496  0155E0  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20497  0155E6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20498  0155EC  EC35  F0B3         	call	_lp_filter	;wreg free
 20499  0155F0  0060  F094  F16C   	movff	btemp,_C+108	;volatile
 20500  0155F6  0060  F098  F16D   	movff	btemp+1,_C+109	;volatile
 20501  0155FC  0060  F09C  F16E   	movff	btemp+2,_C+110	;volatile
 20502  015602  0060  F0A0  F16F   	movff	btemp+3,_C+111	;volatile
 20503                           
 20504                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20505  015608  0E01               	movlw	1
 20506  01560A  6EE6               	movwf	postinc1,c
 20507  01560C  0E14               	movlw	20
 20508  01560E  6EE6               	movwf	postinc1,c
 20509  015610  0060  F553  FFE6   	movff	_C+84,postinc1
 20510  015616  0060  F557  FFE6   	movff	_C+85,postinc1
 20511  01561C  0060  F55B  FFE6   	movff	_C+86,postinc1
 20512  015622  0060  F55F  FFE6   	movff	_C+87,postinc1
 20513  015628  0060  F513  FFE6   	movff	_C+68,postinc1
 20514  01562E  0060  F517  FFE6   	movff	_C+69,postinc1
 20515  015634  0060  F51B  FFE6   	movff	_C+70,postinc1
 20516  01563A  0060  F51F  FFE6   	movff	_C+71,postinc1
 20517  015640  EC14  F093         	call	___flmul	;wreg free
 20518  015644  0060  F097  FFE6   	movff	btemp,postinc1
 20519  01564A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20520  015650  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20521  015656  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20522  01565C  EC35  F0B3         	call	_lp_filter	;wreg free
 20523  015660  0060  F094  F174   	movff	btemp,_C+116	;volatile
 20524  015666  0060  F098  F175   	movff	btemp+1,_C+117	;volatile
 20525  01566C  0060  F09C  F176   	movff	btemp+2,_C+118	;volatile
 20526  015672  0060  F0A0  F177   	movff	btemp+3,_C+119	;volatile
 20527                           
 20528                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20529  015678  0101               	movlb	1	; () banked
 20530  01567A  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20531  01567C  D008               	goto	l9502
 20532                           
 20533                           ; BSR set to: 1
 20534                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20535  01567E  0E17               	movlw	23
 20536  015680  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20537  015682  0EB7               	movlw	183
 20538  015684  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20539  015686  0ED1               	movlw	209
 20540  015688  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20541  01568A  0E38               	movlw	56
 20542  01568C  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20543  01568E                     l9502:
 20544                           
 20545                           ;mbmc.c: 77:  start_bsoc();
 20546  01568E  ECE7  F0C9         	call	_start_bsoc	;wreg free
 20547                           
 20548                           ; BSR set to: 57
 20549                           ;mbmc.c: 78:  C.update = 1;
 20550  015692  0E01               	movlw	1
 20551  015694  0101               	movlb	1	; () banked
 20552  015696  6FA4               	movwf	(_C+164)& (0+255),b	;volatile
 20553                           
 20554                           ; BSR set to: 1
 20555                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20556  015698  0012               	return		;funcret
 20557  01569A                     __end_of_calc_model_data:
 20558                           	opt callstack 0
 20559                           
 20560 ;; *************** function _stop_bsoc *****************
 20561 ;; Defined at:
 20562 ;;		line 58 in file "bsoc.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;		None
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;		None
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  1  [STACK] void 
 20569 ;; Registers used:
 20570 ;;		None
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/1
 20573 ;;		On exit  : 3F/39
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20580 ;;Total ram usage:        0 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:    7
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_calc_model_data
 20587 ;; This function uses a reentrant model
 20588 ;;
 20589                           
 20590                           	psect	text89
 20591  0196B4                     __ptext89:
 20592                           	opt callstack 0
 20593  0196B4                     _stop_bsoc:
 20594                           	opt callstack 22
 20595                           
 20596                           ;bsoc.c: 61:  PIE6bits.TMR3IE = 0;
 20597                           
 20598                           ; BSR set to: 1
 20599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20600                           ;incstack = 0
 20601  0196B4  0139               	movlb	57	; () banked
 20602  0196B6  9D96               	bcf	150,6,b	;volatile
 20603                           
 20604                           ; BSR set to: 57
 20605                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20606  0196B8  0012               	return		;funcret
 20607  0196BA                     __end_of_stop_bsoc:
 20608                           	opt callstack 0
 20609                           
 20610 ;; *************** function _start_bsoc *****************
 20611 ;; Defined at:
 20612 ;;		line 49 in file "bsoc.c"
 20613 ;; Parameters:    Size  Location     Type
 20614 ;;		None
 20615 ;; Auto vars:     Size  Location     Type
 20616 ;;		None
 20617 ;; Return value:  Size  Location     Type
 20618 ;;                  1  [STACK] void 
 20619 ;; Registers used:
 20620 ;;		wreg, status,2, status,0, btemp+11
 20621 ;; Tracked objects:
 20622 ;;		On entry : 3C/2
 20623 ;;		On exit  : 3F/39
 20624 ;;		Unchanged: 0/0
 20625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20630 ;;Total ram usage:        0 bytes
 20631 ;; Hardware stack levels used:    1
 20632 ;; Hardware stack levels required when called:    7
 20633 ;; This function calls:
 20634 ;;		Nothing
 20635 ;; This function is called by:
 20636 ;;		_calc_model_data
 20637 ;; This function uses a reentrant model
 20638 ;;
 20639                           
 20640                           	psect	text90
 20641  0193CE                     __ptext90:
 20642                           	opt callstack 0
 20643  0193CE                     _start_bsoc:
 20644                           	opt callstack 22
 20645                           
 20646                           ;bsoc.c: 52:  PIE6bits.TMR3IE = 1;
 20647                           
 20648                           ; BSR set to: 57
 20649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20650                           ;incstack = 0
 20651  0193CE  0139               	movlb	57	; () banked
 20652  0193D0  8D96               	bsf	150,6,b	;volatile
 20653                           
 20654                           ; BSR set to: 57
 20655  0193D2  A4BE               	btfss	190,2,c	;volatile
 20656  0193D4  D002               	goto	u8470
 20657  0193D6  0E01               	movlw	1
 20658  0193D8  D001               	goto	u8476
 20659  0193DA                     u8470:
 20660  0193DA  0E00               	movlw	0
 20661  0193DC                     u8476:
 20662  0193DC  0AFF               	xorlw	255
 20663  0193DE  6E30               	movwf	(btemp+11)^0,c
 20664  0193E0  4630               	rlncf	(btemp+11)^0,f,c
 20665  0193E2  4630               	rlncf	(btemp+11)^0,f,c
 20666  0193E4  50BE               	movf	190,w,c	;volatile
 20667  0193E6  1830               	xorwf	(btemp+11)^0,w,c
 20668  0193E8  0BFB               	andlw	-5
 20669  0193EA  1830               	xorwf	(btemp+11)^0,w,c
 20670  0193EC  6EBE               	movwf	190,c	;volatile
 20671                           
 20672                           ; BSR set to: 57
 20673                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20674  0193EE  0012               	return		;funcret
 20675  0193F0                     __end_of_start_bsoc:
 20676                           	opt callstack 0
 20677                           
 20678 ;; *************** function _lp_filter *****************
 20679 ;; Defined at:
 20680 ;;		line 18 in file "mbmc.c"
 20681 ;; Parameters:    Size  Location     Type
 20682 ;;  new             4  [STACK] const float 
 20683 ;;  bn              1  [STACK] const unsigned char 
 20684 ;;  slow            1  [STACK] const char 
 20685 ;; Auto vars:     Size  Location     Type
 20686 ;;  lp_speed        4  [STACK] float 
 20687 ;; Return value:  Size  Location     Type
 20688 ;;                  4  [STACK] float 
 20689 ;; Registers used:
 20690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20691 ;; Tracked objects:
 20692 ;;		On entry : 0/2
 20693 ;;		On exit  : 0/0
 20694 ;;		Unchanged: 0/0
 20695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20700 ;;Total ram usage:        0 bytes
 20701 ;; Hardware stack levels used:    1
 20702 ;; Hardware stack levels required when called:    9
 20703 ;; This function calls:
 20704 ;;		___fladd
 20705 ;;		___flmul
 20706 ;;		___flsub
 20707 ;; This function is called by:
 20708 ;;		_main
 20709 ;;		_convert_adc_data
 20710 ;;		_calc_model_data
 20711 ;; This function uses a reentrant model
 20712 ;;
 20713                           
 20714                           	psect	text91
 20715  01666A                     __ptext91:
 20716                           	opt callstack 0
 20717  01666A                     _lp_filter:
 20718                           	opt callstack 0
 20719                           
 20720                           ; BSR set to: 57
 20721                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20722  01666A  52E6               	movf	postinc1,f,c
 20723  01666C  52E6               	movf	postinc1,f,c
 20724  01666E  52E6               	movf	postinc1,f,c
 20725  016670  52E6               	movf	postinc1,f,c
 20726                           
 20727                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 20728                           ;stkvar	_bn @ sp[(-4)+-5]
 20729                           
 20730                           ;incstack = 0
 20731  016672  0EF7               	movlw	-9
 20732  016674  006F FF8C  F025    	movff	plusw1,btemp
 20733  01667A  0E14               	movlw	20
 20734  01667C  6425               	cpfsgt	btemp^0,c
 20735  01667E  D011               	goto	l9012
 20736  016680                     u8290:
 20737                           
 20738                           ;mbmc.c: 24:   return new;
 20739                           ;stkvar	_new @ sp[(-4)+-4]
 20740  016680  0EF8               	movlw	-8
 20741  016682  006F FF8C  F025    	movff	plusw1,btemp
 20742  016688  0EF9               	movlw	-7
 20743  01668A  006F FF8C  F026    	movff	plusw1,btemp+1
 20744  016690  0EFA               	movlw	-6
 20745  016692  006F FF8C  F027    	movff	plusw1,btemp+2
 20746  016698  0EFB               	movlw	-5
 20747  01669A  006F FF8C  F028    	movff	plusw1,btemp+3
 20748  0166A0  D0BF               	goto	l1808
 20749  0166A2                     l9012:
 20750                           
 20751                           ;mbmc.c: 26:  if (slow == (-1)) {
 20752                           ;stkvar	_slow @ sp[(-4)+-6]
 20753  0166A2  0EF6               	movlw	-10
 20754  0166A4  28E3               	incf	plusw1,w,c
 20755  0166A6  A4D8               	btfss	status,2,c
 20756  0166A8  D012               	goto	l9020
 20757                           
 20758                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 20759                           ;stkvar	_bn @ sp[(-4)+-5]
 20760  0166AA  0EF7               	movlw	-9
 20761  0166AC  50E3               	movf	plusw1,w,c
 20762  0166AE  0D04               	mullw	4
 20763  0166B0  0E00               	movlw	low lp_filter@smooth
 20764  0166B2  24F3               	addwf	243,w,c
 20765  0166B4  6ED9               	movwf	fsr2l,c
 20766  0166B6  0E03               	movlw	high lp_filter@smooth
 20767  0166B8  20F4               	addwfc	prodh,w,c
 20768  0166BA  6EDA               	movwf	fsr2h,c
 20769  0166BC  0E00               	movlw	0
 20770  0166BE  6EDE               	movwf	postinc2,c
 20771  0166C0  0E00               	movlw	0
 20772  0166C2  6EDE               	movwf	postinc2,c
 20773  0166C4  0E00               	movlw	0
 20774  0166C6  6EDE               	movwf	postinc2,c
 20775  0166C8  0E00               	movlw	0
 20776  0166CA  6EDD               	movwf	postdec2,c
 20777  0166CC  D7D9               	goto	u8290
 20778  0166CE                     l9020:
 20779                           
 20780                           ;mbmc.c: 31:  if (slow) {
 20781                           ;stkvar	_slow @ sp[(-4)+-6]
 20782  0166CE  0EF6               	movlw	-10
 20783  0166D0  50E3               	movf	plusw1,w,c
 20784  0166D2  B4D8               	btfsc	status,2,c
 20785  0166D4  D008               	goto	l9024
 20786                           
 20787                           ;mbmc.c: 32:   lp_speed = 0.033;
 20788  0166D6  0E02               	movlw	2
 20789  0166D8  6E2D               	movwf	(btemp+8)^0,c
 20790  0166DA  0E2B               	movlw	43
 20791  0166DC  6E2E               	movwf	(btemp+9)^0,c
 20792  0166DE  0E07               	movlw	7
 20793  0166E0  6E2F               	movwf	(btemp+10)^0,c
 20794  0166E2  0E3D               	movlw	61
 20795  0166E4  D007               	goto	L22
 20796  0166E6                     l9024:
 20797                           
 20798                           ;mbmc.c: 34:   lp_speed = 0.125;
 20799  0166E6  0E00               	movlw	0
 20800  0166E8  6E2D               	movwf	(btemp+8)^0,c
 20801  0166EA  0E00               	movlw	0
 20802  0166EC  6E2E               	movwf	(btemp+9)^0,c
 20803  0166EE  0E00               	movlw	0
 20804  0166F0  6E2F               	movwf	(btemp+10)^0,c
 20805  0166F2  0E3E               	movlw	62
 20806  0166F4                     L22:
 20807  0166F4  6E30               	movwf	(btemp+11)^0,c
 20808                           
 20809                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20810  0166F6  0EFC               	movlw	-4
 20811  0166F8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 20812  0166FE  0EFD               	movlw	-3
 20813  016700  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 20814  016706  0EFE               	movlw	-2
 20815  016708  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20816  01670E  0EFF               	movlw	-1
 20817  016710  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20818                           
 20819                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20820                           ;stkvar	_bn @ sp[(-4)+-5]
 20821  016716  0EF7               	movlw	-9
 20822  016718  50E3               	movf	plusw1,w,c
 20823  01671A  0D04               	mullw	4
 20824  01671C  0E00               	movlw	low lp_filter@smooth
 20825  01671E  24F3               	addwf	243,w,c
 20826  016720  6ED9               	movwf	fsr2l,c
 20827  016722  0E03               	movlw	high lp_filter@smooth
 20828  016724  20F4               	addwfc	prodh,w,c
 20829  016726  6EDA               	movwf	fsr2h,c
 20830  016728  006F FF7B FFE6     	movff	postinc2,postinc1
 20831  01672E  006F FF7B FFE6     	movff	postinc2,postinc1
 20832  016734  006F FF7B FFE6     	movff	postinc2,postinc1
 20833  01673A  006F FF7B FFE6     	movff	postinc2,postinc1
 20834                           
 20835                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20836  016740  0EF8               	movlw	-8
 20837  016742  006F FF8F FFE6     	movff	plusw1,postinc1
 20838  016748  006F FF8F FFE6     	movff	plusw1,postinc1
 20839  01674E  006F FF8F FFE6     	movff	plusw1,postinc1
 20840  016754  006F FF8F FFE6     	movff	plusw1,postinc1
 20841                           
 20842                           ;stkvar	_bn @ sp[(-12)+-5]
 20843  01675A  0EEF               	movlw	-17
 20844  01675C  50E3               	movf	plusw1,w,c
 20845  01675E  0D04               	mullw	4
 20846  016760  0E00               	movlw	low lp_filter@smooth
 20847  016762  24F3               	addwf	243,w,c
 20848  016764  6ED9               	movwf	fsr2l,c
 20849  016766  0E03               	movlw	high lp_filter@smooth
 20850  016768  20F4               	addwfc	prodh,w,c
 20851  01676A  6EDA               	movwf	fsr2h,c
 20852  01676C  006F FF7B FFE6     	movff	postinc2,postinc1
 20853  016772  006F FF7B FFE6     	movff	postinc2,postinc1
 20854  016778  006F FF7B FFE6     	movff	postinc2,postinc1
 20855  01677E  006F FF7B FFE6     	movff	postinc2,postinc1
 20856                           
 20857                           ;stkvar	_new @ sp[(-16)+-4]
 20858  016784  0EEC               	movlw	-20
 20859  016786  006F FF8F FFE6     	movff	plusw1,postinc1
 20860  01678C  006F FF8F FFE6     	movff	plusw1,postinc1
 20861  016792  006F FF8F FFE6     	movff	plusw1,postinc1
 20862  016798  006F FF8F FFE6     	movff	plusw1,postinc1
 20863  01679E  EC3E  F0C5         	call	___flsub	;wreg free
 20864  0167A2  0060  F097  FFE6   	movff	btemp,postinc1
 20865  0167A8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20866  0167AE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20867  0167B4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20868  0167BA  EC14  F093         	call	___flmul	;wreg free
 20869  0167BE  0060  F097  FFE6   	movff	btemp,postinc1
 20870  0167C4  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20871  0167CA  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20872  0167D0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20873  0167D6  EC29  F097         	call	___fladd	;wreg free
 20874                           
 20875                           ;stkvar	_bn @ sp[(-4)+-5]
 20876  0167DA  0EF7               	movlw	-9
 20877  0167DC  50E3               	movf	plusw1,w,c
 20878  0167DE  0D04               	mullw	4
 20879  0167E0  0E00               	movlw	low lp_filter@smooth
 20880  0167E2  24F3               	addwf	243,w,c
 20881  0167E4  6ED9               	movwf	fsr2l,c
 20882  0167E6  0E03               	movlw	high lp_filter@smooth
 20883  0167E8  20F4               	addwfc	prodh,w,c
 20884  0167EA  6EDA               	movwf	fsr2h,c
 20885  0167EC  0060  F097  FFDE   	movff	btemp,postinc2
 20886  0167F2  0060  F09B  FFDE   	movff	btemp+1,postinc2
 20887  0167F8  0060  F09F  FFDE   	movff	btemp+2,postinc2
 20888  0167FE  0060  F0A3  FFDD   	movff	btemp+3,postdec2
 20889  016804  52DD               	movf	postdec2,f,c
 20890  016806  52DD               	movf	postdec2,f,c
 20891  016808  006F FF78  F025    	movff	postinc2,btemp
 20892  01680E  006F FF78  F026    	movff	postinc2,btemp+1
 20893  016814  006F FF78  F027    	movff	postinc2,btemp+2
 20894  01681A  006F FF78  F028    	movff	postinc2,btemp+3
 20895  016820                     l1808:
 20896                           
 20897                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20898  016820  0EF6               	movlw	246
 20899  016822  26E1               	addwf	fsr1l,f,c
 20900  016824  0EFF               	movlw	255
 20901  016826  22E2               	addwfc	fsr1h,f,c
 20902  016828  0012               	return		;funcret
 20903  01682A                     __end_of_lp_filter:
 20904                           	opt callstack 0
 20905                           
 20906 ;; *************** function ___flsub *****************
 20907 ;; Defined at:
 20908 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20909 ;; Parameters:    Size  Location     Type
 20910 ;;  b               4  [STACK] float 
 20911 ;;  a               4  [STACK] float 
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;		None
 20914 ;; Return value:  Size  Location     Type
 20915 ;;                  4  [STACK] float 
 20916 ;; Registers used:
 20917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/2
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20927 ;;Total ram usage:        0 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; Hardware stack levels required when called:    8
 20930 ;; This function calls:
 20931 ;;		___fladd
 20932 ;; This function is called by:
 20933 ;;		_conv_raw_result
 20934 ;;		_lp_filter
 20935 ;;		_calc_model_data
 20936 ;;		_efgtoa
 20937 ;; This function uses a reentrant model
 20938 ;;
 20939                           
 20940                           	psect	text92
 20941  018A7C                     __ptext92:
 20942                           	opt callstack 0
 20943  018A7C                     ___flsub:
 20944                           	opt callstack 15
 20945                           
 20946                           ;stkvar	_a @ sp[(0)+-8]
 20947                           
 20948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20949                           ;incstack = 0
 20950  018A7C  0EFB               	movlw	-5
 20951  018A7E  7EE3               	btg	plusw1,7,c
 20952                           
 20953                           ;stkvar	_a @ sp[(0)+-8]
 20954  018A80  0EF8               	movlw	-8
 20955  018A82  006F FF8F FFE6     	movff	plusw1,postinc1
 20956  018A88  006F FF8F FFE6     	movff	plusw1,postinc1
 20957  018A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 20958  018A94  006F FF8F FFE6     	movff	plusw1,postinc1
 20959                           
 20960                           ;stkvar	_b @ sp[(-4)+-4]
 20961  018A9A  0EF8               	movlw	-8
 20962  018A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 20963  018AA2  006F FF8F FFE6     	movff	plusw1,postinc1
 20964  018AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 20965  018AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 20966  018AB4  EC29  F097         	call	___fladd	;wreg free
 20967                           
 20968                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20969  018AB8  0EF8               	movlw	248
 20970  018ABA  26E1               	addwf	fsr1l,f,c
 20971  018ABC  0EFF               	movlw	255
 20972  018ABE  22E2               	addwfc	fsr1h,f,c
 20973  018AC0  0012               	return		;funcret
 20974  018AC2                     __end_of___flsub:
 20975                           	opt callstack 0
 20976                           
 20977 ;; *************** function ___fladd *****************
 20978 ;; Defined at:
 20979 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20980 ;; Parameters:    Size  Location     Type
 20981 ;;  b               4  [STACK] float 
 20982 ;;  a               4  [STACK] float 
 20983 ;; Auto vars:     Size  Location     Type
 20984 ;;  grs             1  [STACK] unsigned char 
 20985 ;;  bexp            1  [STACK] unsigned char 
 20986 ;;  aexp            1  [STACK] unsigned char 
 20987 ;;  signs           1  [STACK] unsigned char 
 20988 ;; Return value:  Size  Location     Type
 20989 ;;                  4  [STACK] unsigned char 
 20990 ;; Registers used:
 20991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20992 ;; Tracked objects:
 20993 ;;		On entry : 0/0
 20994 ;;		On exit  : 0/0
 20995 ;;		Unchanged: 0/0
 20996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21001 ;;Total ram usage:        0 bytes
 21002 ;; Hardware stack levels used:    1
 21003 ;; Hardware stack levels required when called:    7
 21004 ;; This function calls:
 21005 ;;		Nothing
 21006 ;; This function is called by:
 21007 ;;		_lp_filter
 21008 ;;		_calc_model_data
 21009 ;;		_calc_bsoc
 21010 ;;		_efgtoa
 21011 ;;		___flsub
 21012 ;; This function uses a reentrant model
 21013 ;;
 21014                           
 21015                           	psect	text93
 21016  012E52                     __ptext93:
 21017                           	opt callstack 0
 21018  012E52                     ___fladd:
 21019                           	opt callstack 0
 21020                           
 21021                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21022  012E52  52E6               	movf	postinc1,f,c
 21023  012E54  52E6               	movf	postinc1,f,c
 21024  012E56  52E6               	movf	postinc1,f,c
 21025  012E58  52E6               	movf	postinc1,f,c
 21026                           
 21027                           ;stkvar	_b @ sp[(-4)+-4]
 21028                           
 21029                           ;incstack = 0
 21030  012E5A  0EFB               	movlw	251
 21031  012E5C  24E1               	addwf	fsr1l,w,c
 21032  012E5E  6ED9               	movwf	fsr2l,c
 21033  012E60  0EFF               	movlw	255
 21034  012E62  20E2               	addwfc	fsr1h,w,c
 21035  012E64  6EDA               	movwf	fsr2h,c
 21036  012E66  50DF               	movf	indf2,w,c
 21037  012E68  6E30               	movwf	(btemp+11)^0,c
 21038  012E6A  0E80               	movlw	128
 21039  012E6C  1630               	andwf	(btemp+11)^0,f,c
 21040                           
 21041                           ;stkvar	_signs @ sp[(-4)+3]
 21042  012E6E  0EFF               	movlw	-1
 21043  012E70  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21044                           
 21045                           ;stkvar	_b @ sp[(-4)+-4]
 21046  012E76  0EFB               	movlw	251
 21047  012E78  24E1               	addwf	fsr1l,w,c
 21048  012E7A  6ED9               	movwf	fsr2l,c
 21049  012E7C  0EFF               	movlw	255
 21050  012E7E  20E2               	addwfc	fsr1h,w,c
 21051  012E80  6EDA               	movwf	fsr2h,c
 21052  012E82  50DF               	movf	indf2,w,c
 21053  012E84  6E30               	movwf	(btemp+11)^0,c
 21054  012E86  90D8               	bcf	status,0,c
 21055  012E88  3430               	rlcf	(btemp+11)^0,w,c
 21056  012E8A  6E2F               	movwf	(btemp+10)^0,c
 21057                           
 21058                           ;stkvar	_bexp @ sp[(-4)+1]
 21059  012E8C  0EFD               	movlw	-3
 21060  012E8E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21061                           
 21062                           ;stkvar	_b @ sp[(-4)+-4]
 21063  012E94  0EFA               	movlw	250
 21064  012E96  24E1               	addwf	fsr1l,w,c
 21065  012E98  6ED9               	movwf	fsr2l,c
 21066  012E9A  0EFF               	movlw	255
 21067  012E9C  20E2               	addwfc	fsr1h,w,c
 21068  012E9E  6EDA               	movwf	fsr2h,c
 21069  012EA0  AEDF               	btfss	indf2,7,c
 21070  012EA2  D002               	goto	l7926
 21071                           
 21072                           ;stkvar	_bexp @ sp[(-4)+1]
 21073  012EA4  0EFD               	movlw	-3
 21074  012EA6  80E3               	bsf	plusw1,0,c
 21075  012EA8                     l7926:
 21076                           
 21077                           ;stkvar	_bexp @ sp[(-4)+1]
 21078  012EA8  0EFD               	movlw	-3
 21079  012EAA  50E3               	movf	plusw1,w,c
 21080  012EAC  B4D8               	btfsc	status,2,c
 21081  012EAE  D027               	goto	l7936
 21082                           
 21083                           ;stkvar	_bexp @ sp[(-4)+1]
 21084  012EB0  0EFD               	movlw	-3
 21085  012EB2  28E3               	incf	plusw1,w,c
 21086  012EB4  A4D8               	btfss	status,2,c
 21087  012EB6  D018               	goto	l7932
 21088  012EB8  0E00               	movlw	0
 21089  012EBA  6E2D               	movwf	(btemp+8)^0,c
 21090  012EBC  0E00               	movlw	0
 21091  012EBE  6E2E               	movwf	(btemp+9)^0,c
 21092  012EC0  0E00               	movlw	0
 21093  012EC2  6E2F               	movwf	(btemp+10)^0,c
 21094  012EC4  0E00               	movlw	0
 21095  012EC6  6E30               	movwf	(btemp+11)^0,c
 21096                           
 21097                           ;stkvar	_b @ sp[(-4)+-4]
 21098  012EC8  0EF8               	movlw	-8
 21099  012ECA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21100  012ED0  0EF9               	movlw	-7
 21101  012ED2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21102  012ED8  0EFA               	movlw	-6
 21103  012EDA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21104  012EE0  0EFB               	movlw	-5
 21105  012EE2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21106  012EE8                     l7932:
 21107                           
 21108                           ;stkvar	_b @ sp[(-4)+-4]
 21109  012EE8  0EFA               	movlw	-6
 21110  012EEA  8EE3               	bsf	plusw1,7,c
 21111                           
 21112                           ;stkvar	_b @ sp[(-4)+-4]
 21113  012EEC  0EFB               	movlw	251
 21114  012EEE  24E1               	addwf	fsr1l,w,c
 21115  012EF0  6ED9               	movwf	fsr2l,c
 21116  012EF2  0EFF               	movlw	255
 21117  012EF4  20E2               	addwfc	fsr1h,w,c
 21118  012EF6  6EDA               	movwf	fsr2h,c
 21119  012EF8  0E00               	movlw	0
 21120  012EFA  6EDF               	movwf	indf2,c
 21121  012EFC  D018               	goto	l7938
 21122  012EFE                     l7936:
 21123  012EFE  0E00               	movlw	0
 21124  012F00  6E2D               	movwf	(btemp+8)^0,c
 21125  012F02  0E00               	movlw	0
 21126  012F04  6E2E               	movwf	(btemp+9)^0,c
 21127  012F06  0E00               	movlw	0
 21128  012F08  6E2F               	movwf	(btemp+10)^0,c
 21129  012F0A  0E00               	movlw	0
 21130  012F0C  6E30               	movwf	(btemp+11)^0,c
 21131                           
 21132                           ;stkvar	_b @ sp[(-4)+-4]
 21133  012F0E  0EF8               	movlw	-8
 21134  012F10  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21135  012F16  0EF9               	movlw	-7
 21136  012F18  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21137  012F1E  0EFA               	movlw	-6
 21138  012F20  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21139  012F26  0EFB               	movlw	-5
 21140  012F28  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21141  012F2E                     l7938:
 21142                           
 21143                           ;stkvar	_a @ sp[(-4)+-8]
 21144  012F2E  0EF7               	movlw	247
 21145  012F30  24E1               	addwf	fsr1l,w,c
 21146  012F32  6ED9               	movwf	fsr2l,c
 21147  012F34  0EFF               	movlw	255
 21148  012F36  20E2               	addwfc	fsr1h,w,c
 21149  012F38  6EDA               	movwf	fsr2h,c
 21150  012F3A  50DF               	movf	indf2,w,c
 21151  012F3C  6E30               	movwf	(btemp+11)^0,c
 21152  012F3E  0E80               	movlw	128
 21153  012F40  1630               	andwf	(btemp+11)^0,f,c
 21154                           
 21155                           ;stkvar	_aexp @ sp[(-4)+2]
 21156  012F42  0EFE               	movlw	-2
 21157  012F44  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21158                           
 21159                           ;stkvar	_signs @ sp[(-4)+3]
 21160                           ;stkvar	_aexp @ sp[(-4)+2]
 21161  012F4A  50E1               	movf	fsr1l,w,c
 21162  012F4C  0FFE               	addlw	-2
 21163  012F4E  6ED9               	movwf	fsr2l,c
 21164  012F50  50E2               	movf	fsr1h,w,c
 21165  012F52  6EDA               	movwf	fsr2h,c
 21166  012F54  0EFF               	movlw	255
 21167  012F56  22DA               	addwfc	fsr2h,f,c
 21168  012F58  0EFF               	movlw	-1
 21169  012F5A  50E3               	movf	plusw1,w,c
 21170  012F5C  18DE               	xorwf	postinc2,w,c
 21171  012F5E  B4D8               	btfsc	status,2,c
 21172  012F60  D002               	goto	l7944
 21173                           
 21174                           ;stkvar	_signs @ sp[(-4)+3]
 21175  012F62  0EFF               	movlw	-1
 21176  012F64  8CE3               	bsf	plusw1,6,c
 21177  012F66                     l7944:
 21178                           
 21179                           ;stkvar	_a @ sp[(-4)+-8]
 21180  012F66  0EF7               	movlw	247
 21181  012F68  24E1               	addwf	fsr1l,w,c
 21182  012F6A  6ED9               	movwf	fsr2l,c
 21183  012F6C  0EFF               	movlw	255
 21184  012F6E  20E2               	addwfc	fsr1h,w,c
 21185  012F70  6EDA               	movwf	fsr2h,c
 21186  012F72  50DF               	movf	indf2,w,c
 21187  012F74  6E30               	movwf	(btemp+11)^0,c
 21188  012F76  90D8               	bcf	status,0,c
 21189  012F78  3430               	rlcf	(btemp+11)^0,w,c
 21190  012F7A  6E2F               	movwf	(btemp+10)^0,c
 21191                           
 21192                           ;stkvar	_aexp @ sp[(-4)+2]
 21193  012F7C  0EFE               	movlw	-2
 21194  012F7E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21195                           
 21196                           ;stkvar	_a @ sp[(-4)+-8]
 21197  012F84  0EF6               	movlw	246
 21198  012F86  24E1               	addwf	fsr1l,w,c
 21199  012F88  6ED9               	movwf	fsr2l,c
 21200  012F8A  0EFF               	movlw	255
 21201  012F8C  20E2               	addwfc	fsr1h,w,c
 21202  012F8E  6EDA               	movwf	fsr2h,c
 21203  012F90  AEDF               	btfss	indf2,7,c
 21204  012F92  D002               	goto	l7950
 21205                           
 21206                           ;stkvar	_aexp @ sp[(-4)+2]
 21207  012F94  0EFE               	movlw	-2
 21208  012F96  80E3               	bsf	plusw1,0,c
 21209  012F98                     l7950:
 21210                           
 21211                           ;stkvar	_aexp @ sp[(-4)+2]
 21212  012F98  0EFE               	movlw	-2
 21213  012F9A  50E3               	movf	plusw1,w,c
 21214  012F9C  B4D8               	btfsc	status,2,c
 21215  012F9E  D027               	goto	l7960
 21216                           
 21217                           ;stkvar	_aexp @ sp[(-4)+2]
 21218  012FA0  0EFE               	movlw	-2
 21219  012FA2  28E3               	incf	plusw1,w,c
 21220  012FA4  A4D8               	btfss	status,2,c
 21221  012FA6  D018               	goto	l7956
 21222  012FA8  0E00               	movlw	0
 21223  012FAA  6E2D               	movwf	(btemp+8)^0,c
 21224  012FAC  0E00               	movlw	0
 21225  012FAE  6E2E               	movwf	(btemp+9)^0,c
 21226  012FB0  0E00               	movlw	0
 21227  012FB2  6E2F               	movwf	(btemp+10)^0,c
 21228  012FB4  0E00               	movlw	0
 21229  012FB6  6E30               	movwf	(btemp+11)^0,c
 21230                           
 21231                           ;stkvar	_a @ sp[(-4)+-8]
 21232  012FB8  0EF4               	movlw	-12
 21233  012FBA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21234  012FC0  0EF5               	movlw	-11
 21235  012FC2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21236  012FC8  0EF6               	movlw	-10
 21237  012FCA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21238  012FD0  0EF7               	movlw	-9
 21239  012FD2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21240  012FD8                     l7956:
 21241                           
 21242                           ;stkvar	_a @ sp[(-4)+-8]
 21243  012FD8  0EF6               	movlw	-10
 21244  012FDA  8EE3               	bsf	plusw1,7,c
 21245                           
 21246                           ;stkvar	_a @ sp[(-4)+-8]
 21247  012FDC  0EF7               	movlw	247
 21248  012FDE  24E1               	addwf	fsr1l,w,c
 21249  012FE0  6ED9               	movwf	fsr2l,c
 21250  012FE2  0EFF               	movlw	255
 21251  012FE4  20E2               	addwfc	fsr1h,w,c
 21252  012FE6  6EDA               	movwf	fsr2h,c
 21253  012FE8  0E00               	movlw	0
 21254  012FEA  6EDF               	movwf	indf2,c
 21255  012FEC  D018               	goto	l7962
 21256  012FEE                     l7960:
 21257  012FEE  0E00               	movlw	0
 21258  012FF0  6E2D               	movwf	(btemp+8)^0,c
 21259  012FF2  0E00               	movlw	0
 21260  012FF4  6E2E               	movwf	(btemp+9)^0,c
 21261  012FF6  0E00               	movlw	0
 21262  012FF8  6E2F               	movwf	(btemp+10)^0,c
 21263  012FFA  0E00               	movlw	0
 21264  012FFC  6E30               	movwf	(btemp+11)^0,c
 21265                           
 21266                           ;stkvar	_a @ sp[(-4)+-8]
 21267  012FFE  0EF4               	movlw	-12
 21268  013000  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21269  013006  0EF5               	movlw	-11
 21270  013008  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21271  01300E  0EF6               	movlw	-10
 21272  013010  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21273  013016  0EF7               	movlw	-9
 21274  013018  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21275  01301E                     l7962:
 21276                           
 21277                           ;stkvar	_bexp @ sp[(-4)+1]
 21278                           ;stkvar	_aexp @ sp[(-4)+2]
 21279  01301E  50E1               	movf	fsr1l,w,c
 21280  013020  0FFE               	addlw	-2
 21281  013022  6ED9               	movwf	fsr2l,c
 21282  013024  50E2               	movf	fsr1h,w,c
 21283  013026  6EDA               	movwf	fsr2h,c
 21284  013028  0EFF               	movlw	255
 21285  01302A  22DA               	addwfc	fsr2h,f,c
 21286  01302C  0EFD               	movlw	-3
 21287  01302E  50E3               	movf	plusw1,w,c
 21288  013030  5CDE               	subwf	postinc2,w,c
 21289  013032  B0D8               	btfsc	status,0,c
 21290  013034  D0A4               	goto	l7998
 21291                           
 21292                           ;stkvar	_signs @ sp[(-4)+3]
 21293  013036  0EFF               	movlw	-1
 21294  013038  ACE3               	btfss	plusw1,6,c
 21295  01303A  D002               	goto	l7968
 21296                           
 21297                           ;stkvar	_signs @ sp[(-4)+3]
 21298  01303C  0EFF               	movlw	-1
 21299  01303E  7EE3               	btg	plusw1,7,c
 21300  013040                     l7968:
 21301                           
 21302                           ;stkvar	_bexp @ sp[(-4)+1]
 21303                           ;stkvar	_grs @ sp[(-4)+0]
 21304  013040  0EFD               	movlw	-3
 21305  013042  006F FF8C  F025    	movff	plusw1,btemp
 21306  013048  0EFC               	movlw	-4
 21307  01304A  0060  F097  FFE3   	movff	btemp,plusw1
 21308                           
 21309                           ;stkvar	_aexp @ sp[(-4)+2]
 21310                           ;stkvar	_bexp @ sp[(-4)+1]
 21311  013050  0EFE               	movlw	-2
 21312  013052  006F FF8C  F025    	movff	plusw1,btemp
 21313  013058  0EFD               	movlw	-3
 21314  01305A  0060  F097  FFE3   	movff	btemp,plusw1
 21315                           
 21316                           ;stkvar	_grs @ sp[(-4)+0]
 21317                           ;stkvar	_aexp @ sp[(-4)+2]
 21318  013060  0EFC               	movlw	-4
 21319  013062  006F FF8C  F025    	movff	plusw1,btemp
 21320  013068  0EFE               	movlw	-2
 21321  01306A  0060  F097  FFE3   	movff	btemp,plusw1
 21322                           
 21323                           ;stkvar	_b @ sp[(-4)+-4]
 21324                           ;stkvar	_grs @ sp[(-4)+0]
 21325  013070  0EF8               	movlw	-8
 21326  013072  006F FF8C  F025    	movff	plusw1,btemp
 21327  013078  0EFC               	movlw	-4
 21328  01307A  0060  F097  FFE3   	movff	btemp,plusw1
 21329                           
 21330                           ;stkvar	_a @ sp[(-4)+-8]
 21331                           ;stkvar	_b @ sp[(-4)+-4]
 21332  013080  0EF4               	movlw	-12
 21333  013082  006F FF8C  F025    	movff	plusw1,btemp
 21334  013088  0EF8               	movlw	-8
 21335  01308A  0060  F097  FFE3   	movff	btemp,plusw1
 21336                           
 21337                           ;stkvar	_grs @ sp[(-4)+0]
 21338                           ;stkvar	_a @ sp[(-4)+-8]
 21339  013090  0EFC               	movlw	-4
 21340  013092  006F FF8C  F025    	movff	plusw1,btemp
 21341  013098  0EF4               	movlw	-12
 21342  01309A  0060  F097  FFE3   	movff	btemp,plusw1
 21343                           
 21344                           ;stkvar	_b @ sp[(-4)+-4]
 21345  0130A0  0EF9               	movlw	249
 21346  0130A2  24E1               	addwf	fsr1l,w,c
 21347  0130A4  6ED9               	movwf	fsr2l,c
 21348  0130A6  0EFF               	movlw	255
 21349  0130A8  20E2               	addwfc	fsr1h,w,c
 21350  0130AA  6EDA               	movwf	fsr2h,c
 21351  0130AC  50DF               	movf	indf2,w,c
 21352  0130AE  6E30               	movwf	(btemp+11)^0,c
 21353                           
 21354                           ;stkvar	_grs @ sp[(-4)+0]
 21355  0130B0  0EFC               	movlw	-4
 21356  0130B2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21357                           
 21358                           ;stkvar	_a @ sp[(-4)+-8]
 21359  0130B8  0EF5               	movlw	245
 21360  0130BA  24E1               	addwf	fsr1l,w,c
 21361  0130BC  6ED9               	movwf	fsr2l,c
 21362  0130BE  0EFF               	movlw	255
 21363  0130C0  20E2               	addwfc	fsr1h,w,c
 21364  0130C2  6EDA               	movwf	fsr2h,c
 21365                           
 21366                           ;stkvar	_b @ sp[(-4)+-4]
 21367  0130C4  0EF9               	movlw	249
 21368  0130C6  24E1               	addwf	fsr1l,w,c
 21369  0130C8  6EE9               	movwf	fsr0l,c
 21370  0130CA  0EFF               	movlw	255
 21371  0130CC  20E2               	addwfc	fsr1h,w,c
 21372  0130CE  6EEA               	movwf	fsr0h,c
 21373  0130D0  006F FF7F FFEF     	movff	indf2,indf0
 21374                           
 21375                           ;stkvar	_grs @ sp[(-4)+0]
 21376                           ;stkvar	_a @ sp[(-4)+-8]
 21377  0130D6  0EF5               	movlw	245
 21378  0130D8  24E1               	addwf	fsr1l,w,c
 21379  0130DA  6ED9               	movwf	fsr2l,c
 21380  0130DC  0EFF               	movlw	255
 21381  0130DE  20E2               	addwfc	fsr1h,w,c
 21382  0130E0  6EDA               	movwf	fsr2h,c
 21383  0130E2  0EFC               	movlw	-4
 21384  0130E4  006F FF8F FFDF     	movff	plusw1,indf2
 21385                           
 21386                           ;stkvar	_b @ sp[(-4)+-4]
 21387  0130EA  0EFA               	movlw	250
 21388  0130EC  24E1               	addwf	fsr1l,w,c
 21389  0130EE  6ED9               	movwf	fsr2l,c
 21390  0130F0  0EFF               	movlw	255
 21391  0130F2  20E2               	addwfc	fsr1h,w,c
 21392  0130F4  6EDA               	movwf	fsr2h,c
 21393  0130F6  50DF               	movf	indf2,w,c
 21394  0130F8  6E30               	movwf	(btemp+11)^0,c
 21395                           
 21396                           ;stkvar	_grs @ sp[(-4)+0]
 21397  0130FA  0EFC               	movlw	-4
 21398  0130FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21399                           
 21400                           ;stkvar	_a @ sp[(-4)+-8]
 21401  013102  0EF6               	movlw	246
 21402  013104  24E1               	addwf	fsr1l,w,c
 21403  013106  6ED9               	movwf	fsr2l,c
 21404  013108  0EFF               	movlw	255
 21405  01310A  20E2               	addwfc	fsr1h,w,c
 21406  01310C  6EDA               	movwf	fsr2h,c
 21407                           
 21408                           ;stkvar	_b @ sp[(-4)+-4]
 21409  01310E  0EFA               	movlw	250
 21410  013110  24E1               	addwf	fsr1l,w,c
 21411  013112  6EE9               	movwf	fsr0l,c
 21412  013114  0EFF               	movlw	255
 21413  013116  20E2               	addwfc	fsr1h,w,c
 21414  013118  6EEA               	movwf	fsr0h,c
 21415  01311A  006F FF7F FFEF     	movff	indf2,indf0
 21416                           
 21417                           ;stkvar	_grs @ sp[(-4)+0]
 21418                           ;stkvar	_a @ sp[(-4)+-8]
 21419  013120  0EF6               	movlw	246
 21420  013122  24E1               	addwf	fsr1l,w,c
 21421  013124  6ED9               	movwf	fsr2l,c
 21422  013126  0EFF               	movlw	255
 21423  013128  20E2               	addwfc	fsr1h,w,c
 21424  01312A  6EDA               	movwf	fsr2h,c
 21425  01312C  0EFC               	movlw	-4
 21426  01312E  006F FF8F FFDF     	movff	plusw1,indf2
 21427                           
 21428                           ;stkvar	_b @ sp[(-4)+-4]
 21429  013134  0EFB               	movlw	251
 21430  013136  24E1               	addwf	fsr1l,w,c
 21431  013138  6ED9               	movwf	fsr2l,c
 21432  01313A  0EFF               	movlw	255
 21433  01313C  20E2               	addwfc	fsr1h,w,c
 21434  01313E  6EDA               	movwf	fsr2h,c
 21435  013140  50DF               	movf	indf2,w,c
 21436  013142  6E30               	movwf	(btemp+11)^0,c
 21437                           
 21438                           ;stkvar	_grs @ sp[(-4)+0]
 21439  013144  0EFC               	movlw	-4
 21440  013146  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21441                           
 21442                           ;stkvar	_a @ sp[(-4)+-8]
 21443  01314C  0EF7               	movlw	247
 21444  01314E  24E1               	addwf	fsr1l,w,c
 21445  013150  6ED9               	movwf	fsr2l,c
 21446  013152  0EFF               	movlw	255
 21447  013154  20E2               	addwfc	fsr1h,w,c
 21448  013156  6EDA               	movwf	fsr2h,c
 21449                           
 21450                           ;stkvar	_b @ sp[(-4)+-4]
 21451  013158  0EFB               	movlw	251
 21452  01315A  24E1               	addwf	fsr1l,w,c
 21453  01315C  6EE9               	movwf	fsr0l,c
 21454  01315E  0EFF               	movlw	255
 21455  013160  20E2               	addwfc	fsr1h,w,c
 21456  013162  6EEA               	movwf	fsr0h,c
 21457  013164  006F FF7F FFEF     	movff	indf2,indf0
 21458                           
 21459                           ;stkvar	_grs @ sp[(-4)+0]
 21460                           ;stkvar	_a @ sp[(-4)+-8]
 21461  01316A  0EF7               	movlw	247
 21462  01316C  24E1               	addwf	fsr1l,w,c
 21463  01316E  6ED9               	movwf	fsr2l,c
 21464  013170  0EFF               	movlw	255
 21465  013172  20E2               	addwfc	fsr1h,w,c
 21466  013174  6EDA               	movwf	fsr2h,c
 21467  013176  0EFC               	movlw	-4
 21468  013178  006F FF8F FFDF     	movff	plusw1,indf2
 21469  01317E                     l7998:
 21470                           
 21471                           ;stkvar	_grs @ sp[(-4)+0]
 21472  01317E  0EFC               	movlw	-4
 21473  013180  6AE3               	clrf	plusw1,c
 21474                           
 21475                           ;stkvar	_aexp @ sp[(-4)+2]
 21476  013182  0EFE               	movlw	-2
 21477  013184  50E3               	movf	plusw1,w,c
 21478  013186  6E2F               	movwf	(btemp+10)^0,c
 21479  013188  6A30               	clrf	(btemp+11)^0,c
 21480                           
 21481                           ;stkvar	_bexp @ sp[(-4)+1]
 21482  01318A  0EFD               	movlw	-3
 21483  01318C  50E3               	movf	plusw1,w,c
 21484  01318E  5E2F               	subwf	(btemp+10)^0,f,c
 21485  013190  0E00               	movlw	0
 21486  013192  5A30               	subwfb	(btemp+11)^0,f,c
 21487  013194  BE30               	btfsc	(btemp+11)^0,7,c
 21488  013196  D062               	goto	l8022
 21489  013198  5030               	movf	(btemp+11)^0,w,c
 21490  01319A  E104               	bnz	u7140
 21491  01319C  0E1A               	movlw	26
 21492  01319E  5C2F               	subwf	(btemp+10)^0,w,c
 21493  0131A0  A0D8               	btfss	status,0,c
 21494  0131A2  D05C               	goto	l8022
 21495  0131A4                     u7140:
 21496                           
 21497                           ;stkvar	_b @ sp[(-4)+-4]
 21498  0131A4  0EF8               	movlw	-8
 21499  0131A6  50E3               	movf	plusw1,w,c
 21500  0131A8  E10A               	bnz	u7151
 21501  0131AA  0EF9               	movlw	-7
 21502  0131AC  50E3               	movf	plusw1,w,c
 21503  0131AE  E107               	bnz	u7151
 21504  0131B0  0EFA               	movlw	-6
 21505  0131B2  50E3               	movf	plusw1,w,c
 21506  0131B4  E104               	bnz	u7151
 21507  0131B6  0EFB               	movlw	-5
 21508  0131B8  50E3               	movf	plusw1,w,c
 21509  0131BA  B4D8               	btfsc	status,2,c
 21510  0131BC  D003               	goto	u7150
 21511  0131BE                     u7151:
 21512  0131BE  6A30               	clrf	(btemp+11)^0,c
 21513  0131C0  2A30               	incf	(btemp+11)^0,f,c
 21514  0131C2  D001               	goto	u7168
 21515  0131C4                     u7150:
 21516  0131C4  6A30               	clrf	(btemp+11)^0,c
 21517  0131C6                     u7168:
 21518                           
 21519                           ;stkvar	_grs @ sp[(-4)+0]
 21520  0131C6  0EFC               	movlw	-4
 21521  0131C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21522                           
 21523                           ;stkvar	_b @ sp[(-4)+-4]
 21524  0131CE  0EF8               	movlw	-8
 21525  0131D0  6AE3               	clrf	plusw1,c
 21526  0131D2  0EF9               	movlw	-7
 21527  0131D4  6AE3               	clrf	plusw1,c
 21528  0131D6  0EFA               	movlw	-6
 21529  0131D8  6AE3               	clrf	plusw1,c
 21530  0131DA  0EFB               	movlw	-5
 21531  0131DC  6AE3               	clrf	plusw1,c
 21532                           
 21533                           ;stkvar	_aexp @ sp[(-4)+2]
 21534                           ;stkvar	_bexp @ sp[(-4)+1]
 21535  0131DE  0EFE               	movlw	-2
 21536  0131E0  006F FF8C  F025    	movff	plusw1,btemp
 21537  0131E6  0EFD               	movlw	-3
 21538  0131E8  0060  F097  FFE3   	movff	btemp,plusw1
 21539  0131EE  D042               	goto	u7200
 21540  0131F0                     l8008:
 21541                           
 21542                           ;stkvar	_grs @ sp[(-4)+0]
 21543  0131F0  0EFC               	movlw	-4
 21544  0131F2  A0E3               	btfss	plusw1,0,c
 21545  0131F4  D00D               	goto	l8012
 21546                           
 21547                           ;stkvar	_grs @ sp[(-4)+0]
 21548  0131F6  0EFC               	movlw	-4
 21549  0131F8  006F FF8C  F030    	movff	plusw1,btemp+11
 21550  0131FE  90D8               	bcf	status,0,c
 21551  013200  3230               	rrcf	(btemp+11)^0,f,c
 21552  013202  0E01               	movlw	1
 21553  013204  1230               	iorwf	(btemp+11)^0,f,c
 21554                           
 21555                           ;stkvar	_grs @ sp[(-4)+0]
 21556  013206  0EFC               	movlw	-4
 21557  013208  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21558  01320E  D009               	goto	l8014
 21559  013210                     l8012:
 21560                           
 21561                           ;stkvar	_grs @ sp[(-4)+0]
 21562  013210  50E1               	movf	fsr1l,w,c
 21563  013212  0FFC               	addlw	-4
 21564  013214  6ED9               	movwf	fsr2l,c
 21565  013216  50E2               	movf	fsr1h,w,c
 21566  013218  6EDA               	movwf	fsr2h,c
 21567  01321A  0EFF               	movlw	255
 21568  01321C  22DA               	addwfc	fsr2h,f,c
 21569  01321E  90D8               	bcf	status,0,c
 21570  013220  32DF               	rrcf	indf2,f,c
 21571  013222                     l8014:
 21572                           
 21573                           ;stkvar	_b @ sp[(-4)+-4]
 21574  013222  0EF8               	movlw	-8
 21575  013224  A0E3               	btfss	plusw1,0,c
 21576  013226  D002               	goto	l8018
 21577                           
 21578                           ;stkvar	_grs @ sp[(-4)+0]
 21579  013228  0EFC               	movlw	-4
 21580  01322A  8EE3               	bsf	plusw1,7,c
 21581  01322C                     l8018:
 21582  01322C  0E01               	movlw	1
 21583  01322E  6E30               	movwf	(btemp+11)^0,c
 21584                           
 21585                           ;stkvar	_b @ sp[(-4)+-4]
 21586  013230  50E1               	movf	fsr1l,w,c
 21587  013232  0FF8               	addlw	-8
 21588  013234  6ED9               	movwf	fsr2l,c
 21589  013236  50E2               	movf	fsr1h,w,c
 21590  013238  6EDA               	movwf	fsr2h,c
 21591  01323A  0EFF               	movlw	255
 21592  01323C  22DA               	addwfc	fsr2h,f,c
 21593  01323E  2830               	incf	(btemp+11)^0,w,c
 21594  013240  52DE               	movf	postinc2,f,c
 21595  013242  D008               	goto	u7190
 21596  013244                     u7195:
 21597  013244  52DE               	movf	postinc2,f,c
 21598  013246  90D8               	bcf	status,0,c
 21599  013248  BEDC               	btfsc	preinc2,7,c
 21600  01324A  80D8               	bsf	status,0,c
 21601  01324C  32DD               	rrcf	postdec2,f,c
 21602  01324E  32DD               	rrcf	postdec2,f,c
 21603  013250  32DD               	rrcf	postdec2,f,c
 21604  013252  32DE               	rrcf	postinc2,f,c
 21605  013254                     u7190:
 21606  013254  2EE8               	decfsz	wreg,f,c
 21607  013256  D7F6               	goto	u7195
 21608                           
 21609                           ;stkvar	_bexp @ sp[(-4)+1]
 21610  013258  0EFD               	movlw	-3
 21611  01325A  2AE3               	incf	plusw1,f,c
 21612  01325C                     l8022:
 21613                           
 21614                           ;stkvar	_aexp @ sp[(-4)+2]
 21615                           ;stkvar	_bexp @ sp[(-4)+1]
 21616  01325C  50E1               	movf	fsr1l,w,c
 21617  01325E  0FFD               	addlw	-3
 21618  013260  6ED9               	movwf	fsr2l,c
 21619  013262  50E2               	movf	fsr1h,w,c
 21620  013264  6EDA               	movwf	fsr2h,c
 21621  013266  0EFF               	movlw	255
 21622  013268  22DA               	addwfc	fsr2h,f,c
 21623  01326A  0EFE               	movlw	-2
 21624  01326C  50E3               	movf	plusw1,w,c
 21625  01326E  5CDE               	subwf	postinc2,w,c
 21626  013270  A0D8               	btfss	status,0,c
 21627  013272  D7BE               	goto	l8008
 21628  013274                     u7200:
 21629                           
 21630                           ;stkvar	_signs @ sp[(-4)+3]
 21631  013274  0EFF               	movlw	-1
 21632  013276  BCE3               	btfsc	plusw1,6,c
 21633  013278  D066               	goto	l8050
 21634                           
 21635                           ;stkvar	_bexp @ sp[(-4)+1]
 21636  01327A  0EFD               	movlw	-3
 21637  01327C  50E3               	movf	plusw1,w,c
 21638  01327E  B4D8               	btfsc	status,2,c
 21639  013280  D0F2               	goto	u7300
 21640                           
 21641                           ;stkvar	_a @ sp[(-4)+-8]
 21642                           ;stkvar	_b @ sp[(-4)+-4]
 21643  013282  0EF8               	movlw	-8
 21644  013284  50E3               	movf	plusw1,w,c
 21645  013286  6E25               	movwf	btemp^0,c
 21646  013288  0EF4               	movlw	-12
 21647  01328A  50E3               	movf	plusw1,w,c
 21648  01328C  2625               	addwf	btemp^0,f,c
 21649  01328E  0EF8               	movlw	-8
 21650  013290  0060  F097  FFE3   	movff	btemp,plusw1
 21651  013296  0EF9               	movlw	-7
 21652  013298  50E3               	movf	plusw1,w,c
 21653  01329A  6E25               	movwf	btemp^0,c
 21654  01329C  0EF5               	movlw	-11
 21655  01329E  50E3               	movf	plusw1,w,c
 21656  0132A0  2225               	addwfc	btemp^0,f,c
 21657  0132A2  0EF9               	movlw	-7
 21658  0132A4  0060  F097  FFE3   	movff	btemp,plusw1
 21659  0132AA  0EFA               	movlw	-6
 21660  0132AC  50E3               	movf	plusw1,w,c
 21661  0132AE  6E25               	movwf	btemp^0,c
 21662  0132B0  0EF6               	movlw	-10
 21663  0132B2  50E3               	movf	plusw1,w,c
 21664  0132B4  2225               	addwfc	btemp^0,f,c
 21665  0132B6  0EFA               	movlw	-6
 21666  0132B8  0060  F097  FFE3   	movff	btemp,plusw1
 21667  0132BE  0EFB               	movlw	-5
 21668  0132C0  50E3               	movf	plusw1,w,c
 21669  0132C2  6E25               	movwf	btemp^0,c
 21670  0132C4  0EF7               	movlw	-9
 21671  0132C6  50E3               	movf	plusw1,w,c
 21672  0132C8  2225               	addwfc	btemp^0,f,c
 21673  0132CA  0EFB               	movlw	-5
 21674  0132CC  0060  F097  FFE3   	movff	btemp,plusw1
 21675                           
 21676                           ;stkvar	_b @ sp[(-4)+-4]
 21677  0132D2  0EFB               	movlw	-5
 21678  0132D4  A0E3               	btfss	plusw1,0,c
 21679  0132D6  D101               	goto	u7340
 21680                           
 21681                           ;stkvar	_grs @ sp[(-4)+0]
 21682  0132D8  0EFC               	movlw	-4
 21683  0132DA  A0E3               	btfss	plusw1,0,c
 21684  0132DC  D00D               	goto	l8040
 21685                           
 21686                           ;stkvar	_grs @ sp[(-4)+0]
 21687  0132DE  0EFC               	movlw	-4
 21688  0132E0  006F FF8C  F030    	movff	plusw1,btemp+11
 21689  0132E6  90D8               	bcf	status,0,c
 21690  0132E8  3230               	rrcf	(btemp+11)^0,f,c
 21691  0132EA  0E01               	movlw	1
 21692  0132EC  1230               	iorwf	(btemp+11)^0,f,c
 21693                           
 21694                           ;stkvar	_grs @ sp[(-4)+0]
 21695  0132EE  0EFC               	movlw	-4
 21696  0132F0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21697  0132F6  D009               	goto	l8042
 21698  0132F8                     l8040:
 21699                           
 21700                           ;stkvar	_grs @ sp[(-4)+0]
 21701  0132F8  50E1               	movf	fsr1l,w,c
 21702  0132FA  0FFC               	addlw	-4
 21703  0132FC  6ED9               	movwf	fsr2l,c
 21704  0132FE  50E2               	movf	fsr1h,w,c
 21705  013300  6EDA               	movwf	fsr2h,c
 21706  013302  0EFF               	movlw	255
 21707  013304  22DA               	addwfc	fsr2h,f,c
 21708  013306  90D8               	bcf	status,0,c
 21709  013308  32DF               	rrcf	indf2,f,c
 21710  01330A                     l8042:
 21711                           
 21712                           ;stkvar	_b @ sp[(-4)+-4]
 21713  01330A  0EF8               	movlw	-8
 21714  01330C  A0E3               	btfss	plusw1,0,c
 21715  01330E  D002               	goto	l8046
 21716                           
 21717                           ;stkvar	_grs @ sp[(-4)+0]
 21718  013310  0EFC               	movlw	-4
 21719  013312  8EE3               	bsf	plusw1,7,c
 21720  013314                     l8046:
 21721  013314  0E01               	movlw	1
 21722  013316  6E30               	movwf	(btemp+11)^0,c
 21723                           
 21724                           ;stkvar	_b @ sp[(-4)+-4]
 21725  013318  50E1               	movf	fsr1l,w,c
 21726  01331A  0FF8               	addlw	-8
 21727  01331C  6ED9               	movwf	fsr2l,c
 21728  01331E  50E2               	movf	fsr1h,w,c
 21729  013320  6EDA               	movwf	fsr2h,c
 21730  013322  0EFF               	movlw	255
 21731  013324  22DA               	addwfc	fsr2h,f,c
 21732  013326  2830               	incf	(btemp+11)^0,w,c
 21733  013328  52DE               	movf	postinc2,f,c
 21734  01332A  D008               	goto	u7260
 21735  01332C                     u7265:
 21736  01332C  52DE               	movf	postinc2,f,c
 21737  01332E  90D8               	bcf	status,0,c
 21738  013330  BEDC               	btfsc	preinc2,7,c
 21739  013332  80D8               	bsf	status,0,c
 21740  013334  32DD               	rrcf	postdec2,f,c
 21741  013336  32DD               	rrcf	postdec2,f,c
 21742  013338  32DD               	rrcf	postdec2,f,c
 21743  01333A  32DE               	rrcf	postinc2,f,c
 21744  01333C                     u7260:
 21745  01333C  2EE8               	decfsz	wreg,f,c
 21746  01333E  D7F6               	goto	u7265
 21747                           
 21748                           ;stkvar	_bexp @ sp[(-4)+1]
 21749  013340  0EFD               	movlw	-3
 21750  013342  2AE3               	incf	plusw1,f,c
 21751  013344  D0CA               	goto	u7340
 21752  013346                     l8050:
 21753                           
 21754                           ;stkvar	_a @ sp[(-4)+-8]
 21755                           ;stkvar	_b @ sp[(-4)+-4]
 21756  013346  50E1               	movf	fsr1l,w,c
 21757  013348  0FF8               	addlw	-8
 21758  01334A  6ED9               	movwf	fsr2l,c
 21759  01334C  50E2               	movf	fsr1h,w,c
 21760  01334E  6EDA               	movwf	fsr2h,c
 21761  013350  0EFF               	movlw	255
 21762  013352  22DA               	addwfc	fsr2h,f,c
 21763  013354  0EF4               	movlw	-12
 21764  013356  50E3               	movf	plusw1,w,c
 21765  013358  5CDE               	subwf	postinc2,w,c
 21766  01335A  0EF5               	movlw	-11
 21767  01335C  50E3               	movf	plusw1,w,c
 21768  01335E  58DE               	subwfb	postinc2,w,c
 21769  013360  0EF6               	movlw	-10
 21770  013362  50E3               	movf	plusw1,w,c
 21771  013364  58DE               	subwfb	postinc2,w,c
 21772  013366  50DE               	movf	postinc2,w,c
 21773  013368  0A80               	xorlw	128
 21774  01336A  6E25               	movwf	btemp^0,c
 21775  01336C  0EF7               	movlw	-9
 21776  01336E  50E3               	movf	plusw1,w,c
 21777  013370  0A80               	xorlw	128
 21778  013372  5825               	subwfb	btemp^0,w,c
 21779  013374  B0D8               	btfsc	status,0,c
 21780  013376  D053               	goto	l8062
 21781                           
 21782                           ;stkvar	_b @ sp[(-4)+-4]
 21783                           ;stkvar	_a @ sp[(-4)+-8]
 21784  013378  0EF4               	movlw	-12
 21785  01337A  006F FF8C  F02D    	movff	plusw1,btemp+8
 21786  013380  0EF5               	movlw	-11
 21787  013382  006F FF8C  F02E    	movff	plusw1,btemp+9
 21788  013388  0EF6               	movlw	-10
 21789  01338A  006F FF8C  F02F    	movff	plusw1,btemp+10
 21790  013390  0EF7               	movlw	-9
 21791  013392  006F FF8C  F030    	movff	plusw1,btemp+11
 21792  013398  0EF8               	movlw	-8
 21793  01339A  50E3               	movf	plusw1,w,c
 21794  01339C  5E2D               	subwf	(btemp+8)^0,f,c
 21795  01339E  0EF9               	movlw	-7
 21796  0133A0  50E3               	movf	plusw1,w,c
 21797  0133A2  5A2E               	subwfb	(btemp+9)^0,f,c
 21798  0133A4  0EFA               	movlw	-6
 21799  0133A6  50E3               	movf	plusw1,w,c
 21800  0133A8  5A2F               	subwfb	(btemp+10)^0,f,c
 21801  0133AA  0EFB               	movlw	-5
 21802  0133AC  50E3               	movf	plusw1,w,c
 21803  0133AE  5A30               	subwfb	(btemp+11)^0,f,c
 21804  0133B0  0EFF               	movlw	255
 21805  0133B2  242D               	addwf	(btemp+8)^0,w,c
 21806  0133B4  6E29               	movwf	(btemp+4)^0,c
 21807  0133B6  0EFF               	movlw	255
 21808  0133B8  202E               	addwfc	(btemp+9)^0,w,c
 21809  0133BA  6E2A               	movwf	(btemp+5)^0,c
 21810  0133BC  0EFF               	movlw	255
 21811  0133BE  202F               	addwfc	(btemp+10)^0,w,c
 21812  0133C0  6E2B               	movwf	(btemp+6)^0,c
 21813  0133C2  0EFF               	movlw	255
 21814  0133C4  2030               	addwfc	(btemp+11)^0,w,c
 21815  0133C6  6E2C               	movwf	(btemp+7)^0,c
 21816                           
 21817                           ;stkvar	_b @ sp[(-4)+-4]
 21818  0133C8  0EF8               	movlw	-8
 21819  0133CA  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 21820  0133D0  0EF9               	movlw	-7
 21821  0133D2  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 21822  0133D8  0EFA               	movlw	-6
 21823  0133DA  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 21824  0133E0  0EFB               	movlw	-5
 21825  0133E2  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 21826                           
 21827                           ;stkvar	_signs @ sp[(-4)+3]
 21828  0133E8  0EFF               	movlw	-1
 21829  0133EA  7EE3               	btg	plusw1,7,c
 21830                           
 21831                           ;stkvar	_grs @ sp[(-4)+0]
 21832  0133EC  0EFC               	movlw	-4
 21833  0133EE  50E3               	movf	plusw1,w,c
 21834  0133F0  0800               	sublw	0
 21835  0133F2  6E30               	movwf	(btemp+11)^0,c
 21836                           
 21837                           ;stkvar	_grs @ sp[(-4)+0]
 21838  0133F4  0EFC               	movlw	-4
 21839  0133F6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21840                           
 21841                           ;stkvar	_grs @ sp[(-4)+0]
 21842  0133FC  0EFC               	movlw	-4
 21843  0133FE  50E3               	movf	plusw1,w,c
 21844  013400  A4D8               	btfss	status,2,c
 21845  013402  D020               	goto	l8064
 21846                           
 21847                           ;stkvar	_b @ sp[(-4)+-4]
 21848  013404  50E1               	movf	fsr1l,w,c
 21849  013406  0FF8               	addlw	-8
 21850  013408  6ED9               	movwf	fsr2l,c
 21851  01340A  50E2               	movf	fsr1h,w,c
 21852  01340C  6EDA               	movwf	fsr2h,c
 21853  01340E  0EFF               	movlw	255
 21854  013410  22DA               	addwfc	fsr2h,f,c
 21855  013412  2ADE               	incf	postinc2,f,c
 21856  013414  0E00               	movlw	0
 21857  013416  22DE               	addwfc	postinc2,f,c
 21858  013418  22DE               	addwfc	postinc2,f,c
 21859  01341A  22DE               	addwfc	postinc2,f,c
 21860  01341C  D013               	goto	l8064
 21861  01341E                     l8062:
 21862                           
 21863                           ;stkvar	_a @ sp[(-4)+-8]
 21864                           ;stkvar	_b @ sp[(-4)+-4]
 21865  01341E  50E1               	movf	fsr1l,w,c
 21866  013420  0FF8               	addlw	-8
 21867  013422  6ED9               	movwf	fsr2l,c
 21868  013424  50E2               	movf	fsr1h,w,c
 21869  013426  6EDA               	movwf	fsr2h,c
 21870  013428  0EFF               	movlw	255
 21871  01342A  22DA               	addwfc	fsr2h,f,c
 21872  01342C  0EF4               	movlw	-12
 21873  01342E  50E3               	movf	plusw1,w,c
 21874  013430  5EDE               	subwf	postinc2,f,c
 21875  013432  0EF5               	movlw	-11
 21876  013434  50E3               	movf	plusw1,w,c
 21877  013436  5ADE               	subwfb	postinc2,f,c
 21878  013438  0EF6               	movlw	-10
 21879  01343A  50E3               	movf	plusw1,w,c
 21880  01343C  5ADE               	subwfb	postinc2,f,c
 21881  01343E  0EF7               	movlw	-9
 21882  013440  50E3               	movf	plusw1,w,c
 21883  013442  5ADE               	subwfb	postinc2,f,c
 21884  013444                     l8064:
 21885                           
 21886                           ;stkvar	_b @ sp[(-4)+-4]
 21887  013444  0EF8               	movlw	-8
 21888  013446  50E3               	movf	plusw1,w,c
 21889  013448  E145               	bnz	l8086
 21890  01344A  0EF9               	movlw	-7
 21891  01344C  50E3               	movf	plusw1,w,c
 21892  01344E  E142               	bnz	l8086
 21893  013450  0EFA               	movlw	-6
 21894  013452  50E3               	movf	plusw1,w,c
 21895  013454  E13F               	bnz	l8086
 21896  013456  0EFB               	movlw	-5
 21897  013458  50E3               	movf	plusw1,w,c
 21898  01345A  A4D8               	btfss	status,2,c
 21899  01345C  D03B               	goto	l8086
 21900                           
 21901                           ;stkvar	_grs @ sp[(-4)+0]
 21902  01345E  0EFC               	movlw	-4
 21903  013460  50E3               	movf	plusw1,w,c
 21904  013462  A4D8               	btfss	status,2,c
 21905  013464  D037               	goto	l8086
 21906  013466                     u7300:
 21907  013466  0E00               	movlw	0
 21908  013468  6E25               	movwf	btemp^0,c
 21909  01346A  0E00               	movlw	0
 21910  01346C  6E26               	movwf	(btemp+1)^0,c
 21911  01346E  0E00               	movlw	0
 21912  013470  6E27               	movwf	(btemp+2)^0,c
 21913  013472  0E00               	movlw	0
 21914  013474  6E28               	movwf	(btemp+3)^0,c
 21915  013476  D0C6               	goto	l2764
 21916  013478                     l8072:
 21917                           
 21918                           ;stkvar	_b @ sp[(-4)+-4]
 21919  013478  90D8               	bcf	status,0,c
 21920  01347A  0EF8               	movlw	-8
 21921  01347C  36E3               	rlcf	plusw1,f,c
 21922  01347E  0EF9               	movlw	-7
 21923  013480  36E3               	rlcf	plusw1,f,c
 21924  013482  0EFA               	movlw	-6
 21925  013484  36E3               	rlcf	plusw1,f,c
 21926  013486  0EFB               	movlw	-5
 21927  013488  36E3               	rlcf	plusw1,f,c
 21928                           
 21929                           ;stkvar	_grs @ sp[(-4)+0]
 21930  01348A  0EFC               	movlw	-4
 21931  01348C  AEE3               	btfss	plusw1,7,c
 21932  01348E  D002               	goto	l2776
 21933                           
 21934                           ;stkvar	_b @ sp[(-4)+-4]
 21935  013490  0EF8               	movlw	-8
 21936  013492  80E3               	bsf	plusw1,0,c
 21937  013494                     l2776:
 21938                           
 21939                           ;stkvar	_grs @ sp[(-4)+0]
 21940  013494  0EFC               	movlw	-4
 21941  013496  A0E3               	btfss	plusw1,0,c
 21942  013498  D00E               	goto	l8080
 21943                           
 21944                           ;stkvar	_grs @ sp[(-4)+0]
 21945  01349A  0EFC               	movlw	-4
 21946  01349C  006F FF8C  F030    	movff	plusw1,btemp+11
 21947  0134A2  90D8               	bcf	status,0,c
 21948  0134A4  3430               	rlcf	(btemp+11)^0,w,c
 21949  0134A6  6E2F               	movwf	(btemp+10)^0,c
 21950  0134A8  0E01               	movlw	1
 21951  0134AA  122F               	iorwf	(btemp+10)^0,f,c
 21952                           
 21953                           ;stkvar	_grs @ sp[(-4)+0]
 21954  0134AC  0EFC               	movlw	-4
 21955  0134AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21956  0134B4  D009               	goto	l8082
 21957  0134B6                     l8080:
 21958                           
 21959                           ;stkvar	_grs @ sp[(-4)+0]
 21960  0134B6  50E1               	movf	fsr1l,w,c
 21961  0134B8  0FFC               	addlw	-4
 21962  0134BA  6ED9               	movwf	fsr2l,c
 21963  0134BC  50E2               	movf	fsr1h,w,c
 21964  0134BE  6EDA               	movwf	fsr2h,c
 21965  0134C0  0EFF               	movlw	255
 21966  0134C2  22DA               	addwfc	fsr2h,f,c
 21967  0134C4  90D8               	bcf	status,0,c
 21968  0134C6  36DF               	rlcf	indf2,f,c
 21969  0134C8                     l8082:
 21970                           
 21971                           ;stkvar	_bexp @ sp[(-4)+1]
 21972  0134C8  0EFD               	movlw	-3
 21973  0134CA  50E3               	movf	plusw1,w,c
 21974  0134CC  B4D8               	btfsc	status,2,c
 21975  0134CE  D002               	goto	l8086
 21976                           
 21977                           ;stkvar	_bexp @ sp[(-4)+1]
 21978  0134D0  0EFD               	movlw	-3
 21979  0134D2  06E3               	decf	plusw1,f,c
 21980  0134D4                     l8086:
 21981                           
 21982                           ;stkvar	_b @ sp[(-4)+-4]
 21983  0134D4  0EFA               	movlw	-6
 21984  0134D6  AEE3               	btfss	plusw1,7,c
 21985  0134D8  D7CF               	goto	l8072
 21986  0134DA                     u7340:
 21987                           
 21988                           ;stkvar	_aexp @ sp[(-4)+2]
 21989  0134DA  0EFE               	movlw	-2
 21990  0134DC  6AE3               	clrf	plusw1,c
 21991                           
 21992                           ;stkvar	_grs @ sp[(-4)+0]
 21993  0134DE  0EFC               	movlw	-4
 21994  0134E0  AEE3               	btfss	plusw1,7,c
 21995  0134E2  D00F               	goto	l8100
 21996                           
 21997                           ;stkvar	_grs @ sp[(-4)+0]
 21998  0134E4  0EFC               	movlw	-4
 21999  0134E6  006F FF8C  F030    	movff	plusw1,btemp+11
 22000  0134EC  0E7F               	movlw	127
 22001  0134EE  1630               	andwf	(btemp+11)^0,f,c
 22002  0134F0  B4D8               	btfsc	status,2,c
 22003  0134F2  D004               	goto	l8096
 22004  0134F4                     u7360:
 22005                           
 22006                           ;stkvar	_aexp @ sp[(-4)+2]
 22007  0134F4  0EFE               	movlw	-2
 22008  0134F6  6AE3               	clrf	plusw1,c
 22009  0134F8  2AE3               	incf	plusw1,f,c
 22010  0134FA  D003               	goto	l8100
 22011  0134FC                     l8096:
 22012                           
 22013                           ;stkvar	_b @ sp[(-4)+-4]
 22014  0134FC  0EF8               	movlw	-8
 22015  0134FE  B0E3               	btfsc	plusw1,0,c
 22016  013500  D7F9               	goto	u7360
 22017  013502                     l8100:
 22018                           
 22019                           ;stkvar	_aexp @ sp[(-4)+2]
 22020  013502  0EFE               	movlw	-2
 22021  013504  50E3               	movf	plusw1,w,c
 22022  013506  B4D8               	btfsc	status,2,c
 22023  013508  D02B               	goto	l8112
 22024                           
 22025                           ;stkvar	_b @ sp[(-4)+-4]
 22026  01350A  50E1               	movf	fsr1l,w,c
 22027  01350C  0FF8               	addlw	-8
 22028  01350E  6ED9               	movwf	fsr2l,c
 22029  013510  50E2               	movf	fsr1h,w,c
 22030  013512  6EDA               	movwf	fsr2h,c
 22031  013514  0EFF               	movlw	255
 22032  013516  22DA               	addwfc	fsr2h,f,c
 22033  013518  2ADE               	incf	postinc2,f,c
 22034  01351A  0E00               	movlw	0
 22035  01351C  22DE               	addwfc	postinc2,f,c
 22036  01351E  22DE               	addwfc	postinc2,f,c
 22037  013520  22DE               	addwfc	postinc2,f,c
 22038                           
 22039                           ;stkvar	_b @ sp[(-4)+-4]
 22040  013522  0EFB               	movlw	-5
 22041  013524  A0E3               	btfss	plusw1,0,c
 22042  013526  D01C               	goto	l8112
 22043  013528  0E01               	movlw	1
 22044  01352A  6E30               	movwf	(btemp+11)^0,c
 22045                           
 22046                           ;stkvar	_b @ sp[(-4)+-4]
 22047  01352C  50E1               	movf	fsr1l,w,c
 22048  01352E  0FF8               	addlw	-8
 22049  013530  6ED9               	movwf	fsr2l,c
 22050  013532  50E2               	movf	fsr1h,w,c
 22051  013534  6EDA               	movwf	fsr2h,c
 22052  013536  0EFF               	movlw	255
 22053  013538  22DA               	addwfc	fsr2h,f,c
 22054  01353A  2830               	incf	(btemp+11)^0,w,c
 22055  01353C  52DE               	movf	postinc2,f,c
 22056  01353E  D008               	goto	u7400
 22057  013540                     u7405:
 22058  013540  52DE               	movf	postinc2,f,c
 22059  013542  90D8               	bcf	status,0,c
 22060  013544  BEDC               	btfsc	preinc2,7,c
 22061  013546  80D8               	bsf	status,0,c
 22062  013548  32DD               	rrcf	postdec2,f,c
 22063  01354A  32DD               	rrcf	postdec2,f,c
 22064  01354C  32DD               	rrcf	postdec2,f,c
 22065  01354E  32DE               	rrcf	postinc2,f,c
 22066  013550                     u7400:
 22067  013550  2EE8               	decfsz	wreg,f,c
 22068  013552  D7F6               	goto	u7405
 22069                           
 22070                           ;stkvar	_bexp @ sp[(-4)+1]
 22071  013554  0EFD               	movlw	-3
 22072  013556  28E3               	incf	plusw1,w,c
 22073  013558  B4D8               	btfsc	status,2,c
 22074  01355A  D002               	goto	l8112
 22075                           
 22076                           ;stkvar	_bexp @ sp[(-4)+1]
 22077  01355C  0EFD               	movlw	-3
 22078  01355E  2AE3               	incf	plusw1,f,c
 22079  013560                     l8112:
 22080                           
 22081                           ;stkvar	_bexp @ sp[(-4)+1]
 22082  013560  0EFD               	movlw	-3
 22083  013562  28E3               	incf	plusw1,w,c
 22084  013564  B4D8               	btfsc	status,2,c
 22085  013566  D004               	goto	u7430
 22086                           
 22087                           ;stkvar	_bexp @ sp[(-4)+1]
 22088  013568  0EFD               	movlw	-3
 22089  01356A  50E3               	movf	plusw1,w,c
 22090  01356C  A4D8               	btfss	status,2,c
 22091  01356E  D00E               	goto	l8122
 22092  013570                     u7430:
 22093                           
 22094                           ;stkvar	_b @ sp[(-4)+-4]
 22095  013570  0EF8               	movlw	-8
 22096  013572  6AE3               	clrf	plusw1,c
 22097  013574  0EF9               	movlw	-7
 22098  013576  6AE3               	clrf	plusw1,c
 22099  013578  0EFA               	movlw	-6
 22100  01357A  6AE3               	clrf	plusw1,c
 22101  01357C  0EFB               	movlw	-5
 22102  01357E  6AE3               	clrf	plusw1,c
 22103                           
 22104                           ;stkvar	_bexp @ sp[(-4)+1]
 22105  013580  0EFD               	movlw	-3
 22106  013582  50E3               	movf	plusw1,w,c
 22107  013584  A4D8               	btfss	status,2,c
 22108  013586  D002               	goto	l8122
 22109                           
 22110                           ;stkvar	_signs @ sp[(-4)+3]
 22111  013588  0EFF               	movlw	-1
 22112  01358A  6AE3               	clrf	plusw1,c
 22113  01358C                     l8122:
 22114                           
 22115                           ;stkvar	_bexp @ sp[(-4)+1]
 22116  01358C  0EFD               	movlw	-3
 22117  01358E  A0E3               	btfss	plusw1,0,c
 22118  013590  D009               	goto	l8126
 22119                           
 22120                           ;stkvar	_b @ sp[(-4)+-4]
 22121  013592  0EFA               	movlw	250
 22122  013594  24E1               	addwf	fsr1l,w,c
 22123  013596  6ED9               	movwf	fsr2l,c
 22124  013598  0EFF               	movlw	255
 22125  01359A  20E2               	addwfc	fsr1h,w,c
 22126  01359C  6EDA               	movwf	fsr2h,c
 22127  01359E  0E00               	movlw	0
 22128  0135A0  8EDB               	bsf	plusw2,7,c
 22129  0135A2  D008               	goto	l8128
 22130  0135A4                     l8126:
 22131                           
 22132                           ;stkvar	_b @ sp[(-4)+-4]
 22133  0135A4  0EFA               	movlw	250
 22134  0135A6  24E1               	addwf	fsr1l,w,c
 22135  0135A8  6ED9               	movwf	fsr2l,c
 22136  0135AA  0EFF               	movlw	255
 22137  0135AC  20E2               	addwfc	fsr1h,w,c
 22138  0135AE  6EDA               	movwf	fsr2h,c
 22139  0135B0  0E7F               	movlw	127
 22140  0135B2  16DF               	andwf	indf2,f,c
 22141  0135B4                     l8128:
 22142                           
 22143                           ;stkvar	_b @ sp[(-4)+-4]
 22144  0135B4  0EFB               	movlw	251
 22145  0135B6  24E1               	addwf	fsr1l,w,c
 22146  0135B8  6ED9               	movwf	fsr2l,c
 22147  0135BA  0EFF               	movlw	255
 22148  0135BC  20E2               	addwfc	fsr1h,w,c
 22149  0135BE  6EDA               	movwf	fsr2h,c
 22150                           
 22151                           ;stkvar	_bexp @ sp[(-4)+1]
 22152  0135C0  0EFD               	movlw	-3
 22153  0135C2  006F FF8C  F030    	movff	plusw1,btemp+11
 22154  0135C8  90D8               	bcf	status,0,c
 22155  0135CA  3030               	rrcf	(btemp+11)^0,w,c
 22156  0135CC  6EDF               	movwf	indf2,c
 22157                           
 22158                           ;stkvar	_signs @ sp[(-4)+3]
 22159  0135CE  0EFF               	movlw	-1
 22160  0135D0  AEE3               	btfss	plusw1,7,c
 22161  0135D2  D008               	goto	l8134
 22162                           
 22163                           ;stkvar	_b @ sp[(-4)+-4]
 22164  0135D4  0EFB               	movlw	251
 22165  0135D6  24E1               	addwf	fsr1l,w,c
 22166  0135D8  6ED9               	movwf	fsr2l,c
 22167  0135DA  0EFF               	movlw	255
 22168  0135DC  20E2               	addwfc	fsr1h,w,c
 22169  0135DE  6EDA               	movwf	fsr2h,c
 22170  0135E0  0E00               	movlw	0
 22171  0135E2  8EDB               	bsf	plusw2,7,c
 22172  0135E4                     l8134:
 22173                           
 22174                           ;stkvar	_b @ sp[(-4)+-4]
 22175  0135E4  0EF8               	movlw	-8
 22176  0135E6  006F FF8C  F025    	movff	plusw1,btemp
 22177  0135EC  0EF9               	movlw	-7
 22178  0135EE  006F FF8C  F026    	movff	plusw1,btemp+1
 22179  0135F4  0EFA               	movlw	-6
 22180  0135F6  006F FF8C  F027    	movff	plusw1,btemp+2
 22181  0135FC  0EFB               	movlw	-5
 22182  0135FE  006F FF8C  F028    	movff	plusw1,btemp+3
 22183  013604                     l2764:
 22184                           
 22185                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22186  013604  0EF4               	movlw	244
 22187  013606  26E1               	addwf	fsr1l,f,c
 22188  013608  0EFF               	movlw	255
 22189  01360A  22E2               	addwfc	fsr1h,f,c
 22190  01360C  0012               	return		;funcret
 22191  01360E                     __end_of___fladd:
 22192                           	opt callstack 0
 22193                           
 22194 ;; *************** function ___flmul *****************
 22195 ;; Defined at:
 22196 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22197 ;; Parameters:    Size  Location     Type
 22198 ;;  b               4  [STACK] unsigned char 
 22199 ;;  a               4  [STACK] unsigned char 
 22200 ;; Auto vars:     Size  Location     Type
 22201 ;;  prod            4  [STACK] struct .
 22202 ;;  grs             4  [STACK] unsigned long 
 22203 ;;  temp            2  [STACK] struct .
 22204 ;;  bexp            1  [STACK] unsigned char 
 22205 ;;  aexp            1  [STACK] unsigned char 
 22206 ;;  sign            1  [STACK] unsigned char 
 22207 ;; Return value:  Size  Location     Type
 22208 ;;                  4  [STACK] unsigned char 
 22209 ;; Registers used:
 22210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22211 ;; Tracked objects:
 22212 ;;		On entry : 0/2
 22213 ;;		On exit  : 0/0
 22214 ;;		Unchanged: 0/0
 22215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22220 ;;Total ram usage:        0 bytes
 22221 ;; Hardware stack levels used:    1
 22222 ;; Hardware stack levels required when called:    7
 22223 ;; This function calls:
 22224 ;;		Nothing
 22225 ;; This function is called by:
 22226 ;;		_conv_raw_result
 22227 ;;		_lp_filter
 22228 ;;		_calc_model_data
 22229 ;;		_calc_bsoc
 22230 ;;		_efgtoa
 22231 ;; This function uses a reentrant model
 22232 ;;
 22233                           
 22234                           	psect	text94
 22235  012628                     __ptext94:
 22236                           	opt callstack 0
 22237  012628                     ___flmul:
 22238                           	opt callstack 0
 22239                           
 22240                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22241  012628  0E0D               	movlw	13
 22242  01262A  26E1               	addwf	fsr1l,f,c
 22243  01262C  0E00               	movlw	0
 22244  01262E  22E2               	addwfc	fsr1h,f,c
 22245                           
 22246                           ;stkvar	_b @ sp[(-13)+-4]
 22247                           
 22248                           ;incstack = 0
 22249  012630  0EF2               	movlw	242
 22250  012632  24E1               	addwf	fsr1l,w,c
 22251  012634  6ED9               	movwf	fsr2l,c
 22252  012636  0EFF               	movlw	255
 22253  012638  20E2               	addwfc	fsr1h,w,c
 22254  01263A  6EDA               	movwf	fsr2h,c
 22255  01263C  50DF               	movf	indf2,w,c
 22256  01263E  6E30               	movwf	(btemp+11)^0,c
 22257  012640  0E80               	movlw	128
 22258  012642  1630               	andwf	(btemp+11)^0,f,c
 22259                           
 22260                           ;stkvar	_sign @ sp[(-13)+12]
 22261  012644  0EFF               	movlw	-1
 22262  012646  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22263                           
 22264                           ;stkvar	_b @ sp[(-13)+-4]
 22265  01264C  0EF2               	movlw	242
 22266  01264E  24E1               	addwf	fsr1l,w,c
 22267  012650  6ED9               	movwf	fsr2l,c
 22268  012652  0EFF               	movlw	255
 22269  012654  20E2               	addwfc	fsr1h,w,c
 22270  012656  6EDA               	movwf	fsr2h,c
 22271  012658  50DF               	movf	indf2,w,c
 22272  01265A  6E30               	movwf	(btemp+11)^0,c
 22273  01265C  90D8               	bcf	status,0,c
 22274  01265E  3430               	rlcf	(btemp+11)^0,w,c
 22275  012660  6E2F               	movwf	(btemp+10)^0,c
 22276                           
 22277                           ;stkvar	_bexp @ sp[(-13)+10]
 22278  012662  0EFD               	movlw	-3
 22279  012664  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22280                           
 22281                           ;stkvar	_b @ sp[(-13)+-4]
 22282  01266A  0EF1               	movlw	241
 22283  01266C  24E1               	addwf	fsr1l,w,c
 22284  01266E  6ED9               	movwf	fsr2l,c
 22285  012670  0EFF               	movlw	255
 22286  012672  20E2               	addwfc	fsr1h,w,c
 22287  012674  6EDA               	movwf	fsr2h,c
 22288  012676  AEDF               	btfss	indf2,7,c
 22289  012678  D002               	goto	l8302
 22290                           
 22291                           ;stkvar	_bexp @ sp[(-13)+10]
 22292  01267A  0EFD               	movlw	-3
 22293  01267C  80E3               	bsf	plusw1,0,c
 22294  01267E                     l8302:
 22295                           
 22296                           ;stkvar	_bexp @ sp[(-13)+10]
 22297  01267E  0EFD               	movlw	-3
 22298  012680  50E3               	movf	plusw1,w,c
 22299  012682  B4D8               	btfsc	status,2,c
 22300  012684  D01F               	goto	l8310
 22301                           
 22302                           ;stkvar	_bexp @ sp[(-13)+10]
 22303  012686  0EFD               	movlw	-3
 22304  012688  28E3               	incf	plusw1,w,c
 22305  01268A  A4D8               	btfss	status,2,c
 22306  01268C  D018               	goto	l8308
 22307  01268E  0E00               	movlw	0
 22308  012690  6E2D               	movwf	(btemp+8)^0,c
 22309  012692  0E00               	movlw	0
 22310  012694  6E2E               	movwf	(btemp+9)^0,c
 22311  012696  0E00               	movlw	0
 22312  012698  6E2F               	movwf	(btemp+10)^0,c
 22313  01269A  0E00               	movlw	0
 22314  01269C  6E30               	movwf	(btemp+11)^0,c
 22315                           
 22316                           ;stkvar	_b @ sp[(-13)+-4]
 22317  01269E  0EEF               	movlw	-17
 22318  0126A0  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22319  0126A6  0EF0               	movlw	-16
 22320  0126A8  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22321  0126AE  0EF1               	movlw	-15
 22322  0126B0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22323  0126B6  0EF2               	movlw	-14
 22324  0126B8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22325  0126BE                     l8308:
 22326                           
 22327                           ;stkvar	_b @ sp[(-13)+-4]
 22328  0126BE  0EF1               	movlw	-15
 22329  0126C0  8EE3               	bsf	plusw1,7,c
 22330  0126C2  D018               	goto	l8312
 22331  0126C4                     l8310:
 22332  0126C4  0E00               	movlw	0
 22333  0126C6  6E2D               	movwf	(btemp+8)^0,c
 22334  0126C8  0E00               	movlw	0
 22335  0126CA  6E2E               	movwf	(btemp+9)^0,c
 22336  0126CC  0E00               	movlw	0
 22337  0126CE  6E2F               	movwf	(btemp+10)^0,c
 22338  0126D0  0E00               	movlw	0
 22339  0126D2  6E30               	movwf	(btemp+11)^0,c
 22340                           
 22341                           ;stkvar	_b @ sp[(-13)+-4]
 22342  0126D4  0EEF               	movlw	-17
 22343  0126D6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22344  0126DC  0EF0               	movlw	-16
 22345  0126DE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22346  0126E4  0EF1               	movlw	-15
 22347  0126E6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22348  0126EC  0EF2               	movlw	-14
 22349  0126EE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22350  0126F4                     l8312:
 22351                           
 22352                           ;stkvar	_a @ sp[(-13)+-8]
 22353  0126F4  0EEE               	movlw	238
 22354  0126F6  24E1               	addwf	fsr1l,w,c
 22355  0126F8  6ED9               	movwf	fsr2l,c
 22356  0126FA  0EFF               	movlw	255
 22357  0126FC  20E2               	addwfc	fsr1h,w,c
 22358  0126FE  6EDA               	movwf	fsr2h,c
 22359  012700  50DF               	movf	indf2,w,c
 22360  012702  6E30               	movwf	(btemp+11)^0,c
 22361  012704  0E80               	movlw	128
 22362  012706  1630               	andwf	(btemp+11)^0,f,c
 22363                           
 22364                           ;stkvar	_sign @ sp[(-13)+12]
 22365  012708  50E1               	movf	fsr1l,w,c
 22366  01270A  0FFF               	addlw	-1
 22367  01270C  6ED9               	movwf	fsr2l,c
 22368  01270E  50E2               	movf	fsr1h,w,c
 22369  012710  6EDA               	movwf	fsr2h,c
 22370  012712  0EFF               	movlw	255
 22371  012714  22DA               	addwfc	fsr2h,f,c
 22372  012716  5030               	movf	(btemp+11)^0,w,c
 22373  012718  1ADF               	xorwf	indf2,f,c
 22374                           
 22375                           ;stkvar	_a @ sp[(-13)+-8]
 22376  01271A  0EEE               	movlw	238
 22377  01271C  24E1               	addwf	fsr1l,w,c
 22378  01271E  6ED9               	movwf	fsr2l,c
 22379  012720  0EFF               	movlw	255
 22380  012722  20E2               	addwfc	fsr1h,w,c
 22381  012724  6EDA               	movwf	fsr2h,c
 22382  012726  50DF               	movf	indf2,w,c
 22383  012728  6E30               	movwf	(btemp+11)^0,c
 22384  01272A  90D8               	bcf	status,0,c
 22385  01272C  3430               	rlcf	(btemp+11)^0,w,c
 22386  01272E  6E2F               	movwf	(btemp+10)^0,c
 22387                           
 22388                           ;stkvar	_aexp @ sp[(-13)+11]
 22389  012730  0EFE               	movlw	-2
 22390  012732  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22391                           
 22392                           ;stkvar	_a @ sp[(-13)+-8]
 22393  012738  0EED               	movlw	237
 22394  01273A  24E1               	addwf	fsr1l,w,c
 22395  01273C  6ED9               	movwf	fsr2l,c
 22396  01273E  0EFF               	movlw	255
 22397  012740  20E2               	addwfc	fsr1h,w,c
 22398  012742  6EDA               	movwf	fsr2h,c
 22399  012744  AEDF               	btfss	indf2,7,c
 22400  012746  D002               	goto	l8320
 22401                           
 22402                           ;stkvar	_aexp @ sp[(-13)+11]
 22403  012748  0EFE               	movlw	-2
 22404  01274A  80E3               	bsf	plusw1,0,c
 22405  01274C                     l8320:
 22406                           
 22407                           ;stkvar	_aexp @ sp[(-13)+11]
 22408  01274C  0EFE               	movlw	-2
 22409  01274E  50E3               	movf	plusw1,w,c
 22410  012750  B4D8               	btfsc	status,2,c
 22411  012752  D01F               	goto	l8328
 22412                           
 22413                           ;stkvar	_aexp @ sp[(-13)+11]
 22414  012754  0EFE               	movlw	-2
 22415  012756  28E3               	incf	plusw1,w,c
 22416  012758  A4D8               	btfss	status,2,c
 22417  01275A  D018               	goto	l8326
 22418  01275C  0E00               	movlw	0
 22419  01275E  6E2D               	movwf	(btemp+8)^0,c
 22420  012760  0E00               	movlw	0
 22421  012762  6E2E               	movwf	(btemp+9)^0,c
 22422  012764  0E00               	movlw	0
 22423  012766  6E2F               	movwf	(btemp+10)^0,c
 22424  012768  0E00               	movlw	0
 22425  01276A  6E30               	movwf	(btemp+11)^0,c
 22426                           
 22427                           ;stkvar	_a @ sp[(-13)+-8]
 22428  01276C  0EEB               	movlw	-21
 22429  01276E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22430  012774  0EEC               	movlw	-20
 22431  012776  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22432  01277C  0EED               	movlw	-19
 22433  01277E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22434  012784  0EEE               	movlw	-18
 22435  012786  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22436  01278C                     l8326:
 22437                           
 22438                           ;stkvar	_a @ sp[(-13)+-8]
 22439  01278C  0EED               	movlw	-19
 22440  01278E  8EE3               	bsf	plusw1,7,c
 22441  012790  D018               	goto	l8330
 22442  012792                     l8328:
 22443  012792  0E00               	movlw	0
 22444  012794  6E2D               	movwf	(btemp+8)^0,c
 22445  012796  0E00               	movlw	0
 22446  012798  6E2E               	movwf	(btemp+9)^0,c
 22447  01279A  0E00               	movlw	0
 22448  01279C  6E2F               	movwf	(btemp+10)^0,c
 22449  01279E  0E00               	movlw	0
 22450  0127A0  6E30               	movwf	(btemp+11)^0,c
 22451                           
 22452                           ;stkvar	_a @ sp[(-13)+-8]
 22453  0127A2  0EEB               	movlw	-21
 22454  0127A4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22455  0127AA  0EEC               	movlw	-20
 22456  0127AC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22457  0127B2  0EED               	movlw	-19
 22458  0127B4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22459  0127BA  0EEE               	movlw	-18
 22460  0127BC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22461  0127C2                     l8330:
 22462                           
 22463                           ;stkvar	_aexp @ sp[(-13)+11]
 22464  0127C2  0EFE               	movlw	-2
 22465  0127C4  50E3               	movf	plusw1,w,c
 22466  0127C6  B4D8               	btfsc	status,2,c
 22467  0127C8  D004               	goto	u7780
 22468                           
 22469                           ;stkvar	_bexp @ sp[(-13)+10]
 22470  0127CA  0EFD               	movlw	-3
 22471  0127CC  50E3               	movf	plusw1,w,c
 22472  0127CE  A4D8               	btfss	status,2,c
 22473  0127D0  D009               	goto	l8338
 22474  0127D2                     u7780:
 22475  0127D2  0E00               	movlw	0
 22476  0127D4  6E25               	movwf	btemp^0,c
 22477  0127D6  0E00               	movlw	0
 22478  0127D8  6E26               	movwf	(btemp+1)^0,c
 22479  0127DA  0E00               	movlw	0
 22480  0127DC  6E27               	movwf	(btemp+2)^0,c
 22481  0127DE  0E00               	movlw	0
 22482  0127E0  6E28               	movwf	(btemp+3)^0,c
 22483  0127E2  D332               	goto	l2845
 22484  0127E4                     l8338:
 22485                           
 22486                           ;stkvar	_b @ sp[(-13)+-4]
 22487  0127E4  0EEF               	movlw	-17
 22488  0127E6  006F FF8C  F030    	movff	plusw1,btemp+11
 22489                           
 22490                           ;stkvar	_a @ sp[(-13)+-8]
 22491  0127EC  0EED               	movlw	237
 22492  0127EE  24E1               	addwf	fsr1l,w,c
 22493  0127F0  6ED9               	movwf	fsr2l,c
 22494  0127F2  0EFF               	movlw	255
 22495  0127F4  20E2               	addwfc	fsr1h,w,c
 22496  0127F6  6EDA               	movwf	fsr2h,c
 22497  0127F8  50DF               	movf	indf2,w,c
 22498  0127FA  0230               	mulwf	(btemp+11)^0,c
 22499                           
 22500                           ;stkvar	_temp @ sp[(-13)+8]
 22501  0127FC  0EFB               	movlw	-5
 22502  0127FE  006F FFCF FFE3     	movff	prodl,plusw1
 22503  012804  0EFC               	movlw	-4
 22504  012806  006F FFD3 FFE3     	movff	prodh,plusw1
 22505                           
 22506                           ;stkvar	_temp @ sp[(-13)+8]
 22507  01280C  0EFB               	movlw	-5
 22508  01280E  006F FF8C  F030    	movff	plusw1,btemp+11
 22509  012814  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22510  01281A  6A2A               	clrf	(btemp+5)^0,c
 22511  01281C  6A2B               	clrf	(btemp+6)^0,c
 22512  01281E  6A2C               	clrf	(btemp+7)^0,c
 22513                           
 22514                           ;stkvar	_grs @ sp[(-13)+4]
 22515  012820  0EF7               	movlw	-9
 22516  012822  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22517  012828  0EF8               	movlw	-8
 22518  01282A  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22519  012830  0EF9               	movlw	-7
 22520  012832  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22521  012838  0EFA               	movlw	-6
 22522  01283A  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22523                           
 22524                           ;stkvar	_temp @ sp[(-13)+8]
 22525  012840  0EFC               	movlw	252
 22526  012842  24E1               	addwf	fsr1l,w,c
 22527  012844  6ED9               	movwf	fsr2l,c
 22528  012846  0EFF               	movlw	255
 22529  012848  20E2               	addwfc	fsr1h,w,c
 22530  01284A  6EDA               	movwf	fsr2h,c
 22531  01284C  50DF               	movf	indf2,w,c
 22532  01284E  6E30               	movwf	(btemp+11)^0,c
 22533  012850  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22534  012856  6A2A               	clrf	(btemp+5)^0,c
 22535  012858  6A2B               	clrf	(btemp+6)^0,c
 22536  01285A  6A2C               	clrf	(btemp+7)^0,c
 22537                           
 22538                           ;stkvar	_prod @ sp[(-13)+0]
 22539  01285C  0EF3               	movlw	-13
 22540  01285E  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22541  012864  0EF4               	movlw	-12
 22542  012866  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22543  01286C  0EF5               	movlw	-11
 22544  01286E  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22545  012874  0EF6               	movlw	-10
 22546  012876  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22547                           
 22548                           ;stkvar	_b @ sp[(-13)+-4]
 22549  01287C  0EF0               	movlw	240
 22550  01287E  24E1               	addwf	fsr1l,w,c
 22551  012880  6ED9               	movwf	fsr2l,c
 22552  012882  0EFF               	movlw	255
 22553  012884  20E2               	addwfc	fsr1h,w,c
 22554  012886  6EDA               	movwf	fsr2h,c
 22555  012888  50DF               	movf	indf2,w,c
 22556  01288A  6E30               	movwf	(btemp+11)^0,c
 22557                           
 22558                           ;stkvar	_a @ sp[(-13)+-8]
 22559  01288C  0EEC               	movlw	236
 22560  01288E  24E1               	addwf	fsr1l,w,c
 22561  012890  6ED9               	movwf	fsr2l,c
 22562  012892  0EFF               	movlw	255
 22563  012894  20E2               	addwfc	fsr1h,w,c
 22564  012896  6EDA               	movwf	fsr2h,c
 22565  012898  50DF               	movf	indf2,w,c
 22566  01289A  0230               	mulwf	(btemp+11)^0,c
 22567                           
 22568                           ;stkvar	_temp @ sp[(-13)+8]
 22569  01289C  0EFB               	movlw	-5
 22570  01289E  006F FFCF FFE3     	movff	prodl,plusw1
 22571  0128A4  0EFC               	movlw	-4
 22572  0128A6  006F FFD3 FFE3     	movff	prodh,plusw1
 22573                           
 22574                           ;stkvar	_grs @ sp[(-13)+4]
 22575  0128AC  50E1               	movf	fsr1l,w,c
 22576  0128AE  0FF7               	addlw	-9
 22577  0128B0  6ED9               	movwf	fsr2l,c
 22578  0128B2  50E2               	movf	fsr1h,w,c
 22579  0128B4  6EDA               	movwf	fsr2h,c
 22580  0128B6  0EFF               	movlw	255
 22581  0128B8  22DA               	addwfc	fsr2h,f,c
 22582                           
 22583                           ;stkvar	_temp @ sp[(-13)+8]
 22584  0128BA  0EFB               	movlw	-5
 22585  0128BC  50E3               	movf	plusw1,w,c
 22586  0128BE  26DE               	addwf	postinc2,f,c
 22587  0128C0  0E00               	movlw	0
 22588  0128C2  22DE               	addwfc	postinc2,f,c
 22589  0128C4  22DE               	addwfc	postinc2,f,c
 22590  0128C6  22DE               	addwfc	postinc2,f,c
 22591                           
 22592                           ;stkvar	_prod @ sp[(-13)+0]
 22593  0128C8  50E1               	movf	fsr1l,w,c
 22594  0128CA  0FF3               	addlw	-13
 22595  0128CC  6ED9               	movwf	fsr2l,c
 22596  0128CE  50E2               	movf	fsr1h,w,c
 22597  0128D0  6EDA               	movwf	fsr2h,c
 22598  0128D2  0EFF               	movlw	255
 22599  0128D4  22DA               	addwfc	fsr2h,f,c
 22600                           
 22601                           ;stkvar	_temp @ sp[(-13)+8]
 22602  0128D6  0EFC               	movlw	252
 22603  0128D8  24E1               	addwf	fsr1l,w,c
 22604  0128DA  6EE9               	movwf	fsr0l,c
 22605  0128DC  0EFF               	movlw	255
 22606  0128DE  20E2               	addwfc	fsr1h,w,c
 22607  0128E0  6EEA               	movwf	fsr0h,c
 22608  0128E2  50EF               	movf	indf0,w,c
 22609  0128E4  26DE               	addwf	postinc2,f,c
 22610  0128E6  0E00               	movlw	0
 22611  0128E8  22DE               	addwfc	postinc2,f,c
 22612  0128EA  22DE               	addwfc	postinc2,f,c
 22613  0128EC  22DE               	addwfc	postinc2,f,c
 22614                           
 22615                           ;stkvar	_b @ sp[(-13)+-4]
 22616  0128EE  0EF1               	movlw	241
 22617  0128F0  24E1               	addwf	fsr1l,w,c
 22618  0128F2  6ED9               	movwf	fsr2l,c
 22619  0128F4  0EFF               	movlw	255
 22620  0128F6  20E2               	addwfc	fsr1h,w,c
 22621  0128F8  6EDA               	movwf	fsr2h,c
 22622  0128FA  50DF               	movf	indf2,w,c
 22623  0128FC  6E30               	movwf	(btemp+11)^0,c
 22624                           
 22625                           ;stkvar	_a @ sp[(-13)+-8]
 22626  0128FE  0EEB               	movlw	-21
 22627  012900  50E3               	movf	plusw1,w,c
 22628  012902  0230               	mulwf	(btemp+11)^0,c
 22629                           
 22630                           ;stkvar	_temp @ sp[(-13)+8]
 22631  012904  0EFB               	movlw	-5
 22632  012906  006F FFCF FFE3     	movff	prodl,plusw1
 22633  01290C  0EFC               	movlw	-4
 22634  01290E  006F FFD3 FFE3     	movff	prodh,plusw1
 22635                           
 22636                           ;stkvar	_grs @ sp[(-13)+4]
 22637  012914  50E1               	movf	fsr1l,w,c
 22638  012916  0FF7               	addlw	-9
 22639  012918  6ED9               	movwf	fsr2l,c
 22640  01291A  50E2               	movf	fsr1h,w,c
 22641  01291C  6EDA               	movwf	fsr2h,c
 22642  01291E  0EFF               	movlw	255
 22643  012920  22DA               	addwfc	fsr2h,f,c
 22644                           
 22645                           ;stkvar	_temp @ sp[(-13)+8]
 22646  012922  0EFB               	movlw	-5
 22647  012924  50E3               	movf	plusw1,w,c
 22648  012926  26DE               	addwf	postinc2,f,c
 22649  012928  0E00               	movlw	0
 22650  01292A  22DE               	addwfc	postinc2,f,c
 22651  01292C  22DE               	addwfc	postinc2,f,c
 22652  01292E  22DE               	addwfc	postinc2,f,c
 22653                           
 22654                           ;stkvar	_prod @ sp[(-13)+0]
 22655  012930  50E1               	movf	fsr1l,w,c
 22656  012932  0FF3               	addlw	-13
 22657  012934  6ED9               	movwf	fsr2l,c
 22658  012936  50E2               	movf	fsr1h,w,c
 22659  012938  6EDA               	movwf	fsr2h,c
 22660  01293A  0EFF               	movlw	255
 22661  01293C  22DA               	addwfc	fsr2h,f,c
 22662                           
 22663                           ;stkvar	_temp @ sp[(-13)+8]
 22664  01293E  0EFC               	movlw	252
 22665  012940  24E1               	addwf	fsr1l,w,c
 22666  012942  6EE9               	movwf	fsr0l,c
 22667  012944  0EFF               	movlw	255
 22668  012946  20E2               	addwfc	fsr1h,w,c
 22669  012948  6EEA               	movwf	fsr0h,c
 22670  01294A  50EF               	movf	indf0,w,c
 22671  01294C  26DE               	addwf	postinc2,f,c
 22672  01294E  0E00               	movlw	0
 22673  012950  22DE               	addwfc	postinc2,f,c
 22674  012952  22DE               	addwfc	postinc2,f,c
 22675  012954  22DE               	addwfc	postinc2,f,c
 22676                           
 22677                           ;stkvar	_grs @ sp[(-13)+4]
 22678  012956  50E1               	movf	fsr1l,w,c
 22679  012958  0FF7               	addlw	-9
 22680  01295A  6ED9               	movwf	fsr2l,c
 22681  01295C  50E2               	movf	fsr1h,w,c
 22682  01295E  6EDA               	movwf	fsr2h,c
 22683  012960  0EFF               	movlw	255
 22684  012962  22DA               	addwfc	fsr2h,f,c
 22685  012964  0E08               	movlw	8
 22686  012966                     u7795:
 22687  012966  90D8               	bcf	status,0,c
 22688  012968  36DE               	rlcf	postinc2,f,c
 22689  01296A  36DE               	rlcf	postinc2,f,c
 22690  01296C  36DE               	rlcf	postinc2,f,c
 22691  01296E  36DD               	rlcf	postdec2,f,c
 22692  012970  52DD               	movf	postdec2,f,c
 22693  012972  52DD               	movf	postdec2,f,c
 22694  012974  2EE8               	decfsz	wreg,f,c
 22695  012976  D7F7               	goto	u7795
 22696                           
 22697                           ;stkvar	_b @ sp[(-13)+-4]
 22698  012978  0EF0               	movlw	240
 22699  01297A  24E1               	addwf	fsr1l,w,c
 22700  01297C  6ED9               	movwf	fsr2l,c
 22701  01297E  0EFF               	movlw	255
 22702  012980  20E2               	addwfc	fsr1h,w,c
 22703  012982  6EDA               	movwf	fsr2h,c
 22704  012984  50DF               	movf	indf2,w,c
 22705  012986  6E30               	movwf	(btemp+11)^0,c
 22706                           
 22707                           ;stkvar	_a @ sp[(-13)+-8]
 22708  012988  0EEB               	movlw	-21
 22709  01298A  50E3               	movf	plusw1,w,c
 22710  01298C  0230               	mulwf	(btemp+11)^0,c
 22711                           
 22712                           ;stkvar	_temp @ sp[(-13)+8]
 22713  01298E  0EFB               	movlw	-5
 22714  012990  006F FFCF FFE3     	movff	prodl,plusw1
 22715  012996  0EFC               	movlw	-4
 22716  012998  006F FFD3 FFE3     	movff	prodh,plusw1
 22717                           
 22718                           ;stkvar	_temp @ sp[(-13)+8]
 22719  01299E  0EFB               	movlw	-5
 22720  0129A0  006F FF8C  F02F    	movff	plusw1,btemp+10
 22721  0129A6  0EFC               	movlw	-4
 22722  0129A8  006F FF8C  F030    	movff	plusw1,btemp+11
 22723                           
 22724                           ;stkvar	_grs @ sp[(-13)+4]
 22725  0129AE  50E1               	movf	fsr1l,w,c
 22726  0129B0  0FF7               	addlw	-9
 22727  0129B2  6ED9               	movwf	fsr2l,c
 22728  0129B4  50E2               	movf	fsr1h,w,c
 22729  0129B6  6EDA               	movwf	fsr2h,c
 22730  0129B8  0EFF               	movlw	255
 22731  0129BA  22DA               	addwfc	fsr2h,f,c
 22732  0129BC  502F               	movf	(btemp+10)^0,w,c
 22733  0129BE  26DE               	addwf	postinc2,f,c
 22734  0129C0  5030               	movf	(btemp+11)^0,w,c
 22735  0129C2  22DE               	addwfc	postinc2,f,c
 22736  0129C4  0E00               	movlw	0
 22737  0129C6  22DE               	addwfc	postinc2,f,c
 22738  0129C8  22DE               	addwfc	postinc2,f,c
 22739                           
 22740                           ;stkvar	_b @ sp[(-13)+-4]
 22741  0129CA  0EEF               	movlw	-17
 22742  0129CC  006F FF8C  F030    	movff	plusw1,btemp+11
 22743                           
 22744                           ;stkvar	_a @ sp[(-13)+-8]
 22745  0129D2  0EEC               	movlw	236
 22746  0129D4  24E1               	addwf	fsr1l,w,c
 22747  0129D6  6ED9               	movwf	fsr2l,c
 22748  0129D8  0EFF               	movlw	255
 22749  0129DA  20E2               	addwfc	fsr1h,w,c
 22750  0129DC  6EDA               	movwf	fsr2h,c
 22751  0129DE  50DF               	movf	indf2,w,c
 22752  0129E0  0230               	mulwf	(btemp+11)^0,c
 22753                           
 22754                           ;stkvar	_temp @ sp[(-13)+8]
 22755  0129E2  0EFB               	movlw	-5
 22756  0129E4  006F FFCF FFE3     	movff	prodl,plusw1
 22757  0129EA  0EFC               	movlw	-4
 22758  0129EC  006F FFD3 FFE3     	movff	prodh,plusw1
 22759                           
 22760                           ;stkvar	_temp @ sp[(-13)+8]
 22761  0129F2  0EFB               	movlw	-5
 22762  0129F4  006F FF8C  F02F    	movff	plusw1,btemp+10
 22763  0129FA  0EFC               	movlw	-4
 22764  0129FC  006F FF8C  F030    	movff	plusw1,btemp+11
 22765                           
 22766                           ;stkvar	_grs @ sp[(-13)+4]
 22767  012A02  50E1               	movf	fsr1l,w,c
 22768  012A04  0FF7               	addlw	-9
 22769  012A06  6ED9               	movwf	fsr2l,c
 22770  012A08  50E2               	movf	fsr1h,w,c
 22771  012A0A  6EDA               	movwf	fsr2h,c
 22772  012A0C  0EFF               	movlw	255
 22773  012A0E  22DA               	addwfc	fsr2h,f,c
 22774  012A10  502F               	movf	(btemp+10)^0,w,c
 22775  012A12  26DE               	addwf	postinc2,f,c
 22776  012A14  5030               	movf	(btemp+11)^0,w,c
 22777  012A16  22DE               	addwfc	postinc2,f,c
 22778  012A18  0E00               	movlw	0
 22779  012A1A  22DE               	addwfc	postinc2,f,c
 22780  012A1C  22DE               	addwfc	postinc2,f,c
 22781                           
 22782                           ;stkvar	_grs @ sp[(-13)+4]
 22783  012A1E  50E1               	movf	fsr1l,w,c
 22784  012A20  0FF7               	addlw	-9
 22785  012A22  6ED9               	movwf	fsr2l,c
 22786  012A24  50E2               	movf	fsr1h,w,c
 22787  012A26  6EDA               	movwf	fsr2h,c
 22788  012A28  0EFF               	movlw	255
 22789  012A2A  22DA               	addwfc	fsr2h,f,c
 22790  012A2C  0E08               	movlw	8
 22791  012A2E                     u7805:
 22792  012A2E  90D8               	bcf	status,0,c
 22793  012A30  36DE               	rlcf	postinc2,f,c
 22794  012A32  36DE               	rlcf	postinc2,f,c
 22795  012A34  36DE               	rlcf	postinc2,f,c
 22796  012A36  36DD               	rlcf	postdec2,f,c
 22797  012A38  52DD               	movf	postdec2,f,c
 22798  012A3A  52DD               	movf	postdec2,f,c
 22799  012A3C  2EE8               	decfsz	wreg,f,c
 22800  012A3E  D7F7               	goto	u7805
 22801                           
 22802                           ;stkvar	_b @ sp[(-13)+-4]
 22803  012A40  0EEF               	movlw	-17
 22804  012A42  006F FF8C  F030    	movff	plusw1,btemp+11
 22805                           
 22806                           ;stkvar	_a @ sp[(-13)+-8]
 22807  012A48  0EEB               	movlw	-21
 22808  012A4A  50E3               	movf	plusw1,w,c
 22809  012A4C  0230               	mulwf	(btemp+11)^0,c
 22810                           
 22811                           ;stkvar	_temp @ sp[(-13)+8]
 22812  012A4E  0EFB               	movlw	-5
 22813  012A50  006F FFCF FFE3     	movff	prodl,plusw1
 22814  012A56  0EFC               	movlw	-4
 22815  012A58  006F FFD3 FFE3     	movff	prodh,plusw1
 22816                           
 22817                           ;stkvar	_temp @ sp[(-13)+8]
 22818  012A5E  0EFB               	movlw	-5
 22819  012A60  006F FF8C  F02F    	movff	plusw1,btemp+10
 22820  012A66  0EFC               	movlw	-4
 22821  012A68  006F FF8C  F030    	movff	plusw1,btemp+11
 22822                           
 22823                           ;stkvar	_grs @ sp[(-13)+4]
 22824  012A6E  50E1               	movf	fsr1l,w,c
 22825  012A70  0FF7               	addlw	-9
 22826  012A72  6ED9               	movwf	fsr2l,c
 22827  012A74  50E2               	movf	fsr1h,w,c
 22828  012A76  6EDA               	movwf	fsr2h,c
 22829  012A78  0EFF               	movlw	255
 22830  012A7A  22DA               	addwfc	fsr2h,f,c
 22831  012A7C  502F               	movf	(btemp+10)^0,w,c
 22832  012A7E  26DE               	addwf	postinc2,f,c
 22833  012A80  5030               	movf	(btemp+11)^0,w,c
 22834  012A82  22DE               	addwfc	postinc2,f,c
 22835  012A84  0E00               	movlw	0
 22836  012A86  22DE               	addwfc	postinc2,f,c
 22837  012A88  22DE               	addwfc	postinc2,f,c
 22838                           
 22839                           ;stkvar	_b @ sp[(-13)+-4]
 22840  012A8A  0EF0               	movlw	240
 22841  012A8C  24E1               	addwf	fsr1l,w,c
 22842  012A8E  6ED9               	movwf	fsr2l,c
 22843  012A90  0EFF               	movlw	255
 22844  012A92  20E2               	addwfc	fsr1h,w,c
 22845  012A94  6EDA               	movwf	fsr2h,c
 22846  012A96  50DF               	movf	indf2,w,c
 22847  012A98  6E30               	movwf	(btemp+11)^0,c
 22848                           
 22849                           ;stkvar	_a @ sp[(-13)+-8]
 22850  012A9A  0EED               	movlw	237
 22851  012A9C  24E1               	addwf	fsr1l,w,c
 22852  012A9E  6ED9               	movwf	fsr2l,c
 22853  012AA0  0EFF               	movlw	255
 22854  012AA2  20E2               	addwfc	fsr1h,w,c
 22855  012AA4  6EDA               	movwf	fsr2h,c
 22856  012AA6  50DF               	movf	indf2,w,c
 22857  012AA8  0230               	mulwf	(btemp+11)^0,c
 22858                           
 22859                           ;stkvar	_temp @ sp[(-13)+8]
 22860  012AAA  0EFB               	movlw	-5
 22861  012AAC  006F FFCF FFE3     	movff	prodl,plusw1
 22862  012AB2  0EFC               	movlw	-4
 22863  012AB4  006F FFD3 FFE3     	movff	prodh,plusw1
 22864                           
 22865                           ;stkvar	_temp @ sp[(-13)+8]
 22866  012ABA  0EFB               	movlw	-5
 22867  012ABC  006F FF8C  F02F    	movff	plusw1,btemp+10
 22868  012AC2  0EFC               	movlw	-4
 22869  012AC4  006F FF8C  F030    	movff	plusw1,btemp+11
 22870                           
 22871                           ;stkvar	_prod @ sp[(-13)+0]
 22872  012ACA  50E1               	movf	fsr1l,w,c
 22873  012ACC  0FF3               	addlw	-13
 22874  012ACE  6ED9               	movwf	fsr2l,c
 22875  012AD0  50E2               	movf	fsr1h,w,c
 22876  012AD2  6EDA               	movwf	fsr2h,c
 22877  012AD4  0EFF               	movlw	255
 22878  012AD6  22DA               	addwfc	fsr2h,f,c
 22879  012AD8  502F               	movf	(btemp+10)^0,w,c
 22880  012ADA  26DE               	addwf	postinc2,f,c
 22881  012ADC  5030               	movf	(btemp+11)^0,w,c
 22882  012ADE  22DE               	addwfc	postinc2,f,c
 22883  012AE0  0E00               	movlw	0
 22884  012AE2  22DE               	addwfc	postinc2,f,c
 22885  012AE4  22DE               	addwfc	postinc2,f,c
 22886                           
 22887                           ;stkvar	_b @ sp[(-13)+-4]
 22888  012AE6  0EF1               	movlw	241
 22889  012AE8  24E1               	addwf	fsr1l,w,c
 22890  012AEA  6ED9               	movwf	fsr2l,c
 22891  012AEC  0EFF               	movlw	255
 22892  012AEE  20E2               	addwfc	fsr1h,w,c
 22893  012AF0  6EDA               	movwf	fsr2h,c
 22894  012AF2  50DF               	movf	indf2,w,c
 22895  012AF4  6E30               	movwf	(btemp+11)^0,c
 22896                           
 22897                           ;stkvar	_a @ sp[(-13)+-8]
 22898  012AF6  0EEC               	movlw	236
 22899  012AF8  24E1               	addwf	fsr1l,w,c
 22900  012AFA  6ED9               	movwf	fsr2l,c
 22901  012AFC  0EFF               	movlw	255
 22902  012AFE  20E2               	addwfc	fsr1h,w,c
 22903  012B00  6EDA               	movwf	fsr2h,c
 22904  012B02  50DF               	movf	indf2,w,c
 22905  012B04  0230               	mulwf	(btemp+11)^0,c
 22906                           
 22907                           ;stkvar	_temp @ sp[(-13)+8]
 22908  012B06  0EFB               	movlw	-5
 22909  012B08  006F FFCF FFE3     	movff	prodl,plusw1
 22910  012B0E  0EFC               	movlw	-4
 22911  012B10  006F FFD3 FFE3     	movff	prodh,plusw1
 22912                           
 22913                           ;stkvar	_temp @ sp[(-13)+8]
 22914  012B16  0EFB               	movlw	-5
 22915  012B18  006F FF8C  F02F    	movff	plusw1,btemp+10
 22916  012B1E  0EFC               	movlw	-4
 22917  012B20  006F FF8C  F030    	movff	plusw1,btemp+11
 22918                           
 22919                           ;stkvar	_prod @ sp[(-13)+0]
 22920  012B26  50E1               	movf	fsr1l,w,c
 22921  012B28  0FF3               	addlw	-13
 22922  012B2A  6ED9               	movwf	fsr2l,c
 22923  012B2C  50E2               	movf	fsr1h,w,c
 22924  012B2E  6EDA               	movwf	fsr2h,c
 22925  012B30  0EFF               	movlw	255
 22926  012B32  22DA               	addwfc	fsr2h,f,c
 22927  012B34  502F               	movf	(btemp+10)^0,w,c
 22928  012B36  26DE               	addwf	postinc2,f,c
 22929  012B38  5030               	movf	(btemp+11)^0,w,c
 22930  012B3A  22DE               	addwfc	postinc2,f,c
 22931  012B3C  0E00               	movlw	0
 22932  012B3E  22DE               	addwfc	postinc2,f,c
 22933  012B40  22DE               	addwfc	postinc2,f,c
 22934                           
 22935                           ;stkvar	_b @ sp[(-13)+-4]
 22936  012B42  0EF1               	movlw	241
 22937  012B44  24E1               	addwf	fsr1l,w,c
 22938  012B46  6ED9               	movwf	fsr2l,c
 22939  012B48  0EFF               	movlw	255
 22940  012B4A  20E2               	addwfc	fsr1h,w,c
 22941  012B4C  6EDA               	movwf	fsr2h,c
 22942  012B4E  50DF               	movf	indf2,w,c
 22943  012B50  6E30               	movwf	(btemp+11)^0,c
 22944                           
 22945                           ;stkvar	_a @ sp[(-13)+-8]
 22946  012B52  0EED               	movlw	237
 22947  012B54  24E1               	addwf	fsr1l,w,c
 22948  012B56  6ED9               	movwf	fsr2l,c
 22949  012B58  0EFF               	movlw	255
 22950  012B5A  20E2               	addwfc	fsr1h,w,c
 22951  012B5C  6EDA               	movwf	fsr2h,c
 22952  012B5E  50DF               	movf	indf2,w,c
 22953  012B60  0230               	mulwf	(btemp+11)^0,c
 22954                           
 22955                           ;stkvar	_temp @ sp[(-13)+8]
 22956  012B62  0EFB               	movlw	-5
 22957  012B64  006F FFCF FFE3     	movff	prodl,plusw1
 22958  012B6A  0EFC               	movlw	-4
 22959  012B6C  006F FFD3 FFE3     	movff	prodh,plusw1
 22960                           
 22961                           ;stkvar	_temp @ sp[(-13)+8]
 22962  012B72  0EFB               	movlw	-5
 22963  012B74  006F FF8C  F02F    	movff	plusw1,btemp+10
 22964  012B7A  0EFC               	movlw	-4
 22965  012B7C  006F FF8C  F030    	movff	plusw1,btemp+11
 22966  012B82  502F               	movf	(btemp+10)^0,w,c
 22967  012B84  6E29               	movwf	(btemp+4)^0,c
 22968  012B86  5030               	movf	(btemp+11)^0,w,c
 22969  012B88  6E2A               	movwf	(btemp+5)^0,c
 22970  012B8A  6A2B               	clrf	(btemp+6)^0,c
 22971  012B8C  6A2C               	clrf	(btemp+7)^0,c
 22972  012B8E  0060  F0AC  F02C   	movff	btemp+6,btemp+7
 22973  012B94  0060  F0A8  F02B   	movff	btemp+5,btemp+6
 22974  012B9A  0060  F0A4  F02A   	movff	btemp+4,btemp+5
 22975  012BA0  6A29               	clrf	(btemp+4)^0,c
 22976                           
 22977                           ;stkvar	_prod @ sp[(-13)+0]
 22978  012BA2  50E1               	movf	fsr1l,w,c
 22979  012BA4  0FF3               	addlw	-13
 22980  012BA6  6ED9               	movwf	fsr2l,c
 22981  012BA8  50E2               	movf	fsr1h,w,c
 22982  012BAA  6EDA               	movwf	fsr2h,c
 22983  012BAC  0EFF               	movlw	255
 22984  012BAE  22DA               	addwfc	fsr2h,f,c
 22985  012BB0  5029               	movf	(btemp+4)^0,w,c
 22986  012BB2  26DE               	addwf	postinc2,f,c
 22987  012BB4  502A               	movf	(btemp+5)^0,w,c
 22988  012BB6  22DE               	addwfc	postinc2,f,c
 22989  012BB8  502B               	movf	(btemp+6)^0,w,c
 22990  012BBA  22DE               	addwfc	postinc2,f,c
 22991  012BBC  502C               	movf	(btemp+7)^0,w,c
 22992  012BBE  22DE               	addwfc	postinc2,f,c
 22993                           
 22994                           ;stkvar	_prod @ sp[(-13)+0]
 22995  012BC0  50E1               	movf	fsr1l,w,c
 22996  012BC2  0FF3               	addlw	-13
 22997  012BC4  6ED9               	movwf	fsr2l,c
 22998  012BC6  50E2               	movf	fsr1h,w,c
 22999  012BC8  6EDA               	movwf	fsr2h,c
 23000  012BCA  0EFF               	movlw	255
 23001  012BCC  22DA               	addwfc	fsr2h,f,c
 23002                           
 23003                           ;stkvar	_grs @ sp[(-13)+4]
 23004  012BCE  0EFA               	movlw	250
 23005  012BD0  24E1               	addwf	fsr1l,w,c
 23006  012BD2  6EE9               	movwf	fsr0l,c
 23007  012BD4  0EFF               	movlw	255
 23008  012BD6  20E2               	addwfc	fsr1h,w,c
 23009  012BD8  6EEA               	movwf	fsr0h,c
 23010  012BDA  50EF               	movf	indf0,w,c
 23011  012BDC  26DE               	addwf	postinc2,f,c
 23012  012BDE  0E00               	movlw	0
 23013  012BE0  22DE               	addwfc	postinc2,f,c
 23014  012BE2  22DE               	addwfc	postinc2,f,c
 23015  012BE4  22DE               	addwfc	postinc2,f,c
 23016                           
 23017                           ;stkvar	_grs @ sp[(-13)+4]
 23018  012BE6  50E1               	movf	fsr1l,w,c
 23019  012BE8  0FF7               	addlw	-9
 23020  012BEA  6ED9               	movwf	fsr2l,c
 23021  012BEC  50E2               	movf	fsr1h,w,c
 23022  012BEE  6EDA               	movwf	fsr2h,c
 23023  012BF0  0EFF               	movlw	255
 23024  012BF2  22DA               	addwfc	fsr2h,f,c
 23025  012BF4  0E08               	movlw	8
 23026  012BF6                     u7815:
 23027  012BF6  90D8               	bcf	status,0,c
 23028  012BF8  36DE               	rlcf	postinc2,f,c
 23029  012BFA  36DE               	rlcf	postinc2,f,c
 23030  012BFC  36DE               	rlcf	postinc2,f,c
 23031  012BFE  36DD               	rlcf	postdec2,f,c
 23032  012C00  52DD               	movf	postdec2,f,c
 23033  012C02  52DD               	movf	postdec2,f,c
 23034  012C04  2EE8               	decfsz	wreg,f,c
 23035  012C06  D7F7               	goto	u7815
 23036  012C08  0E82               	movlw	130
 23037  012C0A  6E2F               	movwf	(btemp+10)^0,c
 23038  012C0C  0EFF               	movlw	255
 23039  012C0E  6E30               	movwf	(btemp+11)^0,c
 23040                           
 23041                           ;stkvar	_bexp @ sp[(-13)+10]
 23042  012C10  0EFD               	movlw	-3
 23043  012C12  50E3               	movf	plusw1,w,c
 23044  012C14  6E2D               	movwf	(btemp+8)^0,c
 23045  012C16  6A2E               	clrf	(btemp+9)^0,c
 23046                           
 23047                           ;stkvar	_aexp @ sp[(-13)+11]
 23048  012C18  0EFE               	movlw	-2
 23049  012C1A  50E3               	movf	plusw1,w,c
 23050  012C1C  262D               	addwf	(btemp+8)^0,f,c
 23051  012C1E  0E00               	movlw	0
 23052  012C20  222E               	addwfc	(btemp+9)^0,f,c
 23053  012C22  502F               	movf	(btemp+10)^0,w,c
 23054  012C24  262D               	addwf	(btemp+8)^0,f,c
 23055  012C26  5030               	movf	(btemp+11)^0,w,c
 23056  012C28  222E               	addwfc	(btemp+9)^0,f,c
 23057                           
 23058                           ;stkvar	_temp @ sp[(-13)+8]
 23059  012C2A  0EFB               	movlw	-5
 23060  012C2C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23061  012C32  0EFC               	movlw	-4
 23062  012C34  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23063  012C3A  D021               	goto	l8400
 23064  012C3C                     l8390:
 23065                           
 23066                           ;stkvar	_prod @ sp[(-13)+0]
 23067  012C3C  90D8               	bcf	status,0,c
 23068  012C3E  0EF3               	movlw	-13
 23069  012C40  36E3               	rlcf	plusw1,f,c
 23070  012C42  0EF4               	movlw	-12
 23071  012C44  36E3               	rlcf	plusw1,f,c
 23072  012C46  0EF5               	movlw	-11
 23073  012C48  36E3               	rlcf	plusw1,f,c
 23074  012C4A  0EF6               	movlw	-10
 23075  012C4C  36E3               	rlcf	plusw1,f,c
 23076                           
 23077                           ;stkvar	_grs @ sp[(-13)+4]
 23078  012C4E  0EFA               	movlw	-6
 23079  012C50  AEE3               	btfss	plusw1,7,c
 23080  012C52  D002               	goto	l8396
 23081                           
 23082                           ;stkvar	_prod @ sp[(-13)+0]
 23083  012C54  0EF3               	movlw	-13
 23084  012C56  80E3               	bsf	plusw1,0,c
 23085  012C58                     l8396:
 23086                           
 23087                           ;stkvar	_grs @ sp[(-13)+4]
 23088  012C58  90D8               	bcf	status,0,c
 23089  012C5A  0EF7               	movlw	-9
 23090  012C5C  36E3               	rlcf	plusw1,f,c
 23091  012C5E  0EF8               	movlw	-8
 23092  012C60  36E3               	rlcf	plusw1,f,c
 23093  012C62  0EF9               	movlw	-7
 23094  012C64  36E3               	rlcf	plusw1,f,c
 23095  012C66  0EFA               	movlw	-6
 23096  012C68  36E3               	rlcf	plusw1,f,c
 23097                           
 23098                           ;stkvar	_temp @ sp[(-13)+8]
 23099  012C6A  50E1               	movf	fsr1l,w,c
 23100  012C6C  0FFB               	addlw	-5
 23101  012C6E  6ED9               	movwf	fsr2l,c
 23102  012C70  50E2               	movf	fsr1h,w,c
 23103  012C72  6EDA               	movwf	fsr2h,c
 23104  012C74  0EFF               	movlw	255
 23105  012C76  22DA               	addwfc	fsr2h,f,c
 23106  012C78  06DE               	decf	postinc2,f,c
 23107  012C7A  0E00               	movlw	0
 23108  012C7C  5ADD               	subwfb	postdec2,f,c
 23109  012C7E                     l8400:
 23110                           
 23111                           ;stkvar	_prod @ sp[(-13)+0]
 23112  012C7E  0EF5               	movlw	-11
 23113  012C80  AEE3               	btfss	plusw1,7,c
 23114  012C82  D7DC               	goto	l8390
 23115                           
 23116                           ;stkvar	_aexp @ sp[(-13)+11]
 23117  012C84  0EFE               	movlw	-2
 23118  012C86  6AE3               	clrf	plusw1,c
 23119                           
 23120                           ;stkvar	_grs @ sp[(-13)+4]
 23121  012C88  0EFA               	movlw	-6
 23122  012C8A  AEE3               	btfss	plusw1,7,c
 23123  012C8C  D020               	goto	l8414
 23124                           
 23125                           ;stkvar	_grs @ sp[(-13)+4]
 23126  012C8E  50E1               	movf	fsr1l,w,c
 23127  012C90  0FF7               	addlw	-9
 23128  012C92  6ED9               	movwf	fsr2l,c
 23129  012C94  50E2               	movf	fsr1h,w,c
 23130  012C96  6EDA               	movwf	fsr2h,c
 23131  012C98  0EFF               	movlw	255
 23132  012C9A  22DA               	addwfc	fsr2h,f,c
 23133  012C9C  0EFF               	movlw	255
 23134  012C9E  14DE               	andwf	postinc2,w,c
 23135  012CA0  6E2D               	movwf	(btemp+8)^0,c
 23136  012CA2  0EFF               	movlw	255
 23137  012CA4  14DE               	andwf	postinc2,w,c
 23138  012CA6  6E2E               	movwf	(btemp+9)^0,c
 23139  012CA8  0EFF               	movlw	255
 23140  012CAA  14DE               	andwf	postinc2,w,c
 23141  012CAC  6E2F               	movwf	(btemp+10)^0,c
 23142  012CAE  0E7F               	movlw	127
 23143  012CB0  14DE               	andwf	postinc2,w,c
 23144  012CB2  6E30               	movwf	(btemp+11)^0,c
 23145  012CB4  502D               	movf	(btemp+8)^0,w,c
 23146  012CB6  102E               	iorwf	(btemp+9)^0,w,c
 23147  012CB8  102F               	iorwf	(btemp+10)^0,w,c
 23148  012CBA  1030               	iorwf	(btemp+11)^0,w,c
 23149  012CBC  B4D8               	btfsc	status,2,c
 23150  012CBE  D004               	goto	l8410
 23151  012CC0                     u7850:
 23152                           
 23153                           ;stkvar	_aexp @ sp[(-13)+11]
 23154  012CC0  0EFE               	movlw	-2
 23155  012CC2  6AE3               	clrf	plusw1,c
 23156  012CC4  2AE3               	incf	plusw1,f,c
 23157  012CC6  D003               	goto	l8414
 23158  012CC8                     l8410:
 23159                           
 23160                           ;stkvar	_prod @ sp[(-13)+0]
 23161  012CC8  0EF3               	movlw	-13
 23162  012CCA  B0E3               	btfsc	plusw1,0,c
 23163  012CCC  D7F9               	goto	u7850
 23164  012CCE                     l8414:
 23165                           
 23166                           ;stkvar	_aexp @ sp[(-13)+11]
 23167  012CCE  0EFE               	movlw	-2
 23168  012CD0  50E3               	movf	plusw1,w,c
 23169  012CD2  B4D8               	btfsc	status,2,c
 23170  012CD4  D036               	goto	l8424
 23171                           
 23172                           ;stkvar	_prod @ sp[(-13)+0]
 23173  012CD6  50E1               	movf	fsr1l,w,c
 23174  012CD8  0FF3               	addlw	-13
 23175  012CDA  6ED9               	movwf	fsr2l,c
 23176  012CDC  50E2               	movf	fsr1h,w,c
 23177  012CDE  6EDA               	movwf	fsr2h,c
 23178  012CE0  0EFF               	movlw	255
 23179  012CE2  22DA               	addwfc	fsr2h,f,c
 23180  012CE4  2ADE               	incf	postinc2,f,c
 23181  012CE6  0E00               	movlw	0
 23182  012CE8  22DE               	addwfc	postinc2,f,c
 23183  012CEA  22DE               	addwfc	postinc2,f,c
 23184  012CEC  22DE               	addwfc	postinc2,f,c
 23185                           
 23186                           ;stkvar	_prod @ sp[(-13)+0]
 23187  012CEE  0EF6               	movlw	-10
 23188  012CF0  A0E3               	btfss	plusw1,0,c
 23189  012CF2  D027               	goto	l8424
 23190  012CF4  0E01               	movlw	1
 23191  012CF6  6E30               	movwf	(btemp+11)^0,c
 23192                           
 23193                           ;stkvar	_prod @ sp[(-13)+0]
 23194  012CF8  50E1               	movf	fsr1l,w,c
 23195  012CFA  0FF3               	addlw	-13
 23196  012CFC  6ED9               	movwf	fsr2l,c
 23197  012CFE  50E2               	movf	fsr1h,w,c
 23198  012D00  6EDA               	movwf	fsr2h,c
 23199  012D02  0EFF               	movlw	255
 23200  012D04  22DA               	addwfc	fsr2h,f,c
 23201  012D06  2830               	incf	(btemp+11)^0,w,c
 23202  012D08  52DE               	movf	postinc2,f,c
 23203  012D0A  D008               	goto	u7890
 23204  012D0C                     u7895:
 23205  012D0C  52DE               	movf	postinc2,f,c
 23206  012D0E  90D8               	bcf	status,0,c
 23207  012D10  BEDC               	btfsc	preinc2,7,c
 23208  012D12  80D8               	bsf	status,0,c
 23209  012D14  32DD               	rrcf	postdec2,f,c
 23210  012D16  32DD               	rrcf	postdec2,f,c
 23211  012D18  32DD               	rrcf	postdec2,f,c
 23212  012D1A  32DE               	rrcf	postinc2,f,c
 23213  012D1C                     u7890:
 23214  012D1C  2EE8               	decfsz	wreg,f,c
 23215  012D1E  D7F6               	goto	u7895
 23216                           
 23217                           ;stkvar	_temp @ sp[(-13)+8]
 23218  012D20  0EFB               	movlw	-5
 23219  012D22  50E3               	movf	plusw1,w,c
 23220  012D24  0F01               	addlw	1
 23221  012D26  6E25               	movwf	btemp^0,c
 23222  012D28  0EFB               	movlw	-5
 23223  012D2A  0060  F097  FFE3   	movff	btemp,plusw1
 23224  012D30  6A25               	clrf	btemp^0,c
 23225  012D32  0EFC               	movlw	-4
 23226  012D34  50E3               	movf	plusw1,w,c
 23227  012D36  2025               	addwfc	btemp^0,w,c
 23228  012D38  6E25               	movwf	btemp^0,c
 23229  012D3A  0EFC               	movlw	-4
 23230  012D3C  0060  F097  FFE3   	movff	btemp,plusw1
 23231  012D42                     l8424:
 23232                           
 23233                           ;stkvar	_temp @ sp[(-13)+8]
 23234  012D42  0EFC               	movlw	-4
 23235  012D44  BEE3               	btfsc	plusw1,7,c
 23236  012D46  D020               	goto	l8428
 23237  012D48  0EFC               	movlw	-4
 23238  012D4A  50E3               	movf	plusw1,w,c
 23239  012D4C  E104               	bnz	u7900
 23240  012D4E  0EFB               	movlw	-5
 23241  012D50  28E3               	incf	plusw1,w,c
 23242  012D52  A0D8               	btfss	status,0,c
 23243  012D54  D019               	goto	l8428
 23244  012D56                     u7900:
 23245  012D56  0E00               	movlw	0
 23246  012D58  6E2D               	movwf	(btemp+8)^0,c
 23247  012D5A  0E00               	movlw	0
 23248  012D5C  6E2E               	movwf	(btemp+9)^0,c
 23249  012D5E  0E80               	movlw	128
 23250  012D60  6E2F               	movwf	(btemp+10)^0,c
 23251  012D62  0E7F               	movlw	127
 23252  012D64  6E30               	movwf	(btemp+11)^0,c
 23253                           
 23254                           ;stkvar	_prod @ sp[(-13)+0]
 23255  012D66  0EF3               	movlw	-13
 23256  012D68  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23257  012D6E  0EF4               	movlw	-12
 23258  012D70  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23259  012D76  0EF5               	movlw	-11
 23260  012D78  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 23261  012D7E  0EF6               	movlw	-10
 23262  012D80  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 23263  012D86  D044               	goto	l8444
 23264  012D88                     l8428:
 23265                           
 23266                           ;stkvar	_temp @ sp[(-13)+8]
 23267  012D88  0EFC               	movlw	-4
 23268  012D8A  BEE3               	btfsc	plusw1,7,c
 23269  012D8C  D007               	goto	u7910
 23270  012D8E  0EFC               	movlw	-4
 23271  012D90  50E3               	movf	plusw1,w,c
 23272  012D92  E10F               	bnz	l8434
 23273  012D94  0EFB               	movlw	-5
 23274  012D96  04E3               	decf	plusw1,w,c
 23275  012D98  B0D8               	btfsc	status,0,c
 23276  012D9A  D00B               	goto	l8434
 23277  012D9C                     u7910:
 23278                           
 23279                           ;stkvar	_prod @ sp[(-13)+0]
 23280  012D9C  0EF3               	movlw	-13
 23281  012D9E  6AE3               	clrf	plusw1,c
 23282  012DA0  0EF4               	movlw	-12
 23283  012DA2  6AE3               	clrf	plusw1,c
 23284  012DA4  0EF5               	movlw	-11
 23285  012DA6  6AE3               	clrf	plusw1,c
 23286  012DA8  0EF6               	movlw	-10
 23287  012DAA  6AE3               	clrf	plusw1,c
 23288                           
 23289                           ;stkvar	_sign @ sp[(-13)+12]
 23290  012DAC  0EFF               	movlw	-1
 23291  012DAE  6AE3               	clrf	plusw1,c
 23292  012DB0  D02F               	goto	l8444
 23293  012DB2                     l8434:
 23294                           
 23295                           ;stkvar	_temp @ sp[(-13)+8]
 23296                           ;stkvar	_bexp @ sp[(-13)+10]
 23297  012DB2  0EFB               	movlw	-5
 23298  012DB4  006F FF8C  F025    	movff	plusw1,btemp
 23299  012DBA  0EFD               	movlw	-3
 23300  012DBC  0060  F097  FFE3   	movff	btemp,plusw1
 23301                           
 23302                           ;stkvar	_prod @ sp[(-13)+0]
 23303  012DC2  50E1               	movf	fsr1l,w,c
 23304  012DC4  0FF3               	addlw	-13
 23305  012DC6  6ED9               	movwf	fsr2l,c
 23306  012DC8  50E2               	movf	fsr1h,w,c
 23307  012DCA  6EDA               	movwf	fsr2h,c
 23308  012DCC  0EFF               	movlw	255
 23309  012DCE  22DA               	addwfc	fsr2h,f,c
 23310  012DD0  0EFF               	movlw	255
 23311  012DD2  16DE               	andwf	postinc2,f,c
 23312  012DD4  0EFF               	movlw	255
 23313  012DD6  16DE               	andwf	postinc2,f,c
 23314  012DD8  0E7F               	movlw	127
 23315  012DDA  16DE               	andwf	postinc2,f,c
 23316  012DDC  0E00               	movlw	0
 23317  012DDE  16DE               	andwf	postinc2,f,c
 23318                           
 23319                           ;stkvar	_bexp @ sp[(-13)+10]
 23320  012DE0  0EFD               	movlw	-3
 23321  012DE2  A0E3               	btfss	plusw1,0,c
 23322  012DE4  D008               	goto	l8442
 23323                           
 23324                           ;stkvar	_prod @ sp[(-13)+0]
 23325  012DE6  0EF5               	movlw	245
 23326  012DE8  24E1               	addwf	fsr1l,w,c
 23327  012DEA  6ED9               	movwf	fsr2l,c
 23328  012DEC  0EFF               	movlw	255
 23329  012DEE  20E2               	addwfc	fsr1h,w,c
 23330  012DF0  6EDA               	movwf	fsr2h,c
 23331  012DF2  0E00               	movlw	0
 23332  012DF4  8EDB               	bsf	plusw2,7,c
 23333  012DF6                     l8442:
 23334                           
 23335                           ;stkvar	_prod @ sp[(-13)+0]
 23336  012DF6  0EF6               	movlw	246
 23337  012DF8  24E1               	addwf	fsr1l,w,c
 23338  012DFA  6ED9               	movwf	fsr2l,c
 23339  012DFC  0EFF               	movlw	255
 23340  012DFE  20E2               	addwfc	fsr1h,w,c
 23341  012E00  6EDA               	movwf	fsr2h,c
 23342                           
 23343                           ;stkvar	_bexp @ sp[(-13)+10]
 23344  012E02  0EFD               	movlw	-3
 23345  012E04  006F FF8C  F030    	movff	plusw1,btemp+11
 23346  012E0A  90D8               	bcf	status,0,c
 23347  012E0C  3030               	rrcf	(btemp+11)^0,w,c
 23348  012E0E  6EDF               	movwf	indf2,c
 23349  012E10                     l8444:
 23350                           
 23351                           ;stkvar	_sign @ sp[(-13)+12]
 23352  012E10  0EFF               	movlw	-1
 23353  012E12  006F FF8C  F030    	movff	plusw1,btemp+11
 23354                           
 23355                           ;stkvar	_prod @ sp[(-13)+0]
 23356  012E18  0EF6               	movlw	246
 23357  012E1A  24E1               	addwf	fsr1l,w,c
 23358  012E1C  6ED9               	movwf	fsr2l,c
 23359  012E1E  0EFF               	movlw	255
 23360  012E20  20E2               	addwfc	fsr1h,w,c
 23361  012E22  6EDA               	movwf	fsr2h,c
 23362  012E24  5030               	movf	(btemp+11)^0,w,c
 23363  012E26  12DF               	iorwf	indf2,f,c
 23364                           
 23365                           ;stkvar	_prod @ sp[(-13)+0]
 23366  012E28  0EF3               	movlw	-13
 23367  012E2A  006F FF8C  F025    	movff	plusw1,btemp
 23368  012E30  0EF4               	movlw	-12
 23369  012E32  006F FF8C  F026    	movff	plusw1,btemp+1
 23370  012E38  0EF5               	movlw	-11
 23371  012E3A  006F FF8C  F027    	movff	plusw1,btemp+2
 23372  012E40  0EF6               	movlw	-10
 23373  012E42  006F FF8C  F028    	movff	plusw1,btemp+3
 23374  012E48                     l2845:
 23375                           
 23376                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23377  012E48  0EEB               	movlw	235
 23378  012E4A  26E1               	addwf	fsr1l,f,c
 23379  012E4C  0EFF               	movlw	255
 23380  012E4E  22E2               	addwfc	fsr1h,f,c
 23381  012E50  0012               	return		;funcret
 23382  012E52                     __end_of___flmul:
 23383                           	opt callstack 0
 23384                           
 23385 ;; *************** function _SYSTEM_Initialize *****************
 23386 ;; Defined at:
 23387 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23388 ;; Parameters:    Size  Location     Type
 23389 ;;		None
 23390 ;; Auto vars:     Size  Location     Type
 23391 ;;		None
 23392 ;; Return value:  Size  Location     Type
 23393 ;;                  1  [STACK] void 
 23394 ;; Registers used:
 23395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23396 ;; Tracked objects:
 23397 ;;		On entry : 0/0
 23398 ;;		On exit  : 3F/3C
 23399 ;;		Unchanged: 0/0
 23400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;Total ram usage:        0 bytes
 23406 ;; Hardware stack levels used:    1
 23407 ;; Hardware stack levels required when called:    9
 23408 ;; This function calls:
 23409 ;;		_ADCC_Initialize
 23410 ;;		_CLKREF_Initialize
 23411 ;;		_DMA1_Initialize
 23412 ;;		_DMA2_Initialize
 23413 ;;		_EXT_INT_Initialize
 23414 ;;		_FVR_Initialize
 23415 ;;		_INTERRUPT_Initialize
 23416 ;;		_OSCILLATOR_Initialize
 23417 ;;		_PIN_MANAGER_Initialize
 23418 ;;		_PMD_Initialize
 23419 ;;		_PWM8_Initialize
 23420 ;;		_SPI1_Initialize
 23421 ;;		_TMR2_Initialize
 23422 ;;		_TMR3_Initialize
 23423 ;;		_TMR5_Initialize
 23424 ;;		_TMR6_Initialize
 23425 ;;		_UART1_Initialize
 23426 ;;		_UART2_Initialize
 23427 ;; This function is called by:
 23428 ;;		_main
 23429 ;; This function uses a reentrant model
 23430 ;;
 23431                           
 23432                           	psect	text95
 23433  0189A4                     __ptext95:
 23434                           	opt callstack 0
 23435  0189A4                     _SYSTEM_Initialize:
 23436                           	opt callstack 21
 23437                           
 23438                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23439                           
 23440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23441                           ;incstack = 0
 23442  0189A4  ECA9  F0C2         	call	_INTERRUPT_Initialize	;wreg free
 23443                           
 23444                           ; BSR set to: 57
 23445                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23446  0189A8  ECE6  F0CA         	call	_PMD_Initialize	;wreg free
 23447                           
 23448                           ; BSR set to: 57
 23449                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23450  0189AC  EC72  F0C0         	call	_PIN_MANAGER_Initialize	;wreg free
 23451                           
 23452                           ; BSR set to: 58
 23453                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23454  0189B0  ECDB  F0CA         	call	_OSCILLATOR_Initialize	;wreg free
 23455                           
 23456                           ; BSR set to: 57
 23457                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23458  0189B4  EC4D  F0CB         	call	_FVR_Initialize	;wreg free
 23459                           
 23460                           ; BSR set to: 62
 23461                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23462  0189B8  EC3F  F0C2         	call	_ADCC_Initialize	;wreg free
 23463                           
 23464                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23465  0189BC  ECD0  F0CA         	call	_PWM8_Initialize	;wreg free
 23466                           
 23467                           ; BSR set to: 63
 23468                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23469  0189C0  ECB9  F0CA         	call	_TMR2_Initialize	;wreg free
 23470                           
 23471                           ; BSR set to: 57
 23472                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23473  0189C4  EC2A  F0C7         	call	_EXT_INT_Initialize	;wreg free
 23474                           
 23475                           ; BSR set to: 57
 23476                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23477  0189C8  ECE6  F0C7         	call	_TMR6_Initialize	;wreg free
 23478                           
 23479                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23480  0189CC  EC84  F0C5         	call	_TMR3_Initialize	;wreg free
 23481                           
 23482                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23483  0189D0  EC61  F0C5         	call	_TMR5_Initialize	;wreg free
 23484                           
 23485                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23486  0189D4  EC0F  F0C3         	call	_UART1_Initialize	;wreg free
 23487                           
 23488                           ; BSR set to: 57
 23489                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23490  0189D8  ECA3  F0C3         	call	_UART2_Initialize	;wreg free
 23491                           
 23492                           ; BSR set to: 57
 23493                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23494  0189DC  ECC5  F0CA         	call	_SPI1_Initialize	;wreg free
 23495                           
 23496                           ; BSR set to: 61
 23497                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23498  0189E0  ECFF  F0C3         	call	_DMA2_Initialize	;wreg free
 23499                           
 23500                           ; BSR set to: 59
 23501                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23502  0189E4  EC0A  F0C2         	call	_DMA1_Initialize	;wreg free
 23503                           
 23504                           ; BSR set to: 59
 23505                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23506  0189E8  EC27  F0CB         	call	_CLKREF_Initialize	;wreg free
 23507                           
 23508                           ; BSR set to: 60
 23509                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23510  0189EC  0012               	return		;funcret
 23511  0189EE                     __end_of_SYSTEM_Initialize:
 23512                           	opt callstack 0
 23513                           
 23514 ;; *************** function _UART2_Initialize *****************
 23515 ;; Defined at:
 23516 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23517 ;; Parameters:    Size  Location     Type
 23518 ;;		None
 23519 ;; Auto vars:     Size  Location     Type
 23520 ;;		None
 23521 ;; Return value:  Size  Location     Type
 23522 ;;                  1  [STACK] void 
 23523 ;; Registers used:
 23524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23525 ;; Tracked objects:
 23526 ;;		On entry : 3F/39
 23527 ;;		On exit  : 3F/39
 23528 ;;		Unchanged: 0/0
 23529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23534 ;;Total ram usage:        0 bytes
 23535 ;; Hardware stack levels used:    1
 23536 ;; Hardware stack levels required when called:    8
 23537 ;; This function calls:
 23538 ;;		_UART2_SetRxInterruptHandler
 23539 ;;		_UART2_SetTxInterruptHandler
 23540 ;; This function is called by:
 23541 ;;		_SYSTEM_Initialize
 23542 ;; This function uses a reentrant model
 23543 ;;
 23544                           
 23545                           	psect	text96
 23546  018746                     __ptext96:
 23547                           	opt callstack 0
 23548  018746                     _UART2_Initialize:
 23549                           	opt callstack 21
 23550                           
 23551                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23552                           
 23553                           ; BSR set to: 60
 23554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23555                           ;incstack = 0
 23556  018746  0139               	movlb	57	; () banked
 23557  018748  9596               	bcf	150,2,b	;volatile
 23558                           
 23559                           ; BSR set to: 57
 23560                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23561  01874A  0EEA               	movlw	low _UART2_Receive_ISR
 23562  01874C  6EE6               	movwf	postinc1,c
 23563  01874E  0E94               	movlw	high _UART2_Receive_ISR
 23564  018750  6EE6               	movwf	postinc1,c
 23565  018752  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23566  018754  6EE6               	movwf	postinc1,c
 23567  018756  EC73  F0C8         	call	_UART2_SetRxInterruptHandler	;wreg free
 23568                           
 23569                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23570  01875A  0139               	movlb	57	; () banked
 23571  01875C  9796               	bcf	150,3,b	;volatile
 23572                           
 23573                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23574  01875E  0EA0               	movlw	low _UART2_Transmit_ISR
 23575  018760  6EE6               	movwf	postinc1,c
 23576  018762  0E8F               	movlw	high _UART2_Transmit_ISR
 23577  018764  6EE6               	movwf	postinc1,c
 23578  018766  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23579  018768  6EE6               	movwf	postinc1,c
 23580  01876A  EC5F  F0C8         	call	_UART2_SetTxInterruptHandler	;wreg free
 23581                           
 23582                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23583  01876E  013D               	movlb	61	; () banked
 23584  018770  6BD4               	clrf	212,b	;volatile
 23585                           
 23586                           ; BSR set to: 61
 23587                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23588  018772  6BD6               	clrf	214,b	;volatile
 23589                           
 23590                           ; BSR set to: 61
 23591                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23592  018774  6BD8               	clrf	216,b	;volatile
 23593                           
 23594                           ; BSR set to: 61
 23595                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23596  018776  0EB0               	movlw	176
 23597  018778  6FDA               	movwf	218,b	;volatile
 23598                           
 23599                           ; BSR set to: 61
 23600                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23601  01877A  0E80               	movlw	128
 23602  01877C  6FDB               	movwf	219,b	;volatile
 23603                           
 23604                           ; BSR set to: 61
 23605                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23606  01877E  6BDC               	clrf	220,b	;volatile
 23607                           
 23608                           ; BSR set to: 61
 23609                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23610  018780  0E82               	movlw	130
 23611  018782  6FDD               	movwf	221,b	;volatile
 23612                           
 23613                           ; BSR set to: 61
 23614                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23615  018784  0E06               	movlw	6
 23616  018786  6FDE               	movwf	222,b	;volatile
 23617                           
 23618                           ; BSR set to: 61
 23619                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23620  018788  6BDF               	clrf	223,b	;volatile
 23621                           
 23622                           ; BSR set to: 61
 23623                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23624  01878A  6BE0               	clrf	224,b	;volatile
 23625                           
 23626                           ; BSR set to: 61
 23627                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23628  01878C  6BE1               	clrf	225,b	;volatile
 23629                           
 23630                           ; BSR set to: 61
 23631                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23632  01878E  6BE2               	clrf	226,b	;volatile
 23633                           
 23634                           ; BSR set to: 61
 23635                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23636  018790  6A1E               	clrf	_uart2TxHead^0,c	;volatile
 23637                           
 23638                           ; BSR set to: 61
 23639                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23640  018792  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 23641                           
 23642                           ; BSR set to: 61
 23643                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23644  018794  0E40               	movlw	64
 23645  018796  6E1C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23646                           
 23647                           ; BSR set to: 61
 23648                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23649  018798  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 23650                           
 23651                           ; BSR set to: 61
 23652                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23653  01879A  6A1A               	clrf	_uart2RxTail^0,c	;volatile
 23654                           
 23655                           ; BSR set to: 61
 23656                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23657  01879C  6A19               	clrf	_uart2RxCount^0,c	;volatile
 23658                           
 23659                           ; BSR set to: 61
 23660                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23661  01879E  0139               	movlb	57	; () banked
 23662  0187A0  8596               	bsf	150,2,b	;volatile
 23663                           
 23664                           ; BSR set to: 57
 23665                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23666  0187A2  0012               	return		;funcret
 23667  0187A4                     __end_of_UART2_Initialize:
 23668                           	opt callstack 0
 23669                           
 23670 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23671 ;; Defined at:
 23672 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23673 ;; Parameters:    Size  Location     Type
 23674 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23675 ;;		 -> UART2_Transmit_ISR(1), 
 23676 ;; Auto vars:     Size  Location     Type
 23677 ;;		None
 23678 ;; Return value:  Size  Location     Type
 23679 ;;                  1  [STACK] void 
 23680 ;; Registers used:
 23681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23682 ;; Tracked objects:
 23683 ;;		On entry : 3F/39
 23684 ;;		On exit  : 0/0
 23685 ;;		Unchanged: 0/0
 23686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23691 ;;Total ram usage:        0 bytes
 23692 ;; Hardware stack levels used:    1
 23693 ;; Hardware stack levels required when called:    7
 23694 ;; This function calls:
 23695 ;;		Nothing
 23696 ;; This function is called by:
 23697 ;;		_UART2_Initialize
 23698 ;; This function uses a reentrant model
 23699 ;;
 23700                           
 23701                           	psect	text97
 23702  0190BE                     __ptext97:
 23703                           	opt callstack 0
 23704  0190BE                     _UART2_SetTxInterruptHandler:
 23705                           	opt callstack 21
 23706                           
 23707                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23708                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23709                           
 23710                           ; BSR set to: 57
 23711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23712                           ;incstack = 0
 23713  0190BE  50E1               	movf	fsr1l,w,c
 23714  0190C0  0FFD               	addlw	-3
 23715  0190C2  6ED9               	movwf	fsr2l,c
 23716  0190C4  50E2               	movf	fsr1h,w,c
 23717  0190C6  6EDA               	movwf	fsr2h,c
 23718  0190C8  0EFF               	movlw	255
 23719  0190CA  22DA               	addwfc	fsr2h,f,c
 23720  0190CC  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 23721  0190D2  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 23722  0190D8  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 23723                           
 23724                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23725  0190DE  52E5               	movf	postdec1,f,c
 23726  0190E0  52E5               	movf	postdec1,f,c
 23727  0190E2  52E5               	movf	postdec1,f,c
 23728  0190E4  0012               	return		;funcret
 23729  0190E6                     __end_of_UART2_SetTxInterruptHandler:
 23730                           	opt callstack 0
 23731                           
 23732 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23733 ;; Defined at:
 23734 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23735 ;; Parameters:    Size  Location     Type
 23736 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23737 ;;		 -> UART2_Receive_ISR(1), 
 23738 ;; Auto vars:     Size  Location     Type
 23739 ;;		None
 23740 ;; Return value:  Size  Location     Type
 23741 ;;                  1  [STACK] void 
 23742 ;; Registers used:
 23743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23744 ;; Tracked objects:
 23745 ;;		On entry : 3F/39
 23746 ;;		On exit  : 0/0
 23747 ;;		Unchanged: 0/0
 23748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23753 ;;Total ram usage:        0 bytes
 23754 ;; Hardware stack levels used:    1
 23755 ;; Hardware stack levels required when called:    7
 23756 ;; This function calls:
 23757 ;;		Nothing
 23758 ;; This function is called by:
 23759 ;;		_UART2_Initialize
 23760 ;; This function uses a reentrant model
 23761 ;;
 23762                           
 23763                           	psect	text98
 23764  0190E6                     __ptext98:
 23765                           	opt callstack 0
 23766  0190E6                     _UART2_SetRxInterruptHandler:
 23767                           	opt callstack 21
 23768                           
 23769                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23770                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23771                           
 23772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23773                           ;incstack = 0
 23774  0190E6  50E1               	movf	fsr1l,w,c
 23775  0190E8  0FFD               	addlw	-3
 23776  0190EA  6ED9               	movwf	fsr2l,c
 23777  0190EC  50E2               	movf	fsr1h,w,c
 23778  0190EE  6EDA               	movwf	fsr2h,c
 23779  0190F0  0EFF               	movlw	255
 23780  0190F2  22DA               	addwfc	fsr2h,f,c
 23781  0190F4  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 23782  0190FA  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 23783  019100  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 23784                           
 23785                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23786  019106  52E5               	movf	postdec1,f,c
 23787  019108  52E5               	movf	postdec1,f,c
 23788  01910A  52E5               	movf	postdec1,f,c
 23789  01910C  0012               	return		;funcret
 23790  01910E                     __end_of_UART2_SetRxInterruptHandler:
 23791                           	opt callstack 0
 23792                           
 23793 ;; *************** function _UART1_Initialize *****************
 23794 ;; Defined at:
 23795 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23796 ;; Parameters:    Size  Location     Type
 23797 ;;		None
 23798 ;; Auto vars:     Size  Location     Type
 23799 ;;		None
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1  [STACK] void 
 23802 ;; Registers used:
 23803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/39
 23806 ;;		On exit  : 3F/39
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;Total ram usage:        0 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:    8
 23816 ;; This function calls:
 23817 ;;		_UART1_SetRxInterruptHandler
 23818 ;;		_UART1_SetTxInterruptHandler
 23819 ;; This function is called by:
 23820 ;;		_SYSTEM_Initialize
 23821 ;; This function uses a reentrant model
 23822 ;;
 23823                           
 23824                           	psect	text99
 23825  01861E                     __ptext99:
 23826                           	opt callstack 0
 23827  01861E                     _UART1_Initialize:
 23828                           	opt callstack 21
 23829                           
 23830                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23831                           
 23832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23833                           ;incstack = 0
 23834  01861E  0139               	movlb	57	; () banked
 23835  018620  9793               	bcf	147,3,b	;volatile
 23836                           
 23837                           ; BSR set to: 57
 23838                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23839  018622  0ECC               	movlw	low _UART1_Receive_ISR
 23840  018624  6EE6               	movwf	postinc1,c
 23841  018626  0E94               	movlw	high _UART1_Receive_ISR
 23842  018628  6EE6               	movwf	postinc1,c
 23843  01862A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23844  01862C  6EE6               	movwf	postinc1,c
 23845  01862E  EC9B  F0C8         	call	_UART1_SetRxInterruptHandler	;wreg free
 23846                           
 23847                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23848  018632  0139               	movlb	57	; () banked
 23849  018634  9993               	bcf	147,4,b	;volatile
 23850                           
 23851                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23852  018636  0E74               	movlw	low _UART1_Transmit_ISR
 23853  018638  6EE6               	movwf	postinc1,c
 23854  01863A  0E8F               	movlw	high _UART1_Transmit_ISR
 23855  01863C  6EE6               	movwf	postinc1,c
 23856  01863E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23857  018640  6EE6               	movwf	postinc1,c
 23858  018642  EC87  F0C8         	call	_UART1_SetTxInterruptHandler	;wreg free
 23859                           
 23860                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23861  018646  013D               	movlb	61	; () banked
 23862  018648  6BEC               	clrf	236,b	;volatile
 23863                           
 23864                           ; BSR set to: 61
 23865                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23866  01864A  6BED               	clrf	237,b	;volatile
 23867                           
 23868                           ; BSR set to: 61
 23869                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23870  01864C  6BEE               	clrf	238,b	;volatile
 23871                           
 23872                           ; BSR set to: 61
 23873                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23874  01864E  6BEF               	clrf	239,b	;volatile
 23875                           
 23876                           ; BSR set to: 61
 23877                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23878  018650  6BF0               	clrf	240,b	;volatile
 23879                           
 23880                           ; BSR set to: 61
 23881                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23882  018652  6BF1               	clrf	241,b	;volatile
 23883                           
 23884                           ; BSR set to: 61
 23885                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23886  018654  0EB0               	movlw	176
 23887  018656  6FF2               	movwf	242,b	;volatile
 23888                           
 23889                           ; BSR set to: 61
 23890                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23891  018658  0E80               	movlw	128
 23892  01865A  6FF3               	movwf	243,b	;volatile
 23893                           
 23894                           ; BSR set to: 61
 23895                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23896  01865C  6BF4               	clrf	244,b	;volatile
 23897                           
 23898                           ; BSR set to: 61
 23899                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23900  01865E  0E82               	movlw	130
 23901  018660  6FF5               	movwf	245,b	;volatile
 23902                           
 23903                           ; BSR set to: 61
 23904                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23905  018662  0E06               	movlw	6
 23906  018664  6FF6               	movwf	246,b	;volatile
 23907                           
 23908                           ; BSR set to: 61
 23909                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23910  018666  6BF7               	clrf	247,b	;volatile
 23911                           
 23912                           ; BSR set to: 61
 23913                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23914  018668  6BF8               	clrf	248,b	;volatile
 23915                           
 23916                           ; BSR set to: 61
 23917                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23918  01866A  6BF9               	clrf	249,b	;volatile
 23919                           
 23920                           ; BSR set to: 61
 23921                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23922  01866C  6BFA               	clrf	250,b	;volatile
 23923                           
 23924                           ; BSR set to: 61
 23925                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23926  01866E  6A24               	clrf	_uart1TxHead^0,c	;volatile
 23927                           
 23928                           ; BSR set to: 61
 23929                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23930  018670  6A23               	clrf	_uart1TxTail^0,c	;volatile
 23931                           
 23932                           ; BSR set to: 61
 23933                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23934  018672  0E40               	movlw	64
 23935  018674  6E22               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23936                           
 23937                           ; BSR set to: 61
 23938                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23939  018676  6A21               	clrf	_uart1RxHead^0,c	;volatile
 23940                           
 23941                           ; BSR set to: 61
 23942                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23943  018678  6A20               	clrf	_uart1RxTail^0,c	;volatile
 23944                           
 23945                           ; BSR set to: 61
 23946                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23947  01867A  6A1F               	clrf	_uart1RxCount^0,c	;volatile
 23948                           
 23949                           ; BSR set to: 61
 23950                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23951  01867C  0139               	movlb	57	; () banked
 23952  01867E  8793               	bsf	147,3,b	;volatile
 23953                           
 23954                           ; BSR set to: 57
 23955                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23956  018680  0012               	return		;funcret
 23957  018682                     __end_of_UART1_Initialize:
 23958                           	opt callstack 0
 23959                           
 23960 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23961 ;; Defined at:
 23962 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23963 ;; Parameters:    Size  Location     Type
 23964 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23965 ;;		 -> UART1_Transmit_ISR(1), 
 23966 ;; Auto vars:     Size  Location     Type
 23967 ;;		None
 23968 ;; Return value:  Size  Location     Type
 23969 ;;                  1  [STACK] void 
 23970 ;; Registers used:
 23971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23972 ;; Tracked objects:
 23973 ;;		On entry : 3F/39
 23974 ;;		On exit  : 0/0
 23975 ;;		Unchanged: 0/0
 23976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;Total ram usage:        0 bytes
 23982 ;; Hardware stack levels used:    1
 23983 ;; Hardware stack levels required when called:    7
 23984 ;; This function calls:
 23985 ;;		Nothing
 23986 ;; This function is called by:
 23987 ;;		_UART1_Initialize
 23988 ;; This function uses a reentrant model
 23989 ;;
 23990                           
 23991                           	psect	text100
 23992  01910E                     __ptext100:
 23993                           	opt callstack 0
 23994  01910E                     _UART1_SetTxInterruptHandler:
 23995                           	opt callstack 21
 23996                           
 23997                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23998                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23999                           
 24000                           ; BSR set to: 57
 24001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24002                           ;incstack = 0
 24003  01910E  50E1               	movf	fsr1l,w,c
 24004  019110  0FFD               	addlw	-3
 24005  019112  6ED9               	movwf	fsr2l,c
 24006  019114  50E2               	movf	fsr1h,w,c
 24007  019116  6EDA               	movwf	fsr2h,c
 24008  019118  0EFF               	movlw	255
 24009  01911A  22DA               	addwfc	fsr2h,f,c
 24010  01911C  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 24011  019122  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 24012  019128  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 24013                           
 24014                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24015  01912E  52E5               	movf	postdec1,f,c
 24016  019130  52E5               	movf	postdec1,f,c
 24017  019132  52E5               	movf	postdec1,f,c
 24018  019134  0012               	return		;funcret
 24019  019136                     __end_of_UART1_SetTxInterruptHandler:
 24020                           	opt callstack 0
 24021                           
 24022 ;; *************** function _UART1_SetRxInterruptHandler *****************
 24023 ;; Defined at:
 24024 ;;		line 241 in file "mcc_generated_files/uart1.c"
 24025 ;; Parameters:    Size  Location     Type
 24026 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24027 ;;		 -> UART1_Receive_ISR(1), 
 24028 ;; Auto vars:     Size  Location     Type
 24029 ;;		None
 24030 ;; Return value:  Size  Location     Type
 24031 ;;                  1  [STACK] void 
 24032 ;; Registers used:
 24033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24034 ;; Tracked objects:
 24035 ;;		On entry : 3F/39
 24036 ;;		On exit  : 0/0
 24037 ;;		Unchanged: 0/0
 24038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24043 ;;Total ram usage:        0 bytes
 24044 ;; Hardware stack levels used:    1
 24045 ;; Hardware stack levels required when called:    7
 24046 ;; This function calls:
 24047 ;;		Nothing
 24048 ;; This function is called by:
 24049 ;;		_UART1_Initialize
 24050 ;; This function uses a reentrant model
 24051 ;;
 24052                           
 24053                           	psect	text101
 24054  019136                     __ptext101:
 24055                           	opt callstack 0
 24056  019136                     _UART1_SetRxInterruptHandler:
 24057                           	opt callstack 21
 24058                           
 24059                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24060                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24061                           
 24062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24063                           ;incstack = 0
 24064  019136  50E1               	movf	fsr1l,w,c
 24065  019138  0FFD               	addlw	-3
 24066  01913A  6ED9               	movwf	fsr2l,c
 24067  01913C  50E2               	movf	fsr1h,w,c
 24068  01913E  6EDA               	movwf	fsr2h,c
 24069  019140  0EFF               	movlw	255
 24070  019142  22DA               	addwfc	fsr2h,f,c
 24071  019144  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24072  01914A  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24073  019150  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24074                           
 24075                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24076  019156  52E5               	movf	postdec1,f,c
 24077  019158  52E5               	movf	postdec1,f,c
 24078  01915A  52E5               	movf	postdec1,f,c
 24079  01915C  0012               	return		;funcret
 24080  01915E                     __end_of_UART1_SetRxInterruptHandler:
 24081                           	opt callstack 0
 24082                           
 24083 ;; *************** function _TMR6_Initialize *****************
 24084 ;; Defined at:
 24085 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24086 ;; Parameters:    Size  Location     Type
 24087 ;;		None
 24088 ;; Auto vars:     Size  Location     Type
 24089 ;;		None
 24090 ;; Return value:  Size  Location     Type
 24091 ;;                  1  [STACK] void 
 24092 ;; Registers used:
 24093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24094 ;; Tracked objects:
 24095 ;;		On entry : 3F/39
 24096 ;;		On exit  : 0/0
 24097 ;;		Unchanged: 0/0
 24098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24103 ;;Total ram usage:        0 bytes
 24104 ;; Hardware stack levels used:    1
 24105 ;; Hardware stack levels required when called:    8
 24106 ;; This function calls:
 24107 ;;		_TMR6_SetInterruptHandler
 24108 ;; This function is called by:
 24109 ;;		_SYSTEM_Initialize
 24110 ;; This function uses a reentrant model
 24111 ;;
 24112                           
 24113                           	psect	text102
 24114  018FCC                     __ptext102:
 24115                           	opt callstack 0
 24116  018FCC                     _TMR6_Initialize:
 24117                           	opt callstack 21
 24118                           
 24119                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24120                           
 24121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24122                           ;incstack = 0
 24123  018FCC  0E01               	movlw	1
 24124  018FCE  6E96               	movwf	150,c	;volatile
 24125                           
 24126                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24127  018FD0  6A95               	clrf	149,c	;volatile
 24128                           
 24129                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24130  018FD2  6A97               	clrf	151,c	;volatile
 24131                           
 24132                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24133  018FD4  0E7C               	movlw	124
 24134  018FD6  6E93               	movwf	147,c	;volatile
 24135                           
 24136                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24137  018FD8  6A92               	clrf	146,c	;volatile
 24138                           
 24139                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24140  018FDA  0139               	movlb	57	; () banked
 24141  018FDC  91A9               	bcf	169,0,b	;volatile
 24142                           
 24143                           ; BSR set to: 57
 24144                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24145  018FDE  8199               	bsf	153,0,b	;volatile
 24146                           
 24147                           ; BSR set to: 57
 24148                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24149  018FE0  0E56               	movlw	low _TMR6_DefaultInterruptHandler
 24150  018FE2  6EE6               	movwf	postinc1,c
 24151  018FE4  0E89               	movlw	high _TMR6_DefaultInterruptHandler
 24152  018FE6  6EE6               	movwf	postinc1,c
 24153  018FE8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24154  018FEA  6EE6               	movwf	postinc1,c
 24155  018FEC  ECAF  F0C8         	call	_TMR6_SetInterruptHandler	;wreg free
 24156                           
 24157                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24158  018FF0  0EE0               	movlw	224
 24159  018FF2  6E94               	movwf	148,c	;volatile
 24160                           
 24161                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24162  018FF4  0012               	return		;funcret
 24163  018FF6                     __end_of_TMR6_Initialize:
 24164                           	opt callstack 0
 24165                           
 24166 ;; *************** function _TMR6_SetInterruptHandler *****************
 24167 ;; Defined at:
 24168 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24169 ;; Parameters:    Size  Location     Type
 24170 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24171 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24172 ;; Auto vars:     Size  Location     Type
 24173 ;;		None
 24174 ;; Return value:  Size  Location     Type
 24175 ;;                  1  [STACK] void 
 24176 ;; Registers used:
 24177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24178 ;; Tracked objects:
 24179 ;;		On entry : 3F/39
 24180 ;;		On exit  : 0/0
 24181 ;;		Unchanged: 0/0
 24182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24187 ;;Total ram usage:        0 bytes
 24188 ;; Hardware stack levels used:    1
 24189 ;; Hardware stack levels required when called:    7
 24190 ;; This function calls:
 24191 ;;		Nothing
 24192 ;; This function is called by:
 24193 ;;		_TMR6_Initialize
 24194 ;; This function uses a reentrant model
 24195 ;;
 24196                           
 24197                           	psect	text103
 24198  01915E                     __ptext103:
 24199                           	opt callstack 0
 24200  01915E                     _TMR6_SetInterruptHandler:
 24201                           	opt callstack 21
 24202                           
 24203                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24204                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24205                           
 24206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24207                           ;incstack = 0
 24208  01915E  50E1               	movf	fsr1l,w,c
 24209  019160  0FFD               	addlw	-3
 24210  019162  6ED9               	movwf	fsr2l,c
 24211  019164  50E2               	movf	fsr1h,w,c
 24212  019166  6EDA               	movwf	fsr2h,c
 24213  019168  0EFF               	movlw	255
 24214  01916A  22DA               	addwfc	fsr2h,f,c
 24215  01916C  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24216  019172  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24217  019178  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24218                           
 24219                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24220  01917E  52E5               	movf	postdec1,f,c
 24221  019180  52E5               	movf	postdec1,f,c
 24222  019182  52E5               	movf	postdec1,f,c
 24223  019184  0012               	return		;funcret
 24224  019186                     __end_of_TMR6_SetInterruptHandler:
 24225                           	opt callstack 0
 24226                           
 24227 ;; *************** function _TMR5_Initialize *****************
 24228 ;; Defined at:
 24229 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24230 ;; Parameters:    Size  Location     Type
 24231 ;;		None
 24232 ;; Auto vars:     Size  Location     Type
 24233 ;;		None
 24234 ;; Return value:  Size  Location     Type
 24235 ;;                  1  [STACK] void 
 24236 ;; Registers used:
 24237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24238 ;; Tracked objects:
 24239 ;;		On entry : 0/39
 24240 ;;		On exit  : 0/0
 24241 ;;		Unchanged: 0/0
 24242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24247 ;;Total ram usage:        0 bytes
 24248 ;; Hardware stack levels used:    1
 24249 ;; Hardware stack levels required when called:    8
 24250 ;; This function calls:
 24251 ;;		_TMR5_SetInterruptHandler
 24252 ;; This function is called by:
 24253 ;;		_SYSTEM_Initialize
 24254 ;; This function uses a reentrant model
 24255 ;;
 24256                           
 24257                           	psect	text104
 24258  018AC2                     __ptext104:
 24259                           	opt callstack 0
 24260  018AC2                     _TMR5_Initialize:
 24261                           	opt callstack 21
 24262                           
 24263                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24264                           
 24265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24266                           ;incstack = 0
 24267  018AC2  6A9B               	clrf	155,c	;volatile
 24268                           
 24269                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24270  018AC4  6A9C               	clrf	156,c	;volatile
 24271                           
 24272                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24273  018AC6  0E01               	movlw	1
 24274  018AC8  6E9D               	movwf	157,c	;volatile
 24275                           
 24276                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24277  018ACA  0E63               	movlw	99
 24278  018ACC  6E99               	movwf	153,c	;volatile
 24279                           
 24280                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24281  018ACE  0EC0               	movlw	192
 24282  018AD0  6E98               	movwf	152,c	;volatile
 24283                           
 24284                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24285  018AD2  5098               	movf	152,w,c	;volatile
 24286  018AD4  006F FE64  F025    	movff	16281,btemp	;volatile
 24287  018ADA  6A26               	clrf	(btemp+1)^0,c
 24288  018ADC  0060  F094  F026   	movff	btemp,btemp+1
 24289  018AE2  6A25               	clrf	btemp^0,c
 24290  018AE4  1025               	iorwf	btemp^0,w,c
 24291  018AE6  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 24292  018AE8  5026               	movf	(btemp+1)^0,w,c
 24293  018AEA  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24294                           
 24295                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24296  018AEC  0139               	movlb	57	; () banked
 24297  018AEE  9DA8               	bcf	168,6,b	;volatile
 24298                           
 24299                           ; BSR set to: 57
 24300                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24301  018AF0  8D98               	bsf	152,6,b	;volatile
 24302                           
 24303                           ; BSR set to: 57
 24304                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24305  018AF2  0E76               	movlw	low _TMR5_DefaultInterruptHandler
 24306  018AF4  6EE6               	movwf	postinc1,c
 24307  018AF6  0E92               	movlw	high _TMR5_DefaultInterruptHandler
 24308  018AF8  6EE6               	movwf	postinc1,c
 24309  018AFA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24310  018AFC  6EE6               	movwf	postinc1,c
 24311  018AFE  ECC3  F0C8         	call	_TMR5_SetInterruptHandler	;wreg free
 24312                           
 24313                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24314  018B02  0E31               	movlw	49
 24315  018B04  6E9A               	movwf	154,c	;volatile
 24316                           
 24317                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24318  018B06  0012               	return		;funcret
 24319  018B08                     __end_of_TMR5_Initialize:
 24320                           	opt callstack 0
 24321                           
 24322 ;; *************** function _TMR5_SetInterruptHandler *****************
 24323 ;; Defined at:
 24324 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24325 ;; Parameters:    Size  Location     Type
 24326 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24327 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24328 ;; Auto vars:     Size  Location     Type
 24329 ;;		None
 24330 ;; Return value:  Size  Location     Type
 24331 ;;                  1  [STACK] void 
 24332 ;; Registers used:
 24333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24334 ;; Tracked objects:
 24335 ;;		On entry : 3F/39
 24336 ;;		On exit  : 0/0
 24337 ;;		Unchanged: 0/0
 24338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24343 ;;Total ram usage:        0 bytes
 24344 ;; Hardware stack levels used:    1
 24345 ;; Hardware stack levels required when called:    7
 24346 ;; This function calls:
 24347 ;;		Nothing
 24348 ;; This function is called by:
 24349 ;;		_TMR5_Initialize
 24350 ;; This function uses a reentrant model
 24351 ;;
 24352                           
 24353                           	psect	text105
 24354  019186                     __ptext105:
 24355                           	opt callstack 0
 24356  019186                     _TMR5_SetInterruptHandler:
 24357                           	opt callstack 21
 24358                           
 24359                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24360                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24361                           
 24362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24363                           ;incstack = 0
 24364  019186  50E1               	movf	fsr1l,w,c
 24365  019188  0FFD               	addlw	-3
 24366  01918A  6ED9               	movwf	fsr2l,c
 24367  01918C  50E2               	movf	fsr1h,w,c
 24368  01918E  6EDA               	movwf	fsr2h,c
 24369  019190  0EFF               	movlw	255
 24370  019192  22DA               	addwfc	fsr2h,f,c
 24371  019194  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24372  01919A  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24373  0191A0  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24374                           
 24375                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24376  0191A6  52E5               	movf	postdec1,f,c
 24377  0191A8  52E5               	movf	postdec1,f,c
 24378  0191AA  52E5               	movf	postdec1,f,c
 24379  0191AC  0012               	return		;funcret
 24380  0191AE                     __end_of_TMR5_SetInterruptHandler:
 24381                           	opt callstack 0
 24382                           
 24383 ;; *************** function _TMR3_Initialize *****************
 24384 ;; Defined at:
 24385 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24386 ;; Parameters:    Size  Location     Type
 24387 ;;		None
 24388 ;; Auto vars:     Size  Location     Type
 24389 ;;		None
 24390 ;; Return value:  Size  Location     Type
 24391 ;;                  1  [STACK] void 
 24392 ;; Registers used:
 24393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24394 ;; Tracked objects:
 24395 ;;		On entry : 0/39
 24396 ;;		On exit  : 0/0
 24397 ;;		Unchanged: 0/0
 24398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24403 ;;Total ram usage:        0 bytes
 24404 ;; Hardware stack levels used:    1
 24405 ;; Hardware stack levels required when called:    8
 24406 ;; This function calls:
 24407 ;;		_TMR3_SetInterruptHandler
 24408 ;; This function is called by:
 24409 ;;		_SYSTEM_Initialize
 24410 ;; This function uses a reentrant model
 24411 ;;
 24412                           
 24413                           	psect	text106
 24414  018B08                     __ptext106:
 24415                           	opt callstack 0
 24416  018B08                     _TMR3_Initialize:
 24417                           	opt callstack 21
 24418                           
 24419                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24420                           
 24421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24422                           ;incstack = 0
 24423  018B08  6AA7               	clrf	167,c	;volatile
 24424                           
 24425                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24426  018B0A  6AA8               	clrf	168,c	;volatile
 24427                           
 24428                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24429  018B0C  0E01               	movlw	1
 24430  018B0E  6EA9               	movwf	169,c	;volatile
 24431                           
 24432                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24433  018B10  0E3C               	movlw	60
 24434  018B12  6EA5               	movwf	165,c	;volatile
 24435                           
 24436                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24437  018B14  0EB0               	movlw	176
 24438  018B16  6EA4               	movwf	164,c	;volatile
 24439                           
 24440                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24441  018B18  50A4               	movf	164,w,c	;volatile
 24442  018B1A  006F FE94  F025    	movff	16293,btemp	;volatile
 24443  018B20  6A26               	clrf	(btemp+1)^0,c
 24444  018B22  0060  F094  F026   	movff	btemp,btemp+1
 24445  018B28  6A25               	clrf	btemp^0,c
 24446  018B2A  1025               	iorwf	btemp^0,w,c
 24447  018B2C  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 24448  018B2E  5026               	movf	(btemp+1)^0,w,c
 24449  018B30  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24450                           
 24451                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24452  018B32  0139               	movlb	57	; () banked
 24453  018B34  9DA6               	bcf	166,6,b	;volatile
 24454                           
 24455                           ; BSR set to: 57
 24456                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24457  018B36  8D96               	bsf	150,6,b	;volatile
 24458                           
 24459                           ; BSR set to: 57
 24460                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24461  018B38  0EC4               	movlw	low _TMR3_DefaultInterruptHandler
 24462  018B3A  6EE6               	movwf	postinc1,c
 24463  018B3C  0E96               	movlw	high _TMR3_DefaultInterruptHandler
 24464  018B3E  6EE6               	movwf	postinc1,c
 24465  018B40  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24466  018B42  6EE6               	movwf	postinc1,c
 24467  018B44  ECD7  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
 24468                           
 24469                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24470  018B48  0E31               	movlw	49
 24471  018B4A  6EA6               	movwf	166,c	;volatile
 24472                           
 24473                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24474  018B4C  0012               	return		;funcret
 24475  018B4E                     __end_of_TMR3_Initialize:
 24476                           	opt callstack 0
 24477                           
 24478 ;; *************** function _TMR3_SetInterruptHandler *****************
 24479 ;; Defined at:
 24480 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24481 ;; Parameters:    Size  Location     Type
 24482 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24483 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24484 ;; Auto vars:     Size  Location     Type
 24485 ;;		None
 24486 ;; Return value:  Size  Location     Type
 24487 ;;                  1  [STACK] void 
 24488 ;; Registers used:
 24489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24490 ;; Tracked objects:
 24491 ;;		On entry : 0/1
 24492 ;;		On exit  : 0/0
 24493 ;;		Unchanged: 0/0
 24494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24499 ;;Total ram usage:        0 bytes
 24500 ;; Hardware stack levels used:    1
 24501 ;; Hardware stack levels required when called:    7
 24502 ;; This function calls:
 24503 ;;		Nothing
 24504 ;; This function is called by:
 24505 ;;		_TMR3_Initialize
 24506 ;;		_init_bsoc
 24507 ;; This function uses a reentrant model
 24508 ;;
 24509                           
 24510                           	psect	text107
 24511  0191AE                     __ptext107:
 24512                           	opt callstack 0
 24513  0191AE                     _TMR3_SetInterruptHandler:
 24514                           	opt callstack 22
 24515                           
 24516                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24517                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24518                           
 24519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24520                           ;incstack = 0
 24521  0191AE  50E1               	movf	fsr1l,w,c
 24522  0191B0  0FFD               	addlw	-3
 24523  0191B2  6ED9               	movwf	fsr2l,c
 24524  0191B4  50E2               	movf	fsr1h,w,c
 24525  0191B6  6EDA               	movwf	fsr2h,c
 24526  0191B8  0EFF               	movlw	255
 24527  0191BA  22DA               	addwfc	fsr2h,f,c
 24528  0191BC  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24529  0191C2  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24530  0191C8  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24531                           
 24532                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24533  0191CE  52E5               	movf	postdec1,f,c
 24534  0191D0  52E5               	movf	postdec1,f,c
 24535  0191D2  52E5               	movf	postdec1,f,c
 24536  0191D4  0012               	return		;funcret
 24537  0191D6                     __end_of_TMR3_SetInterruptHandler:
 24538                           	opt callstack 0
 24539                           
 24540 ;; *************** function _TMR2_Initialize *****************
 24541 ;; Defined at:
 24542 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24543 ;; Parameters:    Size  Location     Type
 24544 ;;		None
 24545 ;; Auto vars:     Size  Location     Type
 24546 ;;		None
 24547 ;; Return value:  Size  Location     Type
 24548 ;;                  1  [STACK] void 
 24549 ;; Registers used:
 24550 ;;		wreg, status,2
 24551 ;; Tracked objects:
 24552 ;;		On entry : 3F/3F
 24553 ;;		On exit  : 3F/39
 24554 ;;		Unchanged: 0/0
 24555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24560 ;;Total ram usage:        0 bytes
 24561 ;; Hardware stack levels used:    1
 24562 ;; Hardware stack levels required when called:    7
 24563 ;; This function calls:
 24564 ;;		Nothing
 24565 ;; This function is called by:
 24566 ;;		_SYSTEM_Initialize
 24567 ;; This function uses a reentrant model
 24568 ;;
 24569                           
 24570                           	psect	text108
 24571  019572                     __ptext108:
 24572                           	opt callstack 0
 24573  019572                     _TMR2_Initialize:
 24574                           	opt callstack 22
 24575                           
 24576                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24577                           
 24578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24579                           ;incstack = 0
 24580  019572  0E01               	movlw	1
 24581  019574  6EAE               	movwf	174,c	;volatile
 24582                           
 24583                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24584  019576  6AAD               	clrf	173,c	;volatile
 24585                           
 24586                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24587  019578  6AAF               	clrf	175,c	;volatile
 24588                           
 24589                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24590  01957A  0E63               	movlw	99
 24591  01957C  6EAB               	movwf	171,c	;volatile
 24592                           
 24593                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24594  01957E  6AAA               	clrf	170,c	;volatile
 24595                           
 24596                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24597  019580  0139               	movlb	57	; () banked
 24598  019582  95A4               	bcf	164,2,b	;volatile
 24599                           
 24600                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24601  019584  0EC0               	movlw	192
 24602  019586  6EAC               	movwf	172,c	;volatile
 24603                           
 24604                           ; BSR set to: 57
 24605                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24606  019588  0012               	return		;funcret
 24607  01958A                     __end_of_TMR2_Initialize:
 24608                           	opt callstack 0
 24609                           
 24610 ;; *************** function _SPI1_Initialize *****************
 24611 ;; Defined at:
 24612 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24613 ;; Parameters:    Size  Location     Type
 24614 ;;		None
 24615 ;; Auto vars:     Size  Location     Type
 24616 ;;		None
 24617 ;; Return value:  Size  Location     Type
 24618 ;;                  1  [STACK] void 
 24619 ;; Registers used:
 24620 ;;		wreg, status,2
 24621 ;; Tracked objects:
 24622 ;;		On entry : 3F/39
 24623 ;;		On exit  : 3F/3D
 24624 ;;		Unchanged: 0/0
 24625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;Total ram usage:        0 bytes
 24631 ;; Hardware stack levels used:    1
 24632 ;; Hardware stack levels required when called:    7
 24633 ;; This function calls:
 24634 ;;		Nothing
 24635 ;; This function is called by:
 24636 ;;		_SYSTEM_Initialize
 24637 ;; This function uses a reentrant model
 24638 ;;
 24639                           
 24640                           	psect	text109
 24641  01958A                     __ptext109:
 24642                           	opt callstack 0
 24643  01958A                     _SPI1_Initialize:
 24644                           	opt callstack 22
 24645                           
 24646                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24647                           
 24648                           ; BSR set to: 57
 24649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24650                           ;incstack = 0
 24651  01958A  0E40               	movlw	64
 24652  01958C  013D               	movlb	61	; () banked
 24653  01958E  6F15               	movwf	21,b	;volatile
 24654                           
 24655                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24656  019590  0E03               	movlw	3
 24657  019592  6F16               	movwf	22,b	;volatile
 24658                           
 24659                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24660  019594  0E4F               	movlw	79
 24661  019596  6F19               	movwf	25,b	;volatile
 24662                           
 24663                           ; BSR set to: 61
 24664                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24665  019598  6B1C               	clrf	28,b	;volatile
 24666                           
 24667                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24668  01959A  0E83               	movlw	131
 24669  01959C  6F14               	movwf	20,b	;volatile
 24670                           
 24671                           ; BSR set to: 61
 24672                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24673  01959E  0012               	return		;funcret
 24674  0195A0                     __end_of_SPI1_Initialize:
 24675                           	opt callstack 0
 24676                           
 24677 ;; *************** function _PWM8_Initialize *****************
 24678 ;; Defined at:
 24679 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24680 ;; Parameters:    Size  Location     Type
 24681 ;;		None
 24682 ;; Auto vars:     Size  Location     Type
 24683 ;;		None
 24684 ;; Return value:  Size  Location     Type
 24685 ;;                  1  [STACK] void 
 24686 ;; Registers used:
 24687 ;;		wreg, status,2
 24688 ;; Tracked objects:
 24689 ;;		On entry : 0/3E
 24690 ;;		On exit  : 3F/3F
 24691 ;;		Unchanged: 0/0
 24692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;Total ram usage:        0 bytes
 24698 ;; Hardware stack levels used:    1
 24699 ;; Hardware stack levels required when called:    7
 24700 ;; This function calls:
 24701 ;;		Nothing
 24702 ;; This function is called by:
 24703 ;;		_SYSTEM_Initialize
 24704 ;; This function uses a reentrant model
 24705 ;;
 24706                           
 24707                           	psect	text110
 24708  0195A0                     __ptext110:
 24709                           	opt callstack 0
 24710  0195A0                     _PWM8_Initialize:
 24711                           	opt callstack 22
 24712                           
 24713                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24714                           
 24715                           ; BSR set to: 61
 24716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24717                           ;incstack = 0
 24718  0195A0  0E80               	movlw	128
 24719  0195A2  6E62               	movwf	98,c	;volatile
 24720                           
 24721                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24722  0195A4  6A61               	clrf	97,c	;volatile
 24723                           
 24724                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24725  0195A6  0E40               	movlw	64
 24726  0195A8  6E60               	movwf	96,c	;volatile
 24727                           
 24728                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24729  0195AA  013F               	movlb	63	; () banked
 24730  0195AC  515F               	movf	95,w,b	;volatile
 24731  0195AE  0B3F               	andlw	-193
 24732  0195B0  0940               	iorlw	64
 24733  0195B2  6F5F               	movwf	95,b	;volatile
 24734                           
 24735                           ; BSR set to: 63
 24736                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24737  0195B4  0012               	return		;funcret
 24738  0195B6                     __end_of_PWM8_Initialize:
 24739                           	opt callstack 0
 24740                           
 24741 ;; *************** function _PMD_Initialize *****************
 24742 ;; Defined at:
 24743 ;;		line 90 in file "mcc_generated_files/mcc.c"
 24744 ;; Parameters:    Size  Location     Type
 24745 ;;		None
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;		None
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1  [STACK] void 
 24750 ;; Registers used:
 24751 ;;		None
 24752 ;; Tracked objects:
 24753 ;;		On entry : 3F/39
 24754 ;;		On exit  : 3F/39
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;Total ram usage:        0 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; Hardware stack levels required when called:    7
 24764 ;; This function calls:
 24765 ;;		Nothing
 24766 ;; This function is called by:
 24767 ;;		_SYSTEM_Initialize
 24768 ;; This function uses a reentrant model
 24769 ;;
 24770                           
 24771                           	psect	text111
 24772  0195CC                     __ptext111:
 24773                           	opt callstack 0
 24774  0195CC                     _PMD_Initialize:
 24775                           	opt callstack 22
 24776                           
 24777                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 24778                           
 24779                           ; BSR set to: 63
 24780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24781                           ;incstack = 0
 24782  0195CC  0139               	movlb	57	; () banked
 24783  0195CE  6BC0               	clrf	192,b	;volatile
 24784                           
 24785                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 24786  0195D0  6BC1               	clrf	193,b	;volatile
 24787                           
 24788                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 24789  0195D2  6BC2               	clrf	194,b	;volatile
 24790                           
 24791                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 24792  0195D4  6BC3               	clrf	195,b	;volatile
 24793                           
 24794                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 24795  0195D6  6BC4               	clrf	196,b	;volatile
 24796                           
 24797                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 24798  0195D8  6BC5               	clrf	197,b	;volatile
 24799                           
 24800                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 24801  0195DA  6BC6               	clrf	198,b	;volatile
 24802                           
 24803                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 24804  0195DC  6BC7               	clrf	199,b	;volatile
 24805                           
 24806                           ; BSR set to: 57
 24807                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24808  0195DE  0012               	return		;funcret
 24809  0195E0                     __end_of_PMD_Initialize:
 24810                           	opt callstack 0
 24811                           
 24812 ;; *************** function _PIN_MANAGER_Initialize *****************
 24813 ;; Defined at:
 24814 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24815 ;; Parameters:    Size  Location     Type
 24816 ;;		None
 24817 ;; Auto vars:     Size  Location     Type
 24818 ;;		None
 24819 ;; Return value:  Size  Location     Type
 24820 ;;                  1  [STACK] void 
 24821 ;; Registers used:
 24822 ;;		wreg, status,2
 24823 ;; Tracked objects:
 24824 ;;		On entry : 3F/39
 24825 ;;		On exit  : 3F/3A
 24826 ;;		Unchanged: 0/0
 24827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24832 ;;Total ram usage:        0 bytes
 24833 ;; Hardware stack levels used:    1
 24834 ;; Hardware stack levels required when called:    7
 24835 ;; This function calls:
 24836 ;;		Nothing
 24837 ;; This function is called by:
 24838 ;;		_SYSTEM_Initialize
 24839 ;; This function uses a reentrant model
 24840 ;;
 24841                           
 24842                           	psect	text112
 24843  0180E4                     __ptext112:
 24844                           	opt callstack 0
 24845  0180E4                     _PIN_MANAGER_Initialize:
 24846                           	opt callstack 22
 24847                           
 24848                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24849                           
 24850                           ; BSR set to: 57
 24851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24852                           ;incstack = 0
 24853  0180E4  0E07               	movlw	7
 24854  0180E6  6EBE               	movwf	190,c	;volatile
 24855                           
 24856                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24857  0180E8  0E80               	movlw	128
 24858  0180EA  6EBD               	movwf	189,c	;volatile
 24859                           
 24860                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24861  0180EC  6ABA               	clrf	186,c	;volatile
 24862                           
 24863                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24864  0180EE  6ABF               	clrf	191,c	;volatile
 24865                           
 24866                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24867  0180F0  6ABB               	clrf	187,c	;volatile
 24868                           
 24869                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24870  0180F2  0E07               	movlw	7
 24871  0180F4  6EBC               	movwf	188,c	;volatile
 24872                           
 24873                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24874  0180F6  6AC6               	clrf	198,c	;volatile
 24875                           
 24876                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24877  0180F8  0E0F               	movlw	15
 24878  0180FA  6EC7               	movwf	199,c	;volatile
 24879                           
 24880                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24881  0180FC  68C2               	setf	194,c	;volatile
 24882                           
 24883                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24884  0180FE  0EBF               	movlw	191
 24885  018100  6EC3               	movwf	195,c	;volatile
 24886                           
 24887                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24888  018102  0E90               	movlw	144
 24889  018104  6EC4               	movwf	196,c	;volatile
 24890                           
 24891                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24892  018106  0E0C               	movlw	12
 24893  018108  6EC5               	movwf	197,c	;volatile
 24894                           
 24895                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24896  01810A  013A               	movlb	58	; () banked
 24897  01810C  6B70               	clrf	112,b	;volatile
 24898                           
 24899                           ; BSR set to: 58
 24900                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24901  01810E  6B60               	clrf	96,b	;volatile
 24902                           
 24903                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24904  018110  0E3C               	movlw	60
 24905  018112  6F50               	movwf	80,b	;volatile
 24906                           
 24907                           ; BSR set to: 58
 24908                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24909  018114  6B80               	clrf	128,b	;volatile
 24910                           
 24911                           ; BSR set to: 58
 24912                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24913  018116  6B90               	clrf	144,b	;volatile
 24914                           
 24915                           ; BSR set to: 58
 24916                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24917  018118  6940               	setf	64,b	;volatile
 24918                           
 24919                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24920  01811A  0E0C               	movlw	12
 24921  01811C  6F71               	movwf	113,b	;volatile
 24922                           
 24923                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24924  01811E  0E0F               	movlw	15
 24925  018120  6F91               	movwf	145,b	;volatile
 24926                           
 24927                           ; BSR set to: 58
 24928                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24929  018122  6B81               	clrf	129,b	;volatile
 24930                           
 24931                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24932  018124  0E83               	movlw	131
 24933  018126  6F51               	movwf	81,b	;volatile
 24934                           
 24935                           ; BSR set to: 58
 24936                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24937  018128  6B41               	clrf	65,b	;volatile
 24938                           
 24939                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24940  01812A  0E97               	movlw	151
 24941  01812C  6F61               	movwf	97,b	;volatile
 24942                           
 24943                           ; BSR set to: 58
 24944                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24945  01812E  6B82               	clrf	130,b	;volatile
 24946                           
 24947                           ; BSR set to: 58
 24948                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24949  018130  6B92               	clrf	146,b	;volatile
 24950                           
 24951                           ; BSR set to: 58
 24952                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24953  018132  6B42               	clrf	66,b	;volatile
 24954                           
 24955                           ; BSR set to: 58
 24956                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24957  018134  6B52               	clrf	82,b	;volatile
 24958                           
 24959                           ; BSR set to: 58
 24960                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24961  018136  6B62               	clrf	98,b	;volatile
 24962                           
 24963                           ; BSR set to: 58
 24964                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24965  018138  6B72               	clrf	114,b	;volatile
 24966                           
 24967                           ; BSR set to: 58
 24968                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24969  01813A  6943               	setf	67,b	;volatile
 24970                           
 24971                           ; BSR set to: 58
 24972                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24973  01813C  6953               	setf	83,b	;volatile
 24974                           
 24975                           ; BSR set to: 58
 24976                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24977  01813E  6963               	setf	99,b	;volatile
 24978                           
 24979                           ; BSR set to: 58
 24980                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24981  018140  6973               	setf	115,b	;volatile
 24982                           
 24983                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24984  018142  0E07               	movlw	7
 24985  018144  6F83               	movwf	131,b	;volatile
 24986                           
 24987                           ; BSR set to: 58
 24988                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24989  018146  6993               	setf	147,b	;volatile
 24990                           
 24991                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24992  018148  0E0F               	movlw	15
 24993  01814A  6FE8               	movwf	232,b	;volatile
 24994                           
 24995                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24996  01814C  0E13               	movlw	19
 24997  01814E  6FDE               	movwf	222,b	;volatile
 24998                           
 24999                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 25000  018150  0E16               	movlw	22
 25001  018152  6F0E               	movwf	14,b	;volatile
 25002                           
 25003                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 25004  018154  0E1E               	movlw	30
 25005  018156  6F13               	movwf	19,b	;volatile
 25006                           
 25007                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 25008  018158  0E08               	movlw	8
 25009  01815A  6FC0               	movwf	192,b	;volatile
 25010                           
 25011                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 25012  01815C  0E10               	movlw	16
 25013  01815E  6F19               	movwf	25,b	;volatile
 25014                           
 25015                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 25016  018160  0E09               	movlw	9
 25017  018162  6FC1               	movwf	193,b	;volatile
 25018                           
 25019                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 25020  018164  0E1F               	movlw	31
 25021  018166  6F15               	movwf	21,b	;volatile
 25022                           
 25023                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 25024  018168  0E13               	movlw	19
 25025  01816A  6F16               	movwf	22,b	;volatile
 25026                           
 25027                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 25028  01816C  0E17               	movlw	23
 25029  01816E  6FE5               	movwf	229,b	;volatile
 25030                           
 25031                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 25032  018170  0E14               	movlw	20
 25033  018172  6FDF               	movwf	223,b	;volatile
 25034                           
 25035                           ; BSR set to: 58
 25036                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 25037  018174  0012               	return		;funcret
 25038  018176                     __end_of_PIN_MANAGER_Initialize:
 25039                           	opt callstack 0
 25040                           
 25041 ;; *************** function _OSCILLATOR_Initialize *****************
 25042 ;; Defined at:
 25043 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25044 ;; Parameters:    Size  Location     Type
 25045 ;;		None
 25046 ;; Auto vars:     Size  Location     Type
 25047 ;;		None
 25048 ;; Return value:  Size  Location     Type
 25049 ;;                  1  [STACK] void 
 25050 ;; Registers used:
 25051 ;;		wreg, status,2
 25052 ;; Tracked objects:
 25053 ;;		On entry : 3F/3A
 25054 ;;		On exit  : 3F/39
 25055 ;;		Unchanged: 0/0
 25056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25061 ;;Total ram usage:        0 bytes
 25062 ;; Hardware stack levels used:    1
 25063 ;; Hardware stack levels required when called:    7
 25064 ;; This function calls:
 25065 ;;		Nothing
 25066 ;; This function is called by:
 25067 ;;		_SYSTEM_Initialize
 25068 ;; This function uses a reentrant model
 25069 ;;
 25070                           
 25071                           	psect	text113
 25072  0195B6                     __ptext113:
 25073                           	opt callstack 0
 25074  0195B6                     _OSCILLATOR_Initialize:
 25075                           	opt callstack 22
 25076                           
 25077                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25078                           
 25079                           ; BSR set to: 58
 25080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25081                           ;incstack = 0
 25082  0195B6  0E20               	movlw	32
 25083  0195B8  0139               	movlb	57	; () banked
 25084  0195BA  6FD9               	movwf	217,b	;volatile
 25085                           
 25086                           ; BSR set to: 57
 25087                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25088  0195BC  6BDB               	clrf	219,b	;volatile
 25089                           
 25090                           ; BSR set to: 57
 25091                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25092  0195BE  6BDD               	clrf	221,b	;volatile
 25093                           
 25094                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25095  0195C0  0E02               	movlw	2
 25096  0195C2  6FDF               	movwf	223,b	;volatile
 25097                           
 25098                           ; BSR set to: 57
 25099                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25100  0195C4  6BDE               	clrf	222,b	;volatile
 25101  0195C6                     l173:
 25102                           
 25103                           ; BSR set to: 57
 25104                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25105  0195C6  B1DC               	btfsc	220,0,b	;volatile
 25106  0195C8  0012               	return	
 25107  0195CA  D7FD               	goto	l173
 25108  0195CC                     __end_of_OSCILLATOR_Initialize:
 25109                           	opt callstack 0
 25110                           
 25111 ;; *************** function _INTERRUPT_Initialize *****************
 25112 ;; Defined at:
 25113 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25114 ;; Parameters:    Size  Location     Type
 25115 ;;		None
 25116 ;; Auto vars:     Size  Location     Type
 25117 ;;  state           1  [STACK] _Bool 
 25118 ;; Return value:  Size  Location     Type
 25119 ;;                  1  [STACK] void 
 25120 ;; Registers used:
 25121 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25122 ;; Tracked objects:
 25123 ;;		On entry : 0/0
 25124 ;;		On exit  : 3F/39
 25125 ;;		Unchanged: 0/0
 25126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25131 ;;Total ram usage:        0 bytes
 25132 ;; Hardware stack levels used:    1
 25133 ;; Hardware stack levels required when called:    7
 25134 ;; This function calls:
 25135 ;;		Nothing
 25136 ;; This function is called by:
 25137 ;;		_SYSTEM_Initialize
 25138 ;; This function uses a reentrant model
 25139 ;;
 25140                           
 25141                           	psect	text114
 25142  018552                     __ptext114:
 25143                           	opt callstack 0
 25144  018552                     _INTERRUPT_Initialize:
 25145                           	opt callstack 0
 25146                           
 25147                           ; BSR set to: 57
 25148                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25149  018552  52E6               	movf	postinc1,f,c
 25150                           
 25151                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25152                           
 25153                           ;incstack = 0
 25154  018554  8AD2               	bsf	210,5,c	;volatile
 25155                           
 25156                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25157  018556  AED2               	btfss	16338,7,c	;volatile
 25158  018558  D003               	goto	u8190
 25159  01855A  6A30               	clrf	(btemp+11)^0,c
 25160  01855C  2A30               	incf	(btemp+11)^0,f,c
 25161  01855E  D001               	goto	u8208
 25162  018560                     u8190:
 25163  018560  6A30               	clrf	(btemp+11)^0,c
 25164  018562                     u8208:
 25165                           
 25166                           ;stkvar	_state @ sp[(-1)+0]
 25167  018562  0EFF               	movlw	-1
 25168  018564  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 25169                           
 25170                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25171  01856A  9ED2               	bcf	16338,7,c	;volatile
 25172                           
 25173                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25174  01856C  0E55               	movlw	85
 25175  01856E  6ED4               	movwf	212,c	;volatile
 25176                           
 25177                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25178  018570  0EAA               	movlw	170
 25179  018572  6ED4               	movwf	212,c	;volatile
 25180                           
 25181                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25182  018574  90D4               	bcf	212,0,c	;volatile
 25183                           
 25184                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25185  018576  0138               	movlb	56	; () banked
 25186  018578  6B9F               	clrf	159,b	;volatile
 25187                           
 25188                           ; BSR set to: 56
 25189                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25190  01857A  6B9E               	clrf	158,b	;volatile
 25191                           
 25192                           ; BSR set to: 56
 25193                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25194  01857C  0E08               	movlw	8
 25195  01857E  6F9D               	movwf	157,b	;volatile
 25196                           
 25197                           ; BSR set to: 56
 25198                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25199  018580  0E55               	movlw	85
 25200  018582  6ED4               	movwf	212,c	;volatile
 25201                           
 25202                           ; BSR set to: 56
 25203                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25204  018584  0EAA               	movlw	170
 25205  018586  6ED4               	movwf	212,c	;volatile
 25206                           
 25207                           ; BSR set to: 56
 25208                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25209  018588  80D4               	bsf	212,0,c	;volatile
 25210                           
 25211                           ; BSR set to: 56
 25212                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25213                           ;stkvar	_state @ sp[(-1)+0]
 25214  01858A  0EFF               	movlw	-1
 25215  01858C  B0E3               	btfsc	plusw1,0,c
 25216  01858E  D002               	bra	u8215
 25217  018590  9ED2               	bcf	16338,7,c	;volatile
 25218  018592  D001               	bra	u8216
 25219  018594                     u8215:
 25220  018594  8ED2               	bsf	16338,7,c	;volatile
 25221  018596                     u8216:
 25222                           
 25223                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25224  018596  0139               	movlb	57	; () banked
 25225  018598  8782               	bsf	130,3,b	;volatile
 25226                           
 25227                           ; BSR set to: 57
 25228                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25229  01859A  8382               	bsf	130,1,b	;volatile
 25230                           
 25231                           ; BSR set to: 57
 25232                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25233  01859C  8182               	bsf	130,0,b	;volatile
 25234                           
 25235                           ; BSR set to: 57
 25236                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25237  01859E  8582               	bsf	130,2,b	;volatile
 25238                           
 25239                           ; BSR set to: 57
 25240                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25241  0185A0  8786               	bsf	134,3,b	;volatile
 25242                           
 25243                           ; BSR set to: 57
 25244                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25245  0185A2  8586               	bsf	134,2,b	;volatile
 25246                           
 25247                           ; BSR set to: 57
 25248                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25249  0185A4  8983               	bsf	131,4,b	;volatile
 25250                           
 25251                           ; BSR set to: 57
 25252                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25253  0185A6  8783               	bsf	131,3,b	;volatile
 25254                           
 25255                           ; BSR set to: 57
 25256                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25257  0185A8  8181               	bsf	129,0,b	;volatile
 25258                           
 25259                           ; BSR set to: 57
 25260                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25261  0185AA  9185               	bcf	133,0,b	;volatile
 25262                           
 25263                           ; BSR set to: 57
 25264                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25265  0185AC  8189               	bsf	137,0,b	;volatile
 25266                           
 25267                           ; BSR set to: 57
 25268                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25269  0185AE  9D88               	bcf	136,6,b	;volatile
 25270                           
 25271                           ; BSR set to: 57
 25272                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25273  0185B0  8581               	bsf	129,2,b	;volatile
 25274                           
 25275                           ; BSR set to: 57
 25276                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25277  0185B2  8781               	bsf	129,3,b	;volatile
 25278                           
 25279                           ; BSR set to: 57
 25280                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25281  0185B4  9D86               	bcf	134,6,b	;volatile
 25282                           
 25283                           ; BSR set to: 57
 25284                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25285  0185B6  52E5               	movf	postdec1,f,c
 25286  0185B8  0012               	return		;funcret
 25287  0185BA                     __end_of_INTERRUPT_Initialize:
 25288                           	opt callstack 0
 25289                           
 25290 ;; *************** function _FVR_Initialize *****************
 25291 ;; Defined at:
 25292 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25293 ;; Parameters:    Size  Location     Type
 25294 ;;		None
 25295 ;; Auto vars:     Size  Location     Type
 25296 ;;		None
 25297 ;; Return value:  Size  Location     Type
 25298 ;;                  1  [STACK] void 
 25299 ;; Registers used:
 25300 ;;		wreg, status,2
 25301 ;; Tracked objects:
 25302 ;;		On entry : 3F/39
 25303 ;;		On exit  : 3F/3E
 25304 ;;		Unchanged: 0/0
 25305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;Total ram usage:        0 bytes
 25311 ;; Hardware stack levels used:    1
 25312 ;; Hardware stack levels required when called:    7
 25313 ;; This function calls:
 25314 ;;		Nothing
 25315 ;; This function is called by:
 25316 ;;		_SYSTEM_Initialize
 25317 ;; This function uses a reentrant model
 25318 ;;
 25319                           
 25320                           	psect	text115
 25321  01969A                     __ptext115:
 25322                           	opt callstack 0
 25323  01969A                     _FVR_Initialize:
 25324                           	opt callstack 22
 25325                           
 25326                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25327                           
 25328                           ; BSR set to: 57
 25329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25330                           ;incstack = 0
 25331  01969A  0EAF               	movlw	175
 25332  01969C  013E               	movlb	62	; () banked
 25333  01969E  6FC1               	movwf	193,b	;volatile
 25334                           
 25335                           ; BSR set to: 62
 25336                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25337  0196A0  0012               	return		;funcret
 25338  0196A2                     __end_of_FVR_Initialize:
 25339                           	opt callstack 0
 25340                           
 25341 ;; *************** function _EXT_INT_Initialize *****************
 25342 ;; Defined at:
 25343 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25344 ;; Parameters:    Size  Location     Type
 25345 ;;		None
 25346 ;; Auto vars:     Size  Location     Type
 25347 ;;		None
 25348 ;; Return value:  Size  Location     Type
 25349 ;;                  1  [STACK] void 
 25350 ;; Registers used:
 25351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25352 ;; Tracked objects:
 25353 ;;		On entry : 3F/39
 25354 ;;		On exit  : 3F/39
 25355 ;;		Unchanged: 0/0
 25356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25361 ;;Total ram usage:        0 bytes
 25362 ;; Hardware stack levels used:    1
 25363 ;; Hardware stack levels required when called:    8
 25364 ;; This function calls:
 25365 ;;		_INT0_SetInterruptHandler
 25366 ;;		_INT1_SetInterruptHandler
 25367 ;; This function is called by:
 25368 ;;		_SYSTEM_Initialize
 25369 ;; This function uses a reentrant model
 25370 ;;
 25371                           
 25372                           	psect	text116
 25373  018E54                     __ptext116:
 25374                           	opt callstack 0
 25375  018E54                     _EXT_INT_Initialize:
 25376                           	opt callstack 21
 25377                           
 25378                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25379                           
 25380                           ; BSR set to: 62
 25381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25382                           ;incstack = 0
 25383  018E54  0139               	movlb	57	; () banked
 25384  018E56  91A1               	bcf	161,0,b	;volatile
 25385                           
 25386                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25387  018E58  90D2               	bcf	210,0,c	;volatile
 25388                           
 25389                           ; BSR set to: 57
 25390                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25391  018E5A  0EC6               	movlw	low _INT0_DefaultInterruptHandler
 25392  018E5C  6EE6               	movwf	postinc1,c
 25393  018E5E  0E96               	movlw	high _INT0_DefaultInterruptHandler
 25394  018E60  6EE6               	movwf	postinc1,c
 25395  018E62  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25396  018E64  6EE6               	movwf	postinc1,c
 25397  018E66  ECFF  F0C8         	call	_INT0_SetInterruptHandler	;wreg free
 25398                           
 25399                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25400  018E6A  0139               	movlb	57	; () banked
 25401  018E6C  8191               	bsf	145,0,b	;volatile
 25402                           
 25403                           ; BSR set to: 57
 25404                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25405  018E6E  91A5               	bcf	165,0,b	;volatile
 25406                           
 25407                           ; BSR set to: 57
 25408                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25409  018E70  92D2               	bcf	210,1,c	;volatile
 25410                           
 25411                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25412  018E72  0EC2               	movlw	low _INT1_DefaultInterruptHandler
 25413  018E74  6EE6               	movwf	postinc1,c
 25414  018E76  0E96               	movlw	high _INT1_DefaultInterruptHandler
 25415  018E78  6EE6               	movwf	postinc1,c
 25416  018E7A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25417  018E7C  6EE6               	movwf	postinc1,c
 25418  018E7E  ECEB  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
 25419                           
 25420                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25421  018E82  0139               	movlb	57	; () banked
 25422  018E84  8195               	bsf	149,0,b	;volatile
 25423                           
 25424                           ; BSR set to: 57
 25425                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25426  018E86  0012               	return		;funcret
 25427  018E88                     __end_of_EXT_INT_Initialize:
 25428                           	opt callstack 0
 25429                           
 25430 ;; *************** function _INT1_SetInterruptHandler *****************
 25431 ;; Defined at:
 25432 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25433 ;; Parameters:    Size  Location     Type
 25434 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25435 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25436 ;; Auto vars:     Size  Location     Type
 25437 ;;		None
 25438 ;; Return value:  Size  Location     Type
 25439 ;;                  1  [STACK] void 
 25440 ;; Registers used:
 25441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25442 ;; Tracked objects:
 25443 ;;		On entry : 3F/39
 25444 ;;		On exit  : 0/0
 25445 ;;		Unchanged: 0/0
 25446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25451 ;;Total ram usage:        0 bytes
 25452 ;; Hardware stack levels used:    1
 25453 ;; Hardware stack levels required when called:    7
 25454 ;; This function calls:
 25455 ;;		Nothing
 25456 ;; This function is called by:
 25457 ;;		_EXT_INT_Initialize
 25458 ;;		_start_switch_handler
 25459 ;; This function uses a reentrant model
 25460 ;;
 25461                           
 25462                           	psect	text117
 25463  0191D6                     __ptext117:
 25464                           	opt callstack 0
 25465  0191D6                     _INT1_SetInterruptHandler:
 25466                           	opt callstack 22
 25467                           
 25468                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25469                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25470                           
 25471                           ; BSR set to: 57
 25472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25473                           ;incstack = 0
 25474  0191D6  50E1               	movf	fsr1l,w,c
 25475  0191D8  0FFD               	addlw	-3
 25476  0191DA  6ED9               	movwf	fsr2l,c
 25477  0191DC  50E2               	movf	fsr1h,w,c
 25478  0191DE  6EDA               	movwf	fsr2h,c
 25479  0191E0  0EFF               	movlw	255
 25480  0191E2  22DA               	addwfc	fsr2h,f,c
 25481  0191E4  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 25482  0191EA  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 25483  0191F0  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 25484                           
 25485                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25486  0191F6  52E5               	movf	postdec1,f,c
 25487  0191F8  52E5               	movf	postdec1,f,c
 25488  0191FA  52E5               	movf	postdec1,f,c
 25489  0191FC  0012               	return		;funcret
 25490  0191FE                     __end_of_INT1_SetInterruptHandler:
 25491                           	opt callstack 0
 25492                           
 25493 ;; *************** function _INT0_SetInterruptHandler *****************
 25494 ;; Defined at:
 25495 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25496 ;; Parameters:    Size  Location     Type
 25497 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25498 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25499 ;; Auto vars:     Size  Location     Type
 25500 ;;		None
 25501 ;; Return value:  Size  Location     Type
 25502 ;;                  1  [STACK] void 
 25503 ;; Registers used:
 25504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25505 ;; Tracked objects:
 25506 ;;		On entry : 3F/39
 25507 ;;		On exit  : 0/0
 25508 ;;		Unchanged: 0/0
 25509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25514 ;;Total ram usage:        0 bytes
 25515 ;; Hardware stack levels used:    1
 25516 ;; Hardware stack levels required when called:    7
 25517 ;; This function calls:
 25518 ;;		Nothing
 25519 ;; This function is called by:
 25520 ;;		_EXT_INT_Initialize
 25521 ;; This function uses a reentrant model
 25522 ;;
 25523                           
 25524                           	psect	text118
 25525  0191FE                     __ptext118:
 25526                           	opt callstack 0
 25527  0191FE                     _INT0_SetInterruptHandler:
 25528                           	opt callstack 21
 25529                           
 25530                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25531                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25532                           
 25533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25534                           ;incstack = 0
 25535  0191FE  50E1               	movf	fsr1l,w,c
 25536  019200  0FFD               	addlw	-3
 25537  019202  6ED9               	movwf	fsr2l,c
 25538  019204  50E2               	movf	fsr1h,w,c
 25539  019206  6EDA               	movwf	fsr2h,c
 25540  019208  0EFF               	movlw	255
 25541  01920A  22DA               	addwfc	fsr2h,f,c
 25542  01920C  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 25543  019212  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 25544  019218  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 25545                           
 25546                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25547  01921E  52E5               	movf	postdec1,f,c
 25548  019220  52E5               	movf	postdec1,f,c
 25549  019222  52E5               	movf	postdec1,f,c
 25550  019224  0012               	return		;funcret
 25551  019226                     __end_of_INT0_SetInterruptHandler:
 25552                           	opt callstack 0
 25553                           
 25554 ;; *************** function _DMA2_Initialize *****************
 25555 ;; Defined at:
 25556 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25557 ;; Parameters:    Size  Location     Type
 25558 ;;		None
 25559 ;; Auto vars:     Size  Location     Type
 25560 ;;		None
 25561 ;; Return value:  Size  Location     Type
 25562 ;;                  1  [STACK] void 
 25563 ;; Registers used:
 25564 ;;		wreg, status,2
 25565 ;; Tracked objects:
 25566 ;;		On entry : 3F/3D
 25567 ;;		On exit  : 3F/3B
 25568 ;;		Unchanged: 0/0
 25569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25574 ;;Total ram usage:        0 bytes
 25575 ;; Hardware stack levels used:    1
 25576 ;; Hardware stack levels required when called:    7
 25577 ;; This function calls:
 25578 ;;		Nothing
 25579 ;; This function is called by:
 25580 ;;		_SYSTEM_Initialize
 25581 ;; This function uses a reentrant model
 25582 ;;
 25583                           
 25584                           	psect	text119
 25585  0187FE                     __ptext119:
 25586                           	opt callstack 0
 25587  0187FE                     _DMA2_Initialize:
 25588                           	opt callstack 22
 25589                           
 25590                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25591                           
 25592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25593                           ;incstack = 0
 25594  0187FE  0E00               	movlw	0
 25595  018800  013B               	movlb	59	; () banked
 25596  018802  6FD9               	movwf	217,b	;volatile
 25597  018804  0E10               	movlw	16
 25598  018806  6FDA               	movwf	218,b	;volatile
 25599  018808  0E00               	movlw	0
 25600  01880A  6FDB               	movwf	219,b	;volatile
 25601                           
 25602                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25603  01880C  0E3F               	movlw	63
 25604  01880E  6FD1               	movwf	209,b	;volatile
 25605  018810  0EBB               	movlw	187
 25606  018812  6FD0               	movwf	208,b	;volatile
 25607                           
 25608                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25609  018814  0E03               	movlw	3
 25610  018816  6FDD               	movwf	221,b	;volatile
 25611                           
 25612                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25613  018818  0E00               	movlw	0
 25614  01881A  6FD8               	movwf	216,b	;volatile
 25615  01881C  0E01               	movlw	1
 25616  01881E  6FD7               	movwf	215,b	;volatile
 25617                           
 25618                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25619  018820  0E00               	movlw	0
 25620  018822  6FCF               	movwf	207,b	;volatile
 25621  018824  0E01               	movlw	1
 25622  018826  6FCE               	movwf	206,b	;volatile
 25623                           
 25624                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25625  018828  0E46               	movlw	70
 25626  01882A  6FDF               	movwf	223,b	;volatile
 25627                           
 25628                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25629  01882C  0E3D               	movlw	61
 25630  01882E  6FDE               	movwf	222,b	;volatile
 25631                           
 25632                           ; BSR set to: 59
 25633                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25634  018830  0139               	movlb	57	; () banked
 25635  018832  97A5               	bcf	165,3,b	;volatile
 25636                           
 25637                           ; BSR set to: 57
 25638                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25639  018834  95A5               	bcf	165,2,b	;volatile
 25640                           
 25641                           ; BSR set to: 57
 25642                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25643  018836  9BA5               	bcf	165,5,b	;volatile
 25644                           
 25645                           ; BSR set to: 57
 25646                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25647  018838  99A5               	bcf	165,4,b	;volatile
 25648                           
 25649                           ; BSR set to: 57
 25650                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25651  01883A  9795               	bcf	149,3,b	;volatile
 25652                           
 25653                           ; BSR set to: 57
 25654                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25655  01883C  9595               	bcf	149,2,b	;volatile
 25656                           
 25657                           ; BSR set to: 57
 25658                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25659  01883E  9B95               	bcf	149,5,b	;volatile
 25660                           
 25661                           ; BSR set to: 57
 25662                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25663  018840  9995               	bcf	149,4,b	;volatile
 25664  018842  9ED2               	bcf	16338,7,c	;# 
 25665  018844  0139               	banksel	14831	;# 
 25666  018846  0E55               	movlw	85	;# 
 25667  018848  6FEF               	movwf	14831,b	;# 
 25668  01884A  0EAA               	movlw	170	;# 
 25669  01884C  6FEF               	movwf	14831,b	;# 
 25670  01884E  81EF               	bsf	14831,0,b	;# 
 25671  018850  8ED2               	bsf	16338,7,c	;# 
 25672                           
 25673                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25674  018852  013B               	movlb	59	; () banked
 25675  018854  6BDC               	clrf	220,b	;volatile
 25676                           
 25677                           ; BSR set to: 59
 25678                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25679  018856  0012               	return		;funcret
 25680  018858                     __end_of_DMA2_Initialize:
 25681                           	opt callstack 0
 25682                           
 25683 ;; *************** function _DMA1_Initialize *****************
 25684 ;; Defined at:
 25685 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25686 ;; Parameters:    Size  Location     Type
 25687 ;;		None
 25688 ;; Auto vars:     Size  Location     Type
 25689 ;;		None
 25690 ;; Return value:  Size  Location     Type
 25691 ;;                  1  [STACK] void 
 25692 ;; Registers used:
 25693 ;;		wreg, status,2
 25694 ;; Tracked objects:
 25695 ;;		On entry : 3F/3B
 25696 ;;		On exit  : 3F/3B
 25697 ;;		Unchanged: 0/0
 25698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25703 ;;Total ram usage:        0 bytes
 25704 ;; Hardware stack levels used:    1
 25705 ;; Hardware stack levels required when called:    7
 25706 ;; This function calls:
 25707 ;;		Nothing
 25708 ;; This function is called by:
 25709 ;;		_SYSTEM_Initialize
 25710 ;; This function uses a reentrant model
 25711 ;;
 25712                           
 25713                           	psect	text120
 25714  018414                     __ptext120:
 25715                           	opt callstack 0
 25716  018414                     _DMA1_Initialize:
 25717                           	opt callstack 22
 25718                           
 25719                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25720                           
 25721                           ; BSR set to: 59
 25722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25723                           ;incstack = 0
 25724  018414  0E00               	movlw	0
 25725  018416  013B               	movlb	59	; () banked
 25726  018418  6FF9               	movwf	249,b	;volatile
 25727  01841A  0E10               	movlw	16
 25728  01841C  6FFA               	movwf	250,b	;volatile
 25729  01841E  0E00               	movlw	0
 25730  018420  6FFB               	movwf	251,b	;volatile
 25731                           
 25732                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25733  018422  0E3D               	movlw	61
 25734  018424  6FF1               	movwf	241,b	;volatile
 25735  018426  0E11               	movlw	17
 25736  018428  6FF0               	movwf	240,b	;volatile
 25737                           
 25738                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25739  01842A  0E03               	movlw	3
 25740  01842C  6FFD               	movwf	253,b	;volatile
 25741                           
 25742                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25743  01842E  0E00               	movlw	0
 25744  018430  6FF8               	movwf	248,b	;volatile
 25745  018432  0E01               	movlw	1
 25746  018434  6FF7               	movwf	247,b	;volatile
 25747                           
 25748                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25749  018436  0E00               	movlw	0
 25750  018438  6FEF               	movwf	239,b	;volatile
 25751  01843A  0E01               	movlw	1
 25752  01843C  6FEE               	movwf	238,b	;volatile
 25753                           
 25754                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25755  01843E  0E15               	movlw	21
 25756  018440  6FFF               	movwf	255,b	;volatile
 25757                           
 25758                           ; BSR set to: 59
 25759                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25760  018442  6BFE               	clrf	254,b	;volatile
 25761                           
 25762                           ; BSR set to: 59
 25763                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25764  018444  0139               	movlb	57	; () banked
 25765  018446  93A2               	bcf	162,1,b	;volatile
 25766                           
 25767                           ; BSR set to: 57
 25768                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25769  018448  91A2               	bcf	162,0,b	;volatile
 25770                           
 25771                           ; BSR set to: 57
 25772                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25773  01844A  97A2               	bcf	162,3,b	;volatile
 25774                           
 25775                           ; BSR set to: 57
 25776                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25777  01844C  95A2               	bcf	162,2,b	;volatile
 25778                           
 25779                           ; BSR set to: 57
 25780                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25781  01844E  8392               	bsf	146,1,b	;volatile
 25782                           
 25783                           ; BSR set to: 57
 25784                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25785  018450  8192               	bsf	146,0,b	;volatile
 25786                           
 25787                           ; BSR set to: 57
 25788                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25789  018452  8792               	bsf	146,3,b	;volatile
 25790                           
 25791                           ; BSR set to: 57
 25792                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25793  018454  8592               	bsf	146,2,b	;volatile
 25794                           
 25795                           ; BSR set to: 57
 25796                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25797  018456  6BF1               	clrf	241,b	;volatile
 25798                           
 25799                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25800  018458  0E01               	movlw	1
 25801  01845A  6FF2               	movwf	242,b	;volatile
 25802                           
 25803                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25804  01845C  0E04               	movlw	4
 25805  01845E  6FF3               	movwf	243,b	;volatile
 25806                           
 25807                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25808  018460  0E02               	movlw	2
 25809  018462  6FF4               	movwf	244,b	;volatile
 25810                           
 25811                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25812  018464  0E03               	movlw	3
 25813  018466  6FF7               	movwf	247,b	;volatile
 25814  018468  9ED2               	bcf	16338,7,c	;# 
 25815  01846A  0139               	banksel	14831	;# 
 25816  01846C  0E55               	movlw	85	;# 
 25817  01846E  6FEF               	movwf	14831,b	;# 
 25818  018470  0EAA               	movlw	170	;# 
 25819  018472  6FEF               	movwf	14831,b	;# 
 25820  018474  81EF               	bsf	14831,0,b	;# 
 25821  018476  8ED2               	bsf	16338,7,c	;# 
 25822                           
 25823                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25824  018478  013B               	movlb	59	; () banked
 25825  01847A  6BFC               	clrf	252,b	;volatile
 25826                           
 25827                           ; BSR set to: 59
 25828                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25829  01847C  0012               	return		;funcret
 25830  01847E                     __end_of_DMA1_Initialize:
 25831                           	opt callstack 0
 25832                           
 25833 ;; *************** function _CLKREF_Initialize *****************
 25834 ;; Defined at:
 25835 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25836 ;; Parameters:    Size  Location     Type
 25837 ;;		None
 25838 ;; Auto vars:     Size  Location     Type
 25839 ;;		None
 25840 ;; Return value:  Size  Location     Type
 25841 ;;                  1  [STACK] void 
 25842 ;; Registers used:
 25843 ;;		wreg, status,2
 25844 ;; Tracked objects:
 25845 ;;		On entry : 3F/3B
 25846 ;;		On exit  : 3F/3C
 25847 ;;		Unchanged: 0/0
 25848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25853 ;;Total ram usage:        0 bytes
 25854 ;; Hardware stack levels used:    1
 25855 ;; Hardware stack levels required when called:    7
 25856 ;; This function calls:
 25857 ;;		Nothing
 25858 ;; This function is called by:
 25859 ;;		_SYSTEM_Initialize
 25860 ;; This function uses a reentrant model
 25861 ;;
 25862                           
 25863                           	psect	text121
 25864  01964E                     __ptext121:
 25865                           	opt callstack 0
 25866  01964E                     _CLKREF_Initialize:
 25867                           	opt callstack 22
 25868                           
 25869                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25870                           
 25871                           ; BSR set to: 59
 25872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25873                           ;incstack = 0
 25874  01964E  013C               	movlb	60	; () banked
 25875  019650  6BE6               	clrf	230,b	;volatile
 25876                           
 25877                           ; BSR set to: 60
 25878                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25879  019652  0E94               	movlw	148
 25880  019654  6FE5               	movwf	229,b	;volatile
 25881                           
 25882                           ; BSR set to: 60
 25883                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25884  019656  0012               	return		;funcret
 25885  019658                     __end_of_CLKREF_Initialize:
 25886                           	opt callstack 0
 25887                           
 25888 ;; *************** function _ADCC_Initialize *****************
 25889 ;; Defined at:
 25890 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25891 ;; Parameters:    Size  Location     Type
 25892 ;;		None
 25893 ;; Auto vars:     Size  Location     Type
 25894 ;;		None
 25895 ;; Return value:  Size  Location     Type
 25896 ;;                  1  [STACK] void 
 25897 ;; Registers used:
 25898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25899 ;; Tracked objects:
 25900 ;;		On entry : 3F/3E
 25901 ;;		On exit  : 0/0
 25902 ;;		Unchanged: 0/0
 25903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25908 ;;Total ram usage:        0 bytes
 25909 ;; Hardware stack levels used:    1
 25910 ;; Hardware stack levels required when called:    8
 25911 ;; This function calls:
 25912 ;;		_ADCC_SetADIInterruptHandler
 25913 ;;		_ADCC_SetADTIInterruptHandler
 25914 ;; This function is called by:
 25915 ;;		_SYSTEM_Initialize
 25916 ;; This function uses a reentrant model
 25917 ;;
 25918                           
 25919                           	psect	text122
 25920  01847E                     __ptext122:
 25921                           	opt callstack 0
 25922  01847E                     _ADCC_Initialize:
 25923                           	opt callstack 21
 25924                           
 25925                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25926                           
 25927                           ; BSR set to: 60
 25928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25929                           ;incstack = 0
 25930  01847E  013E               	movlb	62	; () banked
 25931  018480  6BDE               	clrf	222,b	;volatile
 25932                           
 25933                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25934  018482  6BDF               	clrf	223,b	;volatile
 25935                           
 25936                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25937  018484  6BE0               	clrf	224,b	;volatile
 25938                           
 25939                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25940  018486  6BE1               	clrf	225,b	;volatile
 25941                           
 25942                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25943  018488  6BE4               	clrf	228,b	;volatile
 25944                           
 25945                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25946  01848A  6BE5               	clrf	229,b	;volatile
 25947                           
 25948                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25949  01848C  6BEA               	clrf	234,b	;volatile
 25950                           
 25951                           ; BSR set to: 62
 25952                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25953  01848E  0E40               	movlw	64
 25954  018490  6FEC               	movwf	236,b	;volatile
 25955                           
 25956                           ; BSR set to: 62
 25957                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25958  018492  6BF1               	clrf	241,b	;volatile
 25959                           
 25960                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25961  018494  0E20               	movlw	32
 25962  018496  6FF3               	movwf	243,b	;volatile
 25963                           
 25964                           ; BSR set to: 62
 25965                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25966  018498  6BF4               	clrf	244,b	;volatile
 25967                           
 25968                           ; BSR set to: 62
 25969                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25970  01849A  6BF5               	clrf	245,b	;volatile
 25971                           
 25972                           ; BSR set to: 62
 25973                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25974  01849C  6BF6               	clrf	246,b	;volatile
 25975                           
 25976                           ; BSR set to: 62
 25977                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25978  01849E  6BF7               	clrf	247,b	;volatile
 25979                           
 25980                           ; BSR set to: 62
 25981                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25982  0184A0  6BF9               	clrf	249,b	;volatile
 25983                           
 25984                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25985  0184A2  0E5B               	movlw	91
 25986  0184A4  6FFA               	movwf	250,b	;volatile
 25987                           
 25988                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25989  0184A6  0E27               	movlw	39
 25990  0184A8  6FFB               	movwf	251,b	;volatile
 25991                           
 25992                           ; BSR set to: 62
 25993                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25994  0184AA  6BFC               	clrf	252,b	;volatile
 25995                           
 25996                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25997  0184AC  0E02               	movlw	2
 25998  0184AE  6FFD               	movwf	253,b	;volatile
 25999                           
 26000                           ; BSR set to: 62
 26001                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 26002  0184B0  6BFE               	clrf	254,b	;volatile
 26003                           
 26004                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 26005  0184B2  0E07               	movlw	7
 26006  0184B4  6FFF               	movwf	255,b	;volatile
 26007                           
 26008                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 26009  0184B6  0E84               	movlw	132
 26010  0184B8  6FF8               	movwf	248,b	;volatile
 26011                           
 26012                           ; BSR set to: 62
 26013                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 26014  0184BA  0139               	movlb	57	; () banked
 26015  0184BC  95A1               	bcf	161,2,b	;volatile
 26016                           
 26017                           ; BSR set to: 57
 26018                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 26019  0184BE  8591               	bsf	145,2,b	;volatile
 26020                           
 26021                           ; BSR set to: 57
 26022                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 26023  0184C0  0EC8               	movlw	low _ADCC_DefaultInterruptHandler
 26024  0184C2  6EE6               	movwf	postinc1,c
 26025  0184C4  0E96               	movlw	high _ADCC_DefaultInterruptHandler
 26026  0184C6  6EE6               	movwf	postinc1,c
 26027  0184C8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26028  0184CA  6EE6               	movwf	postinc1,c
 26029  0184CC  EC27  F0C9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 26030                           
 26031                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 26032  0184D0  0139               	movlb	57	; () banked
 26033  0184D2  97A1               	bcf	161,3,b	;volatile
 26034                           
 26035                           ; BSR set to: 57
 26036                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 26037  0184D4  8791               	bsf	145,3,b	;volatile
 26038                           
 26039                           ; BSR set to: 57
 26040                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 26041  0184D6  0EC8               	movlw	low _ADCC_DefaultInterruptHandler
 26042  0184D8  6EE6               	movwf	postinc1,c
 26043  0184DA  0E96               	movlw	high _ADCC_DefaultInterruptHandler
 26044  0184DC  6EE6               	movwf	postinc1,c
 26045  0184DE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26046  0184E0  6EE6               	movwf	postinc1,c
 26047  0184E2  EC13  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26048                           
 26049                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26050  0184E6  0012               	return		;funcret
 26051  0184E8                     __end_of_ADCC_Initialize:
 26052                           	opt callstack 0
 26053                           
 26054 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26055 ;; Defined at:
 26056 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26057 ;; Parameters:    Size  Location     Type
 26058 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26059 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26060 ;; Auto vars:     Size  Location     Type
 26061 ;;		None
 26062 ;; Return value:  Size  Location     Type
 26063 ;;                  1  [STACK] void 
 26064 ;; Registers used:
 26065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26066 ;; Tracked objects:
 26067 ;;		On entry : 0/0
 26068 ;;		On exit  : 0/0
 26069 ;;		Unchanged: 0/0
 26070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26075 ;;Total ram usage:        0 bytes
 26076 ;; Hardware stack levels used:    1
 26077 ;; Hardware stack levels required when called:    7
 26078 ;; This function calls:
 26079 ;;		Nothing
 26080 ;; This function is called by:
 26081 ;;		_ADCC_Initialize
 26082 ;;		_start_adc_scan
 26083 ;; This function uses a reentrant model
 26084 ;;
 26085                           
 26086                           	psect	text123
 26087  019226                     __ptext123:
 26088                           	opt callstack 0
 26089  019226                     _ADCC_SetADTIInterruptHandler:
 26090                           	opt callstack 22
 26091                           
 26092                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26093                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26094                           
 26095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26096                           ;incstack = 0
 26097  019226  50E1               	movf	fsr1l,w,c
 26098  019228  0FFD               	addlw	-3
 26099  01922A  6ED9               	movwf	fsr2l,c
 26100  01922C  50E2               	movf	fsr1h,w,c
 26101  01922E  6EDA               	movwf	fsr2h,c
 26102  019230  0EFF               	movlw	255
 26103  019232  22DA               	addwfc	fsr2h,f,c
 26104  019234  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26105  01923A  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26106  019240  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26107                           
 26108                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26109  019246  52E5               	movf	postdec1,f,c
 26110  019248  52E5               	movf	postdec1,f,c
 26111  01924A  52E5               	movf	postdec1,f,c
 26112  01924C  0012               	return		;funcret
 26113  01924E                     __end_of_ADCC_SetADTIInterruptHandler:
 26114                           	opt callstack 0
 26115                           
 26116 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26117 ;; Defined at:
 26118 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26119 ;; Parameters:    Size  Location     Type
 26120 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26121 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26122 ;; Auto vars:     Size  Location     Type
 26123 ;;		None
 26124 ;; Return value:  Size  Location     Type
 26125 ;;                  1  [STACK] void 
 26126 ;; Registers used:
 26127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26128 ;; Tracked objects:
 26129 ;;		On entry : 6/0
 26130 ;;		On exit  : 0/0
 26131 ;;		Unchanged: 0/0
 26132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26137 ;;Total ram usage:        0 bytes
 26138 ;; Hardware stack levels used:    1
 26139 ;; Hardware stack levels required when called:    7
 26140 ;; This function calls:
 26141 ;;		Nothing
 26142 ;; This function is called by:
 26143 ;;		_ADCC_Initialize
 26144 ;;		_start_adc_scan
 26145 ;; This function uses a reentrant model
 26146 ;;
 26147                           
 26148                           	psect	text124
 26149  01924E                     __ptext124:
 26150                           	opt callstack 0
 26151  01924E                     _ADCC_SetADIInterruptHandler:
 26152                           	opt callstack 22
 26153                           
 26154                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26155                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26156                           
 26157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26158                           ;incstack = 0
 26159  01924E  50E1               	movf	fsr1l,w,c
 26160  019250  0FFD               	addlw	-3
 26161  019252  6ED9               	movwf	fsr2l,c
 26162  019254  50E2               	movf	fsr1h,w,c
 26163  019256  6EDA               	movwf	fsr2h,c
 26164  019258  0EFF               	movlw	255
 26165  01925A  22DA               	addwfc	fsr2h,f,c
 26166  01925C  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26167  019262  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26168  019268  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26169                           
 26170                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26171  01926E  52E5               	movf	postdec1,f,c
 26172  019270  52E5               	movf	postdec1,f,c
 26173  019272  52E5               	movf	postdec1,f,c
 26174  019274  0012               	return		;funcret
 26175  019276                     __end_of_ADCC_SetADIInterruptHandler:
 26176                           	opt callstack 0
 26177                           
 26178 ;; *************** function _INT1_ISR *****************
 26179 ;; Defined at:
 26180 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26181 ;; Parameters:    Size  Location     Type
 26182 ;;		None
 26183 ;; Auto vars:     Size  Location     Type
 26184 ;;		None
 26185 ;; Return value:  Size  Location     Type
 26186 ;;                  1    wreg      void 
 26187 ;; Registers used:
 26188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26189 ;; Tracked objects:
 26190 ;;		On entry : 0/0
 26191 ;;		On exit  : 0/0
 26192 ;;		Unchanged: 0/0
 26193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26196 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26197 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26198 ;;Total ram usage:        4 bytes
 26199 ;; Hardware stack levels used:    1
 26200 ;; Hardware stack levels required when called:    5
 26201 ;; This function calls:
 26202 ;;		_INT1_CallBack
 26203 ;; This function is called by:
 26204 ;;		Interrupt level 1
 26205 ;; This function uses a non-reentrant model
 26206 ;;
 26207                           
 26208                           	psect	text125
 26209  018CD4                     __ptext125:
 26210                           	opt callstack 0
 26211  018CD4                     _INT1_ISR:
 26212                           	opt callstack 12
 26213                           
 26214                           ;incstack = 0
 26215  018CD4  006F FF60  F04B    	movff	status,??_INT1_ISR
 26216  018CDA  0060  F094  F04C   	movff	btemp,??_INT1_ISR+1
 26217  018CE0  0060  F0BC  F04D   	movff	btemp+10,??_INT1_ISR+2
 26218  018CE6  0060  F0C0  F04E   	movff	btemp+11,??_INT1_ISR+3
 26219  018CEC  EE16  F00B         	lfsr	1,___intlo_sp
 26220                           
 26221                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26222  018CF0  0139               	movlb	57	; () banked
 26223  018CF2  91A5               	bcf	165,0,b	;volatile
 26224                           
 26225                           ; BSR set to: 57
 26226                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26227  018CF4  ECF8  F0C9         	call	_INT1_CallBack	;wreg free
 26228  018CF8  0060  F138  F030   	movff	??_INT1_ISR+3,btemp+11
 26229  018CFE  0060  F134  F02F   	movff	??_INT1_ISR+2,btemp+10
 26230  018D04  0060  F130  F025   	movff	??_INT1_ISR+1,btemp
 26231  018D0A  0060  F12F  FFD8   	movff	??_INT1_ISR,status
 26232  018D10  0011               	retfie		f
 26233  018D12                     __end_of_INT1_ISR:
 26234                           	opt callstack 0
 26235                           
 26236 ;; *************** function _INT1_CallBack *****************
 26237 ;; Defined at:
 26238 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26239 ;; Parameters:    Size  Location     Type
 26240 ;;		None
 26241 ;; Auto vars:     Size  Location     Type
 26242 ;;		None
 26243 ;; Return value:  Size  Location     Type
 26244 ;;                  1  [STACK] void 
 26245 ;; Registers used:
 26246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26247 ;; Tracked objects:
 26248 ;;		On entry : 3F/39
 26249 ;;		On exit  : 0/0
 26250 ;;		Unchanged: 0/0
 26251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;Total ram usage:        0 bytes
 26257 ;; Hardware stack levels used:    1
 26258 ;; Hardware stack levels required when called:    4
 26259 ;; This function calls:
 26260 ;;		Absolute function
 26261 ;;		_INT1_DefaultInterruptHandler
 26262 ;;		_switch_handler
 26263 ;; This function is called by:
 26264 ;;		_INT1_ISR
 26265 ;; This function uses a reentrant model
 26266 ;;
 26267                           
 26268                           	psect	text126
 26269  0193F0                     __ptext126:
 26270                           	opt callstack 0
 26271  0193F0                     _INT1_CallBack:
 26272                           	opt callstack 12
 26273                           
 26274                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26275                           
 26276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26277                           ;incstack = 0
 26278  0193F0  5004               	movf	_INT1_InterruptHandler^0,w,c
 26279  0193F2  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 26280  0193F4  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 26281  0193F6  B4D8               	btfsc	status,2,c
 26282  0193F8  0012               	return	
 26283                           
 26284                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26285  0193FA  D801               	call	u871_28
 26286  0193FC  0012               	return	
 26287  0193FE                     u871_28:
 26288  0193FE  0005               	push	
 26289  019400  6EFA               	movwf	pclath,c
 26290  019402  5004               	movf	_INT1_InterruptHandler^0,w,c
 26291  019404  6EFD               	movwf	tosl,c
 26292  019406  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 26293  019408  6EFE               	movwf	tosh,c
 26294  01940A  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 26295  01940C  6EFF               	movwf	tosu,c
 26296  01940E  50FA               	movf	pclath,w,c
 26297  019410  0012               	return		;indir
 26298  019412                     __end_of_INT1_CallBack:
 26299                           	opt callstack 0
 26300                           
 26301 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26302 ;; Defined at:
 26303 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26304 ;; Parameters:    Size  Location     Type
 26305 ;;		None
 26306 ;; Auto vars:     Size  Location     Type
 26307 ;;		None
 26308 ;; Return value:  Size  Location     Type
 26309 ;;                  1  [STACK] void 
 26310 ;; Registers used:
 26311 ;;		None
 26312 ;; Tracked objects:
 26313 ;;		On entry : 0/39
 26314 ;;		On exit  : 0/0
 26315 ;;		Unchanged: 0/0
 26316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;Total ram usage:        0 bytes
 26322 ;; Hardware stack levels used:    1
 26323 ;; Hardware stack levels required when called:    3
 26324 ;; This function calls:
 26325 ;;		Nothing
 26326 ;; This function is called by:
 26327 ;;		_EXT_INT_Initialize
 26328 ;;		_INT1_CallBack
 26329 ;; This function uses a reentrant model
 26330 ;;
 26331                           
 26332                           	psect	text127
 26333  0196C2                     __ptext127:
 26334                           	opt callstack 0
 26335  0196C2                     _INT1_DefaultInterruptHandler:
 26336                           	opt callstack 12
 26337                           
 26338                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26339                           
 26340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26341                           ;incstack = 0
 26342  0196C2  0012               	return		;funcret
 26343  0196C4                     __end_of_INT1_DefaultInterruptHandler:
 26344                           	opt callstack 0
 26345                           
 26346 ;; *************** function _switch_handler *****************
 26347 ;; Defined at:
 26348 ;;		line 58 in file "dio.c"
 26349 ;; Parameters:    Size  Location     Type
 26350 ;;		None
 26351 ;; Auto vars:     Size  Location     Type
 26352 ;;  i               1  [STACK] unsigned char 
 26353 ;;  sw_value        1  [STACK] unsigned char 
 26354 ;; Return value:  Size  Location     Type
 26355 ;;                  1  [STACK] void 
 26356 ;; Registers used:
 26357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26358 ;; Tracked objects:
 26359 ;;		On entry : 0/39
 26360 ;;		On exit  : 0/0
 26361 ;;		Unchanged: 0/0
 26362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26367 ;;Total ram usage:        0 bytes
 26368 ;; Hardware stack levels used:    1
 26369 ;; Hardware stack levels required when called:    3
 26370 ;; This function calls:
 26371 ;;		Nothing
 26372 ;; This function is called by:
 26373 ;;		_start_switch_handler
 26374 ;;		_INT1_CallBack
 26375 ;; This function uses a reentrant model
 26376 ;;
 26377                           
 26378                           	psect	text128
 26379  016F10                     __ptext128:
 26380                           	opt callstack 0
 26381  016F10                     _switch_handler:
 26382                           	opt callstack 0
 26383                           
 26384                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26385  016F10  52E6               	movf	postinc1,f,c
 26386  016F12  52E6               	movf	postinc1,f,c
 26387                           
 26388                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26389                           ;stkvar	_i @ sp[(-2)+0]
 26390                           
 26391                           ;incstack = 0
 26392  016F14  0EFE               	movlw	-2
 26393  016F16  6AE3               	clrf	plusw1,c
 26394  016F18  9EBD               	bcf	189,7,c	;volatile
 26395                           
 26396                           ;dio.c: 72:  __nop();
 26397  016F1A  F000               	nop	
 26398                           
 26399                           ;dio.c: 73:  __nop();
 26400  016F1C  F000               	nop	
 26401                           
 26402                           ;dio.c: 74:  __nop();
 26403  016F1E  F000               	nop	
 26404  016F20  D019               	goto	l9186
 26405  016F22                     l9174:
 26406                           
 26407                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26408  016F22  A6CF               	btfss	207,3,c	;volatile
 26409  016F24  D011               	goto	u851_20
 26410  016F26  D00D               	goto	u851_21
 26411  016F28                     u848_28:
 26412                           
 26413                           ;stkvar	_sw_value @ sp[(-2)+1]
 26414  016F28  0EFF               	movlw	-1
 26415  016F2A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 26416                           
 26417                           ;dio.c: 80:    break;
 26418  016F30  D027               	goto	l9188
 26419  016F32                     l9176:
 26420                           
 26421                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26422  016F32  A4CF               	btfss	207,2,c	;volatile
 26423  016F34  D009               	goto	u851_20
 26424  016F36  D005               	goto	u851_21
 26425  016F38                     l9178:
 26426                           
 26427                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26428  016F38  A2CF               	btfss	207,1,c	;volatile
 26429  016F3A  D006               	goto	u851_20
 26430  016F3C  D002               	goto	u851_21
 26431  016F3E                     l9180:
 26432                           
 26433                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26434  016F3E  A0CF               	btfss	207,0,c	;volatile
 26435  016F40  D003               	goto	u851_20
 26436  016F42                     u851_21:
 26437  016F42  6A30               	clrf	(btemp+11)^0,c
 26438  016F44  2A30               	incf	(btemp+11)^0,f,c
 26439  016F46  D7F0               	goto	u848_28
 26440  016F48                     u851_20:
 26441  016F48  6A30               	clrf	(btemp+11)^0,c
 26442  016F4A  D7EE               	goto	u848_28
 26443  016F4C                     l9182:
 26444                           
 26445                           ;dio.c: 91:    sw_value = 1;
 26446                           ;stkvar	_sw_value @ sp[(-2)+1]
 26447  016F4C  0EFF               	movlw	-1
 26448  016F4E  6AE3               	clrf	plusw1,c
 26449  016F50  2AE3               	incf	plusw1,f,c
 26450                           
 26451                           ;dio.c: 92:    break;
 26452  016F52  D016               	goto	l9188
 26453  016F54                     l9186:
 26454                           
 26455                           ;stkvar	_i @ sp[(-2)+0]
 26456  016F54  0EFE               	movlw	-2
 26457  016F56  50E3               	movf	plusw1,w,c
 26458  016F58  6E2F               	movwf	(btemp+10)^0,c
 26459  016F5A  6A30               	clrf	(btemp+11)^0,c
 26460                           
 26461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26462                           ; Switch size 1, requested type "simple"
 26463                           ; Number of cases is 1, Range of values is 0 to 0
 26464                           ; switch strategies available:
 26465                           ; Name         Instructions Cycles
 26466                           ; simple_byte            4     3 (average)
 26467                           ;	Chosen strategy is simple_byte
 26468  016F5C  5030               	movf	(btemp+11)^0,w,c
 26469  016F5E  0A00               	xorlw	0	; case 0
 26470  016F60  A4D8               	btfss	status,2,c
 26471  016F62  D7F4               	goto	l9182
 26472                           
 26473                           ; Switch size 1, requested type "simple"
 26474                           ; Number of cases is 4, Range of values is 0 to 3
 26475                           ; switch strategies available:
 26476                           ; Name         Instructions Cycles
 26477                           ; simple_byte           13     7 (average)
 26478                           ;	Chosen strategy is simple_byte
 26479  016F64  502F               	movf	(btemp+10)^0,w,c
 26480  016F66  0A00               	xorlw	0	; case 0
 26481  016F68  B4D8               	btfsc	status,2,c
 26482  016F6A  D7E9               	goto	l9180
 26483  016F6C  0A01               	xorlw	1	; case 1
 26484  016F6E  B4D8               	btfsc	status,2,c
 26485  016F70  D7E3               	goto	l9178
 26486  016F72  0A03               	xorlw	3	; case 2
 26487  016F74  B4D8               	btfsc	status,2,c
 26488  016F76  D7DD               	goto	l9176
 26489  016F78  0A01               	xorlw	1	; case 3
 26490  016F7A  B4D8               	btfsc	status,2,c
 26491  016F7C  D7D2               	goto	l9174
 26492  016F7E  D7E6               	goto	l9182
 26493  016F80                     l9188:
 26494                           
 26495                           ;dio.c: 96:   if (sw_value) {
 26496                           ;stkvar	_sw_value @ sp[(-2)+1]
 26497  016F80  0EFF               	movlw	-1
 26498  016F82  50E3               	movf	plusw1,w,c
 26499  016F84  B4D8               	btfsc	status,2,c
 26500  016F86  D014               	goto	l9194
 26501                           
 26502                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26503                           ;stkvar	_i @ sp[(-2)+0]
 26504  016F88  0EFE               	movlw	-2
 26505  016F8A  50E3               	movf	plusw1,w,c
 26506  016F8C  0D05               	mullw	5
 26507  016F8E  50F3               	movf	243,w,c
 26508  016F90  0F60               	addlw	low _S
 26509  016F92  6ED9               	movwf	fsr2l,c
 26510  016F94  6ADA               	clrf	fsr2h,c
 26511  016F96  04DE               	decf	postinc2,w,c
 26512  016F98  A4D8               	btfss	status,2,c
 26513  016F9A  D041               	goto	l9202
 26514                           
 26515                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26516                           ;stkvar	_i @ sp[(-2)+0]
 26517  016F9C  0EFE               	movlw	-2
 26518  016F9E  50E3               	movf	plusw1,w,c
 26519  016FA0  0D05               	mullw	5
 26520  016FA2  50F3               	movf	243,w,c
 26521  016FA4  0F60               	addlw	low _S
 26522  016FA6  6ED9               	movwf	fsr2l,c
 26523  016FA8  6ADA               	clrf	fsr2h,c
 26524  016FAA  0E00               	movlw	0
 26525  016FAC  6EDF               	movwf	indf2,c
 26526  016FAE  D037               	goto	l9202
 26527  016FB0                     l9194:
 26528                           
 26529                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26530                           ;stkvar	_i @ sp[(-2)+0]
 26531  016FB0  0EFE               	movlw	-2
 26532  016FB2  50E3               	movf	plusw1,w,c
 26533  016FB4  0D05               	mullw	5
 26534  016FB6  50F3               	movf	243,w,c
 26535  016FB8  0F60               	addlw	low _S
 26536  016FBA  6ED9               	movwf	fsr2l,c
 26537  016FBC  6ADA               	clrf	fsr2h,c
 26538  016FBE  50DF               	movf	indf2,w,c
 26539  016FC0  A4D8               	btfss	status,2,c
 26540  016FC2  D02D               	goto	l9202
 26541                           
 26542                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26543                           ;stkvar	_i @ sp[(-2)+0]
 26544  016FC4  0EFE               	movlw	-2
 26545  016FC6  50E3               	movf	plusw1,w,c
 26546  016FC8  0D05               	mullw	5
 26547  016FCA  50F3               	movf	243,w,c
 26548  016FCC  0F60               	addlw	low _S
 26549  016FCE  6ED9               	movwf	fsr2l,c
 26550  016FD0  6ADA               	clrf	fsr2h,c
 26551  016FD2  0E01               	movlw	1
 26552  016FD4  6EDF               	movwf	indf2,c
 26553                           
 26554                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26555  016FD6  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26556                           
 26557                           ;stkvar	_i @ sp[(-2)+0]
 26558  016FDA  0EFE               	movlw	-2
 26559  016FDC  50E3               	movf	plusw1,w,c
 26560  016FDE  0D05               	mullw	5
 26561  016FE0  50F3               	movf	243,w,c
 26562  016FE2  0F61               	addlw	low (_S+1)
 26563  016FE4  6EE9               	movwf	fsr0l,c
 26564  016FE6  6AEA               	clrf	fsr0h,c
 26565  016FE8  006F FF7B FFEE     	movff	postinc2,postinc0
 26566  016FEE  006F FF7B FFEE     	movff	postinc2,postinc0
 26567  016FF4  006F FF7B FFEE     	movff	postinc2,postinc0
 26568  016FFA  006F FF7B FFEE     	movff	postinc2,postinc0
 26569                           
 26570                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26571                           ;stkvar	_i @ sp[(-2)+0]
 26572  017000  0EFE               	movlw	-2
 26573  017002  006F FF8C  F030    	movff	plusw1,btemp+11
 26574  017008  0E01               	movlw	1
 26575  01700A  6E2F               	movwf	(btemp+10)^0,c
 26576  01700C  2A30               	incf	(btemp+11)^0,f,c
 26577  01700E  D002               	goto	u855_24
 26578  017010                     u855_25:
 26579  017010  90D8               	bcf	status,0,c
 26580  017012  362F               	rlcf	(btemp+10)^0,f,c
 26581  017014                     u855_24:
 26582  017014  2E30               	decfsz	(btemp+11)^0,f,c
 26583  017016  D7FC               	goto	u855_25
 26584  017018  502F               	movf	(btemp+10)^0,w,c
 26585  01701A  0100               	movlb	0	; () banked
 26586  01701C  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26587  01701E                     l9202:
 26588                           
 26589                           ;dio.c: 107:  } while (++i < 4);
 26590                           ;stkvar	_i @ sp[(-2)+0]
 26591  01701E  0EFE               	movlw	-2
 26592  017020  2AE3               	incf	plusw1,f,c
 26593  017022  0EFE               	movlw	-2
 26594  017024  006F FF8C  F025    	movff	plusw1,btemp
 26595  01702A  0E03               	movlw	3
 26596  01702C  6425               	cpfsgt	btemp^0,c
 26597  01702E  D792               	goto	l9186
 26598                           
 26599                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 26600  017030  8EBD               	bsf	189,7,c	;volatile
 26601                           
 26602                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26603  017032  52E5               	movf	postdec1,f,c
 26604  017034  52E5               	movf	postdec1,f,c
 26605  017036  0012               	return		;funcret
 26606  017038                     __end_of_switch_handler:
 26607                           	opt callstack 0
 26608                           
 26609 ;; *************** function _TMR5_ISR *****************
 26610 ;; Defined at:
 26611 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26612 ;; Parameters:    Size  Location     Type
 26613 ;;		None
 26614 ;; Auto vars:     Size  Location     Type
 26615 ;;		None
 26616 ;; Return value:  Size  Location     Type
 26617 ;;                  1    wreg      void 
 26618 ;; Registers used:
 26619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26620 ;; Tracked objects:
 26621 ;;		On entry : 0/0
 26622 ;;		On exit  : 0/0
 26623 ;;		Unchanged: 0/0
 26624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26627 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26629 ;;Total ram usage:        4 bytes
 26630 ;; Hardware stack levels used:    1
 26631 ;; Hardware stack levels required when called:    5
 26632 ;; This function calls:
 26633 ;;		_TMR5_CallBack
 26634 ;;		_TMR5_WriteTimer
 26635 ;; This function is called by:
 26636 ;;		Interrupt level 1
 26637 ;; This function uses a non-reentrant model
 26638 ;;
 26639                           
 26640                           	psect	text129
 26641  018858                     __ptext129:
 26642                           	opt callstack 0
 26643  018858                     _TMR5_ISR:
 26644                           	opt callstack 12
 26645                           
 26646                           ;incstack = 0
 26647  018858  006F FF60  F051    	movff	status,??_TMR5_ISR+2
 26648  01885E  0060  F0C0  F052   	movff	btemp+11,??_TMR5_ISR+3
 26649  018864  EE16  F00B         	lfsr	1,___intlo_sp
 26650                           
 26651                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26652  018868  0139               	movlb	57	; () banked
 26653  01886A  9DA8               	bcf	168,6,b	;volatile
 26654                           
 26655                           ; BSR set to: 57
 26656                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26657  01886C  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 26658  018872  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26659  018878  EC2A  F0C6         	call	_TMR5_WriteTimer	;wreg free
 26660                           
 26661                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26662  01887C  0102               	movlb	2	; () banked
 26663  01887E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26664  018880  6E4F               	movwf	??_TMR5_ISR^0,c
 26665  018882  6A50               	clrf	(??_TMR5_ISR+1)^0,c
 26666  018884  0E05               	movlw	5
 26667  018886  264F               	addwf	??_TMR5_ISR^0,f,c
 26668  018888  0E00               	movlw	0
 26669  01888A  2250               	addwfc	(??_TMR5_ISR+1)^0,f,c
 26670  01888C  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26671  01888E  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26672  018890  504F               	movf	??_TMR5_ISR^0,w,c
 26673  018892  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26674  018894  5050               	movf	(??_TMR5_ISR+1)^0,w,c
 26675  018896  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26676  018898  A0D8               	btfss	status,0,c
 26677  01889A  D004               	goto	i1l1047
 26678                           
 26679                           ; BSR set to: 2
 26680                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26681  01889C  ECB1  F0C9         	call	_TMR5_CallBack	;wreg free
 26682                           
 26683                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26684  0188A0  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26685  0188A2  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26686  0188A4                     i1l1047:
 26687  0188A4  0060  F148  F030   	movff	??_TMR5_ISR+3,btemp+11
 26688  0188AA  0060  F147  FFD8   	movff	??_TMR5_ISR+2,status
 26689  0188B0  0011               	retfie		f
 26690  0188B2                     __end_of_TMR5_ISR:
 26691                           	opt callstack 0
 26692                           
 26693 ;; *************** function _TMR5_WriteTimer *****************
 26694 ;; Defined at:
 26695 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26696 ;; Parameters:    Size  Location     Type
 26697 ;;  timerVal        2  [STACK] unsigned short 
 26698 ;; Auto vars:     Size  Location     Type
 26699 ;;		None
 26700 ;; Return value:  Size  Location     Type
 26701 ;;                  1  [STACK] void 
 26702 ;; Registers used:
 26703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26704 ;; Tracked objects:
 26705 ;;		On entry : 3F/39
 26706 ;;		On exit  : 0/0
 26707 ;;		Unchanged: 0/0
 26708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26713 ;;Total ram usage:        0 bytes
 26714 ;; Hardware stack levels used:    1
 26715 ;; Hardware stack levels required when called:    3
 26716 ;; This function calls:
 26717 ;;		Nothing
 26718 ;; This function is called by:
 26719 ;;		_TMR5_ISR
 26720 ;; This function uses a reentrant model
 26721 ;;
 26722                           
 26723                           	psect	text130
 26724  018C54                     __ptext130:
 26725                           	opt callstack 0
 26726  018C54                     _TMR5_WriteTimer:
 26727                           	opt callstack 13
 26728                           
 26729                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26730                           
 26731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26732                           ;incstack = 0
 26733  018C54  A49A               	btfss	154,2,c	;volatile
 26734  018C56  D00F               	goto	l9366
 26735                           
 26736                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26737  018C58  909A               	bcf	154,0,c	;volatile
 26738                           
 26739                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26740                           ;stkvar	_timerVal @ sp[(0)+-2]
 26741  018C5A  0EFF               	movlw	255
 26742  018C5C  24E1               	addwf	fsr1l,w,c
 26743  018C5E  6ED9               	movwf	fsr2l,c
 26744  018C60  0EFF               	movlw	255
 26745  018C62  20E2               	addwfc	fsr1h,w,c
 26746  018C64  6EDA               	movwf	fsr2h,c
 26747  018C66  50DF               	movf	indf2,w,c
 26748  018C68  6E99               	movwf	153,c	;volatile
 26749                           
 26750                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26751                           ;stkvar	_timerVal @ sp[(0)+-2]
 26752  018C6A  0EFE               	movlw	-2
 26753  018C6C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26754                           
 26755                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26756  018C72  809A               	bsf	154,0,c	;volatile
 26757                           
 26758                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26759  018C74  D00C               	goto	l1030
 26760  018C76                     l9366:
 26761                           
 26762                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26763                           ;stkvar	_timerVal @ sp[(0)+-2]
 26764  018C76  0EFF               	movlw	255
 26765  018C78  24E1               	addwf	fsr1l,w,c
 26766  018C7A  6ED9               	movwf	fsr2l,c
 26767  018C7C  0EFF               	movlw	255
 26768  018C7E  20E2               	addwfc	fsr1h,w,c
 26769  018C80  6EDA               	movwf	fsr2h,c
 26770  018C82  50DF               	movf	indf2,w,c
 26771  018C84  6E99               	movwf	153,c	;volatile
 26772                           
 26773                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26774                           ;stkvar	_timerVal @ sp[(0)+-2]
 26775  018C86  0EFE               	movlw	-2
 26776  018C88  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26777  018C8E                     l1030:
 26778                           
 26779                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26780  018C8E  52E5               	movf	postdec1,f,c
 26781  018C90  52E5               	movf	postdec1,f,c
 26782  018C92  0012               	return		;funcret
 26783  018C94                     __end_of_TMR5_WriteTimer:
 26784                           	opt callstack 0
 26785                           
 26786 ;; *************** function _TMR5_CallBack *****************
 26787 ;; Defined at:
 26788 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26789 ;; Parameters:    Size  Location     Type
 26790 ;;		None
 26791 ;; Auto vars:     Size  Location     Type
 26792 ;;		None
 26793 ;; Return value:  Size  Location     Type
 26794 ;;                  1  [STACK] void 
 26795 ;; Registers used:
 26796 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26797 ;; Tracked objects:
 26798 ;;		On entry : 3F/2
 26799 ;;		On exit  : 0/0
 26800 ;;		Unchanged: 0/0
 26801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26806 ;;Total ram usage:        0 bytes
 26807 ;; Hardware stack levels used:    1
 26808 ;; Hardware stack levels required when called:    4
 26809 ;; This function calls:
 26810 ;;		Absolute function
 26811 ;;		_TMR5_DefaultInterruptHandler
 26812 ;; This function is called by:
 26813 ;;		_TMR5_ISR
 26814 ;; This function uses a reentrant model
 26815 ;;
 26816                           
 26817                           	psect	text131
 26818  019362                     __ptext131:
 26819                           	opt callstack 0
 26820  019362                     _TMR5_CallBack:
 26821                           	opt callstack 12
 26822                           
 26823                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26824                           
 26825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26826                           ;incstack = 0
 26827  019362  0100               	movlb	0	; () banked
 26828  019364  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26829  019366  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26830  019368  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26831  01936A  B4D8               	btfsc	status,2,c
 26832  01936C  0012               	return	
 26833                           
 26834                           ; BSR set to: 0
 26835                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26836  01936E  D801               	call	u882_28
 26837  019370  0012               	return	
 26838  019372                     u882_28:
 26839  019372  0005               	push	
 26840  019374  6EFA               	movwf	pclath,c
 26841  019376  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26842  019378  6EFD               	movwf	tosl,c
 26843  01937A  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26844  01937C  6EFE               	movwf	tosh,c
 26845  01937E  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26846  019380  6EFF               	movwf	tosu,c
 26847  019382  50FA               	movf	pclath,w,c
 26848  019384  0012               	return		;indir
 26849  019386                     __end_of_TMR5_CallBack:
 26850                           	opt callstack 0
 26851                           
 26852 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26853 ;; Defined at:
 26854 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26855 ;; Parameters:    Size  Location     Type
 26856 ;;		None
 26857 ;; Auto vars:     Size  Location     Type
 26858 ;;		None
 26859 ;; Return value:  Size  Location     Type
 26860 ;;                  1  [STACK] void 
 26861 ;; Registers used:
 26862 ;;		wreg, status,2, status,0, btemp+11
 26863 ;; Tracked objects:
 26864 ;;		On entry : 3F/0
 26865 ;;		On exit  : 3F/2
 26866 ;;		Unchanged: 0/0
 26867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26872 ;;Total ram usage:        0 bytes
 26873 ;; Hardware stack levels used:    1
 26874 ;; Hardware stack levels required when called:    3
 26875 ;; This function calls:
 26876 ;;		Nothing
 26877 ;; This function is called by:
 26878 ;;		_TMR5_Initialize
 26879 ;;		_TMR5_CallBack
 26880 ;; This function uses a reentrant model
 26881 ;;
 26882                           
 26883                           	psect	text132
 26884  019276                     __ptext132:
 26885                           	opt callstack 0
 26886  019276                     _TMR5_DefaultInterruptHandler:
 26887                           	opt callstack 12
 26888                           
 26889                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26890                           
 26891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26892                           ;incstack = 0
 26893  019276  A0BE               	btfss	190,0,c	;volatile
 26894  019278  D002               	goto	u825_20
 26895  01927A  0E01               	movlw	1
 26896  01927C  D001               	goto	u825_26
 26897  01927E                     u825_20:
 26898  01927E  0E00               	movlw	0
 26899  019280                     u825_26:
 26900  019280  0AFF               	xorlw	255
 26901  019282  6E30               	movwf	(btemp+11)^0,c
 26902  019284  50BE               	movf	190,w,c	;volatile
 26903  019286  1830               	xorwf	(btemp+11)^0,w,c
 26904  019288  0BFE               	andlw	-2
 26905  01928A  1830               	xorwf	(btemp+11)^0,w,c
 26906  01928C  6EBE               	movwf	190,c	;volatile
 26907                           
 26908                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26909  01928E  0E01               	movlw	1
 26910  019290  0102               	movlb	2	; () banked
 26911  019292  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26912  019294  0E00               	movlw	0
 26913  019296  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26914  019298  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26915  01929A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26916                           
 26917                           ; BSR set to: 2
 26918                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26919  01929C  0012               	return		;funcret
 26920  01929E                     __end_of_TMR5_DefaultInterruptHandler:
 26921                           	opt callstack 0
 26922                           
 26923 ;; *************** function _TMR3_ISR *****************
 26924 ;; Defined at:
 26925 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 26926 ;; Parameters:    Size  Location     Type
 26927 ;;		None
 26928 ;; Auto vars:     Size  Location     Type
 26929 ;;		None
 26930 ;; Return value:  Size  Location     Type
 26931 ;;                  1    wreg      void 
 26932 ;; Registers used:
 26933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 26934 ;; Tracked objects:
 26935 ;;		On entry : 0/0
 26936 ;;		On exit  : 0/0
 26937 ;;		Unchanged: 0/0
 26938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26941 ;;      Temps:          0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26942 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26943 ;;Total ram usage:       13 bytes
 26944 ;; Hardware stack levels used:    1
 26945 ;; Hardware stack levels required when called:    6
 26946 ;; This function calls:
 26947 ;;		_TMR3_CallBack
 26948 ;;		_TMR3_WriteTimer
 26949 ;; This function is called by:
 26950 ;;		Interrupt level 1
 26951 ;; This function uses a non-reentrant model
 26952 ;;
 26953                           
 26954                           	psect	text133
 26955  017960                     __ptext133:
 26956                           	opt callstack 0
 26957  017960                     _TMR3_ISR:
 26958                           	opt callstack 11
 26959                           
 26960                           ; BSR set to: 2
 26961                           ;incstack = 0
 26962  017960  006F FF60  F1D5    	movff	status,??_TMR3_ISR
 26963  017966  0060  F094  F1D6   	movff	btemp,??_TMR3_ISR+1
 26964  01796C  0060  F098  F1D7   	movff	btemp+1,??_TMR3_ISR+2
 26965  017972  0060  F09C  F1D8   	movff	btemp+2,??_TMR3_ISR+3
 26966  017978  0060  F0A0  F1D9   	movff	btemp+3,??_TMR3_ISR+4
 26967  01797E  0060  F0A4  F1DA   	movff	btemp+4,??_TMR3_ISR+5
 26968  017984  0060  F0A8  F1DB   	movff	btemp+5,??_TMR3_ISR+6
 26969  01798A  0060  F0AC  F1DC   	movff	btemp+6,??_TMR3_ISR+7
 26970  017990  0060  F0B0  F1DD   	movff	btemp+7,??_TMR3_ISR+8
 26971  017996  0060  F0B4  F1DE   	movff	btemp+8,??_TMR3_ISR+9
 26972  01799C  0060  F0B8  F1DF   	movff	btemp+9,??_TMR3_ISR+10
 26973  0179A2  0060  F0BC  F1E0   	movff	btemp+10,??_TMR3_ISR+11
 26974  0179A8  0060  F0C0  F1E1   	movff	btemp+11,??_TMR3_ISR+12
 26975  0179AE  EE16  F00B         	lfsr	1,___intlo_sp
 26976                           
 26977                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 26978  0179B2  0139               	movlb	57	; () banked
 26979  0179B4  9DA6               	bcf	166,6,b	;volatile
 26980                           
 26981                           ; BSR set to: 57
 26982                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 26983  0179B6  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 26984  0179BC  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 26985  0179C2  EC4A  F0C6         	call	_TMR3_WriteTimer	;wreg free
 26986                           
 26987                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 26988  0179C6  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 26989  0179C8  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 26990  0179CA  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 26991  0179CC  E104               	bnz	i1u1083_20
 26992  0179CE  0E28               	movlw	40
 26993  0179D0  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 26994  0179D2  A0D8               	btfss	status,0,c
 26995  0179D4  D004               	goto	i1l1235
 26996  0179D6                     i1u1083_20:
 26997                           
 26998                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 26999  0179D6  ECC3  F0C9         	call	_TMR3_CallBack	;wreg free
 27000                           
 27001                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 27002  0179DA  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 27003  0179DC  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 27004  0179DE                     i1l1235:
 27005  0179DE  0060  F784  F030   	movff	??_TMR3_ISR+12,btemp+11
 27006  0179E4  0060  F780  F02F   	movff	??_TMR3_ISR+11,btemp+10
 27007  0179EA  0060  F77C  F02E   	movff	??_TMR3_ISR+10,btemp+9
 27008  0179F0  0060  F778  F02D   	movff	??_TMR3_ISR+9,btemp+8
 27009  0179F6  0060  F774  F02C   	movff	??_TMR3_ISR+8,btemp+7
 27010  0179FC  0060  F770  F02B   	movff	??_TMR3_ISR+7,btemp+6
 27011  017A02  0060  F76C  F02A   	movff	??_TMR3_ISR+6,btemp+5
 27012  017A08  0060  F768  F029   	movff	??_TMR3_ISR+5,btemp+4
 27013  017A0E  0060  F764  F028   	movff	??_TMR3_ISR+4,btemp+3
 27014  017A14  0060  F760  F027   	movff	??_TMR3_ISR+3,btemp+2
 27015  017A1A  0060  F75C  F026   	movff	??_TMR3_ISR+2,btemp+1
 27016  017A20  0060  F758  F025   	movff	??_TMR3_ISR+1,btemp
 27017  017A26  0060  F757  FFD8   	movff	??_TMR3_ISR,status
 27018  017A2C  0011               	retfie		f
 27019  017A2E                     __end_of_TMR3_ISR:
 27020                           	opt callstack 0
 27021                           
 27022 ;; *************** function _TMR3_WriteTimer *****************
 27023 ;; Defined at:
 27024 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 27025 ;; Parameters:    Size  Location     Type
 27026 ;;  timerVal        2  [STACK] unsigned short 
 27027 ;; Auto vars:     Size  Location     Type
 27028 ;;		None
 27029 ;; Return value:  Size  Location     Type
 27030 ;;                  1  [STACK] void 
 27031 ;; Registers used:
 27032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27033 ;; Tracked objects:
 27034 ;;		On entry : 3F/39
 27035 ;;		On exit  : 0/0
 27036 ;;		Unchanged: 0/0
 27037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27042 ;;Total ram usage:        0 bytes
 27043 ;; Hardware stack levels used:    1
 27044 ;; Hardware stack levels required when called:    3
 27045 ;; This function calls:
 27046 ;;		Nothing
 27047 ;; This function is called by:
 27048 ;;		_TMR3_ISR
 27049 ;; This function uses a reentrant model
 27050 ;;
 27051                           
 27052                           	psect	text134
 27053  018C94                     __ptext134:
 27054                           	opt callstack 0
 27055  018C94                     _TMR3_WriteTimer:
 27056                           	opt callstack 13
 27057                           
 27058                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27059                           
 27060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27061                           ;incstack = 0
 27062  018C94  A4A6               	btfss	166,2,c	;volatile
 27063  018C96  D00F               	goto	l5906
 27064                           
 27065                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27066  018C98  90A6               	bcf	166,0,c	;volatile
 27067                           
 27068                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27069                           ;stkvar	_timerVal @ sp[(0)+-2]
 27070  018C9A  0EFF               	movlw	255
 27071  018C9C  24E1               	addwf	fsr1l,w,c
 27072  018C9E  6ED9               	movwf	fsr2l,c
 27073  018CA0  0EFF               	movlw	255
 27074  018CA2  20E2               	addwfc	fsr1h,w,c
 27075  018CA4  6EDA               	movwf	fsr2h,c
 27076  018CA6  50DF               	movf	indf2,w,c
 27077  018CA8  6EA5               	movwf	165,c	;volatile
 27078                           
 27079                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27080                           ;stkvar	_timerVal @ sp[(0)+-2]
 27081  018CAA  0EFE               	movlw	-2
 27082  018CAC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27083                           
 27084                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27085  018CB2  80A6               	bsf	166,0,c	;volatile
 27086                           
 27087                           ;mcc_generated_files/tmr3.c: 141:     }
 27088  018CB4  D00C               	goto	l1218
 27089  018CB6                     l5906:
 27090                           
 27091                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27092                           ;stkvar	_timerVal @ sp[(0)+-2]
 27093  018CB6  0EFF               	movlw	255
 27094  018CB8  24E1               	addwf	fsr1l,w,c
 27095  018CBA  6ED9               	movwf	fsr2l,c
 27096  018CBC  0EFF               	movlw	255
 27097  018CBE  20E2               	addwfc	fsr1h,w,c
 27098  018CC0  6EDA               	movwf	fsr2h,c
 27099  018CC2  50DF               	movf	indf2,w,c
 27100  018CC4  6EA5               	movwf	165,c	;volatile
 27101                           
 27102                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27103                           ;stkvar	_timerVal @ sp[(0)+-2]
 27104  018CC6  0EFE               	movlw	-2
 27105  018CC8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27106  018CCE                     l1218:
 27107                           
 27108                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27109  018CCE  52E5               	movf	postdec1,f,c
 27110  018CD0  52E5               	movf	postdec1,f,c
 27111  018CD2  0012               	return		;funcret
 27112  018CD4                     __end_of_TMR3_WriteTimer:
 27113                           	opt callstack 0
 27114                           
 27115 ;; *************** function _TMR3_CallBack *****************
 27116 ;; Defined at:
 27117 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27118 ;; Parameters:    Size  Location     Type
 27119 ;;		None
 27120 ;; Auto vars:     Size  Location     Type
 27121 ;;		None
 27122 ;; Return value:  Size  Location     Type
 27123 ;;                  1  [STACK] void 
 27124 ;; Registers used:
 27125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 27126 ;; Tracked objects:
 27127 ;;		On entry : 0/39
 27128 ;;		On exit  : 0/0
 27129 ;;		Unchanged: 0/0
 27130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27135 ;;Total ram usage:        0 bytes
 27136 ;; Hardware stack levels used:    1
 27137 ;; Hardware stack levels required when called:    5
 27138 ;; This function calls:
 27139 ;;		Absolute function
 27140 ;;		_TMR3_DefaultInterruptHandler
 27141 ;;		_calc_bsoc
 27142 ;; This function is called by:
 27143 ;;		_TMR3_ISR
 27144 ;; This function uses a reentrant model
 27145 ;;
 27146                           
 27147                           	psect	text135
 27148  019386                     __ptext135:
 27149                           	opt callstack 0
 27150  019386                     _TMR3_CallBack:
 27151                           	opt callstack 11
 27152                           
 27153                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27154                           
 27155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27156                           ;incstack = 0
 27157  019386  0100               	movlb	0	; () banked
 27158  019388  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27159  01938A  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27160  01938C  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27161  01938E  B4D8               	btfsc	status,2,c
 27162  019390  0012               	return	
 27163                           
 27164                           ; BSR set to: 0
 27165                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27166  019392  D801               	call	u884_28
 27167  019394  0012               	return	
 27168  019396                     u884_28:
 27169  019396  0005               	push	
 27170  019398  6EFA               	movwf	pclath,c
 27171  01939A  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27172  01939C  6EFD               	movwf	tosl,c
 27173  01939E  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27174  0193A0  6EFE               	movwf	tosh,c
 27175  0193A2  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27176  0193A4  6EFF               	movwf	tosu,c
 27177  0193A6  50FA               	movf	pclath,w,c
 27178  0193A8  0012               	return		;indir
 27179  0193AA                     __end_of_TMR3_CallBack:
 27180                           	opt callstack 0
 27181                           
 27182 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27183 ;; Defined at:
 27184 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27185 ;; Parameters:    Size  Location     Type
 27186 ;;		None
 27187 ;; Auto vars:     Size  Location     Type
 27188 ;;		None
 27189 ;; Return value:  Size  Location     Type
 27190 ;;                  1  [STACK] void 
 27191 ;; Registers used:
 27192 ;;		None
 27193 ;; Tracked objects:
 27194 ;;		On entry : 3F/0
 27195 ;;		On exit  : 0/0
 27196 ;;		Unchanged: 0/0
 27197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27202 ;;Total ram usage:        0 bytes
 27203 ;; Hardware stack levels used:    1
 27204 ;; Hardware stack levels required when called:    3
 27205 ;; This function calls:
 27206 ;;		Nothing
 27207 ;; This function is called by:
 27208 ;;		_TMR3_Initialize
 27209 ;;		_TMR3_CallBack
 27210 ;; This function uses a reentrant model
 27211 ;;
 27212                           
 27213                           	psect	text136
 27214  0196C4                     __ptext136:
 27215                           	opt callstack 0
 27216  0196C4                     _TMR3_DefaultInterruptHandler:
 27217                           	opt callstack 12
 27218                           
 27219                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27220                           
 27221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27222                           ;incstack = 0
 27223  0196C4  0012               	return		;funcret
 27224  0196C6                     __end_of_TMR3_DefaultInterruptHandler:
 27225                           	opt callstack 0
 27226                           
 27227 ;; *************** function _calc_bsoc *****************
 27228 ;; Defined at:
 27229 ;;		line 7 in file "bsoc.c"
 27230 ;; Parameters:    Size  Location     Type
 27231 ;;		None
 27232 ;; Auto vars:     Size  Location     Type
 27233 ;;		None
 27234 ;; Return value:  Size  Location     Type
 27235 ;;                  1  [STACK] void 
 27236 ;; Registers used:
 27237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27238 ;; Tracked objects:
 27239 ;;		On entry : 3F/0
 27240 ;;		On exit  : 3F/1
 27241 ;;		Unchanged: 0/0
 27242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27247 ;;Total ram usage:        0 bytes
 27248 ;; Hardware stack levels used:    1
 27249 ;; Hardware stack levels required when called:    4
 27250 ;; This function calls:
 27251 ;;		___fladd
 27252 ;;		___fldiv
 27253 ;;		___flge
 27254 ;;		___flmul
 27255 ;;		___flneg
 27256 ;;		___fltol
 27257 ;; This function is called by:
 27258 ;;		_init_bsoc
 27259 ;;		_TMR3_CallBack
 27260 ;; This function uses a reentrant model
 27261 ;;
 27262                           
 27263                           	psect	text137
 27264  013B88                     __ptext137:
 27265                           	opt callstack 0
 27266  013B88                     _calc_bsoc:
 27267                           	opt callstack 11
 27268                           
 27269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27270                           ;incstack = 0
 27271                           ;bsoc.c: 10:  do { LATEbits.LATE1 = 1; } while(0);
 27272  013B88  82BE               	bsf	190,1,c	;volatile
 27273                           
 27274                           ;bsoc.c: 12:  C.dynamic_ah += (C.c_bat / 3600.0);
 27275  013B8A  0E00               	movlw	0
 27276  013B8C  6EE6               	movwf	postinc1,c
 27277  013B8E  0E00               	movlw	0
 27278  013B90  6EE6               	movwf	postinc1,c
 27279  013B92  0E61               	movlw	97
 27280  013B94  6EE6               	movwf	postinc1,c
 27281  013B96  0E45               	movlw	69
 27282  013B98  6EE6               	movwf	postinc1,c
 27283  013B9A  0060  F513  FFE6   	movff	_C+68,postinc1
 27284  013BA0  0060  F517  FFE6   	movff	_C+69,postinc1
 27285  013BA6  0060  F51B  FFE6   	movff	_C+70,postinc1
 27286  013BAC  0060  F51F  FFE6   	movff	_C+71,postinc1
 27287  013BB2  EC07  F09B         	call	___fldiv	;wreg free
 27288  013BB6  0060  F097  FFE6   	movff	btemp,postinc1
 27289  013BBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27290  013BC2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27291  013BC8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27292  013BCE  0060  F613  FFE6   	movff	_C+132,postinc1
 27293  013BD4  0060  F617  FFE6   	movff	_C+133,postinc1
 27294  013BDA  0060  F61B  FFE6   	movff	_C+134,postinc1
 27295  013BE0  0060  F61F  FFE6   	movff	_C+135,postinc1
 27296  013BE6  EC29  F097         	call	___fladd	;wreg free
 27297  013BEA  0060  F094  F184   	movff	btemp,_C+132	;volatile
 27298  013BF0  0060  F098  F185   	movff	btemp+1,_C+133	;volatile
 27299  013BF6  0060  F09C  F186   	movff	btemp+2,_C+134	;volatile
 27300  013BFC  0060  F0A0  F187   	movff	btemp+3,_C+135	;volatile
 27301                           
 27302                           ;bsoc.c: 13:  if (C.dynamic_ah > (C.bank_ah))
 27303  013C02  0060  F613  FFE6   	movff	_C+132,postinc1
 27304  013C08  0060  F617  FFE6   	movff	_C+133,postinc1
 27305  013C0E  0060  F61B  FFE6   	movff	_C+134,postinc1
 27306  013C14  0060  F61F  FFE6   	movff	_C+135,postinc1
 27307  013C1A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27308  013C20  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27309  013C26  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27310  013C2C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27311  013C32  EC99  F0B5         	call	___flge	;wreg free
 27312  013C36  B025               	btfsc	btemp& (0+255),0,c
 27313  013C38  D008               	goto	l9228
 27314                           
 27315                           ;bsoc.c: 14:   C.dynamic_ah = C.bank_ah;
 27316  013C3A  C17C  F184         	movff	_C+124,_C+132	;volatile
 27317  013C3E  C17D  F185         	movff	_C+125,_C+133	;volatile
 27318  013C42  C17E  F186         	movff	_C+126,_C+134	;volatile
 27319  013C46  C17F  F187         	movff	_C+127,_C+135	;volatile
 27320  013C4A                     l9228:
 27321                           
 27322                           ;bsoc.c: 15:  if (C.dynamic_ah < 0.1)
 27323  013C4A  0ECD               	movlw	205
 27324  013C4C  6EE6               	movwf	postinc1,c
 27325  013C4E  0ECC               	movlw	204
 27326  013C50  6EE6               	movwf	postinc1,c
 27327  013C52  0ECC               	movlw	204
 27328  013C54  6EE6               	movwf	postinc1,c
 27329  013C56  0E3D               	movlw	61
 27330  013C58  6EE6               	movwf	postinc1,c
 27331  013C5A  0060  F613  FFE6   	movff	_C+132,postinc1
 27332  013C60  0060  F617  FFE6   	movff	_C+133,postinc1
 27333  013C66  0060  F61B  FFE6   	movff	_C+134,postinc1
 27334  013C6C  0060  F61F  FFE6   	movff	_C+135,postinc1
 27335  013C72  EC99  F0B5         	call	___flge	;wreg free
 27336  013C76  B025               	btfsc	btemp& (0+255),0,c
 27337  013C78  D009               	goto	l9232
 27338                           
 27339                           ;bsoc.c: 16:   C.dynamic_ah = 0.1;
 27340  013C7A  0ECD               	movlw	205
 27341  013C7C  0101               	movlb	1	; () banked
 27342  013C7E  6F84               	movwf	(_C+132)& (0+255),b	;volatile
 27343  013C80  0ECC               	movlw	204
 27344  013C82  6F85               	movwf	(_C+133)& (0+255),b	;volatile
 27345  013C84  0ECC               	movlw	204
 27346  013C86  6F86               	movwf	(_C+134)& (0+255),b	;volatile
 27347  013C88  0E3D               	movlw	61
 27348  013C8A  6F87               	movwf	(_C+135)& (0+255),b	;volatile
 27349  013C8C                     l9232:
 27350                           
 27351                           ;bsoc.c: 18:  C.pv_ah += (C.c_pv / 3600.0);
 27352  013C8C  0E00               	movlw	0
 27353  013C8E  6EE6               	movwf	postinc1,c
 27354  013C90  0E00               	movlw	0
 27355  013C92  6EE6               	movwf	postinc1,c
 27356  013C94  0E61               	movlw	97
 27357  013C96  6EE6               	movwf	postinc1,c
 27358  013C98  0E45               	movlw	69
 27359  013C9A  6EE6               	movwf	postinc1,c
 27360  013C9C  0060  F523  FFE6   	movff	_C+72,postinc1
 27361  013CA2  0060  F527  FFE6   	movff	_C+73,postinc1
 27362  013CA8  0060  F52B  FFE6   	movff	_C+74,postinc1
 27363  013CAE  0060  F52F  FFE6   	movff	_C+75,postinc1
 27364  013CB4  EC07  F09B         	call	___fldiv	;wreg free
 27365  013CB8  0060  F097  FFE6   	movff	btemp,postinc1
 27366  013CBE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27367  013CC4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27368  013CCA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27369  013CD0  0060  F623  FFE6   	movff	_C+136,postinc1
 27370  013CD6  0060  F627  FFE6   	movff	_C+137,postinc1
 27371  013CDC  0060  F62B  FFE6   	movff	_C+138,postinc1
 27372  013CE2  0060  F62F  FFE6   	movff	_C+139,postinc1
 27373  013CE8  EC29  F097         	call	___fladd	;wreg free
 27374  013CEC  0060  F094  F188   	movff	btemp,_C+136	;volatile
 27375  013CF2  0060  F098  F189   	movff	btemp+1,_C+137	;volatile
 27376  013CF8  0060  F09C  F18A   	movff	btemp+2,_C+138	;volatile
 27377  013CFE  0060  F0A0  F18B   	movff	btemp+3,_C+139	;volatile
 27378                           
 27379                           ;bsoc.c: 19:  C.pvkw += (C.p_pv / 3600.0);
 27380  013D04  0E00               	movlw	0
 27381  013D06  6EE6               	movwf	postinc1,c
 27382  013D08  0E00               	movlw	0
 27383  013D0A  6EE6               	movwf	postinc1,c
 27384  013D0C  0E61               	movlw	97
 27385  013D0E  6EE6               	movwf	postinc1,c
 27386  013D10  0E45               	movlw	69
 27387  013D12  6EE6               	movwf	postinc1,c
 27388  013D14  0060  F5C3  FFE6   	movff	_C+112,postinc1
 27389  013D1A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 27390  013D20  0060  F5CB  FFE6   	movff	_C+114,postinc1
 27391  013D26  0060  F5CF  FFE6   	movff	_C+115,postinc1
 27392  013D2C  EC07  F09B         	call	___fldiv	;wreg free
 27393  013D30  0060  F097  FFE6   	movff	btemp,postinc1
 27394  013D36  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27395  013D3C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27396  013D42  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27397  013D48  0060  F663  FFE6   	movff	_C+152,postinc1
 27398  013D4E  0060  F667  FFE6   	movff	_C+153,postinc1
 27399  013D54  0060  F66B  FFE6   	movff	_C+154,postinc1
 27400  013D5A  0060  F66F  FFE6   	movff	_C+155,postinc1
 27401  013D60  EC29  F097         	call	___fladd	;wreg free
 27402  013D64  0060  F094  F198   	movff	btemp,_C+152	;volatile
 27403  013D6A  0060  F098  F199   	movff	btemp+1,_C+153	;volatile
 27404  013D70  0060  F09C  F19A   	movff	btemp+2,_C+154	;volatile
 27405  013D76  0060  F0A0  F19B   	movff	btemp+3,_C+155	;volatile
 27406                           
 27407                           ;bsoc.c: 20:  C.invkw += (C.p_inverter / 3600.0);
 27408  013D7C  0E00               	movlw	0
 27409  013D7E  6EE6               	movwf	postinc1,c
 27410  013D80  0E00               	movlw	0
 27411  013D82  6EE6               	movwf	postinc1,c
 27412  013D84  0E61               	movlw	97
 27413  013D86  6EE6               	movwf	postinc1,c
 27414  013D88  0E45               	movlw	69
 27415  013D8A  6EE6               	movwf	postinc1,c
 27416  013D8C  0060  F5B3  FFE6   	movff	_C+108,postinc1
 27417  013D92  0060  F5B7  FFE6   	movff	_C+109,postinc1
 27418  013D98  0060  F5BB  FFE6   	movff	_C+110,postinc1
 27419  013D9E  0060  F5BF  FFE6   	movff	_C+111,postinc1
 27420  013DA4  EC07  F09B         	call	___fldiv	;wreg free
 27421  013DA8  0060  F097  FFE6   	movff	btemp,postinc1
 27422  013DAE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27423  013DB4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27424  013DBA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27425  013DC0  0060  F673  FFE6   	movff	_C+156,postinc1
 27426  013DC6  0060  F677  FFE6   	movff	_C+157,postinc1
 27427  013DCC  0060  F67B  FFE6   	movff	_C+158,postinc1
 27428  013DD2  0060  F67F  FFE6   	movff	_C+159,postinc1
 27429  013DD8  EC29  F097         	call	___fladd	;wreg free
 27430  013DDC  0060  F094  F19C   	movff	btemp,_C+156	;volatile
 27431  013DE2  0060  F098  F19D   	movff	btemp+1,_C+157	;volatile
 27432  013DE8  0060  F09C  F19E   	movff	btemp+2,_C+158	;volatile
 27433  013DEE  0060  F0A0  F19F   	movff	btemp+3,_C+159	;volatile
 27434                           
 27435                           ;bsoc.c: 21:  if (C.p_bat > 0.0)
 27436  013DF4  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27437  013DFA  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27438  013E00  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27439  013E06  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27440  013E0C  0E00               	movlw	0
 27441  013E0E  6EE6               	movwf	postinc1,c
 27442  013E10  0E00               	movlw	0
 27443  013E12  6EE6               	movwf	postinc1,c
 27444  013E14  0E00               	movlw	0
 27445  013E16  6EE6               	movwf	postinc1,c
 27446  013E18  0E00               	movlw	0
 27447  013E1A  6EE6               	movwf	postinc1,c
 27448  013E1C  EC99  F0B5         	call	___flge	;wreg free
 27449  013E20  B025               	btfsc	btemp& (0+255),0,c
 27450  013E22  D03C               	goto	l9242
 27451                           
 27452                           ;bsoc.c: 22:   C.bkwi += (C.p_bat / 3600.0);
 27453  013E24  0E00               	movlw	0
 27454  013E26  6EE6               	movwf	postinc1,c
 27455  013E28  0E00               	movlw	0
 27456  013E2A  6EE6               	movwf	postinc1,c
 27457  013E2C  0E61               	movlw	97
 27458  013E2E  6EE6               	movwf	postinc1,c
 27459  013E30  0E45               	movlw	69
 27460  013E32  6EE6               	movwf	postinc1,c
 27461  013E34  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27462  013E3A  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27463  013E40  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27464  013E46  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27465  013E4C  EC07  F09B         	call	___fldiv	;wreg free
 27466  013E50  0060  F097  FFE6   	movff	btemp,postinc1
 27467  013E56  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27468  013E5C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27469  013E62  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27470  013E68  0060  F643  FFE6   	movff	_C+144,postinc1
 27471  013E6E  0060  F647  FFE6   	movff	_C+145,postinc1
 27472  013E74  0060  F64B  FFE6   	movff	_C+146,postinc1
 27473  013E7A  0060  F64F  FFE6   	movff	_C+147,postinc1
 27474  013E80  EC29  F097         	call	___fladd	;wreg free
 27475  013E84  0060  F094  F190   	movff	btemp,_C+144	;volatile
 27476  013E8A  0060  F098  F191   	movff	btemp+1,_C+145	;volatile
 27477  013E90  0060  F09C  F192   	movff	btemp+2,_C+146	;volatile
 27478  013E96  0060  F0A0  F193   	movff	btemp+3,_C+147	;volatile
 27479  013E9C                     l9242:
 27480                           
 27481                           ;bsoc.c: 23:  if (C.p_bat < 0.0)
 27482  013E9C  0101               	movlb	1	; () banked
 27483  013E9E  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 27484  013EA0  D03C               	goto	l9246
 27485                           
 27486                           ; BSR set to: 1
 27487                           ;bsoc.c: 24:   C.bkwo += (C.p_bat / 3600.0);
 27488  013EA2  0E00               	movlw	0
 27489  013EA4  6EE6               	movwf	postinc1,c
 27490  013EA6  0E00               	movlw	0
 27491  013EA8  6EE6               	movwf	postinc1,c
 27492  013EAA  0E61               	movlw	97
 27493  013EAC  6EE6               	movwf	postinc1,c
 27494  013EAE  0E45               	movlw	69
 27495  013EB0  6EE6               	movwf	postinc1,c
 27496  013EB2  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27497  013EB8  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27498  013EBE  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27499  013EC4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27500  013ECA  EC07  F09B         	call	___fldiv	;wreg free
 27501  013ECE  0060  F097  FFE6   	movff	btemp,postinc1
 27502  013ED4  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27503  013EDA  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27504  013EE0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27505  013EE6  0060  F653  FFE6   	movff	_C+148,postinc1
 27506  013EEC  0060  F657  FFE6   	movff	_C+149,postinc1
 27507  013EF2  0060  F65B  FFE6   	movff	_C+150,postinc1
 27508  013EF8  0060  F65F  FFE6   	movff	_C+151,postinc1
 27509  013EFE  EC29  F097         	call	___fladd	;wreg free
 27510  013F02  0060  F094  F194   	movff	btemp,_C+148	;volatile
 27511  013F08  0060  F098  F195   	movff	btemp+1,_C+149	;volatile
 27512  013F0E  0060  F09C  F196   	movff	btemp+2,_C+150	;volatile
 27513  013F14  0060  F0A0  F197   	movff	btemp+3,_C+151	;volatile
 27514  013F1A                     l9246:
 27515                           
 27516                           ;bsoc.c: 25:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 27517  013F1A  0E00               	movlw	0
 27518  013F1C  6EE6               	movwf	postinc1,c
 27519  013F1E  0E00               	movlw	0
 27520  013F20  6EE6               	movwf	postinc1,c
 27521  013F22  0EC8               	movlw	200
 27522  013F24  6EE6               	movwf	postinc1,c
 27523  013F26  0E42               	movlw	66
 27524  013F28  6EE6               	movwf	postinc1,c
 27525  013F2A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27526  013F30  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27527  013F36  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27528  013F3C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27529  013F42  0060  F613  FFE6   	movff	_C+132,postinc1
 27530  013F48  0060  F617  FFE6   	movff	_C+133,postinc1
 27531  013F4E  0060  F61B  FFE6   	movff	_C+134,postinc1
 27532  013F54  0060  F61F  FFE6   	movff	_C+135,postinc1
 27533  013F5A  EC07  F09B         	call	___fldiv	;wreg free
 27534  013F5E  0060  F097  FFE6   	movff	btemp,postinc1
 27535  013F64  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27536  013F6A  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27537  013F70  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27538  013F76  EC14  F093         	call	___flmul	;wreg free
 27539  013F7A  0060  F097  FFE6   	movff	btemp,postinc1
 27540  013F80  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27541  013F86  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27542  013F8C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27543  013F92  ECE0  F0B4         	call	___fltol	;wreg free
 27544  013F96  0060  F094  F02F   	movff	btemp,btemp+10
 27545  013F9C  0060  F098  F030   	movff	btemp+1,btemp+11
 27546  013FA2  0E01               	movlw	1
 27547  013FA4  242F               	addwf	(btemp+10)^0,w,c
 27548  013FA6  0101               	movlb	1	; () banked
 27549  013FA8  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
 27550  013FAA  0E00               	movlw	0
 27551  013FAC  2030               	addwfc	(btemp+11)^0,w,c
 27552  013FAE  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
 27553                           
 27554                           ; BSR set to: 1
 27555                           ;bsoc.c: 26:  if (C.soc > 100)
 27556  013FB0  51A3               	movf	(_C+163)& (0+255),w,b	;volatile
 27557  013FB2  E104               	bnz	u867_20
 27558  013FB4  0E65               	movlw	101
 27559  013FB6  5DA2               	subwf	(_C+162)& (0+255),w,b	;volatile
 27560  013FB8  A0D8               	btfss	status,0,c
 27561  013FBA  D004               	goto	l9252
 27562  013FBC                     u867_20:
 27563                           
 27564                           ; BSR set to: 1
 27565                           ;bsoc.c: 27:   C.soc = 100;
 27566  013FBC  0E00               	movlw	0
 27567  013FBE  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
 27568  013FC0  0E64               	movlw	100
 27569  013FC2  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
 27570  013FC4                     l9252:
 27571                           
 27572                           ; BSR set to: 1
 27573                           ;bsoc.c: 29:  if (C.c_bat < 0.0) {
 27574  013FC4  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 27575  013FC6  D043               	goto	l9256
 27576                           
 27577                           ; BSR set to: 1
 27578                           ;bsoc.c: 30:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 27579  013FC8  0060  F513  FFE6   	movff	_C+68,postinc1
 27580  013FCE  0060  F517  FFE6   	movff	_C+69,postinc1
 27581  013FD4  0060  F51B  FFE6   	movff	_C+70,postinc1
 27582  013FDA  0060  F51F  FFE6   	movff	_C+71,postinc1
 27583  013FE0  0060  F613  FFE6   	movff	_C+132,postinc1
 27584  013FE6  0060  F617  FFE6   	movff	_C+133,postinc1
 27585  013FEC  0060  F61B  FFE6   	movff	_C+134,postinc1
 27586  013FF2  0060  F61F  FFE6   	movff	_C+135,postinc1
 27587  013FF8  EC07  F09B         	call	___fldiv	;wreg free
 27588  013FFC  0060  F097  FFE6   	movff	btemp,postinc1
 27589  014002  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27590  014008  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27591  01400E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27592  014014  ECF7  F0C4         	call	___flneg	;wreg free
 27593  014018  0060  F097  FFE6   	movff	btemp,postinc1
 27594  01401E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27595  014024  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27596  01402A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27597  014030  ECE0  F0B4         	call	___fltol	;wreg free
 27598  014034  0060  F094  F02F   	movff	btemp,btemp+10
 27599  01403A  0060  F098  F030   	movff	btemp+1,btemp+11
 27600  014040  0060  F0BC  F1A0   	movff	btemp+10,_C+160	;volatile
 27601  014046  0060  F0C0  F1A1   	movff	btemp+11,_C+161	;volatile
 27602                           
 27603                           ;bsoc.c: 31:  } else {
 27604  01404C  D004               	goto	l9258
 27605  01404E                     l9256:
 27606                           
 27607                           ; BSR set to: 1
 27608                           ;bsoc.c: 32:   C.runtime = 120;
 27609  01404E  0E00               	movlw	0
 27610  014050  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
 27611  014052  0E78               	movlw	120
 27612  014054  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 27613  014056                     l9258:
 27614                           
 27615                           ;bsoc.c: 34:  if (C.runtime > 120)
 27616  014056  0101               	movlb	1	; () banked
 27617  014058  51A1               	movf	(_C+161)& (0+255),w,b	;volatile
 27618  01405A  E104               	bnz	u869_20
 27619  01405C  0E79               	movlw	121
 27620  01405E  5DA0               	subwf	(_C+160)& (0+255),w,b	;volatile
 27621  014060  A0D8               	btfss	status,0,c
 27622  014062  D004               	goto	l9262
 27623  014064                     u869_20:
 27624                           
 27625                           ; BSR set to: 1
 27626                           ;bsoc.c: 35:   C.runtime = 120;
 27627  014064  0E00               	movlw	0
 27628  014066  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
 27629  014068  0E78               	movlw	120
 27630  01406A  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 27631  01406C                     l9262:
 27632                           
 27633                           ; BSR set to: 1
 27634                           ;bsoc.c: 37:  V.lowint_count++;
 27635  01406C  0E01               	movlw	1
 27636  01406E  0102               	movlb	2	; () banked
 27637  014070  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 27638  014072  0E00               	movlw	0
 27639  014074  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 27640  014076  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 27641  014078  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 27642                           
 27643                           ; BSR set to: 2
 27644                           ;bsoc.c: 38:  C.update = 0;
 27645  01407A  0101               	movlb	1	; () banked
 27646  01407C  6BA4               	clrf	(_C+164)& (0+255),b	;volatile
 27647                           
 27648                           ; BSR set to: 1
 27649  01407E  92BE               	bcf	190,1,c	;volatile
 27650                           
 27651                           ; BSR set to: 1
 27652                           ; _calc_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27653  014080  0012               	return		;funcret
 27654  014082                     __end_of_calc_bsoc:
 27655                           	opt callstack 0
 27656                           
 27657 ;; *************** function _INT0_ISR *****************
 27658 ;; Defined at:
 27659 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 27660 ;; Parameters:    Size  Location     Type
 27661 ;;		None
 27662 ;; Auto vars:     Size  Location     Type
 27663 ;;		None
 27664 ;; Return value:  Size  Location     Type
 27665 ;;                  1    wreg      void 
 27666 ;; Registers used:
 27667 ;;		wreg, status,2, status,0, pclath, tosl
 27668 ;; Tracked objects:
 27669 ;;		On entry : 0/0
 27670 ;;		On exit  : 0/0
 27671 ;;		Unchanged: 0/0
 27672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27677 ;;Total ram usage:        0 bytes
 27678 ;; Hardware stack levels used:    1
 27679 ;; Hardware stack levels required when called:    2
 27680 ;; This function calls:
 27681 ;;		_INT0_CallBack
 27682 ;; This function is called by:
 27683 ;;		Interrupt level 2
 27684 ;; This function uses a non-reentrant model
 27685 ;;
 27686                           
 27687                           	psect	text138
 27688  019630                     __ptext138:
 27689                           	opt callstack 0
 27690  019630                     _INT0_ISR:
 27691                           	opt callstack 11
 27692                           
 27693                           ; BSR set to: 1
 27694                           ;incstack = 0
 27695  019630  EE14  F016         	lfsr	1,___inthi_sp
 27696                           
 27697                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 27698  019634  0139               	movlb	57	; () banked
 27699  019636  91A1               	bcf	161,0,b	;volatile
 27700                           
 27701                           ; BSR set to: 57
 27702                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 27703  019638  EC09  F0CA         	call	_INT0_CallBack	;wreg free
 27704  01963C  0011               	retfie		f
 27705  01963E                     __end_of_INT0_ISR:
 27706                           	opt callstack 0
 27707                           
 27708 ;; *************** function _INT0_CallBack *****************
 27709 ;; Defined at:
 27710 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 27711 ;; Parameters:    Size  Location     Type
 27712 ;;		None
 27713 ;; Auto vars:     Size  Location     Type
 27714 ;;		None
 27715 ;; Return value:  Size  Location     Type
 27716 ;;                  1  [STACK] void 
 27717 ;; Registers used:
 27718 ;;		wreg, status,2, status,0, pclath, tosl
 27719 ;; Tracked objects:
 27720 ;;		On entry : 3F/39
 27721 ;;		On exit  : 0/0
 27722 ;;		Unchanged: 0/0
 27723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27728 ;;Total ram usage:        0 bytes
 27729 ;; Hardware stack levels used:    1
 27730 ;; Hardware stack levels required when called:    1
 27731 ;; This function calls:
 27732 ;;		Absolute function
 27733 ;;		_INT0_DefaultInterruptHandler
 27734 ;; This function is called by:
 27735 ;;		_INT0_ISR
 27736 ;; This function uses a reentrant model
 27737 ;;
 27738                           
 27739                           	psect	text139
 27740  019412                     __ptext139:
 27741                           	opt callstack 0
 27742  019412                     _INT0_CallBack:
 27743                           	opt callstack 11
 27744                           
 27745                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 27746                           
 27747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27748                           ;incstack = 0
 27749  019412  5007               	movf	_INT0_InterruptHandler^0,w,c
 27750  019414  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 27751  019416  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 27752  019418  B4D8               	btfsc	status,2,c
 27753  01941A  0012               	return	
 27754                           
 27755                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 27756  01941C  D801               	call	u405_48
 27757  01941E  0012               	return	
 27758  019420                     u405_48:
 27759  019420  0005               	push	
 27760  019422  6EFA               	movwf	pclath,c
 27761  019424  5007               	movf	_INT0_InterruptHandler^0,w,c
 27762  019426  6EFD               	movwf	tosl,c
 27763  019428  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 27764  01942A  6EFE               	movwf	tosh,c
 27765  01942C  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 27766  01942E  6EFF               	movwf	tosu,c
 27767  019430  50FA               	movf	pclath,w,c
 27768  019432  0012               	return		;indir
 27769  019434                     __end_of_INT0_CallBack:
 27770                           	opt callstack 0
 27771                           
 27772 ;; *************** function _INT0_DefaultInterruptHandler *****************
 27773 ;; Defined at:
 27774 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 27775 ;; Parameters:    Size  Location     Type
 27776 ;;		None
 27777 ;; Auto vars:     Size  Location     Type
 27778 ;;		None
 27779 ;; Return value:  Size  Location     Type
 27780 ;;                  1  [STACK] void 
 27781 ;; Registers used:
 27782 ;;		None
 27783 ;; Tracked objects:
 27784 ;;		On entry : 0/39
 27785 ;;		On exit  : 0/0
 27786 ;;		Unchanged: 0/0
 27787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27792 ;;Total ram usage:        0 bytes
 27793 ;; Hardware stack levels used:    1
 27794 ;; This function calls:
 27795 ;;		Nothing
 27796 ;; This function is called by:
 27797 ;;		_EXT_INT_Initialize
 27798 ;;		_INT0_CallBack
 27799 ;; This function uses a reentrant model
 27800 ;;
 27801                           
 27802                           	psect	text140
 27803  0196C6                     __ptext140:
 27804                           	opt callstack 0
 27805  0196C6                     _INT0_DefaultInterruptHandler:
 27806                           	opt callstack 11
 27807                           
 27808                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27809                           
 27810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27811                           ;incstack = 0
 27812  0196C6  0012               	return		;funcret
 27813  0196C8                     __end_of_INT0_DefaultInterruptHandler:
 27814                           	opt callstack 0
 27815                           
 27816 ;; *************** function _Default_ISR *****************
 27817 ;; Defined at:
 27818 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 27819 ;; Parameters:    Size  Location     Type
 27820 ;;		None
 27821 ;; Auto vars:     Size  Location     Type
 27822 ;;		None
 27823 ;; Return value:  Size  Location     Type
 27824 ;;                  1    wreg      void 
 27825 ;; Registers used:
 27826 ;;		None
 27827 ;; Tracked objects:
 27828 ;;		On entry : 0/0
 27829 ;;		On exit  : 0/0
 27830 ;;		Unchanged: 0/0
 27831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27836 ;;Total ram usage:        0 bytes
 27837 ;; Hardware stack levels used:    1
 27838 ;; This function calls:
 27839 ;;		Nothing
 27840 ;; This function is called by:
 27841 ;;		Interrupt level 2
 27842 ;; This function uses a non-reentrant model
 27843 ;;
 27844                           
 27845                           	psect	text141
 27846  0196BC                     __ptext141:
 27847                           	opt callstack 0
 27848  0196BC                     _Default_ISR:
 27849                           	opt callstack 13
 27850                           
 27851                           ;incstack = 0
 27852  0196BC  EE14  F016         	lfsr	1,___inthi_sp
 27853  0196C0  0011               	retfie		f
 27854  0196C2                     __end_of_Default_ISR:
 27855                           	opt callstack 0
 27856                           
 27857 ;; *************** function _ADCC_ISR *****************
 27858 ;; Defined at:
 27859 ;;		line 314 in file "mcc_generated_files/adcc.c"
 27860 ;; Parameters:    Size  Location     Type
 27861 ;;		None
 27862 ;; Auto vars:     Size  Location     Type
 27863 ;;		None
 27864 ;; Return value:  Size  Location     Type
 27865 ;;                  1    wreg      void 
 27866 ;; Registers used:
 27867 ;;		wreg, status,2, status,0, pclath, tosl
 27868 ;; Tracked objects:
 27869 ;;		On entry : 0/0
 27870 ;;		On exit  : 0/0
 27871 ;;		Unchanged: 0/0
 27872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27877 ;;Total ram usage:        0 bytes
 27878 ;; Hardware stack levels used:    1
 27879 ;; Hardware stack levels required when called:    1
 27880 ;; This function calls:
 27881 ;;		Absolute function
 27882 ;;		_ADCC_DefaultInterruptHandler
 27883 ;;		_adc_int_handler
 27884 ;; This function is called by:
 27885 ;;		Interrupt level 2
 27886 ;; This function uses a non-reentrant model
 27887 ;;
 27888                           
 27889                           	psect	text142
 27890  018F48                     __ptext142:
 27891                           	opt callstack 0
 27892  018F48                     _ADCC_ISR:
 27893                           	opt callstack 12
 27894                           
 27895                           ;incstack = 0
 27896  018F48  EE14  F016         	lfsr	1,___inthi_sp
 27897                           
 27898                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 27899  018F4C  0139               	movlb	57	; () banked
 27900  018F4E  95A1               	bcf	161,2,b	;volatile
 27901                           
 27902                           ; BSR set to: 57
 27903                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 27904  018F50  0100               	movlb	0	; () banked
 27905  018F52  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27906  018F54  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27907  018F56  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27908  018F58  B4D8               	btfsc	status,2,c
 27909  018F5A  0011               	retfie		f
 27910                           
 27911                           ; BSR set to: 0
 27912                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 27913  018F5C  D801               	call	i2u906_48
 27914  018F5E  0011               	retfie		f
 27915  018F60                     i2u906_48:
 27916  018F60  0005               	push	
 27917  018F62  6EFA               	movwf	pclath,c
 27918  018F64  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27919  018F66  6EFD               	movwf	tosl,c
 27920  018F68  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27921  018F6A  6EFE               	movwf	tosh,c
 27922  018F6C  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27923  018F6E  6EFF               	movwf	tosu,c
 27924  018F70  50FA               	movf	pclath,w,c
 27925  018F72  0012               	return		;indir
 27926  018F74                     __end_of_ADCC_ISR:
 27927                           	opt callstack 0
 27928                           
 27929 ;; *************** function _adc_int_t_handler *****************
 27930 ;; Defined at:
 27931 ;;		line 128 in file "daq.c"
 27932 ;; Parameters:    Size  Location     Type
 27933 ;;		None
 27934 ;; Auto vars:     Size  Location     Type
 27935 ;;		None
 27936 ;; Return value:  Size  Location     Type
 27937 ;;                  1  [STACK] void 
 27938 ;; Registers used:
 27939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 27940 ;; Tracked objects:
 27941 ;;		On entry : 3F/0
 27942 ;;		On exit  : 1/0
 27943 ;;		Unchanged: 0/0
 27944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27949 ;;Total ram usage:        0 bytes
 27950 ;; Hardware stack levels used:    1
 27951 ;; Hardware stack levels required when called:    1
 27952 ;; This function calls:
 27953 ;;		_ADCC_DischargeSampleCapacitor
 27954 ;;		_ADCC_StartConversion
 27955 ;; This function is called by:
 27956 ;;		_start_adc_scan
 27957 ;;		_ADCC_ThresholdISR
 27958 ;; This function uses a reentrant model
 27959 ;;
 27960                           
 27961                           	psect	text143
 27962  018396                     __ptext143:
 27963                           	opt callstack 0
 27964  018396                     _adc_int_t_handler:
 27965                           	opt callstack 11
 27966                           
 27967                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 27968                           
 27969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27970                           ;incstack = 0
 27971  018396  013E               	movlb	62	; () banked
 27972  018398  51E6               	movf	230,w,b	;volatile
 27973  01839A  006F FB9C  F025    	movff	16103,btemp	;volatile
 27974  0183A0  6A26               	clrf	(btemp+1)^0,c
 27975  0183A2  0060  F094  F026   	movff	btemp,btemp+1
 27976  0183A8  6A25               	clrf	btemp^0,c
 27977  0183AA  2625               	addwf	btemp^0,f,c
 27978  0183AC  0E00               	movlw	0
 27979  0183AE  2226               	addwfc	(btemp+1)^0,f,c
 27980  0183B0  0100               	movlb	0	; () banked
 27981  0183B2  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27982  0183B4  0D02               	mullw	2
 27983  0183B6  50F3               	movf	243,w,c
 27984  0183B8  0FC3               	addlw	low _R
 27985  0183BA  6ED9               	movwf	fsr2l,c
 27986  0183BC  6ADA               	clrf	fsr2h,c
 27987  0183BE  0060  F097  FFDE   	movff	btemp,postinc2
 27988  0183C4  0060  F09B  FFDD   	movff	btemp+1,postdec2
 27989  0183CA                     l9608:
 27990                           
 27991                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 27992  0183CA  0100               	movlb	0	; () banked
 27993  0183CC  2BE7               	incf	(_R+36)& (0+255),f,b	;volatile
 27994  0183CE  0E0D               	movlw	13
 27995  0183D0  65E7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 27996  0183D2  D003               	goto	l9614
 27997                           
 27998                           ; BSR set to: 0
 27999                           ;daq.c: 136:    R.done = 1;
 28000  0183D4  0E01               	movlw	1
 28001  0183D6  6FEA               	movwf	(_R+39)& (0+255),b	;volatile
 28002  0183D8  0012               	return	
 28003  0183DA                     l9614:
 28004                           
 28005                           ; BSR set to: 0
 28006                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 28007  0183DA  0060  F39C  F030   	movff	_R+36,btemp+11	;volatile
 28008  0183E0  EE20  F0E8         	lfsr	2,_R+37	;volatile
 28009  0183E4  006F FF78  F02D    	movff	postinc2,btemp+8
 28010  0183EA  006F FF74  F02E    	movff	postdec2,btemp+9
 28011  0183F0  2A30               	incf	(btemp+11)^0,f,c
 28012  0183F2  D003               	goto	u903_44
 28013  0183F4                     u903_45:
 28014  0183F4  90D8               	bcf	status,0,c
 28015  0183F6  322E               	rrcf	(btemp+9)^0,f,c
 28016  0183F8  322D               	rrcf	(btemp+8)^0,f,c
 28017  0183FA                     u903_44:
 28018  0183FA  2E30               	decfsz	(btemp+11)^0,f,c
 28019  0183FC  D7FB               	goto	u903_45
 28020  0183FE  A02D               	btfss	(btemp+8)^0,0,c
 28021  018400  D7E4               	goto	l9608
 28022                           
 28023                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 28024  018402  EC3D  F0CB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 28025                           
 28026                           ; BSR set to: 62
 28027                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 28028  018406  0100               	movlb	0	; () banked
 28029  018408  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 28030  01840A  0B0F               	andlw	15
 28031  01840C  6EE6               	movwf	postinc1,c
 28032  01840E  ECF0  F0CA         	call	_ADCC_StartConversion	;wreg free
 28033                           
 28034                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28035  018412  0012               	return		;funcret
 28036  018414                     __end_of_adc_int_t_handler:
 28037                           	opt callstack 0
 28038                           
 28039 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28040 ;; Defined at:
 28041 ;;		line 339 in file "mcc_generated_files/adcc.c"
 28042 ;; Parameters:    Size  Location     Type
 28043 ;;		None
 28044 ;; Auto vars:     Size  Location     Type
 28045 ;;		None
 28046 ;; Return value:  Size  Location     Type
 28047 ;;                  1  [STACK] void 
 28048 ;; Registers used:
 28049 ;;		None
 28050 ;; Tracked objects:
 28051 ;;		On entry : 3F/0
 28052 ;;		On exit  : 0/0
 28053 ;;		Unchanged: 0/0
 28054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28059 ;;Total ram usage:        0 bytes
 28060 ;; Hardware stack levels used:    1
 28061 ;; This function calls:
 28062 ;;		Nothing
 28063 ;; This function is called by:
 28064 ;;		_ADCC_Initialize
 28065 ;;		_ADCC_ISR
 28066 ;;		_ADCC_ThresholdISR
 28067 ;; This function uses a reentrant model
 28068 ;;
 28069                           
 28070                           	psect	text144
 28071  0196C8                     __ptext144:
 28072                           	opt callstack 0
 28073  0196C8                     _ADCC_DefaultInterruptHandler:
 28074                           	opt callstack 12
 28075                           
 28076                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28077                           
 28078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28079                           ;incstack = 0
 28080  0196C8  0012               	return		;funcret
 28081  0196CA                     __end_of_ADCC_DefaultInterruptHandler:
 28082                           	opt callstack 0
 28083                           
 28084 ;; *************** function _adc_int_handler *****************
 28085 ;; Defined at:
 28086 ;;		line 118 in file "daq.c"
 28087 ;; Parameters:    Size  Location     Type
 28088 ;;		None
 28089 ;; Auto vars:     Size  Location     Type
 28090 ;;		None
 28091 ;; Return value:  Size  Location     Type
 28092 ;;                  1  [STACK] void 
 28093 ;; Registers used:
 28094 ;;		None
 28095 ;; Tracked objects:
 28096 ;;		On entry : 3F/0
 28097 ;;		On exit  : 0/0
 28098 ;;		Unchanged: 0/0
 28099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28104 ;;Total ram usage:        0 bytes
 28105 ;; Hardware stack levels used:    1
 28106 ;; This function calls:
 28107 ;;		Nothing
 28108 ;; This function is called by:
 28109 ;;		_start_adc_scan
 28110 ;;		_ADCC_ISR
 28111 ;; This function uses a reentrant model
 28112 ;;
 28113                           
 28114                           	psect	text145
 28115  0196CA                     __ptext145:
 28116                           	opt callstack 0
 28117  0196CA                     _adc_int_handler:
 28118                           	opt callstack 12
 28119                           
 28120                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28121                           
 28122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28123                           ;incstack = 0
 28124  0196CA  0012               	return		;funcret
 28125  0196CC                     __end_of_adc_int_handler:
 28126                           	opt callstack 0
 28127                           
 28128 ;; *************** function _ADCC_ThresholdISR *****************
 28129 ;; Defined at:
 28130 ;;		line 327 in file "mcc_generated_files/adcc.c"
 28131 ;; Parameters:    Size  Location     Type
 28132 ;;		None
 28133 ;; Auto vars:     Size  Location     Type
 28134 ;;		None
 28135 ;; Return value:  Size  Location     Type
 28136 ;;                  1    wreg      void 
 28137 ;; Registers used:
 28138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 28139 ;; Tracked objects:
 28140 ;;		On entry : 0/0
 28141 ;;		On exit  : 0/0
 28142 ;;		Unchanged: 0/0
 28143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28146 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28147 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28148 ;;Total ram usage:        5 bytes
 28149 ;; Hardware stack levels used:    1
 28150 ;; Hardware stack levels required when called:    2
 28151 ;; This function calls:
 28152 ;;		Absolute function
 28153 ;;		_ADCC_DefaultInterruptHandler
 28154 ;;		_adc_int_t_handler
 28155 ;; This function is called by:
 28156 ;;		Interrupt level 2
 28157 ;; This function uses a non-reentrant model
 28158 ;;
 28159                           
 28160                           	psect	text146
 28161  0184E8                     __ptext146:
 28162                           	opt callstack 0
 28163  0184E8                     _ADCC_ThresholdISR:
 28164                           	opt callstack 11
 28165                           
 28166                           ;incstack = 0
 28167  0184E8  0060  F094  F045   	movff	btemp,??_ADCC_ThresholdISR
 28168  0184EE  0060  F098  F046   	movff	btemp+1,??_ADCC_ThresholdISR+1
 28169  0184F4  0060  F0B4  F047   	movff	btemp+8,??_ADCC_ThresholdISR+2
 28170  0184FA  0060  F0B8  F048   	movff	btemp+9,??_ADCC_ThresholdISR+3
 28171  018500  0060  F0C0  F049   	movff	btemp+11,??_ADCC_ThresholdISR+4
 28172  018506  EE14  F016         	lfsr	1,___inthi_sp
 28173                           
 28174                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 28175  01850A  0139               	movlb	57	; () banked
 28176  01850C  97A1               	bcf	161,3,b	;volatile
 28177                           
 28178                           ; BSR set to: 57
 28179                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 28180  01850E  0100               	movlb	0	; () banked
 28181  018510  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28182  018512  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28183  018514  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28184  018516  B4D8               	btfsc	status,2,c
 28185  018518  D00C               	goto	i2u908_49
 28186                           
 28187                           ; BSR set to: 0
 28188                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 28189  01851A  D801               	call	i2u908_48
 28190  01851C  D00A               	goto	i2u908_49
 28191  01851E                     i2u908_48:
 28192  01851E  0005               	push	
 28193  018520  6EFA               	movwf	pclath,c
 28194  018522  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28195  018524  6EFD               	movwf	tosl,c
 28196  018526  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28197  018528  6EFE               	movwf	tosh,c
 28198  01852A  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28199  01852C  6EFF               	movwf	tosu,c
 28200  01852E  50FA               	movf	pclath,w,c
 28201  018530  0012               	return		;indir
 28202  018532                     i2u908_49:
 28203  018532  0060  F124  F030   	movff	??_ADCC_ThresholdISR+4,btemp+11
 28204  018538  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 28205  01853E  0060  F11C  F02D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 28206  018544  0060  F118  F026   	movff	??_ADCC_ThresholdISR+1,btemp+1
 28207  01854A  0060  F114  F025   	movff	??_ADCC_ThresholdISR,btemp
 28208  018550  0011               	retfie		f
 28209  018552                     __end_of_ADCC_ThresholdISR:
 28210                           	opt callstack 0
 28211                           
 28212 ;; *************** function _UART1_tx_vect_isr *****************
 28213 ;; Defined at:
 28214 ;;		line 199 in file "mcc_generated_files/uart1.c"
 28215 ;; Parameters:    Size  Location     Type
 28216 ;;		None
 28217 ;; Auto vars:     Size  Location     Type
 28218 ;;		None
 28219 ;; Return value:  Size  Location     Type
 28220 ;;                  1    wreg      void 
 28221 ;; Registers used:
 28222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28223 ;; Tracked objects:
 28224 ;;		On entry : 0/0
 28225 ;;		On exit  : 0/0
 28226 ;;		Unchanged: 0/0
 28227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28232 ;;Total ram usage:        0 bytes
 28233 ;; Hardware stack levels used:    1
 28234 ;; Hardware stack levels required when called:    1
 28235 ;; This function calls:
 28236 ;;		Absolute function
 28237 ;;		_UART1_Transmit_ISR
 28238 ;; This function is called by:
 28239 ;;		Interrupt level 2
 28240 ;; This function uses a non-reentrant model
 28241 ;;
 28242                           
 28243                           	psect	text147
 28244  0192A0                     __ptext147:
 28245                           	opt callstack 0
 28246  0192A0                     _UART1_tx_vect_isr:
 28247                           	opt callstack 12
 28248                           
 28249                           ;incstack = 0
 28250  0192A0  EE14  F016         	lfsr	1,___inthi_sp
 28251                           
 28252                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 28253  0192A4  0100               	movlb	0	; () banked
 28254  0192A6  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28255  0192A8  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28256  0192AA  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28257  0192AC  B4D8               	btfsc	status,2,c
 28258  0192AE  0011               	retfie		f
 28259                           
 28260                           ; BSR set to: 0
 28261                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 28262  0192B0  D801               	call	i2u910_48
 28263  0192B2  0011               	retfie		f
 28264  0192B4                     i2u910_48:
 28265  0192B4  0005               	push	
 28266  0192B6  6EFA               	movwf	pclath,c
 28267  0192B8  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28268  0192BA  6EFD               	movwf	tosl,c
 28269  0192BC  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28270  0192BE  6EFE               	movwf	tosh,c
 28271  0192C0  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28272  0192C2  6EFF               	movwf	tosu,c
 28273  0192C4  50FA               	movf	pclath,w,c
 28274  0192C6  0012               	return		;indir
 28275  0192C8                     __end_of_UART1_tx_vect_isr:
 28276                           	opt callstack 0
 28277                           
 28278 ;; *************** function _UART1_Transmit_ISR *****************
 28279 ;; Defined at:
 28280 ;;		line 213 in file "mcc_generated_files/uart1.c"
 28281 ;; Parameters:    Size  Location     Type
 28282 ;;		None
 28283 ;; Auto vars:     Size  Location     Type
 28284 ;;		None
 28285 ;; Return value:  Size  Location     Type
 28286 ;;                  1  [STACK] void 
 28287 ;; Registers used:
 28288 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28289 ;; Tracked objects:
 28290 ;;		On entry : 3F/0
 28291 ;;		On exit  : 3B/39
 28292 ;;		Unchanged: 0/0
 28293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28298 ;;Total ram usage:        0 bytes
 28299 ;; Hardware stack levels used:    1
 28300 ;; This function calls:
 28301 ;;		Nothing
 28302 ;; This function is called by:
 28303 ;;		_UART1_Initialize
 28304 ;;		_UART1_tx_vect_isr
 28305 ;; This function uses a reentrant model
 28306 ;;
 28307                           
 28308                           	psect	text148
 28309  018F74                     __ptext148:
 28310                           	opt callstack 0
 28311  018F74                     _UART1_Transmit_ISR:
 28312                           	opt callstack 12
 28313                           
 28314                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 28315                           
 28316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28317                           ;incstack = 0
 28318  018F74  0E40               	movlw	64
 28319  018F76  6022               	cpfslt	_uart1TxBufferRemaining^0,c
 28320  018F78  D010               	goto	l583
 28321                           
 28322                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 28323  018F7A  0EBC               	movlw	low _uart1TxBuffer
 28324  018F7C  2423               	addwf	_uart1TxTail^0,w,c	;volatile
 28325  018F7E  6ED9               	movwf	fsr2l,c
 28326  018F80  6ADA               	clrf	fsr2h,c
 28327  018F82  0E02               	movlw	high _uart1TxBuffer
 28328  018F84  22DA               	addwfc	fsr2h,f,c
 28329  018F86  50DF               	movf	indf2,w,c
 28330  018F88  013D               	movlb	61	; () banked
 28331  018F8A  6FEA               	movwf	234,b	;volatile
 28332                           
 28333                           ; BSR set to: 61
 28334  018F8C  2A23               	incf	_uart1TxTail^0,f,c	;volatile
 28335                           
 28336                           ; BSR set to: 61
 28337                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 28338  018F8E  0E3F               	movlw	63
 28339  018F90  6423               	cpfsgt	_uart1TxTail^0,c
 28340  018F92  D001               	goto	l9318
 28341                           
 28342                           ; BSR set to: 61
 28343                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 28344  018F94  6A23               	clrf	_uart1TxTail^0,c	;volatile
 28345  018F96                     l9318:
 28346                           
 28347                           ; BSR set to: 61
 28348                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 28349  018F96  2A22               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 28350                           
 28351                           ;mcc_generated_files/uart1.c: 222:  } else {
 28352  018F98  0012               	return	
 28353  018F9A                     l583:
 28354                           
 28355                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 28356  018F9A  0139               	movlb	57	; () banked
 28357  018F9C  9993               	bcf	147,4,b	;volatile
 28358                           
 28359                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28360  018F9E  0012               	return		;funcret
 28361  018FA0                     __end_of_UART1_Transmit_ISR:
 28362                           	opt callstack 0
 28363                           
 28364 ;; *************** function _UART1_rx_vect_isr *****************
 28365 ;; Defined at:
 28366 ;;		line 206 in file "mcc_generated_files/uart1.c"
 28367 ;; Parameters:    Size  Location     Type
 28368 ;;		None
 28369 ;; Auto vars:     Size  Location     Type
 28370 ;;		None
 28371 ;; Return value:  Size  Location     Type
 28372 ;;                  1    wreg      void 
 28373 ;; Registers used:
 28374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28375 ;; Tracked objects:
 28376 ;;		On entry : 0/0
 28377 ;;		On exit  : 0/0
 28378 ;;		Unchanged: 0/0
 28379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28384 ;;Total ram usage:        0 bytes
 28385 ;; Hardware stack levels used:    1
 28386 ;; Hardware stack levels required when called:    1
 28387 ;; This function calls:
 28388 ;;		Absolute function
 28389 ;;		_UART1_Receive_ISR
 28390 ;; This function is called by:
 28391 ;;		Interrupt level 2
 28392 ;; This function uses a non-reentrant model
 28393 ;;
 28394                           
 28395                           	psect	text149
 28396  0192C8                     __ptext149:
 28397                           	opt callstack 0
 28398  0192C8                     _UART1_rx_vect_isr:
 28399                           	opt callstack 12
 28400                           
 28401                           ;incstack = 0
 28402  0192C8  EE14  F016         	lfsr	1,___inthi_sp
 28403                           
 28404                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28405  0192CC  0100               	movlb	0	; () banked
 28406  0192CE  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28407  0192D0  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28408  0192D2  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28409  0192D4  B4D8               	btfsc	status,2,c
 28410  0192D6  0011               	retfie		f
 28411                           
 28412                           ; BSR set to: 0
 28413                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28414  0192D8  D801               	call	i2u912_48
 28415  0192DA  0011               	retfie		f
 28416  0192DC                     i2u912_48:
 28417  0192DC  0005               	push	
 28418  0192DE  6EFA               	movwf	pclath,c
 28419  0192E0  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28420  0192E2  6EFD               	movwf	tosl,c
 28421  0192E4  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28422  0192E6  6EFE               	movwf	tosh,c
 28423  0192E8  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28424  0192EA  6EFF               	movwf	tosu,c
 28425  0192EC  50FA               	movf	pclath,w,c
 28426  0192EE  0012               	return		;indir
 28427  0192F0                     __end_of_UART1_rx_vect_isr:
 28428                           	opt callstack 0
 28429                           
 28430 ;; *************** function _UART1_Receive_ISR *****************
 28431 ;; Defined at:
 28432 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28433 ;; Parameters:    Size  Location     Type
 28434 ;;		None
 28435 ;; Auto vars:     Size  Location     Type
 28436 ;;		None
 28437 ;; Return value:  Size  Location     Type
 28438 ;;                  1  [STACK] void 
 28439 ;; Registers used:
 28440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28441 ;; Tracked objects:
 28442 ;;		On entry : 3F/0
 28443 ;;		On exit  : 0/0
 28444 ;;		Unchanged: 0/0
 28445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28450 ;;Total ram usage:        0 bytes
 28451 ;; Hardware stack levels used:    1
 28452 ;; This function calls:
 28453 ;;		Nothing
 28454 ;; This function is called by:
 28455 ;;		_UART1_Initialize
 28456 ;;		_UART1_rx_vect_isr
 28457 ;; This function uses a reentrant model
 28458 ;;
 28459                           
 28460                           	psect	text150
 28461  0194CC                     __ptext150:
 28462                           	opt callstack 0
 28463  0194CC                     _UART1_Receive_ISR:
 28464                           	opt callstack 12
 28465                           
 28466                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28467                           
 28468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28469                           ;incstack = 0
 28470  0194CC  0E00               	movlw	low _uart1RxBuffer
 28471  0194CE  2421               	addwf	_uart1RxHead^0,w,c	;volatile
 28472  0194D0  6ED9               	movwf	fsr2l,c
 28473  0194D2  6ADA               	clrf	fsr2h,c
 28474  0194D4  0E05               	movlw	high _uart1RxBuffer
 28475  0194D6  22DA               	addwfc	fsr2h,f,c
 28476  0194D8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28477  0194DE  2A21               	incf	_uart1RxHead^0,f,c	;volatile
 28478                           
 28479                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28480  0194E0  2821               	incf	_uart1RxHead^0,w,c
 28481  0194E2  B4D8               	btfsc	status,2,c
 28482                           
 28483                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28484  0194E4  6A21               	clrf	_uart1RxHead^0,c	;volatile
 28485                           
 28486                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28487  0194E6  2A1F               	incf	_uart1RxCount^0,f,c	;volatile
 28488                           
 28489                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28490  0194E8  0012               	return		;funcret
 28491  0194EA                     __end_of_UART1_Receive_ISR:
 28492                           	opt callstack 0
 28493                           
 28494 ;; *************** function _UART2_tx_vect_isr *****************
 28495 ;; Defined at:
 28496 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28497 ;; Parameters:    Size  Location     Type
 28498 ;;		None
 28499 ;; Auto vars:     Size  Location     Type
 28500 ;;		None
 28501 ;; Return value:  Size  Location     Type
 28502 ;;                  1    wreg      void 
 28503 ;; Registers used:
 28504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28505 ;; Tracked objects:
 28506 ;;		On entry : 0/0
 28507 ;;		On exit  : 0/0
 28508 ;;		Unchanged: 0/0
 28509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28514 ;;Total ram usage:        0 bytes
 28515 ;; Hardware stack levels used:    1
 28516 ;; Hardware stack levels required when called:    1
 28517 ;; This function calls:
 28518 ;;		Absolute function
 28519 ;;		_UART2_Transmit_ISR
 28520 ;; This function is called by:
 28521 ;;		Interrupt level 2
 28522 ;; This function uses a non-reentrant model
 28523 ;;
 28524                           
 28525                           	psect	text151
 28526  0192F0                     __ptext151:
 28527                           	opt callstack 0
 28528  0192F0                     _UART2_tx_vect_isr:
 28529                           	opt callstack 12
 28530                           
 28531                           ;incstack = 0
 28532  0192F0  EE14  F016         	lfsr	1,___inthi_sp
 28533                           
 28534                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28535  0192F4  0100               	movlb	0	; () banked
 28536  0192F6  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28537  0192F8  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28538  0192FA  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28539  0192FC  B4D8               	btfsc	status,2,c
 28540  0192FE  0011               	retfie		f
 28541                           
 28542                           ; BSR set to: 0
 28543                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28544  019300  D801               	call	i2u914_48
 28545  019302  0011               	retfie		f
 28546  019304                     i2u914_48:
 28547  019304  0005               	push	
 28548  019306  6EFA               	movwf	pclath,c
 28549  019308  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28550  01930A  6EFD               	movwf	tosl,c
 28551  01930C  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28552  01930E  6EFE               	movwf	tosh,c
 28553  019310  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28554  019312  6EFF               	movwf	tosu,c
 28555  019314  50FA               	movf	pclath,w,c
 28556  019316  0012               	return		;indir
 28557  019318                     __end_of_UART2_tx_vect_isr:
 28558                           	opt callstack 0
 28559                           
 28560 ;; *************** function _UART2_Transmit_ISR *****************
 28561 ;; Defined at:
 28562 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28563 ;; Parameters:    Size  Location     Type
 28564 ;;		None
 28565 ;; Auto vars:     Size  Location     Type
 28566 ;;		None
 28567 ;; Return value:  Size  Location     Type
 28568 ;;                  1  [STACK] void 
 28569 ;; Registers used:
 28570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28571 ;; Tracked objects:
 28572 ;;		On entry : 3F/0
 28573 ;;		On exit  : 3B/39
 28574 ;;		Unchanged: 0/0
 28575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28580 ;;Total ram usage:        0 bytes
 28581 ;; Hardware stack levels used:    1
 28582 ;; This function calls:
 28583 ;;		Nothing
 28584 ;; This function is called by:
 28585 ;;		_UART2_Initialize
 28586 ;;		_UART2_tx_vect_isr
 28587 ;; This function uses a reentrant model
 28588 ;;
 28589                           
 28590                           	psect	text152
 28591  018FA0                     __ptext152:
 28592                           	opt callstack 0
 28593  018FA0                     _UART2_Transmit_ISR:
 28594                           	opt callstack 12
 28595                           
 28596                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 28597                           
 28598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28599                           ;incstack = 0
 28600  018FA0  0E40               	movlw	64
 28601  018FA2  601C               	cpfslt	_uart2TxBufferRemaining^0,c
 28602  018FA4  D010               	goto	l703
 28603                           
 28604                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 28605  018FA6  0E54               	movlw	low _uart2TxBuffer
 28606  018FA8  241D               	addwf	_uart2TxTail^0,w,c	;volatile
 28607  018FAA  6ED9               	movwf	fsr2l,c
 28608  018FAC  6ADA               	clrf	fsr2h,c
 28609  018FAE  0E03               	movlw	high _uart2TxBuffer
 28610  018FB0  22DA               	addwfc	fsr2h,f,c
 28611  018FB2  50DF               	movf	indf2,w,c
 28612  018FB4  013D               	movlb	61	; () banked
 28613  018FB6  6FD2               	movwf	210,b	;volatile
 28614                           
 28615                           ; BSR set to: 61
 28616  018FB8  2A1D               	incf	_uart2TxTail^0,f,c	;volatile
 28617                           
 28618                           ; BSR set to: 61
 28619                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 28620  018FBA  0E3F               	movlw	63
 28621  018FBC  641D               	cpfsgt	_uart2TxTail^0,c
 28622  018FBE  D001               	goto	l9340
 28623                           
 28624                           ; BSR set to: 61
 28625                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 28626  018FC0  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 28627  018FC2                     l9340:
 28628                           
 28629                           ; BSR set to: 61
 28630                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 28631  018FC2  2A1C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 28632                           
 28633                           ;mcc_generated_files/uart2.c: 224:     }
 28634  018FC4  0012               	return	
 28635  018FC6                     l703:
 28636                           
 28637                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 28638  018FC6  0139               	movlb	57	; () banked
 28639  018FC8  9796               	bcf	150,3,b	;volatile
 28640                           
 28641                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28642  018FCA  0012               	return		;funcret
 28643  018FCC                     __end_of_UART2_Transmit_ISR:
 28644                           	opt callstack 0
 28645                           
 28646 ;; *************** function _UART2_rx_vect_isr *****************
 28647 ;; Defined at:
 28648 ;;		line 203 in file "mcc_generated_files/uart2.c"
 28649 ;; Parameters:    Size  Location     Type
 28650 ;;		None
 28651 ;; Auto vars:     Size  Location     Type
 28652 ;;		None
 28653 ;; Return value:  Size  Location     Type
 28654 ;;                  1    wreg      void 
 28655 ;; Registers used:
 28656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28657 ;; Tracked objects:
 28658 ;;		On entry : 0/0
 28659 ;;		On exit  : 0/0
 28660 ;;		Unchanged: 0/0
 28661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28666 ;;Total ram usage:        0 bytes
 28667 ;; Hardware stack levels used:    1
 28668 ;; Hardware stack levels required when called:    1
 28669 ;; This function calls:
 28670 ;;		Absolute function
 28671 ;;		_UART2_Receive_ISR
 28672 ;; This function is called by:
 28673 ;;		Interrupt level 2
 28674 ;; This function uses a non-reentrant model
 28675 ;;
 28676                           
 28677                           	psect	text153
 28678  019318                     __ptext153:
 28679                           	opt callstack 0
 28680  019318                     _UART2_rx_vect_isr:
 28681                           	opt callstack 12
 28682                           
 28683                           ;incstack = 0
 28684  019318  EE14  F016         	lfsr	1,___inthi_sp
 28685                           
 28686                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 28687  01931C  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28688  01931E  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 28689  019320  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 28690  019322  B4D8               	btfsc	status,2,c
 28691  019324  0011               	retfie		f
 28692                           
 28693                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 28694  019326  D801               	call	i2u916_48
 28695  019328  0011               	retfie		f
 28696  01932A                     i2u916_48:
 28697  01932A  0005               	push	
 28698  01932C  6EFA               	movwf	pclath,c
 28699  01932E  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28700  019330  6EFD               	movwf	tosl,c
 28701  019332  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 28702  019334  6EFE               	movwf	tosh,c
 28703  019336  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 28704  019338  6EFF               	movwf	tosu,c
 28705  01933A  50FA               	movf	pclath,w,c
 28706  01933C  0012               	return		;indir
 28707  01933E                     __end_of_UART2_rx_vect_isr:
 28708                           	opt callstack 0
 28709                           
 28710 ;; *************** function _UART2_Receive_ISR *****************
 28711 ;; Defined at:
 28712 ;;		line 233 in file "mcc_generated_files/uart2.c"
 28713 ;; Parameters:    Size  Location     Type
 28714 ;;		None
 28715 ;; Auto vars:     Size  Location     Type
 28716 ;;		None
 28717 ;; Return value:  Size  Location     Type
 28718 ;;                  1  [STACK] void 
 28719 ;; Registers used:
 28720 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28721 ;; Tracked objects:
 28722 ;;		On entry : 0/0
 28723 ;;		On exit  : 0/0
 28724 ;;		Unchanged: 0/0
 28725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28730 ;;Total ram usage:        0 bytes
 28731 ;; Hardware stack levels used:    1
 28732 ;; This function calls:
 28733 ;;		Nothing
 28734 ;; This function is called by:
 28735 ;;		_UART2_Initialize
 28736 ;;		_UART2_rx_vect_isr
 28737 ;; This function uses a reentrant model
 28738 ;;
 28739                           
 28740                           	psect	text154
 28741  0194EA                     __ptext154:
 28742                           	opt callstack 0
 28743  0194EA                     _UART2_Receive_ISR:
 28744                           	opt callstack 12
 28745                           
 28746                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 28747                           
 28748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28749                           ;incstack = 0
 28750  0194EA  0E00               	movlw	low _uart2RxBuffer
 28751  0194EC  241B               	addwf	_uart2RxHead^0,w,c	;volatile
 28752  0194EE  6ED9               	movwf	fsr2l,c
 28753  0194F0  6ADA               	clrf	fsr2h,c
 28754  0194F2  0E06               	movlw	high _uart2RxBuffer
 28755  0194F4  22DA               	addwfc	fsr2h,f,c
 28756  0194F6  006F F743 FFDF     	movff	15824,indf2	;volatile
 28757  0194FC  2A1B               	incf	_uart2RxHead^0,f,c	;volatile
 28758                           
 28759                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 28760  0194FE  281B               	incf	_uart2RxHead^0,w,c
 28761  019500  B4D8               	btfsc	status,2,c
 28762                           
 28763                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 28764  019502  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 28765                           
 28766                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 28767  019504  2A19               	incf	_uart2RxCount^0,f,c	;volatile
 28768                           
 28769                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28770  019506  0012               	return		;funcret
 28771  019508                     __end_of_UART2_Receive_ISR:
 28772                           	opt callstack 0
 28773                           
 28774 ;; *************** function _TMR6_ISR *****************
 28775 ;; Defined at:
 28776 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 28777 ;; Parameters:    Size  Location     Type
 28778 ;;		None
 28779 ;; Auto vars:     Size  Location     Type
 28780 ;;		None
 28781 ;; Return value:  Size  Location     Type
 28782 ;;                  1    wreg      void 
 28783 ;; Registers used:
 28784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28785 ;; Tracked objects:
 28786 ;;		On entry : 0/0
 28787 ;;		On exit  : 0/0
 28788 ;;		Unchanged: 0/0
 28789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28794 ;;Total ram usage:        1 bytes
 28795 ;; Hardware stack levels used:    1
 28796 ;; Hardware stack levels required when called:    2
 28797 ;; This function calls:
 28798 ;;		_TMR6_CallBack
 28799 ;; This function is called by:
 28800 ;;		Interrupt level 2
 28801 ;; This function uses a non-reentrant model
 28802 ;;
 28803                           
 28804                           	psect	text155
 28805  019540                     __ptext155:
 28806                           	opt callstack 0
 28807  019540                     _TMR6_ISR:
 28808                           	opt callstack 11
 28809                           
 28810                           ;incstack = 0
 28811  019540  0060  F094  F04A   	movff	btemp,??_TMR6_ISR
 28812  019546  EE14  F016         	lfsr	1,___inthi_sp
 28813                           
 28814                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 28815  01954A  0139               	movlb	57	; () banked
 28816  01954C  91A9               	bcf	169,0,b	;volatile
 28817                           
 28818                           ; BSR set to: 57
 28819                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 28820  01954E  ECD5  F0C9         	call	_TMR6_CallBack	;wreg free
 28821  019552  0060  F128  F025   	movff	??_TMR6_ISR,btemp
 28822  019558  0011               	retfie		f
 28823  01955A                     __end_of_TMR6_ISR:
 28824                           	opt callstack 0
 28825                           
 28826 ;; *************** function _TMR6_CallBack *****************
 28827 ;; Defined at:
 28828 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 28829 ;; Parameters:    Size  Location     Type
 28830 ;;		None
 28831 ;; Auto vars:     Size  Location     Type
 28832 ;;		None
 28833 ;; Return value:  Size  Location     Type
 28834 ;;                  1  [STACK] void 
 28835 ;; Registers used:
 28836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28837 ;; Tracked objects:
 28838 ;;		On entry : 3F/39
 28839 ;;		On exit  : 0/0
 28840 ;;		Unchanged: 0/0
 28841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28846 ;;Total ram usage:        0 bytes
 28847 ;; Hardware stack levels used:    1
 28848 ;; Hardware stack levels required when called:    1
 28849 ;; This function calls:
 28850 ;;		Absolute function
 28851 ;;		_TMR6_DefaultInterruptHandler
 28852 ;; This function is called by:
 28853 ;;		_TMR6_ISR
 28854 ;; This function uses a reentrant model
 28855 ;;
 28856                           
 28857                           	psect	text156
 28858  0193AA                     __ptext156:
 28859                           	opt callstack 0
 28860  0193AA                     _TMR6_CallBack:
 28861                           	opt callstack 11
 28862                           
 28863                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 28864                           
 28865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28866                           ;incstack = 0
 28867  0193AA  0100               	movlb	0	; () banked
 28868  0193AC  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28869  0193AE  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28870  0193B0  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28871  0193B2  B4D8               	btfsc	status,2,c
 28872  0193B4  0012               	return	
 28873                           
 28874                           ; BSR set to: 0
 28875                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 28876  0193B6  D801               	call	u879_48
 28877  0193B8  0012               	return	
 28878  0193BA                     u879_48:
 28879  0193BA  0005               	push	
 28880  0193BC  6EFA               	movwf	pclath,c
 28881  0193BE  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28882  0193C0  6EFD               	movwf	tosl,c
 28883  0193C2  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28884  0193C4  6EFE               	movwf	tosh,c
 28885  0193C6  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28886  0193C8  6EFF               	movwf	tosu,c
 28887  0193CA  50FA               	movf	pclath,w,c
 28888  0193CC  0012               	return		;indir
 28889  0193CE                     __end_of_TMR6_CallBack:
 28890                           	opt callstack 0
 28891                           
 28892 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 28893 ;; Defined at:
 28894 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 28895 ;; Parameters:    Size  Location     Type
 28896 ;;		None
 28897 ;; Auto vars:     Size  Location     Type
 28898 ;;  i               1  [STACK] unsigned char 
 28899 ;; Return value:  Size  Location     Type
 28900 ;;                  1  [STACK] void 
 28901 ;; Registers used:
 28902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28903 ;; Tracked objects:
 28904 ;;		On entry : 3F/0
 28905 ;;		On exit  : 0/0
 28906 ;;		Unchanged: 0/0
 28907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28912 ;;Total ram usage:        0 bytes
 28913 ;; Hardware stack levels used:    1
 28914 ;; This function calls:
 28915 ;;		Nothing
 28916 ;; This function is called by:
 28917 ;;		_TMR6_Initialize
 28918 ;;		_TMR6_CallBack
 28919 ;; This function uses a reentrant model
 28920 ;;
 28921                           
 28922                           	psect	text157
 28923  018956                     __ptext157:
 28924                           	opt callstack 0
 28925  018956                     _TMR6_DefaultInterruptHandler:
 28926                           	opt callstack 0
 28927                           
 28928                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28929  018956  52E6               	movf	postinc1,f,c
 28930                           
 28931                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 28932                           ;stkvar	_i @ sp[(-1)+0]
 28933                           
 28934                           ;incstack = 0
 28935  018958  0EFF               	movlw	-1
 28936  01895A  6AE3               	clrf	plusw1,c
 28937  01895C                     l8956:
 28938                           
 28939                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 28940                           ;stkvar	_i @ sp[(-1)+0]
 28941  01895C  0EFF               	movlw	-1
 28942  01895E  50E3               	movf	plusw1,w,c
 28943  018960  0D02               	mullw	2
 28944  018962  0EB5               	movlw	low _tickCount
 28945  018964  24F3               	addwf	243,w,c
 28946  018966  6ED9               	movwf	fsr2l,c
 28947  018968  0E01               	movlw	high _tickCount
 28948  01896A  20F4               	addwfc	prodh,w,c
 28949  01896C  6EDA               	movwf	fsr2h,c
 28950  01896E  50DE               	movf	postinc2,w,c
 28951  018970  10DE               	iorwf	postinc2,w,c
 28952  018972  B4D8               	btfsc	status,2,c
 28953  018974  D00C               	goto	l8960
 28954                           
 28955                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 28956                           ;stkvar	_i @ sp[(-1)+0]
 28957  018976  0EFF               	movlw	-1
 28958  018978  50E3               	movf	plusw1,w,c
 28959  01897A  0D02               	mullw	2
 28960  01897C  0EB5               	movlw	low _tickCount
 28961  01897E  24F3               	addwf	243,w,c
 28962  018980  6ED9               	movwf	fsr2l,c
 28963  018982  0E01               	movlw	high _tickCount
 28964  018984  20F4               	addwfc	prodh,w,c
 28965  018986  6EDA               	movwf	fsr2h,c
 28966  018988  06DE               	decf	postinc2,f,c
 28967  01898A  0E00               	movlw	0
 28968  01898C  5ADD               	subwfb	postdec2,f,c
 28969  01898E                     l8960:
 28970                           
 28971                           ;mcc_generated_files/tmr6.c: 207:  }
 28972                           ;stkvar	_i @ sp[(-1)+0]
 28973  01898E  0EFF               	movlw	-1
 28974  018990  2AE3               	incf	plusw1,f,c
 28975                           
 28976                           ;stkvar	_i @ sp[(-1)+0]
 28977  018992  0EFF               	movlw	-1
 28978  018994  006F FF8C  F025    	movff	plusw1,btemp
 28979  01899A  0E0B               	movlw	11
 28980  01899C  6425               	cpfsgt	btemp^0,c
 28981  01899E  D7DE               	goto	l8956
 28982                           
 28983                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28984  0189A0  52E5               	movf	postdec1,f,c
 28985  0189A2  0012               	return		;funcret
 28986  0189A4                     __end_of_TMR6_DefaultInterruptHandler:
 28987                           	opt callstack 0
 28988                           
 28989 ;; *************** function _DMA1_DMASCNT_ISR *****************
 28990 ;; Defined at:
 28991 ;;		line 126 in file "mcc_generated_files/dma1.c"
 28992 ;; Parameters:    Size  Location     Type
 28993 ;;		None
 28994 ;; Auto vars:     Size  Location     Type
 28995 ;;		None
 28996 ;; Return value:  Size  Location     Type
 28997 ;;                  1    wreg      void 
 28998 ;; Registers used:
 28999 ;;		None
 29000 ;; Tracked objects:
 29001 ;;		On entry : 0/0
 29002 ;;		On exit  : 3F/0
 29003 ;;		Unchanged: 0/0
 29004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29009 ;;Total ram usage:        0 bytes
 29010 ;; Hardware stack levels used:    1
 29011 ;; This function calls:
 29012 ;;		Nothing
 29013 ;; This function is called by:
 29014 ;;		Interrupt level 2
 29015 ;; This function uses a non-reentrant model
 29016 ;;
 29017                           
 29018                           	psect	text158
 29019  019640                     __ptext158:
 29020                           	opt callstack 0
 29021  019640                     _DMA1_DMASCNT_ISR:
 29022                           	opt callstack 13
 29023                           
 29024                           ;incstack = 0
 29025  019640  EE14  F016         	lfsr	1,___inthi_sp
 29026                           
 29027                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 29028  019644  0139               	movlb	57	; () banked
 29029  019646  91A2               	bcf	162,0,b	;volatile
 29030                           
 29031                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 29032  019648  0100               	movlb	0	; () banked
 29033  01964A  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 29034                           
 29035                           ; BSR set to: 0
 29036  01964C  0011               	retfie		f
 29037  01964E                     __end_of_DMA1_DMASCNT_ISR:
 29038                           	opt callstack 0
 29039                           
 29040 ;; *************** function _DMA1_DMADCNT_ISR *****************
 29041 ;; Defined at:
 29042 ;;		line 134 in file "mcc_generated_files/dma1.c"
 29043 ;; Parameters:    Size  Location     Type
 29044 ;;		None
 29045 ;; Auto vars:     Size  Location     Type
 29046 ;;		None
 29047 ;; Return value:  Size  Location     Type
 29048 ;;                  1    wreg      void 
 29049 ;; Registers used:
 29050 ;;		None
 29051 ;; Tracked objects:
 29052 ;;		On entry : 0/0
 29053 ;;		On exit  : 3F/39
 29054 ;;		Unchanged: 0/0
 29055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29060 ;;Total ram usage:        0 bytes
 29061 ;; Hardware stack levels used:    1
 29062 ;; This function calls:
 29063 ;;		Nothing
 29064 ;; This function is called by:
 29065 ;;		Interrupt level 2
 29066 ;; This function uses a non-reentrant model
 29067 ;;
 29068                           
 29069                           	psect	text159
 29070  019658                     __ptext159:
 29071                           	opt callstack 0
 29072  019658                     _DMA1_DMADCNT_ISR:
 29073                           	opt callstack 13
 29074                           
 29075                           ; BSR set to: 0
 29076                           ;incstack = 0
 29077  019658  EE14  F016         	lfsr	1,___inthi_sp
 29078                           
 29079                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 29080  01965C  0139               	movlb	57	; () banked
 29081  01965E  93A2               	bcf	162,1,b	;volatile
 29082                           
 29083                           ; BSR set to: 57
 29084  019660  0011               	retfie		f
 29085  019662                     __end_of_DMA1_DMADCNT_ISR:
 29086                           	opt callstack 0
 29087                           
 29088 ;; *************** function _DMA1_DMAA_ISR *****************
 29089 ;; Defined at:
 29090 ;;		line 144 in file "mcc_generated_files/dma1.c"
 29091 ;; Parameters:    Size  Location     Type
 29092 ;;		None
 29093 ;; Auto vars:     Size  Location     Type
 29094 ;;		None
 29095 ;; Return value:  Size  Location     Type
 29096 ;;                  1    wreg      void 
 29097 ;; Registers used:
 29098 ;;		None
 29099 ;; Tracked objects:
 29100 ;;		On entry : 0/0
 29101 ;;		On exit  : 3F/39
 29102 ;;		Unchanged: 0/0
 29103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29108 ;;Total ram usage:        0 bytes
 29109 ;; Hardware stack levels used:    1
 29110 ;; This function calls:
 29111 ;;		Nothing
 29112 ;; This function is called by:
 29113 ;;		Interrupt level 2
 29114 ;; This function uses a non-reentrant model
 29115 ;;
 29116                           
 29117                           	psect	text160
 29118  019664                     __ptext160:
 29119                           	opt callstack 0
 29120  019664                     _DMA1_DMAA_ISR:
 29121                           	opt callstack 13
 29122                           
 29123                           ; BSR set to: 57
 29124                           ;incstack = 0
 29125  019664  EE14  F016         	lfsr	1,___inthi_sp
 29126                           
 29127                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 29128  019668  0139               	movlb	57	; () banked
 29129  01966A  97A2               	bcf	162,3,b	;volatile
 29130                           
 29131                           ; BSR set to: 57
 29132  01966C  0011               	retfie		f
 29133  01966E                     __end_of_DMA1_DMAA_ISR:
 29134                           	opt callstack 0
 29135                           
 29136 ;; *************** function _DMA1_DMAOR_ISR *****************
 29137 ;; Defined at:
 29138 ;;		line 155 in file "mcc_generated_files/dma1.c"
 29139 ;; Parameters:    Size  Location     Type
 29140 ;;		None
 29141 ;; Auto vars:     Size  Location     Type
 29142 ;;		None
 29143 ;; Return value:  Size  Location     Type
 29144 ;;                  1    wreg      void 
 29145 ;; Registers used:
 29146 ;;		None
 29147 ;; Tracked objects:
 29148 ;;		On entry : 0/0
 29149 ;;		On exit  : 3F/39
 29150 ;;		Unchanged: 0/0
 29151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29156 ;;Total ram usage:        0 bytes
 29157 ;; Hardware stack levels used:    1
 29158 ;; This function calls:
 29159 ;;		Nothing
 29160 ;; This function is called by:
 29161 ;;		Interrupt level 2
 29162 ;; This function uses a non-reentrant model
 29163 ;;
 29164                           
 29165                           	psect	text161
 29166  019670                     __ptext161:
 29167                           	opt callstack 0
 29168  019670                     _DMA1_DMAOR_ISR:
 29169                           	opt callstack 13
 29170                           
 29171                           ; BSR set to: 57
 29172                           ;incstack = 0
 29173  019670  EE14  F016         	lfsr	1,___inthi_sp
 29174                           
 29175                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 29176  019674  0139               	movlb	57	; () banked
 29177  019676  95A2               	bcf	162,2,b	;volatile
 29178                           
 29179                           ; BSR set to: 57
 29180  019678  0011               	retfie		f
 29181  01967A                     __end_of_DMA1_DMAOR_ISR:
 29182                           	opt callstack 0
 29183                           
 29184                           ;
 29185                           ; Interrupt Vector Table @ 0x8
 29186                           ;
 29187                           
 29188                           	psect	ivt0x8
 29189  000008                     __pivt0x8:
 29190                           	opt callstack 0
 29191  000008                     ivt0x8_base:
 29192                           	opt callstack 0
 29193                           
 29194                           ; Vector 0 : SWINT
 29195  000008  65AF               	dw	_Default_ISR shr (0+2)
 29196                           
 29197                           ; Vector 1 : HLVD
 29198  00000A  65AF               	dw	_Default_ISR shr (0+2)
 29199                           
 29200                           ; Vector 2 : OSF
 29201  00000C  65AF               	dw	_Default_ISR shr (0+2)
 29202                           
 29203                           ; Vector 3 : CSW
 29204  00000E  65AF               	dw	_Default_ISR shr (0+2)
 29205                           
 29206                           ; Vector 4 : NVM
 29207  000010  65AF               	dw	_Default_ISR shr (0+2)
 29208                           
 29209                           ; Vector 5 : SCAN
 29210  000012  65AF               	dw	_Default_ISR shr (0+2)
 29211                           
 29212                           ; Vector 6 : CRC
 29213  000014  65AF               	dw	_Default_ISR shr (0+2)
 29214                           
 29215                           ; Vector 7 : IOC
 29216  000016  65AF               	dw	_Default_ISR shr (0+2)
 29217                           
 29218                           ; Vector 8 : INT0
 29219  000018  658C               	dw	_INT0_ISR shr (0+2)
 29220                           
 29221                           ; Vector 9 : ZCD
 29222  00001A  65AF               	dw	_Default_ISR shr (0+2)
 29223                           
 29224                           ; Vector 10 : AD
 29225  00001C  63D2               	dw	_ADCC_ISR shr (0+2)
 29226                           
 29227                           ; Vector 11 : ADT
 29228  00001E  613A               	dw	_ADCC_ThresholdISR shr (0+2)
 29229                           
 29230                           ; Vector 12 : CMP1
 29231  000020  65AF               	dw	_Default_ISR shr (0+2)
 29232                           
 29233                           ; Vector 13 : SMT1
 29234  000022  65AF               	dw	_Default_ISR shr (0+2)
 29235                           
 29236                           ; Vector 14 : SMT1PRA
 29237  000024  65AF               	dw	_Default_ISR shr (0+2)
 29238                           
 29239                           ; Vector 15 : SMT1PRW
 29240  000026  65AF               	dw	_Default_ISR shr (0+2)
 29241                           
 29242                           ; Vector 16 : DMA1SCNT
 29243  000028  6590               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 29244                           
 29245                           ; Vector 17 : DMA1DCNT
 29246  00002A  6596               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 29247                           
 29248                           ; Vector 18 : DMA1OR
 29249  00002C  659C               	dw	_DMA1_DMAOR_ISR shr (0+2)
 29250                           
 29251                           ; Vector 19 : DMA1A
 29252  00002E  6599               	dw	_DMA1_DMAA_ISR shr (0+2)
 29253                           
 29254                           ; Vector 20 : SPI1RX
 29255  000030  65AF               	dw	_Default_ISR shr (0+2)
 29256                           
 29257                           ; Vector 21 : SPI1TX
 29258  000032  65AF               	dw	_Default_ISR shr (0+2)
 29259                           
 29260                           ; Vector 22 : SPI1
 29261  000034  65AF               	dw	_Default_ISR shr (0+2)
 29262                           
 29263                           ; Vector 23 : I2C1RX
 29264  000036  65AF               	dw	_Default_ISR shr (0+2)
 29265                           
 29266                           ; Vector 24 : I2C1TX
 29267  000038  65AF               	dw	_Default_ISR shr (0+2)
 29268                           
 29269                           ; Vector 25 : I2C1
 29270  00003A  65AF               	dw	_Default_ISR shr (0+2)
 29271                           
 29272                           ; Vector 26 : I2C1E
 29273  00003C  65AF               	dw	_Default_ISR shr (0+2)
 29274                           
 29275                           ; Vector 27 : U1RX
 29276  00003E  64B2               	dw	_UART1_rx_vect_isr shr (0+2)
 29277                           
 29278                           ; Vector 28 : U1TX
 29279  000040  64A8               	dw	_UART1_tx_vect_isr shr (0+2)
 29280                           
 29281                           ; Vector 29 : U1E
 29282  000042  65AF               	dw	_Default_ISR shr (0+2)
 29283                           
 29284                           ; Vector 30 : U1
 29285  000044  65AF               	dw	_Default_ISR shr (0+2)
 29286                           
 29287                           ; Vector 31 : TMR0
 29288  000046  65AF               	dw	_Default_ISR shr (0+2)
 29289                           
 29290                           ; Vector 32 : TMR1
 29291  000048  65AF               	dw	_Default_ISR shr (0+2)
 29292                           
 29293                           ; Vector 33 : TMR1G
 29294  00004A  65AF               	dw	_Default_ISR shr (0+2)
 29295                           
 29296                           ; Vector 34 : TMR2
 29297  00004C  65AF               	dw	_Default_ISR shr (0+2)
 29298                           
 29299                           ; Vector 35 : CCP1
 29300  00004E  65AF               	dw	_Default_ISR shr (0+2)
 29301                           
 29302                           ; Vector 36 : Undefined
 29303  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 29304                           
 29305                           ; Vector 37 : NCO1
 29306  000052  65AF               	dw	_Default_ISR shr (0+2)
 29307                           
 29308                           ; Vector 38 : CWG1
 29309  000054  65AF               	dw	_Default_ISR shr (0+2)
 29310                           
 29311                           ; Vector 39 : CLC1
 29312  000056  65AF               	dw	_Default_ISR shr (0+2)
 29313                           
 29314                           ; Vector 40 : INT1
 29315  000058  6335               	dw	_INT1_ISR shr (0+2)
 29316                           
 29317                           ; Vector 41 : CMP2
 29318  00005A  65AF               	dw	_Default_ISR shr (0+2)
 29319                           
 29320                           ; Vector 42 : DMA2SCNT
 29321  00005C  65AF               	dw	_Default_ISR shr (0+2)
 29322                           
 29323                           ; Vector 43 : DMA2DCNT
 29324  00005E  65AF               	dw	_Default_ISR shr (0+2)
 29325                           
 29326                           ; Vector 44 : DMA2OR
 29327  000060  65AF               	dw	_Default_ISR shr (0+2)
 29328                           
 29329                           ; Vector 45 : DMA2A
 29330  000062  65AF               	dw	_Default_ISR shr (0+2)
 29331                           
 29332                           ; Vector 46 : I2C2RX
 29333  000064  65AF               	dw	_Default_ISR shr (0+2)
 29334                           
 29335                           ; Vector 47 : I2C2TX
 29336  000066  65AF               	dw	_Default_ISR shr (0+2)
 29337                           
 29338                           ; Vector 48 : I2C2
 29339  000068  65AF               	dw	_Default_ISR shr (0+2)
 29340                           
 29341                           ; Vector 49 : I2C2E
 29342  00006A  65AF               	dw	_Default_ISR shr (0+2)
 29343                           
 29344                           ; Vector 50 : U2RX
 29345  00006C  64C6               	dw	_UART2_rx_vect_isr shr (0+2)
 29346                           
 29347                           ; Vector 51 : U2TX
 29348  00006E  64BC               	dw	_UART2_tx_vect_isr shr (0+2)
 29349                           
 29350                           ; Vector 52 : U2E
 29351  000070  65AF               	dw	_Default_ISR shr (0+2)
 29352                           
 29353                           ; Vector 53 : U2
 29354  000072  65AF               	dw	_Default_ISR shr (0+2)
 29355                           
 29356                           ; Vector 54 : TMR3
 29357  000074  5E58               	dw	_TMR3_ISR shr (0+2)
 29358                           
 29359                           ; Vector 55 : TMR3G
 29360  000076  65AF               	dw	_Default_ISR shr (0+2)
 29361                           
 29362                           ; Vector 56 : TMR4
 29363  000078  65AF               	dw	_Default_ISR shr (0+2)
 29364                           
 29365                           ; Vector 57 : CCP2
 29366  00007A  65AF               	dw	_Default_ISR shr (0+2)
 29367                           
 29368                           ; Vector 58 : Undefined
 29369  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29370                           
 29371                           ; Vector 59 : CWG2
 29372  00007E  65AF               	dw	_Default_ISR shr (0+2)
 29373                           
 29374                           ; Vector 60 : CLC2
 29375  000080  65AF               	dw	_Default_ISR shr (0+2)
 29376                           
 29377                           ; Vector 61 : INT2
 29378  000082  65AF               	dw	_Default_ISR shr (0+2)
 29379                           
 29380                           ; Vector 62 : Undefined
 29381  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29382                           
 29383                           ; Vector 63 : Undefined
 29384  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29385                           
 29386                           ; Vector 64 : Undefined
 29387  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29388                           
 29389                           ; Vector 65 : Undefined
 29390  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29391                           
 29392                           ; Vector 66 : Undefined
 29393  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29394                           
 29395                           ; Vector 67 : Undefined
 29396  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29397                           
 29398                           ; Vector 68 : Undefined
 29399  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29400                           
 29401                           ; Vector 69 : Undefined
 29402  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29403                           
 29404                           ; Vector 70 : TMR5
 29405  000094  6216               	dw	_TMR5_ISR shr (0+2)
 29406                           
 29407                           ; Vector 71 : TMR5G
 29408  000096  65AF               	dw	_Default_ISR shr (0+2)
 29409                           
 29410                           ; Vector 72 : TMR6
 29411  000098  6550               	dw	_TMR6_ISR shr (0+2)
 29412                           
 29413                           ; Vector 73 : CCP3
 29414  00009A  65AF               	dw	_Default_ISR shr (0+2)
 29415                           
 29416                           ; Vector 74 : CWG3
 29417  00009C  65AF               	dw	_Default_ISR shr (0+2)
 29418                           
 29419                           ; Vector 75 : CLC3
 29420  00009E  65AF               	dw	_Default_ISR shr (0+2)
 29421                           
 29422                           ; Vector 76 : Undefined
 29423  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29424                           
 29425                           ; Vector 77 : Undefined
 29426  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29427                           
 29428                           ; Vector 78 : Undefined
 29429  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29430                           
 29431                           ; Vector 79 : Undefined
 29432  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29433                           
 29434                           ; Vector 80 : CCP4
 29435  0000A8  65AF               	dw	_Default_ISR shr (0+2)
 29436                           
 29437                           ; Vector 81 : CLC4
 29438  0000AA  65AF               	dw	_Default_ISR shr (0+2)
 29439  0000AC                     ivt0x8_undefint:
 29440                           	opt callstack 0
 29441  0000AC  00FF               	reset	
 29442                           
 29443                           	psect	text162
 29444  000000                     __ptext162:
 29445                           	opt callstack 0
 29446                           
 29447                           	psect	rparam
 29448  0000                     
 29449                           	psect	temp
 29450  000025                     btemp:
 29451                           	opt callstack 0
 29452  000025                     	ds	32
 29453  0000                     wtemp0	set	btemp
 29454  0000                     wtemp1	set	btemp+2
 29455  0000                     wtemp2	set	btemp+4
 29456  0000                     wtemp3	set	btemp+6
 29457  0000                     wtemp4	set	btemp+8
 29458  0000                     wtemp5	set	btemp+10
 29459  0000                     wtemp8	set	btemp+1
 29460  0000                     ttemp0	set	btemp
 29461  0000                     ttemp1	set	btemp+3
 29462  0000                     ttemp2	set	btemp+6
 29463  0000                     ttemp3	set	btemp+9
 29464  0000                     ttemp5	set	btemp+1
 29465  0000                     ttemp6	set	btemp+4
 29466  0000                     ttemp7	set	btemp+8
 29467  0000                     ltemp0	set	btemp
 29468  0000                     ltemp1	set	btemp+4
 29469  0000                     ltemp2	set	btemp+8
 29470  0000                     lltemp0	set	btemp
 29471  0000                     lltemp1	set	btemp+8
 29472  0000                     lltemp2	set	btemp+16
 29473  0000                     lltemp3	set	btemp+24
 29474                           tosu	equ	0x3FFF
 29475                           tosh	equ	0x3FFE
 29476                           tosl	equ	0x3FFD
 29477                           stkptr	equ	0x3FFC
 29478                           pclatu	equ	0x3FFB
 29479                           pclath	equ	0x3FFA
 29480                           pcl	equ	0x3FF9
 29481                           tblptru	equ	0x3FF8
 29482                           tblptrh	equ	0x3FF7
 29483                           tblptrl	equ	0x3FF6
 29484                           tablat	equ	0x3FF5
 29485                           prodh	equ	0x3FF4
 29486                           prodl	equ	0x3FF3
 29487                           indf0	equ	0x3FEF
 29488                           postinc0	equ	0x3FEE
 29489                           postdec0	equ	0x3FED
 29490                           preinc0	equ	0x3FEC
 29491                           plusw0	equ	0x3FEB
 29492                           fsr0h	equ	0x3FEA
 29493                           fsr0l	equ	0x3FE9
 29494                           wreg	equ	0x3FE8
 29495                           indf1	equ	0x3FE7
 29496                           postinc1	equ	0x3FE6
 29497                           postdec1	equ	0x3FE5
 29498                           preinc1	equ	0x3FE4
 29499                           plusw1	equ	0x3FE3
 29500                           fsr1h	equ	0x3FE2
 29501                           fsr1l	equ	0x3FE1
 29502                           bsr	equ	0x3FE0
 29503                           indf2	equ	0x3FDF
 29504                           postinc2	equ	0x3FDE
 29505                           postdec2	equ	0x3FDD
 29506                           preinc2	equ	0x3FDC
 29507                           plusw2	equ	0x3FDB
 29508                           fsr2h	equ	0x3FDA
 29509                           fsr2l	equ	0x3FD9
 29510                           status	equ	0x3FD8


Data Sizes:
    Strings     446
    Constant    144
    Data        423
    BSS         1393
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      50
    BANK0           160      0     153
    BANK1           256     13     226
    BANK2           256      0     252
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5585_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4308tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  309323
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           13    13      0    5022
                                              0 BANK1     13    13      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    4962
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           0     0      0    4962
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      E2       7       88.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      32       1       79.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     611      58        0.0%
DATA                 0      0     733       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec  6 02:50:08 2019

                     _SPI1_Exchange8bit 9454                __end_of_set_display_info 94CC  
                                     _C 0100                                       _D 06FF  
                                     _H 00F2                                       _P 00A5  
                                     _R 00C3                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 91AE            __end_of_start_switch_handler 9454  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 96A2                             __CFG_LVP$ON 000000  
                                   l173 95C6                                     l703 8FC6  
                                   l583 8F9A                                     l837 9462  
                                   _GIE 01FE97                                     _abs 8A36  
                                   _pad 7274                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 9572                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 9412                      _UART1_Transmit_ISR 8F74  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 93F0  
                          __CFG_ZCD$OFF 000000                                    l1030 8C8E  
                                  l2013 460C                                    l1218 8CCE  
                                  l2202 1D78                                    l3011 7152  
                                  l2131 5784                                    l2152 49F2  
                                  l2049 123A                                    l1346 1F98  
                                  l1338 1DE0                                    l1363 25EC  
                       _timer3ReloadVal 0012                                    l1444 87AE  
                                  l1356 2036                                    l1348 1F9E  
                                  l2093 0B1A                                    l2078 066A  
                                  l1358 20FC                                    l1359 220A  
                                  l3072 838C                                    l3057 6660  
                                  l1660 8D2E                                    l1580 7E6A  
                                  l2524 6B28                                    l1717 94C8  
                                  l3085 8308                                    l1670 629A  
                                  l1808 6820                                    l1584 80DC  
                                  l2490 6BB6                                    l1677 7494  
                                  l1669 613E                                    l1765 4528  
                                  l2486 7AE8                    _ADCC_StartConversion 95E0  
                                  l1599 8D98                                    l2809 3B7E  
                                  l2497 6C8A                                    l2764 3604  
                                  l2916 8A76                                    l2908 69B6  
                                  l2845 2E48                                    l1885 8202  
                                  l1894 76A0                                    l2776 3494  
                                  l1993 72D0                                    l2947 5E42  
                                  l8100 3502                                    l8012 3210  
                                  l2885 6498                                    l8014 3222  
                                  l8022 325C                                    l8112 3560  
                                  l8040 32F8                                    l8008 31F0  
                                  l8122 358C                                    l8042 330A  
                                  l8050 3346                                    l8018 322C  
                                  l6610 7F60                                    l9020 66CE  
                                  l9012 66A2                                    l6700 837C  
                                  l9100 40B4                                    l8310 26C4  
                                  l8302 267E                                    l8134 35E4  
                                  l8126 35A4                                    l8062 341E  
                                  l8046 3314                                    l9110 41D2  
                                  l8400 2C7E                                    l8320 274C  
                                  l8312 26F4                                    l8128 35B4  
                                  l8080 34B6                                    l8072 3478  
                                  l8064 3444                                    l9024 66E6  
                                  l6608 7F3E                                    l8232 39B8  
                                  l8224 3986                                    l8216 3920  
                                  l8208 38EA                                    l8152 36A4  
                                  l5906 8CB6                                    l9202 701E  
                                  l8410 2CC8                                    l8330 27C2  
                                  l8082 34C8                                    l8242 39FA  
                                  l8218 3932                                    l8226 398A  
                                  l8146 3664                                    l6730 4FF4  
                                  l6714 4E86                                    l9122 42DE  
                                  l9114 42AC                                    l8308 26BE  
                                  l7508 5E32                                    l8252 3A44  
                                  l8172 3782                                    l8156 36BA  
                                  l7524 652A                                    l9140 44F6  
                                  l8414 2CCE                                    l8326 278C  
                                  l8086 34D4                                    l8238 39D4  
                                  l8190 3840                                    l8166 3742  
                                  l8158 36EA                                    l6734 503C  
                                  l7526 6596                                    l9134 445A  
                                  l9126 437A                                    l9214 81BC  
                                  l9232 3C8C                                    l8424 2D42  
                                  l8328 2792                                    l8096 34FC  
                                  l7472 5BF2                                    l6832 5FDE  
                                  l6824 5F32                                    l6816 5EAA  
                                  l6912 71A6                                    l6904 717C  
                                  l8272 3AFA                                    l8256 3A4A  
                                  l8184 3806                                    l8176 3798  
                                  l6672 6954                                    l6728 4FA4  
                                  l9242 3E9C                                    l8442 2DF6  
                                  l8434 2DB2                                    l8338 27E4  
                                  l9058 8D44                                    l7490 5CCC  
                                  l7482 5C88                                    l7474 5C14  
                                  l6658 8A66                                    l6930 725A  
                                  l6922 7226                                    l8266 3ABE  
                                  l8178 37C8                                    l8514 6AC0  
                                  l8506 6A94                                    l6682 69AE  
                                  l6738 50AA                                    l9340 8FC2  
                                  l9252 3FC4                                    l9228 3C4A  
                                  l9180 6F3E                                    l8444 2E10  
                                  l8428 2D88                                    l7492 5CF0  
                                  l6772 59BA                                    l6908 718E  
                                  l8284 3B52                                    l8460 6C04  
                                  l8516 6AD6                                    l8508 6AB0  
                                  l6676 6958                                    l6756 82F8  
                                  l8540 6354                                    l8532 62E8  
                                  l9148 4508                                    l9318 8F96  
                                  l9262 406C                                    l9246 3F1A  
                                  l9182 6F4C                                    l9174 6F22  
                                  l8390 2C3C                                    l9502 568E  
                                  l7494 5D2E                                    l6870 6CEE  
                                  l8286 3B62                                    l8278 3B2A  
                                  l8198 385A                                    l6942 7AB2  
                                  l8454 6B74                                    l8542 6362  
                                  l9094 4084                                    l9256 404E  
                                  l9176 6F32                                    l7488 5CB4  
                                  l6784 5A54                                    l6864 6CCE  
                                  l8472 6C88                                    l8464 6C52  
                                  l8480 8A0C                                    l8552 63C4  
                                  l8544 6378                                    l9520 760A  
                                  l9258 4056                                    l9194 6FB0  
                                  l9178 6F38                                    l9186 6F54  
                                  l9602 8C4C                                    l7498 5D96  
                                  l6778 5A0E                                    l6858 6CB8  
                                  l6946 7AE6                                    l6938 7A70  
                                  l8490 6A12                                    l8554 63E2  
                                  l8546 6396                                    l7906 9080  
                                  l9530 767A                                    l9188 6F80  
                                  l8396 2C58                                    l7932 2EE8  
                                  l6796 5B26                                    l6892 6DC8  
                                  l6884 6D94                                    l8564 6416  
                                  l8556 63F8                                    l9508 75AE  
                                  l9614 83DA                                    l9366 8C76  
                                  l7950 2F98                                    l7926 2EA8  
                                  l6958 8946                                    l8574 6478  
                                  l9608 83CA                                    l7960 2FEE  
                                  l7944 2F66                                    l7936 2EFE  
                                  l9480 7BB4                                    l7962 301E  
                                  l7938 2F2E                                    l7794 90B6  
                                  l7956 2FD8                                    l7876 8DA2  
                                  l9484 7BF2                                    l8960 898E  
                                  l7968 3040                                    l8956 895C  
                                  l7998 317E                                    STR_1 FF60  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  STR_4 FF4F                                    STR_5 FF71  
                                  STR_6 FFB2                                    STR_7 FFE0  
                                  STR_8 FF3E                                    STR_9 FF93  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5010 4F4A                                    _T2PR 003FAB  
                                  u5110 8F0C                                    u5030 5022  
                                  u5015 4F40                                    u5120 8F0E  
                                  u5210 5B5E                                    u5035 5018  
                                  u5140 59B4                                    u5300 5F5E  
                                  u5060 8B86                                    u5230 5BB0  
                                  u5070 8B88                                    u5160 5A0A  
                                  u5320 6016                                    u5080 82B6  
                                  u5410 6DB4                                    u5090 82B8  
                                  _T6PR 003F93                                    u5171 5A14  
                                  u5180 5A4E                                    u5340 6068  
                                  u5260 5EA4                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5190 5A80  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u7200 3274                                    u4720 7F8E  
                                  u5280 5EFA                                    u5520 7AE2  
                                  u8000 6A06                                    _PMD4 0039C4  
                                  u7025 8BC2                                    _PMD5 0039C5  
                                  u5530 8922                                    u5290 5F2C  
                                  u8010 6A40                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u7300 3466  
                                  u7140 31A4                                    u5540 8942  
                                  u5460 71D2                                    u4900 69A8  
                                  u7150 31C4                                    u4830 8A4A  
                                  u5390 6D1A                                    u4750 8EDC  
                                  u7151 31BE                                    u4727 7F80  
                                  u8015 6A36                                    u7400 3550  
                                  u5480 7246                                    u4840 68D8  
                                  u4760 8EDE                                    u4930 833A  
                                  u4770 8EAC                                    u7340 34DA  
                                  u7260 333C                                    u6540 5C84  
                                  u8060 6ADE                                    u4940 833C  
                                  u4780 8EAE                                    u7405 3540  
                                  u4845 68CE                                    u7430 3570  
                                  u7190 3254                                    u8150 640C  
                                  u8215 8594                                    u8216 8596  
                                  u8208 8562                                    u7360 34F4  
                                  u7168 31C6                                    u6560 5DDC  
                                  u8080 6B08                                    u4960 4E1E  
                                  u6640 6622                                    u7265 332C  
                                  u6570 5DDE                                    u4890 69A6  
                                  u4970 4E6A                                    u7195 3244  
                                  u4885 6988                                    u4965 4E14  
                                  u8190 8560                                    u7630 3A3C  
                                  u8414 42C6                                    u8415 42C0  
                                  u9320 705C                                    u9400 794C  
                                  u8290 6680                                    u8434 4394  
                                  u8354 409E                                    u8610 81EE  
                                  u4995 4EA4                                    u8435 438E  
                                  u8355 4098                                    u7900 2D56  
                                  u9340 70D8                                    u4996 4EAA  
                                  u8460 43BE                                    u7805 2A2E  
                                  u4997 4EB8                                    u7910 2D9C  
                                  u8470 93DA                                    u9510 4632  
                                  u7670 3A98                                    u7590 39B2  
                                  u8454 43B6                                    u8374 40CE  
                                  u7815 2BF6                                    u9407 793E  
                                  u8455 43B0                                    u8375 40C8  
                                  u9520 488A                                    u9440 455E  
                                  u7680 3AD2                                    u7850 2CC0  
                                  u9450 4560                                    u7690 3B0E  
                                  u8394 40F0                                    u9531 48BA  
                                  u7675 3A88                                    u8395 40EA  
                                  u7780 27D2                                    u8476 93DC  
                                  u9540 48D0                                    u9700 02A8  
                                  u9620 00DA                                    u8628 81F0  
                                  u8580 81A8                                    u9541 48CE  
                                  u9550 48E4                                    u9470 45D0  
                                  u9560 48E8                                    u9800 05C6  
                                  u7890 2D1C                                    u9490 45E2  
                                  u9650 0194                                    _PLLR 01CEE0  
                                  u7795 2966                                    u9580 48FE  
                                  u7980 8A08                                    u9740 050E  
                                  u9660 0196                                    u7990 69F2  
                                  u9910 0A18                                    u8598 81AA  
                                  u7895 2D0C                                    u9840 0648  
                                  u9770 0562                                    u9690 02A6  
                                  u7995 69E8                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 8F74  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _atoi 5BD8                                    _ctoa 8206  
                                  _main 1D82                                    _dtoa 452E  
                                  _nanf 8682                                    _seed 01CD  
                                  _prec 000C                                    _nout 00C1  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 569A  
                                  btemp 0025                                    _xtoa 49AE  
                __end_of_check_adc_scan 969A                           ___fpclassifyf 682A  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0016  
             __end_of_SPI1_Exchange8bit 9472               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 8B08                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 92C8                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0045                        __end_of_INT0_ISR 963E  
                      __end_of_INT1_ISR 8D12          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 7E72           __end_of_OSCILLATOR_Initialize 95CC  
                                 l10100 72C8                                   l10110 7360  
                                 l10102 72DA                                   l10106 7316  
                                 l10122 8224                                   l10124 8250  
                                 l10116 78D2                                   l10300 058E  
                                 l10220 00F0                                   l11110 1DFA  
                                 l11102 1DC2                                   l10160 4664  
                                 l10240 0216                                   l10208 00AC  
                                 l11040 610E                                   l11104 1DCA  
                                 l10074 7068                                   l10090 8008  
                                 l10170 4876                                   l10402 0CBA  
                                 l10410 0D24                                   l10314 05F6  
                                 l10306 0594                                   l10242 022C  
                                 l10156 4646                                   l10148 45FC  
                                 l10332 06B8                                   l10316 0602  
                                 l10228 0146                                   l11204 24C6  
                                 l11212 2510                                   l11108 1DE8  
                                 l10086 7FCA                                   l10190 4928  
                                 l10342 077A                                   l10238 01EA  
                                 l10246 0258                                   l10510 5706  
                                 l11054 6236                                   l11230 257E  
                                 l11222 2554                                   l11206 24F0  
                                 l10096 72A0                                   l10352 0926  
                                 l10336 06F0                                   l10272 0396  
                                 l10256 02FC                                   l10264 032A  
                                 l11240 25C2                                   l10194 4964  
                                 l10418 0D90                                   l10426 0EA2  
                                 l10282 04D2                                   l10530 57F6  
                                 l11250 2616                                   l11170 2004  
                                 l10452 0FD6                                   l10276 0406  
                                 l10540 58B0                                   l11236 259C  
                                 l11228 2566                                   l11156 1FA2  
                                 l10454 0FF0                                   l10438 0F3A  
                                 l10390 0C32                                   l10374 0B12  
                                 l10366 0A48                                   l10294 0554  
                                 l10278 0470                                   l10534 5826  
                                 l10526 57BA                                   l10622 4D1E  
                                 l10606 4C34                                   l11190 22E8  
                                 l11158 1FD0                                   l10464 1092  
                                 l10376 0B34                                   l10544 58DC  
                                 l10720 191C                                   l10490 119A  
                                 l10474 10E2                                   l10298 057C  
                                 l10562 49E2                                   l10802 516C  
                                 l11194 234A                                   l11178 2028  
                                 l10548 5918                                   l10740 1A7C  
                                 l10716 18E8                                   l10708 1830  
                                 l10644 1326                                   l10582 4AB8  
                                 l10574 4A58                                   l10750 1B2A  
                                 l10670 14F8                                   l10646 1360  
                                 l10822 5342                                   l10814 5294  
                                 l10568 4A1C                                   l10648 1376  
                                 l10808 522A                                   l10920 73AC  
                                 l10770 1D00                                   l10666 14A8  
                                 l10834 7D48                                   l10764 1CA6  
                                 l10668 14E2                                   l10780 1D24  
                                 l10836 7D8A                                   PRLOCK 0039EF  
                                 l10598 4BAE                                   l10774 1D04  
                                 l10686 165C                                   l10696 16F2  
                                 l10886 7ECA                         __end_of___aodiv 5BD8  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 360E                                   _ADCLK 003EFF  
                       __end_of___aomod 608C                                   _ADPCH 003EF1  
                       __end_of___fldiv 3B88                                   _ADREF 003EFD  
                       __end_of___awdiv 6DE2                         __end_of___flneg 8A36  
                                 STR_11 FF82                                   STR_12 FEB9  
                                 STR_20 FEA6                                   STR_21 FF93  
                                 STR_13 FEDF                                   STR_30 FE80  
                                 STR_22 FF93                                   STR_14 FECC  
                                 STR_23 FF82                                   STR_31 FFCD  
                                 STR_15 FF2B                                   STR_32 FFCD  
                                 STR_24 FFFC                                   STR_16 FF05  
                                 STR_25 FFF9                                   STR_33 FFA3  
                                 STR_17 FF18                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFA3                                   STR_50 FFEA  
                                 STR_18 FEF2                                   STR_35 FFA3  
                                 STR_51 FFF2                                   STR_27 FFC1  
                                 STR_19 FE59                                   STR_28 FFD7  
                                 STR_36 FE41                         __end_of___awmod 7274  
                                 STR_45 FE7F                                   STR_29 FE80  
                                 STR_54 FFF6                                   STR_46 FFE6  
                                 STR_38 FE93                                   STR_47 FFEE  
                                 STR_39 FE6D                                   STR_56 FFF6  
                                 _ADRPT 003EEC                         __end_of___flmul 2E52  
                       __end_of___flsub 8AC2                         __end_of___fltol 6B32  
                                 u10010 0EE4                                   u10100 1170  
                                 u10210 593E                                   u10300 4B64  
                                 u10070 10B8                                   u10310 4B66  
                                 u10230 49C8                                   u10090 116E  
                                 u10170 581C                                   u10330 4C30  
                                 u10180 5862                                   u10340 4C50  
                                 u10260 4AB0                                   u10500 1568  
                                 u10270 4B04                                   u10430 13BE  
                                 u10351 4C80                                   u10335 4C12  
                                 u10360 4C96                                   u10280 4B06  
                                 u10440 13C0                                   u10361 4C94  
                                 u10370 4CAA                                   u10450 13E6  
                                 u10187 5854                                   u10380 4CAE  
                                 u10630 1B7E                                   u10550 1746  
                                 u10480 1540                                   u10720 7EAA  
                                 u10490 1542                                   u10810 6286  
                                 _U1P1H 003DED                                   u10580 19D6  
                                 u10820 6288                                   _U1P2H 003DEF  
                                 u10590 19D8                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10690 53B6                                   _U1P3L 003DF0  
                                 _U2P1L 003DD4                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00B2                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 004A  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 96BC                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 92A0                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 7A2E                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 88B2  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 955A  
                          _DMA1CON1bits 003BFD                                   _flags 000E  
              __size_of_calc_model_data 02DA                                   _fputc 7038  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 8B92  
                                 _fputs 7FBA                         __end_of_isdigit 8F18  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0045  
                                 _srand 8E20                                   _width 000A  
                                 _putch 9524                         __end_of_islower 8EB8  
                       __end_of_isspace 8956                _INT1_SetInterruptHandler 91D6  
                       __end_of_isupper 8EE8                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0025  
                                 ltemp1 0029                                   ltemp2 002D  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0025  
                                 ttemp1 0028                                   ttemp2 002B  
                                 ttemp3 002E                                   ttemp5 0026  
                                 ttemp6 0029                                   ttemp7 002D  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 915E  
           _UART1_SetRxInterruptHandler 9136                                   wtemp0 0025  
                                 wtemp1 0027                                   wtemp2 0029  
                                 wtemp3 002B                                   wtemp4 002D  
                                 wtemp5 002F                                   wtemp8 0026  
                       __end_of_sprintf 75A2                         __end_of_tolower 8396  
                       __end_of_strncmp 666A                         __end_of_toupper 8312  
                   ??_UART1_tx_vect_isr 004A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 92F0                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8AC2                   __end_of_ringBufS_init 906E  
                       __initialization 76A4                       _UART2_rx_vect_isr 9318  
                          __end_of_atoi 5E4C                            __end_of_ctoa 828E  
                          __end_of_main 2628                            __end_of_dtoa 49AE  
                          __end_of_nanf 86E4                            __end_of_stoa 5958  
                          __end_of_xtoa 4D68                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0045                 __end_of_TMR2_Initialize 958A  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 8C54  
              _TMR5_SetInterruptHandler 9186                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 004A  
             __end_of_UART1_tx_vect_isr 92C8                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8FCC                         _PWM8_Initialize 95A0  
                      _UART1_Initialize 861E                       _UART2_tx_vect_isr 92F0  
                    _UART2_Transmit_ISR 8FA0                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 85BA                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 8B92                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0045  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1047 88A4                    _start_switch_handler 9434  
                                i1l1235 79DE                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize 8B4E  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 9622                                  _SCANPR 0039F7  
                                u405_48 9420                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u903_44 83FA                                  u903_45 83F4  
                                u825_20 927E                                  u825_26 9280  
                                u851_20 6F48                                  u851_21 6F42  
                                u855_24 7014                                  u855_25 7010  
                                u871_28 93FE                                  u848_28 6F28  
                                u867_20 3FBC                                  u882_28 9372  
                  __size_of_hid_display 0102                                  u869_20 4064  
                                u884_28 9396                                  u879_48 93BA  
                      __end_of___xxtofl 64A2   __end_of_ADCC_DischargeSampleCapacitor 9682  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 967A  
              __end_of_send_lcd_cmd_dma 8904                         _TMR3_WriteTimer 8C94  
                   ??_UART2_tx_vect_isr 004A               __end_of_UART2_rx_vect_isr 933E  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 964E  
                      _UART2_Initialize 8746                                  _WaitMs 8D80  
                       _conv_raw_result 4082                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6B32  
                                ___fleq 7A2E                       _ADCC_ThresholdISR 84E8  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 8052  
                                _efgtoa 0000                                  _floorf 4D68  
                    ?_ADCC_ThresholdISR 0045                                  _memset 50D4  
                  __size_of_help_button 0038                                  clear_0 7712  
                                clear_1 7726                                  clear_2 773A  
                                clear_3 774C                                  clear_4 7758  
                                clear_5 7764                                  clear_6 7770  
                                clear_7 777C                                  clear_8 7788  
                                _printf 86E4                      _eaDogM_WriteString 7E72  
                                _strcpy 788A                               ?_ADCC_ISR 0045  
                                _strlen 7F18                      __size_of_TimerDone 0028  
                       _ADCC_Initialize 847E                          _PMD_Initialize 95CC  
             __end_of_UART2_tx_vect_isr 9318                                  lltemp0 0025  
                                lltemp1 002D                                  lltemp2 0035  
                                lltemp3 003D                     ??_ADCC_ThresholdISR 0045  
                __end_of_start_adc_scan 861E                            __mediumconst FDB0  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 87FE                        __end_of_vfprintf 7DC8  
                            _StartTimer 8BD4           __size_of_INTERRUPT_Initialize 0068  
               __end_of_TMR5_Initialize 8B08                       _SYSTEM_Initialize 89A4  
                            __accesstop 0060                 __end_of__initialization 779A  
                             ?_INT0_ISR 0045                               ?_INT1_ISR 0045  
                  __end_of_display_help 9692                    __end_of_display_info 968A  
             __end_of_CLKREF_Initialize 9658                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 8C54  
                 _set_temp_display_help 9604                        _clear_hid_pflags 933E  
                 __end_of_TMR3_CallBack 93AA               __end_of_ADCC_ThresholdISR 8552  
                    __size_of_calc_bsoc 04FA                  __end_of_ringBufS_flush 80E4  
                        __pcstackCOMRAM 0045                              ___inthi_sp 1016  
                            ___intlo_sp 180B                            __pidataBANK0 8D4A  
                          __pidataBANK1 7C66                            __pidataBANK2 7AF2  
                             ?_TMR3_ISR 0045                               ?_TMR5_ISR 0045  
                             ?_TMR6_ISR 0045                          ivt0x8_undefint 00AC  
                         __end_of_fputc 715C                           __end_of_fputs 8052  
                         __end_of_srand 8E54                   __end_of_TMR5_CallBack 9386  
                         __end_of_putch 953E                 __end_of_PWM8_Initialize 95B6  
               __end_of_TMR6_Initialize 8FF6                       _adc_int_t_handler 8396  
                __end_of_PMD_Initialize 95E0                              ??_ADCC_ISR 0045  
                 __end_of_TMR6_CallBack 93CE             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0028                           _DMA1_DMAA_ISR 9664  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan 96A2  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize 89EE  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer 8CD4                              __pbssBANK0 0060  
                            __pbssBANK1 01B5                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            _check_help 608C                 __end_of_conv_raw_result 452E  
                 _INT0_InterruptHandler 0007                              ??_INT0_ISR 0045  
                            ??_INT1_ISR 004B                       __end_of_TimerDone 90BE  
                      _DMA1_DMADCNT_ISR 9658                      __size_of_init_bsoc 0012  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 9524  
      __end_of_TMR3_SetInterruptHandler 91D6                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 9186                              ??_TMR3_ISR 01D5  
               __end_of_ADCC_Initialize 84E8                              ??_TMR5_ISR 004F  
             __end_of_adc_int_t_handler 8414                              ??_TMR6_ISR 004A  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 924E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 9226                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 94CC  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 96A8                          ?_DMA1_DMAA_ISR 0045  
                      _DMA1_DMASCNT_ISR 9640                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0045  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 4082  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 906E  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8C94  
               __size_of_switch_handler 0128                      __size_of_stop_bsoc 0006  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim 955A  
                               __Lparam 0000                __end_of_UART1_Initialize 8682  
                     __end_of_hid_input 8206                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 5958                                 ___fladd 2E52  
                               ___aomod 5E4C                                 ___fldiv 360E  
                               ___awdiv 6C94                                 ___flneg 89EE  
                               ___awmod 715C                                 ___flmul 2628  
                               ___flsub 8A7C                                 ___fltol 69C0  
             __end_of_UART1_Receive_ISR 94EA                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 788A  
                               __pcinit 76A4                __end_of_mode_lamp_bright 9630  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 9614                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 1D82  
                               __ptext1 8DEC                                 __ptext2 9434  
                               __ptext3 85BA                                 __ptext4 95E0  
                               __ptext5 967A                                 __ptext6 8E20  
                               __ptext7 77A0                                 __ptext8 8FF6  
                               __ptext9 901E                       _UART2_Receive_ISR 94EA  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 95B6                                 us524999 5BC2  
                               us535999 607A                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 9604  
                               _isalpha 8B4E                                 _isdigit 8EE8  
                             _T3CONbits 003FA6                                 us943999 4548  
                               _mode_sw 0018                       __end_of_lp_filter 682A  
                               _islower 8E88                                 _isspace 8904  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 87A4                                 _isupper 8EB8  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 7498  
                               _tolower 8312                   __size_of_display_help 0008  
                               _utctime 009D                   __size_of_display_info 0008  
                               _strncmp 64A2                                 _toupper 828E  
                  end_of_initialization 779A               __size_of_convert_adc_data 00B8  
                    _check_enter_button 8C14                               i1u1083_20 79D6  
   __end_of_UART1_SetTxInterruptHandler 9136             _UART1_SetTxInterruptHandler 910E  
   __end_of_UART2_SetRxInterruptHandler 910E             _UART2_SetRxInterruptHandler 90E6  
                     __end_of_set_vterm 94AE                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd 96B4  
             __end_of_UART2_Receive_ISR 9508                          wdtdelay@dcount 00A1  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 004B  
                 _INT1_InterruptHandler 0004                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc 96BA                _TMR3_SetInterruptHandler 91AE  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 915E  
                          _display_help 968A                   _TMR5_InterruptHandler 00AC  
                          _display_info 9682    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags 9362                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler 9276             _ADCC_SetADIInterruptHandler 924E  
                            _update_lcd 7388                         _calc_model_data 53C0  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc 8DEC                         _DMA1_Initialize 8414  
                            _start_bsoc 93CE                         _SPI1_Initialize 958A  
                 __end_of_get_vterm_ptr 8F46                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 8DB6  
          __end_of_INTERRUPT_Initialize 85BA                              _vterm_dump 6DE2  
                        __end_of___flge 6C94                          __end_of___fleq 7AF2  
  __end_of_INT0_DefaultInterruptHandler 96C8   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 96C6              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 87FE                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 00CE                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 50D4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0095                          __end_of_memset 53C0  
                        __end_of_printf 8746                __end_of_DMA1_DMADCNT_ISR 9662  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 9434  
                        __end_of_strcpy 795E                          __end_of_strlen 7FBA  
                   start_initialization 76A4    __end_of_TMR5_DefaultInterruptHandler 929E  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 9276  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 8A7C  
                 __end_of_INT1_CallBack 9412               __size_of_set_display_info 001E  
                           __end_of_pad 7388                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 9046                          _switch_handler 6F10  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0500                   __end_of___fpclassifyf 69C0  
                         _uart2RxBuffer 0600                           _uart1TxBuffer 02BC  
              __end_of_DMA1_DMASCNT_ISR 964E                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR 9670                     __end_of_hid_display 76A4  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 9096  
                         _ringBufS_init 9046                             __pdataBANK0 00C3  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 8E88                 __end_of_calc_model_data 569A  
                   __end_of_help_button 8D4A         __end_of_eaDogM_WriteStringAtPos 8DEC  
                           __pbssBIGRAM 06FF                 __end_of_DMA1_Initialize 847E  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 9226  
                         __pcstackBANK1 01D5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 7038  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 95A0  
              _UART1_RxInterruptHandler 00BB                _UART2_TxInterruptHandler 00BE  
                             __end_of_T FE41                        _convert_adc_data 7BAE  
                             _calc_bsoc 3B88               __size_of_ringBufS_put_dma 00AA  
                          _init_display 77A0                  __end_of_DMA1_DMAOR_ISR 967A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00AF  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 8858  
                _PIN_MANAGER_Initialize 80E4                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set 96AE                           __pmediumconst FDB0  
                             __ptext100 910E                               __ptext101 9136  
                             __ptext110 95A0                               __ptext102 8FCC  
                             __ptext111 95CC                               __ptext103 915E  
                             __ptext120 8414                               __ptext112 80E4  
                             __ptext104 8AC2                               __ptext121 964E  
                             __ptext113 95B6                               __ptext105 9186  
                             __ptext130 8C54                               __ptext122 847E  
                             __ptext114 8552                               __ptext106 8B08  
                             __ptext131 9362                               __ptext123 9226  
                             __ptext115 969A                               __ptext107 91AE  
                             __ptext140 96C6                               __ptext132 9276  
                             __ptext124 924E                               __ptext116 8E54  
                             __ptext108 9572                               __ptext141 96BC  
                             __ptext133 7960                               __ptext125 8CD4  
                             __ptext117 91D6                               __ptext109 958A  
                             __ptext150 94CC                               __ptext142 8F48  
                             __ptext134 8C94                               __ptext126 93F0  
                             __ptext118 91FE                               __ptext151 92F0  
                             __ptext143 8396                               __ptext135 9386  
                             __ptext127 96C2                               __ptext119 87FE  
                             __ptext160 9664                               __ptext152 8FA0  
                             __ptext144 96C8                               __ptext136 96C4  
                             __ptext128 6F10                               __ptext161 9670  
                             __ptext153 9318                               __ptext145 96CA  
                             __ptext137 3B88                               __ptext129 8858  
                             __ptext162 0000                               __ptext154 94EA  
                             __ptext146 84E8                               __ptext138 9630  
                             __ptext155 9540                               __ptext147 92A0  
                             __ptext139 9412                               __ptext156 93AA  
                             __ptext148 8F74                               __ptext157 8956  
                             __ptext149 92C8                               __ptext158 9640  
                             __ptext159 9658                               _hid_input 8176  
                    __end_of_StartTimer 8C14                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 8F48  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 95F2                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 666A  
                           _hid_display 75A2                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 8552  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0045                                _INT0_ISR 9630  
                              _INT1_ISR 8CD4                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01B5                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack 9386                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                i2u910_48 92B4  
                              _PIR8bits 0039A8                                i2u912_48 92DC  
                              _PIR9bits 0039A9                                i2u914_48 9304  
                              i2u906_48 8F60                                i2u916_48 932A  
                              i2u908_48 851E                                i2u908_49 8532  
              __size_of_TMR5_Initialize 0046                               _set_vterm 9490  
                   __size_of_update_lcd 0110                             _help_button 8D12  
                              _TMR3_ISR 7960              __end_of_UART1_Transmit_ISR 8FA0  
                              _TMR5_ISR 8858                                _TMR6_ISR 9540  
                             _port_data 01A5                     __size_of_static_soc 0034  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack 9362  
                            _ADCON0bits 003EF8                      __end_of_check_help 629E  
                             _start_lcd 96AE                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 93AA  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc 96B4                        _set_display_info 94AE  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 76B8  
                             copy_data1 76DA                               copy_data2 76FC  
              _INT0_SetInterruptHandler 91FE                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 0022     __end_of_UART2_SetTxInterruptHandler 90E6  
           _UART2_SetTxInterruptHandler 90BE                            _uart1RxCount 001F  
                          _uart2RxCount 0019                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 9508  
                          _send_lcd_cmd 901E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 96CA                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 9096                   __end_of_DMA1_DMAA_ISR 966E  
                    ___fpclassifyf@F463 0099    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 629E  
                     ?_DMA1_DMADCNT_ISR 0045             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 9622  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 004B  
                              __ptext10 9454                                __ptext11 9046  
                              __ptext20 9472                                __ptext12 95F2  
                              __ptext21 629E                                __ptext13 75A2  
                              __ptext30 8DB6                                __ptext22 933E  
                              __ptext14 8176                                __ptext31 88B2  
                              __ptext23 96A2                                __ptext15 906E  
                              __ptext40 7D1C                                __ptext32 9508  
                              __ptext24 608C                                __ptext16 9614  
                              __ptext41 1244                                __ptext33 87A4  
                              __ptext25 6DE2                                __ptext17 7BAE  
                              __ptext50 8EB8                                __ptext42 49AE  
                              __ptext34 7E72                                __ptext26 7498  
                              __ptext18 4082                                __ptext51 788A  
                              __ptext43 828E                                __ptext35 96A8  
                              __ptext27 8F18                                __ptext19 8682  
                              __ptext60 6C94                                __ptext52 4D68  
                              __ptext44 8E88                                __ptext36 96AE  
                              __ptext28 8D80                                __ptext61 452E  
                              __ptext53 682A                                __ptext45 8B4E  
                              __ptext37 8052                                __ptext29 7388  
                              __ptext70 9524                                __ptext62 8A36  
                              __ptext54 69C0                                __ptext46 64A2  
                              __ptext38 50D4                                __ptext71 7DC8  
                              __ptext63 5E4C                                __ptext55 89EE  
                              __ptext47 569A                                __ptext39 86E4  
                              __ptext80 8B92                                __ptext72 5BD8  
                              __ptext64 5958                                __ptext56 6B32  
                              __ptext48 0000                                __ptext81 8D12  
                              __ptext73 8904                                __ptext65 8206  
                              __ptext57 7A2E                                __ptext49 8312  
                              __ptext90 93CE                                __ptext82 9096  
                              __ptext74 8EE8                                __ptext66 7274  
                              __ptext58 360E                                __ptext91 666A  
                              __ptext83 8BD4                                __ptext75 9490  
                              __ptext67 7F18                                __ptext59 715C  
                              __ptext92 8A7C                                __ptext84 9682  
                              __ptext76 9604                                __ptext68 7FBA  
                              __ptext93 2E52                                __ptext85 968A  
                              __ptext77 94AE                                __ptext69 7038  
                              __ptext94 2628                                __ptext86 8C14  
                              __ptext78 955A                                __ptext95 89A4  
                              __ptext87 9692                                __ptext79 9622  
                              __ptext96 8746                                __ptext88 53C0  
                              __ptext97 90BE                                __ptext89 96B4  
                              __ptext98 90E6                                __ptext99 861E  
                      __size_of_isupper 0030                                us1012999 56AC  
                              us1025999 4A2E                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 7DC8  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08A6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0045  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 00EB  
                    ??_DMA1_DMASCNT_ISR 004B            __end_of_ADCC_StartConversion 95F2  
                              _spi_link 0089                                _wdtdelay 87A4  
            __end_of_UART2_Transmit_ISR 8FCC                                _vfprintf 7D1C  
              __end_of_convert_adc_data 7C66              __end_of_PWM8_LoadDutyValue 8BD4  
  __end_of_TMR3_DefaultInterruptHandler 96C6   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler 96C4    __end_of_INT1_DefaultInterruptHandler 96C4  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 96C2  
                         ??_Default_ISR 0045                             _uart1RxHead 0021  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0024  
                           _uart2RxHead 001B                             _uart1RxTail 0020  
                        _get_raw_result 9472                             _uart2TxHead 001E  
                           _uart1TxTail 0023                             _uart2RxTail 001A  
                           _uart2TxTail 001D                            _wait_lcd_set 96A8  
                    _EXT_INT_Initialize 8E54    __end_of_TMR6_DefaultInterruptHandler 89A4  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler 8956  
  __end_of_ADCC_DefaultInterruptHandler 96CA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 96C8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 8FF6  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 9614  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7F18  
                 __end_of_mode_lamp_dim 9572                 __end_of_adc_int_handler 96CC  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 7498                  _uart2TxBufferRemaining 001C  
                    __end_of_static_soc 8E20                      __end_of_start_bsoc 93F0  
                        _FVR_Initialize 969A                  __end_of_get_raw_result 9490  
                      _send_lcd_cmd_dma 88B2                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0014        __end_of_INT1_SetInterruptHandler 91FE  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 004B  
              _UART1_TxInterruptHandler 00B8               __end_of_send_lcd_cmd_long 901E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 96C2  
        __end_of_PIN_MANAGER_Initialize 8176               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6F10                 _eaDogM_WriteStringAtPos 8DB6  
                         _get_vterm_ptr 8F18                          _check_adc_scan 9692  
             __size_of_UART2_Initialize 005E  
