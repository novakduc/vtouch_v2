

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 13 03:13:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=4,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=4,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=4,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=4,class=CODE,delta=1
   109                           	psect	text87,global,reloc=4,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=4,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=4,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=4,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=4,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=4,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=4,class=CODE,delta=1
   123                           	psect	text101,global,reloc=4,class=CODE,delta=1
   124                           	psect	text102,global,reloc=4,class=CODE,delta=1
   125                           	psect	text103,global,reloc=4,class=CODE,delta=1
   126                           	psect	text104,global,reloc=4,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   131                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   134                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   135  0000                     
   136                           ; Version 2.05
   137                           ; Generated 20/12/2018 GMT
   138                           ; 
   139                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   140                           ; All rights reserved.
   141                           ; 
   142                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   143                           ; 
   144                           ; Redistribution and use in source and binary forms, with or without modification, are
   145                           ; permitted provided that the following conditions are met:
   146                           ; 
   147                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   148                           ;        conditions and the following disclaimer.
   149                           ; 
   150                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   151                           ;        of conditions and the following disclaimer in the documentation and/or other
   152                           ;        materials provided with the distribution.
   153                           ; 
   154                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   155                           ;        software without specific prior written permission.
   156                           ; 
   157                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   158                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   159                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   160                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   161                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   162                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   163                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   164                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   165                           ; 
   166                           ; 
   167                           ; Code-generator required, PIC18F57K42 Definitions
   168                           ; 
   169                           ; SFR Addresses
   170  0000                     
   171 ;;_mode	offset	0
   172 ;;_rxData	offset	0
   173 ;;_t_link	offset=-1 (param)
   174 ;;_stream	offset=-6 (param)
   175 ;;_function	offset=-7 (param)
   176 ;;_f	offset	0
   177 ;;_ap	offset	5
   178 ;;_s	offset=-2 (param)
   179 ;;_fmt	offset=-3 (param)
   180 ;;_rxData	offset	0
   181 ;;_r_link	offset=-1 (param)
   182 ;;_k	offset	0
   183 ;;_checksum	offset	2
   184 ;;_i	offset	4
   185 ;;_byte_block	offset=-2 (param)
   186 ;;_length	offset=-3 (param)
   187 ;;_fake	offset=-4 (param)
   188 ;;_i	offset	0
   189 ;;_sum	offset	2
   190 ;;_byte_block	offset=-2 (param)
   191 ;;_byte_count	offset=-4 (param)
   192 ;;_bufData	offset=-1 (param)
   193 ;;_txData	offset=-1 (param)
   194 ;;_rxData	offset	0
   195 ;;_m_link	offset=-1 (param)
   196 ;;_byte_block	offset=-1 (param)
   197 ;;_clear	offset=-2 (param)
   198 ;;_numMilliseconds	offset=-2 (param)
   199 ;;_timer	offset=-1 (param)
   200 ;;_timer	offset=-1 (param)
   201 ;;_count	offset=-3 (param)
   202 ;;_readValue	offset	0
   203 ;;_readValue	offset	0
   204 ;;_cmd	offset=-1 (param)
   205 ;;_cmd	offset=-1 (param)
   206 ;;_data	offset=-1 (param)
   207 ;;__this	offset=-2 (param)
   208 ;;_r	offset=-1 (param)
   209 ;;_c	offset=-2 (param)
   210 ;;_strPtr	offset=-3 (param)
   211 ;;_strPtr	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_strPtr	offset=-1 (param)
   214 ;;_delay	offset=-4 (param)
   215 ;;__this	offset=-2 (param)
   216 ;;_clearBuffer	offset=-3 (param)
   217 ;;_s	offset	0
   218 ;;_k	offset	2
   219 ;;_dest	offset=-2 (param)
   220 ;;_c	offset=-4 (param)
   221 ;;_n	offset=-6 (param)
   222 ;;_ap	offset	0
   223 ;;_fmt	offset=-2 (param)
   224 ;;_cfmt	offset	0
   225 ;;_fp	offset=-2 (param)
   226 ;;_fmt	offset=-3 (param)
   227 ;;_ap	offset=-5 (param)
   228 ;;_ll	offset	0
   229 ;;_cp	offset	8
   230 ;;_c	offset	10
   231 ;;_fp	offset=-2 (param)
   232 ;;_fmt	offset=-4 (param)
   233 ;;_ap	offset=-6 (param)
   234 ;;_r	offset	0
   235 ;;_l	offset	1
   236 ;;__l	offset=-1 (param)
   237 ;;__r	offset=-2 (param)
   238 ;;_n	offset=-4 (param)
   239 ;;_nuls	offset	0
   240 ;;_l	offset	7
   241 ;;_p	offset	9
   242 ;;_cp	offset	11
   243 ;;_w	offset	13
   244 ;;_i	offset	15
   245 ;;_fp	offset=-2 (param)
   246 ;;_s	offset=-4 (param)
   247 ;;_dtoa$3822	offset	0
   248 ;;_n	offset	2
   249 ;;_i	offset	10
   250 ;;_s	offset	12
   251 ;;_w	offset	14
   252 ;;_p	offset	16
   253 ;;_fp	offset=-2 (param)
   254 ;;_d	offset=-10 (param)
   255 ;;_a	offset=-2 (param)
   256 ;;_sign	offset	0
   257 ;;_counter	offset	1
   258 ;;_dividend	offset=-8 (param)
   259 ;;_divisor	offset=-16 (param)
   260 ;;_quotient	offset	0
   261 ;;_sign	offset	8
   262 ;;_counter	offset	9
   263 ;;_dividend	offset=-8 (param)
   264 ;;_divisor	offset=-16 (param)
   265 ;;_w	offset	0
   266 ;;_fp	offset=-2 (param)
   267 ;;_c	offset=-3 (param)
   268 ;;_w	offset	0
   269 ;;_i	offset	2
   270 ;;_fp	offset=-2 (param)
   271 ;;_buf	offset=-4 (param)
   272 ;;_p	offset=-6 (param)
   273 ;;_a	offset	0
   274 ;;_s	offset=-2 (param)
   275 ;;_i	offset	0
   276 ;;_c	offset	2
   277 ;;_s	offset=-2 (param)
   278 ;;_fp	offset=-4 (param)
   279 ;;_c	offset=-2 (param)
   280 ;;_fp	offset=-4 (param)
   281 ;;_c	offset=-1 (param)
   282 ;;__this	offset=-2 (param)
   283 ;;_c	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_state	offset	0
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_i	offset	0
   296 ;;_timerVal	offset=-2 (param)
   297                           
   298                           	psect	idataCOMRAM
   299  0060A2                     __pidataCOMRAM:
   300                           	opt callstack 0
   301                           
   302                           ;initializer for r_protocol@retry
   303  0060A2  03                 	db	3
   304                           
   305                           	psect	idataBANK0
   306  00607E                     __pidataBANK0:
   307                           	opt callstack 0
   308                           
   309                           ;initializer for stoa@F1144
   310  00607E  28                 	db	40
   311  00607F  6E                 	db	110
   312  006080  75                 	db	117
   313  006081  6C                 	db	108
   314  006082  6C                 	db	108
   315  006083  29                 	db	41
   316  006084  00                 	db	0
   317                           
   318                           	psect	idataBANK1
   319  004C94                     __pidataBANK1:
   320                           	opt callstack 0
   321                           
   322                           ;initializer for _H10
   323  004C94  0000               	dw	0
   324  004C96  0001               	dw	1
   325  004C98  0000               	dw	0
   326  004C9A  01                 	db	1
   327  004C9B  80                 	db	128
   328  004C9C  01                 	db	1
   329  004C9D  81                 	db	129
   330  004C9E  00                 	db	0
   331  004C9F  00                 	db	0
   332  004CA0  0A                 	db	10
   333  004CA1  0000               	dw	0
   334  004CA3  00                 	db	0
   335  004CA4  00                 	db	0
   336  004CA5  00                 	db	0
   337  004CA6  00                 	db	0
   338  004CA7  00                 	db	0
   339  004CA8  00                 	db	0
   340  004CA9  00                 	db	0
   341  004CAA  00                 	db	0
   342  004CAB  00                 	db	0
   343  004CAC  00                 	db	0
   344  004CAD  0A                 	db	10
   345  004CAE  0000               	dw	0
   346  004CB0  0001               	dw	1
   347  004CB2  0000               	dw	0
   348  004CB4  01                 	db	1
   349  004CB5  80                 	db	128
   350  004CB6  00                 	db	0
   351  004CB7  01                 	db	1
   352  004CB8  00                 	db	0
   353  004CB9  00                 	db	0
   354  004CBA  0A                 	db	10
   355  004CBB  0000               	dw	0
   356  004CBD  0001               	dw	1
   357  004CBF  0000               	dw	0
   358  004CC1  01                 	db	1
   359  004CC2  80                 	db	128
   360  004CC3  01                 	db	1
   361  004CC4  81                 	db	129
   362  004CC5  00                 	db	0
   363  004CC6  80                 	db	128
   364  004CC7  0A                 	db	10
   365  004CC8  0000               	dw	0
   366  004CCA  0001               	dw	1
   367  004CCC  0000               	dw	0
   368  004CCE  01                 	db	1
   369  004CCF  80                 	db	128
   370  004CD0  11                 	db	17
   371  004CD1  82                 	db	130
   372  004CD2  00                 	db	0
   373  004CD3  00                 	db	0
   374  004CD4  0A                 	db	10
   375                           
   376                           ;initializer for _H27
   377  004CD5  0000               	dw	0
   378  004CD7  00                 	db	0
   379  004CD8  00                 	db	0
   380  004CD9  00                 	db	0
   381  004CDA  00                 	db	0
   382  004CDB  00                 	db	0
   383  004CDC  00                 	db	0
   384  004CDD  00                 	db	0
   385  004CDE  00                 	db	0
   386  004CDF  00                 	db	0
   387  004CE0  00                 	db	0
   388  004CE1  00                 	db	0
   389  004CE2  00                 	db	0
   390  004CE3  00                 	db	0
   391  004CE4  00                 	db	0
   392  004CE5  00                 	db	0
   393  004CE6  00                 	db	0
   394  004CE7  00                 	db	0
   395  004CE8  0001               	dw	1
   396  004CEA  0000               	dw	0
   397  004CEC  01                 	db	1
   398  004CED  80                 	db	128
   399  004CEE  0D                 	db	13
   400  004CEF  81                 	db	129
   401  004CF0  00                 	db	0
   402  004CF1  80                 	db	128
   403  004CF2  1B                 	db	27
   404                           
   405                           ;initializer for _H12
   406  004CF3  0000               	dw	0
   407  004CF5  00                 	db	0
   408  004CF6  01                 	db	1
   409  004CF7  0001               	dw	1
   410  004CF9  0000               	dw	0
   411  004CFB  01                 	db	1
   412  004CFC  80                 	db	128
   413  004CFD  02                 	db	2
   414  004CFE  01                 	db	1
   415  004CFF  00                 	db	0
   416  004D00  00                 	db	0
   417  004D01  0C                 	db	12
   418  004D02  0000               	dw	0
   419  004D04  00                 	db	0
   420  004D05  01                 	db	1
   421  004D06  0001               	dw	1
   422  004D08  0000               	dw	0
   423  004D0A  01                 	db	1
   424  004D0B  80                 	db	128
   425  004D0C  0D                 	db	13
   426  004D0D  81                 	db	129
   427  004D0E  00                 	db	0
   428  004D0F  00                 	db	0
   429  004D10  0C                 	db	12
   430                           
   431                           ;initializer for _H24
   432  004D11  0000               	dw	0
   433  004D13  41                 	db	65
   434  004D14  20                 	db	32
   435  004D15  30                 	db	48
   436  004D16  31                 	db	49
   437  004D17  30                 	db	48
   438  004D18  39                 	db	57
   439  004D19  31                 	db	49
   440  004D1A  31                 	db	49
   441  004D1B  30                 	db	48
   442  004D1C  38                 	db	56
   443  004D1D  34                 	db	52
   444  004D1E  36                 	db	54
   445  004D1F  30                 	db	48
   446  004D20  30                 	db	48
   447  004D21  0001               	dw	1
   448  004D23  0000               	dw	0
   449  004D25  01                 	db	1
   450  004D26  80                 	db	128
   451  004D27  12                 	db	18
   452  004D28  02                 	db	2
   453  004D29  00                 	db	0
   454  004D2A  00                 	db	0
   455  004D2B  18                 	db	24
   456                           
   457                           ;initializer for _H17
   458  004D2C  0000               	dw	0
   459  004D2E  00                 	db	0
   460  004D2F  01                 	db	1
   461  004D30  00                 	db	0
   462  004D31  01                 	db	1
   463  004D32  21                 	db	33
   464  004D33  02                 	db	2
   465  004D34  01                 	db	1
   466  004D35  0001               	dw	1
   467  004D37  0000               	dw	0
   468  004D39  01                 	db	1
   469  004D3A  80                 	db	128
   470  004D3B  0E                 	db	14
   471  004D3C  01                 	db	1
   472  004D3D  00                 	db	0
   473  004D3E  00                 	db	0
   474  004D3F  11                 	db	17
   475                           
   476                           ;initializer for _H14
   477  004D40  0000               	dw	0
   478  004D42  00                 	db	0
   479  004D43  41                 	db	65
   480  004D44  11                 	db	17
   481  004D45  01                 	db	1
   482  004D46  0001               	dw	1
   483  004D48  0000               	dw	0
   484  004D4A  01                 	db	1
   485  004D4B  80                 	db	128
   486  004D4C  04                 	db	4
   487  004D4D  01                 	db	1
   488  004D4E  00                 	db	0
   489  004D4F  00                 	db	0
   490  004D50  0E                 	db	14
   491                           
   492                           ;initializer for _H13
   493  004D51  0000               	dw	0
   494  004D53  00                 	db	0
   495  004D54  01                 	db	1
   496  004D55  21                 	db	33
   497  004D56  0001               	dw	1
   498  004D58  0000               	dw	0
   499  004D5A  01                 	db	1
   500  004D5B  80                 	db	128
   501  004D5C  0C                 	db	12
   502  004D5D  06                 	db	6
   503  004D5E  00                 	db	0
   504  004D5F  00                 	db	0
   505  004D60  0D                 	db	13
   506                           
   507                           	psect	idataBANK2
   508  005982                     __pidataBANK2:
   509                           	opt callstack 0
   510                           
   511                           ;initializer for _H53
   512  005982  0000               	dw	0
   513  005984  00                 	db	0
   514  005985  00                 	db	0
   515  005986  00                 	db	0
   516  005987  00                 	db	0
   517  005988  00                 	db	0
   518  005989  00                 	db	0
   519  00598A  00                 	db	0
   520  00598B  00                 	db	0
   521  00598C  00                 	db	0
   522  00598D  00                 	db	0
   523  00598E  00                 	db	0
   524  00598F  00                 	db	0
   525  005990  00                 	db	0
   526  005991  00                 	db	0
   527  005992  00                 	db	0
   528  005993  00                 	db	0
   529  005994  00                 	db	0
   530  005995  00                 	db	0
   531  005996  00                 	db	0
   532  005997  00                 	db	0
   533  005998  00                 	db	0
   534  005999  00                 	db	0
   535  00599A  00                 	db	0
   536  00599B  00                 	db	0
   537  00599C  00                 	db	0
   538  00599D  00                 	db	0
   539  00599E  00                 	db	0
   540  00599F  00                 	db	0
   541  0059A0  00                 	db	0
   542  0059A1  00                 	db	0
   543  0059A2  00                 	db	0
   544  0059A3  00                 	db	0
   545  0059A4  00                 	db	0
   546  0059A5  00                 	db	0
   547  0059A6  00                 	db	0
   548  0059A7  00                 	db	0
   549  0059A8  00                 	db	0
   550  0059A9  00                 	db	0
   551  0059AA  00                 	db	0
   552  0059AB  46                 	db	70
   553  0059AC  01                 	db	1
   554  0059AD  41                 	db	65
   555  0059AE  00                 	db	0
   556  0059AF  0001               	dw	1
   557  0059B1  0000               	dw	0
   558  0059B3  01                 	db	1
   559  0059B4  80                 	db	128
   560  0059B5  03                 	db	3
   561  0059B6  8A                 	db	138
   562  0059B7  00                 	db	0
   563  0059B8  00                 	db	0
   564  0059B9  35                 	db	53
   565  0000                     _IVTADL	set	14493
   566  0000                     _IVTADH	set	14494
   567  0000                     _IVTADU	set	14495
   568  0000                     _PIE8bits	set	14744
   569  0000                     _PIR8bits	set	14760
   570  0000                     _SCANPR	set	14839
   571  0000                     _DMA2PR	set	14836
   572  0000                     _DMA1PR	set	14835
   573  0000                     _MAINPR	set	14834
   574  0000                     _ISRPR	set	14833
   575  0000                     _PIE2bits	set	14738
   576  0000                     _PIR2bits	set	14754
   577  0000                     _PIE9bits	set	14745
   578  0000                     _PIR9bits	set	14761
   579  0000                     _PIE6bits	set	14742
   580  0000                     _PIE3bits	set	14739
   581  0000                     _PMD7	set	14791
   582  0000                     _PMD6	set	14790
   583  0000                     _PMD5	set	14789
   584  0000                     _PMD4	set	14788
   585  0000                     _PMD3	set	14787
   586  0000                     _PMD2	set	14786
   587  0000                     _PMD1	set	14785
   588  0000                     _PMD0	set	14784
   589  0000                     _OSCTUNE	set	14814
   590  0000                     _OSCFRQ	set	14815
   591  0000                     _OSCEN	set	14813
   592  0000                     _OSCCON3	set	14811
   593  0000                     _OSCCON1	set	14809
   594  0000                     _IPR8bits	set	14728
   595  0000                     _IPR9bits	set	14729
   596  0000                     _IPR7bits	set	14727
   597  0000                     _IPR5bits	set	14725
   598  0000                     _IPR1bits	set	14721
   599  0000                     _IPR3bits	set	14723
   600  0000                     _IPR6bits	set	14726
   601  0000                     _IPR2bits	set	14722
   602  0000                     _PIE7bits	set	14743
   603  0000                     _PIE5bits	set	14741
   604  0000                     _PIE1bits	set	14737
   605  0000                     _PIR7bits	set	14759
   606  0000                     _PIR5bits	set	14757
   607  0000                     _PIR1bits	set	14753
   608  0000                     _PLLR	set	118496
   609  0000                     _SPI1SDIPPS	set	15071
   610  0000                     _RC6PPS	set	14870
   611  0000                     _RC5PPS	set	14869
   612  0000                     _RA6PPS	set	14854
   613  0000                     _RA5PPS	set	14853
   614  0000                     _RA4PPS	set	14852
   615  0000                     _SPI1SCKPPS	set	15070
   616  0000                     _U1RXPPS	set	15077
   617  0000                     _INT1PPS	set	15041
   618  0000                     _INT2PPS	set	15042
   619  0000                     _INT0PPS	set	15040
   620  0000                     _RC3PPS	set	14867
   621  0000                     _RB6PPS	set	14862
   622  0000                     _U2RXPPS	set	15080
   623  0000                     _SLRCONF	set	14995
   624  0000                     _SLRCONE	set	14979
   625  0000                     _SLRCOND	set	14963
   626  0000                     _SLRCONC	set	14947
   627  0000                     _SLRCONB	set	14931
   628  0000                     _SLRCONA	set	14915
   629  0000                     _ODCOND	set	14962
   630  0000                     _ODCONC	set	14946
   631  0000                     _ODCONB	set	14930
   632  0000                     _ODCONA	set	14914
   633  0000                     _ODCONF	set	14994
   634  0000                     _ODCONE	set	14978
   635  0000                     _WPUC	set	14945
   636  0000                     _WPUA	set	14913
   637  0000                     _WPUB	set	14929
   638  0000                     _WPUE	set	14977
   639  0000                     _WPUF	set	14993
   640  0000                     _WPUD	set	14961
   641  0000                     _ANSELA	set	14912
   642  0000                     _ANSELF	set	14992
   643  0000                     _ANSELE	set	14976
   644  0000                     _ANSELB	set	14928
   645  0000                     _ANSELC	set	14944
   646  0000                     _ANSELD	set	14960
   647  0000                     _DMA1SSA	set	15353
   648  0000                     _DMA1DSZ	set	15342
   649  0000                     _DMA1SSZ	set	15351
   650  0000                     _DMA1DSA	set	15344
   651  0000                     _DMA1CON0bits	set	15356
   652  0000                     _DMA1CON1bits	set	15357
   653  0000                     _DMA1CON0	set	15356
   654  0000                     _DMA1AIRQ	set	15358
   655  0000                     _DMA1SIRQ	set	15359
   656  0000                     _DMA1CON1	set	15357
   657  0000                     _CLC1CON	set	15476
   658  0000                     _CLC1GLS3	set	15485
   659  0000                     _CLC1GLS2	set	15484
   660  0000                     _CLC1GLS1	set	15483
   661  0000                     _CLC1GLS0	set	15482
   662  0000                     _CLC1SEL3	set	15481
   663  0000                     _CLC1SEL2	set	15480
   664  0000                     _CLC1SEL1	set	15479
   665  0000                     _CLC1SEL0	set	15478
   666  0000                     _CLC1POL	set	15477
   667  0000                     _CLKRCON	set	15589
   668  0000                     _CLKRCLK	set	15590
   669  0000                     _MD1CARL	set	15613
   670  0000                     _MD1CARH	set	15614
   671  0000                     _MD1SRC	set	15612
   672  0000                     _MD1CON1bits	set	15611
   673  0000                     _MD1CON0bits	set	15610
   674  0000                     _SPI1INTFbits	set	15642
   675  0000                     _SPI1RXB	set	15632
   676  0000                     _SPI1TXB	set	15633
   677  0000                     _SPI1TCNTL	set	15634
   678  0000                     _SPI1CON0	set	15636
   679  0000                     _SPI1CLK	set	15644
   680  0000                     _SPI1BAUD	set	15641
   681  0000                     _SPI1CON2	set	15638
   682  0000                     _SPI1CON1	set	15637
   683  0000                     _U2RXB	set	15824
   684  0000                     _U2TXB	set	15826
   685  0000                     _U2ERRIE	set	15842
   686  0000                     _U2ERRIR	set	15841
   687  0000                     _U2UIR	set	15840
   688  0000                     _U2FIFO	set	15839
   689  0000                     _U2BRGH	set	15838
   690  0000                     _U2BRGL	set	15837
   691  0000                     _U2CON2	set	15836
   692  0000                     _U2CON1	set	15835
   693  0000                     _U2CON0	set	15834
   694  0000                     _U2P3L	set	15832
   695  0000                     _U2P2L	set	15830
   696  0000                     _U2P1L	set	15828
   697  0000                     _U1RXB	set	15848
   698  0000                     _U1TXB	set	15850
   699  0000                     _U1ERRIE	set	15866
   700  0000                     _U1ERRIR	set	15865
   701  0000                     _U1UIR	set	15864
   702  0000                     _U1FIFO	set	15863
   703  0000                     _U1BRGH	set	15862
   704  0000                     _U1BRGL	set	15861
   705  0000                     _U1CON2	set	15860
   706  0000                     _U1CON1	set	15859
   707  0000                     _U1CON0	set	15858
   708  0000                     _U1P3H	set	15857
   709  0000                     _U1P3L	set	15856
   710  0000                     _U1P2H	set	15855
   711  0000                     _U1P2L	set	15854
   712  0000                     _U1P1H	set	15853
   713  0000                     _U1P1L	set	15852
   714  0000                     _ADCON0	set	16120
   715  0000                     _ADCLK	set	16127
   716  0000                     _ADACT	set	16126
   717  0000                     _ADREF	set	16125
   718  0000                     _ADSTAT	set	16124
   719  0000                     _ADCON3	set	16123
   720  0000                     _ADCON2	set	16122
   721  0000                     _ADCON1	set	16121
   722  0000                     _ADPREH	set	16119
   723  0000                     _ADPREL	set	16118
   724  0000                     _ADCAP	set	16117
   725  0000                     _ADACQH	set	16116
   726  0000                     _ADACQL	set	16115
   727  0000                     _ADPCH	set	16113
   728  0000                     _ADRPT	set	16108
   729  0000                     _ADACCU	set	16106
   730  0000                     _ADSTPTH	set	16101
   731  0000                     _ADSTPTL	set	16100
   732  0000                     _ADUTHH	set	16097
   733  0000                     _ADUTHL	set	16096
   734  0000                     _ADLTHH	set	16095
   735  0000                     _ADLTHL	set	16094
   736  0000                     _NCO1CONbits	set	16190
   737  0000                     _NCO1INCL	set	16187
   738  0000                     _NCO1INCH	set	16188
   739  0000                     _NCO1INCU	set	16189
   740  0000                     _NCO1ACCL	set	16184
   741  0000                     _NCO1ACCH	set	16185
   742  0000                     _NCO1ACCU	set	16186
   743  0000                     _NCO1CLK	set	16191
   744  0000                     _NCO1CON	set	16190
   745  0000                     _LATCbits	set	16316
   746  0000                     _PORTDbits	set	16333
   747  0000                     _LATDbits	set	16317
   748  0000                     _LATEbits	set	16318
   749  0000                     _T5CONbits	set	16282
   750  0000                     _T5CON	set	16282
   751  0000                     _TMR5L	set	16280
   752  0000                     _TMR5H	set	16281
   753  0000                     _T5CLK	set	16285
   754  0000                     _T5GATE	set	16284
   755  0000                     _T5GCON	set	16283
   756  0000                     _T6CON	set	16276
   757  0000                     _T6TMR	set	16274
   758  0000                     _T6PR	set	16275
   759  0000                     _T6RST	set	16279
   760  0000                     _T6HLT	set	16277
   761  0000                     _T6CLKCON	set	16278
   762  0000                     _TRISD	set	16325
   763  0000                     _TRISC	set	16324
   764  0000                     _TRISB	set	16323
   765  0000                     _TRISA	set	16322
   766  0000                     _TRISF	set	16327
   767  0000                     _TRISE	set	16326
   768  0000                     _LATC	set	16316
   769  0000                     _LATB	set	16315
   770  0000                     _LATF	set	16319
   771  0000                     _LATA	set	16314
   772  0000                     _LATD	set	16317
   773  0000                     _LATE	set	16318
   774  0000                     _IVTLOCKbits	set	16340
   775  0000                     _IVTLOCK	set	16340
   776  0000                     _INTCON0bits	set	16338
   777  0000                     _GIE	set	130711
   778                           
   779                           	psect	smallconst
   780  002000                     __psmallconst:
   781                           	opt callstack 0
   782  002000  00                 	db	0
   783  002001                     STR_13:
   784  002001  20                 	db	32
   785  002002  52                 	db	82	;'R'
   786  002003  25                 	db	37
   787  002004  64                 	db	100	;'d'
   788  002005  20                 	db	32
   789  002006  54                 	db	84	;'T'
   790  002007  25                 	db	37
   791  002008  64                 	db	100	;'d'
   792  002009  20                 	db	32
   793  00200A  46                 	db	70	;'F'
   794  00200B  52                 	db	82	;'R'
   795  00200C  25                 	db	37
   796  00200D  64                 	db	100	;'d'
   797  00200E  20                 	db	32
   798  00200F  46                 	db	70	;'F'
   799  002010  53                 	db	83	;'S'
   800  002011  25                 	db	37
   801  002012  64                 	db	100	;'d'
   802  002013  20                 	db	32
   803  002014  23                 	db	35
   804  002015  00                 	db	0
   805  002016                     STR_8:
   806  002016  45                 	db	69	;'E'
   807  002017  20                 	db	32
   808  002018  52                 	db	82	;'R'
   809  002019  25                 	db	37
   810  00201A  64                 	db	100	;'d'
   811  00201B  20                 	db	32
   812  00201C  54                 	db	84	;'T'
   813  00201D  25                 	db	37
   814  00201E  64                 	db	100	;'d'
   815  00201F  20                 	db	32
   816  002020  45                 	db	69	;'E'
   817  002021  25                 	db	37
   818  002022  64                 	db	100	;'d'
   819  002023  20                 	db	32
   820  002024  41                 	db	65	;'A'
   821  002025  25                 	db	37
   822  002026  64                 	db	100	;'d'
   823  002027  20                 	db	32
   824  002028  23                 	db	35
   825  002029  00                 	db	0
   826  00202A                     STR_9:
   827  00202A  20                 	db	32
   828  00202B  48                 	db	72	;'H'
   829  00202C  4F                 	db	79	;'O'
   830  00202D  53                 	db	83	;'S'
   831  00202E  54                 	db	84	;'T'
   832  00202F  20                 	db	32
   833  002030  4D                 	db	77	;'M'
   834  002031  4F                 	db	79	;'O'
   835  002032  44                 	db	68	;'D'
   836  002033  45                 	db	69	;'E'
   837  002034  20                 	db	32
   838  002035  25                 	db	37
   839  002036  6C                 	db	108	;'l'
   840  002037  64                 	db	100	;'d'
   841  002038  20                 	db	32
   842  002039  20                 	db	32
   843  00203A  20                 	db	32
   844  00203B  23                 	db	35
   845  00203C  00                 	db	0
   846  00203D                     STR_12:
   847  00203D  20                 	db	32
   848  00203E  4C                 	db	76	;'L'
   849  00203F  4F                 	db	79	;'O'
   850  002040  47                 	db	71	;'G'
   851  002041  20                 	db	32
   852  002042  4D                 	db	77	;'M'
   853  002043  4F                 	db	79	;'O'
   854  002044  44                 	db	68	;'D'
   855  002045  45                 	db	69	;'E'
   856  002046  20                 	db	32
   857  002047  20                 	db	32
   858  002048  20                 	db	32
   859  002049  20                 	db	32
   860  00204A  20                 	db	32
   861  00204B  20                 	db	32
   862  00204C  23                 	db	35
   863  00204D  00                 	db	0
   864  00204E                     STR_1:
   865  00204E  20                 	db	32
   866  00204F  52                 	db	82	;'R'
   867  002050  56                 	db	86	;'V'
   868  002051  49                 	db	73	;'I'
   869  002052  20                 	db	32
   870  002053  48                 	db	72	;'H'
   871  002054  4F                 	db	79	;'O'
   872  002055  53                 	db	83	;'S'
   873  002056  54                 	db	84	;'T'
   874  002057  20                 	db	32
   875  002058  54                 	db	84	;'T'
   876  002059  45                 	db	69	;'E'
   877  00205A  53                 	db	83	;'S'
   878  00205B  54                 	db	84	;'T'
   879  00205C  45                 	db	69	;'E'
   880  00205D  52                 	db	82	;'R'
   881  00205E  00                 	db	0
   882  00205F                     STR_4:
   883  00205F  20                 	db	32
   884  002060  46                 	db	70	;'F'
   885  002061  47                 	db	71	;'G'
   886  002062  42                 	db	66	;'B'
   887  002063  40                 	db	64	;'@'
   888  002064  4D                 	db	77	;'M'
   889  002065  43                 	db	67	;'C'
   890  002066  48                 	db	72	;'H'
   891  002067  50                 	db	80	;'P'
   892  002068  20                 	db	32
   893  002069  46                 	db	70	;'F'
   894  00206A  41                 	db	65	;'A'
   895  00206B  42                 	db	66	;'B'
   896  00206C  34                 	db	52	;'4'
   897  00206D  00                 	db	0
   898  00206E                     STR_5:
   899  00206E  20                 	db	32
   900  00206F  53                 	db	83	;'S'
   901  002070  25                 	db	37
   902  002071  64                 	db	100	;'d'
   903  002072  46                 	db	70	;'F'
   904  002073  25                 	db	37
   905  002074  64                 	db	100	;'d'
   906  002075  20                 	db	32
   907  002076  23                 	db	35
   908  002077  20                 	db	32
   909  002078  20                 	db	32
   910  002079  20                 	db	32
   911  00207A  20                 	db	32
   912  00207B  00                 	db	0
   913  00207C                     STR_2:
   914  00207C  20                 	db	32
   915  00207D  56                 	db	86	;'V'
   916  00207E  65                 	db	101	;'e'
   917  00207F  72                 	db	114	;'r'
   918  002080  73                 	db	115	;'s'
   919  002081  69                 	db	105	;'i'
   920  002082  6F                 	db	111	;'o'
   921  002083  6E                 	db	110	;'n'
   922  002084  20                 	db	32
   923  002085  25                 	db	37
   924  002086  73                 	db	115	;'s'
   925  002087  00                 	db	0
   926  002088                     STR_7:
   927  002088  20                 	db	32
   928  002089  4F                 	db	79	;'O'
   929  00208A  4B                 	db	75	;'K'
   930  00208B  20                 	db	32
   931  00208C  23                 	db	35
   932  00208D  00                 	db	0
   933  00208E                     STR_6:
   934  00208E  20                 	db	32
   935  00208F  4F                 	db	79	;'O'
   936  002090  4B                 	db	75	;'K'
   937  002091  51                 	db	81	;'Q'
   938  002092  23                 	db	35
   939  002093  00                 	db	0
   940  002094                     STR_3:
   941  002094  30                 	db	48	;'0'
   942  002095  2E                 	db	46
   943  002096  37                 	db	55	;'7'
   944  002097  31                 	db	49	;'1'
   945  002098  41                 	db	65	;'A'
   946  002099  00                 	db	0
   947  00209A                     STR_17:
   948  00209A  6C                 	db	108	;'l'
   949  00209B  64                 	db	100	;'d'
   950  00209C  00                 	db	0
   951  00209D                     STR_21:
   952  00209D  6C                 	db	108	;'l'
   953  00209E  69                 	db	105	;'i'
   954  00209F  00                 	db	0
   955  0020A0                     STR_15:
   956  0020A0  25                 	db	37
   957  0020A1  63                 	db	99	;'c'
   958  0020A2  00                 	db	0
   959  0000                     
   960                           ; #config settings
   961  0020A3  00                 	db	0	; dummy byte at the end
   962  0000                     
   963                           	psect	cinit
   964  004D62                     __pcinit:
   965                           	opt callstack 0
   966  004D62                     start_initialization:
   967                           	opt callstack 0
   968  004D62                     __initialization:
   969                           	opt callstack 0
   970                           
   971                           ; Initialize objects allocated to BANK2 (56 bytes)
   972                           ; load TBLPTR registers with __pidataBANK2
   973  004D62  0E82               	movlw	low __pidataBANK2
   974  004D64  6EF6               	movwf	tblptrl,c
   975  004D66  0E59               	movlw	high __pidataBANK2
   976  004D68  6EF7               	movwf	tblptrh,c
   977  004D6A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   978  004D6C  6EF8               	movwf	tblptru,c
   979  004D6E  EE00  F2C0         	lfsr	0,__pdataBANK2
   980  004D72  EE20 F038          	lfsr	2,56
   981  004D76                     copy_data0:
   982  004D76  0009               	tblrd		*+
   983  004D78  006F FFD7 FFEE     	movff	tablat,postinc0
   984  004D7E  50DD               	movf	postdec2,w,c
   985  004D80  50D9               	movf	fsr2l,w,c
   986  004D82  E1F9               	bnz	copy_data0
   987                           
   988                           ; Initialize objects allocated to BANK1 (205 bytes)
   989                           ; load TBLPTR registers with __pidataBANK1
   990  004D84  0E94               	movlw	low __pidataBANK1
   991  004D86  6EF6               	movwf	tblptrl,c
   992  004D88  0E4C               	movlw	high __pidataBANK1
   993  004D8A  6EF7               	movwf	tblptrh,c
   994  004D8C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   995  004D8E  6EF8               	movwf	tblptru,c
   996  004D90  EE00  F100         	lfsr	0,__pdataBANK1
   997  004D94  EE20 F0CD          	lfsr	2,205
   998  004D98                     copy_data1:
   999  004D98  0009               	tblrd		*+
  1000  004D9A  006F FFD7 FFEE     	movff	tablat,postinc0
  1001  004DA0  50DD               	movf	postdec2,w,c
  1002  004DA2  50D9               	movf	fsr2l,w,c
  1003  004DA4  E1F9               	bnz	copy_data1
  1004                           
  1005                           ; Initialize objects allocated to BANK0 (7 bytes)
  1006                           ; load TBLPTR registers with __pidataBANK0
  1007  004DA6  0E7E               	movlw	low __pidataBANK0
  1008  004DA8  6EF6               	movwf	tblptrl,c
  1009  004DAA  0E60               	movlw	high __pidataBANK0
  1010  004DAC  6EF7               	movwf	tblptrh,c
  1011  004DAE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1012  004DB0  6EF8               	movwf	tblptru,c
  1013  004DB2  EE00  F0EE         	lfsr	0,__pdataBANK0
  1014  004DB6  EE20 F007          	lfsr	2,7
  1015  004DBA                     copy_data2:
  1016  004DBA  0009               	tblrd		*+
  1017  004DBC  006F FFD7 FFEE     	movff	tablat,postinc0
  1018  004DC2  50DD               	movf	postdec2,w,c
  1019  004DC4  50D9               	movf	fsr2l,w,c
  1020  004DC6  E1F9               	bnz	copy_data2
  1021                           
  1022                           ; Initialize objects allocated to COMRAM (1 bytes)
  1023                           ; load TBLPTR registers with __pidataCOMRAM
  1024  004DC8  0EA2               	movlw	low __pidataCOMRAM
  1025  004DCA  6EF6               	movwf	tblptrl,c
  1026  004DCC  0E60               	movlw	high __pidataCOMRAM
  1027  004DCE  6EF7               	movwf	tblptrh,c
  1028  004DD0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1029  004DD2  6EF8               	movwf	tblptru,c
  1030  004DD4  0009               	tblrd		*+	;fetch initializer
  1031  004DD6  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1032                           
  1033                           ; Clear objects allocated to BANK3 (198 bytes)
  1034  004DDC  EE00  F300         	lfsr	0,__pbssBANK3
  1035  004DE0  0EC6               	movlw	198
  1036  004DE2                     clear_0:
  1037  004DE2  6AEE               	clrf	postinc0,c
  1038  004DE4  06E8               	decf	wreg,f,c
  1039  004DE6  E1FD               	bnz	clear_0
  1040                           
  1041                           ; Clear objects allocated to BANK2 (192 bytes)
  1042  004DE8  EE00  F200         	lfsr	0,__pbssBANK2
  1043  004DEC  0EC0               	movlw	192
  1044  004DEE                     clear_1:
  1045  004DEE  6AEE               	clrf	postinc0,c
  1046  004DF0  06E8               	decf	wreg,f,c
  1047  004DF2  E1FD               	bnz	clear_1
  1048                           
  1049                           ; Clear objects allocated to BANK1 (32 bytes)
  1050  004DF4  EE00  F1CD         	lfsr	0,__pbssBANK1
  1051  004DF8  0E20               	movlw	32
  1052  004DFA                     clear_2:
  1053  004DFA  6AEE               	clrf	postinc0,c
  1054  004DFC  06E8               	decf	wreg,f,c
  1055  004DFE  E1FD               	bnz	clear_2
  1056                           
  1057                           ; Clear objects allocated to BANK0 (142 bytes)
  1058  004E00  EE00  F060         	lfsr	0,__pbssBANK0
  1059  004E04  0E8E               	movlw	142
  1060  004E06                     clear_3:
  1061  004E06  6AEE               	clrf	postinc0,c
  1062  004E08  06E8               	decf	wreg,f,c
  1063  004E0A  E1FD               	bnz	clear_3
  1064                           
  1065                           ; Clear objects allocated to COMRAM (60 bytes)
  1066  004E0C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1067  004E10  0E3C               	movlw	60
  1068  004E12                     clear_4:
  1069  004E12  6AEE               	clrf	postinc0,c
  1070  004E14  06E8               	decf	wreg,f,c
  1071  004E16  E1FD               	bnz	clear_4
  1072                           
  1073                           ;
  1074                           ; Setup IVTBASE
  1075                           ;
  1076  004E18  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1077  004E1A  6ED5               	movwf	213,c
  1078  004E1C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1079  004E1E  6ED6               	movwf	214,c
  1080  004E20  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1081  004E22  6ED7               	movwf	215,c
  1082  004E24                     end_of_initialization:
  1083                           	opt callstack 0
  1084  004E24                     __end_of__initialization:
  1085                           	opt callstack 0
  1086  004E24  0100               	movlb	0
  1087  004E26  EF6D  F017         	goto	_main	;jump to C main() function
  1088                           
  1089                           	psect	bssCOMRAM
  1090  000001                     __pbssCOMRAM:
  1091                           	opt callstack 0
  1092  000001                     secs_II_message@block:
  1093                           	opt callstack 0
  1094  000001                     	ds	7
  1095  000008                     _TMR6_InterruptHandler:
  1096                           	opt callstack 0
  1097  000008                     	ds	3
  1098  00000B                     _ADCC_ADI_InterruptHandler:
  1099                           	opt callstack 0
  1100  00000B                     	ds	3
  1101  00000E                     _UART1_TxInterruptHandler:
  1102                           	opt callstack 0
  1103  00000E                     	ds	3
  1104  000011                     _UART1_RxInterruptHandler:
  1105                           	opt callstack 0
  1106  000011                     	ds	3
  1107  000014                     _UART2_TxInterruptHandler:
  1108                           	opt callstack 0
  1109  000014                     	ds	3
  1110  000017                     _UART2_RxInterruptHandler:
  1111                           	opt callstack 0
  1112  000017                     	ds	3
  1113  00001A                     _INT2_InterruptHandler:
  1114                           	opt callstack 0
  1115  00001A                     	ds	3
  1116  00001D                     _INT1_InterruptHandler:
  1117                           	opt callstack 0
  1118  00001D                     	ds	3
  1119  000020                     _INT0_InterruptHandler:
  1120                           	opt callstack 0
  1121  000020                     	ds	3
  1122  000023                     _width:
  1123                           	opt callstack 0
  1124  000023                     	ds	2
  1125  000025                     _prec:
  1126                           	opt callstack 0
  1127  000025                     	ds	2
  1128  000027                     _flags:
  1129                           	opt callstack 0
  1130  000027                     	ds	2
  1131  000029                     TMR5_ISR@CountCallBack:
  1132                           	opt callstack 0
  1133  000029                     	ds	2
  1134  00002B                     _timer5ReloadVal:
  1135                           	opt callstack 0
  1136  00002B                     	ds	2
  1137  00002D                     t_protocol@requeue:
  1138                           	opt callstack 0
  1139  00002D                     	ds	1
  1140  00002E                     t_protocol@retry:
  1141                           	opt callstack 0
  1142  00002E                     	ds	1
  1143  00002F                     r_protocol@rxData_l:
  1144                           	opt callstack 0
  1145  00002F                     	ds	1
  1146  000030                     m_protocol@rxData_l:
  1147                           	opt callstack 0
  1148  000030                     	ds	1
  1149  000031                     _uart2RxCount:
  1150                           	opt callstack 0
  1151  000031                     	ds	1
  1152  000032                     _uart2RxTail:
  1153                           	opt callstack 0
  1154  000032                     	ds	1
  1155  000033                     _uart2RxHead:
  1156                           	opt callstack 0
  1157  000033                     	ds	1
  1158  000034                     _uart2TxBufferRemaining:
  1159                           	opt callstack 0
  1160  000034                     	ds	1
  1161  000035                     _uart2TxTail:
  1162                           	opt callstack 0
  1163  000035                     	ds	1
  1164  000036                     _uart2TxHead:
  1165                           	opt callstack 0
  1166  000036                     	ds	1
  1167  000037                     _uart1RxCount:
  1168                           	opt callstack 0
  1169  000037                     	ds	1
  1170  000038                     _uart1RxTail:
  1171                           	opt callstack 0
  1172  000038                     	ds	1
  1173  000039                     _uart1RxHead:
  1174                           	opt callstack 0
  1175  000039                     	ds	1
  1176  00003A                     _uart1TxBufferRemaining:
  1177                           	opt callstack 0
  1178  00003A                     	ds	1
  1179  00003B                     _uart1TxTail:
  1180                           	opt callstack 0
  1181  00003B                     	ds	1
  1182  00003C                     _uart1TxHead:
  1183                           	opt callstack 0
  1184  00003C                     	ds	1
  1185                           
  1186                           	psect	dataCOMRAM
  1187  00005D                     __pdataCOMRAM:
  1188                           	opt callstack 0
  1189  00005D                     r_protocol@retry:
  1190                           	opt callstack 0
  1191  00005D                     	ds	1
  1192                           
  1193                           	psect	bssBANK0
  1194  000060                     __pbssBANK0:
  1195                           	opt callstack 0
  1196  000060                     _r_block:
  1197                           	opt callstack 0
  1198  000060                     	ds	13
  1199  00006D                     _spi_link:
  1200                           	opt callstack 0
  1201  00006D                     	ds	12
  1202  000079                     _tickCount:
  1203                           	opt callstack 0
  1204  000079                     	ds	12
  1205  000085                     t_protocol@block:
  1206                           	opt callstack 0
  1207  000085                     	ds	7
  1208  00008C                     wdtdelay@dcount:
  1209                           	opt callstack 0
  1210  00008C                     	ds	4
  1211  000090                     _TMR5_InterruptHandler:
  1212                           	opt callstack 0
  1213  000090                     	ds	3
  1214  000093                     _nout:
  1215                           	opt callstack 0
  1216  000093                     	ds	2
  1217  000095                     run_checksum@sum:
  1218                           	opt callstack 0
  1219  000095                     	ds	2
  1220  000097                     _V:
  1221                           	opt callstack 0
  1222  000097                     	ds	87
  1223                           
  1224                           	psect	dataBANK0
  1225  0000EE                     __pdataBANK0:
  1226                           	opt callstack 0
  1227  0000EE                     stoa@F1144:
  1228                           	opt callstack 0
  1229  0000EE                     	ds	7
  1230                           
  1231                           	psect	bssBANK1
  1232  0001CD                     __pbssBANK1:
  1233                           	opt callstack 0
  1234  0001CD                     _dbuf:
  1235                           	opt callstack 0
  1236  0001CD                     	ds	32
  1237                           
  1238                           	psect	dataBANK1
  1239  000100                     __pdataBANK1:
  1240                           	opt callstack 0
  1241  000100                     _H10:
  1242                           	opt callstack 0
  1243  000100                     	ds	65
  1244  000141                     _H27:
  1245                           	opt callstack 0
  1246  000141                     	ds	30
  1247  00015F                     _H12:
  1248                           	opt callstack 0
  1249  00015F                     	ds	30
  1250  00017D                     _H24:
  1251                           	opt callstack 0
  1252  00017D                     	ds	27
  1253  000198                     _H17:
  1254                           	opt callstack 0
  1255  000198                     	ds	20
  1256  0001AC                     _H14:
  1257                           	opt callstack 0
  1258  0001AC                     	ds	17
  1259  0001BD                     _H13:
  1260                           	opt callstack 0
  1261  0001BD                     	ds	16
  1262                           
  1263                           	psect	bssBANK2
  1264  000200                     __pbssBANK2:
  1265                           	opt callstack 0
  1266  000200                     _uart2RxBuffer:
  1267                           	opt callstack 0
  1268  000200                     	ds	64
  1269  000240                     _uart1RxBuffer:
  1270                           	opt callstack 0
  1271  000240                     	ds	64
  1272  000280                     _uart1TxBuffer:
  1273                           	opt callstack 0
  1274  000280                     	ds	64
  1275                           
  1276                           	psect	dataBANK2
  1277  0002C0                     __pdataBANK2:
  1278                           	opt callstack 0
  1279  0002C0                     _H53:
  1280                           	opt callstack 0
  1281  0002C0                     	ds	56
  1282                           
  1283                           	psect	bssBANK3
  1284  000300                     __pbssBANK3:
  1285                           	opt callstack 0
  1286  000300                     _uart2TxBuffer:
  1287                           	opt callstack 0
  1288  000300                     	ds	64
  1289  000340                     _ring_buf2:
  1290                           	opt callstack 0
  1291  000340                     	ds	67
  1292  000383                     _ring_buf1:
  1293                           	opt callstack 0
  1294  000383                     	ds	67
  1295                           
  1296                           	psect	cstackBANK0
  1297  0000F5                     __pcstackBANK0:
  1298                           	opt callstack 0
  1299  0000F5                     ??_TMR5_ISR:
  1300                           
  1301                           ; 1 bytes @ 0x0
  1302  0000F5                     	ds	1
  1303                           
  1304                           	psect	cstackCOMRAM
  1305  00005E                     __pcstackCOMRAM:
  1306                           	opt callstack 0
  1307  00005E                     ??_TMR6_ISR:
  1308  00005E                     
  1309                           ; 1 bytes @ 0x0
  1310  00005E                     	ds	1
  1311  00005F                     
  1312                           ; 1 bytes @ 0x1
  1313 ;;
  1314 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1315 ;;
  1316 ;; *************** function _main *****************
  1317 ;; Defined at:
  1318 ;;		line 294 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  mode            1  [STACK] enum E16895
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1  [STACK] void 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 3F/3B
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels required when called:   14
  1338 ;; This function calls:
  1339 ;;		_SYSTEM_Initialize
  1340 ;;		_UART1_put_buffer
  1341 ;;		_WaitMs
  1342 ;;		_eaDogM_WriteCommand
  1343 ;;		_eaDogM_WriteStringAtPos
  1344 ;;		_init_display
  1345 ;;		_m_protocol
  1346 ;;		_r_protocol
  1347 ;;		_sprintf
  1348 ;;		_t_protocol
  1349 ;;		_wait_lcd_done
  1350 ;; This function is called by:
  1351 ;;		Startup code after reset
  1352 ;; This function uses a reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text0
  1356  002EDA                     __ptext0:
  1357                           	opt callstack 0
  1358  002EDA                     _main:
  1359                           	opt callstack 0
  1360                           
  1361                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1362  002EDA  52E6               	movf	postinc1,f,c
  1363                           
  1364                           ;main.c: 296:  UI_STATES mode;;main.c: 299:  SYSTEM_Initialize();
  1365                           
  1366                           ;incstack = 0
  1367  002EDC  ECE5  F02B         	call	_SYSTEM_Initialize	;wreg free
  1368                           
  1369                           ; BSR set to: 60
  1370                           ;main.c: 302:  (INTCON0bits.GIEH = 1);
  1371  002EE0  8ED2               	bsf	16338,7,c	;volatile
  1372                           
  1373                           ; BSR set to: 60
  1374                           ;main.c: 305:  (INTCON0bits.GIEL = 1);
  1375  002EE2  8CD2               	bsf	16338,6,c	;volatile
  1376                           
  1377                           ; BSR set to: 60
  1378                           ;main.c: 307:  V.ui_state = UI_STATE_INIT;
  1379  002EE4  0100               	movlb	0	; () banked
  1380  002EE6  6B98               	clrf	(_V+1)& (0+255),b
  1381  002EE8  D1DB               	goto	l8782
  1382  002EEA                     l8624:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 312:    init_display();
  1386  002EEA  EC6C  F025         	call	_init_display	;wreg free
  1387                           
  1388                           ; BSR set to: 61
  1389                           ;main.c: 313:    eaDogM_WriteCommand(0b00001100);
  1390  002EEE  0E0C               	movlw	12
  1391  002EF0  6EE6               	movwf	postinc1,c
  1392  002EF2  ECF6  F02F         	call	_eaDogM_WriteCommand	;wreg free
  1393                           
  1394                           ; BSR set to: 0
  1395  002EF6  90BD               	bcf	16317,0,c	;volatile
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;main.c: 315:    mode = UI_STATE_HOST;
  1399                           ;stkvar	_mode @ sp[(-1)+0]
  1400  002EF8  0EFF               	movlw	-1
  1401  002EFA  6AE3               	clrf	plusw1,c
  1402  002EFC  2AE3               	incf	plusw1,f,c
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;main.c: 316:    if (!PORTDbits.RD3) {
  1406  002EFE  B6CD               	btfsc	16333,3,c	;volatile
  1407  002F00  D005               	goto	l8636
  1408                           
  1409                           ; BSR set to: 0
  1410                           
  1411                           ;main.c: 317:     do { LATDbits.LATD0 = 1; } while(0);
  1412  002F02  80BD               	bsf	16317,0,c	;volatile
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;main.c: 318:     mode = UI_STATE_LOG;
  1416                           ;stkvar	_mode @ sp[(-1)+0]
  1417  002F04  0EFF               	movlw	-1
  1418  002F06  6AE3               	clrf	plusw1,c
  1419  002F08  80E3               	bsf	plusw1,0,c
  1420  002F0A  82E3               	bsf	plusw1,1,c	;indir
  1421  002F0C                     l8636:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;main.c: 320:    V.ui_state = mode;
  1425                           ;stkvar	_mode @ sp[(-1)+0]
  1426  002F0C  0EFF               	movlw	-1
  1427  002F0E  006F FF8C  F098    	movff	plusw1,_V+1
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;main.c: 321:    V.s_state = SEQ_STATE_INIT;
  1431  002F14  6B97               	clrf	_V& (0+255),b
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;main.c: 350:    sprintf(V.buf, " RVI HOST TESTER");
  1435  002F16  0E4E               	movlw	STR_1& (0+255)
  1436  002F18  6EE6               	movwf	postinc1,c
  1437  002F1A  0E97               	movlw	_V& (0+255)
  1438  002F1C  0F05               	addlw	5
  1439  002F1E  6EE6               	movwf	postinc1,c
  1440  002F20  0E02               	movlw	2
  1441  002F22  6EE6               	movwf	postinc1,c
  1442  002F24  EC15  F027         	call	_sprintf	;wreg free
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 351:    wait_lcd_done();
  1446  002F28  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 352:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1450  002F2C  0E97               	movlw	_V& (0+255)
  1451  002F2E  0F05               	addlw	5
  1452  002F30  6EE6               	movwf	postinc1,c
  1453  002F32  0E00               	movlw	0
  1454  002F34  6EE6               	movwf	postinc1,c
  1455  002F36  0E00               	movlw	0
  1456  002F38  6EE6               	movwf	postinc1,c
  1457  002F3A  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1458                           
  1459                           ; BSR set to: 59
  1460                           ;main.c: 353:    sprintf(V.buf, " Version %s", "0.71A");
  1461  002F3E  0E94               	movlw	STR_3& (0+255)
  1462  002F40  6E48               	movwf	btemp+11,c
  1463  002F42  0060  F123  FFE6   	movff	btemp+11,postinc1
  1464  002F48  0E20               	movlw	high __smallconst
  1465  002F4A  6EE6               	movwf	postinc1,c
  1466  002F4C  0E7C               	movlw	STR_2& (0+255)
  1467  002F4E  6EE6               	movwf	postinc1,c
  1468  002F50  0E97               	movlw	_V& (0+255)
  1469  002F52  0F05               	addlw	5
  1470  002F54  6EE6               	movwf	postinc1,c
  1471  002F56  0E04               	movlw	4
  1472  002F58  6EE6               	movwf	postinc1,c
  1473  002F5A  EC15  F027         	call	_sprintf	;wreg free
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;main.c: 354:    wait_lcd_done();
  1477  002F5E  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;main.c: 355:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1481  002F62  0E97               	movlw	_V& (0+255)
  1482  002F64  0F05               	addlw	5
  1483  002F66  6EE6               	movwf	postinc1,c
  1484  002F68  0E00               	movlw	0
  1485  002F6A  6EE6               	movwf	postinc1,c
  1486  002F6C  0E01               	movlw	1
  1487  002F6E  6EE6               	movwf	postinc1,c
  1488  002F70  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1489                           
  1490                           ; BSR set to: 59
  1491                           ;main.c: 356:    sprintf(V.buf, " FGB@MCHP FAB4");
  1492  002F74  0E5F               	movlw	STR_4& (0+255)
  1493  002F76  6EE6               	movwf	postinc1,c
  1494  002F78  0E97               	movlw	_V& (0+255)
  1495  002F7A  0F05               	addlw	5
  1496  002F7C  6EE6               	movwf	postinc1,c
  1497  002F7E  0E02               	movlw	2
  1498  002F80  6EE6               	movwf	postinc1,c
  1499  002F82  EC15  F027         	call	_sprintf	;wreg free
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;main.c: 357:    wait_lcd_done();
  1503  002F86  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;main.c: 358:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1507  002F8A  0E97               	movlw	_V& (0+255)
  1508  002F8C  0F05               	addlw	5
  1509  002F8E  6EE6               	movwf	postinc1,c
  1510  002F90  0E00               	movlw	0
  1511  002F92  6EE6               	movwf	postinc1,c
  1512  002F94  0E02               	movlw	2
  1513  002F96  6EE6               	movwf	postinc1,c
  1514  002F98  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1515                           
  1516                           ; BSR set to: 59
  1517                           ;main.c: 360:    WaitMs(3000);
  1518  002F9C  0EB8               	movlw	184
  1519  002F9E  6EE6               	movwf	postinc1,c
  1520  002FA0  0E0B               	movlw	11
  1521  002FA2  6EE6               	movwf	postinc1,c
  1522  002FA4  EC4A  F02D         	call	_WaitMs	;wreg free
  1523                           
  1524                           ;main.c: 361:    break;
  1525  002FA8  D18F               	goto	l1253
  1526  002FAA                     l1221:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 365:     V.r_l_state = LINK_STATE_IDLE;
  1530  002FAA  6B9A               	clrf	(_V+3)& (0+255),b
  1531                           
  1532                           ;main.c: 366:     V.t_l_state = LINK_STATE_IDLE;
  1533  002FAC  6B9B               	clrf	(_V+4)& (0+255),b
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;main.c: 367:     V.s_state = SEQ_STATE_RX;
  1537  002FAE  0E01               	movlw	1
  1538  002FB0  6F97               	movwf	_V& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;main.c: 369:     WaitMs(50);
  1542  002FB2  0E32               	movlw	50
  1543  002FB4  6EE6               	movwf	postinc1,c
  1544  002FB6  0E00               	movlw	0
  1545  002FB8  6EE6               	movwf	postinc1,c
  1546  002FBA  EC4A  F02D         	call	_WaitMs	;wreg free
  1547                           
  1548                           ;main.c: 370:     UART1_put_buffer(0x05);
  1549  002FBE  0E05               	movlw	5
  1550  002FC0  6EE6               	movwf	postinc1,c
  1551  002FC2  EC35  F02D         	call	_UART1_put_buffer	;wreg free
  1552                           
  1553                           ;main.c: 372:     break;
  1554  002FC6  D0C9               	goto	l8728
  1555  002FC8                     l8666:
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;main.c: 377:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1559  002FC8  0E97               	movlw	_V& (0+255)
  1560  002FCA  0F03               	addlw	3
  1561  002FCC  6EE6               	movwf	postinc1,c
  1562  002FCE  EC91  F019         	call	_r_protocol	;wreg free
  1563  002FD2  0E04               	movlw	4
  1564  002FD4  183D               	xorwf	btemp,w,c
  1565  002FD6  A4D8               	btfss	status,2,c
  1566  002FD8  D02F               	goto	l8686
  1567                           
  1568                           ;main.c: 378:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1569  002FDA  0100               	movlb	0	; () banked
  1570  002FDC  51E5               	movf	(_V+78)& (0+255),w,b
  1571  002FDE  6EE6               	movwf	postinc1,c
  1572  002FE0  0E00               	movlw	0
  1573  002FE2  6EE6               	movwf	postinc1,c
  1574  002FE4  51E4               	movf	(_V+77)& (0+255),w,b
  1575  002FE6  6EE6               	movwf	postinc1,c
  1576  002FE8  0E00               	movlw	0
  1577  002FEA  6EE6               	movwf	postinc1,c
  1578  002FEC  0E6E               	movlw	STR_5& (0+255)
  1579  002FEE  6EE6               	movwf	postinc1,c
  1580  002FF0  0E97               	movlw	_V& (0+255)
  1581  002FF2  0F05               	addlw	5
  1582  002FF4  6EE6               	movwf	postinc1,c
  1583  002FF6  0E06               	movlw	6
  1584  002FF8  6EE6               	movwf	postinc1,c
  1585  002FFA  EC15  F027         	call	_sprintf	;wreg free
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;main.c: 379:      V.buf[11] = 0;
  1589  002FFE  6BA7               	clrf	(_V+16)& (0+255),b
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;main.c: 380:      wait_lcd_done();
  1593  003000  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 381:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1597  003004  0E97               	movlw	_V& (0+255)
  1598  003006  0F05               	addlw	5
  1599  003008  6EE6               	movwf	postinc1,c
  1600  00300A  0E00               	movlw	0
  1601  00300C  6EE6               	movwf	postinc1,c
  1602  00300E  0E00               	movlw	0
  1603  003010  6EE6               	movwf	postinc1,c
  1604  003012  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1605                           
  1606                           ; BSR set to: 59
  1607                           ;main.c: 383:      WaitMs(5);
  1608  003016  0E05               	movlw	5
  1609  003018  6EE6               	movwf	postinc1,c
  1610  00301A  0E00               	movlw	0
  1611  00301C  6EE6               	movwf	postinc1,c
  1612  00301E  EC4A  F02D         	call	_WaitMs	;wreg free
  1613                           
  1614                           ;main.c: 385:      if (V.wbit) {
  1615  003022  0100               	movlb	0	; () banked
  1616  003024  A3EC               	btfss	(_V+85)& (0+255),1,b
  1617  003026  D006               	goto	l8684
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;main.c: 386:       V.s_state = SEQ_STATE_TX;
  1621  003028  0E02               	movlw	2
  1622  00302A  6F97               	movwf	_V& (0+255),b
  1623                           
  1624                           ;main.c: 387:       V.failed_send = 0;
  1625  00302C  0E87               	movlw	-121
  1626  00302E  17EC               	andwf	(_V+85)& (0+255),f,b
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;main.c: 388:       V.t_l_state = LINK_STATE_IDLE;
  1630  003030  6B9B               	clrf	(_V+4)& (0+255),b
  1631                           
  1632                           ;main.c: 389:      } else {
  1633  003032  D002               	goto	l8686
  1634  003034                     l8684:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 390:       V.s_state = SEQ_STATE_TRIGGER;
  1638  003034  0E03               	movlw	3
  1639  003036  6F97               	movwf	_V& (0+255),b
  1640  003038                     l8686:
  1641                           
  1642                           ;main.c: 393:     if (V.r_l_state == LINK_STATE_ERROR)
  1643  003038  0E06               	movlw	6
  1644  00303A  0100               	movlb	0	; () banked
  1645  00303C  199A               	xorwf	(_V+3)& (0+255),w,b
  1646  00303E  A4D8               	btfss	status,2,c
  1647  003040  D08C               	goto	l8728
  1648  003042                     u5660:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;main.c: 394:      V.s_state = SEQ_STATE_ERROR;
  1652  003042  0E06               	movlw	6
  1653  003044  6F97               	movwf	_V& (0+255),b
  1654  003046  D089               	goto	l8728
  1655  003048                     l8690:
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;main.c: 400:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1659  003048  0E97               	movlw	_V& (0+255)
  1660  00304A  0F04               	addlw	4
  1661  00304C  6EE6               	movwf	postinc1,c
  1662  00304E  ECE7  F01D         	call	_t_protocol	;wreg free
  1663  003052  0E04               	movlw	4
  1664  003054  183D               	xorwf	btemp,w,c
  1665  003056  A4D8               	btfss	status,2,c
  1666  003058  D003               	goto	l8694
  1667                           
  1668                           ;main.c: 401:      V.s_state = SEQ_STATE_TRIGGER;
  1669  00305A  0E03               	movlw	3
  1670  00305C  0100               	movlb	0	; () banked
  1671  00305E  6F97               	movwf	_V& (0+255),b
  1672  003060                     l8694:
  1673                           
  1674                           ;main.c: 403:     if (V.t_l_state == LINK_STATE_ERROR)
  1675  003060  0E06               	movlw	6
  1676  003062  0100               	movlb	0	; () banked
  1677  003064  199B               	xorwf	(_V+4)& (0+255),w,b
  1678  003066  B4D8               	btfsc	status,2,c
  1679  003068  D7EC               	goto	u5660
  1680  00306A  D077               	goto	l8728
  1681  00306C                     l1231:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;main.c: 407:     if (V.queue) {
  1685  00306C  A9ED               	btfss	(_V+86)& (0+255),4,b
  1686  00306E  D01C               	goto	l8708
  1687                           
  1688                           ; BSR set to: 0
  1689  003070  A4BE               	btfss	16318,2,c	;volatile
  1690  003072  D002               	goto	u5700
  1691  003074  0E01               	movlw	1
  1692  003076  D001               	goto	u5706
  1693  003078                     u5700:
  1694  003078  0E00               	movlw	0
  1695  00307A                     u5706:
  1696  00307A  0AFF               	xorlw	255
  1697  00307C  6E48               	movwf	btemp+11,c
  1698  00307E  4648               	rlncf	btemp+11,f,c
  1699  003080  4648               	rlncf	btemp+11,f,c
  1700  003082  50BE               	movf	16318,w,c	;volatile
  1701  003084  1848               	xorwf	btemp+11,w,c
  1702  003086  0BFB               	andlw	-5
  1703  003088  1848               	xorwf	btemp+11,w,c
  1704  00308A  6EBE               	movwf	16318,c	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;main.c: 409:      V.r_l_state = LINK_STATE_IDLE;
  1708  00308C  6B9A               	clrf	(_V+3)& (0+255),b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;main.c: 410:      V.t_l_state = LINK_STATE_IDLE;
  1712  00308E  6B9B               	clrf	(_V+4)& (0+255),b
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;main.c: 411:      V.s_state = SEQ_STATE_TX;
  1716  003090  0E02               	movlw	2
  1717  003092  6F97               	movwf	_V& (0+255),b
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 412:      sprintf(V.buf, " OKQ#");
  1721  003094  0E8E               	movlw	STR_6& (0+255)
  1722  003096  6EE6               	movwf	postinc1,c
  1723  003098  0E97               	movlw	_V& (0+255)
  1724  00309A  0F05               	addlw	5
  1725  00309C  6EE6               	movwf	postinc1,c
  1726  00309E  0E02               	movlw	2
  1727  0030A0  6EE6               	movwf	postinc1,c
  1728  0030A2  EC15  F027         	call	_sprintf	;wreg free
  1729                           
  1730                           ;main.c: 413:     } else {
  1731  0030A6  D00B               	goto	l8712
  1732  0030A8                     l8708:
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;main.c: 414:      V.s_state = SEQ_STATE_DONE;
  1736  0030A8  0E05               	movlw	5
  1737  0030AA  6F97               	movwf	_V& (0+255),b
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 415:      sprintf(V.buf, " OK #");
  1741  0030AC  0E88               	movlw	STR_7& (0+255)
  1742  0030AE  6EE6               	movwf	postinc1,c
  1743  0030B0  0E97               	movlw	_V& (0+255)
  1744  0030B2  0F05               	addlw	5
  1745  0030B4  6EE6               	movwf	postinc1,c
  1746  0030B6  0E02               	movlw	2
  1747  0030B8  6EE6               	movwf	postinc1,c
  1748  0030BA  EC15  F027         	call	_sprintf	;wreg free
  1749  0030BE                     l8712:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;main.c: 417:     wait_lcd_done();
  1753  0030BE  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 418:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1757  0030C2  0E97               	movlw	_V& (0+255)
  1758  0030C4  0F05               	addlw	5
  1759  0030C6  6EE6               	movwf	postinc1,c
  1760  0030C8  0E0B               	movlw	11
  1761  0030CA  6EE6               	movwf	postinc1,c
  1762  0030CC  0E00               	movlw	0
  1763  0030CE  6EE6               	movwf	postinc1,c
  1764  0030D0  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1765                           
  1766                           ;main.c: 419:     break;
  1767  0030D4  D042               	goto	l8728
  1768  0030D6                     l1236:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;main.c: 421:     V.s_state = SEQ_STATE_INIT;
  1772  0030D6  6B97               	clrf	_V& (0+255),b
  1773                           
  1774                           ;main.c: 422:     break;
  1775  0030D8  D040               	goto	l8728
  1776  0030DA                     l1238:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 425:     V.s_state = SEQ_STATE_INIT;
  1780  0030DA  6B97               	clrf	_V& (0+255),b
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 426:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1784  0030DC  51E7               	movf	(_V+80)& (0+255),w,b
  1785  0030DE  6EE6               	movwf	postinc1,c
  1786  0030E0  0E00               	movlw	0
  1787  0030E2  6EE6               	movwf	postinc1,c
  1788  0030E4  51E6               	movf	(_V+79)& (0+255),w,b
  1789  0030E6  6EE6               	movwf	postinc1,c
  1790  0030E8  0E00               	movlw	0
  1791  0030EA  6EE6               	movwf	postinc1,c
  1792  0030EC  519B               	movf	(_V+4)& (0+255),w,b
  1793  0030EE  6EE6               	movwf	postinc1,c
  1794  0030F0  0E00               	movlw	0
  1795  0030F2  6EE6               	movwf	postinc1,c
  1796  0030F4  519A               	movf	(_V+3)& (0+255),w,b
  1797  0030F6  6EE6               	movwf	postinc1,c
  1798  0030F8  0E00               	movlw	0
  1799  0030FA  6EE6               	movwf	postinc1,c
  1800  0030FC  0E16               	movlw	STR_8& (0+255)
  1801  0030FE  6EE6               	movwf	postinc1,c
  1802  003100  0E97               	movlw	_V& (0+255)
  1803  003102  0F05               	addlw	5
  1804  003104  6EE6               	movwf	postinc1,c
  1805  003106  0E0A               	movlw	10
  1806  003108  6EE6               	movwf	postinc1,c
  1807  00310A  EC15  F027         	call	_sprintf	;wreg free
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;main.c: 427:     V.buf[16] = 0;
  1811  00310E  6BAC               	clrf	(_V+21)& (0+255),b
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;main.c: 428:     wait_lcd_done();
  1815  003110  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;main.c: 429:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1819  003114  0E97               	movlw	_V& (0+255)
  1820  003116  0F05               	addlw	5
  1821  003118  6EE6               	movwf	postinc1,c
  1822  00311A  0E00               	movlw	0
  1823  00311C  6EE6               	movwf	postinc1,c
  1824  00311E  0E02               	movlw	2
  1825  003120  6EE6               	movwf	postinc1,c
  1826  003122  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1827                           
  1828                           ;main.c: 430:     break;
  1829  003126  D019               	goto	l8728
  1830  003128                     l8726:
  1831                           
  1832                           ; BSR set to: 0
  1833  003128  5197               	movf	_V& (0+255),w,b
  1834  00312A  6E47               	movwf	btemp+10,c
  1835  00312C  6A48               	clrf	btemp+11,c
  1836                           
  1837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1838                           ; Switch size 1, requested type "simple"
  1839                           ; Number of cases is 1, Range of values is 0 to 0
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte            4     3 (average)
  1843                           ;	Chosen strategy is simple_byte
  1844  00312E  5048               	movf	btemp+11,w,c
  1845  003130  0A00               	xorlw	0	; case 0
  1846  003132  A4D8               	btfss	status,2,c
  1847  003134  D7D2               	goto	l1238
  1848                           
  1849                           ; BSR set to: 0
  1850                           ; Switch size 1, requested type "simple"
  1851                           ; Number of cases is 6, Range of values is 0 to 6
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           19    10 (average)
  1855                           ;	Chosen strategy is simple_byte
  1856  003136  5047               	movf	btemp+10,w,c
  1857  003138  0A00               	xorlw	0	; case 0
  1858  00313A  B4D8               	btfsc	status,2,c
  1859  00313C  D736               	goto	l1221
  1860  00313E  0A01               	xorlw	1	; case 1
  1861  003140  B4D8               	btfsc	status,2,c
  1862  003142  D742               	goto	l8666
  1863  003144  0A03               	xorlw	3	; case 2
  1864  003146  B4D8               	btfsc	status,2,c
  1865  003148  D77F               	goto	l8690
  1866  00314A  0A01               	xorlw	1	; case 3
  1867  00314C  B4D8               	btfsc	status,2,c
  1868  00314E  D78E               	goto	l1231
  1869  003150  0A06               	xorlw	6	; case 5
  1870  003152  B4D8               	btfsc	status,2,c
  1871  003154  D7C0               	goto	l1236
  1872  003156  0A03               	xorlw	3	; case 6
  1873  003158  D7C0               	goto	l1238
  1874  00315A                     l8728:
  1875                           
  1876                           ;main.c: 432:    if (!V.error && !V.abort) {
  1877  00315A  0100               	movlb	0	; () banked
  1878  00315C  51E6               	movf	(_V+79)& (0+255),w,b
  1879  00315E  A4D8               	btfss	status,2,c
  1880  003160  D0B3               	goto	l1253
  1881                           
  1882                           ; BSR set to: 0
  1883  003162  51E7               	movf	(_V+80)& (0+255),w,b
  1884  003164  A4D8               	btfss	status,2,c
  1885  003166  D0B0               	goto	l1253
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;main.c: 433:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1889  003168  0060  F373  FFE6   	movff	_V+69,postinc1
  1890  00316E  0060  F377  FFE6   	movff	_V+70,postinc1
  1891  003174  0060  F37B  FFE6   	movff	_V+71,postinc1
  1892  00317A  0060  F37F  FFE6   	movff	_V+72,postinc1
  1893  003180  0E2A               	movlw	STR_9& (0+255)
  1894  003182  6EE6               	movwf	postinc1,c
  1895  003184  0E97               	movlw	_V& (0+255)
  1896  003186  0F05               	addlw	5
  1897  003188  6EE6               	movwf	postinc1,c
  1898  00318A  0E06               	movlw	6
  1899  00318C  6EE6               	movwf	postinc1,c
  1900  00318E  EC15  F027         	call	_sprintf	;wreg free
  1901  003192                     l8734:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;main.c: 434:     V.buf[16] = 0;
  1905  003192  6BAC               	clrf	(_V+21)& (0+255),b
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 435:     wait_lcd_done();
  1909  003194  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main.c: 436:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1913  003198  0E97               	movlw	_V& (0+255)
  1914  00319A  0F05               	addlw	5
  1915  00319C  6EE6               	movwf	postinc1,c
  1916  00319E  0E00               	movlw	0
  1917  0031A0  6EE6               	movwf	postinc1,c
  1918  0031A2  0E02               	movlw	2
  1919  0031A4  6EE6               	movwf	postinc1,c
  1920  0031A6  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1921  0031AA  D08E               	goto	l1253
  1922  0031AC                     l1242:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 442:     V.m_l_state = LINK_STATE_IDLE;
  1926  0031AC  6B99               	clrf	(_V+2)& (0+255),b
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;main.c: 443:     V.s_state = SEQ_STATE_RX;
  1930  0031AE  0E01               	movlw	1
  1931  0031B0  6F97               	movwf	_V& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;main.c: 444:     V.uart = 0;
  1935  0031B2  9FED               	bcf	(_V+86)& (0+255),7,b
  1936                           
  1937                           ;main.c: 445:     break;
  1938  0031B4  D069               	goto	l8772
  1939  0031B6                     l8744:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;main.c: 450:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  1943  0031B6  0E97               	movlw	_V& (0+255)
  1944  0031B8  0F02               	addlw	2
  1945  0031BA  6EE6               	movwf	postinc1,c
  1946  0031BC  EC52  F010         	call	_m_protocol	;wreg free
  1947  0031C0  0E04               	movlw	4
  1948  0031C2  183D               	xorwf	btemp,w,c
  1949  0031C4  A4D8               	btfss	status,2,c
  1950  0031C6  D025               	goto	l8756
  1951                           
  1952                           ;main.c: 451:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1953  0031C8  0100               	movlb	0	; () banked
  1954  0031CA  51E5               	movf	(_V+78)& (0+255),w,b
  1955  0031CC  6EE6               	movwf	postinc1,c
  1956  0031CE  0E00               	movlw	0
  1957  0031D0  6EE6               	movwf	postinc1,c
  1958  0031D2  51E4               	movf	(_V+77)& (0+255),w,b
  1959  0031D4  6EE6               	movwf	postinc1,c
  1960  0031D6  0E00               	movlw	0
  1961  0031D8  6EE6               	movwf	postinc1,c
  1962  0031DA  0E6E               	movlw	STR_5& (0+255)
  1963  0031DC  6EE6               	movwf	postinc1,c
  1964  0031DE  0E97               	movlw	_V& (0+255)
  1965  0031E0  0F05               	addlw	5
  1966  0031E2  6EE6               	movwf	postinc1,c
  1967  0031E4  0E06               	movlw	6
  1968  0031E6  6EE6               	movwf	postinc1,c
  1969  0031E8  EC15  F027         	call	_sprintf	;wreg free
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 452:      V.buf[11] = 0;
  1973  0031EC  6BA7               	clrf	(_V+16)& (0+255),b
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;main.c: 453:      wait_lcd_done();
  1977  0031EE  EC84  F02F         	call	_wait_lcd_done	;wreg free
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;main.c: 454:      eaDogM_WriteStringAtPos(V.uart, 0, V.buf);
  1981  0031F2  0E97               	movlw	_V& (0+255)
  1982  0031F4  0F05               	addlw	5
  1983  0031F6  6EE6               	movwf	postinc1,c
  1984  0031F8  0E00               	movlw	0
  1985  0031FA  6EE6               	movwf	postinc1,c
  1986  0031FC  AFED               	btfss	(_V+86)& (0+255),7,b
  1987  0031FE  D002               	goto	u5740
  1988  003200  0E01               	movlw	1
  1989  003202  D001               	goto	u5746
  1990  003204                     u5740:
  1991  003204  0E00               	movlw	0
  1992  003206                     u5746:
  1993  003206  6EE6               	movwf	postinc1,c
  1994  003208  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1995                           
  1996                           ; BSR set to: 59
  1997                           ;main.c: 455:      V.s_state = SEQ_STATE_TRIGGER;
  1998  00320C  0E03               	movlw	3
  1999  00320E  0100               	movlb	0	; () banked
  2000  003210  6F97               	movwf	_V& (0+255),b
  2001  003212                     l8756:
  2002                           
  2003                           ;main.c: 457:     if (V.m_l_state == LINK_STATE_ERROR)
  2004  003212  0E06               	movlw	6
  2005  003214  0100               	movlb	0	; () banked
  2006  003216  1999               	xorwf	(_V+2)& (0+255),w,b
  2007  003218  A4D8               	btfss	status,2,c
  2008  00321A  D036               	goto	l8772
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 458:      V.s_state = SEQ_STATE_ERROR;
  2012  00321C  0E06               	movlw	6
  2013  00321E  6F97               	movwf	_V& (0+255),b
  2014  003220  D033               	goto	l8772
  2015  003222                     l8760:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;main.c: 461:     V.s_state = SEQ_STATE_DONE;
  2019  003222  0E05               	movlw	5
  2020  003224  6F97               	movwf	_V& (0+255),b
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 462:     sprintf(V.buf, " OK #");
  2024  003226  0E88               	movlw	STR_7& (0+255)
  2025  003228  6EE6               	movwf	postinc1,c
  2026  00322A  0E97               	movlw	_V& (0+255)
  2027  00322C  0F05               	addlw	5
  2028  00322E  6EE6               	movwf	postinc1,c
  2029  003230  0E02               	movlw	2
  2030  003232  6EE6               	movwf	postinc1,c
  2031  003234  EC15  F027         	call	_sprintf	;wreg free
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 463:     wait_lcd_done();
  2035  003238  EC84  F02F         	call	_wait_lcd_done	;wreg free
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;main.c: 464:     eaDogM_WriteStringAtPos(V.uart, 11, V.buf);
  2039  00323C  0E97               	movlw	_V& (0+255)
  2040  00323E  0F05               	addlw	5
  2041  003240  6EE6               	movwf	postinc1,c
  2042  003242  0E0B               	movlw	11
  2043  003244  6EE6               	movwf	postinc1,c
  2044  003246  AFED               	btfss	(_V+86)& (0+255),7,b
  2045  003248  D002               	goto	u5760
  2046  00324A  0E01               	movlw	1
  2047  00324C  D001               	goto	u5766
  2048  00324E                     u5760:
  2049  00324E  0E00               	movlw	0
  2050  003250                     u5766:
  2051  003250  6EE6               	movwf	postinc1,c
  2052  003252  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  2053                           
  2054                           ;main.c: 465:     break;
  2055  003256  D018               	goto	l8772
  2056  003258                     l1248:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 467:     V.s_state = SEQ_STATE_INIT;
  2060  003258  6B97               	clrf	_V& (0+255),b
  2061                           
  2062                           ;main.c: 468:     break;
  2063  00325A  D016               	goto	l8772
  2064  00325C                     l8770:
  2065                           
  2066                           ; BSR set to: 0
  2067  00325C  5197               	movf	_V& (0+255),w,b
  2068  00325E  6E47               	movwf	btemp+10,c
  2069  003260  6A48               	clrf	btemp+11,c
  2070                           
  2071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2072                           ; Switch size 1, requested type "simple"
  2073                           ; Number of cases is 1, Range of values is 0 to 0
  2074                           ; switch strategies available:
  2075                           ; Name         Instructions Cycles
  2076                           ; simple_byte            4     3 (average)
  2077                           ;	Chosen strategy is simple_byte
  2078  003262  5048               	movf	btemp+11,w,c
  2079  003264  0A00               	xorlw	0	; case 0
  2080  003266  A4D8               	btfss	status,2,c
  2081  003268  D7F7               	goto	l1248
  2082                           
  2083                           ; BSR set to: 0
  2084                           ; Switch size 1, requested type "simple"
  2085                           ; Number of cases is 5, Range of values is 0 to 6
  2086                           ; switch strategies available:
  2087                           ; Name         Instructions Cycles
  2088                           ; simple_byte           16     9 (average)
  2089                           ;	Chosen strategy is simple_byte
  2090  00326A  5047               	movf	btemp+10,w,c
  2091  00326C  0A00               	xorlw	0	; case 0
  2092  00326E  B4D8               	btfsc	status,2,c
  2093  003270  D79D               	goto	l1242
  2094  003272  0A01               	xorlw	1	; case 1
  2095  003274  B4D8               	btfsc	status,2,c
  2096  003276  D79F               	goto	l8744
  2097  003278  0A02               	xorlw	2	; case 3
  2098  00327A  B4D8               	btfsc	status,2,c
  2099  00327C  D7D2               	goto	l8760
  2100  00327E  0A06               	xorlw	6	; case 5
  2101  003280  B4D8               	btfsc	status,2,c
  2102  003282  D7EA               	goto	l1248
  2103  003284  0A03               	xorlw	3	; case 6
  2104  003286  D7E8               	goto	l1248
  2105  003288                     l8772:
  2106                           
  2107                           ;main.c: 474:    sprintf(V.buf, " LOG MODE      #");
  2108  003288  0E3D               	movlw	STR_12& (0+255)
  2109  00328A  6EE6               	movwf	postinc1,c
  2110  00328C  0E97               	movlw	_V& (0+255)
  2111  00328E  0F05               	addlw	5
  2112  003290  6EE6               	movwf	postinc1,c
  2113  003292  0E02               	movlw	2
  2114  003294  6EE6               	movwf	postinc1,c
  2115  003296  EC15  F027         	call	_sprintf	;wreg free
  2116  00329A  D77B               	goto	l8734
  2117  00329C                     l1252:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 481:    V.ui_state = UI_STATE_INIT;
  2121  00329C  6B98               	clrf	(_V+1)& (0+255),b
  2122                           
  2123                           ;main.c: 482:    break;
  2124  00329E  D014               	goto	l1253
  2125  0032A0                     l8782:
  2126  0032A0  0100               	movlb	0	; () banked
  2127  0032A2  5198               	movf	(_V+1)& (0+255),w,b
  2128  0032A4  6E47               	movwf	btemp+10,c
  2129  0032A6  6A48               	clrf	btemp+11,c
  2130                           
  2131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 1, Range of values is 0 to 0
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte            4     3 (average)
  2137                           ;	Chosen strategy is simple_byte
  2138  0032A8  5048               	movf	btemp+11,w,c
  2139  0032AA  0A00               	xorlw	0	; case 0
  2140  0032AC  A4D8               	btfss	status,2,c
  2141  0032AE  D7F6               	goto	l1252
  2142                           
  2143                           ; BSR set to: 0
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 4, Range of values is 0 to 4
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte           13     7 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150  0032B0  5047               	movf	btemp+10,w,c
  2151  0032B2  0A00               	xorlw	0	; case 0
  2152  0032B4  B4D8               	btfsc	status,2,c
  2153  0032B6  D619               	goto	l8624
  2154  0032B8  0A01               	xorlw	1	; case 1
  2155  0032BA  B4D8               	btfsc	status,2,c
  2156  0032BC  D735               	goto	l8726
  2157  0032BE  0A02               	xorlw	2	; case 3
  2158  0032C0  B4D8               	btfsc	status,2,c
  2159  0032C2  D7CC               	goto	l8770
  2160  0032C4  0A07               	xorlw	7	; case 4
  2161  0032C6  D7EA               	goto	l1252
  2162  0032C8                     l1253:
  2163  0032C8  82BE               	bsf	16318,1,c	;volatile
  2164                           
  2165                           ;main.c: 485:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2166  0032CA  0100               	movlb	0	; () banked
  2167  0032CC  31EC               	rrcf	(_V+85)& (0+255),w,b
  2168  0032CE  32E8               	rrcf	wreg,f,c
  2169  0032D0  32E8               	rrcf	wreg,f,c
  2170  0032D2  0B0F               	andlw	15
  2171  0032D4  6EE6               	movwf	postinc1,c
  2172  0032D6  0E00               	movlw	0
  2173  0032D8  6EE6               	movwf	postinc1,c
  2174  0032DA  51ED               	movf	(_V+86)& (0+255),w,b
  2175  0032DC  0B0F               	andlw	15
  2176  0032DE  6EE6               	movwf	postinc1,c
  2177  0032E0  0E00               	movlw	0
  2178  0032E2  6EE6               	movwf	postinc1,c
  2179  0032E4  519B               	movf	(_V+4)& (0+255),w,b
  2180  0032E6  6EE6               	movwf	postinc1,c
  2181  0032E8  0E00               	movlw	0
  2182  0032EA  6EE6               	movwf	postinc1,c
  2183  0032EC  519A               	movf	(_V+3)& (0+255),w,b
  2184  0032EE  6EE6               	movwf	postinc1,c
  2185  0032F0  0E00               	movlw	0
  2186  0032F2  6EE6               	movwf	postinc1,c
  2187  0032F4  0E01               	movlw	STR_13& (0+255)
  2188  0032F6  6EE6               	movwf	postinc1,c
  2189  0032F8  0E97               	movlw	_V& (0+255)
  2190  0032FA  0F05               	addlw	5
  2191  0032FC  6EE6               	movwf	postinc1,c
  2192  0032FE  0E0A               	movlw	10
  2193  003300  6EE6               	movwf	postinc1,c
  2194  003302  EC15  F027         	call	_sprintf	;wreg free
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 486:   V.buf[16] = 0;
  2198  003306  6BAC               	clrf	(_V+21)& (0+255),b
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;main.c: 487:   wait_lcd_done();
  2202  003308  EC84  F02F         	call	_wait_lcd_done	;wreg free
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 488:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  2206  00330C  0E97               	movlw	_V& (0+255)
  2207  00330E  0F05               	addlw	5
  2208  003310  6EE6               	movwf	postinc1,c
  2209  003312  0E00               	movlw	0
  2210  003314  6EE6               	movwf	postinc1,c
  2211  003316  0E01               	movlw	1
  2212  003318  6EE6               	movwf	postinc1,c
  2213  00331A  ECF3  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  2214                           
  2215                           ; BSR set to: 59
  2216  00331E  92BE               	bcf	16318,1,c	;volatile
  2217  003320  D7BF               	goto	l8782
  2218  003322                     __end_of_main:
  2219                           	opt callstack 0
  2220                           
  2221 ;; *************** function _t_protocol *****************
  2222 ;; Defined at:
  2223 ;;		line 312 in file "gemsecs.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  t_link          1  [STACK] PTR enum E16164
  2226 ;;		 -> V(87), 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  rxData          1  [STACK] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1  [STACK] enum E16902
  2231 ;; Registers used:
  2232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    5
  2245 ;; This function calls:
  2246 ;;		_StartTimer
  2247 ;;		_TimerDone
  2248 ;;		_UART1_Read
  2249 ;;		_UART1_Write
  2250 ;;		_UART1_is_rx_ready
  2251 ;;		_UART1_put_buffer
  2252 ;;		_WaitMs
  2253 ;;		_secs_II_message
  2254 ;;		_secs_send
  2255 ;; This function is called by:
  2256 ;;		_main
  2257 ;; This function uses a reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text1
  2261  003BCE                     __ptext1:
  2262                           	opt callstack 0
  2263  003BCE                     _t_protocol:
  2264                           	opt callstack 0
  2265                           
  2266                           ; BSR set to: 59
  2267                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2268  003BCE  52E6               	movf	postinc1,f,c
  2269                           
  2270                           ;gemsecs.c: 312: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 313: {;gemsecs.
      +                          c: 314:  uint8_t rxData;;gemsecs.c: 315:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          316:  static response_type block;;gemsecs.c: 318:  switch (*t_link) {
  2271                           
  2272                           ;incstack = 0
  2273  003BD0  D11E               	goto	l8380
  2274  003BD2                     l1625:
  2275                           
  2276                           ;gemsecs.c: 320:   V.error = LINK_ERROR_NONE;
  2277  003BD2  0100               	movlb	0	; () banked
  2278  003BD4  6BE6               	clrf	(_V+79)& (0+255),b
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;gemsecs.c: 321:   retry = 3;
  2282  003BD6  0E03               	movlw	3
  2283  003BD8  6E2E               	movwf	t_protocol@retry,c
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;gemsecs.c: 322:   UART1_Write(0x05);
  2287  003BDA  0E05               	movlw	5
  2288  003BDC  6EE6               	movwf	postinc1,c
  2289  003BDE  EC26  F02C         	call	_UART1_Write	;wreg free
  2290                           
  2291                           ; BSR set to: 57
  2292                           ;gemsecs.c: 323:   StartTimer(TMR_T2, 2000);
  2293  003BE2  0ED0               	movlw	208
  2294  003BE4  6EE6               	movwf	postinc1,c
  2295  003BE6  0E07               	movlw	7
  2296  003BE8  6EE6               	movwf	postinc1,c
  2297  003BEA  0E02               	movlw	2
  2298  003BEC  6EE6               	movwf	postinc1,c
  2299  003BEE  ECA3  F02C         	call	_StartTimer	;wreg free
  2300                           
  2301                           ;gemsecs.c: 324:   *t_link = LINK_STATE_ENQ;
  2302                           ;stkvar	_t_link @ sp[(-1)+-1]
  2303  003BF2  0EFE               	movlw	-2
  2304  003BF4  50E3               	movf	plusw1,w,c
  2305  003BF6  6ED9               	movwf	fsr2l,c
  2306  003BF8  6ADA               	clrf	fsr2h,c
  2307  003BFA  0E01               	movlw	1
  2308  003BFC  6EDF               	movwf	indf2,c
  2309                           
  2310                           ;gemsecs.c: 326:   WaitMs(5);
  2311  003BFE  0E05               	movlw	5
  2312  003C00  6EE6               	movwf	postinc1,c
  2313  003C02  0E00               	movlw	0
  2314  003C04  6EE6               	movwf	postinc1,c
  2315  003C06  EC4A  F02D         	call	_WaitMs	;wreg free
  2316                           
  2317                           ;gemsecs.c: 327:   UART1_put_buffer(0x04);
  2318  003C0A  0E04               	movlw	4
  2319  003C0C  6EE6               	movwf	postinc1,c
  2320  003C0E  EC35  F02D         	call	_UART1_put_buffer	;wreg free
  2321                           
  2322                           ;gemsecs.c: 329:   break;
  2323  003C12  D11E               	goto	l8382
  2324  003C14                     l8292:
  2325                           
  2326                           ;gemsecs.c: 331:   if (TimerDone(TMR_T2)) {
  2327  003C14  0E02               	movlw	2
  2328  003C16  6EE6               	movwf	postinc1,c
  2329  003C18  ECEF  F02E         	call	_TimerDone	;wreg free
  2330  003C1C  503D               	movf	btemp,w,c
  2331  003C1E  B4D8               	btfsc	status,2,c
  2332  003C20  D01A               	goto	l8302
  2333                           
  2334                           ;gemsecs.c: 332:    if (!retry--) {
  2335  003C22  062E               	decf	t_protocol@retry,f,c
  2336  003C24  282E               	incf	t_protocol@retry,w,c
  2337  003C26  A4D8               	btfss	status,2,c
  2338  003C28  D00D               	goto	l8300
  2339                           
  2340                           ;gemsecs.c: 333:     V.error = LINK_ERROR_T2;
  2341  003C2A  0E02               	movlw	2
  2342  003C2C  0100               	movlb	0	; () banked
  2343  003C2E  6FE6               	movwf	(_V+79)& (0+255),b
  2344                           
  2345                           ;gemsecs.c: 334:     V.failed_send = 1;
  2346  003C30  51EC               	movf	(_V+85)& (0+255),w,b
  2347  003C32  0B87               	andlw	-121
  2348  003C34  0908               	iorlw	8
  2349  003C36  6FEC               	movwf	(_V+85)& (0+255),b
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;gemsecs.c: 335:     *t_link = LINK_STATE_NAK;
  2353                           ;stkvar	_t_link @ sp[(-1)+-1]
  2354  003C38  0EFE               	movlw	-2
  2355  003C3A  50E3               	movf	plusw1,w,c
  2356  003C3C  6ED9               	movwf	fsr2l,c
  2357  003C3E  6ADA               	clrf	fsr2h,c
  2358  003C40  0E05               	movlw	5
  2359  003C42  D0E3               	goto	L2
  2360  003C44                     l8300:
  2361                           
  2362                           ;gemsecs.c: 337:     StartTimer(TMR_T2, 2000);
  2363  003C44  0ED0               	movlw	208
  2364  003C46  6EE6               	movwf	postinc1,c
  2365  003C48  0E07               	movlw	7
  2366  003C4A  6EE6               	movwf	postinc1,c
  2367  003C4C  0E02               	movlw	2
  2368  003C4E  6EE6               	movwf	postinc1,c
  2369  003C50  ECA3  F02C         	call	_StartTimer	;wreg free
  2370  003C54  D0FD               	goto	l8382
  2371  003C56                     l8302:
  2372                           
  2373                           ;gemsecs.c: 340:    if (UART1_is_rx_ready()) {
  2374  003C56  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  2375  003C5A  503D               	movf	btemp,w,c
  2376  003C5C  B4D8               	btfsc	status,2,c
  2377  003C5E  D0F8               	goto	l8382
  2378                           
  2379                           ;gemsecs.c: 341:     rxData = UART1_Read();
  2380  003C60  EC64  F02C         	call	_UART1_Read	;wreg free
  2381                           
  2382                           ;stkvar	_rxData @ sp[(-1)+0]
  2383  003C64  0EFF               	movlw	-1
  2384  003C66  0060  F0F7  FFE3   	movff	btemp,plusw1
  2385                           
  2386                           ; BSR set to: 57
  2387                           ;gemsecs.c: 342:     if (rxData == 0x04) {
  2388                           ;stkvar	_rxData @ sp[(-1)+0]
  2389  003C6C  0EFF               	movlw	-1
  2390  003C6E  006F FF8C  F03D    	movff	plusw1,btemp
  2391  003C74  0E04               	movlw	4
  2392  003C76  183D               	xorwf	btemp,w,c
  2393  003C78  A4D8               	btfss	status,2,c
  2394  003C7A  D00E               	goto	l8312
  2395                           
  2396                           ; BSR set to: 57
  2397                           ;gemsecs.c: 343:      StartTimer(TMR_T3, 5000);
  2398  003C7C  0E88               	movlw	136
  2399  003C7E  6EE6               	movwf	postinc1,c
  2400  003C80  0E13               	movlw	19
  2401  003C82  6EE6               	movwf	postinc1,c
  2402  003C84  0E03               	movlw	3
  2403  003C86  6EE6               	movwf	postinc1,c
  2404  003C88  ECA3  F02C         	call	_StartTimer	;wreg free
  2405                           
  2406                           ;gemsecs.c: 344:      *t_link = LINK_STATE_EOT;
  2407                           ;stkvar	_t_link @ sp[(-1)+-1]
  2408  003C8C  0EFE               	movlw	-2
  2409  003C8E  50E3               	movf	plusw1,w,c
  2410  003C90  6ED9               	movwf	fsr2l,c
  2411  003C92  6ADA               	clrf	fsr2h,c
  2412  003C94  0E02               	movlw	2
  2413  003C96  6EDF               	movwf	indf2,c
  2414  003C98                     l8312:
  2415                           
  2416                           ;gemsecs.c: 346:     if (rxData == 0x05) {
  2417                           ;stkvar	_rxData @ sp[(-1)+0]
  2418  003C98  0EFF               	movlw	-1
  2419  003C9A  006F FF8C  F03D    	movff	plusw1,btemp
  2420  003CA0  0E05               	movlw	5
  2421  003CA2  183D               	xorwf	btemp,w,c
  2422  003CA4  A4D8               	btfss	status,2,c
  2423  003CA6  D0D4               	goto	l8382
  2424                           
  2425                           ;gemsecs.c: 347:      UART1_put_buffer(0x04);
  2426  003CA8  0E04               	movlw	4
  2427  003CAA  6EE6               	movwf	postinc1,c
  2428  003CAC  EC35  F02D         	call	_UART1_put_buffer	;wreg free
  2429  003CB0                     l8316:
  2430                           
  2431                           ;gemsecs.c: 348:      *t_link = LINK_STATE_DONE;
  2432                           ;stkvar	_t_link @ sp[(-1)+-1]
  2433  003CB0  0EFE               	movlw	-2
  2434  003CB2  50E3               	movf	plusw1,w,c
  2435  003CB4  6ED9               	movwf	fsr2l,c
  2436  003CB6  6ADA               	clrf	fsr2h,c
  2437  003CB8  0E04               	movlw	4
  2438  003CBA  D0A7               	goto	L2
  2439  003CBC                     l8318:
  2440                           
  2441                           ;gemsecs.c: 354:   if (!requeue)
  2442  003CBC  502D               	movf	t_protocol@requeue,w,c
  2443  003CBE  A4D8               	btfss	status,2,c
  2444  003CC0  D010               	goto	l8322
  2445                           
  2446                           ;gemsecs.c: 355:    block = secs_II_message(V.stream, V.function);
  2447  003CC2  0100               	movlb	0	; () banked
  2448  003CC4  51E5               	movf	(_V+78)& (0+255),w,b
  2449  003CC6  6EE6               	movwf	postinc1,c
  2450  003CC8  51E4               	movf	(_V+77)& (0+255),w,b
  2451  003CCA  6EE6               	movwf	postinc1,c
  2452  003CCC  EC71  F020         	call	_secs_II_message	;wreg free
  2453  003CD0  EE20  F085         	lfsr	2,t_protocol@block
  2454  003CD4  0E06               	movlw	6
  2455  003CD6                     u5181:
  2456  003CD6  52E5               	movf	postdec1,f,c
  2457  003CD8  006F FF9F FFDB     	movff	indf1,plusw2
  2458  003CDE  06E8               	decf	wreg,f,c
  2459  003CE0  E2FA               	bc	u5181
  2460  003CE2                     l8322:
  2461                           
  2462                           ;gemsecs.c: 357:   if (V.abort == LINK_ERROR_ABORT) {
  2463  003CE2  0E07               	movlw	7
  2464  003CE4  0100               	movlb	0	; () banked
  2465  003CE6  19E7               	xorwf	(_V+80)& (0+255),w,b
  2466  003CE8  A4D8               	btfss	status,2,c
  2467  003CEA  D017               	goto	l8330
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;gemsecs.c: 358:    secs_send((uint8_t*) block.header, block.length, 0);
  2471  003CEC  0E00               	movlw	0
  2472  003CEE  6EE6               	movwf	postinc1,c
  2473  003CF0  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2474  003CF2  6EE6               	movwf	postinc1,c
  2475  003CF4  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2476  003CFA  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2477  003D00  ECB2  F022         	call	_secs_send	;wreg free
  2478                           
  2479                           ;gemsecs.c: 359:    V.failed_send = 2;
  2480  003D04  0100               	movlb	0	; () banked
  2481  003D06  51EC               	movf	(_V+85)& (0+255),w,b
  2482  003D08  0B87               	andlw	-121
  2483  003D0A  0910               	iorlw	16
  2484  003D0C  6FEC               	movwf	(_V+85)& (0+255),b
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;gemsecs.c: 360:    *t_link = LINK_STATE_ERROR;
  2488                           ;stkvar	_t_link @ sp[(-1)+-1]
  2489  003D0E  0EFE               	movlw	-2
  2490  003D10  50E3               	movf	plusw1,w,c
  2491  003D12  6ED9               	movwf	fsr2l,c
  2492  003D14  6ADA               	clrf	fsr2h,c
  2493  003D16  0E06               	movlw	6
  2494  003D18  D02C               	goto	L3
  2495  003D1A                     l8330:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;gemsecs.c: 362:    if (!requeue) {
  2499  003D1A  502D               	movf	t_protocol@requeue,w,c
  2500  003D1C  A4D8               	btfss	status,2,c
  2501  003D1E  D012               	goto	l1639
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;gemsecs.c: 363:     secs_send((uint8_t*) block.header, block.length, 0);
  2505  003D20  0E00               	movlw	0
  2506  003D22  6EE6               	movwf	postinc1,c
  2507  003D24  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2508  003D26  6EE6               	movwf	postinc1,c
  2509  003D28  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2510  003D2E  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2511  003D34  ECB2  F022         	call	_secs_send	;wreg free
  2512                           
  2513                           ;gemsecs.c: 364:     if (V.queue)
  2514  003D38  0100               	movlb	0	; () banked
  2515  003D3A  A9ED               	btfss	(_V+86)& (0+255),4,b
  2516  003D3C  D011               	goto	l8340
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;gemsecs.c: 365:      requeue = 1;
  2520  003D3E  0E01               	movlw	1
  2521  003D40  6E2D               	movwf	t_protocol@requeue,c
  2522  003D42  D00E               	goto	l8340
  2523  003D44                     l1639:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;gemsecs.c: 367:     requeue = 0;
  2527  003D44  6A2D               	clrf	t_protocol@requeue,c
  2528                           
  2529                           ;gemsecs.c: 368:     V.queue = 0;
  2530  003D46  99ED               	bcf	(_V+86)& (0+255),4,b
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;gemsecs.c: 369:     secs_send((uint8_t*) block.reply, block.reply_length, 0);
  2534  003D48  0E00               	movlw	0
  2535  003D4A  6EE6               	movwf	postinc1,c
  2536  003D4C  518A               	movf	(t_protocol@block+5)& (0+255),w,b
  2537  003D4E  6EE6               	movwf	postinc1,c
  2538  003D50  0060  F223  FFE6   	movff	t_protocol@block+3,postinc1
  2539  003D56  0060  F227  FFE6   	movff	t_protocol@block+4,postinc1
  2540  003D5C  ECB2  F022         	call	_secs_send	;wreg free
  2541  003D60                     l8340:
  2542                           
  2543                           ;gemsecs.c: 371:    if (V.error == LINK_ERROR_NONE) {
  2544  003D60  0100               	movlb	0	; () banked
  2545  003D62  51E6               	movf	(_V+79)& (0+255),w,b
  2546  003D64  A4D8               	btfss	status,2,c
  2547  003D66  D007               	goto	l8344
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;gemsecs.c: 372:     *t_link = LINK_STATE_ACK;
  2551                           ;stkvar	_t_link @ sp[(-1)+-1]
  2552  003D68  0EFE               	movlw	-2
  2553  003D6A  50E3               	movf	plusw1,w,c
  2554  003D6C  6ED9               	movwf	fsr2l,c
  2555  003D6E  6ADA               	clrf	fsr2h,c
  2556  003D70  0E03               	movlw	3
  2557  003D72                     L3:
  2558  003D72  6EDF               	movwf	indf2,c
  2559                           
  2560                           ;gemsecs.c: 373:    } else {
  2561  003D74  D004               	goto	l8348
  2562  003D76                     l8344:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;gemsecs.c: 374:     V.failed_send = 3;
  2566  003D76  51EC               	movf	(_V+85)& (0+255),w,b
  2567  003D78  0B87               	andlw	-121
  2568  003D7A  0918               	iorlw	24
  2569  003D7C  D7C7               	goto	L4
  2570  003D7E                     l8348:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;gemsecs.c: 379:   WaitMs(5);
  2574  003D7E  0E05               	movlw	5
  2575  003D80  6EE6               	movwf	postinc1,c
  2576  003D82  0E00               	movlw	0
  2577  003D84  6EE6               	movwf	postinc1,c
  2578  003D86  EC4A  F02D         	call	_WaitMs	;wreg free
  2579                           
  2580                           ;gemsecs.c: 380:   UART1_put_buffer(0x06);
  2581  003D8A  0E06               	movlw	6
  2582  003D8C  6EE6               	movwf	postinc1,c
  2583  003D8E  EC35  F02D         	call	_UART1_put_buffer	;wreg free
  2584                           
  2585                           ;gemsecs.c: 382:   break;
  2586  003D92  D05E               	goto	l8382
  2587  003D94                     l8352:
  2588                           
  2589                           ;gemsecs.c: 384:   if (TimerDone(TMR_T3)) {
  2590  003D94  0E03               	movlw	3
  2591  003D96  6EE6               	movwf	postinc1,c
  2592  003D98  ECEF  F02E         	call	_TimerDone	;wreg free
  2593  003D9C  503D               	movf	btemp,w,c
  2594  003D9E  B4D8               	btfsc	status,2,c
  2595  003DA0  D007               	goto	l8358
  2596                           
  2597                           ;gemsecs.c: 385:    V.error = LINK_ERROR_T3;
  2598  003DA2  0E03               	movlw	3
  2599  003DA4  0100               	movlb	0	; () banked
  2600  003DA6  6FE6               	movwf	(_V+79)& (0+255),b
  2601                           
  2602                           ;gemsecs.c: 386:    V.failed_send = 4;
  2603  003DA8  51EC               	movf	(_V+85)& (0+255),w,b
  2604  003DAA  0B87               	andlw	-121
  2605  003DAC  0920               	iorlw	32
  2606  003DAE  D743               	goto	L5
  2607  003DB0                     l8358:
  2608                           
  2609                           ;gemsecs.c: 389:    if (UART1_is_rx_ready()) {
  2610  003DB0  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  2611  003DB4  503D               	movf	btemp,w,c
  2612  003DB6  B4D8               	btfsc	status,2,c
  2613  003DB8  D04B               	goto	l8382
  2614                           
  2615                           ;gemsecs.c: 390:     rxData = UART1_Read();
  2616  003DBA  EC64  F02C         	call	_UART1_Read	;wreg free
  2617                           
  2618                           ;stkvar	_rxData @ sp[(-1)+0]
  2619  003DBE  0EFF               	movlw	-1
  2620  003DC0  0060  F0F7  FFE3   	movff	btemp,plusw1
  2621                           
  2622                           ; BSR set to: 57
  2623                           ;gemsecs.c: 391:     if (rxData == 0x06) {
  2624                           ;stkvar	_rxData @ sp[(-1)+0]
  2625  003DC6  0EFF               	movlw	-1
  2626  003DC8  006F FF8C  F03D    	movff	plusw1,btemp
  2627  003DCE  0E06               	movlw	6
  2628  003DD0  183D               	xorwf	btemp,w,c
  2629  003DD2  A4D8               	btfss	status,2,c
  2630  003DD4  D03D               	goto	l8382
  2631                           
  2632                           ; BSR set to: 57
  2633                           ;gemsecs.c: 392:      V.failed_send = 0;
  2634  003DD6  0E87               	movlw	-121
  2635  003DD8  0100               	movlb	0	; () banked
  2636  003DDA  17EC               	andwf	(_V+85)& (0+255),f,b
  2637  003DDC  D769               	goto	l8316
  2638  003DDE                     l8368:
  2639                           
  2640                           ;gemsecs.c: 399:   *t_link = LINK_STATE_ERROR;
  2641                           ;stkvar	_t_link @ sp[(-1)+-1]
  2642  003DDE  0EFE               	movlw	-2
  2643  003DE0  50E3               	movf	plusw1,w,c
  2644  003DE2  6ED9               	movwf	fsr2l,c
  2645  003DE4  6ADA               	clrf	fsr2h,c
  2646  003DE6  0E06               	movlw	6
  2647  003DE8  6EDF               	movwf	indf2,c
  2648                           
  2649                           ;gemsecs.c: 400:   while ((uart1RxCount)) {
  2650  003DEA  D002               	goto	l8372
  2651  003DEC                     l8370:
  2652                           
  2653                           ;gemsecs.c: 401:    UART1_Read();
  2654  003DEC  EC64  F02C         	call	_UART1_Read	;wreg free
  2655  003DF0                     l8372:
  2656                           
  2657                           ;gemsecs.c: 400:   while ((uart1RxCount)) {
  2658  003DF0  5037               	movf	_uart1RxCount,w,c	;volatile
  2659  003DF2  B4D8               	btfsc	status,2,c
  2660  003DF4  D02D               	goto	l8382
  2661  003DF6  D7FA               	goto	l8370
  2662  003DF8                     l8374:
  2663                           
  2664                           ;gemsecs.c: 407:   V.failed_send = 0;
  2665  003DF8  0E87               	movlw	-121
  2666  003DFA  0100               	movlb	0	; () banked
  2667  003DFC  17EC               	andwf	(_V+85)& (0+255),f,b
  2668                           
  2669                           ;gemsecs.c: 408:   break;
  2670  003DFE  D028               	goto	l8382
  2671  003E00                     l8376:
  2672                           
  2673                           ;gemsecs.c: 410:   *t_link = LINK_STATE_IDLE;
  2674                           ;stkvar	_t_link @ sp[(-1)+-1]
  2675  003E00  0EFE               	movlw	-2
  2676  003E02  50E3               	movf	plusw1,w,c
  2677  003E04  6ED9               	movwf	fsr2l,c
  2678  003E06  6ADA               	clrf	fsr2h,c
  2679  003E08  0E00               	movlw	0
  2680  003E0A                     L2:
  2681  003E0A  6EDF               	movwf	indf2,c
  2682                           
  2683                           ;gemsecs.c: 412:   break;
  2684  003E0C  D021               	goto	l8382
  2685  003E0E                     l8380:
  2686                           
  2687                           ;stkvar	_t_link @ sp[(-1)+-1]
  2688  003E0E  0EFE               	movlw	-2
  2689  003E10  50E3               	movf	plusw1,w,c
  2690  003E12  6ED9               	movwf	fsr2l,c
  2691  003E14  6ADA               	clrf	fsr2h,c
  2692  003E16  50DF               	movf	indf2,w,c
  2693  003E18  6E47               	movwf	btemp+10,c
  2694  003E1A  6A48               	clrf	btemp+11,c
  2695                           
  2696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2697                           ; Switch size 1, requested type "simple"
  2698                           ; Number of cases is 1, Range of values is 0 to 0
  2699                           ; switch strategies available:
  2700                           ; Name         Instructions Cycles
  2701                           ; simple_byte            4     3 (average)
  2702                           ;	Chosen strategy is simple_byte
  2703  003E1C  5048               	movf	btemp+11,w,c
  2704  003E1E  0A00               	xorlw	0	; case 0
  2705  003E20  A4D8               	btfss	status,2,c
  2706  003E22  D7EE               	goto	l8376
  2707                           
  2708                           ; Switch size 1, requested type "simple"
  2709                           ; Number of cases is 7, Range of values is 0 to 6
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte           22    12 (average)
  2713                           ;	Chosen strategy is simple_byte
  2714  003E24  5047               	movf	btemp+10,w,c
  2715  003E26  0A00               	xorlw	0	; case 0
  2716  003E28  B4D8               	btfsc	status,2,c
  2717  003E2A  D6D3               	goto	l1625
  2718  003E2C  0A01               	xorlw	1	; case 1
  2719  003E2E  B4D8               	btfsc	status,2,c
  2720  003E30  D6F1               	goto	l8292
  2721  003E32  0A03               	xorlw	3	; case 2
  2722  003E34  B4D8               	btfsc	status,2,c
  2723  003E36  D742               	goto	l8318
  2724  003E38  0A01               	xorlw	1	; case 3
  2725  003E3A  B4D8               	btfsc	status,2,c
  2726  003E3C  D7AB               	goto	l8352
  2727  003E3E  0A07               	xorlw	7	; case 4
  2728  003E40  B4D8               	btfsc	status,2,c
  2729  003E42  D7DA               	goto	l8374
  2730  003E44  0A01               	xorlw	1	; case 5
  2731  003E46  B4D8               	btfsc	status,2,c
  2732  003E48  D7CA               	goto	l8368
  2733  003E4A  0A03               	xorlw	3	; case 6
  2734  003E4C  A4D8               	btfss	status,2,c
  2735  003E4E  D7D8               	goto	l8376
  2736  003E50                     l8382:
  2737                           
  2738                           ;gemsecs.c: 415:  return *t_link;
  2739                           ;stkvar	_t_link @ sp[(-1)+-1]
  2740  003E50  0EFE               	movlw	-2
  2741  003E52  50E3               	movf	plusw1,w,c
  2742  003E54  6ED9               	movwf	fsr2l,c
  2743  003E56  6ADA               	clrf	fsr2h,c
  2744  003E58  50DF               	movf	indf2,w,c
  2745  003E5A  6E3D               	movwf	btemp,c
  2746                           
  2747                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2748  003E5C  52E5               	movf	postdec1,f,c
  2749  003E5E  52E5               	movf	postdec1,f,c
  2750  003E60  0012               	return		;funcret
  2751  003E62                     __end_of_t_protocol:
  2752                           	opt callstack 0
  2753                           
  2754 ;; *************** function _secs_II_message *****************
  2755 ;; Defined at:
  2756 ;;		line 459 in file "gemsecs.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  stream          1  [STACK] unsigned char 
  2759 ;;  function        1  [STACK] unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  7  [STACK] struct response_type
  2764 ;; Registers used:
  2765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  2766 ;; Tracked objects:
  2767 ;;		On entry : 3F/0
  2768 ;;		On exit  : 3E/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    3
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_t_protocol
  2782 ;; This function uses a reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text2
  2786  0040E2                     __ptext2:
  2787                           	opt callstack 0
  2788  0040E2                     _secs_II_message:
  2789                           	opt callstack 0
  2790                           
  2791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  2792  0040E2  0E05               	movlw	5
  2793  0040E4  26E1               	addwf	fsr1l,f,c
  2794  0040E6  0E00               	movlw	0
  2795  0040E8  22E2               	addwfc	fsr1h,f,c
  2796                           
  2797                           ;gemsecs.c: 459: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 460: {;gemsecs.c: 461:  static response_type block;;gemsecs.c: 463:  V.abort = LINK_
      +                          ERROR_NONE;
  2798                           
  2799                           ;incstack = 0
  2800  0040EA  0100               	movlb	0	; () banked
  2801  0040EC  6BE7               	clrf	(_V+80)& (0+255),b
  2802                           
  2803                           ;gemsecs.c: 464:  V.queue = 0;
  2804  0040EE  99ED               	bcf	(_V+86)& (0+255),4,b
  2805                           
  2806                           ;gemsecs.c: 465:  block.respond = 0;
  2807  0040F0  9007               	bcf	secs_II_message@block+6,0,c
  2808                           
  2809                           ;gemsecs.c: 467:  switch (stream) {
  2810  0040F2  D0F3               	goto	l8018
  2811  0040F4                     l7886:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;gemsecs.c: 471:    block.header = (uint8_t*) & H12[0];
  2815  0040F4  0E5F               	movlw	low _H12
  2816  0040F6  6E01               	movwf	secs_II_message@block,c
  2817  0040F8  0E01               	movlw	high _H12
  2818  0040FA  6E02               	movwf	secs_II_message@block+1,c
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;gemsecs.c: 472:    block.length = sizeof(header12);
  2822  0040FC  0E0F               	movlw	15
  2823  0040FE  6E03               	movwf	secs_II_message@block+2,c
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;gemsecs.c: 473:    H12[0].block.block.systemb = V.systemb;
  2827  004100  C0E0  F163         	movff	_V+73,_H12+4
  2828  004104  C0E1  F164         	movff	_V+74,_H12+5
  2829  004108  C0E2  F165         	movff	_V+75,_H12+6
  2830  00410C  C0E3  F166         	movff	_V+76,_H12+7
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;gemsecs.c: 474:    H10[0].block.block.systemb = V.systemb;
  2834  004110  C0E0  F102         	movff	_V+73,_H10+2
  2835  004114  C0E1  F103         	movff	_V+74,_H10+3
  2836  004118  C0E2  F104         	movff	_V+75,_H10+4
  2837  00411C  C0E3  F105         	movff	_V+76,_H10+5
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;gemsecs.c: 475:    block.respond = 1;
  2841  004120  8007               	bsf	secs_II_message@block+6,0,c
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;gemsecs.c: 476:    block.reply = (uint8_t*) & H10[0];
  2845  004122  0E00               	movlw	low _H10
  2846  004124  6E04               	movwf	secs_II_message@block+3,c
  2847  004126  0E01               	movlw	high _H10
  2848  004128  6E05               	movwf	secs_II_message@block+4,c
  2849                           
  2850                           ;gemsecs.c: 477:    block.reply_length = sizeof(header10);
  2851  00412A  0E0D               	movlw	13
  2852  00412C                     L6:
  2853  00412C  6E06               	movwf	secs_II_message@block+5,c
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;gemsecs.c: 478:    V.queue = 1;
  2857  00412E  89ED               	bsf	(_V+86)& (0+255),4,b
  2858                           
  2859                           ;gemsecs.c: 479:    break;
  2860  004130  D0ED               	goto	l8020
  2861  004132                     l7900:
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;gemsecs.c: 481:    block.header = (uint8_t*) & H14[0];
  2865  004132  0EAC               	movlw	low _H14
  2866  004134  6E01               	movwf	secs_II_message@block,c
  2867  004136  0E01               	movlw	high _H14
  2868  004138  6E02               	movwf	secs_II_message@block+1,c
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;gemsecs.c: 482:    block.length = sizeof(header14);
  2872  00413A  0E11               	movlw	17
  2873  00413C  6E03               	movwf	secs_II_message@block+2,c
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;gemsecs.c: 483:    H14[0].block.block.systemb = V.systemb;
  2877  00413E  C0E0  F1B2         	movff	_V+73,_H14+6
  2878  004142  C0E1  F1B3         	movff	_V+74,_H14+7
  2879  004146  C0E2  F1B4         	movff	_V+75,_H14+8
  2880  00414A  C0E3  F1B5         	movff	_V+76,_H14+9
  2881                           
  2882                           ;gemsecs.c: 484:    break;
  2883  00414E  D0DE               	goto	l8020
  2884  004150                     l7906:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;gemsecs.c: 486:    block.header = (uint8_t*) & H17[0];
  2888  004150  0E98               	movlw	low _H17
  2889  004152  6E01               	movwf	secs_II_message@block,c
  2890  004154  0E01               	movlw	high _H17
  2891  004156  6E02               	movwf	secs_II_message@block+1,c
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;gemsecs.c: 487:    block.length = sizeof(header17);
  2895  004158  0E14               	movlw	20
  2896  00415A  6E03               	movwf	secs_II_message@block+2,c
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;gemsecs.c: 488:    H17[0].block.block.systemb = V.systemb;
  2900  00415C  C0E0  F1A1         	movff	_V+73,_H17+9
  2901  004160  C0E1  F1A2         	movff	_V+74,_H17+10
  2902  004164  C0E2  F1A3         	movff	_V+75,_H17+11
  2903  004168  C0E3  F1A4         	movff	_V+76,_H17+12
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;gemsecs.c: 489:    H12[1].block.block.systemb = V.systemb;
  2907  00416C  C0E0  F172         	movff	_V+73,_H12+19
  2908  004170  C0E1  F173         	movff	_V+74,_H12+20
  2909  004174  C0E2  F174         	movff	_V+75,_H12+21
  2910  004178  C0E3  F175         	movff	_V+76,_H12+22
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;gemsecs.c: 490:    block.respond = 1;
  2914  00417C  8007               	bsf	secs_II_message@block+6,0,c
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;gemsecs.c: 491:    block.reply = (uint8_t*) & H12[1];
  2918  00417E  0E6E               	movlw	low (_H12+15)
  2919  004180  6E04               	movwf	secs_II_message@block+3,c
  2920  004182  0E01               	movlw	high (_H12+15)
  2921  004184  6E05               	movwf	secs_II_message@block+4,c
  2922                           
  2923                           ;gemsecs.c: 492:    block.reply_length = sizeof(header12);
  2924  004186  0E0F               	movlw	15
  2925  004188  D7D1               	goto	L6
  2926  00418A                     l7920:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;gemsecs.c: 496:    block.header = (uint8_t*) & H10[2];
  2930  00418A  0E1A               	movlw	low (_H10+26)
  2931  00418C  6E01               	movwf	secs_II_message@block,c
  2932  00418E  0E01               	movlw	high (_H10+26)
  2933  004190  6E02               	movwf	secs_II_message@block+1,c
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;gemsecs.c: 497:    block.length = sizeof(header10);
  2937  004192  0E0D               	movlw	13
  2938  004194  6E03               	movwf	secs_II_message@block+2,c
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;gemsecs.c: 498:    H10[2].block.block.systemb = V.systemb;
  2942  004196  C0E0  F11C         	movff	_V+73,_H10+28
  2943  00419A  C0E1  F11D         	movff	_V+74,_H10+29
  2944  00419E  C0E2  F11E         	movff	_V+75,_H10+30
  2945  0041A2  C0E3  F11F         	movff	_V+76,_H10+31
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;gemsecs.c: 499:    V.abort = LINK_ERROR_ABORT;
  2949  0041A6  0E07               	movlw	7
  2950  0041A8  6FE7               	movwf	(_V+80)& (0+255),b
  2951                           
  2952                           ;gemsecs.c: 500:    break;
  2953  0041AA  D0B0               	goto	l8020
  2954  0041AC                     l7930:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;stkvar	_function @ sp[(0)+-7]
  2958  0041AC  0EF9               	movlw	-7
  2959  0041AE  50E3               	movf	plusw1,w,c
  2960  0041B0  6E47               	movwf	btemp+10,c
  2961  0041B2  6A48               	clrf	btemp+11,c
  2962                           
  2963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2964                           ; Switch size 1, requested type "simple"
  2965                           ; Number of cases is 1, Range of values is 0 to 0
  2966                           ; switch strategies available:
  2967                           ; Name         Instructions Cycles
  2968                           ; simple_byte            4     3 (average)
  2969                           ;	Chosen strategy is simple_byte
  2970  0041B4  5048               	movf	btemp+11,w,c
  2971  0041B6  0A00               	xorlw	0	; case 0
  2972  0041B8  A4D8               	btfss	status,2,c
  2973  0041BA  D7E7               	goto	l7920
  2974                           
  2975                           ; BSR set to: 0
  2976                           ; Switch size 1, requested type "simple"
  2977                           ; Number of cases is 3, Range of values is 1 to 13
  2978                           ; switch strategies available:
  2979                           ; Name         Instructions Cycles
  2980                           ; simple_byte           10     6 (average)
  2981                           ;	Chosen strategy is simple_byte
  2982  0041BC  5047               	movf	btemp+10,w,c
  2983  0041BE  0A01               	xorlw	1	; case 1
  2984  0041C0  B4D8               	btfsc	status,2,c
  2985  0041C2  D798               	goto	l7886
  2986  0041C4  0A02               	xorlw	2	; case 3
  2987  0041C6  B4D8               	btfsc	status,2,c
  2988  0041C8  D7B4               	goto	l7900
  2989  0041CA  0A0E               	xorlw	14	; case 13
  2990  0041CC  B4D8               	btfsc	status,2,c
  2991  0041CE  D7C0               	goto	l7906
  2992  0041D0  D7DC               	goto	l7920
  2993  0041D2                     l7932:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;gemsecs.c: 506:    block.header = (uint8_t*) & H24[0];
  2997  0041D2  0E7D               	movlw	low _H24
  2998  0041D4  6E01               	movwf	secs_II_message@block,c
  2999  0041D6  0E01               	movlw	high _H24
  3000  0041D8  6E02               	movwf	secs_II_message@block+1,c
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;gemsecs.c: 507:    block.length = sizeof(header24);
  3004  0041DA  0E1B               	movlw	27
  3005  0041DC  6E03               	movwf	secs_II_message@block+2,c
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;gemsecs.c: 508:    H24[0].block.block.systemb = V.systemb;
  3009  0041DE  C0E0  F18D         	movff	_V+73,_H24+16
  3010  0041E2  C0E1  F18E         	movff	_V+74,_H24+17
  3011  0041E6  C0E2  F18F         	movff	_V+75,_H24+18
  3012  0041EA  C0E3  F190         	movff	_V+76,_H24+19
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;gemsecs.c: 509:    H24[0].data[12] = 12;
  3016  0041EE  0E0C               	movlw	12
  3017  0041F0  0101               	movlb	1	; () banked
  3018  0041F2  6F8B               	movwf	(_H24+14)& (0+255),b
  3019                           
  3020                           ;gemsecs.c: 510:    break;
  3021  0041F4  D08B               	goto	l8020
  3022  0041F6                     l7950:
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;stkvar	_function @ sp[(0)+-7]
  3026  0041F6  0EF9               	movlw	-7
  3027  0041F8  50E3               	movf	plusw1,w,c
  3028  0041FA  6E47               	movwf	btemp+10,c
  3029  0041FC  6A48               	clrf	btemp+11,c
  3030                           
  3031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3032                           ; Switch size 1, requested type "simple"
  3033                           ; Number of cases is 1, Range of values is 0 to 0
  3034                           ; switch strategies available:
  3035                           ; Name         Instructions Cycles
  3036                           ; simple_byte            4     3 (average)
  3037                           ;	Chosen strategy is simple_byte
  3038  0041FE  5048               	movf	btemp+11,w,c
  3039  004200  0A00               	xorlw	0	; case 0
  3040  004202  A4D8               	btfss	status,2,c
  3041  004204  D7C2               	goto	l7920
  3042                           
  3043                           ; BSR set to: 0
  3044                           ; Switch size 1, requested type "simple"
  3045                           ; Number of cases is 1, Range of values is 17 to 17
  3046                           ; switch strategies available:
  3047                           ; Name         Instructions Cycles
  3048                           ; simple_byte            4     3 (average)
  3049                           ;	Chosen strategy is simple_byte
  3050  004206  5047               	movf	btemp+10,w,c
  3051  004208  0A11               	xorlw	17	; case 17
  3052  00420A  B4D8               	btfsc	status,2,c
  3053  00420C  D7E2               	goto	l7932
  3054  00420E  D7BD               	goto	l7920
  3055  004210                     l7952:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;gemsecs.c: 522:    block.header = (uint8_t*) & H13[0];
  3059  004210  0EBD               	movlw	low _H13
  3060  004212  6E01               	movwf	secs_II_message@block,c
  3061  004214  0E01               	movlw	high _H13
  3062  004216  6E02               	movwf	secs_II_message@block+1,c
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;gemsecs.c: 523:    block.length = sizeof(header13);
  3066  004218  0E10               	movlw	16
  3067  00421A  6E03               	movwf	secs_II_message@block+2,c
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;gemsecs.c: 524:    H13[0].block.block.systemb = V.systemb;
  3071  00421C  C0E0  F1C2         	movff	_V+73,_H13+5
  3072  004220  C0E1  F1C3         	movff	_V+74,_H13+6
  3073  004224  C0E2  F1C4         	movff	_V+75,_H13+7
  3074  004228  C0E3  F1C5         	movff	_V+76,_H13+8
  3075                           
  3076                           ;gemsecs.c: 525:    break;
  3077  00422C  D06F               	goto	l8020
  3078  00422E                     l7968:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;stkvar	_function @ sp[(0)+-7]
  3082  00422E  0EF9               	movlw	-7
  3083  004230  50E3               	movf	plusw1,w,c
  3084  004232  6E47               	movwf	btemp+10,c
  3085  004234  6A48               	clrf	btemp+11,c
  3086                           
  3087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3088                           ; Switch size 1, requested type "simple"
  3089                           ; Number of cases is 1, Range of values is 0 to 0
  3090                           ; switch strategies available:
  3091                           ; Name         Instructions Cycles
  3092                           ; simple_byte            4     3 (average)
  3093                           ;	Chosen strategy is simple_byte
  3094  004236  5048               	movf	btemp+11,w,c
  3095  004238  0A00               	xorlw	0	; case 0
  3096  00423A  A4D8               	btfss	status,2,c
  3097  00423C  D7A6               	goto	l7920
  3098                           
  3099                           ; BSR set to: 0
  3100                           ; Switch size 1, requested type "simple"
  3101                           ; Number of cases is 1, Range of values is 11 to 11
  3102                           ; switch strategies available:
  3103                           ; Name         Instructions Cycles
  3104                           ; simple_byte            4     3 (average)
  3105                           ;	Chosen strategy is simple_byte
  3106  00423E  5047               	movf	btemp+10,w,c
  3107  004240  0A0B               	xorlw	11	; case 11
  3108  004242  B4D8               	btfsc	status,2,c
  3109  004244  D7E5               	goto	l7952
  3110  004246  D7A1               	goto	l7920
  3111  004248                     l7980:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;stkvar	_function @ sp[(0)+-7]
  3115  004248  0EF9               	movlw	-7
  3116  00424A  50E3               	movf	plusw1,w,c
  3117  00424C  6E47               	movwf	btemp+10,c
  3118  00424E  6A48               	clrf	btemp+11,c
  3119                           
  3120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3121                           ; Switch size 1, requested type "simple"
  3122                           ; Number of cases is 1, Range of values is 0 to 0
  3123                           ; switch strategies available:
  3124                           ; Name         Instructions Cycles
  3125                           ; simple_byte            4     3 (average)
  3126                           ;	Chosen strategy is simple_byte
  3127  004250  5048               	movf	btemp+11,w,c
  3128  004252  0A00               	xorlw	0	; case 0
  3129  004254  A4D8               	btfss	status,2,c
  3130  004256  D799               	goto	l7920
  3131                           
  3132                           ; BSR set to: 0
  3133                           ; Switch size 1, requested type "simple"
  3134                           ; Number of cases is 7, Range of values is 1 to 13
  3135                           ; switch strategies available:
  3136                           ; Name         Instructions Cycles
  3137                           ; simple_byte           22    12 (average)
  3138                           ;	Chosen strategy is simple_byte
  3139  004258  5047               	movf	btemp+10,w,c
  3140  00425A  0A01               	xorlw	1	; case 1
  3141  00425C  B4D8               	btfsc	status,2,c
  3142  00425E  D056               	goto	l8020
  3143  004260  0A02               	xorlw	2	; case 3
  3144  004262  B4D8               	btfsc	status,2,c
  3145  004264  D053               	goto	l8020
  3146  004266  0A06               	xorlw	6	; case 5
  3147  004268  B4D8               	btfsc	status,2,c
  3148  00426A  D050               	goto	l8020
  3149  00426C  0A02               	xorlw	2	; case 7
  3150  00426E  B4D8               	btfsc	status,2,c
  3151  004270  D04D               	goto	l8020
  3152  004272  0A0E               	xorlw	14	; case 9
  3153  004274  B4D8               	btfsc	status,2,c
  3154  004276  D04A               	goto	l8020
  3155  004278  0A02               	xorlw	2	; case 11
  3156  00427A  B4D8               	btfsc	status,2,c
  3157  00427C  D047               	goto	l8020
  3158  00427E  0A06               	xorlw	6	; case 13
  3159  004280  B4D8               	btfsc	status,2,c
  3160  004282  D044               	goto	l8020
  3161  004284  D782               	goto	l7920
  3162  004286                     l7982:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;gemsecs.c: 561:    block.header = (uint8_t*) & H12[0];
  3166  004286  0E5F               	movlw	low _H12
  3167  004288  6E01               	movwf	secs_II_message@block,c
  3168  00428A  0E01               	movlw	high _H12
  3169  00428C  6E02               	movwf	secs_II_message@block+1,c
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;gemsecs.c: 562:    block.length = sizeof(header12);
  3173  00428E  0E0F               	movlw	15
  3174  004290  6E03               	movwf	secs_II_message@block+2,c
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;gemsecs.c: 563:    H12[0].block.block.systemb = V.systemb;
  3178  004292  C0E0  F163         	movff	_V+73,_H12+4
  3179  004296  C0E1  F164         	movff	_V+74,_H12+5
  3180  00429A  C0E2  F165         	movff	_V+75,_H12+6
  3181  00429E  C0E3  F166         	movff	_V+76,_H12+7
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;gemsecs.c: 564:    H53[0].block.block.systemb = V.systemb;
  3185  0042A2  C0E0  F2ED         	movff	_V+73,_H53+45
  3186  0042A6  C0E1  F2EE         	movff	_V+74,_H53+46
  3187  0042AA  C0E2  F2EF         	movff	_V+75,_H53+47
  3188  0042AE  C0E3  F2F0         	movff	_V+76,_H53+48
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;gemsecs.c: 565:    block.respond = 1;
  3192  0042B2  8007               	bsf	secs_II_message@block+6,0,c
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;gemsecs.c: 566:    block.reply = (uint8_t*) & H53[0];
  3196  0042B4  0EC0               	movlw	low _H53
  3197  0042B6  6E04               	movwf	secs_II_message@block+3,c
  3198  0042B8  0E02               	movlw	high _H53
  3199  0042BA  6E05               	movwf	secs_II_message@block+4,c
  3200                           
  3201                           ;gemsecs.c: 567:    block.reply_length = sizeof(header53);
  3202  0042BC  0E38               	movlw	56
  3203  0042BE  D736               	goto	L6
  3204  0042C0                     l8006:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;stkvar	_function @ sp[(0)+-7]
  3208  0042C0  0EF9               	movlw	-7
  3209  0042C2  50E3               	movf	plusw1,w,c
  3210  0042C4  6E47               	movwf	btemp+10,c
  3211  0042C6  6A48               	clrf	btemp+11,c
  3212                           
  3213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3214                           ; Switch size 1, requested type "simple"
  3215                           ; Number of cases is 1, Range of values is 0 to 0
  3216                           ; switch strategies available:
  3217                           ; Name         Instructions Cycles
  3218                           ; simple_byte            4     3 (average)
  3219                           ;	Chosen strategy is simple_byte
  3220  0042C8  5048               	movf	btemp+11,w,c
  3221  0042CA  0A00               	xorlw	0	; case 0
  3222  0042CC  A4D8               	btfss	status,2,c
  3223  0042CE  D75D               	goto	l7920
  3224                           
  3225                           ; BSR set to: 0
  3226                           ; Switch size 1, requested type "simple"
  3227                           ; Number of cases is 1, Range of values is 1 to 1
  3228                           ; switch strategies available:
  3229                           ; Name         Instructions Cycles
  3230                           ; simple_byte            4     3 (average)
  3231                           ;	Chosen strategy is simple_byte
  3232  0042D0  5047               	movf	btemp+10,w,c
  3233  0042D2  0A01               	xorlw	1	; case 1
  3234  0042D4  B4D8               	btfsc	status,2,c
  3235  0042D6  D7D7               	goto	l7982
  3236  0042D8  D758               	goto	l7920
  3237  0042DA                     l8018:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;stkvar	_stream @ sp[(0)+-6]
  3241  0042DA  0EFA               	movlw	-6
  3242  0042DC  50E3               	movf	plusw1,w,c
  3243  0042DE  6E47               	movwf	btemp+10,c
  3244  0042E0  6A48               	clrf	btemp+11,c
  3245                           
  3246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3247                           ; Switch size 1, requested type "simple"
  3248                           ; Number of cases is 1, Range of values is 0 to 0
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte            4     3 (average)
  3252                           ;	Chosen strategy is simple_byte
  3253  0042E2  5048               	movf	btemp+11,w,c
  3254  0042E4  0A00               	xorlw	0	; case 0
  3255  0042E6  A4D8               	btfss	status,2,c
  3256  0042E8  D750               	goto	l7920
  3257                           
  3258                           ; BSR set to: 0
  3259                           ; Switch size 1, requested type "simple"
  3260                           ; Number of cases is 5, Range of values is 1 to 10
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte           16     9 (average)
  3264                           ;	Chosen strategy is simple_byte
  3265  0042EA  5047               	movf	btemp+10,w,c
  3266  0042EC  0A01               	xorlw	1	; case 1
  3267  0042EE  B4D8               	btfsc	status,2,c
  3268  0042F0  D75D               	goto	l7930
  3269  0042F2  0A03               	xorlw	3	; case 2
  3270  0042F4  B4D8               	btfsc	status,2,c
  3271  0042F6  D77F               	goto	l7950
  3272  0042F8  0A04               	xorlw	4	; case 6
  3273  0042FA  B4D8               	btfsc	status,2,c
  3274  0042FC  D798               	goto	l7968
  3275  0042FE  0A0F               	xorlw	15	; case 9
  3276  004300  B4D8               	btfsc	status,2,c
  3277  004302  D7A2               	goto	l7980
  3278  004304  0A03               	xorlw	3	; case 10
  3279  004306  B4D8               	btfsc	status,2,c
  3280  004308  D7DB               	goto	l8006
  3281  00430A  D73F               	goto	l7920
  3282  00430C                     l8020:
  3283                           
  3284                           ;gemsecs.c: 586:  return(block);
  3285  00430C  EE20  F001         	lfsr	2,secs_II_message@block
  3286                           
  3287                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3288  004310  0E07               	movlw	7
  3289  004312  6E3D               	movwf	btemp,c
  3290  004314  0EF9               	movlw	-7
  3291  004316                     us494999:
  3292  004316  006F FF7B FFE3     	movff	postinc2,plusw1
  3293  00431C  28E8               	incf	wreg,w,c
  3294  00431E  2E3D               	decfsz	btemp,f,c
  3295  004320  D7FA               	bra	us494999
  3296                           
  3297                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3298  004322  0012               	return		;funcret
  3299  004324                     __end_of_secs_II_message:
  3300                           	opt callstack 0
  3301                           
  3302 ;; *************** function _sprintf *****************
  3303 ;; Defined at:
  3304 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  s               1  [STACK] PTR unsigned char 
  3307 ;;		 -> V(87), 
  3308 ;;  fmt             1  [STACK] PTR const unsigned char 
  3309 ;;		 -> STR_13(21), STR_12(17), STR_11(6), STR_10(14), 
  3310 ;;		 -> STR_9(19), STR_8(20), STR_7(6), STR_6(6), 
  3311 ;;		 -> STR_5(14), STR_4(15), STR_2(12), STR_1(17), 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  f               5  [STACK] struct _IO_FILE
  3314 ;;  ap              2  [STACK] PTR void [1]
  3315 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3316 ;;  ret             2    0        int 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  2  [STACK] int 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3321 ;; Tracked objects:
  3322 ;;		On entry : 4/0
  3323 ;;		On exit  : 3F/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:   11
  3333 ;; This function calls:
  3334 ;;		_vfprintf
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text3
  3341  004E2A                     __ptext3:
  3342                           	opt callstack 0
  3343  004E2A                     _sprintf:
  3344                           	opt callstack 0
  3345                           
  3346                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3347  004E2A  0E07               	movlw	7
  3348  004E2C  26E1               	addwf	fsr1l,f,c
  3349  004E2E  0E00               	movlw	0
  3350  004E30  22E2               	addwfc	fsr1h,f,c
  3351                           
  3352                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3353                           
  3354                           ;incstack = 0
  3355  004E32  0EF6               	movlw	246
  3356  004E34  24E1               	addwf	fsr1l,w,c
  3357  004E36  6E47               	movwf	btemp+10,c
  3358  004E38  0EFF               	movlw	255
  3359  004E3A  20E2               	addwfc	fsr1h,w,c
  3360  004E3C  6E48               	movwf	btemp+11,c
  3361                           
  3362                           ;stkvar	_ap @ sp[(-7)+5]
  3363  004E3E  0EFF               	movlw	-1
  3364  004E40  0060  F123  FFE3   	movff	btemp+11,plusw1
  3365  004E46  0EFE               	movlw	-2
  3366  004E48  0060  F11F  FFE3   	movff	btemp+10,plusw1
  3367                           
  3368                           ;stkvar	_s @ sp[(-7)+-2]
  3369  004E4E  0EF7               	movlw	-9
  3370  004E50  006F FF8C  F048    	movff	plusw1,btemp+11
  3371                           
  3372                           ;stkvar	_f @ sp[(-7)+0]
  3373  004E56  0EF9               	movlw	-7
  3374  004E58  0060  F123  FFE3   	movff	btemp+11,plusw1
  3375                           
  3376                           ;stkvar	_f @ sp[(-7)+0]
  3377  004E5E  0EFA               	movlw	250
  3378  004E60  24E1               	addwf	fsr1l,w,c
  3379  004E62  6ED9               	movwf	fsr2l,c
  3380  004E64  0EFF               	movlw	255
  3381  004E66  20E2               	addwfc	fsr1h,w,c
  3382  004E68  6EDA               	movwf	fsr2h,c
  3383  004E6A  0E00               	movlw	0
  3384  004E6C  6EDE               	movwf	postinc2,c
  3385  004E6E  0E00               	movlw	0
  3386  004E70  6EDD               	movwf	postdec2,c
  3387                           
  3388                           ;stkvar	_f @ sp[(-7)+0]
  3389  004E72  0EFC               	movlw	252
  3390  004E74  24E1               	addwf	fsr1l,w,c
  3391  004E76  6ED9               	movwf	fsr2l,c
  3392  004E78  0EFF               	movlw	255
  3393  004E7A  20E2               	addwfc	fsr1h,w,c
  3394  004E7C  6EDA               	movwf	fsr2h,c
  3395  004E7E  0E00               	movlw	0
  3396  004E80  6EDE               	movwf	postinc2,c
  3397  004E82  0E00               	movlw	0
  3398  004E84  6EDD               	movwf	postdec2,c
  3399                           
  3400                           ;stkvar	_ap @ sp[(-7)+5]
  3401  004E86  0EFE               	movlw	254
  3402  004E88  24E1               	addwf	fsr1l,w,c
  3403  004E8A  6E3D               	movwf	btemp,c
  3404  004E8C  0EFF               	movlw	255
  3405  004E8E  20E2               	addwfc	fsr1h,w,c
  3406  004E90  6E3E               	movwf	btemp+1,c
  3407  004E92  0060  F0F7  FFE6   	movff	btemp,postinc1
  3408  004E98  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  3409                           
  3410                           ;stkvar	_fmt @ sp[(-9)+-3]
  3411  004E9E  0EF4               	movlw	-12
  3412  004EA0  50E3               	movf	plusw1,w,c
  3413  004EA2  6EE6               	movwf	postinc1,c
  3414                           
  3415                           ;stkvar	_f @ sp[(-10)+0]
  3416  004EA4  0EF6               	movlw	246
  3417  004EA6  24E1               	addwf	fsr1l,w,c
  3418  004EA8  6E3D               	movwf	btemp,c
  3419  004EAA  0EFF               	movlw	255
  3420  004EAC  20E2               	addwfc	fsr1h,w,c
  3421  004EAE  6E3E               	movwf	btemp+1,c
  3422  004EB0  0060  F0F7  FFE6   	movff	btemp,postinc1
  3423  004EB6  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  3424  004EBC  ECBD  F028         	call	_vfprintf	;wreg free
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;stkvar	_f @ sp[(-7)+0]
  3428  004EC0  0EFA               	movlw	250
  3429  004EC2  24E1               	addwf	fsr1l,w,c
  3430  004EC4  6ED9               	movwf	fsr2l,c
  3431  004EC6  0EFF               	movlw	255
  3432  004EC8  20E2               	addwfc	fsr1h,w,c
  3433  004ECA  6EDA               	movwf	fsr2h,c
  3434  004ECC  50DF               	movf	indf2,w,c
  3435  004ECE  6E48               	movwf	btemp+11,c
  3436                           
  3437                           ;stkvar	_s @ sp[(-7)+-2]
  3438  004ED0  0EF7               	movlw	-9
  3439  004ED2  50E3               	movf	plusw1,w,c
  3440  004ED4  2448               	addwf	btemp+11,w,c
  3441  004ED6  6ED9               	movwf	fsr2l,c
  3442  004ED8  6ADA               	clrf	fsr2h,c
  3443  004EDA  0E00               	movlw	0
  3444  004EDC  6EDF               	movwf	indf2,c
  3445                           
  3446                           ; BSR set to: 0
  3447                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3448  004EDE  0EF9               	movlw	249
  3449  004EE0  26E1               	addwf	fsr1l,f,c
  3450  004EE2  0EFF               	movlw	255
  3451  004EE4  22E2               	addwfc	fsr1h,f,c
  3452  004EE6  52E5               	movf	postdec1,f,c
  3453  004EE8  50E7               	movf	indf1,w,c
  3454  004EEA  5EE1               	subwf	fsr1l,f,c
  3455  004EEC  0E00               	movlw	0
  3456  004EEE  5AE2               	subwfb	fsr1h,f,c
  3457  004EF0  0012               	return		;funcret
  3458  004EF2                     __end_of_sprintf:
  3459                           	opt callstack 0
  3460                           
  3461 ;; *************** function _r_protocol *****************
  3462 ;; Defined at:
  3463 ;;		line 207 in file "gemsecs.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  r_link          1  [STACK] PTR enum E16164
  3466 ;;		 -> V(87), 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  rxData          1  [STACK] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1  [STACK] enum E16902
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    5
  3485 ;; This function calls:
  3486 ;;		_StartTimer
  3487 ;;		_TimerDone
  3488 ;;		_UART1_Read
  3489 ;;		_UART1_Write
  3490 ;;		_UART1_is_rx_ready
  3491 ;;		_WaitMs
  3492 ;;		_run_checksum
  3493 ;;		_secs_send
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text4
  3500  003322                     __ptext4:
  3501                           	opt callstack 0
  3502  003322                     _r_protocol:
  3503                           	opt callstack 0
  3504                           
  3505                           ; BSR set to: 0
  3506                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3507  003322  52E6               	movf	postinc1,f,c
  3508                           
  3509                           ;gemsecs.c: 207: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 208: {;gemsecs.c
      +                          : 209:  uint8_t rxData;;gemsecs.c: 210:  static uint8_t rxData_l = 0, retry = 3;;gemsecs
      +                          .c: 212:  switch (*r_link) {
  3510                           
  3511                           ;incstack = 0
  3512  003324  D155               	goto	l8266
  3513  003326                     l8154:
  3514                           
  3515                           ;gemsecs.c: 214:   if (UART1_is_rx_ready()) {
  3516  003326  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  3517  00332A  503D               	movf	btemp,w,c
  3518  00332C  B4D8               	btfsc	status,2,c
  3519  00332E  D171               	goto	l8268
  3520                           
  3521                           ;gemsecs.c: 215:    rxData = UART1_Read();
  3522  003330  EC64  F02C         	call	_UART1_Read	;wreg free
  3523                           
  3524                           ;stkvar	_rxData @ sp[(-1)+0]
  3525  003334  0EFF               	movlw	-1
  3526  003336  0060  F0F7  FFE3   	movff	btemp,plusw1
  3527                           
  3528                           ; BSR set to: 57
  3529                           ;gemsecs.c: 216:    if (rxData == 0x05) {
  3530                           ;stkvar	_rxData @ sp[(-1)+0]
  3531  00333C  0EFF               	movlw	-1
  3532  00333E  006F FF8C  F03D    	movff	plusw1,btemp
  3533  003344  0E05               	movlw	5
  3534  003346  183D               	xorwf	btemp,w,c
  3535  003348  A4D8               	btfss	status,2,c
  3536  00334A  D163               	goto	l8268
  3537                           
  3538                           ; BSR set to: 57
  3539                           ;gemsecs.c: 217:     V.error = LINK_ERROR_NONE;
  3540  00334C  0100               	movlb	0	; () banked
  3541  00334E  6BE6               	clrf	(_V+79)& (0+255),b
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;gemsecs.c: 218:     *r_link = LINK_STATE_ENQ;
  3545                           ;stkvar	_r_link @ sp[(-1)+-1]
  3546  003350  0EFE               	movlw	-2
  3547  003352  50E3               	movf	plusw1,w,c
  3548  003354  6ED9               	movwf	fsr2l,c
  3549  003356  6ADA               	clrf	fsr2h,c
  3550  003358  0E01               	movlw	1
  3551  00335A  D121               	goto	L10
  3552  00335C                     l1588:
  3553                           
  3554                           ;gemsecs.c: 223:   rxData_l = 0;
  3555  00335C  6A2F               	clrf	r_protocol@rxData_l,c
  3556                           
  3557                           ;gemsecs.c: 224:   UART1_Write(0x04);
  3558  00335E  0E04               	movlw	4
  3559  003360  6EE6               	movwf	postinc1,c
  3560  003362  EC26  F02C         	call	_UART1_Write	;wreg free
  3561                           
  3562                           ; BSR set to: 57
  3563                           ;gemsecs.c: 225:   StartTimer(TMR_T2, 2000);
  3564  003366  0ED0               	movlw	208
  3565  003368  6EE6               	movwf	postinc1,c
  3566  00336A  0E07               	movlw	7
  3567  00336C  6EE6               	movwf	postinc1,c
  3568  00336E  0E02               	movlw	2
  3569  003370  6EE6               	movwf	postinc1,c
  3570  003372  ECA3  F02C         	call	_StartTimer	;wreg free
  3571                           
  3572                           ;gemsecs.c: 226:   *r_link = LINK_STATE_EOT;
  3573                           ;stkvar	_r_link @ sp[(-1)+-1]
  3574  003376  0EFE               	movlw	-2
  3575  003378  50E3               	movf	plusw1,w,c
  3576  00337A  6ED9               	movwf	fsr2l,c
  3577  00337C  6ADA               	clrf	fsr2h,c
  3578  00337E  0E02               	movlw	2
  3579  003380  6EDF               	movwf	indf2,c
  3580                           
  3581                           ;gemsecs.c: 228:   WaitMs(5);
  3582  003382  0E05               	movlw	5
  3583  003384  6EE6               	movwf	postinc1,c
  3584  003386  0E00               	movlw	0
  3585  003388  6EE6               	movwf	postinc1,c
  3586  00338A  EC4A  F02D         	call	_WaitMs	;wreg free
  3587                           
  3588                           ;gemsecs.c: 229:   H27[0].block.block.systemb = V.ticks;
  3589  00338E  C0DC  F154         	movff	_V+69,_H27+19
  3590  003392  C0DD  F155         	movff	_V+70,_H27+20
  3591  003396  C0DE  F156         	movff	_V+71,_H27+21
  3592  00339A  C0DF  F157         	movff	_V+72,_H27+22
  3593                           
  3594                           ;gemsecs.c: 230:   secs_send((uint8_t*) & H27[0], sizeof(header27), 1);
  3595  00339E  0E01               	movlw	1
  3596  0033A0  6EE6               	movwf	postinc1,c
  3597  0033A2  0E1E               	movlw	30
  3598  0033A4  6EE6               	movwf	postinc1,c
  3599  0033A6  0E41               	movlw	low _H27
  3600  0033A8  6EE6               	movwf	postinc1,c
  3601  0033AA  0E01               	movlw	high _H27
  3602  0033AC  6EE6               	movwf	postinc1,c
  3603  0033AE  ECB2  F022         	call	_secs_send	;wreg free
  3604                           
  3605                           ;gemsecs.c: 232:   break;
  3606  0033B2  D12F               	goto	l8268
  3607  0033B4                     l8176:
  3608                           
  3609                           ;gemsecs.c: 234:   if (TimerDone(TMR_T2)) {
  3610  0033B4  0E02               	movlw	2
  3611  0033B6  6EE6               	movwf	postinc1,c
  3612  0033B8  ECEF  F02E         	call	_TimerDone	;wreg free
  3613  0033BC  503D               	movf	btemp,w,c
  3614  0033BE  B4D8               	btfsc	status,2,c
  3615  0033C0  D017               	goto	l8186
  3616                           
  3617                           ;gemsecs.c: 235:    if (!retry--) {
  3618  0033C2  065D               	decf	r_protocol@retry,f,c
  3619  0033C4  285D               	incf	r_protocol@retry,w,c
  3620  0033C6  A4D8               	btfss	status,2,c
  3621  0033C8  D00D               	goto	l8184
  3622                           
  3623                           ;gemsecs.c: 236:     V.error = LINK_ERROR_T2;
  3624  0033CA  0E02               	movlw	2
  3625  0033CC  0100               	movlb	0	; () banked
  3626  0033CE  6FE6               	movwf	(_V+79)& (0+255),b
  3627                           
  3628                           ;gemsecs.c: 237:     V.failed_receive = 1;
  3629  0033D0  51ED               	movf	(_V+86)& (0+255),w,b
  3630  0033D2  0BF0               	andlw	-16
  3631  0033D4  0901               	iorlw	1
  3632  0033D6  6FED               	movwf	(_V+86)& (0+255),b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;gemsecs.c: 238:     *r_link = LINK_STATE_NAK;
  3636                           ;stkvar	_r_link @ sp[(-1)+-1]
  3637  0033D8  0EFE               	movlw	-2
  3638  0033DA  50E3               	movf	plusw1,w,c
  3639  0033DC  6ED9               	movwf	fsr2l,c
  3640  0033DE  6ADA               	clrf	fsr2h,c
  3641  0033E0  0E05               	movlw	5
  3642  0033E2  D0DD               	goto	L10
  3643  0033E4                     l8184:
  3644                           
  3645                           ;gemsecs.c: 240:     *r_link = LINK_STATE_IDLE;
  3646                           ;stkvar	_r_link @ sp[(-1)+-1]
  3647  0033E4  0EFE               	movlw	-2
  3648  0033E6  50E3               	movf	plusw1,w,c
  3649  0033E8  6ED9               	movwf	fsr2l,c
  3650  0033EA  6ADA               	clrf	fsr2h,c
  3651  0033EC  0E00               	movlw	0
  3652  0033EE  D0D7               	goto	L10
  3653  0033F0                     l8186:
  3654                           
  3655                           ;gemsecs.c: 243:    if (UART1_is_rx_ready()) {
  3656  0033F0  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  3657  0033F4  503D               	movf	btemp,w,c
  3658  0033F6  B4D8               	btfsc	status,2,c
  3659  0033F8  D10C               	goto	l8268
  3660                           
  3661                           ;gemsecs.c: 244:     rxData = UART1_Read();
  3662  0033FA  EC64  F02C         	call	_UART1_Read	;wreg free
  3663                           
  3664                           ;stkvar	_rxData @ sp[(-1)+0]
  3665  0033FE  0EFF               	movlw	-1
  3666  003400  0060  F0F7  FFE3   	movff	btemp,plusw1
  3667                           
  3668                           ; BSR set to: 57
  3669                           ;gemsecs.c: 245:     if (rxData_l == 0) {
  3670  003406  502F               	movf	r_protocol@rxData_l,w,c
  3671  003408  A4D8               	btfss	status,2,c
  3672  00340A  D00C               	goto	l8198
  3673                           
  3674                           ; BSR set to: 57
  3675                           ;gemsecs.c: 246:      r_block.length = rxData;
  3676                           ;stkvar	_rxData @ sp[(-1)+0]
  3677  00340C  0EFF               	movlw	-1
  3678  00340E  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3679                           
  3680                           ; BSR set to: 57
  3681                           ;gemsecs.c: 247:      run_checksum(0, 1);
  3682  003414  0E01               	movlw	1
  3683  003416  6EE6               	movwf	postinc1,c
  3684  003418  0E00               	movlw	0
  3685  00341A  6EE6               	movwf	postinc1,c
  3686  00341C  ECDD  F02C         	call	_run_checksum	;wreg free
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;gemsecs.c: 248:      rxData_l++;
  3690  003420  2A2F               	incf	r_protocol@rxData_l,f,c
  3691                           
  3692                           ;gemsecs.c: 249:     } else {
  3693  003422  D0F7               	goto	l8268
  3694  003424                     l8198:
  3695                           
  3696                           ; BSR set to: 57
  3697                           ;gemsecs.c: 253:      if (rxData_l <= sizeof(block10))
  3698  003424  0E0B               	movlw	11
  3699  003426  602F               	cpfslt	r_protocol@rxData_l,c
  3700  003428  D00C               	goto	l8202
  3701                           
  3702                           ; BSR set to: 57
  3703                           ;gemsecs.c: 254:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  3704                           ;stkvar	_rxData @ sp[(-1)+0]
  3705  00342A  502F               	movf	r_protocol@rxData_l,w,c
  3706  00342C  0819               	sublw	low (_H10+25)
  3707  00342E  6ED9               	movwf	fsr2l,c
  3708  003430  0E00               	movlw	0
  3709  003432  A0D8               	btfss	status,0,c
  3710  003434  2AE8               	incf	wreg,f,c
  3711  003436  0801               	sublw	high (_H10+25)
  3712  003438  6EDA               	movwf	fsr2h,c
  3713  00343A  0EFF               	movlw	-1
  3714  00343C  006F FF8F FFDF     	movff	plusw1,indf2
  3715  003442                     l8202:
  3716                           
  3717                           ; BSR set to: 57
  3718                           ;gemsecs.c: 255:      if (rxData_l <= r_block.length)
  3719  003442  502F               	movf	r_protocol@rxData_l,w,c
  3720  003444  0100               	movlb	0	; () banked
  3721  003446  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3722  003448  A0D8               	btfss	status,0,c
  3723  00344A  D00D               	goto	l8206
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;gemsecs.c: 256:       V.r_checksum = run_checksum(rxData, 0);
  3727  00344C  0E00               	movlw	0
  3728  00344E  6EE6               	movwf	postinc1,c
  3729                           
  3730                           ;stkvar	_rxData @ sp[(-2)+0]
  3731  003450  0EFE               	movlw	-2
  3732  003452  50E3               	movf	plusw1,w,c
  3733  003454  6EE6               	movwf	postinc1,c
  3734  003456  ECDD  F02C         	call	_run_checksum	;wreg free
  3735  00345A  0060  F0F4  F0E8   	movff	btemp,_V+81
  3736  003460  0060  F0F8  F0E9   	movff	btemp+1,_V+82
  3737  003466                     l8206:
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;gemsecs.c: 258:      if (rxData_l == r_block.length + 1)
  3741  003466  502F               	movf	r_protocol@rxData_l,w,c
  3742  003468  6E47               	movwf	btemp+10,c
  3743  00346A  6A48               	clrf	btemp+11,c
  3744  00346C  516C               	movf	(_r_block+12)& (0+255),w,b
  3745  00346E  6E45               	movwf	btemp+8,c
  3746  003470  6A46               	clrf	btemp+9,c
  3747  003472  0E01               	movlw	1
  3748  003474  2645               	addwf	btemp+8,f,c
  3749  003476  0E00               	movlw	0
  3750  003478  2246               	addwfc	btemp+9,f,c
  3751  00347A  5047               	movf	btemp+10,w,c
  3752  00347C  1845               	xorwf	btemp+8,w,c
  3753  00347E  E109               	bnz	l8210
  3754  003480  5048               	movf	btemp+11,w,c
  3755  003482  1846               	xorwf	btemp+9,w,c
  3756  003484  A4D8               	btfss	status,2,c
  3757  003486  D005               	goto	l8210
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;gemsecs.c: 259:       H10[1].checksum = (uint16_t) rxData << 8;
  3761                           ;stkvar	_rxData @ sp[(-1)+0]
  3762  003488  0EFF               	movlw	-1
  3763  00348A  50E3               	movf	plusw1,w,c
  3764  00348C  0101               	movlb	1	; () banked
  3765  00348E  6F0E               	movwf	(_H10+14)& (0+255),b
  3766  003490  6B0D               	clrf	(_H10+13)& (0+255),b
  3767  003492                     l8210:
  3768                           
  3769                           ;gemsecs.c: 260:      if (rxData_l == r_block.length + 2)
  3770  003492  502F               	movf	r_protocol@rxData_l,w,c
  3771  003494  6E47               	movwf	btemp+10,c
  3772  003496  6A48               	clrf	btemp+11,c
  3773  003498  0100               	movlb	0	; () banked
  3774  00349A  516C               	movf	(_r_block+12)& (0+255),w,b
  3775  00349C  6E45               	movwf	btemp+8,c
  3776  00349E  6A46               	clrf	btemp+9,c
  3777  0034A0  0E02               	movlw	2
  3778  0034A2  2645               	addwf	btemp+8,f,c
  3779  0034A4  0E00               	movlw	0
  3780  0034A6  2246               	addwfc	btemp+9,f,c
  3781  0034A8  5047               	movf	btemp+10,w,c
  3782  0034AA  1845               	xorwf	btemp+8,w,c
  3783  0034AC  E10A               	bnz	l8214
  3784  0034AE  5048               	movf	btemp+11,w,c
  3785  0034B0  1846               	xorwf	btemp+9,w,c
  3786  0034B2  A4D8               	btfss	status,2,c
  3787  0034B4  D006               	goto	l8214
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;gemsecs.c: 261:       H10[1].checksum += rxData;
  3791                           ;stkvar	_rxData @ sp[(-1)+0]
  3792  0034B6  0EFF               	movlw	-1
  3793  0034B8  50E3               	movf	plusw1,w,c
  3794  0034BA  0101               	movlb	1	; () banked
  3795  0034BC  270D               	addwf	(_H10+13)& (0+255),f,b
  3796  0034BE  0E00               	movlw	0
  3797  0034C0  230E               	addwfc	(_H10+14)& (0+255),f,b
  3798  0034C2                     l8214:
  3799                           
  3800                           ;gemsecs.c: 263:      rxData_l++;
  3801  0034C2  2A2F               	incf	r_protocol@rxData_l,f,c
  3802                           
  3803                           ;gemsecs.c: 264:      if (rxData_l > (r_block.length + 2)) {
  3804  0034C4  502F               	movf	r_protocol@rxData_l,w,c
  3805  0034C6  6E47               	movwf	btemp+10,c
  3806  0034C8  6A48               	clrf	btemp+11,c
  3807  0034CA  0100               	movlb	0	; () banked
  3808  0034CC  516C               	movf	(_r_block+12)& (0+255),w,b
  3809  0034CE  6E45               	movwf	btemp+8,c
  3810  0034D0  6A46               	clrf	btemp+9,c
  3811  0034D2  0E02               	movlw	2
  3812  0034D4  2645               	addwf	btemp+8,f,c
  3813  0034D6  0E00               	movlw	0
  3814  0034D8  2246               	addwfc	btemp+9,f,c
  3815  0034DA  5047               	movf	btemp+10,w,c
  3816  0034DC  5C45               	subwf	btemp+8,w,c
  3817  0034DE  5046               	movf	btemp+9,w,c
  3818  0034E0  0A80               	xorlw	128
  3819  0034E2  6E3D               	movwf	btemp,c
  3820  0034E4  5048               	movf	btemp+11,w,c
  3821  0034E6  0A80               	xorlw	128
  3822  0034E8  583D               	subwfb	btemp,w,c
  3823  0034EA  B0D8               	btfsc	status,0,c
  3824  0034EC  D092               	goto	l8268
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;gemsecs.c: 265:       if (V.r_checksum == H10[1].checksum) {
  3828  0034EE  0101               	movlb	1	; () banked
  3829  0034F0  510D               	movf	(_H10+13)& (0+255),w,b
  3830  0034F2  0100               	movlb	0	; () banked
  3831  0034F4  19E8               	xorwf	(_V+81)& (0+255),w,b
  3832  0034F6  E10E               	bnz	l8224
  3833  0034F8  0101               	movlb	1	; () banked
  3834  0034FA  510E               	movf	(_H10+14)& (0+255),w,b
  3835  0034FC  0100               	movlb	0	; () banked
  3836  0034FE  19E9               	xorwf	(_V+82)& (0+255),w,b
  3837  003500  A4D8               	btfss	status,2,c
  3838  003502  D008               	goto	l8224
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;gemsecs.c: 266:        *r_link = LINK_STATE_ACK;
  3842                           ;stkvar	_r_link @ sp[(-1)+-1]
  3843  003504  0EFE               	movlw	-2
  3844  003506  50E3               	movf	plusw1,w,c
  3845  003508  6ED9               	movwf	fsr2l,c
  3846  00350A  6ADA               	clrf	fsr2h,c
  3847  00350C  0E03               	movlw	3
  3848  00350E  D047               	goto	L10
  3849  003510                     l8222:
  3850  003510  EC64  F02C         	call	_UART1_Read	;wreg free
  3851  003514                     l8224:
  3852                           
  3853                           ;gemsecs.c: 268:        while (UART1_is_rx_ready())
  3854  003514  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  3855  003518  503D               	movf	btemp,w,c
  3856  00351A  A4D8               	btfss	status,2,c
  3857  00351C  D7F9               	goto	l8222
  3858                           
  3859                           ;gemsecs.c: 270:        WaitMs(500);
  3860  00351E  0EF4               	movlw	244
  3861  003520  6EE6               	movwf	postinc1,c
  3862  003522  0E01               	movlw	1
  3863  003524  6EE6               	movwf	postinc1,c
  3864  003526  EC4A  F02D         	call	_WaitMs	;wreg free
  3865                           
  3866                           ;gemsecs.c: 271:        V.error = LINK_ERROR_CHECKSUM;
  3867  00352A  0E05               	movlw	5
  3868  00352C  0100               	movlb	0	; () banked
  3869  00352E  6FE6               	movwf	(_V+79)& (0+255),b
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;gemsecs.c: 272:        V.failed_receive = 2;
  3873  003530  51ED               	movf	(_V+86)& (0+255),w,b
  3874  003532  0BF0               	andlw	-16
  3875  003534  0902               	iorlw	2
  3876  003536  D74F               	goto	L11
  3877  003538                     l8234:
  3878                           
  3879                           ;gemsecs.c: 281:   V.stream = H10[1].block.block.stream;
  3880  003538  0101               	movlb	1	; () banked
  3881  00353A  5116               	movf	(_H10+22)& (0+255),w,b
  3882  00353C  0B7F               	andlw	127
  3883  00353E  0100               	movlb	0	; () banked
  3884  003540  6FE4               	movwf	(_V+77)& (0+255),b
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;gemsecs.c: 282:   V.function = H10[1].block.block.function;
  3888  003542  C115  F0E5         	movff	_H10+21,_V+78
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;gemsecs.c: 283:   V.systemb = H10[1].block.block.systemb;
  3892  003546  C10F  F0E0         	movff	_H10+15,_V+73
  3893  00354A  C110  F0E1         	movff	_H10+16,_V+74
  3894  00354E  C111  F0E2         	movff	_H10+17,_V+75
  3895  003552  C112  F0E3         	movff	_H10+18,_V+76
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;gemsecs.c: 284:   V.rbit = H10[1].block.block.rbit;
  3899  003556  0101               	movlb	1	; () banked
  3900  003558  AF18               	btfss	(_H10+24)& (0+255),7,b
  3901  00355A  D003               	bra	u5085
  3902  00355C  0100               	movlb	0	; () banked
  3903  00355E  81EC               	bsf	(_V+85)& (0+255),0,b
  3904  003560  D002               	bra	u5087
  3905  003562                     u5085:
  3906  003562  0100               	movlb	0	; () banked
  3907  003564  91EC               	bcf	(_V+85)& (0+255),0,b
  3908  003566                     u5087:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;gemsecs.c: 285:   V.wbit = H10[1].block.block.wbit;
  3912  003566  0101               	movlb	1	; () banked
  3913  003568  AF16               	btfss	(_H10+22)& (0+255),7,b
  3914  00356A  D003               	bra	u5095
  3915  00356C  0100               	movlb	0	; () banked
  3916  00356E  83EC               	bsf	(_V+85)& (0+255),1,b
  3917  003570  D002               	bra	u5097
  3918  003572                     u5095:
  3919  003572  0100               	movlb	0	; () banked
  3920  003574  93EC               	bcf	(_V+85)& (0+255),1,b
  3921  003576                     u5097:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;gemsecs.c: 286:   V.ebit = H10[1].block.block.ebit;
  3925  003576  0101               	movlb	1	; () banked
  3926  003578  AF14               	btfss	(_H10+20)& (0+255),7,b
  3927  00357A  D003               	bra	u5105
  3928  00357C  0100               	movlb	0	; () banked
  3929  00357E  85EC               	bsf	(_V+85)& (0+255),2,b
  3930  003580  D002               	bra	u5107
  3931  003582                     u5105:
  3932  003582  0100               	movlb	0	; () banked
  3933  003584  95EC               	bcf	(_V+85)& (0+255),2,b
  3934  003586                     u5107:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;gemsecs.c: 287:   UART1_Write(0x06);
  3938  003586  0E06               	movlw	6
  3939  003588  6EE6               	movwf	postinc1,c
  3940  00358A  EC26  F02C         	call	_UART1_Write	;wreg free
  3941                           
  3942                           ; BSR set to: 57
  3943                           ;gemsecs.c: 288:   V.failed_receive = 0;
  3944  00358E  0EF0               	movlw	-16
  3945  003590  0100               	movlb	0	; () banked
  3946  003592  17ED               	andwf	(_V+86)& (0+255),f,b
  3947                           
  3948                           ;gemsecs.c: 289:   *r_link = LINK_STATE_DONE;
  3949                           ;stkvar	_r_link @ sp[(-1)+-1]
  3950  003594  0EFE               	movlw	-2
  3951  003596  50E3               	movf	plusw1,w,c
  3952  003598  6ED9               	movwf	fsr2l,c
  3953  00359A  6ADA               	clrf	fsr2h,c
  3954  00359C  0E04               	movlw	4
  3955  00359E                     L10:
  3956  00359E  6EDF               	movwf	indf2,c
  3957                           
  3958                           ;gemsecs.c: 290:   break;
  3959  0035A0  D038               	goto	l8268
  3960  0035A2                     l8250:
  3961                           
  3962                           ;gemsecs.c: 292:   UART1_Write(0x15);
  3963  0035A2  0E15               	movlw	21
  3964  0035A4  6EE6               	movwf	postinc1,c
  3965  0035A6  EC26  F02C         	call	_UART1_Write	;wreg free
  3966                           
  3967                           ; BSR set to: 57
  3968                           ;gemsecs.c: 293:   *r_link = LINK_STATE_ERROR;
  3969                           ;stkvar	_r_link @ sp[(-1)+-1]
  3970  0035AA  0EFE               	movlw	-2
  3971  0035AC  50E3               	movf	plusw1,w,c
  3972  0035AE  6ED9               	movwf	fsr2l,c
  3973  0035B0  6ADA               	clrf	fsr2h,c
  3974  0035B2  0E06               	movlw	6
  3975  0035B4  6EDF               	movwf	indf2,c
  3976                           
  3977                           ;gemsecs.c: 294:   while ((uart1RxCount)) {
  3978  0035B6  D002               	goto	l8256
  3979  0035B8                     l8254:
  3980                           
  3981                           ; BSR set to: 57
  3982                           ;gemsecs.c: 295:    UART1_Read();
  3983  0035B8  EC64  F02C         	call	_UART1_Read	;wreg free
  3984  0035BC                     l8256:
  3985                           
  3986                           ; BSR set to: 57
  3987                           ;gemsecs.c: 294:   while ((uart1RxCount)) {
  3988  0035BC  5037               	movf	_uart1RxCount,w,c	;volatile
  3989  0035BE  A4D8               	btfss	status,2,c
  3990  0035C0  D7FB               	goto	l8254
  3991                           
  3992                           ; BSR set to: 57
  3993                           ;gemsecs.c: 297:   retry = 3;
  3994  0035C2  0E03               	movlw	3
  3995  0035C4  6E5D               	movwf	r_protocol@retry,c
  3996                           
  3997                           ;gemsecs.c: 298:   break;
  3998  0035C6  D025               	goto	l8268
  3999  0035C8                     l8260:
  4000                           
  4001                           ;gemsecs.c: 302:   V.failed_receive = 0;
  4002  0035C8  0EF0               	movlw	-16
  4003  0035CA  0100               	movlb	0	; () banked
  4004  0035CC  17ED               	andwf	(_V+86)& (0+255),f,b
  4005  0035CE  D70A               	goto	l8184
  4006  0035D0                     l8266:
  4007                           
  4008                           ;stkvar	_r_link @ sp[(-1)+-1]
  4009  0035D0  0EFE               	movlw	-2
  4010  0035D2  50E3               	movf	plusw1,w,c
  4011  0035D4  6ED9               	movwf	fsr2l,c
  4012  0035D6  6ADA               	clrf	fsr2h,c
  4013  0035D8  50DF               	movf	indf2,w,c
  4014  0035DA  6E47               	movwf	btemp+10,c
  4015  0035DC  6A48               	clrf	btemp+11,c
  4016                           
  4017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4018                           ; Switch size 1, requested type "simple"
  4019                           ; Number of cases is 1, Range of values is 0 to 0
  4020                           ; switch strategies available:
  4021                           ; Name         Instructions Cycles
  4022                           ; simple_byte            4     3 (average)
  4023                           ;	Chosen strategy is simple_byte
  4024  0035DE  5048               	movf	btemp+11,w,c
  4025  0035E0  0A00               	xorlw	0	; case 0
  4026  0035E2  A4D8               	btfss	status,2,c
  4027  0035E4  D6FF               	goto	l8184
  4028                           
  4029                           ; Switch size 1, requested type "simple"
  4030                           ; Number of cases is 7, Range of values is 0 to 6
  4031                           ; switch strategies available:
  4032                           ; Name         Instructions Cycles
  4033                           ; simple_byte           22    12 (average)
  4034                           ;	Chosen strategy is simple_byte
  4035  0035E6  5047               	movf	btemp+10,w,c
  4036  0035E8  0A00               	xorlw	0	; case 0
  4037  0035EA  B4D8               	btfsc	status,2,c
  4038  0035EC  D69C               	goto	l8154
  4039  0035EE  0A01               	xorlw	1	; case 1
  4040  0035F0  B4D8               	btfsc	status,2,c
  4041  0035F2  D6B4               	goto	l1588
  4042  0035F4  0A03               	xorlw	3	; case 2
  4043  0035F6  B4D8               	btfsc	status,2,c
  4044  0035F8  D6DD               	goto	l8176
  4045  0035FA  0A01               	xorlw	1	; case 3
  4046  0035FC  B4D8               	btfsc	status,2,c
  4047  0035FE  D79C               	goto	l8234
  4048  003600  0A07               	xorlw	7	; case 4
  4049  003602  B4D8               	btfsc	status,2,c
  4050  003604  D7E1               	goto	l8260
  4051  003606  0A01               	xorlw	1	; case 5
  4052  003608  B4D8               	btfsc	status,2,c
  4053  00360A  D7CB               	goto	l8250
  4054  00360C  0A03               	xorlw	3	; case 6
  4055  00360E  A4D8               	btfss	status,2,c
  4056  003610  D6E9               	goto	l8184
  4057  003612                     l8268:
  4058                           
  4059                           ;gemsecs.c: 309:  return *r_link;
  4060                           ;stkvar	_r_link @ sp[(-1)+-1]
  4061  003612  0EFE               	movlw	-2
  4062  003614  50E3               	movf	plusw1,w,c
  4063  003616  6ED9               	movwf	fsr2l,c
  4064  003618  6ADA               	clrf	fsr2h,c
  4065  00361A  50DF               	movf	indf2,w,c
  4066  00361C  6E3D               	movwf	btemp,c
  4067                           
  4068                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4069  00361E  52E5               	movf	postdec1,f,c
  4070  003620  52E5               	movf	postdec1,f,c
  4071  003622  0012               	return		;funcret
  4072  003624                     __end_of_r_protocol:
  4073                           	opt callstack 0
  4074                           
  4075 ;; *************** function _secs_send *****************
  4076 ;; Defined at:
  4077 ;;		line 419 in file "gemsecs.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  byte_block      2  [STACK] PTR unsigned char 
  4080 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  4081 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  4082 ;;  length          1  [STACK] unsigned char 
  4083 ;;  fake            1  [STACK] _Bool 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  k               2  [STACK] PTR unsigned char 
  4086 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  4087 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  4088 ;;  checksum        2  [STACK] unsigned short 
  4089 ;;  i               1  [STACK] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1  [STACK] _Bool 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    4
  4106 ;; This function calls:
  4107 ;;		_UART1_Write
  4108 ;;		_UART1_is_tx_ready
  4109 ;;		_UART1_put_buffer
  4110 ;;		_block_checksum
  4111 ;; This function is called by:
  4112 ;;		_r_protocol
  4113 ;;		_t_protocol
  4114 ;; This function uses a reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text5
  4118  004564                     __ptext5:
  4119                           	opt callstack 0
  4120  004564                     _secs_send:
  4121                           	opt callstack 0
  4122                           
  4123                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4124  004564  0E05               	movlw	5
  4125  004566  26E1               	addwf	fsr1l,f,c
  4126  004568  0E00               	movlw	0
  4127  00456A  22E2               	addwfc	fsr1h,f,c
  4128                           
  4129                           ;gemsecs.c: 419: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 420: {;gemsecs.c: 421:  uint8_t i, *k;;gemsecs.c: 422:  uint16_t checksum;;gemsecs.
      +                          c: 424:  k = (uint8_t *) byte_block;
  4130                           ;stkvar	_byte_block @ sp[(-5)+-2]
  4131                           
  4132                           ;incstack = 0
  4133  00456C  0EF9               	movlw	-7
  4134  00456E  006F FF8C  F047    	movff	plusw1,btemp+10
  4135  004574  0EFA               	movlw	-6
  4136  004576  006F FF8C  F048    	movff	plusw1,btemp+11
  4137                           
  4138                           ;stkvar	_k @ sp[(-5)+0]
  4139  00457C  0EFC               	movlw	-4
  4140  00457E  0060  F123  FFE3   	movff	btemp+11,plusw1
  4141  004584  0EFB               	movlw	-5
  4142  004586  0060  F11F  FFE3   	movff	btemp+10,plusw1
  4143                           
  4144                           ;gemsecs.c: 426:  ++V.ticks;
  4145  00458C  0E01               	movlw	1
  4146  00458E  0100               	movlb	0	; () banked
  4147  004590  27DC               	addwf	(_V+69)& (0+255),f,b
  4148  004592  0E00               	movlw	0
  4149  004594  23DD               	addwfc	(_V+70)& (0+255),f,b
  4150  004596  23DE               	addwfc	(_V+71)& (0+255),f,b
  4151  004598  23DF               	addwfc	(_V+72)& (0+255),f,b
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;gemsecs.c: 427:  V.error = LINK_ERROR_NONE;
  4155  00459A  6BE6               	clrf	(_V+79)& (0+255),b
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;gemsecs.c: 428:  if ((length - 3) != k[length - 1]) {
  4159                           ;stkvar	_length @ sp[(-5)+-3]
  4160  00459C  0EF8               	movlw	-8
  4161  00459E  50E3               	movf	plusw1,w,c
  4162  0045A0  6E47               	movwf	btemp+10,c
  4163  0045A2  6A48               	clrf	btemp+11,c
  4164                           
  4165                           ;stkvar	_k @ sp[(-5)+0]
  4166  0045A4  0EFB               	movlw	-5
  4167  0045A6  50E3               	movf	plusw1,w,c
  4168  0045A8  2647               	addwf	btemp+10,f,c
  4169  0045AA  0EFC               	movlw	-4
  4170  0045AC  50E3               	movf	plusw1,w,c
  4171  0045AE  2248               	addwfc	btemp+11,f,c
  4172  0045B0  0EFF               	movlw	255
  4173  0045B2  2447               	addwf	btemp+10,w,c
  4174  0045B4  6ED9               	movwf	fsr2l,c
  4175  0045B6  0EFF               	movlw	255
  4176  0045B8  2048               	addwfc	btemp+11,w,c
  4177  0045BA  6EDA               	movwf	fsr2h,c
  4178  0045BC  50DF               	movf	indf2,w,c
  4179  0045BE  6E47               	movwf	btemp+10,c
  4180  0045C0  6A48               	clrf	btemp+11,c
  4181  0045C2  0EFD               	movlw	253
  4182  0045C4  6E45               	movwf	btemp+8,c
  4183  0045C6  0EFF               	movlw	255
  4184  0045C8  6E46               	movwf	btemp+9,c
  4185                           
  4186                           ;stkvar	_length @ sp[(-5)+-3]
  4187  0045CA  0EF8               	movlw	-8
  4188  0045CC  50E3               	movf	plusw1,w,c
  4189  0045CE  6E43               	movwf	btemp+6,c
  4190  0045D0  6A44               	clrf	btemp+7,c
  4191  0045D2  5045               	movf	btemp+8,w,c
  4192  0045D4  2643               	addwf	btemp+6,f,c
  4193  0045D6  5046               	movf	btemp+9,w,c
  4194  0045D8  2244               	addwfc	btemp+7,f,c
  4195  0045DA  5047               	movf	btemp+10,w,c
  4196  0045DC  1843               	xorwf	btemp+6,w,c
  4197  0045DE  E104               	bnz	u4900
  4198  0045E0  5048               	movf	btemp+11,w,c
  4199  0045E2  1844               	xorwf	btemp+7,w,c
  4200  0045E4  B4D8               	btfsc	status,2,c
  4201  0045E6  D003               	goto	l7858
  4202  0045E8                     u4900:
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;gemsecs.c: 429:   V.error = LINK_ERROR_SEND;
  4206  0045E8  0E08               	movlw	8
  4207  0045EA  6FE6               	movwf	(_V+79)& (0+255),b
  4208  0045EC  D098               	goto	l1660
  4209  0045EE                     l7858:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;gemsecs.c: 438:  checksum = block_checksum(&k[2], length - 3);
  4213  0045EE  0EFD               	movlw	253
  4214  0045F0  6E47               	movwf	btemp+10,c
  4215  0045F2  0EFF               	movlw	255
  4216  0045F4  6E48               	movwf	btemp+11,c
  4217                           
  4218                           ;stkvar	_length @ sp[(-5)+-3]
  4219  0045F6  0EF8               	movlw	-8
  4220  0045F8  50E3               	movf	plusw1,w,c
  4221  0045FA  6E45               	movwf	btemp+8,c
  4222  0045FC  6A46               	clrf	btemp+9,c
  4223  0045FE  5047               	movf	btemp+10,w,c
  4224  004600  2645               	addwf	btemp+8,f,c
  4225  004602  5048               	movf	btemp+11,w,c
  4226  004604  2246               	addwfc	btemp+9,f,c
  4227  004606  0060  F117  FFE6   	movff	btemp+8,postinc1
  4228  00460C  0060  F11B  FFE6   	movff	btemp+9,postinc1
  4229                           
  4230                           ;stkvar	_k @ sp[(-7)+0]
  4231  004612  0EF9               	movlw	-7
  4232  004614  50E3               	movf	plusw1,w,c
  4233  004616  0F02               	addlw	2
  4234  004618  6E47               	movwf	btemp+10,c
  4235  00461A  0EFA               	movlw	-6
  4236  00461C  006F FF8C  F048    	movff	plusw1,btemp+11
  4237  004622  0E00               	movlw	0
  4238  004624  2248               	addwfc	btemp+11,f,c
  4239  004626  0060  F11F  FFE6   	movff	btemp+10,postinc1
  4240  00462C  0060  F123  FFE6   	movff	btemp+11,postinc1
  4241  004632  ECE1  F025         	call	_block_checksum	;wreg free
  4242                           
  4243                           ;stkvar	_checksum @ sp[(-5)+2]
  4244  004636  0EFD               	movlw	-3
  4245  004638  0060  F0F7  FFE3   	movff	btemp,plusw1
  4246  00463E  0EFE               	movlw	-2
  4247  004640  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  4248                           
  4249                           ;gemsecs.c: 439:  k[0] = checksum & 0xff;
  4250                           ;stkvar	_checksum @ sp[(-5)+2]
  4251                           ;stkvar	_k @ sp[(-5)+0]
  4252  004646  0EFB               	movlw	-5
  4253  004648  006F FF8F FFD9     	movff	plusw1,fsr2l
  4254  00464E  0EFC               	movlw	-4
  4255  004650  006F FF8F FFDA     	movff	plusw1,fsr2h
  4256  004656  0EFD               	movlw	-3
  4257  004658  006F FF8F FFDF     	movff	plusw1,indf2
  4258                           
  4259                           ;gemsecs.c: 440:  k[1] = (checksum >> 8)&0xff;
  4260                           ;stkvar	_checksum @ sp[(-5)+2]
  4261  00465E  0EFE               	movlw	254
  4262  004660  24E1               	addwf	fsr1l,w,c
  4263  004662  6ED9               	movwf	fsr2l,c
  4264  004664  0EFF               	movlw	255
  4265  004666  20E2               	addwfc	fsr1h,w,c
  4266  004668  6EDA               	movwf	fsr2h,c
  4267                           
  4268                           ;stkvar	_k @ sp[(-5)+0]
  4269  00466A  0EFB               	movlw	-5
  4270  00466C  006F FF8C  F047    	movff	plusw1,btemp+10
  4271  004672  0EFC               	movlw	-4
  4272  004674  006F FF8C  F048    	movff	plusw1,btemp+11
  4273  00467A  0E01               	movlw	1
  4274  00467C  2447               	addwf	btemp+10,w,c
  4275  00467E  6EE9               	movwf	fsr0l,c
  4276  004680  0E00               	movlw	0
  4277  004682  2048               	addwfc	btemp+11,w,c
  4278  004684  6EEA               	movwf	fsr0h,c
  4279  004686  006F FF7F FFEF     	movff	indf2,indf0
  4280                           
  4281                           ;gemsecs.c: 441:  V.t_checksum = checksum;
  4282                           ;stkvar	_checksum @ sp[(-5)+2]
  4283  00468C  0EFD               	movlw	-3
  4284  00468E  006F FF8C  F0EA    	movff	plusw1,_V+83
  4285  004694  0EFE               	movlw	-2
  4286  004696  006F FF8C  F0EB    	movff	plusw1,_V+84
  4287  00469C                     l7866:
  4288  00469C  EC33  F030         	call	_UART1_is_tx_ready	;wreg free
  4289  0046A0  0E3F               	movlw	63
  4290  0046A2  643D               	cpfsgt	btemp,c
  4291  0046A4  D7FB               	goto	l7866
  4292                           
  4293                           ;gemsecs.c: 444:  for (i = length; i > 0; i--) {
  4294                           ;stkvar	_length @ sp[(-5)+-3]
  4295                           ;stkvar	_i @ sp[(-5)+4]
  4296  0046A6  0EF8               	movlw	-8
  4297  0046A8  006F FF8C  F03D    	movff	plusw1,btemp
  4298  0046AE  0EFF               	movlw	-1
  4299  0046B0  0060  F0F7  FFE3   	movff	btemp,plusw1
  4300  0046B6                     l7870:
  4301                           
  4302                           ;stkvar	_i @ sp[(-5)+4]
  4303  0046B6  0EFF               	movlw	-1
  4304  0046B8  50E3               	movf	plusw1,w,c
  4305  0046BA  B4D8               	btfsc	status,2,c
  4306  0046BC  D030               	goto	l1660
  4307                           
  4308                           ;gemsecs.c: 445:   if (fake) {
  4309                           ;stkvar	_fake @ sp[(-5)+-4]
  4310  0046BE  0EF7               	movlw	-9
  4311  0046C0  50E3               	movf	plusw1,w,c
  4312  0046C2  B4D8               	btfsc	status,2,c
  4313  0046C4  D015               	goto	l7878
  4314                           
  4315                           ;gemsecs.c: 446:    UART1_put_buffer(k[i - 1]);
  4316                           ;stkvar	_i @ sp[(-5)+4]
  4317  0046C6  0EFF               	movlw	-1
  4318  0046C8  50E3               	movf	plusw1,w,c
  4319  0046CA  6E47               	movwf	btemp+10,c
  4320  0046CC  6A48               	clrf	btemp+11,c
  4321                           
  4322                           ;stkvar	_k @ sp[(-5)+0]
  4323  0046CE  0EFB               	movlw	-5
  4324  0046D0  50E3               	movf	plusw1,w,c
  4325  0046D2  2647               	addwf	btemp+10,f,c
  4326  0046D4  0EFC               	movlw	-4
  4327  0046D6  50E3               	movf	plusw1,w,c
  4328  0046D8  2248               	addwfc	btemp+11,f,c
  4329  0046DA  0EFF               	movlw	255
  4330  0046DC  2447               	addwf	btemp+10,w,c
  4331  0046DE  6ED9               	movwf	fsr2l,c
  4332  0046E0  0EFF               	movlw	255
  4333  0046E2  2048               	addwfc	btemp+11,w,c
  4334  0046E4  6EDA               	movwf	fsr2h,c
  4335  0046E6  50DF               	movf	indf2,w,c
  4336  0046E8  6EE6               	movwf	postinc1,c
  4337  0046EA  EC35  F02D         	call	_UART1_put_buffer	;wreg free
  4338                           
  4339                           ;gemsecs.c: 447:   } else {
  4340  0046EE  D014               	goto	l7880
  4341  0046F0                     l7878:
  4342                           
  4343                           ;gemsecs.c: 449:    UART1_Write(k[i - 1]);
  4344                           ;stkvar	_i @ sp[(-5)+4]
  4345  0046F0  0EFF               	movlw	-1
  4346  0046F2  50E3               	movf	plusw1,w,c
  4347  0046F4  6E47               	movwf	btemp+10,c
  4348  0046F6  6A48               	clrf	btemp+11,c
  4349                           
  4350                           ;stkvar	_k @ sp[(-5)+0]
  4351  0046F8  0EFB               	movlw	-5
  4352  0046FA  50E3               	movf	plusw1,w,c
  4353  0046FC  2647               	addwf	btemp+10,f,c
  4354  0046FE  0EFC               	movlw	-4
  4355  004700  50E3               	movf	plusw1,w,c
  4356  004702  2248               	addwfc	btemp+11,f,c
  4357  004704  0EFF               	movlw	255
  4358  004706  2447               	addwf	btemp+10,w,c
  4359  004708  6ED9               	movwf	fsr2l,c
  4360  00470A  0EFF               	movlw	255
  4361  00470C  2048               	addwfc	btemp+11,w,c
  4362  00470E  6EDA               	movwf	fsr2h,c
  4363  004710  50DF               	movf	indf2,w,c
  4364  004712  6EE6               	movwf	postinc1,c
  4365  004714  EC26  F02C         	call	_UART1_Write	;wreg free
  4366  004718                     l7880:
  4367                           
  4368                           ; BSR set to: 57
  4369                           ;gemsecs.c: 451:  }
  4370                           ;stkvar	_i @ sp[(-5)+4]
  4371  004718  0EFF               	movlw	-1
  4372  00471A  06E3               	decf	plusw1,f,c
  4373  00471C  D7CC               	goto	l7870
  4374  00471E                     l1660:
  4375                           
  4376                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  4377  00471E  0EF7               	movlw	247
  4378  004720  26E1               	addwf	fsr1l,f,c
  4379  004722  0EFF               	movlw	255
  4380  004724  22E2               	addwfc	fsr1h,f,c
  4381  004726  0012               	return		;funcret
  4382  004728                     __end_of_secs_send:
  4383                           	opt callstack 0
  4384                           
  4385 ;; *************** function _block_checksum *****************
  4386 ;; Defined at:
  4387 ;;		line 18 in file "gemsecs.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  byte_block      2  [STACK] PTR unsigned char 
  4390 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  4391 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  4392 ;;  byte_count      2  [STACK] unsigned short 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  i               2  [STACK] unsigned short 
  4395 ;;  sum             2  [STACK] unsigned short 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  2  [STACK] unsigned short 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  4400 ;; Tracked objects:
  4401 ;;		On entry : 3F/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4409 ;;Total ram usage:        0 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    3
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_secs_send
  4416 ;; This function uses a reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text6
  4420  004BC2                     __ptext6:
  4421                           	opt callstack 0
  4422  004BC2                     _block_checksum:
  4423                           	opt callstack 0
  4424                           
  4425                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4426  004BC2  52E6               	movf	postinc1,f,c
  4427  004BC4  52E6               	movf	postinc1,f,c
  4428  004BC6  52E6               	movf	postinc1,f,c
  4429  004BC8  52E6               	movf	postinc1,f,c
  4430                           
  4431                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  4432                           ;stkvar	_sum @ sp[(-4)+2]
  4433                           
  4434                           ;incstack = 0
  4435  004BCA  0EFE               	movlw	-2
  4436  004BCC  6AE3               	clrf	plusw1,c
  4437  004BCE  0EFF               	movlw	-1
  4438  004BD0  6AE3               	clrf	plusw1,c
  4439                           
  4440                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  4441                           ;stkvar	_i @ sp[(-4)+0]
  4442  004BD2  0EFC               	movlw	-4
  4443  004BD4  6AE3               	clrf	plusw1,c
  4444  004BD6  0EFD               	movlw	-3
  4445  004BD8  6AE3               	clrf	plusw1,c
  4446  004BDA  D039               	goto	l7786
  4447  004BDC                     l7782:
  4448                           
  4449                           ;gemsecs.c: 23:   sum += byte_block[i];
  4450                           ;stkvar	_i @ sp[(-4)+0]
  4451  004BDC  0EFC               	movlw	-4
  4452  004BDE  006F FF8C  F047    	movff	plusw1,btemp+10
  4453  004BE4  0EFD               	movlw	-3
  4454  004BE6  006F FF8C  F048    	movff	plusw1,btemp+11
  4455                           
  4456                           ;stkvar	_byte_block @ sp[(-4)+-2]
  4457  004BEC  0EFA               	movlw	-6
  4458  004BEE  006F FF8C  F045    	movff	plusw1,btemp+8
  4459  004BF4  0EFB               	movlw	-5
  4460  004BF6  006F FF8C  F046    	movff	plusw1,btemp+9
  4461  004BFC  5047               	movf	btemp+10,w,c
  4462  004BFE  2445               	addwf	btemp+8,w,c
  4463  004C00  6ED9               	movwf	fsr2l,c
  4464  004C02  5048               	movf	btemp+11,w,c
  4465  004C04  2046               	addwfc	btemp+9,w,c
  4466  004C06  6EDA               	movwf	fsr2h,c
  4467  004C08  50DF               	movf	indf2,w,c
  4468  004C0A  6E48               	movwf	btemp+11,c
  4469                           
  4470                           ;stkvar	_sum @ sp[(-4)+2]
  4471  004C0C  0EFE               	movlw	-2
  4472  004C0E  50E3               	movf	plusw1,w,c
  4473  004C10  2448               	addwf	btemp+11,w,c
  4474  004C12  6E3D               	movwf	btemp,c
  4475  004C14  0EFE               	movlw	-2
  4476  004C16  0060  F0F7  FFE3   	movff	btemp,plusw1
  4477  004C1C  6A3D               	clrf	btemp,c
  4478  004C1E  0EFF               	movlw	-1
  4479  004C20  50E3               	movf	plusw1,w,c
  4480  004C22  223D               	addwfc	btemp,f,c
  4481  004C24  0EFF               	movlw	-1
  4482  004C26  0060  F0F7  FFE3   	movff	btemp,plusw1
  4483                           
  4484                           ;gemsecs.c: 24:  }
  4485                           ;stkvar	_i @ sp[(-4)+0]
  4486  004C2C  0EFC               	movlw	-4
  4487  004C2E  50E3               	movf	plusw1,w,c
  4488  004C30  0F01               	addlw	1
  4489  004C32  6E3D               	movwf	btemp,c
  4490  004C34  0EFC               	movlw	-4
  4491  004C36  0060  F0F7  FFE3   	movff	btemp,plusw1
  4492  004C3C  6A3D               	clrf	btemp,c
  4493  004C3E  0EFD               	movlw	-3
  4494  004C40  50E3               	movf	plusw1,w,c
  4495  004C42  203D               	addwfc	btemp,w,c
  4496  004C44  6E3D               	movwf	btemp,c
  4497  004C46  0EFD               	movlw	-3
  4498  004C48  0060  F0F7  FFE3   	movff	btemp,plusw1
  4499  004C4E                     l7786:
  4500                           
  4501                           ;stkvar	_byte_count @ sp[(-4)+-4]
  4502  004C4E  0EF8               	movlw	-8
  4503  004C50  006F FF8C  F047    	movff	plusw1,btemp+10
  4504  004C56  0EF9               	movlw	-7
  4505  004C58  006F FF8C  F048    	movff	plusw1,btemp+11
  4506                           
  4507                           ;stkvar	_i @ sp[(-4)+0]
  4508  004C5E  0EFC               	movlw	-4
  4509  004C60  006F FF8C  F045    	movff	plusw1,btemp+8
  4510  004C66  0EFD               	movlw	-3
  4511  004C68  006F FF8C  F046    	movff	plusw1,btemp+9
  4512  004C6E  5047               	movf	btemp+10,w,c
  4513  004C70  5C45               	subwf	btemp+8,w,c
  4514  004C72  5048               	movf	btemp+11,w,c
  4515  004C74  5846               	subwfb	btemp+9,w,c
  4516  004C76  A0D8               	btfss	status,0,c
  4517  004C78  D7B1               	goto	l7782
  4518                           
  4519                           ;gemsecs.c: 25:  return sum;
  4520                           ;stkvar	_sum @ sp[(-4)+2]
  4521  004C7A  0EFE               	movlw	-2
  4522  004C7C  006F FF8C  F03D    	movff	plusw1,btemp
  4523  004C82  0EFF               	movlw	-1
  4524  004C84  006F FF8C  F03E    	movff	plusw1,btemp+1
  4525                           
  4526                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4527  004C8A  0EF8               	movlw	248
  4528  004C8C  26E1               	addwf	fsr1l,f,c
  4529  004C8E  0EFF               	movlw	255
  4530  004C90  22E2               	addwfc	fsr1h,f,c
  4531  004C92  0012               	return		;funcret
  4532  004C94                     __end_of_block_checksum:
  4533                           	opt callstack 0
  4534                           
  4535 ;; *************** function _UART1_put_buffer *****************
  4536 ;; Defined at:
  4537 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  bufData         1  [STACK] unsigned char 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1  [STACK] void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 3F/39
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4555 ;;Total ram usage:        0 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    3
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;;		_t_protocol
  4563 ;;		_secs_send
  4564 ;; This function uses a reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text7
  4568  005A6A                     __ptext7:
  4569                           	opt callstack 0
  4570  005A6A                     _UART1_put_buffer:
  4571                           	opt callstack 25
  4572                           
  4573                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4574                           
  4575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4576                           ;incstack = 0
  4577  005A6A  0139               	movlb	57	; () banked
  4578  005A6C  9793               	bcf	147,3,b	;volatile
  4579                           
  4580                           ; BSR set to: 57
  4581                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4582                           ;stkvar	_bufData @ sp[(0)+-1]
  4583  005A6E  0E40               	movlw	low _uart1RxBuffer
  4584  005A70  2439               	addwf	_uart1RxHead,w,c	;volatile
  4585  005A72  6ED9               	movwf	fsr2l,c
  4586  005A74  6ADA               	clrf	fsr2h,c
  4587  005A76  0E02               	movlw	high _uart1RxBuffer
  4588  005A78  22DA               	addwfc	fsr2h,f,c
  4589  005A7A  0EFF               	movlw	-1
  4590  005A7C  006F FF8F FFDF     	movff	plusw1,indf2
  4591                           
  4592                           ; BSR set to: 57
  4593  005A82  2A39               	incf	_uart1RxHead,f,c	;volatile
  4594                           
  4595                           ; BSR set to: 57
  4596                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4597  005A84  0E3F               	movlw	63
  4598  005A86  6439               	cpfsgt	_uart1RxHead,c
  4599  005A88  D001               	goto	l7764
  4600                           
  4601                           ; BSR set to: 57
  4602                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4603  005A8A  6A39               	clrf	_uart1RxHead,c	;volatile
  4604  005A8C                     l7764:
  4605                           
  4606                           ; BSR set to: 57
  4607                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4608  005A8C  2A37               	incf	_uart1RxCount,f,c	;volatile
  4609                           
  4610                           ; BSR set to: 57
  4611                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4612  005A8E  8793               	bsf	147,3,b	;volatile
  4613                           
  4614                           ; BSR set to: 57
  4615                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4616  005A90  52E5               	movf	postdec1,f,c
  4617  005A92  0012               	return		;funcret
  4618  005A94                     __end_of_UART1_put_buffer:
  4619                           	opt callstack 0
  4620                           
  4621 ;; *************** function _UART1_is_tx_ready *****************
  4622 ;; Defined at:
  4623 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1  [STACK] unsigned char 
  4630 ;; Registers used:
  4631 ;;		btemp
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    3
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_secs_send
  4648 ;; This function uses a reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text8
  4652  006066                     __ptext8:
  4653                           	opt callstack 0
  4654  006066                     _UART1_is_tx_ready:
  4655                           	opt callstack 25
  4656                           
  4657                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4658                           
  4659                           ; BSR set to: 57
  4660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4661                           ;incstack = 0
  4662  006066  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4663                           
  4664                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4665  00606C  0012               	return		;funcret
  4666  00606E                     __end_of_UART1_is_tx_ready:
  4667                           	opt callstack 0
  4668                           
  4669 ;; *************** function _UART1_Write *****************
  4670 ;; Defined at:
  4671 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  txData          1  [STACK] unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1  [STACK] void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 3F/39
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    3
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_r_protocol
  4696 ;;		_t_protocol
  4697 ;;		_secs_send
  4698 ;; This function uses a reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text9
  4702  00584C                     __ptext9:
  4703                           	opt callstack 0
  4704  00584C                     _UART1_Write:
  4705                           	opt callstack 25
  4706                           
  4707                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4708                           
  4709                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4710                           
  4711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4712                           ;incstack = 0
  4713  00584C  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4714  00584E  B4D8               	btfsc	status,2,c
  4715  005850  D7FD               	goto	_UART1_Write
  4716                           
  4717                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4718  005852  0139               	movlb	57	; () banked
  4719  005854  B993               	btfsc	147,4,b	;volatile
  4720  005856  D005               	goto	l579
  4721                           
  4722                           ; BSR set to: 57
  4723                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4724                           ;stkvar	_txData @ sp[(0)+-1]
  4725  005858  0EFF               	movlw	-1
  4726  00585A  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4727                           
  4728                           ;mcc_generated_files/uart1.c: 186:  } else {
  4729  005860  D011               	goto	l7752
  4730  005862                     l579:
  4731                           
  4732                           ; BSR set to: 57
  4733                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4734  005862  9993               	bcf	147,4,b	;volatile
  4735                           
  4736                           ; BSR set to: 57
  4737                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4738                           ;stkvar	_txData @ sp[(0)+-1]
  4739  005864  0E80               	movlw	low _uart1TxBuffer
  4740  005866  243C               	addwf	_uart1TxHead,w,c	;volatile
  4741  005868  6ED9               	movwf	fsr2l,c
  4742  00586A  6ADA               	clrf	fsr2h,c
  4743  00586C  0E02               	movlw	high _uart1TxBuffer
  4744  00586E  22DA               	addwfc	fsr2h,f,c
  4745  005870  0EFF               	movlw	-1
  4746  005872  006F FF8F FFDF     	movff	plusw1,indf2
  4747                           
  4748                           ; BSR set to: 57
  4749  005878  2A3C               	incf	_uart1TxHead,f,c	;volatile
  4750                           
  4751                           ; BSR set to: 57
  4752                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4753  00587A  0E3F               	movlw	63
  4754  00587C  643C               	cpfsgt	_uart1TxHead,c
  4755  00587E  D001               	goto	l7750
  4756                           
  4757                           ; BSR set to: 57
  4758                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4759  005880  6A3C               	clrf	_uart1TxHead,c	;volatile
  4760  005882                     l7750:
  4761                           
  4762                           ; BSR set to: 57
  4763                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4764  005882  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4765  005884                     l7752:
  4766                           
  4767                           ; BSR set to: 57
  4768                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4769  005884  8993               	bsf	147,4,b	;volatile
  4770                           
  4771                           ; BSR set to: 57
  4772                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4773  005886  52E5               	movf	postdec1,f,c
  4774  005888  0012               	return		;funcret
  4775  00588A                     __end_of_UART1_Write:
  4776                           	opt callstack 0
  4777                           
  4778 ;; *************** function _m_protocol *****************
  4779 ;; Defined at:
  4780 ;;		line 42 in file "gemsecs.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  m_link          1  [STACK] PTR enum E16164
  4783 ;;		 -> V(87), 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  rxData          1  [STACK] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1  [STACK] enum E16902
  4788 ;; Registers used:
  4789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4799 ;;Total ram usage:        0 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    5
  4802 ;; This function calls:
  4803 ;;		_StartTimer
  4804 ;;		_TimerDone
  4805 ;;		_UART1_Read
  4806 ;;		_UART1_is_rx_ready
  4807 ;;		_UART2_Read
  4808 ;;		_UART2_is_rx_ready
  4809 ;;		_WaitMs
  4810 ;;		_run_checksum
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;; This function uses a reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text10
  4817  0020A4                     __ptext10:
  4818                           	opt callstack 0
  4819  0020A4                     _m_protocol:
  4820                           	opt callstack 0
  4821                           
  4822                           ; BSR set to: 57
  4823                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4824  0020A4  52E6               	movf	postinc1,f,c
  4825                           
  4826                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  4827                           
  4828                           ;incstack = 0
  4829  0020A6  D258               	goto	l8594
  4830  0020A8                     l8394:
  4831                           
  4832                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  4833  0020A8  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  4834  0020AC  503D               	movf	btemp,w,c
  4835  0020AE  B4D8               	btfsc	status,2,c
  4836  0020B0  D020               	goto	l8408
  4837                           
  4838                           ;gemsecs.c: 50:    rxData = UART1_Read();
  4839  0020B2  EC64  F02C         	call	_UART1_Read	;wreg free
  4840                           
  4841                           ;stkvar	_rxData @ sp[(-1)+0]
  4842  0020B6  0EFF               	movlw	-1
  4843  0020B8  0060  F0F7  FFE3   	movff	btemp,plusw1
  4844                           
  4845                           ; BSR set to: 57
  4846                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  4847                           ;stkvar	_rxData @ sp[(-1)+0]
  4848  0020BE  0EFF               	movlw	-1
  4849  0020C0  006F FF8C  F03D    	movff	plusw1,btemp
  4850  0020C6  0E05               	movlw	5
  4851  0020C8  183D               	xorwf	btemp,w,c
  4852  0020CA  A4D8               	btfss	status,2,c
  4853  0020CC  D012               	goto	l8408
  4854                           
  4855                           ; BSR set to: 57
  4856                           ;gemsecs.c: 52:     V.uart = 0;
  4857  0020CE  0100               	movlb	0	; () banked
  4858  0020D0  9FED               	bcf	(_V+86)& (0+255),7,b
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;gemsecs.c: 53:     StartTimer(TMR_T2, 2000);
  4862  0020D2  0ED0               	movlw	208
  4863  0020D4  6EE6               	movwf	postinc1,c
  4864  0020D6  0E07               	movlw	7
  4865  0020D8  6EE6               	movwf	postinc1,c
  4866  0020DA  0E02               	movlw	2
  4867  0020DC  6EE6               	movwf	postinc1,c
  4868  0020DE  ECA3  F02C         	call	_StartTimer	;wreg free
  4869                           
  4870                           ;gemsecs.c: 54:     V.error = LINK_ERROR_NONE;
  4871  0020E2  0100               	movlb	0	; () banked
  4872  0020E4  6BE6               	clrf	(_V+79)& (0+255),b
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;gemsecs.c: 55:     *m_link = LINK_STATE_ENQ;
  4876                           ;stkvar	_m_link @ sp[(-1)+-1]
  4877  0020E6  0EFE               	movlw	-2
  4878  0020E8  50E3               	movf	plusw1,w,c
  4879  0020EA  6ED9               	movwf	fsr2l,c
  4880  0020EC  6ADA               	clrf	fsr2h,c
  4881  0020EE  0E01               	movlw	1
  4882  0020F0  6EDF               	movwf	indf2,c
  4883  0020F2                     l8408:
  4884                           
  4885                           ;gemsecs.c: 58:   if (UART2_is_rx_ready()) {
  4886  0020F2  EC37  F030         	call	_UART2_is_rx_ready	;wreg free
  4887  0020F6  503D               	movf	btemp,w,c
  4888  0020F8  B4D8               	btfsc	status,2,c
  4889  0020FA  D24F               	goto	l8596
  4890                           
  4891                           ;gemsecs.c: 59:    rxData = UART2_Read();
  4892  0020FC  EC45  F02C         	call	_UART2_Read	;wreg free
  4893                           
  4894                           ;stkvar	_rxData @ sp[(-1)+0]
  4895  002100  0EFF               	movlw	-1
  4896  002102  0060  F0F7  FFE3   	movff	btemp,plusw1
  4897                           
  4898                           ; BSR set to: 57
  4899                           ;gemsecs.c: 60:    if (rxData == 0x05) {
  4900                           ;stkvar	_rxData @ sp[(-1)+0]
  4901  002108  0EFF               	movlw	-1
  4902  00210A  006F FF8C  F03D    	movff	plusw1,btemp
  4903  002110  0E05               	movlw	5
  4904  002112  183D               	xorwf	btemp,w,c
  4905  002114  A4D8               	btfss	status,2,c
  4906  002116  D241               	goto	l8596
  4907                           
  4908                           ; BSR set to: 57
  4909                           ;gemsecs.c: 61:     V.uart = 1;
  4910  002118  0100               	movlb	0	; () banked
  4911  00211A  8FED               	bsf	(_V+86)& (0+255),7,b
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;gemsecs.c: 62:     StartTimer(TMR_T2, 2000);
  4915  00211C  0ED0               	movlw	208
  4916  00211E  6EE6               	movwf	postinc1,c
  4917  002120  0E07               	movlw	7
  4918  002122  6EE6               	movwf	postinc1,c
  4919  002124  0E02               	movlw	2
  4920  002126  6EE6               	movwf	postinc1,c
  4921  002128  ECA3  F02C         	call	_StartTimer	;wreg free
  4922                           
  4923                           ;gemsecs.c: 63:     V.error = LINK_ERROR_NONE;
  4924  00212C  0100               	movlb	0	; () banked
  4925  00212E  6BE6               	clrf	(_V+79)& (0+255),b
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;gemsecs.c: 64:     *m_link = LINK_STATE_ENQ;
  4929                           ;stkvar	_m_link @ sp[(-1)+-1]
  4930  002130  0EFE               	movlw	-2
  4931  002132  50E3               	movf	plusw1,w,c
  4932  002134  6ED9               	movwf	fsr2l,c
  4933  002136  6ADA               	clrf	fsr2h,c
  4934  002138  0E01               	movlw	1
  4935  00213A  D20C               	goto	L18
  4936  00213C                     l8422:
  4937                           
  4938                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  4939  00213C  0E02               	movlw	2
  4940  00213E  6EE6               	movwf	postinc1,c
  4941  002140  ECEF  F02E         	call	_TimerDone	;wreg free
  4942  002144  503D               	movf	btemp,w,c
  4943  002146  B4D8               	btfsc	status,2,c
  4944  002148  D00D               	goto	l8428
  4945                           
  4946                           ;gemsecs.c: 70:    V.error = LINK_ERROR_T2;
  4947  00214A  0E02               	movlw	2
  4948  00214C  0100               	movlb	0	; () banked
  4949  00214E  6FE6               	movwf	(_V+79)& (0+255),b
  4950                           
  4951                           ;gemsecs.c: 71:    V.failed_receive = 1;
  4952  002150  51ED               	movf	(_V+86)& (0+255),w,b
  4953  002152  0BF0               	andlw	-16
  4954  002154  0901               	iorlw	1
  4955  002156                     L15:
  4956  002156  6FED               	movwf	(_V+86)& (0+255),b
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;gemsecs.c: 72:    *m_link = LINK_STATE_NAK;
  4960                           ;stkvar	_m_link @ sp[(-1)+-1]
  4961  002158  0EFE               	movlw	-2
  4962  00215A  50E3               	movf	plusw1,w,c
  4963  00215C  6ED9               	movwf	fsr2l,c
  4964  00215E  6ADA               	clrf	fsr2h,c
  4965  002160  0E05               	movlw	5
  4966  002162  D1F8               	goto	L18
  4967  002164                     l8428:
  4968                           
  4969                           ;gemsecs.c: 74:    if (UART1_is_rx_ready()) {
  4970  002164  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  4971  002168  503D               	movf	btemp,w,c
  4972  00216A  B4D8               	btfsc	status,2,c
  4973  00216C  D021               	goto	l8442
  4974                           
  4975                           ;gemsecs.c: 75:     rxData = UART1_Read();
  4976  00216E  EC64  F02C         	call	_UART1_Read	;wreg free
  4977                           
  4978                           ;stkvar	_rxData @ sp[(-1)+0]
  4979  002172  0EFF               	movlw	-1
  4980  002174  0060  F0F7  FFE3   	movff	btemp,plusw1
  4981                           
  4982                           ; BSR set to: 57
  4983                           ;gemsecs.c: 76:     if (rxData == 0x04) {
  4984                           ;stkvar	_rxData @ sp[(-1)+0]
  4985  00217A  0EFF               	movlw	-1
  4986  00217C  006F FF8C  F03D    	movff	plusw1,btemp
  4987  002182  0E04               	movlw	4
  4988  002184  183D               	xorwf	btemp,w,c
  4989  002186  A4D8               	btfss	status,2,c
  4990  002188  D013               	goto	l8442
  4991                           
  4992                           ; BSR set to: 57
  4993                           ;gemsecs.c: 77:      V.uart = 1;
  4994  00218A  0100               	movlb	0	; () banked
  4995  00218C  8FED               	bsf	(_V+86)& (0+255),7,b
  4996                           
  4997                           ;gemsecs.c: 78:      rxData_l = 0;
  4998  00218E  6A30               	clrf	m_protocol@rxData_l,c
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;gemsecs.c: 79:      StartTimer(TMR_T2, 2000);
  5002  002190  0ED0               	movlw	208
  5003  002192  6EE6               	movwf	postinc1,c
  5004  002194  0E07               	movlw	7
  5005  002196  6EE6               	movwf	postinc1,c
  5006  002198  0E02               	movlw	2
  5007  00219A  6EE6               	movwf	postinc1,c
  5008  00219C  ECA3  F02C         	call	_StartTimer	;wreg free
  5009                           
  5010                           ;gemsecs.c: 80:      V.error = LINK_ERROR_NONE;
  5011  0021A0  0100               	movlb	0	; () banked
  5012  0021A2  6BE6               	clrf	(_V+79)& (0+255),b
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;gemsecs.c: 81:      *m_link = LINK_STATE_EOT;
  5016                           ;stkvar	_m_link @ sp[(-1)+-1]
  5017  0021A4  0EFE               	movlw	-2
  5018  0021A6  50E3               	movf	plusw1,w,c
  5019  0021A8  6ED9               	movwf	fsr2l,c
  5020  0021AA  6ADA               	clrf	fsr2h,c
  5021  0021AC  0E02               	movlw	2
  5022  0021AE  6EDF               	movwf	indf2,c
  5023  0021B0                     l8442:
  5024                           
  5025                           ;gemsecs.c: 84:    if (UART2_is_rx_ready()) {
  5026  0021B0  EC37  F030         	call	_UART2_is_rx_ready	;wreg free
  5027  0021B4  503D               	movf	btemp,w,c
  5028  0021B6  B4D8               	btfsc	status,2,c
  5029  0021B8  D1F0               	goto	l8596
  5030                           
  5031                           ;gemsecs.c: 85:     rxData = UART2_Read();
  5032  0021BA  EC45  F02C         	call	_UART2_Read	;wreg free
  5033                           
  5034                           ;stkvar	_rxData @ sp[(-1)+0]
  5035  0021BE  0EFF               	movlw	-1
  5036  0021C0  0060  F0F7  FFE3   	movff	btemp,plusw1
  5037                           
  5038                           ; BSR set to: 57
  5039                           ;gemsecs.c: 86:     if (rxData == 0x04) {
  5040                           ;stkvar	_rxData @ sp[(-1)+0]
  5041  0021C6  0EFF               	movlw	-1
  5042  0021C8  006F FF8C  F03D    	movff	plusw1,btemp
  5043  0021CE  0E04               	movlw	4
  5044  0021D0  183D               	xorwf	btemp,w,c
  5045  0021D2  A4D8               	btfss	status,2,c
  5046  0021D4  D1E2               	goto	l8596
  5047                           
  5048                           ; BSR set to: 57
  5049                           ;gemsecs.c: 87:      V.uart = 0;
  5050  0021D6  0100               	movlb	0	; () banked
  5051  0021D8  9FED               	bcf	(_V+86)& (0+255),7,b
  5052                           
  5053                           ;gemsecs.c: 88:      rxData_l = 0;
  5054  0021DA  6A30               	clrf	m_protocol@rxData_l,c
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;gemsecs.c: 89:      StartTimer(TMR_T2, 2000);
  5058  0021DC  0ED0               	movlw	208
  5059  0021DE  6EE6               	movwf	postinc1,c
  5060  0021E0  0E07               	movlw	7
  5061  0021E2  6EE6               	movwf	postinc1,c
  5062  0021E4  0E02               	movlw	2
  5063  0021E6  6EE6               	movwf	postinc1,c
  5064  0021E8  ECA3  F02C         	call	_StartTimer	;wreg free
  5065                           
  5066                           ;gemsecs.c: 90:      V.error = LINK_ERROR_NONE;
  5067  0021EC  0100               	movlb	0	; () banked
  5068  0021EE  6BE6               	clrf	(_V+79)& (0+255),b
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;gemsecs.c: 91:      *m_link = LINK_STATE_EOT;
  5072                           ;stkvar	_m_link @ sp[(-1)+-1]
  5073  0021F0  0EFE               	movlw	-2
  5074  0021F2  50E3               	movf	plusw1,w,c
  5075  0021F4  6ED9               	movwf	fsr2l,c
  5076  0021F6  6ADA               	clrf	fsr2h,c
  5077  0021F8  0E02               	movlw	2
  5078  0021FA  D1AC               	goto	L18
  5079  0021FC                     l8456:
  5080                           
  5081                           ;gemsecs.c: 97:   if (TimerDone(TMR_T2)) {
  5082  0021FC  0E02               	movlw	2
  5083  0021FE  6EE6               	movwf	postinc1,c
  5084  002200  ECEF  F02E         	call	_TimerDone	;wreg free
  5085  002204  503D               	movf	btemp,w,c
  5086  002206  B4D8               	btfsc	status,2,c
  5087  002208  D007               	goto	l8462
  5088                           
  5089                           ;gemsecs.c: 98:    V.error = LINK_ERROR_T2;
  5090  00220A  0E02               	movlw	2
  5091  00220C  0100               	movlb	0	; () banked
  5092  00220E  6FE6               	movwf	(_V+79)& (0+255),b
  5093                           
  5094                           ;gemsecs.c: 99:    V.failed_receive = 2;
  5095  002210  51ED               	movf	(_V+86)& (0+255),w,b
  5096  002212  0BF0               	andlw	-16
  5097  002214  0902               	iorlw	2
  5098  002216  D79F               	goto	L15
  5099  002218                     l8462:
  5100                           
  5101                           ;gemsecs.c: 102:    if (UART1_is_rx_ready() && (V.uart == 0)) {
  5102  002218  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  5103  00221C  503D               	movf	btemp,w,c
  5104  00221E  B4D8               	btfsc	status,2,c
  5105  002220  D0A8               	goto	l8512
  5106  002222  0100               	movlb	0	; () banked
  5107  002224  BFED               	btfsc	(_V+86)& (0+255),7,b
  5108  002226  D0A5               	goto	l8512
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;gemsecs.c: 103:     rxData = UART1_Read();
  5112  002228  EC64  F02C         	call	_UART1_Read	;wreg free
  5113                           
  5114                           ;stkvar	_rxData @ sp[(-1)+0]
  5115  00222C  0EFF               	movlw	-1
  5116  00222E  0060  F0F7  FFE3   	movff	btemp,plusw1
  5117                           
  5118                           ; BSR set to: 57
  5119                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  5120  002234  5030               	movf	m_protocol@rxData_l,w,c
  5121  002236  A4D8               	btfss	status,2,c
  5122  002238  D00C               	goto	l8476
  5123                           
  5124                           ; BSR set to: 57
  5125                           ;gemsecs.c: 105:      r_block.length = rxData;
  5126                           ;stkvar	_rxData @ sp[(-1)+0]
  5127  00223A  0EFF               	movlw	-1
  5128  00223C  006F FF8C  F06C    	movff	plusw1,_r_block+12
  5129                           
  5130                           ; BSR set to: 57
  5131                           ;gemsecs.c: 106:      run_checksum(0, 1);
  5132  002242  0E01               	movlw	1
  5133  002244  6EE6               	movwf	postinc1,c
  5134  002246  0E00               	movlw	0
  5135  002248  6EE6               	movwf	postinc1,c
  5136  00224A  ECDD  F02C         	call	_run_checksum	;wreg free
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;gemsecs.c: 107:      rxData_l++;
  5140  00224E  2A30               	incf	m_protocol@rxData_l,f,c
  5141                           
  5142                           ;gemsecs.c: 108:     } else {
  5143  002250  D090               	goto	l8512
  5144  002252                     l8476:
  5145                           
  5146                           ; BSR set to: 57
  5147                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  5148  002252  0E0B               	movlw	11
  5149  002254  6030               	cpfslt	m_protocol@rxData_l,c
  5150  002256  D00C               	goto	l8480
  5151                           
  5152                           ; BSR set to: 57
  5153                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5154                           ;stkvar	_rxData @ sp[(-1)+0]
  5155  002258  5030               	movf	m_protocol@rxData_l,w,c
  5156  00225A  0819               	sublw	low (_H10+25)
  5157  00225C  6ED9               	movwf	fsr2l,c
  5158  00225E  0E00               	movlw	0
  5159  002260  A0D8               	btfss	status,0,c
  5160  002262  2AE8               	incf	wreg,f,c
  5161  002264  0801               	sublw	high (_H10+25)
  5162  002266  6EDA               	movwf	fsr2h,c
  5163  002268  0EFF               	movlw	-1
  5164  00226A  006F FF8F FFDF     	movff	plusw1,indf2
  5165  002270                     l8480:
  5166                           
  5167                           ; BSR set to: 57
  5168                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  5169  002270  5030               	movf	m_protocol@rxData_l,w,c
  5170  002272  0100               	movlb	0	; () banked
  5171  002274  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  5172  002276  A0D8               	btfss	status,0,c
  5173  002278  D00D               	goto	l8484
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  5177  00227A  0E00               	movlw	0
  5178  00227C  6EE6               	movwf	postinc1,c
  5179                           
  5180                           ;stkvar	_rxData @ sp[(-2)+0]
  5181  00227E  0EFE               	movlw	-2
  5182  002280  50E3               	movf	plusw1,w,c
  5183  002282  6EE6               	movwf	postinc1,c
  5184  002284  ECDD  F02C         	call	_run_checksum	;wreg free
  5185  002288  0060  F0F4  F0E8   	movff	btemp,_V+81
  5186  00228E  0060  F0F8  F0E9   	movff	btemp+1,_V+82
  5187  002294                     l8484:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  5191  002294  5030               	movf	m_protocol@rxData_l,w,c
  5192  002296  6E47               	movwf	btemp+10,c
  5193  002298  6A48               	clrf	btemp+11,c
  5194  00229A  516C               	movf	(_r_block+12)& (0+255),w,b
  5195  00229C  6E45               	movwf	btemp+8,c
  5196  00229E  6A46               	clrf	btemp+9,c
  5197  0022A0  0E01               	movlw	1
  5198  0022A2  2645               	addwf	btemp+8,f,c
  5199  0022A4  0E00               	movlw	0
  5200  0022A6  2246               	addwfc	btemp+9,f,c
  5201  0022A8  5047               	movf	btemp+10,w,c
  5202  0022AA  1845               	xorwf	btemp+8,w,c
  5203  0022AC  E109               	bnz	l8488
  5204  0022AE  5048               	movf	btemp+11,w,c
  5205  0022B0  1846               	xorwf	btemp+9,w,c
  5206  0022B2  A4D8               	btfss	status,2,c
  5207  0022B4  D005               	goto	l8488
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  5211                           ;stkvar	_rxData @ sp[(-1)+0]
  5212  0022B6  0EFF               	movlw	-1
  5213  0022B8  50E3               	movf	plusw1,w,c
  5214  0022BA  0101               	movlb	1	; () banked
  5215  0022BC  6F0E               	movwf	(_H10+14)& (0+255),b
  5216  0022BE  6B0D               	clrf	(_H10+13)& (0+255),b
  5217  0022C0                     l8488:
  5218                           
  5219                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  5220  0022C0  5030               	movf	m_protocol@rxData_l,w,c
  5221  0022C2  6E47               	movwf	btemp+10,c
  5222  0022C4  6A48               	clrf	btemp+11,c
  5223  0022C6  0100               	movlb	0	; () banked
  5224  0022C8  516C               	movf	(_r_block+12)& (0+255),w,b
  5225  0022CA  6E45               	movwf	btemp+8,c
  5226  0022CC  6A46               	clrf	btemp+9,c
  5227  0022CE  0E02               	movlw	2
  5228  0022D0  2645               	addwf	btemp+8,f,c
  5229  0022D2  0E00               	movlw	0
  5230  0022D4  2246               	addwfc	btemp+9,f,c
  5231  0022D6  5047               	movf	btemp+10,w,c
  5232  0022D8  1845               	xorwf	btemp+8,w,c
  5233  0022DA  E10A               	bnz	l8492
  5234  0022DC  5048               	movf	btemp+11,w,c
  5235  0022DE  1846               	xorwf	btemp+9,w,c
  5236  0022E0  A4D8               	btfss	status,2,c
  5237  0022E2  D006               	goto	l8492
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  5241                           ;stkvar	_rxData @ sp[(-1)+0]
  5242  0022E4  0EFF               	movlw	-1
  5243  0022E6  50E3               	movf	plusw1,w,c
  5244  0022E8  0101               	movlb	1	; () banked
  5245  0022EA  270D               	addwf	(_H10+13)& (0+255),f,b
  5246  0022EC  0E00               	movlw	0
  5247  0022EE  230E               	addwfc	(_H10+14)& (0+255),f,b
  5248  0022F0                     l8492:
  5249                           
  5250                           ;gemsecs.c: 122:      rxData_l++;
  5251  0022F0  2A30               	incf	m_protocol@rxData_l,f,c
  5252                           
  5253                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  5254  0022F2  5030               	movf	m_protocol@rxData_l,w,c
  5255  0022F4  6E47               	movwf	btemp+10,c
  5256  0022F6  6A48               	clrf	btemp+11,c
  5257  0022F8  0100               	movlb	0	; () banked
  5258  0022FA  516C               	movf	(_r_block+12)& (0+255),w,b
  5259  0022FC  6E45               	movwf	btemp+8,c
  5260  0022FE  6A46               	clrf	btemp+9,c
  5261  002300  0E02               	movlw	2
  5262  002302  2645               	addwf	btemp+8,f,c
  5263  002304  0E00               	movlw	0
  5264  002306  2246               	addwfc	btemp+9,f,c
  5265  002308  5047               	movf	btemp+10,w,c
  5266  00230A  5C45               	subwf	btemp+8,w,c
  5267  00230C  5046               	movf	btemp+9,w,c
  5268  00230E  0A80               	xorlw	128
  5269  002310  6E3D               	movwf	btemp,c
  5270  002312  5048               	movf	btemp+11,w,c
  5271  002314  0A80               	xorlw	128
  5272  002316  583D               	subwfb	btemp,w,c
  5273  002318  B0D8               	btfsc	status,0,c
  5274  00231A  D02B               	goto	l8512
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  5278  00231C  0101               	movlb	1	; () banked
  5279  00231E  510D               	movf	(_H10+13)& (0+255),w,b
  5280  002320  0100               	movlb	0	; () banked
  5281  002322  19E8               	xorwf	(_V+81)& (0+255),w,b
  5282  002324  E10E               	bnz	l8502
  5283  002326  0101               	movlb	1	; () banked
  5284  002328  510E               	movf	(_H10+14)& (0+255),w,b
  5285  00232A  0100               	movlb	0	; () banked
  5286  00232C  19E9               	xorwf	(_V+82)& (0+255),w,b
  5287  00232E  A4D8               	btfss	status,2,c
  5288  002330  D008               	goto	l8502
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  5292                           ;stkvar	_m_link @ sp[(-1)+-1]
  5293  002332  0EFE               	movlw	-2
  5294  002334  50E3               	movf	plusw1,w,c
  5295  002336  6ED9               	movwf	fsr2l,c
  5296  002338  6ADA               	clrf	fsr2h,c
  5297  00233A  0E03               	movlw	3
  5298  00233C  D019               	goto	L16
  5299  00233E                     l8500:
  5300  00233E  EC64  F02C         	call	_UART1_Read	;wreg free
  5301  002342                     l8502:
  5302                           
  5303                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  5304  002342  EC3B  F030         	call	_UART1_is_rx_ready	;wreg free
  5305  002346  503D               	movf	btemp,w,c
  5306  002348  A4D8               	btfss	status,2,c
  5307  00234A  D7F9               	goto	l8500
  5308                           
  5309                           ;gemsecs.c: 129:        WaitMs(500);
  5310  00234C  0EF4               	movlw	244
  5311  00234E  6EE6               	movwf	postinc1,c
  5312  002350  0E01               	movlw	1
  5313  002352  6EE6               	movwf	postinc1,c
  5314  002354  EC4A  F02D         	call	_WaitMs	;wreg free
  5315                           
  5316                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  5317  002358  0E05               	movlw	5
  5318  00235A  0100               	movlb	0	; () banked
  5319  00235C  6FE6               	movwf	(_V+79)& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;gemsecs.c: 131:        V.failed_receive = 3;
  5323  00235E  51ED               	movf	(_V+86)& (0+255),w,b
  5324  002360  0BF0               	andlw	-16
  5325  002362  0903               	iorlw	3
  5326  002364  6FED               	movwf	(_V+86)& (0+255),b
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;gemsecs.c: 132:        *m_link = LINK_STATE_NAK;
  5330                           ;stkvar	_m_link @ sp[(-1)+-1]
  5331  002366  0EFE               	movlw	-2
  5332  002368  50E3               	movf	plusw1,w,c
  5333  00236A  6ED9               	movwf	fsr2l,c
  5334  00236C  6ADA               	clrf	fsr2h,c
  5335  00236E  0E05               	movlw	5
  5336  002370                     L16:
  5337  002370  6EDF               	movwf	indf2,c
  5338  002372                     l8512:
  5339                           
  5340                           ;gemsecs.c: 138:    if (UART2_is_rx_ready() && (V.uart == 1)) {
  5341  002372  EC37  F030         	call	_UART2_is_rx_ready	;wreg free
  5342  002376  503D               	movf	btemp,w,c
  5343  002378  B4D8               	btfsc	status,2,c
  5344  00237A  D10F               	goto	l8596
  5345  00237C  0100               	movlb	0	; () banked
  5346  00237E  AFED               	btfss	(_V+86)& (0+255),7,b
  5347  002380  D10C               	goto	l8596
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;gemsecs.c: 139:     rxData = UART2_Read();
  5351  002382  EC45  F02C         	call	_UART2_Read	;wreg free
  5352                           
  5353                           ;stkvar	_rxData @ sp[(-1)+0]
  5354  002386  0EFF               	movlw	-1
  5355  002388  0060  F0F7  FFE3   	movff	btemp,plusw1
  5356                           
  5357                           ; BSR set to: 57
  5358                           ;gemsecs.c: 140:     if (rxData_l == 0) {
  5359  00238E  5030               	movf	m_protocol@rxData_l,w,c
  5360  002390  A4D8               	btfss	status,2,c
  5361  002392  D00C               	goto	l8526
  5362                           
  5363                           ; BSR set to: 57
  5364                           ;gemsecs.c: 141:      r_block.length = rxData;
  5365                           ;stkvar	_rxData @ sp[(-1)+0]
  5366  002394  0EFF               	movlw	-1
  5367  002396  006F FF8C  F06C    	movff	plusw1,_r_block+12
  5368                           
  5369                           ; BSR set to: 57
  5370                           ;gemsecs.c: 142:      run_checksum(0, 1);
  5371  00239C  0E01               	movlw	1
  5372  00239E  6EE6               	movwf	postinc1,c
  5373  0023A0  0E00               	movlw	0
  5374  0023A2  6EE6               	movwf	postinc1,c
  5375  0023A4  ECDD  F02C         	call	_run_checksum	;wreg free
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;gemsecs.c: 143:      rxData_l++;
  5379  0023A8  2A30               	incf	m_protocol@rxData_l,f,c
  5380                           
  5381                           ;gemsecs.c: 144:     } else {
  5382  0023AA  D0F7               	goto	l8596
  5383  0023AC                     l8526:
  5384                           
  5385                           ; BSR set to: 57
  5386                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
  5387  0023AC  0E0B               	movlw	11
  5388  0023AE  6030               	cpfslt	m_protocol@rxData_l,c
  5389  0023B0  D00C               	goto	l8530
  5390                           
  5391                           ; BSR set to: 57
  5392                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5393                           ;stkvar	_rxData @ sp[(-1)+0]
  5394  0023B2  5030               	movf	m_protocol@rxData_l,w,c
  5395  0023B4  0819               	sublw	low (_H10+25)
  5396  0023B6  6ED9               	movwf	fsr2l,c
  5397  0023B8  0E00               	movlw	0
  5398  0023BA  A0D8               	btfss	status,0,c
  5399  0023BC  2AE8               	incf	wreg,f,c
  5400  0023BE  0801               	sublw	high (_H10+25)
  5401  0023C0  6EDA               	movwf	fsr2h,c
  5402  0023C2  0EFF               	movlw	-1
  5403  0023C4  006F FF8F FFDF     	movff	plusw1,indf2
  5404  0023CA                     l8530:
  5405                           
  5406                           ; BSR set to: 57
  5407                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
  5408  0023CA  5030               	movf	m_protocol@rxData_l,w,c
  5409  0023CC  0100               	movlb	0	; () banked
  5410  0023CE  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  5411  0023D0  A0D8               	btfss	status,0,c
  5412  0023D2  D00D               	goto	l8534
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
  5416  0023D4  0E00               	movlw	0
  5417  0023D6  6EE6               	movwf	postinc1,c
  5418                           
  5419                           ;stkvar	_rxData @ sp[(-2)+0]
  5420  0023D8  0EFE               	movlw	-2
  5421  0023DA  50E3               	movf	plusw1,w,c
  5422  0023DC  6EE6               	movwf	postinc1,c
  5423  0023DE  ECDD  F02C         	call	_run_checksum	;wreg free
  5424  0023E2  0060  F0F4  F0E8   	movff	btemp,_V+81
  5425  0023E8  0060  F0F8  F0E9   	movff	btemp+1,_V+82
  5426  0023EE                     l8534:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
  5430  0023EE  5030               	movf	m_protocol@rxData_l,w,c
  5431  0023F0  6E47               	movwf	btemp+10,c
  5432  0023F2  6A48               	clrf	btemp+11,c
  5433  0023F4  516C               	movf	(_r_block+12)& (0+255),w,b
  5434  0023F6  6E45               	movwf	btemp+8,c
  5435  0023F8  6A46               	clrf	btemp+9,c
  5436  0023FA  0E01               	movlw	1
  5437  0023FC  2645               	addwf	btemp+8,f,c
  5438  0023FE  0E00               	movlw	0
  5439  002400  2246               	addwfc	btemp+9,f,c
  5440  002402  5047               	movf	btemp+10,w,c
  5441  002404  1845               	xorwf	btemp+8,w,c
  5442  002406  E109               	bnz	l8538
  5443  002408  5048               	movf	btemp+11,w,c
  5444  00240A  1846               	xorwf	btemp+9,w,c
  5445  00240C  A4D8               	btfss	status,2,c
  5446  00240E  D005               	goto	l8538
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
  5450                           ;stkvar	_rxData @ sp[(-1)+0]
  5451  002410  0EFF               	movlw	-1
  5452  002412  50E3               	movf	plusw1,w,c
  5453  002414  0101               	movlb	1	; () banked
  5454  002416  6F0E               	movwf	(_H10+14)& (0+255),b
  5455  002418  6B0D               	clrf	(_H10+13)& (0+255),b
  5456  00241A                     l8538:
  5457                           
  5458                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
  5459  00241A  5030               	movf	m_protocol@rxData_l,w,c
  5460  00241C  6E47               	movwf	btemp+10,c
  5461  00241E  6A48               	clrf	btemp+11,c
  5462  002420  0100               	movlb	0	; () banked
  5463  002422  516C               	movf	(_r_block+12)& (0+255),w,b
  5464  002424  6E45               	movwf	btemp+8,c
  5465  002426  6A46               	clrf	btemp+9,c
  5466  002428  0E02               	movlw	2
  5467  00242A  2645               	addwf	btemp+8,f,c
  5468  00242C  0E00               	movlw	0
  5469  00242E  2246               	addwfc	btemp+9,f,c
  5470  002430  5047               	movf	btemp+10,w,c
  5471  002432  1845               	xorwf	btemp+8,w,c
  5472  002434  E10A               	bnz	l8542
  5473  002436  5048               	movf	btemp+11,w,c
  5474  002438  1846               	xorwf	btemp+9,w,c
  5475  00243A  A4D8               	btfss	status,2,c
  5476  00243C  D006               	goto	l8542
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
  5480                           ;stkvar	_rxData @ sp[(-1)+0]
  5481  00243E  0EFF               	movlw	-1
  5482  002440  50E3               	movf	plusw1,w,c
  5483  002442  0101               	movlb	1	; () banked
  5484  002444  270D               	addwf	(_H10+13)& (0+255),f,b
  5485  002446  0E00               	movlw	0
  5486  002448  230E               	addwfc	(_H10+14)& (0+255),f,b
  5487  00244A                     l8542:
  5488                           
  5489                           ;gemsecs.c: 158:      rxData_l++;
  5490  00244A  2A30               	incf	m_protocol@rxData_l,f,c
  5491                           
  5492                           ;gemsecs.c: 159:      if (rxData_l > (r_block.length + 2)) {
  5493  00244C  5030               	movf	m_protocol@rxData_l,w,c
  5494  00244E  6E47               	movwf	btemp+10,c
  5495  002450  6A48               	clrf	btemp+11,c
  5496  002452  0100               	movlb	0	; () banked
  5497  002454  516C               	movf	(_r_block+12)& (0+255),w,b
  5498  002456  6E45               	movwf	btemp+8,c
  5499  002458  6A46               	clrf	btemp+9,c
  5500  00245A  0E02               	movlw	2
  5501  00245C  2645               	addwf	btemp+8,f,c
  5502  00245E  0E00               	movlw	0
  5503  002460  2246               	addwfc	btemp+9,f,c
  5504  002462  5047               	movf	btemp+10,w,c
  5505  002464  5C45               	subwf	btemp+8,w,c
  5506  002466  5046               	movf	btemp+9,w,c
  5507  002468  0A80               	xorlw	128
  5508  00246A  6E3D               	movwf	btemp,c
  5509  00246C  5048               	movf	btemp+11,w,c
  5510  00246E  0A80               	xorlw	128
  5511  002470  583D               	subwfb	btemp,w,c
  5512  002472  B0D8               	btfsc	status,0,c
  5513  002474  D092               	goto	l8596
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;gemsecs.c: 160:       if (V.r_checksum == H10[1].checksum) {
  5517  002476  0101               	movlb	1	; () banked
  5518  002478  510D               	movf	(_H10+13)& (0+255),w,b
  5519  00247A  0100               	movlb	0	; () banked
  5520  00247C  19E8               	xorwf	(_V+81)& (0+255),w,b
  5521  00247E  E10E               	bnz	l8552
  5522  002480  0101               	movlb	1	; () banked
  5523  002482  510E               	movf	(_H10+14)& (0+255),w,b
  5524  002484  0100               	movlb	0	; () banked
  5525  002486  19E9               	xorwf	(_V+82)& (0+255),w,b
  5526  002488  A4D8               	btfss	status,2,c
  5527  00248A  D008               	goto	l8552
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;gemsecs.c: 161:        *m_link = LINK_STATE_ACK;
  5531                           ;stkvar	_m_link @ sp[(-1)+-1]
  5532  00248C  0EFE               	movlw	-2
  5533  00248E  50E3               	movf	plusw1,w,c
  5534  002490  6ED9               	movwf	fsr2l,c
  5535  002492  6ADA               	clrf	fsr2h,c
  5536  002494  0E03               	movlw	3
  5537  002496  D05E               	goto	L18
  5538  002498                     l8550:
  5539  002498  EC45  F02C         	call	_UART2_Read	;wreg free
  5540  00249C                     l8552:
  5541                           
  5542                           ;gemsecs.c: 163:        while (UART2_is_rx_ready())
  5543  00249C  EC37  F030         	call	_UART2_is_rx_ready	;wreg free
  5544  0024A0  503D               	movf	btemp,w,c
  5545  0024A2  A4D8               	btfss	status,2,c
  5546  0024A4  D7F9               	goto	l8550
  5547                           
  5548                           ;gemsecs.c: 165:        WaitMs(500);
  5549  0024A6  0EF4               	movlw	244
  5550  0024A8  6EE6               	movwf	postinc1,c
  5551  0024AA  0E01               	movlw	1
  5552  0024AC  6EE6               	movwf	postinc1,c
  5553  0024AE  EC4A  F02D         	call	_WaitMs	;wreg free
  5554                           
  5555                           ;gemsecs.c: 166:        V.error = LINK_ERROR_CHECKSUM;
  5556  0024B2  0E05               	movlw	5
  5557  0024B4  0100               	movlb	0	; () banked
  5558  0024B6  6FE6               	movwf	(_V+79)& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;gemsecs.c: 167:        V.failed_receive = 4;
  5562  0024B8  51ED               	movf	(_V+86)& (0+255),w,b
  5563  0024BA  0BF0               	andlw	-16
  5564  0024BC  0904               	iorlw	4
  5565  0024BE  D64B               	goto	L15
  5566  0024C0                     l8562:
  5567                           
  5568                           ;gemsecs.c: 176:   V.stream = H10[1].block.block.stream;
  5569  0024C0  0101               	movlb	1	; () banked
  5570  0024C2  5116               	movf	(_H10+22)& (0+255),w,b
  5571  0024C4  0B7F               	andlw	127
  5572  0024C6  0100               	movlb	0	; () banked
  5573  0024C8  6FE4               	movwf	(_V+77)& (0+255),b
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;gemsecs.c: 177:   V.function = H10[1].block.block.function;
  5577  0024CA  C115  F0E5         	movff	_H10+21,_V+78
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;gemsecs.c: 178:   V.systemb = H10[1].block.block.systemb;
  5581  0024CE  C10F  F0E0         	movff	_H10+15,_V+73
  5582  0024D2  C110  F0E1         	movff	_H10+16,_V+74
  5583  0024D6  C111  F0E2         	movff	_H10+17,_V+75
  5584  0024DA  C112  F0E3         	movff	_H10+18,_V+76
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;gemsecs.c: 179:   V.rbit = H10[1].block.block.rbit;
  5588  0024DE  0101               	movlb	1	; () banked
  5589  0024E0  AF18               	btfss	(_H10+24)& (0+255),7,b
  5590  0024E2  D003               	bra	u5575
  5591  0024E4  0100               	movlb	0	; () banked
  5592  0024E6  81EC               	bsf	(_V+85)& (0+255),0,b
  5593  0024E8  D002               	bra	u5577
  5594  0024EA                     u5575:
  5595  0024EA  0100               	movlb	0	; () banked
  5596  0024EC  91EC               	bcf	(_V+85)& (0+255),0,b
  5597  0024EE                     u5577:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;gemsecs.c: 180:   V.wbit = H10[1].block.block.wbit;
  5601  0024EE  0101               	movlb	1	; () banked
  5602  0024F0  AF16               	btfss	(_H10+22)& (0+255),7,b
  5603  0024F2  D003               	bra	u5585
  5604  0024F4  0100               	movlb	0	; () banked
  5605  0024F6  83EC               	bsf	(_V+85)& (0+255),1,b
  5606  0024F8  D002               	bra	u5587
  5607  0024FA                     u5585:
  5608  0024FA  0100               	movlb	0	; () banked
  5609  0024FC  93EC               	bcf	(_V+85)& (0+255),1,b
  5610  0024FE                     u5587:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;gemsecs.c: 181:   V.ebit = H10[1].block.block.ebit;
  5614  0024FE  0101               	movlb	1	; () banked
  5615  002500  AF14               	btfss	(_H10+20)& (0+255),7,b
  5616  002502  D003               	bra	u5595
  5617  002504  0100               	movlb	0	; () banked
  5618  002506  85EC               	bsf	(_V+85)& (0+255),2,b
  5619  002508  D002               	bra	u5597
  5620  00250A                     u5595:
  5621  00250A  0100               	movlb	0	; () banked
  5622  00250C  95EC               	bcf	(_V+85)& (0+255),2,b
  5623  00250E                     u5597:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;gemsecs.c: 182:   V.failed_receive = 0;
  5627  00250E  0EF0               	movlw	-16
  5628  002510  17ED               	andwf	(_V+86)& (0+255),f,b
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;gemsecs.c: 183:   *m_link = LINK_STATE_DONE;
  5632                           ;stkvar	_m_link @ sp[(-1)+-1]
  5633  002512  0EFE               	movlw	-2
  5634  002514  50E3               	movf	plusw1,w,c
  5635  002516  6ED9               	movwf	fsr2l,c
  5636  002518  6ADA               	clrf	fsr2h,c
  5637  00251A  0E04               	movlw	4
  5638  00251C  D01B               	goto	L18
  5639  00251E                     l8578:
  5640                           
  5641                           ;gemsecs.c: 186:   *m_link = LINK_STATE_ERROR;
  5642                           ;stkvar	_m_link @ sp[(-1)+-1]
  5643  00251E  0EFE               	movlw	-2
  5644  002520  50E3               	movf	plusw1,w,c
  5645  002522  6ED9               	movwf	fsr2l,c
  5646  002524  6ADA               	clrf	fsr2h,c
  5647  002526  0E06               	movlw	6
  5648  002528  6EDF               	movwf	indf2,c
  5649                           
  5650                           ;gemsecs.c: 187:   while ((uart1RxCount)) {
  5651  00252A  D002               	goto	l8582
  5652  00252C                     l8580:
  5653                           
  5654                           ;gemsecs.c: 188:    UART1_Read();
  5655  00252C  EC64  F02C         	call	_UART1_Read	;wreg free
  5656  002530                     l8582:
  5657                           
  5658                           ;gemsecs.c: 187:   while ((uart1RxCount)) {
  5659  002530  5037               	movf	_uart1RxCount,w,c	;volatile
  5660  002532  B4D8               	btfsc	status,2,c
  5661  002534  D003               	goto	l8586
  5662  002536  D7FA               	goto	l8580
  5663  002538                     l8584:
  5664                           
  5665                           ;gemsecs.c: 191:    UART2_Read();
  5666  002538  EC45  F02C         	call	_UART2_Read	;wreg free
  5667  00253C                     l8586:
  5668                           
  5669                           ;gemsecs.c: 190:   while ((uart2RxCount)) {
  5670  00253C  5031               	movf	_uart2RxCount,w,c	;volatile
  5671  00253E  B4D8               	btfsc	status,2,c
  5672  002540  D02C               	goto	l8596
  5673  002542  D7FA               	goto	l8584
  5674  002544                     l8588:
  5675                           
  5676                           ;gemsecs.c: 197:   V.failed_receive = 0;
  5677  002544  0EF0               	movlw	-16
  5678  002546  0100               	movlb	0	; () banked
  5679  002548  17ED               	andwf	(_V+86)& (0+255),f,b
  5680  00254A                     l8590:
  5681                           
  5682                           ;gemsecs.c: 199:   *m_link = LINK_STATE_IDLE;
  5683                           ;stkvar	_m_link @ sp[(-1)+-1]
  5684  00254A  0EFE               	movlw	-2
  5685  00254C  50E3               	movf	plusw1,w,c
  5686  00254E  6ED9               	movwf	fsr2l,c
  5687  002550  6ADA               	clrf	fsr2h,c
  5688  002552  0E00               	movlw	0
  5689  002554                     L18:
  5690  002554  6EDF               	movwf	indf2,c
  5691                           
  5692                           ;gemsecs.c: 201:   break;
  5693  002556  D021               	goto	l8596
  5694  002558                     l8594:
  5695                           
  5696                           ;stkvar	_m_link @ sp[(-1)+-1]
  5697  002558  0EFE               	movlw	-2
  5698  00255A  50E3               	movf	plusw1,w,c
  5699  00255C  6ED9               	movwf	fsr2l,c
  5700  00255E  6ADA               	clrf	fsr2h,c
  5701  002560  50DF               	movf	indf2,w,c
  5702  002562  6E47               	movwf	btemp+10,c
  5703  002564  6A48               	clrf	btemp+11,c
  5704                           
  5705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5706                           ; Switch size 1, requested type "simple"
  5707                           ; Number of cases is 1, Range of values is 0 to 0
  5708                           ; switch strategies available:
  5709                           ; Name         Instructions Cycles
  5710                           ; simple_byte            4     3 (average)
  5711                           ;	Chosen strategy is simple_byte
  5712  002566  5048               	movf	btemp+11,w,c
  5713  002568  0A00               	xorlw	0	; case 0
  5714  00256A  A4D8               	btfss	status,2,c
  5715  00256C  D7EE               	goto	l8590
  5716                           
  5717                           ; Switch size 1, requested type "simple"
  5718                           ; Number of cases is 7, Range of values is 0 to 6
  5719                           ; switch strategies available:
  5720                           ; Name         Instructions Cycles
  5721                           ; simple_byte           22    12 (average)
  5722                           ;	Chosen strategy is simple_byte
  5723  00256E  5047               	movf	btemp+10,w,c
  5724  002570  0A00               	xorlw	0	; case 0
  5725  002572  B4D8               	btfsc	status,2,c
  5726  002574  D599               	goto	l8394
  5727  002576  0A01               	xorlw	1	; case 1
  5728  002578  B4D8               	btfsc	status,2,c
  5729  00257A  D5E0               	goto	l8422
  5730  00257C  0A03               	xorlw	3	; case 2
  5731  00257E  B4D8               	btfsc	status,2,c
  5732  002580  D63D               	goto	l8456
  5733  002582  0A01               	xorlw	1	; case 3
  5734  002584  B4D8               	btfsc	status,2,c
  5735  002586  D79C               	goto	l8562
  5736  002588  0A07               	xorlw	7	; case 4
  5737  00258A  B4D8               	btfsc	status,2,c
  5738  00258C  D7DB               	goto	l8588
  5739  00258E  0A01               	xorlw	1	; case 5
  5740  002590  B4D8               	btfsc	status,2,c
  5741  002592  D7C5               	goto	l8578
  5742  002594  0A03               	xorlw	3	; case 6
  5743  002596  A4D8               	btfss	status,2,c
  5744  002598  D7D8               	goto	l8590
  5745  00259A                     l8596:
  5746                           
  5747                           ;gemsecs.c: 204:  return *m_link;
  5748                           ;stkvar	_m_link @ sp[(-1)+-1]
  5749  00259A  0EFE               	movlw	-2
  5750  00259C  50E3               	movf	plusw1,w,c
  5751  00259E  6ED9               	movwf	fsr2l,c
  5752  0025A0  6ADA               	clrf	fsr2h,c
  5753  0025A2  50DF               	movf	indf2,w,c
  5754  0025A4  6E3D               	movwf	btemp,c
  5755                           
  5756                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5757  0025A6  52E5               	movf	postdec1,f,c
  5758  0025A8  52E5               	movf	postdec1,f,c
  5759  0025AA  0012               	return		;funcret
  5760  0025AC                     __end_of_m_protocol:
  5761                           	opt callstack 0
  5762                           
  5763 ;; *************** function _run_checksum *****************
  5764 ;; Defined at:
  5765 ;;		line 31 in file "gemsecs.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  byte_block      1  [STACK] unsigned char 
  5768 ;;  clear           1  [STACK] _Bool 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  2  [STACK] unsigned short 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  5775 ;; Tracked objects:
  5776 ;;		On entry : 6/39
  5777 ;;		On exit  : 3F/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5784 ;;Total ram usage:        0 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    3
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_m_protocol
  5791 ;;		_r_protocol
  5792 ;; This function uses a reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text11
  5796  0059BA                     __ptext11:
  5797                           	opt callstack 0
  5798  0059BA                     _run_checksum:
  5799                           	opt callstack 26
  5800                           
  5801                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  5802                           ;stkvar	_clear @ sp[(0)+-2]
  5803                           
  5804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5805                           ;incstack = 0
  5806  0059BA  0EFE               	movlw	-2
  5807  0059BC  50E3               	movf	plusw1,w,c
  5808  0059BE  B4D8               	btfsc	status,2,c
  5809  0059C0  D003               	goto	l7840
  5810                           
  5811                           ;gemsecs.c: 36:   sum = 0;
  5812  0059C2  0100               	movlb	0	; () banked
  5813  0059C4  6B95               	clrf	run_checksum@sum& (0+255),b
  5814  0059C6  6B96               	clrf	(run_checksum@sum+1)& (0+255),b
  5815  0059C8                     l7840:
  5816                           
  5817                           ;gemsecs.c: 38:  sum += byte_block;
  5818                           ;stkvar	_byte_block @ sp[(0)+-1]
  5819  0059C8  0EFF               	movlw	-1
  5820  0059CA  50E3               	movf	plusw1,w,c
  5821  0059CC  0100               	movlb	0	; () banked
  5822  0059CE  2795               	addwf	run_checksum@sum& (0+255),f,b
  5823  0059D0  0E00               	movlw	0
  5824  0059D2  2396               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;gemsecs.c: 39:  return sum;
  5828  0059D4  0060  F254  F03D   	movff	run_checksum@sum,btemp
  5829  0059DA  0060  F258  F03E   	movff	run_checksum@sum+1,btemp+1
  5830                           
  5831                           ; BSR set to: 0
  5832                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  5833  0059E0  52E5               	movf	postdec1,f,c
  5834  0059E2  52E5               	movf	postdec1,f,c
  5835  0059E4  0012               	return		;funcret
  5836  0059E6                     __end_of_run_checksum:
  5837                           	opt callstack 0
  5838                           
  5839 ;; *************** function _WaitMs *****************
  5840 ;; Defined at:
  5841 ;;		line 31 in file "timers.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  numMilliseco    2  [STACK] unsigned short 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1  [STACK] void 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/3B
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    4
  5862 ;; This function calls:
  5863 ;;		_StartTimer
  5864 ;;		_TimerDone
  5865 ;; This function is called by:
  5866 ;;		_main
  5867 ;;		_m_protocol
  5868 ;;		_r_protocol
  5869 ;;		_t_protocol
  5870 ;; This function uses a reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text12
  5874  005A94                     __ptext12:
  5875                           	opt callstack 0
  5876  005A94                     _WaitMs:
  5877                           	opt callstack 25
  5878                           
  5879                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  5880                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5881                           
  5882                           ; BSR set to: 0
  5883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5884                           ;incstack = 0
  5885  005A94  0EFE               	movlw	-2
  5886  005A96  006F FF8F FFE6     	movff	plusw1,postinc1
  5887  005A9C  006F FF8F FFE6     	movff	plusw1,postinc1
  5888  005AA2  0E00               	movlw	0
  5889  005AA4  6EE6               	movwf	postinc1,c
  5890  005AA6  ECA3  F02C         	call	_StartTimer	;wreg free
  5891  005AAA                     l5892:
  5892                           
  5893                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5894  005AAA  0E00               	movlw	0
  5895  005AAC  6EE6               	movwf	postinc1,c
  5896  005AAE  ECEF  F02E         	call	_TimerDone	;wreg free
  5897  005AB2  503D               	movf	btemp,w,c
  5898  005AB4  B4D8               	btfsc	status,2,c
  5899  005AB6  D7F9               	goto	l5892
  5900                           
  5901                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5902  005AB8  52E5               	movf	postdec1,f,c
  5903  005ABA  52E5               	movf	postdec1,f,c
  5904  005ABC  0012               	return		;funcret
  5905  005ABE                     __end_of_WaitMs:
  5906                           	opt callstack 0
  5907                           
  5908 ;; *************** function _TimerDone *****************
  5909 ;; Defined at:
  5910 ;;		line 20 in file "timers.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  timer           1  [STACK] unsigned char 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1  [STACK] _Bool 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5928 ;;Total ram usage:        0 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    3
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_m_protocol
  5935 ;;		_r_protocol
  5936 ;;		_t_protocol
  5937 ;;		_WaitMs
  5938 ;; This function uses a reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text13
  5942  005DDE                     __ptext13:
  5943                           	opt callstack 0
  5944  005DDE                     _TimerDone:
  5945                           	opt callstack 25
  5946                           
  5947                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  5948                           ;stkvar	_timer @ sp[(0)+-1]
  5949                           
  5950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5951                           ;incstack = 0
  5952  005DDE  0EFF               	movlw	-1
  5953  005DE0  50E3               	movf	plusw1,w,c
  5954  005DE2  0D02               	mullw	2
  5955  005DE4  50F3               	movf	prodl,w,c
  5956  005DE6  0F79               	addlw	low _tickCount
  5957  005DE8  6ED9               	movwf	fsr2l,c
  5958  005DEA  6ADA               	clrf	fsr2h,c
  5959  005DEC  50DE               	movf	postinc2,w,c
  5960  005DEE  10DE               	iorwf	postinc2,w,c
  5961  005DF0  A4D8               	btfss	status,2,c
  5962  005DF2  D002               	goto	l5698
  5963                           
  5964                           ;timers.c: 23:   return 1;
  5965  005DF4  0E01               	movlw	1
  5966  005DF6  D001               	goto	L19
  5967  005DF8                     l5698:
  5968                           
  5969                           ;timers.c: 25:  return 0;
  5970  005DF8  0E00               	movlw	0
  5971  005DFA                     L19:
  5972  005DFA  6E3D               	movwf	btemp,c
  5973                           
  5974                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  5975  005DFC  52E5               	movf	postdec1,f,c
  5976  005DFE  0012               	return		;funcret
  5977  005E00                     __end_of_TimerDone:
  5978                           	opt callstack 0
  5979                           
  5980 ;; *************** function _StartTimer *****************
  5981 ;; Defined at:
  5982 ;;		line 12 in file "timers.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  timer           1  [STACK] unsigned char 
  5985 ;;  count           2  [STACK] unsigned short 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1  [STACK] void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/39
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    3
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_m_protocol
  6008 ;;		_r_protocol
  6009 ;;		_t_protocol
  6010 ;;		_WaitMs
  6011 ;; This function uses a reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text14
  6015  005946                     __ptext14:
  6016                           	opt callstack 0
  6017  005946                     _StartTimer:
  6018                           	opt callstack 25
  6019                           
  6020                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6021                           ;stkvar	_count @ sp[(0)+-3]
  6022                           
  6023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6024                           ;incstack = 0
  6025  005946  0EFD               	movlw	-3
  6026  005948  006F FF8C  F047    	movff	plusw1,btemp+10
  6027  00594E  0EFE               	movlw	-2
  6028  005950  006F FF8C  F048    	movff	plusw1,btemp+11
  6029  005956  90D8               	bcf	status,0,c
  6030  005958  3447               	rlcf	btemp+10,w,c
  6031  00595A  6E45               	movwf	btemp+8,c
  6032  00595C  3448               	rlcf	btemp+11,w,c
  6033  00595E  6E46               	movwf	btemp+9,c
  6034                           
  6035                           ;stkvar	_timer @ sp[(0)+-1]
  6036  005960  0EFF               	movlw	-1
  6037  005962  50E3               	movf	plusw1,w,c
  6038  005964  0D02               	mullw	2
  6039  005966  50F3               	movf	prodl,w,c
  6040  005968  0F79               	addlw	low _tickCount
  6041  00596A  6ED9               	movwf	fsr2l,c
  6042  00596C  6ADA               	clrf	fsr2h,c
  6043  00596E  0060  F117  FFDE   	movff	btemp+8,postinc2
  6044  005974  0060  F11B  FFDD   	movff	btemp+9,postdec2
  6045                           
  6046                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6047  00597A  52E5               	movf	postdec1,f,c
  6048  00597C  52E5               	movf	postdec1,f,c
  6049  00597E  52E5               	movf	postdec1,f,c
  6050  005980  0012               	return		;funcret
  6051  005982                     __end_of_StartTimer:
  6052                           	opt callstack 0
  6053                           
  6054 ;; *************** function _UART2_is_rx_ready *****************
  6055 ;; Defined at:
  6056 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;		None
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;		None
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  1  [STACK] unsigned char 
  6063 ;; Registers used:
  6064 ;;		btemp
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6074 ;;Total ram usage:        0 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:    3
  6077 ;; This function calls:
  6078 ;;		Nothing
  6079 ;; This function is called by:
  6080 ;;		_m_protocol
  6081 ;; This function uses a reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text15
  6085  00606E                     __ptext15:
  6086                           	opt callstack 0
  6087  00606E                     _UART2_is_rx_ready:
  6088                           	opt callstack 26
  6089                           
  6090                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  6091                           
  6092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6093                           ;incstack = 0
  6094  00606E  0060  F0C4  F03D   	movff	_uart2RxCount,btemp	;volatile
  6095                           
  6096                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6097  006074  0012               	return		;funcret
  6098  006076                     __end_of_UART2_is_rx_ready:
  6099                           	opt callstack 0
  6100                           
  6101 ;; *************** function _UART2_Read *****************
  6102 ;; Defined at:
  6103 ;;		line 152 in file "mcc_generated_files/uart2.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;		None
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  readValue       1  [STACK] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1  [STACK] unsigned char 
  6110 ;; Registers used:
  6111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 3F/39
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6121 ;;Total ram usage:        0 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    3
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_m_protocol
  6128 ;; This function uses a reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text16
  6132  00588A                     __ptext16:
  6133                           	opt callstack 0
  6134  00588A                     _UART2_Read:
  6135                           	opt callstack 0
  6136                           
  6137                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6138  00588A  52E6               	movf	postinc1,f,c
  6139  00588C                     
  6140                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6141                           
  6142                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6143  00588C  5031               	movf	_uart2RxCount,w,c	;volatile
  6144  00588E  B4D8               	btfsc	status,2,c
  6145  005890  D7FD               	goto	l5854
  6146                           
  6147                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  6148  005892  0E00               	movlw	low _uart2RxBuffer
  6149  005894  2432               	addwf	_uart2RxTail,w,c	;volatile
  6150  005896  6ED9               	movwf	fsr2l,c
  6151  005898  6ADA               	clrf	fsr2h,c
  6152  00589A  0E02               	movlw	high _uart2RxBuffer
  6153  00589C  22DA               	addwfc	fsr2h,f,c
  6154  00589E  50DF               	movf	indf2,w,c
  6155  0058A0  6E48               	movwf	btemp+11,c
  6156                           
  6157                           ;stkvar	_readValue @ sp[(-1)+0]
  6158  0058A2  0EFF               	movlw	-1
  6159  0058A4  0060  F123  FFE3   	movff	btemp+11,plusw1
  6160  0058AA  2A32               	incf	_uart2RxTail,f,c	;volatile
  6161                           
  6162                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  6163  0058AC  0E3F               	movlw	63
  6164  0058AE  6432               	cpfsgt	_uart2RxTail,c
  6165  0058B0  D001               	goto	l692
  6166                           
  6167                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  6168  0058B2  6A32               	clrf	_uart2RxTail,c	;volatile
  6169  0058B4                     l692:
  6170                           
  6171                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  6172  0058B4  0139               	movlb	57	; () banked
  6173  0058B6  9596               	bcf	150,2,b	;volatile
  6174                           
  6175                           ; BSR set to: 57
  6176                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  6177  0058B8  0631               	decf	_uart2RxCount,f,c	;volatile
  6178                           
  6179                           ; BSR set to: 57
  6180                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  6181  0058BA  8596               	bsf	150,2,b	;volatile
  6182                           
  6183                           ; BSR set to: 57
  6184                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  6185                           ;stkvar	_readValue @ sp[(-1)+0]
  6186  0058BC  0EFF               	movlw	-1
  6187  0058BE  006F FF8C  F03D    	movff	plusw1,btemp
  6188                           
  6189                           ; BSR set to: 57
  6190                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6191  0058C4  52E5               	movf	postdec1,f,c
  6192  0058C6  0012               	return		;funcret
  6193  0058C8                     __end_of_UART2_Read:
  6194                           	opt callstack 0
  6195                           
  6196 ;; *************** function _UART1_is_rx_ready *****************
  6197 ;; Defined at:
  6198 ;;		line 146 in file "mcc_generated_files/uart1.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1  [STACK] unsigned char 
  6205 ;; Registers used:
  6206 ;;		btemp
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6216 ;;Total ram usage:        0 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    3
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_m_protocol
  6223 ;;		_r_protocol
  6224 ;;		_t_protocol
  6225 ;; This function uses a reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text17
  6229  006076                     __ptext17:
  6230                           	opt callstack 0
  6231  006076                     _UART1_is_rx_ready:
  6232                           	opt callstack 26
  6233                           
  6234                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  6235                           
  6236                           ; BSR set to: 57
  6237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6238                           ;incstack = 0
  6239  006076  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  6240                           
  6241                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6242  00607C  0012               	return		;funcret
  6243  00607E                     __end_of_UART1_is_rx_ready:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function _UART1_Read *****************
  6247 ;; Defined at:
  6248 ;;		line 161 in file "mcc_generated_files/uart1.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  readValue       1  [STACK] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1  [STACK] unsigned char 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 3F/39
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    3
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_m_protocol
  6273 ;;		_r_protocol
  6274 ;;		_t_protocol
  6275 ;; This function uses a reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text18
  6279  0058C8                     __ptext18:
  6280                           	opt callstack 0
  6281  0058C8                     _UART1_Read:
  6282                           	opt callstack 0
  6283                           
  6284                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6285  0058C8  52E6               	movf	postinc1,f,c
  6286  0058CA                     
  6287                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6288                           
  6289                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6290  0058CA  5037               	movf	_uart1RxCount,w,c	;volatile
  6291  0058CC  B4D8               	btfsc	status,2,c
  6292  0058CE  D7FD               	goto	l5830
  6293                           
  6294                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  6295  0058D0  0E40               	movlw	low _uart1RxBuffer
  6296  0058D2  2438               	addwf	_uart1RxTail,w,c	;volatile
  6297  0058D4  6ED9               	movwf	fsr2l,c
  6298  0058D6  6ADA               	clrf	fsr2h,c
  6299  0058D8  0E02               	movlw	high _uart1RxBuffer
  6300  0058DA  22DA               	addwfc	fsr2h,f,c
  6301  0058DC  50DF               	movf	indf2,w,c
  6302  0058DE  6E48               	movwf	btemp+11,c
  6303                           
  6304                           ;stkvar	_readValue @ sp[(-1)+0]
  6305  0058E0  0EFF               	movlw	-1
  6306  0058E2  0060  F123  FFE3   	movff	btemp+11,plusw1
  6307  0058E8  2A38               	incf	_uart1RxTail,f,c	;volatile
  6308                           
  6309                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  6310  0058EA  0E3F               	movlw	63
  6311  0058EC  6438               	cpfsgt	_uart1RxTail,c
  6312  0058EE  D001               	goto	l572
  6313                           
  6314                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  6315  0058F0  6A38               	clrf	_uart1RxTail,c	;volatile
  6316  0058F2                     l572:
  6317                           
  6318                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  6319  0058F2  0139               	movlb	57	; () banked
  6320  0058F4  9793               	bcf	147,3,b	;volatile
  6321                           
  6322                           ; BSR set to: 57
  6323                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  6324  0058F6  0637               	decf	_uart1RxCount,f,c	;volatile
  6325                           
  6326                           ; BSR set to: 57
  6327                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  6328  0058F8  8793               	bsf	147,3,b	;volatile
  6329                           
  6330                           ; BSR set to: 57
  6331                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  6332                           ;stkvar	_readValue @ sp[(-1)+0]
  6333  0058FA  0EFF               	movlw	-1
  6334  0058FC  006F FF8C  F03D    	movff	plusw1,btemp
  6335                           
  6336                           ; BSR set to: 57
  6337                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6338  005902  52E5               	movf	postdec1,f,c
  6339  005904  0012               	return		;funcret
  6340  005906                     __end_of_UART1_Read:
  6341                           	opt callstack 0
  6342                           
  6343 ;; *************** function _init_display *****************
  6344 ;; Defined at:
  6345 ;;		line 35 in file "eadog.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1  [STACK] void 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 3F/3D
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    5
  6366 ;; This function calls:
  6367 ;;		_ringBufS_init
  6368 ;;		_send_lcd_cmd
  6369 ;;		_send_lcd_cmd_long
  6370 ;;		_wdtdelay
  6371 ;; This function is called by:
  6372 ;;		_main
  6373 ;; This function uses a reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text19
  6377  004AD8                     __ptext19:
  6378                           	opt callstack 0
  6379  004AD8                     _init_display:
  6380                           	opt callstack 25
  6381                           
  6382                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  6383                           
  6384                           ; BSR set to: 57
  6385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6386                           ;incstack = 0
  6387  004AD8  0E83               	movlw	low _ring_buf1
  6388  004ADA  0100               	movlb	0	; () banked
  6389  004ADC  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6390  004ADE  0E03               	movlw	high _ring_buf1
  6391  004AE0  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6392                           
  6393                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  6394  004AE2  0E40               	movlw	low _ring_buf2
  6395  004AE4  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6396  004AE6  0E03               	movlw	high _ring_buf2
  6397  004AE8  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  6401  004AEA  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  6402  004AF0  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  6403  004AF6  EC9D  F02D         	call	_ringBufS_init	;wreg free
  6404                           
  6405                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  6406  004AFA  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  6407  004B00  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  6408  004B06  EC9D  F02D         	call	_ringBufS_init	;wreg free
  6409                           
  6410                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  6411  004B0A  80BE               	bsf	16318,0,c	;volatile
  6412  004B0C  84BC               	bsf	16316,2,c	;volatile
  6413                           
  6414                           ;eadog.c: 44:  wdtdelay(350000);
  6415  004B0E  0E30               	movlw	48
  6416  004B10  6EE6               	movwf	postinc1,c
  6417  004B12  0E57               	movlw	87
  6418  004B14  6EE6               	movwf	postinc1,c
  6419  004B16  0E05               	movlw	5
  6420  004B18  6EE6               	movwf	postinc1,c
  6421  004B1A  0E00               	movlw	0
  6422  004B1C  6EE6               	movwf	postinc1,c
  6423  004B1E  ECDC  F02A         	call	_wdtdelay	;wreg free
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  6427  004B22  0E39               	movlw	57
  6428  004B24  6EE6               	movwf	postinc1,c
  6429  004B26  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  6433  004B2A  0E1D               	movlw	29
  6434  004B2C  6EE6               	movwf	postinc1,c
  6435  004B2E  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  6439  004B32  0E50               	movlw	80
  6440  004B34  6EE6               	movwf	postinc1,c
  6441  004B36  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  6445  004B3A  0E6C               	movlw	108
  6446  004B3C  6EE6               	movwf	postinc1,c
  6447  004B3E  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  6451  004B42  0E76               	movlw	118
  6452  004B44  6EE6               	movwf	postinc1,c
  6453  004B46  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  6457  004B4A  0E38               	movlw	56
  6458  004B4C  6EE6               	movwf	postinc1,c
  6459  004B4E  EC75  F02D         	call	_send_lcd_cmd_long	;wreg free
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  6463  004B52  0E0F               	movlw	15
  6464  004B54  6EE6               	movwf	postinc1,c
  6465  004B56  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  6469  004B5A  0E01               	movlw	1
  6470  004B5C  6EE6               	movwf	postinc1,c
  6471  004B5E  EC75  F02D         	call	_send_lcd_cmd_long	;wreg free
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  6475  004B62  0E02               	movlw	2
  6476  004B64  6EE6               	movwf	postinc1,c
  6477  004B66  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  6481  004B6A  0E06               	movlw	6
  6482  004B6C  6EE6               	movwf	postinc1,c
  6483  004B6E  EC89  F02D         	call	_send_lcd_cmd	;wreg free
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;eadog.c: 55:  wdtdelay(30);
  6487  004B72  0E1E               	movlw	30
  6488  004B74  6EE6               	movwf	postinc1,c
  6489  004B76  0E00               	movlw	0
  6490  004B78  6EE6               	movwf	postinc1,c
  6491  004B7A  0E00               	movlw	0
  6492  004B7C  6EE6               	movwf	postinc1,c
  6493  004B7E  0E00               	movlw	0
  6494  004B80  6EE6               	movwf	postinc1,c
  6495  004B82  ECDC  F02A         	call	_wdtdelay	;wreg free
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  6499  004B86  0E02               	movlw	2
  6500  004B88  013D               	movlb	61	; () banked
  6501  004B8A  6F16               	movwf	22,b	;volatile
  6502                           
  6503                           ; BSR set to: 61
  6504                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  6505  004B8C  0E40               	movlw	64
  6506  004B8E  6F15               	movwf	21,b	;volatile
  6507                           
  6508                           ; BSR set to: 61
  6509                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  6510  004B90  0E83               	movlw	131
  6511  004B92  6F14               	movwf	20,b	;volatile
  6512                           
  6513                           ; BSR set to: 61
  6514                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  6515  004B94  931A               	bcf	26,1,b	;volatile
  6516                           
  6517                           ; BSR set to: 61
  6518                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  6519  004B96  0E3F               	movlw	-193
  6520  004B98  013B               	movlb	59	; () banked
  6521  004B9A  17FD               	andwf	253,f,b	;volatile
  6522                           
  6523                           ; BSR set to: 59
  6524                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  6525  004B9C  9BFD               	bcf	253,5,b	;volatile
  6526                           
  6527                           ; BSR set to: 59
  6528                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  6529  004B9E  51FD               	movf	253,w,b	;volatile
  6530  004BA0  0BF9               	andlw	-7
  6531  004BA2  0902               	iorlw	2
  6532  004BA4  6FFD               	movwf	253,b	;volatile
  6533                           
  6534                           ; BSR set to: 59
  6535                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  6536  004BA6  0EE7               	movlw	-25
  6537  004BA8  17FD               	andwf	253,f,b	;volatile
  6538                           
  6539                           ; BSR set to: 59
  6540                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  6541  004BAA  81FD               	bsf	253,0,b	;volatile
  6542                           
  6543                           ; BSR set to: 59
  6544                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  6545  004BAC  0E83               	movlw	low _ring_buf1
  6546  004BAE  6FF9               	movwf	249,b	;volatile
  6547  004BB0  0E03               	movlw	high _ring_buf1
  6548  004BB2  6FFA               	movwf	250,b	;volatile
  6549  004BB4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6550  004BB6  6FFB               	movwf	251,b	;volatile
  6551                           
  6552                           ; BSR set to: 59
  6553                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  6554  004BB8  9BFC               	bcf	252,5,b	;volatile
  6555                           
  6556                           ; BSR set to: 59
  6557                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  6558  004BBA  013D               	movlb	61	; () banked
  6559  004BBC  831A               	bsf	26,1,b	;volatile
  6560                           
  6561                           ; BSR set to: 61
  6562                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  6563  004BBE  90BE               	bcf	16318,0,c	;volatile
  6564                           
  6565                           ; BSR set to: 61
  6566                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6567  004BC0  0012               	return		;funcret
  6568  004BC2                     __end_of_init_display:
  6569                           	opt callstack 0
  6570                           
  6571 ;; *************** function _send_lcd_cmd_long *****************
  6572 ;; Defined at:
  6573 ;;		line 97 in file "eadog.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  cmd             1  [STACK] unsigned char 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1  [STACK] void 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6582 ;; Tracked objects:
  6583 ;;		On entry : 3F/0
  6584 ;;		On exit  : 3F/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    4
  6594 ;; This function calls:
  6595 ;;		_SPI1_Exchange8bit
  6596 ;;		_wdtdelay
  6597 ;; This function is called by:
  6598 ;;		_init_display
  6599 ;; This function uses a reentrant model
  6600 ;;
  6601                           
  6602                           	psect	text20
  6603  005AEA                     __ptext20:
  6604                           	opt callstack 0
  6605  005AEA                     _send_lcd_cmd_long:
  6606                           	opt callstack 25
  6607                           
  6608                           ; BSR set to: 61
  6609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6610                           ;incstack = 0
  6611                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  6612  005AEA  92BC               	bcf	16316,1,c	;volatile
  6613                           
  6614                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  6615  005AEC  94BC               	bcf	16316,2,c	;volatile
  6616                           
  6617                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  6618                           ;stkvar	_cmd @ sp[(0)+-1]
  6619  005AEE  0EFF               	movlw	-1
  6620  005AF0  50E3               	movf	plusw1,w,c
  6621  005AF2  6EE6               	movwf	postinc1,c
  6622  005AF4  EC75  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6623                           
  6624                           ; BSR set to: 57
  6625                           ;eadog.c: 102:  wdtdelay(800);
  6626  005AF8  0E20               	movlw	32
  6627  005AFA  6EE6               	movwf	postinc1,c
  6628  005AFC  0E03               	movlw	3
  6629  005AFE  6EE6               	movwf	postinc1,c
  6630  005B00  0E00               	movlw	0
  6631  005B02  6EE6               	movwf	postinc1,c
  6632  005B04  0E00               	movlw	0
  6633  005B06  6EE6               	movwf	postinc1,c
  6634  005B08  ECDC  F02A         	call	_wdtdelay	;wreg free
  6635                           
  6636                           ; BSR set to: 0
  6637  005B0C  82BC               	bsf	16316,1,c	;volatile
  6638                           
  6639                           ; BSR set to: 0
  6640                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6641  005B0E  52E5               	movf	postdec1,f,c
  6642  005B10  0012               	return		;funcret
  6643  005B12                     __end_of_send_lcd_cmd_long:
  6644                           	opt callstack 0
  6645                           
  6646 ;; *************** function _send_lcd_cmd *****************
  6647 ;; Defined at:
  6648 ;;		line 85 in file "eadog.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  cmd             1  [STACK] unsigned char 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1  [STACK] void 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6657 ;; Tracked objects:
  6658 ;;		On entry : 3F/0
  6659 ;;		On exit  : 3F/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    4
  6669 ;; This function calls:
  6670 ;;		_SPI1_Exchange8bit
  6671 ;;		_wdtdelay
  6672 ;; This function is called by:
  6673 ;;		_init_display
  6674 ;; This function uses a reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text21
  6678  005B12                     __ptext21:
  6679                           	opt callstack 0
  6680  005B12                     _send_lcd_cmd:
  6681                           	opt callstack 25
  6682                           
  6683                           ; BSR set to: 0
  6684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6685                           ;incstack = 0
  6686                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  6687  005B12  92BC               	bcf	16316,1,c	;volatile
  6688                           
  6689                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  6690  005B14  94BC               	bcf	16316,2,c	;volatile
  6691                           
  6692                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  6693                           ;stkvar	_cmd @ sp[(0)+-1]
  6694  005B16  0EFF               	movlw	-1
  6695  005B18  50E3               	movf	plusw1,w,c
  6696  005B1A  6EE6               	movwf	postinc1,c
  6697  005B1C  EC75  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6698                           
  6699                           ; BSR set to: 57
  6700                           ;eadog.c: 90:  wdtdelay(30);
  6701  005B20  0E1E               	movlw	30
  6702  005B22  6EE6               	movwf	postinc1,c
  6703  005B24  0E00               	movlw	0
  6704  005B26  6EE6               	movwf	postinc1,c
  6705  005B28  0E00               	movlw	0
  6706  005B2A  6EE6               	movwf	postinc1,c
  6707  005B2C  0E00               	movlw	0
  6708  005B2E  6EE6               	movwf	postinc1,c
  6709  005B30  ECDC  F02A         	call	_wdtdelay	;wreg free
  6710                           
  6711                           ; BSR set to: 0
  6712  005B34  82BC               	bsf	16316,1,c	;volatile
  6713                           
  6714                           ; BSR set to: 0
  6715                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6716  005B36  52E5               	movf	postdec1,f,c
  6717  005B38  0012               	return		;funcret
  6718  005B3A                     __end_of_send_lcd_cmd:
  6719                           	opt callstack 0
  6720                           
  6721 ;; *************** function _SPI1_Exchange8bit *****************
  6722 ;; Defined at:
  6723 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  data            1  [STACK] unsigned char 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;		None
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1  [STACK] unsigned char 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 3F/39
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6741 ;;Total ram usage:        0 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    3
  6744 ;; This function calls:
  6745 ;;		Nothing
  6746 ;; This function is called by:
  6747 ;;		_send_lcd_cmd
  6748 ;;		_send_lcd_cmd_long
  6749 ;; This function uses a reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text22
  6753  005EEA                     __ptext22:
  6754                           	opt callstack 0
  6755  005EEA                     _SPI1_Exchange8bit:
  6756                           	opt callstack 25
  6757                           
  6758                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6759                           
  6760                           ; BSR set to: 0
  6761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6762                           ;incstack = 0
  6763  005EEA  0E01               	movlw	1
  6764  005EEC  013D               	movlb	61	; () banked
  6765  005EEE  6F12               	movwf	18,b	;volatile
  6766                           
  6767                           ; BSR set to: 61
  6768                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6769                           ;stkvar	_data @ sp[(0)+-1]
  6770  005EF0  0EFF               	movlw	-1
  6771  005EF2  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6772  005EF8                     l847:
  6773                           
  6774                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6775  005EF8  0139               	movlb	57	; () banked
  6776  005EFA  A9A2               	btfss	162,4,b	;volatile
  6777  005EFC  D7FD               	goto	l847
  6778                           
  6779                           ; BSR set to: 57
  6780                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6781  005EFE  006F F440  F03D    	movff	15632,btemp	;volatile
  6782                           
  6783                           ; BSR set to: 57
  6784                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6785  005F04  52E5               	movf	postdec1,f,c
  6786  005F06  0012               	return		;funcret
  6787  005F08                     __end_of_SPI1_Exchange8bit:
  6788                           	opt callstack 0
  6789                           
  6790 ;; *************** function _ringBufS_init *****************
  6791 ;; Defined at:
  6792 ;;		line 22 in file "ringbufs.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  _this           2  [STACK] PTR volatile struct ring
  6795 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;		None
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1  [STACK] void 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6811 ;;Total ram usage:        0 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    4
  6814 ;; This function calls:
  6815 ;;		_memset
  6816 ;; This function is called by:
  6817 ;;		_init_display
  6818 ;; This function uses a reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text23
  6822  005B3A                     __ptext23:
  6823                           	opt callstack 0
  6824  005B3A                     _ringBufS_init:
  6825                           	opt callstack 25
  6826                           
  6827                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6828                           
  6829                           ; BSR set to: 57
  6830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6831                           ;incstack = 0
  6832  005B3A  0E43               	movlw	67
  6833  005B3C  6EE6               	movwf	postinc1,c
  6834  005B3E  0E00               	movlw	0
  6835  005B40  6EE6               	movwf	postinc1,c
  6836  005B42  0E00               	movlw	0
  6837  005B44  6EE6               	movwf	postinc1,c
  6838  005B46  0E00               	movlw	0
  6839  005B48  6EE6               	movwf	postinc1,c
  6840                           
  6841                           ;stkvar	__this @ sp[(-4)+-2]
  6842  005B4A  0EFA               	movlw	-6
  6843  005B4C  006F FF8F FFE6     	movff	plusw1,postinc1
  6844  005B52  006F FF8F FFE6     	movff	plusw1,postinc1
  6845  005B58  EC12  F01B         	call	_memset	;wreg free
  6846                           
  6847                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6848  005B5C  52E5               	movf	postdec1,f,c
  6849  005B5E  52E5               	movf	postdec1,f,c
  6850  005B60  0012               	return		;funcret
  6851  005B62                     __end_of_ringBufS_init:
  6852                           	opt callstack 0
  6853                           
  6854 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6855 ;; Defined at:
  6856 ;;		line 218 in file "eadog.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  r               1  [STACK] unsigned char 
  6859 ;;  c               1  [STACK] unsigned char 
  6860 ;;  strPtr          1  [STACK] PTR unsigned char 
  6861 ;;		 -> V(87), 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1  [STACK] void 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6868 ;; Tracked objects:
  6869 ;;		On entry : 3F/0
  6870 ;;		On exit  : 3F/3B
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6877 ;;Total ram usage:        0 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; Hardware stack levels required when called:   13
  6880 ;; This function calls:
  6881 ;;		_eaDogM_WriteString
  6882 ;;		_send_lcd_cmd_dma
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text24
  6889  0059E6                     __ptext24:
  6890                           	opt callstack 0
  6891  0059E6                     _eaDogM_WriteStringAtPos:
  6892                           	opt callstack 17
  6893                           
  6894                           ;eadog.c: 218: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           219: {;eadog.c: 220:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6895                           ;stkvar	_c @ sp[(0)+-2]
  6896                           
  6897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6898                           ;incstack = 0
  6899  0059E6  0EFE               	movlw	-2
  6900  0059E8  006F FF8C  F048    	movff	plusw1,btemp+11
  6901                           
  6902                           ;stkvar	_r @ sp[(0)+-1]
  6903  0059EE  0EFF               	movlw	-1
  6904  0059F0  50E3               	movf	plusw1,w,c
  6905  0059F2  0D10               	mullw	16
  6906  0059F4  50F3               	movf	prodl,w,c
  6907  0059F6  2448               	addwf	btemp+11,w,c
  6908  0059F8  0F80               	addlw	128
  6909  0059FA  6EE6               	movwf	postinc1,c
  6910  0059FC  EC0A  F02B         	call	_send_lcd_cmd_dma	;wreg free
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;eadog.c: 221:  eaDogM_WriteString(strPtr);
  6914                           ;stkvar	_strPtr @ sp[(0)+-3]
  6915  005A00  0EFD               	movlw	-3
  6916  005A02  50E3               	movf	plusw1,w,c
  6917  005A04  6EE6               	movwf	postinc1,c
  6918  005A06  EC6F  F028         	call	_eaDogM_WriteString	;wreg free
  6919                           
  6920                           ; BSR set to: 59
  6921                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  6922  005A0A  52E5               	movf	postdec1,f,c
  6923  005A0C  52E5               	movf	postdec1,f,c
  6924  005A0E  52E5               	movf	postdec1,f,c
  6925  005A10  0012               	return		;funcret
  6926  005A12                     __end_of_eaDogM_WriteStringAtPos:
  6927                           	opt callstack 0
  6928                           
  6929 ;; *************** function _eaDogM_WriteString *****************
  6930 ;; Defined at:
  6931 ;;		line 167 in file "eadog.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  strPtr          1  [STACK] PTR unsigned char 
  6934 ;;		 -> V(87), 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1  [STACK] void 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6941 ;; Tracked objects:
  6942 ;;		On entry : 3F/0
  6943 ;;		On exit  : 3F/3B
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6950 ;;Total ram usage:        0 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:   12
  6953 ;; This function calls:
  6954 ;;		_printf
  6955 ;;		_ringBufS_flush
  6956 ;;		_start_lcd
  6957 ;;		_strlen
  6958 ;;		_wait_lcd_set
  6959 ;; This function is called by:
  6960 ;;		_eaDogM_WriteStringAtPos
  6961 ;; This function uses a reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text25
  6965  0050DE                     __ptext25:
  6966                           	opt callstack 0
  6967  0050DE                     _eaDogM_WriteString:
  6968                           	opt callstack 17
  6969                           
  6970                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  6971                           
  6972                           ; BSR set to: 59
  6973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6974                           ;incstack = 0
  6975  0050DE  EC43  F030         	call	_wait_lcd_set	;wreg free
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  6979  0050E2  0E00               	movlw	0
  6980  0050E4  6EE6               	movwf	postinc1,c
  6981  0050E6  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  6982  0050EC  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  6983  0050F2  EC55  F029         	call	_ringBufS_flush	;wreg free
  6984  0050F6  94BC               	bcf	16316,2,c	;volatile
  6985                           
  6986                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6987                           ;stkvar	_strPtr @ sp[(0)+-1]
  6988  0050F8  0EFF               	movlw	-1
  6989  0050FA  006F FF8C  F048    	movff	plusw1,btemp+11
  6990  005100  0060  F123  FFE6   	movff	btemp+11,postinc1
  6991  005106  0E00               	movlw	0
  6992  005108  6EE6               	movwf	postinc1,c
  6993  00510A  ECCE  F027         	call	_strlen	;wreg free
  6994  00510E  503E               	movf	btemp+1,w,c
  6995  005110  E104               	bnz	u4880
  6996  005112  0E41               	movlw	65
  6997  005114  5C3D               	subwf	btemp,w,c
  6998  005116  A0D8               	btfss	status,0,c
  6999  005118  D008               	goto	l7826
  7000  00511A                     u4880:
  7001                           
  7002                           ;stkvar	_strPtr @ sp[(0)+-1]
  7003  00511A  0EFF               	movlw	-1
  7004  00511C  50E3               	movf	plusw1,w,c
  7005  00511E  6ED9               	movwf	fsr2l,c
  7006  005120  6ADA               	clrf	fsr2h,c
  7007  005122  0E40               	movlw	64
  7008  005124  26D9               	addwf	fsr2l,f,c
  7009  005126  0E00               	movlw	0
  7010  005128  6EDF               	movwf	indf2,c
  7011  00512A                     l7826:
  7012                           
  7013                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  7014  00512A  013B               	movlb	59	; () banked
  7015  00512C  9FFC               	bcf	252,7,b	;volatile
  7016                           
  7017                           ; BSR set to: 59
  7018                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  7019                           ;stkvar	_strPtr @ sp[(0)+-1]
  7020  00512E  0EFF               	movlw	-1
  7021  005130  006F FF8C  F048    	movff	plusw1,btemp+11
  7022  005136  0060  F123  FFE6   	movff	btemp+11,postinc1
  7023  00513C  0E00               	movlw	0
  7024  00513E  6EE6               	movwf	postinc1,c
  7025  005140  ECCE  F027         	call	_strlen	;wreg free
  7026  005144  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  7027  00514A  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  7028                           
  7029                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  7030  005150  013B               	movlb	59	; () banked
  7031  005152  8FFC               	bsf	252,7,b	;volatile
  7032                           
  7033                           ; BSR set to: 59
  7034                           ;eadog.c: 177:  printf("%s", strPtr);
  7035                           ;stkvar	_strPtr @ sp[(0)+-1]
  7036  005154  0EFF               	movlw	-1
  7037  005156  006F FF8C  F048    	movff	plusw1,btemp+11
  7038  00515C  0060  F123  FFE6   	movff	btemp+11,postinc1
  7039  005162  0E00               	movlw	0
  7040  005164  6EE6               	movwf	postinc1,c
  7041  005166  0E85               	movlw	(STR_2+9)& (0+255)
  7042  005168  6EE6               	movwf	postinc1,c
  7043  00516A  0E03               	movlw	3
  7044  00516C  6EE6               	movwf	postinc1,c
  7045  00516E  EC7C  F02A         	call	_printf	;wreg free
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;eadog.c: 178:  start_lcd();
  7049  005172  EC46  F030         	call	_start_lcd	;wreg free
  7050                           
  7051                           ; BSR set to: 59
  7052                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7053  005176  52E5               	movf	postdec1,f,c
  7054  005178  0012               	return		;funcret
  7055  00517A                     __end_of_eaDogM_WriteString:
  7056                           	opt callstack 0
  7057                           
  7058 ;; *************** function _eaDogM_WriteCommand *****************
  7059 ;; Defined at:
  7060 ;;		line 143 in file "eadog.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  cmd             1  [STACK] unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;		None
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1  [STACK] void 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7069 ;; Tracked objects:
  7070 ;;		On entry : 3F/3D
  7071 ;;		On exit  : 3F/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7078 ;;Total ram usage:        0 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:   13
  7081 ;; This function calls:
  7082 ;;		_send_lcd_cmd_dma
  7083 ;; This function is called by:
  7084 ;;		_main
  7085 ;; This function uses a reentrant model
  7086 ;;
  7087                           
  7088                           	psect	text26
  7089  005FEC                     __ptext26:
  7090                           	opt callstack 0
  7091  005FEC                     _eaDogM_WriteCommand:
  7092                           	opt callstack 17
  7093                           
  7094                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  7095                           ;stkvar	_cmd @ sp[(0)+-1]
  7096                           
  7097                           ; BSR set to: 59
  7098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7099                           ;incstack = 0
  7100  005FEC  0EFF               	movlw	-1
  7101  005FEE  50E3               	movf	plusw1,w,c
  7102  005FF0  6EE6               	movwf	postinc1,c
  7103  005FF2  EC0A  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7104                           
  7105                           ; BSR set to: 0
  7106                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7107  005FF6  52E5               	movf	postdec1,f,c
  7108  005FF8  0012               	return		;funcret
  7109  005FFA                     __end_of_eaDogM_WriteCommand:
  7110                           	opt callstack 0
  7111                           
  7112 ;; *************** function _send_lcd_cmd_dma *****************
  7113 ;; Defined at:
  7114 ;;		line 184 in file "eadog.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  strPtr          1  [STACK] unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1  [STACK] void 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 3F/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   12
  7135 ;; This function calls:
  7136 ;;		_printf
  7137 ;;		_ringBufS_flush
  7138 ;;		_start_lcd
  7139 ;;		_wait_lcd_done
  7140 ;;		_wait_lcd_set
  7141 ;; This function is called by:
  7142 ;;		_eaDogM_WriteCommand
  7143 ;;		_eaDogM_WriteStringAtPos
  7144 ;; This function uses a reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text27
  7148  005614                     __ptext27:
  7149                           	opt callstack 0
  7150  005614                     _send_lcd_cmd_dma:
  7151                           	opt callstack 17
  7152                           
  7153                           ;eadog.c: 184: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 185: {;eadog.c: 186:  wait
      +                          _lcd_set();
  7154                           
  7155                           ; BSR set to: 0
  7156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7157                           ;incstack = 0
  7158  005614  EC43  F030         	call	_wait_lcd_set	;wreg free
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;eadog.c: 188:  ringBufS_flush(spi_link.tx1a, 0);
  7162  005618  0E00               	movlw	0
  7163  00561A  6EE6               	movwf	postinc1,c
  7164  00561C  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  7165  005622  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  7166  005628  EC55  F029         	call	_ringBufS_flush	;wreg free
  7167  00562C  92BC               	bcf	16316,1,c	;volatile
  7168  00562E  94BC               	bcf	16316,2,c	;volatile
  7169                           
  7170                           ;eadog.c: 191:  DMA1CON0bits.EN = 0;
  7171  005630  013B               	movlb	59	; () banked
  7172  005632  9FFC               	bcf	252,7,b	;volatile
  7173                           
  7174                           ; BSR set to: 59
  7175                           ;eadog.c: 192:  DMA1SSZ = 1;
  7176  005634  0E00               	movlw	0
  7177  005636  6FF8               	movwf	248,b	;volatile
  7178  005638  0E01               	movlw	1
  7179  00563A  6FF7               	movwf	247,b	;volatile
  7180                           
  7181                           ; BSR set to: 59
  7182                           ;eadog.c: 193:  DMA1CON0bits.EN = 1;
  7183  00563C  8FFC               	bsf	252,7,b	;volatile
  7184                           
  7185                           ; BSR set to: 59
  7186                           ;eadog.c: 194:  printf("%c", strPtr);
  7187                           ;stkvar	_strPtr @ sp[(0)+-1]
  7188  00563E  0EFF               	movlw	-1
  7189  005640  50E3               	movf	plusw1,w,c
  7190  005642  6EE6               	movwf	postinc1,c
  7191  005644  0E00               	movlw	0
  7192  005646  6EE6               	movwf	postinc1,c
  7193  005648  0EA0               	movlw	STR_15& (0+255)
  7194  00564A  6EE6               	movwf	postinc1,c
  7195  00564C  0E03               	movlw	3
  7196  00564E  6EE6               	movwf	postinc1,c
  7197  005650  EC7C  F02A         	call	_printf	;wreg free
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;eadog.c: 195:  start_lcd();
  7201  005654  EC46  F030         	call	_start_lcd	;wreg free
  7202                           
  7203                           ; BSR set to: 59
  7204                           ;eadog.c: 196:  wait_lcd_done();
  7205  005658  EC84  F02F         	call	_wait_lcd_done	;wreg free
  7206                           
  7207                           ; BSR set to: 0
  7208  00565C  82BC               	bsf	16316,1,c	;volatile
  7209                           
  7210                           ; BSR set to: 0
  7211                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7212  00565E  52E5               	movf	postdec1,f,c
  7213  005660  0012               	return		;funcret
  7214  005662                     __end_of_send_lcd_cmd_dma:
  7215                           	opt callstack 0
  7216                           
  7217 ;; *************** function _wait_lcd_set *****************
  7218 ;; Defined at:
  7219 ;;		line 114 in file "eadog.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1  [STACK] void 
  7226 ;; Registers used:
  7227 ;;		None
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 3F/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7237 ;;Total ram usage:        0 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    3
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_eaDogM_WriteString
  7244 ;;		_send_lcd_cmd_dma
  7245 ;; This function uses a reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text28
  7249  006086                     __ptext28:
  7250                           	opt callstack 0
  7251  006086                     _wait_lcd_set:
  7252                           	opt callstack 25
  7253                           
  7254                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  7255                           
  7256                           ; BSR set to: 0
  7257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7258                           ;incstack = 0
  7259  006086  0100               	movlb	0	; () banked
  7260  006088  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  7261                           
  7262                           ; BSR set to: 0
  7263                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7264  00608A  0012               	return		;funcret
  7265  00608C                     __end_of_wait_lcd_set:
  7266                           	opt callstack 0
  7267                           
  7268 ;; *************** function _wait_lcd_done *****************
  7269 ;; Defined at:
  7270 ;;		line 124 in file "eadog.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1  [STACK] void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7279 ;; Tracked objects:
  7280 ;;		On entry : 4/0
  7281 ;;		On exit  : 3F/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    4
  7291 ;; This function calls:
  7292 ;;		_wdtdelay
  7293 ;; This function is called by:
  7294 ;;		_main
  7295 ;;		_send_lcd_cmd_dma
  7296 ;; This function uses a reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text29
  7300  005F08                     __ptext29:
  7301                           	opt callstack 0
  7302  005F08                     _wait_lcd_done:
  7303                           	opt callstack 26
  7304                           
  7305                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  7306                           
  7307                           ; BSR set to: 0
  7308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7309                           ;incstack = 0
  7310  005F08  0100               	movlb	0	; () banked
  7311  005F0A  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  7312  005F0C  D7FD               	goto	_wait_lcd_done
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;eadog.c: 127:  wdtdelay(50);
  7316  005F0E  0E32               	movlw	50
  7317  005F10  6EE6               	movwf	postinc1,c
  7318  005F12  0E00               	movlw	0
  7319  005F14  6EE6               	movwf	postinc1,c
  7320  005F16  0E00               	movlw	0
  7321  005F18  6EE6               	movwf	postinc1,c
  7322  005F1A  0E00               	movlw	0
  7323  005F1C  6EE6               	movwf	postinc1,c
  7324  005F1E  ECDC  F02A         	call	_wdtdelay	;wreg free
  7325                           
  7326                           ; BSR set to: 0
  7327                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7328  005F22  0012               	return		;funcret
  7329  005F24                     __end_of_wait_lcd_done:
  7330                           	opt callstack 0
  7331                           
  7332 ;; *************** function _wdtdelay *****************
  7333 ;; Defined at:
  7334 ;;		line 21 in file "eadog.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  delay           4  [STACK] unsigned long 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1  [STACK] void 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 3F/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7352 ;;Total ram usage:        0 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    3
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_init_display
  7359 ;;		_send_lcd_cmd
  7360 ;;		_send_lcd_cmd_long
  7361 ;;		_wait_lcd_done
  7362 ;; This function uses a reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text30
  7366  0055B8                     __ptext30:
  7367                           	opt callstack 0
  7368  0055B8                     _wdtdelay:
  7369                           	opt callstack 26
  7370                           
  7371                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  7372                           
  7373                           ; BSR set to: 0
  7374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7375                           ;incstack = 0
  7376  0055B8  0100               	movlb	0	; () banked
  7377  0055BA  6B8C               	clrf	wdtdelay@dcount& (0+255),b
  7378  0055BC  6B8D               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7379  0055BE  6B8E               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7380  0055C0  6B8F               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7381  0055C2  D009               	goto	l5556
  7382  0055C4                     l1313:
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;eadog.c: 26:   __nop();
  7386  0055C4  F000               	nop	
  7387  0055C6  0004               	clrwdt		;# 
  7388                           
  7389                           ;eadog.c: 28:  };
  7390  0055C8  0E01               	movlw	1
  7391  0055CA  0100               	movlb	0	; () banked
  7392  0055CC  278C               	addwf	wdtdelay@dcount& (0+255),f,b
  7393  0055CE  0E00               	movlw	0
  7394  0055D0  238D               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7395  0055D2  238E               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7396  0055D4  238F               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7397  0055D6                     l5556:
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;stkvar	_delay @ sp[(0)+-4]
  7401  0055D6  0EFC               	movlw	-4
  7402  0055D8  006F FF8C  F03D    	movff	plusw1,btemp
  7403  0055DE  518C               	movf	wdtdelay@dcount& (0+255),w,b
  7404  0055E0  5C3D               	subwf	btemp,w,c
  7405  0055E2  0EFD               	movlw	-3
  7406  0055E4  006F FF8C  F03D    	movff	plusw1,btemp
  7407  0055EA  518D               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7408  0055EC  583D               	subwfb	btemp,w,c
  7409  0055EE  0EFE               	movlw	-2
  7410  0055F0  006F FF8C  F03D    	movff	plusw1,btemp
  7411  0055F6  518E               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7412  0055F8  583D               	subwfb	btemp,w,c
  7413  0055FA  0EFF               	movlw	-1
  7414  0055FC  006F FF8C  F03D    	movff	plusw1,btemp
  7415  005602  518F               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7416  005604  583D               	subwfb	btemp,w,c
  7417  005606  B0D8               	btfsc	status,0,c
  7418  005608  D7DD               	goto	l1313
  7419                           
  7420                           ; BSR set to: 0
  7421                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7422  00560A  52E5               	movf	postdec1,f,c
  7423  00560C  52E5               	movf	postdec1,f,c
  7424  00560E  52E5               	movf	postdec1,f,c
  7425  005610  52E5               	movf	postdec1,f,c
  7426  005612  0012               	return		;funcret
  7427  005614                     __end_of_wdtdelay:
  7428                           	opt callstack 0
  7429                           
  7430 ;; *************** function _start_lcd *****************
  7431 ;; Defined at:
  7432 ;;		line 109 in file "eadog.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;		None
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1  [STACK] void 
  7439 ;; Registers used:
  7440 ;;		None
  7441 ;; Tracked objects:
  7442 ;;		On entry : 3F/0
  7443 ;;		On exit  : 3F/3B
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7450 ;;Total ram usage:        0 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    3
  7453 ;; This function calls:
  7454 ;;		Nothing
  7455 ;; This function is called by:
  7456 ;;		_eaDogM_WriteString
  7457 ;;		_send_lcd_cmd_dma
  7458 ;; This function uses a reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text31
  7462  00608C                     __ptext31:
  7463                           	opt callstack 0
  7464  00608C                     _start_lcd:
  7465                           	opt callstack 25
  7466                           
  7467                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  7468                           
  7469                           ; BSR set to: 0
  7470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7471                           ;incstack = 0
  7472  00608C  013B               	movlb	59	; () banked
  7473  00608E  8DFC               	bsf	252,6,b	;volatile
  7474                           
  7475                           ; BSR set to: 59
  7476                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7477  006090  0012               	return		;funcret
  7478  006092                     __end_of_start_lcd:
  7479                           	opt callstack 0
  7480                           
  7481 ;; *************** function _ringBufS_flush *****************
  7482 ;; Defined at:
  7483 ;;		line 76 in file "ringbufs.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7486 ;;		 -> ring_buf1(67), 
  7487 ;;  clearBuffer     1  [STACK] const char 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1  [STACK] void 
  7492 ;; Registers used:
  7493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7494 ;; Tracked objects:
  7495 ;;		On entry : 3F/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    4
  7506 ;; This function calls:
  7507 ;;		_memset
  7508 ;; This function is called by:
  7509 ;;		_eaDogM_WriteString
  7510 ;;		_send_lcd_cmd_dma
  7511 ;; This function uses a reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text32
  7515  0052AA                     __ptext32:
  7516                           	opt callstack 0
  7517  0052AA                     _ringBufS_flush:
  7518                           	opt callstack 24
  7519                           
  7520                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7521                           ;stkvar	__this @ sp[(0)+-2]
  7522                           
  7523                           ; BSR set to: 59
  7524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7525                           ;incstack = 0
  7526  0052AA  0EFE               	movlw	-2
  7527  0052AC  006F FF8C  F047    	movff	plusw1,btemp+10
  7528  0052B2  0EFF               	movlw	-1
  7529  0052B4  006F FF8C  F048    	movff	plusw1,btemp+11
  7530  0052BA  0E42               	movlw	66
  7531  0052BC  2447               	addwf	btemp+10,w,c
  7532  0052BE  6ED9               	movwf	fsr2l,c
  7533  0052C0  0E00               	movlw	0
  7534  0052C2  2048               	addwfc	btemp+11,w,c
  7535  0052C4  6EDA               	movwf	fsr2h,c
  7536  0052C6  0E00               	movlw	0
  7537  0052C8  6EDF               	movwf	indf2,c
  7538                           
  7539                           ;ringbufs.c: 79:  _this->head = 0;
  7540                           ;stkvar	__this @ sp[(0)+-2]
  7541  0052CA  0EFE               	movlw	-2
  7542  0052CC  006F FF8C  F047    	movff	plusw1,btemp+10
  7543  0052D2  0EFF               	movlw	-1
  7544  0052D4  006F FF8C  F048    	movff	plusw1,btemp+11
  7545  0052DA  0E40               	movlw	64
  7546  0052DC  2447               	addwf	btemp+10,w,c
  7547  0052DE  6ED9               	movwf	fsr2l,c
  7548  0052E0  0E00               	movlw	0
  7549  0052E2  2048               	addwfc	btemp+11,w,c
  7550  0052E4  6EDA               	movwf	fsr2h,c
  7551  0052E6  0E00               	movlw	0
  7552  0052E8  6EDF               	movwf	indf2,c
  7553                           
  7554                           ;ringbufs.c: 80:  _this->tail = 0;
  7555                           ;stkvar	__this @ sp[(0)+-2]
  7556  0052EA  0EFE               	movlw	-2
  7557  0052EC  006F FF8C  F047    	movff	plusw1,btemp+10
  7558  0052F2  0EFF               	movlw	-1
  7559  0052F4  006F FF8C  F048    	movff	plusw1,btemp+11
  7560  0052FA  0E41               	movlw	65
  7561  0052FC  2447               	addwf	btemp+10,w,c
  7562  0052FE  6ED9               	movwf	fsr2l,c
  7563  005300  0E00               	movlw	0
  7564  005302  2048               	addwfc	btemp+11,w,c
  7565  005304  6EDA               	movwf	fsr2h,c
  7566  005306  0E00               	movlw	0
  7567  005308  6EDF               	movwf	indf2,c
  7568                           
  7569                           ;ringbufs.c: 81:  if (clearBuffer) {
  7570                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7571  00530A  0EFD               	movlw	-3
  7572  00530C  50E3               	movf	plusw1,w,c
  7573  00530E  B4D8               	btfsc	status,2,c
  7574  005310  D011               	goto	l1449
  7575                           
  7576                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7577  005312  0E40               	movlw	64
  7578  005314  6EE6               	movwf	postinc1,c
  7579  005316  0E00               	movlw	0
  7580  005318  6EE6               	movwf	postinc1,c
  7581  00531A  0E00               	movlw	0
  7582  00531C  6EE6               	movwf	postinc1,c
  7583  00531E  0E00               	movlw	0
  7584  005320  6EE6               	movwf	postinc1,c
  7585                           
  7586                           ;stkvar	__this @ sp[(-4)+-2]
  7587  005322  0EFA               	movlw	-6
  7588  005324  006F FF8F FFE6     	movff	plusw1,postinc1
  7589  00532A  006F FF8F FFE6     	movff	plusw1,postinc1
  7590  005330  EC12  F01B         	call	_memset	;wreg free
  7591  005334                     l1449:
  7592                           
  7593                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7594  005334  52E5               	movf	postdec1,f,c
  7595  005336  52E5               	movf	postdec1,f,c
  7596  005338  52E5               	movf	postdec1,f,c
  7597  00533A  0012               	return		;funcret
  7598  00533C                     __end_of_ringBufS_flush:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function _memset *****************
  7602 ;; Defined at:
  7603 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  dest            2  [STACK] PTR void 
  7606 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7607 ;;  c               2  [STACK] int 
  7608 ;;  n               2  [STACK] unsigned int 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  s               2  [STACK] PTR unsigned char 
  7611 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7612 ;;  k               2  [STACK] unsigned int 
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  2  [STACK] PTR void 
  7615 ;; Registers used:
  7616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7626 ;;Total ram usage:        0 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    3
  7629 ;; This function calls:
  7630 ;;		Nothing
  7631 ;; This function is called by:
  7632 ;;		_ringBufS_init
  7633 ;;		_ringBufS_flush
  7634 ;; This function uses a reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text33
  7638  003624                     __ptext33:
  7639                           	opt callstack 0
  7640  003624                     _memset:
  7641                           	opt callstack 0
  7642                           
  7643                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7644  003624  52E6               	movf	postinc1,f,c
  7645  003626  52E6               	movf	postinc1,f,c
  7646  003628  52E6               	movf	postinc1,f,c
  7647  00362A  52E6               	movf	postinc1,f,c
  7648                           
  7649                           ;stkvar	_dest @ sp[(-4)+-2]
  7650                           
  7651                           ;incstack = 0
  7652  00362C  0EFA               	movlw	-6
  7653  00362E  006F FF8C  F047    	movff	plusw1,btemp+10
  7654  003634  0EFB               	movlw	-5
  7655  003636  006F FF8C  F048    	movff	plusw1,btemp+11
  7656                           
  7657                           ;stkvar	_s @ sp[(-4)+0]
  7658  00363C  0EFD               	movlw	-3
  7659  00363E  0060  F123  FFE3   	movff	btemp+11,plusw1
  7660  003644  0EFC               	movlw	-4
  7661  003646  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7662                           
  7663                           ;stkvar	_n @ sp[(-4)+-6]
  7664  00364C  0EF6               	movlw	-10
  7665  00364E  006F FF8C  F03D    	movff	plusw1,btemp
  7666  003654  0EF7               	movlw	-9
  7667  003656  50E3               	movf	plusw1,w,c
  7668  003658  103D               	iorwf	btemp,w,c
  7669  00365A  B4D8               	btfsc	status,2,c
  7670  00365C  D154               	goto	u4800
  7671                           
  7672                           ;stkvar	_c @ sp[(-4)+-4]
  7673                           ;stkvar	_s @ sp[(-4)+0]
  7674  00365E  0EFC               	movlw	-4
  7675  003660  006F FF8F FFD9     	movff	plusw1,fsr2l
  7676  003666  0EFD               	movlw	-3
  7677  003668  006F FF8F FFDA     	movff	plusw1,fsr2h
  7678  00366E  0EF8               	movlw	-8
  7679  003670  006F FF8F FFDF     	movff	plusw1,indf2
  7680                           
  7681                           ;stkvar	_c @ sp[(-4)+-4]
  7682                           ;stkvar	_n @ sp[(-4)+-6]
  7683                           ;stkvar	_s @ sp[(-4)+0]
  7684  003676  0EFC               	movlw	-4
  7685  003678  006F FF8C  F047    	movff	plusw1,btemp+10
  7686  00367E  0EFD               	movlw	-3
  7687  003680  006F FF8C  F048    	movff	plusw1,btemp+11
  7688  003686  0EF6               	movlw	-10
  7689  003688  50E3               	movf	plusw1,w,c
  7690  00368A  2647               	addwf	btemp+10,f,c
  7691  00368C  0EF7               	movlw	-9
  7692  00368E  50E3               	movf	plusw1,w,c
  7693  003690  2248               	addwfc	btemp+11,f,c
  7694  003692  0EFF               	movlw	255
  7695  003694  2447               	addwf	btemp+10,w,c
  7696  003696  6ED9               	movwf	fsr2l,c
  7697  003698  0EFF               	movlw	255
  7698  00369A  2048               	addwfc	btemp+11,w,c
  7699  00369C  6EDA               	movwf	fsr2h,c
  7700  00369E  0EF8               	movlw	-8
  7701  0036A0  006F FF8F FFDF     	movff	plusw1,indf2
  7702                           
  7703                           ;stkvar	_n @ sp[(-4)+-6]
  7704  0036A6  0EF7               	movlw	-9
  7705  0036A8  50E3               	movf	plusw1,w,c
  7706  0036AA  E108               	bnz	l7692
  7707  0036AC  0EF6               	movlw	-10
  7708  0036AE  006F FF8C  F03D    	movff	plusw1,btemp
  7709  0036B4  0E03               	movlw	3
  7710  0036B6  5E3D               	subwf	btemp,f,c
  7711  0036B8  A0D8               	btfss	status,0,c
  7712  0036BA  D125               	goto	u4800
  7713  0036BC                     l7692:
  7714                           
  7715                           ;stkvar	_c @ sp[(-4)+-4]
  7716                           ;stkvar	_s @ sp[(-4)+0]
  7717  0036BC  0EFC               	movlw	-4
  7718  0036BE  006F FF8C  F047    	movff	plusw1,btemp+10
  7719  0036C4  0EFD               	movlw	-3
  7720  0036C6  006F FF8C  F048    	movff	plusw1,btemp+11
  7721  0036CC  0E01               	movlw	1
  7722  0036CE  2447               	addwf	btemp+10,w,c
  7723  0036D0  6ED9               	movwf	fsr2l,c
  7724  0036D2  0E00               	movlw	0
  7725  0036D4  2048               	addwfc	btemp+11,w,c
  7726  0036D6  6EDA               	movwf	fsr2h,c
  7727  0036D8  0EF8               	movlw	-8
  7728  0036DA  006F FF8F FFDF     	movff	plusw1,indf2
  7729                           
  7730                           ;stkvar	_c @ sp[(-4)+-4]
  7731                           ;stkvar	_s @ sp[(-4)+0]
  7732  0036E0  0EFC               	movlw	-4
  7733  0036E2  006F FF8C  F047    	movff	plusw1,btemp+10
  7734  0036E8  0EFD               	movlw	-3
  7735  0036EA  006F FF8C  F048    	movff	plusw1,btemp+11
  7736  0036F0  0E02               	movlw	2
  7737  0036F2  2447               	addwf	btemp+10,w,c
  7738  0036F4  6ED9               	movwf	fsr2l,c
  7739  0036F6  0E00               	movlw	0
  7740  0036F8  2048               	addwfc	btemp+11,w,c
  7741  0036FA  6EDA               	movwf	fsr2h,c
  7742  0036FC  0EF8               	movlw	-8
  7743  0036FE  006F FF8F FFDF     	movff	plusw1,indf2
  7744                           
  7745                           ;stkvar	_c @ sp[(-4)+-4]
  7746                           ;stkvar	_n @ sp[(-4)+-6]
  7747                           ;stkvar	_s @ sp[(-4)+0]
  7748  003704  0EFC               	movlw	-4
  7749  003706  006F FF8C  F047    	movff	plusw1,btemp+10
  7750  00370C  0EFD               	movlw	-3
  7751  00370E  006F FF8C  F048    	movff	plusw1,btemp+11
  7752  003714  0EF6               	movlw	-10
  7753  003716  50E3               	movf	plusw1,w,c
  7754  003718  2647               	addwf	btemp+10,f,c
  7755  00371A  0EF7               	movlw	-9
  7756  00371C  50E3               	movf	plusw1,w,c
  7757  00371E  2248               	addwfc	btemp+11,f,c
  7758  003720  0EFE               	movlw	254
  7759  003722  2447               	addwf	btemp+10,w,c
  7760  003724  6ED9               	movwf	fsr2l,c
  7761  003726  0EFF               	movlw	255
  7762  003728  2048               	addwfc	btemp+11,w,c
  7763  00372A  6EDA               	movwf	fsr2h,c
  7764  00372C  0EF8               	movlw	-8
  7765  00372E  006F FF8F FFDF     	movff	plusw1,indf2
  7766                           
  7767                           ;stkvar	_c @ sp[(-4)+-4]
  7768                           ;stkvar	_n @ sp[(-4)+-6]
  7769                           ;stkvar	_s @ sp[(-4)+0]
  7770  003734  0EFC               	movlw	-4
  7771  003736  006F FF8C  F047    	movff	plusw1,btemp+10
  7772  00373C  0EFD               	movlw	-3
  7773  00373E  006F FF8C  F048    	movff	plusw1,btemp+11
  7774  003744  0EF6               	movlw	-10
  7775  003746  50E3               	movf	plusw1,w,c
  7776  003748  2647               	addwf	btemp+10,f,c
  7777  00374A  0EF7               	movlw	-9
  7778  00374C  50E3               	movf	plusw1,w,c
  7779  00374E  2248               	addwfc	btemp+11,f,c
  7780  003750  0EFD               	movlw	253
  7781  003752  2447               	addwf	btemp+10,w,c
  7782  003754  6ED9               	movwf	fsr2l,c
  7783  003756  0EFF               	movlw	255
  7784  003758  2048               	addwfc	btemp+11,w,c
  7785  00375A  6EDA               	movwf	fsr2h,c
  7786  00375C  0EF8               	movlw	-8
  7787  00375E  006F FF8F FFDF     	movff	plusw1,indf2
  7788                           
  7789                           ;stkvar	_n @ sp[(-4)+-6]
  7790  003764  0EF7               	movlw	-9
  7791  003766  50E3               	movf	plusw1,w,c
  7792  003768  E108               	bnz	l7698
  7793  00376A  0EF6               	movlw	-10
  7794  00376C  006F FF8C  F03D    	movff	plusw1,btemp
  7795  003772  0E07               	movlw	7
  7796  003774  5E3D               	subwf	btemp,f,c
  7797  003776  A0D8               	btfss	status,0,c
  7798  003778  D0C6               	goto	u4800
  7799  00377A                     l7698:
  7800                           
  7801                           ;stkvar	_c @ sp[(-4)+-4]
  7802                           ;stkvar	_s @ sp[(-4)+0]
  7803  00377A  0EFC               	movlw	-4
  7804  00377C  006F FF8C  F047    	movff	plusw1,btemp+10
  7805  003782  0EFD               	movlw	-3
  7806  003784  006F FF8C  F048    	movff	plusw1,btemp+11
  7807  00378A  0E03               	movlw	3
  7808  00378C  2447               	addwf	btemp+10,w,c
  7809  00378E  6ED9               	movwf	fsr2l,c
  7810  003790  0E00               	movlw	0
  7811  003792  2048               	addwfc	btemp+11,w,c
  7812  003794  6EDA               	movwf	fsr2h,c
  7813  003796  0EF8               	movlw	-8
  7814  003798  006F FF8F FFDF     	movff	plusw1,indf2
  7815                           
  7816                           ;stkvar	_c @ sp[(-4)+-4]
  7817                           ;stkvar	_n @ sp[(-4)+-6]
  7818                           ;stkvar	_s @ sp[(-4)+0]
  7819  00379E  0EFC               	movlw	-4
  7820  0037A0  006F FF8C  F047    	movff	plusw1,btemp+10
  7821  0037A6  0EFD               	movlw	-3
  7822  0037A8  006F FF8C  F048    	movff	plusw1,btemp+11
  7823  0037AE  0EF6               	movlw	-10
  7824  0037B0  50E3               	movf	plusw1,w,c
  7825  0037B2  2647               	addwf	btemp+10,f,c
  7826  0037B4  0EF7               	movlw	-9
  7827  0037B6  50E3               	movf	plusw1,w,c
  7828  0037B8  2248               	addwfc	btemp+11,f,c
  7829  0037BA  0EFC               	movlw	252
  7830  0037BC  2447               	addwf	btemp+10,w,c
  7831  0037BE  6ED9               	movwf	fsr2l,c
  7832  0037C0  0EFF               	movlw	255
  7833  0037C2  2048               	addwfc	btemp+11,w,c
  7834  0037C4  6EDA               	movwf	fsr2h,c
  7835  0037C6  0EF8               	movlw	-8
  7836  0037C8  006F FF8F FFDF     	movff	plusw1,indf2
  7837                           
  7838                           ;stkvar	_n @ sp[(-4)+-6]
  7839  0037CE  0EF7               	movlw	-9
  7840  0037D0  50E3               	movf	plusw1,w,c
  7841  0037D2  E108               	bnz	l7704
  7842  0037D4  0EF6               	movlw	-10
  7843  0037D6  006F FF8C  F03D    	movff	plusw1,btemp
  7844  0037DC  0E09               	movlw	9
  7845  0037DE  5E3D               	subwf	btemp,f,c
  7846  0037E0  A0D8               	btfss	status,0,c
  7847  0037E2  D091               	goto	u4800
  7848  0037E4                     l7704:
  7849                           
  7850                           ;stkvar	_s @ sp[(-4)+0]
  7851  0037E4  0EFC               	movlw	-4
  7852  0037E6  006F FF8C  F047    	movff	plusw1,btemp+10
  7853  0037EC  1E47               	comf	btemp+10,f,c
  7854  0037EE  0EFD               	movlw	-3
  7855  0037F0  006F FF8C  F048    	movff	plusw1,btemp+11
  7856  0037F6  1E48               	comf	btemp+11,f,c
  7857  0037F8  2A47               	incf	btemp+10,f,c
  7858  0037FA  B4D8               	btfsc	status,2,c
  7859  0037FC  2A48               	incf	btemp+11,f,c
  7860  0037FE  0E03               	movlw	3
  7861  003800  1647               	andwf	btemp+10,f,c
  7862  003802  0E00               	movlw	0
  7863  003804  1648               	andwf	btemp+11,f,c
  7864                           
  7865                           ;stkvar	_k @ sp[(-4)+2]
  7866  003806  0EFE               	movlw	-2
  7867  003808  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7868  00380E  0EFF               	movlw	-1
  7869  003810  0060  F123  FFE3   	movff	btemp+11,plusw1
  7870                           
  7871                           ;stkvar	_k @ sp[(-4)+2]
  7872                           ;stkvar	_s @ sp[(-4)+0]
  7873  003816  0EFC               	movlw	-4
  7874  003818  50E3               	movf	plusw1,w,c
  7875  00381A  6E3D               	movwf	btemp,c
  7876  00381C  0EFE               	movlw	-2
  7877  00381E  50E3               	movf	plusw1,w,c
  7878  003820  263D               	addwf	btemp,f,c
  7879  003822  0EFC               	movlw	-4
  7880  003824  0060  F0F7  FFE3   	movff	btemp,plusw1
  7881  00382A  0EFD               	movlw	-3
  7882  00382C  50E3               	movf	plusw1,w,c
  7883  00382E  6E3D               	movwf	btemp,c
  7884  003830  0EFF               	movlw	-1
  7885  003832  50E3               	movf	plusw1,w,c
  7886  003834  223D               	addwfc	btemp,f,c
  7887  003836  0EFD               	movlw	-3
  7888  003838  0060  F0F7  FFE3   	movff	btemp,plusw1
  7889                           
  7890                           ;stkvar	_k @ sp[(-4)+2]
  7891                           ;stkvar	_n @ sp[(-4)+-6]
  7892  00383E  0EF6               	movlw	-10
  7893  003840  50E3               	movf	plusw1,w,c
  7894  003842  6E3D               	movwf	btemp,c
  7895  003844  0EFE               	movlw	-2
  7896  003846  50E3               	movf	plusw1,w,c
  7897  003848  5E3D               	subwf	btemp,f,c
  7898  00384A  0EF6               	movlw	-10
  7899  00384C  0060  F0F7  FFE3   	movff	btemp,plusw1
  7900  003852  0EF7               	movlw	-9
  7901  003854  50E3               	movf	plusw1,w,c
  7902  003856  6E3D               	movwf	btemp,c
  7903  003858  0EFF               	movlw	-1
  7904  00385A  50E3               	movf	plusw1,w,c
  7905  00385C  5A3D               	subwfb	btemp,f,c
  7906  00385E  0EF7               	movlw	-9
  7907  003860  0060  F0F7  FFE3   	movff	btemp,plusw1
  7908  003866  0EFC               	movlw	252
  7909  003868  6E47               	movwf	btemp+10,c
  7910  00386A  0EFF               	movlw	255
  7911  00386C  6E48               	movwf	btemp+11,c
  7912                           
  7913                           ;stkvar	_n @ sp[(-4)+-6]
  7914  00386E  0EF6               	movlw	-10
  7915  003870  006F FF8C  F03D    	movff	plusw1,btemp
  7916  003876  5047               	movf	btemp+10,w,c
  7917  003878  163D               	andwf	btemp,f,c
  7918  00387A  0EF6               	movlw	-10
  7919  00387C  0060  F0F7  FFE3   	movff	btemp,plusw1
  7920  003882  0EF7               	movlw	-9
  7921  003884  006F FF8C  F03D    	movff	plusw1,btemp
  7922  00388A  5048               	movf	btemp+11,w,c
  7923  00388C  163D               	andwf	btemp,f,c
  7924  00388E  0EF7               	movlw	-9
  7925  003890  D02E               	goto	L20
  7926  003892                     l7712:
  7927                           
  7928                           ;stkvar	_c @ sp[(-4)+-4]
  7929                           ;stkvar	_s @ sp[(-4)+0]
  7930  003892  0EFC               	movlw	-4
  7931  003894  006F FF8F FFD9     	movff	plusw1,fsr2l
  7932  00389A  0EFD               	movlw	-3
  7933  00389C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7934  0038A2  0EF8               	movlw	-8
  7935  0038A4  006F FF8F FFDF     	movff	plusw1,indf2
  7936                           
  7937                           ;stkvar	_n @ sp[(-4)+-6]
  7938  0038AA  0EF6               	movlw	-10
  7939  0038AC  006F FF8C  F03D    	movff	plusw1,btemp
  7940  0038B2  0E01               	movlw	1
  7941  0038B4  5E3D               	subwf	btemp,f,c
  7942  0038B6  0EF6               	movlw	-10
  7943  0038B8  0060  F0F7  FFE3   	movff	btemp,plusw1
  7944  0038BE  0EF7               	movlw	-9
  7945  0038C0  006F FF8C  F03D    	movff	plusw1,btemp
  7946  0038C6  0E00               	movlw	0
  7947  0038C8  5A3D               	subwfb	btemp,f,c
  7948  0038CA  0EF7               	movlw	-9
  7949  0038CC  0060  F0F7  FFE3   	movff	btemp,plusw1
  7950                           
  7951                           ;stkvar	_s @ sp[(-4)+0]
  7952  0038D2  0EFC               	movlw	-4
  7953  0038D4  50E3               	movf	plusw1,w,c
  7954  0038D6  0F01               	addlw	1
  7955  0038D8  6E3D               	movwf	btemp,c
  7956  0038DA  0EFC               	movlw	-4
  7957  0038DC  0060  F0F7  FFE3   	movff	btemp,plusw1
  7958  0038E2  6A3D               	clrf	btemp,c
  7959  0038E4  0EFD               	movlw	-3
  7960  0038E6  50E3               	movf	plusw1,w,c
  7961  0038E8  203D               	addwfc	btemp,w,c
  7962  0038EA  6E3D               	movwf	btemp,c
  7963  0038EC  0EFD               	movlw	-3
  7964  0038EE                     L20:
  7965  0038EE  0060  F0F7  FFE3   	movff	btemp,plusw1
  7966                           
  7967                           ;stkvar	_n @ sp[(-4)+-6]
  7968  0038F4  0EF6               	movlw	-10
  7969  0038F6  006F FF8C  F03D    	movff	plusw1,btemp
  7970  0038FC  0EF7               	movlw	-9
  7971  0038FE  50E3               	movf	plusw1,w,c
  7972  003900  103D               	iorwf	btemp,w,c
  7973  003902  A4D8               	btfss	status,2,c
  7974  003904  D7C6               	goto	l7712
  7975  003906                     u4800:
  7976                           
  7977                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7978  003906  0EF6               	movlw	246
  7979  003908  26E1               	addwf	fsr1l,f,c
  7980  00390A  0EFF               	movlw	255
  7981  00390C  22E2               	addwfc	fsr1h,f,c
  7982  00390E  0012               	return		;funcret
  7983  003910                     __end_of_memset:
  7984                           	opt callstack 0
  7985                           
  7986 ;; *************** function _printf *****************
  7987 ;; Defined at:
  7988 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  fmt             1  [STACK] PTR const unsigned char 
  7991 ;;		 -> STR_16(3), STR_15(3), STR_14(3), 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  ap              2  [STACK] PTR void [1]
  7994 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7995 ;;  ret             2    0        int 
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  2  [STACK] int 
  7998 ;; Registers used:
  7999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8000 ;; Tracked objects:
  8001 ;;		On entry : 3F/3B
  8002 ;;		On exit  : 3F/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8009 ;;Total ram usage:        0 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; Hardware stack levels required when called:   11
  8012 ;; This function calls:
  8013 ;;		_vfprintf
  8014 ;; This function is called by:
  8015 ;;		_eaDogM_WriteString
  8016 ;;		_send_lcd_cmd_dma
  8017 ;; This function uses a reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text34
  8021  0054F8                     __ptext34:
  8022                           	opt callstack 0
  8023  0054F8                     _printf:
  8024                           	opt callstack 0
  8025                           
  8026                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8027  0054F8  52E6               	movf	postinc1,f,c
  8028  0054FA  52E6               	movf	postinc1,f,c
  8029                           
  8030                           ;stkvar	?_printf @ sp[(-2)+-3]
  8031                           
  8032                           ;incstack = 0
  8033  0054FC  0EFB               	movlw	251
  8034  0054FE  24E1               	addwf	fsr1l,w,c
  8035  005500  6E47               	movwf	btemp+10,c
  8036  005502  0EFF               	movlw	255
  8037  005504  20E2               	addwfc	fsr1h,w,c
  8038  005506  6E48               	movwf	btemp+11,c
  8039  005508  0E01               	movlw	1
  8040  00550A  2647               	addwf	btemp+10,f,c
  8041  00550C  0E00               	movlw	0
  8042  00550E  2248               	addwfc	btemp+11,f,c
  8043                           
  8044                           ;stkvar	_ap @ sp[(-2)+0]
  8045  005510  0EFF               	movlw	-1
  8046  005512  0060  F123  FFE3   	movff	btemp+11,plusw1
  8047  005518  0EFE               	movlw	-2
  8048  00551A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8049                           
  8050                           ;stkvar	_ap @ sp[(-2)+0]
  8051  005520  0EFE               	movlw	254
  8052  005522  24E1               	addwf	fsr1l,w,c
  8053  005524  6E3D               	movwf	btemp,c
  8054  005526  0EFF               	movlw	255
  8055  005528  20E2               	addwfc	fsr1h,w,c
  8056  00552A  6E3E               	movwf	btemp+1,c
  8057  00552C  0060  F0F7  FFE6   	movff	btemp,postinc1
  8058  005532  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  8059                           
  8060                           ;stkvar	_fmt @ sp[(-4)+-2]
  8061  005538  0EFA               	movlw	-6
  8062  00553A  50E3               	movf	plusw1,w,c
  8063  00553C  6EE6               	movwf	postinc1,c
  8064  00553E  0E00               	movlw	0
  8065  005540  6EE6               	movwf	postinc1,c
  8066  005542  0E00               	movlw	0
  8067  005544  6EE6               	movwf	postinc1,c
  8068  005546  ECBD  F028         	call	_vfprintf	;wreg free
  8069                           
  8070                           ; BSR set to: 0
  8071                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  8072  00554A  52E5               	movf	postdec1,f,c
  8073  00554C  52E5               	movf	postdec1,f,c
  8074  00554E  52E5               	movf	postdec1,f,c
  8075  005550  50E7               	movf	indf1,w,c
  8076  005552  5EE1               	subwf	fsr1l,f,c
  8077  005554  0E00               	movlw	0
  8078  005556  5AE2               	subwfb	fsr1h,f,c
  8079  005558  0012               	return		;funcret
  8080  00555A                     __end_of_printf:
  8081                           	opt callstack 0
  8082                           
  8083 ;; *************** function _vfprintf *****************
  8084 ;; Defined at:
  8085 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8088 ;;		 -> f(5), NULL(0), 
  8089 ;;  fmt             1  [STACK] PTR const unsigned char 
  8090 ;;		 -> STR_16(3), STR_15(3), STR_14(3), STR_13(21), 
  8091 ;;		 -> STR_12(17), STR_11(6), STR_10(14), STR_9(19), 
  8092 ;;		 -> STR_8(20), STR_7(6), STR_6(6), STR_5(14), 
  8093 ;;		 -> STR_4(15), STR_2(12), STR_1(17), 
  8094 ;;  ap              2  [STACK] PTR PTR void 
  8095 ;;		 -> ap(2), ap(2), 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  cfmt            1  [STACK] PTR unsigned char 
  8098 ;;		 -> STR_16(3), STR_15(3), STR_14(3), STR_13(21), 
  8099 ;;		 -> STR_12(17), STR_11(6), STR_10(14), STR_9(19), 
  8100 ;;		 -> STR_8(20), STR_7(6), STR_6(6), STR_5(14), 
  8101 ;;		 -> STR_4(15), STR_2(12), STR_1(17), 
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  2  [STACK] int 
  8104 ;; Registers used:
  8105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 3F/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8115 ;;Total ram usage:        0 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:   10
  8118 ;; This function calls:
  8119 ;;		_vfpfcnvrt
  8120 ;; This function is called by:
  8121 ;;		_sprintf
  8122 ;;		_printf
  8123 ;; This function uses a reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text35
  8127  00517A                     __ptext35:
  8128                           	opt callstack 0
  8129  00517A                     _vfprintf:
  8130                           	opt callstack 0
  8131                           
  8132                           ; BSR set to: 0
  8133                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8134  00517A  52E6               	movf	postinc1,f,c
  8135                           
  8136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8137                           ;stkvar	_fmt @ sp[(-1)+-3]
  8138                           
  8139                           ;incstack = 0
  8140  00517C  0EFC               	movlw	-4
  8141  00517E  006F FF8C  F048    	movff	plusw1,btemp+11
  8142                           
  8143                           ;stkvar	_cfmt @ sp[(-1)+0]
  8144  005184  0EFF               	movlw	-1
  8145  005186  0060  F123  FFE3   	movff	btemp+11,plusw1
  8146                           
  8147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8148  00518C  0100               	movlb	0	; () banked
  8149  00518E  6B93               	clrf	_nout& (0+255),b
  8150  005190  6B94               	clrf	(_nout+1)& (0+255),b
  8151                           
  8152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8153  005192  D021               	goto	l7726
  8154  005194                     l7724:
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8158                           ;stkvar	_ap @ sp[(-1)+-5]
  8159  005194  0EFA               	movlw	-6
  8160  005196  006F FF8F FFE6     	movff	plusw1,postinc1
  8161  00519C  006F FF8F FFE6     	movff	plusw1,postinc1
  8162                           
  8163                           ;stkvar	_cfmt @ sp[(-3)+0]
  8164  0051A2  0EFD               	movlw	253
  8165  0051A4  24E1               	addwf	fsr1l,w,c
  8166  0051A6  6E3D               	movwf	btemp,c
  8167  0051A8  0EFF               	movlw	255
  8168  0051AA  20E2               	addwfc	fsr1h,w,c
  8169  0051AC  6E3E               	movwf	btemp+1,c
  8170  0051AE  0060  F0F7  FFE6   	movff	btemp,postinc1
  8171  0051B4  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  8172                           
  8173                           ;stkvar	_fp @ sp[(-5)+-2]
  8174  0051BA  0EF9               	movlw	-7
  8175  0051BC  006F FF8F FFE6     	movff	plusw1,postinc1
  8176  0051C2  006F FF8F FFE6     	movff	plusw1,postinc1
  8177  0051C8  ECD6  F012         	call	_vfpfcnvrt	;wreg free
  8178  0051CC  503D               	movf	btemp,w,c
  8179  0051CE  0100               	movlb	0	; () banked
  8180  0051D0  2793               	addwf	_nout& (0+255),f,b
  8181  0051D2  503E               	movf	btemp+1,w,c
  8182  0051D4  2394               	addwfc	(_nout+1)& (0+255),f,b
  8183  0051D6                     l7726:
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8187                           ;stkvar	_cfmt @ sp[(-1)+0]
  8188  0051D6  50E1               	movf	fsr1l,w,c
  8189  0051D8  0FFF               	addlw	-1
  8190  0051DA  6ED9               	movwf	fsr2l,c
  8191  0051DC  50E2               	movf	fsr1h,w,c
  8192  0051DE  6EDA               	movwf	fsr2h,c
  8193  0051E0  0EFF               	movlw	255
  8194  0051E2  22DA               	addwfc	fsr2h,f,c
  8195  0051E4  006F FF7F FFF6     	movff	indf2,tblptrl
  8196  0051EA                     	if	1	;There is more than 1 active tblptr byte
  8197  0051EA  0E20               	movlw	high __smallconst
  8198  0051EC  6EF7               	movwf	tblptrh,c
  8199  0051EE                     	endif
  8200  0051EE                     	if	0	;tblptru may be non-zero
  8201  0051EE                     	endif
  8202  0051EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8203  0051EE  0E00               	movlw	low (__smallconst shr (0+16))
  8204  0051F0  6EF8               	movwf	tblptru,c
  8205  0051F2                     	endif
  8206  0051F2  0008               	tblrd		*
  8207  0051F4  50F5               	movf	tablat,w,c
  8208  0051F6  0900               	iorlw	0
  8209  0051F8  A4D8               	btfss	status,2,c
  8210  0051FA  D7CC               	goto	l7724
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8214  0051FC  0060  F24C  F03D   	movff	_nout,btemp
  8215  005202  0060  F250  F03E   	movff	_nout+1,btemp+1
  8216                           
  8217                           ; BSR set to: 0
  8218                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  8219  005208  0EFA               	movlw	250
  8220  00520A  26E1               	addwf	fsr1l,f,c
  8221  00520C  0EFF               	movlw	255
  8222  00520E  22E2               	addwfc	fsr1h,f,c
  8223  005210  0012               	return		;funcret
  8224  005212                     __end_of_vfprintf:
  8225                           	opt callstack 0
  8226                           
  8227 ;; *************** function _vfpfcnvrt *****************
  8228 ;; Defined at:
  8229 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8232 ;;		 -> f(5), NULL(0), 
  8233 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8234 ;;		 -> cfmt(1), 
  8235 ;;  ap              2  [STACK] PTR PTR void 
  8236 ;;		 -> ap(2), ap(2), 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  ll              8  [STACK] long long 
  8239 ;;  llu             8    0        unsigned long long 
  8240 ;;  f               4    0        unsigned long long 
  8241 ;;  vp              3    0        PTR void 
  8242 ;;  ct              3    0        unsigned char [3]
  8243 ;;  cp              2  [STACK] PTR unsigned char 
  8244 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(87), 
  8245 ;;  i               2    0        int 
  8246 ;;  done            2    0        int 
  8247 ;;  c               1  [STACK] unsigned char 
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  2  [STACK] int 
  8250 ;; Registers used:
  8251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    9
  8264 ;; This function calls:
  8265 ;;		_ctoa
  8266 ;;		_dtoa
  8267 ;;		_fputc
  8268 ;;		_stoa
  8269 ;;		_strncmp
  8270 ;; This function is called by:
  8271 ;;		_vfprintf
  8272 ;; This function uses a reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text36
  8276  0025AC                     __ptext36:
  8277                           	opt callstack 0
  8278  0025AC                     _vfpfcnvrt:
  8279                           	opt callstack 0
  8280                           
  8281                           ; BSR set to: 0
  8282                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8283  0025AC  0E0B               	movlw	11
  8284  0025AE  26E1               	addwf	fsr1l,f,c
  8285  0025B0  0E00               	movlw	0
  8286  0025B2  22E2               	addwfc	fsr1h,f,c
  8287                           
  8288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8289                           ;stkvar	_fmt @ sp[(-11)+-4]
  8290                           
  8291                           ;incstack = 0
  8292  0025B4  0EF1               	movlw	-15
  8293  0025B6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8294  0025BC  0EF2               	movlw	-14
  8295  0025BE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8296  0025C4  006F FF7F FFF6     	movff	indf2,tblptrl
  8297  0025CA                     	if	1	;There is more than 1 active tblptr byte
  8298  0025CA  0E20               	movlw	high __smallconst
  8299  0025CC  6EF7               	movwf	tblptrh,c
  8300  0025CE                     	endif
  8301  0025CE                     	if	0	;tblptru may be non-zero
  8302  0025CE                     	endif
  8303  0025CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8304  0025CE  0E00               	movlw	low (__smallconst shr (0+16))
  8305  0025D0  6EF8               	movwf	tblptru,c
  8306  0025D2                     	endif
  8307  0025D2  0008               	tblrd		*
  8308  0025D4  50F5               	movf	tablat,w,c
  8309  0025D6  0A25               	xorlw	37
  8310  0025D8  A4D8               	btfss	status,2,c
  8311  0025DA  D213               	goto	l7670
  8312                           
  8313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8314                           ;stkvar	_fmt @ sp[(-11)+-4]
  8315  0025DC  0EF1               	movlw	-15
  8316  0025DE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8317  0025E4  0EF2               	movlw	-14
  8318  0025E6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8319  0025EC  2ADF               	incf	indf2,f,c
  8320                           
  8321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8322  0025EE  6A23               	clrf	_width,c
  8323  0025F0  6A24               	clrf	_width+1,c
  8324  0025F2  6A27               	clrf	_flags,c
  8325  0025F4  6A28               	clrf	_flags+1,c
  8326                           
  8327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8328  0025F6  6825               	setf	_prec,c
  8329  0025F8  6826               	setf	_prec+1,c
  8330                           
  8331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8332                           ;stkvar	_fmt @ sp[(-11)+-4]
  8333  0025FA  0EF1               	movlw	-15
  8334  0025FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8335  002602  0EF2               	movlw	-14
  8336  002604  006F FF8F FFDA     	movff	plusw1,fsr2h
  8337  00260A  006F FF7F FFF6     	movff	indf2,tblptrl
  8338  002610                     	if	1	;There is more than 1 active tblptr byte
  8339  002610  0E20               	movlw	high __smallconst
  8340  002612  6EF7               	movwf	tblptrh,c
  8341  002614                     	endif
  8342  002614                     	if	0	;tblptru may be non-zero
  8343  002614                     	endif
  8344  002614                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8345  002614  0E00               	movlw	low (__smallconst shr (0+16))
  8346  002616  6EF8               	movwf	tblptru,c
  8347  002618                     	endif
  8348  002618  0008               	tblrd		*
  8349  00261A  50F5               	movf	tablat,w,c
  8350  00261C  0A63               	xorlw	99
  8351  00261E  A4D8               	btfss	status,2,c
  8352  002620  D034               	goto	l7620
  8353                           
  8354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8355                           ;stkvar	_fmt @ sp[(-11)+-4]
  8356  002622  0EF1               	movlw	-15
  8357  002624  006F FF8F FFD9     	movff	plusw1,fsr2l
  8358  00262A  0EF2               	movlw	-14
  8359  00262C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8360  002632  2ADF               	incf	indf2,f,c
  8361                           
  8362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8363                           ;stkvar	_ap @ sp[(-11)+-6]
  8364  002634  0EEF               	movlw	-17
  8365  002636  006F FF8F FFD9     	movff	plusw1,fsr2l
  8366  00263C  0EF0               	movlw	-16
  8367  00263E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8368  002644  0E02               	movlw	2
  8369  002646  5EDE               	subwf	postinc2,f,c
  8370  002648  0E00               	movlw	0
  8371  00264A  5ADD               	subwfb	postdec2,f,c
  8372  00264C  006F FF78  F047    	movff	postinc2,btemp+10
  8373  002652  006F FF74  F048    	movff	postdec2,btemp+11
  8374  002658  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  8375  00265E  0060  F123  FFDA   	movff	btemp+11,fsr2h
  8376  002664  50DF               	movf	indf2,w,c
  8377  002666  6E48               	movwf	btemp+11,c
  8378                           
  8379                           ;stkvar	_c @ sp[(-11)+10]
  8380  002668  0EFF               	movlw	-1
  8381  00266A  0060  F123  FFE3   	movff	btemp+11,plusw1
  8382                           
  8383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8384                           ;stkvar	_c @ sp[(-11)+10]
  8385  002670  0EFF               	movlw	-1
  8386  002672  50E3               	movf	plusw1,w,c
  8387  002674  6EE6               	movwf	postinc1,c
  8388                           
  8389                           ;stkvar	_fp @ sp[(-12)+-2]
  8390  002676  0EF2               	movlw	-14
  8391  002678  006F FF8F FFE6     	movff	plusw1,postinc1
  8392  00267E  006F FF8F FFE6     	movff	plusw1,postinc1
  8393  002684  EC9E  F029         	call	_ctoa	;wreg free
  8394  002688  D1E3               	goto	l1818
  8395  00268A                     l7620:
  8396                           
  8397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8398                           ;stkvar	_fmt @ sp[(-11)+-4]
  8399  00268A  0EF1               	movlw	-15
  8400  00268C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8401  002692  0EF2               	movlw	-14
  8402  002694  006F FF8F FFDA     	movff	plusw1,fsr2h
  8403  00269A  006F FF7F FFF6     	movff	indf2,tblptrl
  8404  0026A0                     	if	1	;There is more than 1 active tblptr byte
  8405  0026A0  0E20               	movlw	high __smallconst
  8406  0026A2  6EF7               	movwf	tblptrh,c
  8407  0026A4                     	endif
  8408  0026A4                     	if	0	;tblptru may be non-zero
  8409  0026A4                     	endif
  8410  0026A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8411  0026A4  0E00               	movlw	low (__smallconst shr (0+16))
  8412  0026A6  6EF8               	movwf	tblptru,c
  8413  0026A8                     	endif
  8414  0026A8  0008               	tblrd		*
  8415  0026AA  50F5               	movf	tablat,w,c
  8416  0026AC  0A64               	xorlw	100
  8417  0026AE  B4D8               	btfsc	status,2,c
  8418  0026B0  D014               	goto	u4710
  8419                           
  8420                           ;stkvar	_fmt @ sp[(-11)+-4]
  8421  0026B2  0EF1               	movlw	-15
  8422  0026B4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8423  0026BA  0EF2               	movlw	-14
  8424  0026BC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8425  0026C2  006F FF7F FFF6     	movff	indf2,tblptrl
  8426  0026C8                     	if	1	;There is more than 1 active tblptr byte
  8427  0026C8  0E20               	movlw	high __smallconst
  8428  0026CA  6EF7               	movwf	tblptrh,c
  8429  0026CC                     	endif
  8430  0026CC                     	if	0	;tblptru may be non-zero
  8431  0026CC                     	endif
  8432  0026CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8433  0026CC  0E00               	movlw	low (__smallconst shr (0+16))
  8434  0026CE  6EF8               	movwf	tblptru,c
  8435  0026D0                     	endif
  8436  0026D0  0008               	tblrd		*
  8437  0026D2  50F5               	movf	tablat,w,c
  8438  0026D4  0A69               	xorlw	105
  8439  0026D6  A4D8               	btfss	status,2,c
  8440  0026D8  D073               	goto	l7632
  8441  0026DA                     u4710:
  8442                           
  8443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8444                           ;stkvar	_fmt @ sp[(-11)+-4]
  8445  0026DA  0EF1               	movlw	-15
  8446  0026DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8447  0026E2  0EF2               	movlw	-14
  8448  0026E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8449  0026EA  2ADF               	incf	indf2,f,c
  8450                           
  8451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8452                           ;stkvar	_ap @ sp[(-11)+-6]
  8453  0026EC  0EEF               	movlw	-17
  8454  0026EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8455  0026F4  0EF0               	movlw	-16
  8456  0026F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8457  0026FC  0E02               	movlw	2
  8458  0026FE  5EDE               	subwf	postinc2,f,c
  8459  002700  0E00               	movlw	0
  8460  002702  5ADD               	subwfb	postdec2,f,c
  8461  002704  006F FF78  F047    	movff	postinc2,btemp+10
  8462  00270A  006F FF74  F048    	movff	postdec2,btemp+11
  8463  002710  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  8464  002716  0060  F123  FFDA   	movff	btemp+11,fsr2h
  8465  00271C  006F FF78  F047    	movff	postinc2,btemp+10
  8466  002722  006F FF74  F048    	movff	postdec2,btemp+11
  8467                           
  8468                           ;stkvar	_ll @ sp[(-11)+0]
  8469  002728  0EF5               	movlw	-11
  8470  00272A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8471  002730  0EF6               	movlw	-10
  8472  002732  0060  F123  FFE3   	movff	btemp+11,plusw1
  8473  002738  6A3D               	clrf	btemp,c
  8474  00273A  BEE3               	btfsc	plusw1,7,c
  8475  00273C  683D               	setf	btemp,c
  8476  00273E  0EF7               	movlw	-9
  8477  002740  0060  F0F7  FFE3   	movff	btemp,plusw1
  8478  002746  0EF8               	movlw	-8
  8479  002748  0060  F0F7  FFE3   	movff	btemp,plusw1
  8480  00274E  0EF9               	movlw	-7
  8481  002750  0060  F0F7  FFE3   	movff	btemp,plusw1
  8482  002756  0EFA               	movlw	-6
  8483  002758  0060  F0F7  FFE3   	movff	btemp,plusw1
  8484  00275E  0EFB               	movlw	-5
  8485  002760  0060  F0F7  FFE3   	movff	btemp,plusw1
  8486  002766  0EFC               	movlw	-4
  8487  002768  0060  F0F7  FFE3   	movff	btemp,plusw1
  8488  00276E                     l7628:
  8489                           
  8490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8491                           ;stkvar	_ll @ sp[(-11)+0]
  8492  00276E  50E1               	movf	fsr1l,w,c
  8493  002770  0FF5               	addlw	-11
  8494  002772  6ED9               	movwf	fsr2l,c
  8495  002774  50E2               	movf	fsr1h,w,c
  8496  002776  6EDA               	movwf	fsr2h,c
  8497  002778  0EFF               	movlw	255
  8498  00277A  22DA               	addwfc	fsr2h,f,c
  8499  00277C  006F FF7B FFE6     	movff	postinc2,postinc1
  8500  002782  006F FF7B FFE6     	movff	postinc2,postinc1
  8501  002788  006F FF7B FFE6     	movff	postinc2,postinc1
  8502  00278E  006F FF7B FFE6     	movff	postinc2,postinc1
  8503  002794  006F FF7B FFE6     	movff	postinc2,postinc1
  8504  00279A  006F FF7B FFE6     	movff	postinc2,postinc1
  8505  0027A0  006F FF7B FFE6     	movff	postinc2,postinc1
  8506  0027A6  006F FF7B FFE6     	movff	postinc2,postinc1
  8507                           
  8508                           ;stkvar	_fp @ sp[(-19)+-2]
  8509  0027AC  0EEB               	movlw	-21
  8510  0027AE  006F FF8F FFE6     	movff	plusw1,postinc1
  8511  0027B4  006F FF8F FFE6     	movff	plusw1,postinc1
  8512  0027BA  EC2D  F015         	call	_dtoa	;wreg free
  8513  0027BE  D148               	goto	l1818
  8514  0027C0                     l7632:
  8515                           
  8516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  8517  0027C0  0E02               	movlw	2
  8518  0027C2  6EE6               	movwf	postinc1,c
  8519  0027C4  0E00               	movlw	0
  8520  0027C6  6EE6               	movwf	postinc1,c
  8521  0027C8  0E9A               	movlw	STR_17& (0+255)
  8522  0027CA  6EE6               	movwf	postinc1,c
  8523                           
  8524                           ;stkvar	_fmt @ sp[(-14)+-4]
  8525  0027CC  0EEE               	movlw	-18
  8526  0027CE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8527  0027D4  0EEF               	movlw	-17
  8528  0027D6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8529  0027DC  50DF               	movf	indf2,w,c
  8530  0027DE  6EE6               	movwf	postinc1,c
  8531  0027E0  EC94  F023         	call	_strncmp	;wreg free
  8532  0027E4  503D               	movf	btemp,w,c
  8533  0027E6  103E               	iorwf	btemp+1,w,c
  8534  0027E8  B4D8               	btfsc	status,2,c
  8535  0027EA  D016               	goto	u4730
  8536  0027EC  0E02               	movlw	2
  8537  0027EE  6EE6               	movwf	postinc1,c
  8538  0027F0  0E00               	movlw	0
  8539  0027F2  6EE6               	movwf	postinc1,c
  8540  0027F4  0E9D               	movlw	STR_21& (0+255)
  8541  0027F6  6EE6               	movwf	postinc1,c
  8542                           
  8543                           ;stkvar	_fmt @ sp[(-14)+-4]
  8544  0027F8  0EEE               	movlw	-18
  8545  0027FA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8546  002800  0EEF               	movlw	-17
  8547  002802  006F FF8F FFDA     	movff	plusw1,fsr2h
  8548  002808  50DF               	movf	indf2,w,c
  8549  00280A  6EE6               	movwf	postinc1,c
  8550  00280C  EC94  F023         	call	_strncmp	;wreg free
  8551  002810  503D               	movf	btemp,w,c
  8552  002812  103E               	iorwf	btemp+1,w,c
  8553  002814  A4D8               	btfss	status,2,c
  8554  002816  D067               	goto	l7644
  8555  002818                     u4730:
  8556                           
  8557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  8558                           ;stkvar	_fmt @ sp[(-11)+-4]
  8559  002818  0EF1               	movlw	-15
  8560  00281A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8561  002820  0EF2               	movlw	-14
  8562  002822  006F FF8F FFDA     	movff	plusw1,fsr2h
  8563  002828  0E02               	movlw	2
  8564  00282A  26DF               	addwf	indf2,f,c
  8565                           
  8566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  8567                           ;stkvar	_ap @ sp[(-11)+-6]
  8568  00282C  0EEF               	movlw	-17
  8569  00282E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8570  002834  0EF0               	movlw	-16
  8571  002836  006F FF8F FFDA     	movff	plusw1,fsr2h
  8572  00283C  0E04               	movlw	4
  8573  00283E  5EDE               	subwf	postinc2,f,c
  8574  002840  0E00               	movlw	0
  8575  002842  5ADD               	subwfb	postdec2,f,c
  8576  002844  006F FF78  F047    	movff	postinc2,btemp+10
  8577  00284A  006F FF74  F048    	movff	postdec2,btemp+11
  8578  002850  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  8579  002856  0060  F123  FFDA   	movff	btemp+11,fsr2h
  8580  00285C  006F FF78  F045    	movff	postinc2,btemp+8
  8581  002862  006F FF78  F046    	movff	postinc2,btemp+9
  8582  002868  006F FF78  F047    	movff	postinc2,btemp+10
  8583  00286E  006F FF78  F048    	movff	postinc2,btemp+11
  8584  002874  0060  F114  F04D   	movff	btemp+8,btemp+16
  8585  00287A  0060  F118  F04E   	movff	btemp+9,btemp+17
  8586  002880  0060  F11C  F04F   	movff	btemp+10,btemp+18
  8587  002886  0060  F120  F050   	movff	btemp+11,btemp+19
  8588  00288C  6A51               	clrf	btemp+20,c
  8589  00288E  BE50               	btfsc	btemp+19,7,c
  8590  002890  6851               	setf	btemp+20,c
  8591  002892  0060  F144  F052   	movff	btemp+20,btemp+21
  8592  002898  0060  F144  F053   	movff	btemp+20,btemp+22
  8593  00289E  0060  F144  F054   	movff	btemp+20,btemp+23
  8594                           
  8595                           ;stkvar	_ll @ sp[(-11)+0]
  8596  0028A4  0EF5               	movlw	-11
  8597  0028A6  0060  F137  FFE3   	movff	btemp+16,plusw1
  8598  0028AC  0EF6               	movlw	-10
  8599  0028AE  0060  F13B  FFE3   	movff	btemp+17,plusw1
  8600  0028B4  0EF7               	movlw	-9
  8601  0028B6  0060  F13F  FFE3   	movff	btemp+18,plusw1
  8602  0028BC  0EF8               	movlw	-8
  8603  0028BE  0060  F143  FFE3   	movff	btemp+19,plusw1
  8604  0028C4  0EF9               	movlw	-7
  8605  0028C6  0060  F147  FFE3   	movff	btemp+20,plusw1
  8606  0028CC  0EFA               	movlw	-6
  8607  0028CE  0060  F14B  FFE3   	movff	btemp+21,plusw1
  8608  0028D4  0EFB               	movlw	-5
  8609  0028D6  0060  F14F  FFE3   	movff	btemp+22,plusw1
  8610  0028DC  0EFC               	movlw	-4
  8611  0028DE  0060  F153  FFE3   	movff	btemp+23,plusw1
  8612  0028E4  D744               	goto	l7628
  8613  0028E6                     l7644:
  8614                           
  8615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8616                           ;stkvar	_fmt @ sp[(-11)+-4]
  8617  0028E6  0EF1               	movlw	-15
  8618  0028E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8619  0028EE  0EF2               	movlw	-14
  8620  0028F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8621  0028F6  006F FF7F FFF6     	movff	indf2,tblptrl
  8622  0028FC                     	if	1	;There is more than 1 active tblptr byte
  8623  0028FC  0E20               	movlw	high __smallconst
  8624  0028FE  6EF7               	movwf	tblptrh,c
  8625  002900                     	endif
  8626  002900                     	if	0	;tblptru may be non-zero
  8627  002900                     	endif
  8628  002900                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8629  002900  0E00               	movlw	low (__smallconst shr (0+16))
  8630  002902  6EF8               	movwf	tblptru,c
  8631  002904                     	endif
  8632  002904  0008               	tblrd		*
  8633  002906  50F5               	movf	tablat,w,c
  8634  002908  0A73               	xorlw	115
  8635  00290A  A4D8               	btfss	status,2,c
  8636  00290C  D040               	goto	l7654
  8637                           
  8638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8639                           ;stkvar	_fmt @ sp[(-11)+-4]
  8640  00290E  0EF1               	movlw	-15
  8641  002910  006F FF8F FFD9     	movff	plusw1,fsr2l
  8642  002916  0EF2               	movlw	-14
  8643  002918  006F FF8F FFDA     	movff	plusw1,fsr2h
  8644  00291E  2ADF               	incf	indf2,f,c
  8645                           
  8646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8647                           ;stkvar	_ap @ sp[(-11)+-6]
  8648  002920  0EEF               	movlw	-17
  8649  002922  006F FF8F FFD9     	movff	plusw1,fsr2l
  8650  002928  0EF0               	movlw	-16
  8651  00292A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8652  002930  0E02               	movlw	2
  8653  002932  5EDE               	subwf	postinc2,f,c
  8654  002934  0E00               	movlw	0
  8655  002936  5ADD               	subwfb	postdec2,f,c
  8656  002938  006F FF78  F047    	movff	postinc2,btemp+10
  8657  00293E  006F FF74  F048    	movff	postdec2,btemp+11
  8658  002944  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  8659  00294A  0060  F123  FFDA   	movff	btemp+11,fsr2h
  8660  002950  006F FF78  F047    	movff	postinc2,btemp+10
  8661  002956  006F FF74  F048    	movff	postdec2,btemp+11
  8662                           
  8663                           ;stkvar	_cp @ sp[(-11)+8]
  8664  00295C  0EFE               	movlw	-2
  8665  00295E  0060  F123  FFE3   	movff	btemp+11,plusw1
  8666  002964  0EFD               	movlw	-3
  8667  002966  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8668                           
  8669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8670                           ;stkvar	_cp @ sp[(-11)+8]
  8671  00296C  0EFD               	movlw	-3
  8672  00296E  006F FF8F FFE6     	movff	plusw1,postinc1
  8673  002974  006F FF8F FFE6     	movff	plusw1,postinc1
  8674                           
  8675                           ;stkvar	_fp @ sp[(-13)+-2]
  8676  00297A  0EF1               	movlw	-15
  8677  00297C  006F FF8F FFE6     	movff	plusw1,postinc1
  8678  002982  006F FF8F FFE6     	movff	plusw1,postinc1
  8679  002988  EC88  F01C         	call	_stoa	;wreg free
  8680  00298C  D061               	goto	l1818
  8681  00298E                     l7654:
  8682                           
  8683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8684                           ;stkvar	_fmt @ sp[(-11)+-4]
  8685  00298E  0EF1               	movlw	-15
  8686  002990  006F FF8F FFD9     	movff	plusw1,fsr2l
  8687  002996  0EF2               	movlw	-14
  8688  002998  006F FF8F FFDA     	movff	plusw1,fsr2h
  8689  00299E  006F FF7F FFF6     	movff	indf2,tblptrl
  8690  0029A4                     	if	1	;There is more than 1 active tblptr byte
  8691  0029A4  0E20               	movlw	high __smallconst
  8692  0029A6  6EF7               	movwf	tblptrh,c
  8693  0029A8                     	endif
  8694  0029A8                     	if	0	;tblptru may be non-zero
  8695  0029A8                     	endif
  8696  0029A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8697  0029A8  0E00               	movlw	low (__smallconst shr (0+16))
  8698  0029AA  6EF8               	movwf	tblptru,c
  8699  0029AC                     	endif
  8700  0029AC  0008               	tblrd		*
  8701  0029AE  50F5               	movf	tablat,w,c
  8702  0029B0  0A25               	xorlw	37
  8703  0029B2  A4D8               	btfss	status,2,c
  8704  0029B4  D018               	goto	l7664
  8705                           
  8706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8707                           ;stkvar	_fmt @ sp[(-11)+-4]
  8708  0029B6  0EF1               	movlw	-15
  8709  0029B8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8710  0029BE  0EF2               	movlw	-14
  8711  0029C0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8712  0029C6  2ADF               	incf	indf2,f,c
  8713                           
  8714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8715                           ;stkvar	_fp @ sp[(-11)+-2]
  8716  0029C8  0EF3               	movlw	-13
  8717  0029CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8718  0029D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8719  0029D6  0E25               	movlw	37
  8720  0029D8  6EE6               	movwf	postinc1,c
  8721  0029DA  0E00               	movlw	0
  8722  0029DC  6EE6               	movwf	postinc1,c
  8723  0029DE  ECE6  F024         	call	_fputc	;wreg free
  8724  0029E2                     l7660:
  8725                           
  8726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8727  0029E2  0E01               	movlw	1
  8728  0029E4  D00A               	goto	L21
  8729  0029E6                     l7664:
  8730                           
  8731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8732                           ;stkvar	_fmt @ sp[(-11)+-4]
  8733  0029E6  0EF1               	movlw	-15
  8734  0029E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8735  0029EE  0EF2               	movlw	-14
  8736  0029F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8737  0029F6  2ADF               	incf	indf2,f,c
  8738                           
  8739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8740  0029F8  0E00               	movlw	0
  8741  0029FA                     L21:
  8742  0029FA  6E3D               	movwf	btemp,c
  8743  0029FC  0E00               	movlw	0
  8744  0029FE  6E3E               	movwf	btemp+1,c
  8745  002A00  D027               	goto	l1818
  8746  002A02                     l7670:
  8747                           
  8748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8749                           ;stkvar	_fp @ sp[(-11)+-2]
  8750  002A02  0EF3               	movlw	-13
  8751  002A04  006F FF8F FFE6     	movff	plusw1,postinc1
  8752  002A0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8753                           
  8754                           ;stkvar	_fmt @ sp[(-13)+-4]
  8755  002A10  0EEF               	movlw	-17
  8756  002A12  006F FF8F FFD9     	movff	plusw1,fsr2l
  8757  002A18  0EF0               	movlw	-16
  8758  002A1A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8759  002A20  006F FF7F FFF6     	movff	indf2,tblptrl
  8760  002A26                     	if	1	;There is more than 1 active tblptr byte
  8761  002A26  0E20               	movlw	high __smallconst
  8762  002A28  6EF7               	movwf	tblptrh,c
  8763  002A2A                     	endif
  8764  002A2A                     	if	0	;tblptru may be non-zero
  8765  002A2A                     	endif
  8766  002A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8767  002A2A  0E00               	movlw	low (__smallconst shr (0+16))
  8768  002A2C  6EF8               	movwf	tblptru,c
  8769  002A2E                     	endif
  8770  002A2E  0008               	tblrd		*
  8771  002A30  50F5               	movf	tablat,w,c
  8772  002A32  6EE6               	movwf	postinc1,c
  8773  002A34  0E00               	movlw	0
  8774  002A36  6EE6               	movwf	postinc1,c
  8775  002A38  ECE6  F024         	call	_fputc	;wreg free
  8776                           
  8777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8778                           ;stkvar	_fmt @ sp[(-11)+-4]
  8779  002A3C  0EF1               	movlw	-15
  8780  002A3E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8781  002A44  0EF2               	movlw	-14
  8782  002A46  006F FF8F FFDA     	movff	plusw1,fsr2h
  8783  002A4C  2ADF               	incf	indf2,f,c
  8784  002A4E  D7C9               	goto	l7660
  8785  002A50                     l1818:
  8786                           
  8787                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8788  002A50  0EEF               	movlw	239
  8789  002A52  26E1               	addwf	fsr1l,f,c
  8790  002A54  0EFF               	movlw	255
  8791  002A56  22E2               	addwfc	fsr1h,f,c
  8792  002A58  0012               	return		;funcret
  8793  002A5A                     __end_of_vfpfcnvrt:
  8794                           	opt callstack 0
  8795                           
  8796 ;; *************** function _strncmp *****************
  8797 ;; Defined at:
  8798 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  _l              1  [STACK] PTR const unsigned char 
  8801 ;;		 -> STR_16(3), STR_15(3), STR_14(3), STR_13(21), 
  8802 ;;		 -> STR_12(17), STR_11(6), STR_10(14), STR_9(19), 
  8803 ;;		 -> STR_8(20), STR_7(6), STR_6(6), STR_5(14), 
  8804 ;;		 -> STR_4(15), STR_2(12), STR_1(17), 
  8805 ;;  _r              1  [STACK] PTR const unsigned char 
  8806 ;;		 -> STR_23(3), STR_19(3), 
  8807 ;;  n               2  [STACK] unsigned int 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  r               1  [STACK] PTR const unsigned char 
  8810 ;;		 -> STR_23(3), STR_19(3), 
  8811 ;;  l               1  [STACK] PTR const unsigned char 
  8812 ;;		 -> STR_16(3), STR_15(3), STR_14(3), STR_13(21), 
  8813 ;;		 -> STR_12(17), STR_11(6), STR_10(14), STR_9(19), 
  8814 ;;		 -> STR_8(20), STR_7(6), STR_6(6), STR_5(14), 
  8815 ;;		 -> STR_4(15), STR_2(12), STR_1(17), 
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  2  [STACK] int 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8829 ;;Total ram usage:        0 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; Hardware stack levels required when called:    3
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_vfpfcnvrt
  8836 ;; This function uses a reentrant model
  8837 ;;
  8838                           
  8839                           	psect	text37
  8840  004728                     __ptext37:
  8841                           	opt callstack 0
  8842  004728                     _strncmp:
  8843                           	opt callstack 0
  8844                           
  8845                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8846  004728  52E6               	movf	postinc1,f,c
  8847  00472A  52E6               	movf	postinc1,f,c
  8848                           
  8849                           ;stkvar	__l @ sp[(-2)+-1]
  8850                           
  8851                           ;incstack = 0
  8852  00472C  0EFD               	movlw	-3
  8853  00472E  006F FF8C  F048    	movff	plusw1,btemp+11
  8854                           
  8855                           ;stkvar	_l @ sp[(-2)+1]
  8856  004734  0EFF               	movlw	-1
  8857  004736  0060  F123  FFE3   	movff	btemp+11,plusw1
  8858                           
  8859                           ;stkvar	__r @ sp[(-2)+-2]
  8860  00473C  0EFC               	movlw	-4
  8861  00473E  006F FF8C  F048    	movff	plusw1,btemp+11
  8862                           
  8863                           ;stkvar	_r @ sp[(-2)+0]
  8864  004744  0EFE               	movlw	-2
  8865  004746  0060  F123  FFE3   	movff	btemp+11,plusw1
  8866                           
  8867                           ;stkvar	_n @ sp[(-2)+-4]
  8868  00474C  0EFA               	movlw	-6
  8869  00474E  006F FF8C  F03D    	movff	plusw1,btemp
  8870  004754  0E01               	movlw	1
  8871  004756  5E3D               	subwf	btemp,f,c
  8872  004758  0EFA               	movlw	-6
  8873  00475A  0060  F0F7  FFE3   	movff	btemp,plusw1
  8874  004760  0EFB               	movlw	-5
  8875  004762  006F FF8C  F03D    	movff	plusw1,btemp
  8876  004768  0E00               	movlw	0
  8877  00476A  5A3D               	subwfb	btemp,f,c
  8878  00476C  0EFB               	movlw	-5
  8879  00476E  0060  F0F7  FFE3   	movff	btemp,plusw1
  8880  004774  0EFA               	movlw	-6
  8881  004776  28E3               	incf	plusw1,w,c
  8882  004778  E121               	bnz	l5464
  8883  00477A  0EFB               	movlw	-5
  8884  00477C  28E3               	incf	plusw1,w,c
  8885  00477E  A4D8               	btfss	status,2,c
  8886  004780  D01D               	goto	l5464
  8887  004782  0E00               	movlw	0
  8888  004784  6E3D               	movwf	btemp,c
  8889  004786  0E00               	movlw	0
  8890  004788  6E3E               	movwf	btemp+1,c
  8891  00478A  D091               	goto	l2567
  8892  00478C                     l5460:
  8893                           
  8894                           ;stkvar	_l @ sp[(-2)+1]
  8895  00478C  0EFF               	movlw	-1
  8896  00478E  2AE3               	incf	plusw1,f,c
  8897                           
  8898                           ;stkvar	_r @ sp[(-2)+0]
  8899  004790  0EFE               	movlw	-2
  8900  004792  2AE3               	incf	plusw1,f,c
  8901                           
  8902                           ;stkvar	_n @ sp[(-2)+-4]
  8903  004794  0EFA               	movlw	-6
  8904  004796  006F FF8C  F03D    	movff	plusw1,btemp
  8905  00479C  0E01               	movlw	1
  8906  00479E  5E3D               	subwf	btemp,f,c
  8907  0047A0  0EFA               	movlw	-6
  8908  0047A2  0060  F0F7  FFE3   	movff	btemp,plusw1
  8909  0047A8  0EFB               	movlw	-5
  8910  0047AA  006F FF8C  F03D    	movff	plusw1,btemp
  8911  0047B0  0E00               	movlw	0
  8912  0047B2  5A3D               	subwfb	btemp,f,c
  8913  0047B4  0EFB               	movlw	-5
  8914  0047B6  0060  F0F7  FFE3   	movff	btemp,plusw1
  8915  0047BC                     l5464:
  8916                           
  8917                           ;stkvar	_l @ sp[(-2)+1]
  8918  0047BC  50E1               	movf	fsr1l,w,c
  8919  0047BE  0FFF               	addlw	-1
  8920  0047C0  6ED9               	movwf	fsr2l,c
  8921  0047C2  50E2               	movf	fsr1h,w,c
  8922  0047C4  6EDA               	movwf	fsr2h,c
  8923  0047C6  0EFF               	movlw	255
  8924  0047C8  22DA               	addwfc	fsr2h,f,c
  8925  0047CA  006F FF7F FFF6     	movff	indf2,tblptrl
  8926  0047D0                     	if	1	;There is more than 1 active tblptr byte
  8927  0047D0  0E20               	movlw	high __smallconst
  8928  0047D2  6EF7               	movwf	tblptrh,c
  8929  0047D4                     	endif
  8930  0047D4                     	if	0	;tblptru may be non-zero
  8931  0047D4                     	endif
  8932  0047D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8933  0047D4  0E00               	movlw	low (__smallconst shr (0+16))
  8934  0047D6  6EF8               	movwf	tblptru,c
  8935  0047D8                     	endif
  8936  0047D8  0008               	tblrd		*
  8937  0047DA  50F5               	movf	tablat,w,c
  8938  0047DC  0900               	iorlw	0
  8939  0047DE  B4D8               	btfsc	status,2,c
  8940  0047E0  D041               	goto	u2900
  8941                           
  8942                           ;stkvar	_r @ sp[(-2)+0]
  8943  0047E2  50E1               	movf	fsr1l,w,c
  8944  0047E4  0FFE               	addlw	-2
  8945  0047E6  6ED9               	movwf	fsr2l,c
  8946  0047E8  50E2               	movf	fsr1h,w,c
  8947  0047EA  6EDA               	movwf	fsr2h,c
  8948  0047EC  0EFF               	movlw	255
  8949  0047EE  22DA               	addwfc	fsr2h,f,c
  8950  0047F0  006F FF7F FFF6     	movff	indf2,tblptrl
  8951  0047F6                     	if	1	;There is more than 1 active tblptr byte
  8952  0047F6  0E20               	movlw	high __smallconst
  8953  0047F8  6EF7               	movwf	tblptrh,c
  8954  0047FA                     	endif
  8955  0047FA                     	if	0	;tblptru may be non-zero
  8956  0047FA                     	endif
  8957  0047FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8958  0047FA  0E00               	movlw	low (__smallconst shr (0+16))
  8959  0047FC  6EF8               	movwf	tblptru,c
  8960  0047FE                     	endif
  8961  0047FE  0008               	tblrd		*
  8962  004800  50F5               	movf	tablat,w,c
  8963  004802  0900               	iorlw	0
  8964  004804  B4D8               	btfsc	status,2,c
  8965  004806  D02E               	goto	u2900
  8966                           
  8967                           ;stkvar	_n @ sp[(-2)+-4]
  8968  004808  0EFA               	movlw	-6
  8969  00480A  006F FF8C  F03D    	movff	plusw1,btemp
  8970  004810  0EFB               	movlw	-5
  8971  004812  50E3               	movf	plusw1,w,c
  8972  004814  103D               	iorwf	btemp,w,c
  8973  004816  B4D8               	btfsc	status,2,c
  8974  004818  D025               	goto	u2900
  8975                           
  8976                           ;stkvar	_l @ sp[(-2)+1]
  8977  00481A  50E1               	movf	fsr1l,w,c
  8978  00481C  0FFF               	addlw	-1
  8979  00481E  6ED9               	movwf	fsr2l,c
  8980  004820  50E2               	movf	fsr1h,w,c
  8981  004822  6EDA               	movwf	fsr2h,c
  8982  004824  0EFF               	movlw	255
  8983  004826  22DA               	addwfc	fsr2h,f,c
  8984  004828  006F FF7F FFF6     	movff	indf2,tblptrl
  8985  00482E                     	if	1	;There is more than 1 active tblptr byte
  8986  00482E  0E20               	movlw	high __smallconst
  8987  004830  6EF7               	movwf	tblptrh,c
  8988  004832                     	endif
  8989  004832                     	if	0	;tblptru may be non-zero
  8990  004832                     	endif
  8991  004832                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8992  004832  0E00               	movlw	low (__smallconst shr (0+16))
  8993  004834  6EF8               	movwf	tblptru,c
  8994  004836                     	endif
  8995  004836  0008               	tblrd		*
  8996  004838  006F FFD4  F048    	movff	tablat,btemp+11
  8997                           
  8998                           ;stkvar	_r @ sp[(-2)+0]
  8999  00483E  50E1               	movf	fsr1l,w,c
  9000  004840  0FFE               	addlw	-2
  9001  004842  6ED9               	movwf	fsr2l,c
  9002  004844  50E2               	movf	fsr1h,w,c
  9003  004846  6EDA               	movwf	fsr2h,c
  9004  004848  0EFF               	movlw	255
  9005  00484A  22DA               	addwfc	fsr2h,f,c
  9006  00484C  006F FF7F FFF6     	movff	indf2,tblptrl
  9007  004852                     	if	1	;There is more than 1 active tblptr byte
  9008  004852  0E20               	movlw	high __smallconst
  9009  004854  6EF7               	movwf	tblptrh,c
  9010  004856                     	endif
  9011  004856                     	if	0	;tblptru may be non-zero
  9012  004856                     	endif
  9013  004856                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9014  004856  0E00               	movlw	low (__smallconst shr (0+16))
  9015  004858  6EF8               	movwf	tblptru,c
  9016  00485A                     	endif
  9017  00485A  0008               	tblrd		*
  9018  00485C  50F5               	movf	tablat,w,c
  9019  00485E  1848               	xorwf	btemp+11,w,c
  9020  004860  B4D8               	btfsc	status,2,c
  9021  004862  D794               	goto	l5460
  9022  004864                     u2900:
  9023                           
  9024                           ;stkvar	_l @ sp[(-2)+1]
  9025  004864  50E1               	movf	fsr1l,w,c
  9026  004866  0FFF               	addlw	-1
  9027  004868  6ED9               	movwf	fsr2l,c
  9028  00486A  50E2               	movf	fsr1h,w,c
  9029  00486C  6EDA               	movwf	fsr2h,c
  9030  00486E  0EFF               	movlw	255
  9031  004870  22DA               	addwfc	fsr2h,f,c
  9032  004872  006F FF7F FFF6     	movff	indf2,tblptrl
  9033  004878                     	if	1	;There is more than 1 active tblptr byte
  9034  004878  0E20               	movlw	high __smallconst
  9035  00487A  6EF7               	movwf	tblptrh,c
  9036  00487C                     	endif
  9037  00487C                     	if	0	;tblptru may be non-zero
  9038  00487C                     	endif
  9039  00487C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9040  00487C  0E00               	movlw	low (__smallconst shr (0+16))
  9041  00487E  6EF8               	movwf	tblptru,c
  9042  004880                     	endif
  9043  004880  0008               	tblrd		*
  9044  004882  50F5               	movf	tablat,w,c
  9045  004884  6E3D               	movwf	btemp,c
  9046  004886  6A3E               	clrf	btemp+1,c
  9047                           
  9048                           ;stkvar	_r @ sp[(-2)+0]
  9049  004888  50E1               	movf	fsr1l,w,c
  9050  00488A  0FFE               	addlw	-2
  9051  00488C  6ED9               	movwf	fsr2l,c
  9052  00488E  50E2               	movf	fsr1h,w,c
  9053  004890  6EDA               	movwf	fsr2h,c
  9054  004892  0EFF               	movlw	255
  9055  004894  22DA               	addwfc	fsr2h,f,c
  9056  004896  006F FF7F FFF6     	movff	indf2,tblptrl
  9057  00489C                     	if	1	;There is more than 1 active tblptr byte
  9058  00489C  0E20               	movlw	high __smallconst
  9059  00489E  6EF7               	movwf	tblptrh,c
  9060  0048A0                     	endif
  9061  0048A0                     	if	0	;tblptru may be non-zero
  9062  0048A0                     	endif
  9063  0048A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9064  0048A0  0E00               	movlw	low (__smallconst shr (0+16))
  9065  0048A2  6EF8               	movwf	tblptru,c
  9066  0048A4                     	endif
  9067  0048A4  0008               	tblrd		*
  9068  0048A6  50F5               	movf	tablat,w,c
  9069  0048A8  5E3D               	subwf	btemp,f,c
  9070  0048AA  0E00               	movlw	0
  9071  0048AC  5A3E               	subwfb	btemp+1,f,c
  9072  0048AE                     l2567:
  9073                           
  9074                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  9075  0048AE  0EFA               	movlw	250
  9076  0048B0  26E1               	addwf	fsr1l,f,c
  9077  0048B2  0EFF               	movlw	255
  9078  0048B4  22E2               	addwfc	fsr1h,f,c
  9079  0048B6  0012               	return		;funcret
  9080  0048B8                     __end_of_strncmp:
  9081                           	opt callstack 0
  9082                           
  9083 ;; *************** function _stoa *****************
  9084 ;; Defined at:
  9085 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9088 ;;		 -> f(5), NULL(0), 
  9089 ;;  s               2  [STACK] PTR unsigned char 
  9090 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(87), 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  nuls            7  [STACK] unsigned char [7]
  9093 ;;  l               2  [STACK] int 
  9094 ;;  p               2  [STACK] int 
  9095 ;;  cp              2  [STACK] PTR unsigned char 
  9096 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  9097 ;;		 -> V(87), 
  9098 ;;  w               2  [STACK] int 
  9099 ;;  i               2  [STACK] int 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  2  [STACK] int 
  9102 ;; Registers used:
  9103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9113 ;;Total ram usage:        0 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    6
  9116 ;; This function calls:
  9117 ;;		_fputc
  9118 ;;		_strlen
  9119 ;; This function is called by:
  9120 ;;		_vfpfcnvrt
  9121 ;; This function uses a reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text38
  9125  003910                     __ptext38:
  9126                           	opt callstack 0
  9127  003910                     _stoa:
  9128                           	opt callstack 0
  9129                           
  9130                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9131  003910  0E11               	movlw	17
  9132  003912  26E1               	addwf	fsr1l,f,c
  9133  003914  0E00               	movlw	0
  9134  003916  22E2               	addwfc	fsr1h,f,c
  9135                           
  9136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9137                           
  9138                           ;incstack = 0
  9139  003918  EE20  F0EE         	lfsr	2,stoa@F1144
  9140                           
  9141                           ;stkvar	_nuls @ sp[(-17)+0]
  9142  00391C  0E07               	movlw	7
  9143  00391E  6E3D               	movwf	btemp,c
  9144  003920  0EEF               	movlw	-17
  9145  003922                     us458999:
  9146  003922  006F FF7B FFE3     	movff	postinc2,plusw1
  9147  003928  28E8               	incf	wreg,w,c
  9148  00392A  2E3D               	decfsz	btemp,f,c
  9149  00392C  D7FA               	bra	us458999
  9150                           
  9151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9152                           ;stkvar	_s @ sp[(-17)+-4]
  9153  00392E  0EEB               	movlw	-21
  9154  003930  006F FF8C  F047    	movff	plusw1,btemp+10
  9155  003936  0EEC               	movlw	-20
  9156  003938  006F FF8C  F048    	movff	plusw1,btemp+11
  9157                           
  9158                           ;stkvar	_cp @ sp[(-17)+11]
  9159  00393E  0EFB               	movlw	-5
  9160  003940  0060  F123  FFE3   	movff	btemp+11,plusw1
  9161  003946  0EFA               	movlw	-6
  9162  003948  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9163                           
  9164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9165                           ;stkvar	_cp @ sp[(-17)+11]
  9166  00394E  0EFA               	movlw	-6
  9167  003950  006F FF8C  F03D    	movff	plusw1,btemp
  9168  003956  0EFB               	movlw	-5
  9169  003958  50E3               	movf	plusw1,w,c
  9170  00395A  103D               	iorwf	btemp,w,c
  9171  00395C  A4D8               	btfss	status,2,c
  9172  00395E  D00E               	goto	l7558
  9173                           
  9174                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9175                           ;stkvar	_nuls @ sp[(-17)+0]
  9176  003960  0EEF               	movlw	239
  9177  003962  24E1               	addwf	fsr1l,w,c
  9178  003964  6E47               	movwf	btemp+10,c
  9179  003966  0EFF               	movlw	255
  9180  003968  20E2               	addwfc	fsr1h,w,c
  9181  00396A  6E48               	movwf	btemp+11,c
  9182                           
  9183                           ;stkvar	_cp @ sp[(-17)+11]
  9184  00396C  0EFB               	movlw	-5
  9185  00396E  0060  F123  FFE3   	movff	btemp+11,plusw1
  9186  003974  0EFA               	movlw	-6
  9187  003976  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9188  00397C                     l7558:
  9189                           
  9190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9191                           ;stkvar	_cp @ sp[(-17)+11]
  9192  00397C  0EFA               	movlw	-6
  9193  00397E  006F FF8F FFE6     	movff	plusw1,postinc1
  9194  003984  006F FF8F FFE6     	movff	plusw1,postinc1
  9195  00398A  ECCE  F027         	call	_strlen	;wreg free
  9196                           
  9197                           ;stkvar	_l @ sp[(-17)+7]
  9198  00398E  0EF6               	movlw	-10
  9199  003990  0060  F0F7  FFE3   	movff	btemp,plusw1
  9200  003996  0EF7               	movlw	-9
  9201  003998  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  9202                           
  9203                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9204                           ;stkvar	_p @ sp[(-17)+9]
  9205  00399E  0EF8               	movlw	-8
  9206  0039A0  0060  F097  FFE3   	movff	_prec,plusw1
  9207  0039A6  0EF9               	movlw	-7
  9208  0039A8  0060  F09B  FFE3   	movff	_prec+1,plusw1
  9209                           
  9210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9211                           ;stkvar	_p @ sp[(-17)+9]
  9212  0039AE  0EF9               	movlw	-7
  9213  0039B0  BEE3               	btfsc	plusw1,7,c
  9214  0039B2  D023               	goto	l1799
  9215                           
  9216                           ;stkvar	_l @ sp[(-17)+7]
  9217                           ;stkvar	_p @ sp[(-17)+9]
  9218  0039B4  50E1               	movf	fsr1l,w,c
  9219  0039B6  0FF8               	addlw	-8
  9220  0039B8  6ED9               	movwf	fsr2l,c
  9221  0039BA  50E2               	movf	fsr1h,w,c
  9222  0039BC  6EDA               	movwf	fsr2h,c
  9223  0039BE  0EFF               	movlw	255
  9224  0039C0  22DA               	addwfc	fsr2h,f,c
  9225  0039C2  0EF6               	movlw	-10
  9226  0039C4  50E3               	movf	plusw1,w,c
  9227  0039C6  5CDE               	subwf	postinc2,w,c
  9228  0039C8  50DE               	movf	postinc2,w,c
  9229  0039CA  0A80               	xorlw	128
  9230  0039CC  6E3D               	movwf	btemp,c
  9231  0039CE  0EF7               	movlw	-9
  9232  0039D0  50E3               	movf	plusw1,w,c
  9233  0039D2  0A80               	xorlw	128
  9234  0039D4  583D               	subwfb	btemp,w,c
  9235  0039D6  B0D8               	btfsc	status,0,c
  9236  0039D8  D010               	goto	l1799
  9237                           
  9238                           ;stkvar	_p @ sp[(-17)+9]
  9239                           ;stkvar	_l @ sp[(-17)+7]
  9240  0039DA  0EF8               	movlw	-8
  9241  0039DC  006F FF8C  F03D    	movff	plusw1,btemp
  9242  0039E2  0EF6               	movlw	-10
  9243  0039E4  0060  F0F7  FFE3   	movff	btemp,plusw1
  9244  0039EA  0EF9               	movlw	-7
  9245  0039EC  006F FF8C  F03D    	movff	plusw1,btemp
  9246  0039F2  0EF7               	movlw	-9
  9247  0039F4  0060  F0F7  FFE3   	movff	btemp,plusw1
  9248  0039FA                     l1799:
  9249                           
  9250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9251                           ;stkvar	_l @ sp[(-17)+7]
  9252                           ;stkvar	_p @ sp[(-17)+9]
  9253  0039FA  0EF6               	movlw	-10
  9254  0039FC  006F FF8C  F03D    	movff	plusw1,btemp
  9255  003A02  0EF8               	movlw	-8
  9256  003A04  0060  F0F7  FFE3   	movff	btemp,plusw1
  9257  003A0A  0EF7               	movlw	-9
  9258  003A0C  006F FF8C  F03D    	movff	plusw1,btemp
  9259  003A12  0EF9               	movlw	-7
  9260  003A14  0060  F0F7  FFE3   	movff	btemp,plusw1
  9261                           
  9262                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9263                           ;stkvar	_w @ sp[(-17)+13]
  9264  003A1A  0EFC               	movlw	-4
  9265  003A1C  0060  F08F  FFE3   	movff	_width,plusw1
  9266  003A22  0EFD               	movlw	-3
  9267  003A24  0060  F093  FFE3   	movff	_width+1,plusw1
  9268                           
  9269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9270  003A2A  A027               	btfss	_flags,0,c
  9271  003A2C  D01F               	goto	l7578
  9272  003A2E  D031               	goto	u4630
  9273  003A30                     l7574:
  9274                           
  9275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9276                           ;stkvar	_fp @ sp[(-17)+-2]
  9277  003A30  0EED               	movlw	-19
  9278  003A32  006F FF8F FFE6     	movff	plusw1,postinc1
  9279  003A38  006F FF8F FFE6     	movff	plusw1,postinc1
  9280  003A3E  0E20               	movlw	32
  9281  003A40  6EE6               	movwf	postinc1,c
  9282  003A42  0E00               	movlw	0
  9283  003A44  6EE6               	movwf	postinc1,c
  9284  003A46  ECE6  F024         	call	_fputc	;wreg free
  9285                           
  9286                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9287                           ;stkvar	_l @ sp[(-17)+7]
  9288  003A4A  0EF6               	movlw	-10
  9289  003A4C  50E3               	movf	plusw1,w,c
  9290  003A4E  0F01               	addlw	1
  9291  003A50  6E3D               	movwf	btemp,c
  9292  003A52  0EF6               	movlw	-10
  9293  003A54  0060  F0F7  FFE3   	movff	btemp,plusw1
  9294  003A5A  6A3D               	clrf	btemp,c
  9295  003A5C  0EF7               	movlw	-9
  9296  003A5E  50E3               	movf	plusw1,w,c
  9297  003A60  203D               	addwfc	btemp,w,c
  9298  003A62  6E3D               	movwf	btemp,c
  9299  003A64  0EF7               	movlw	-9
  9300  003A66  0060  F0F7  FFE3   	movff	btemp,plusw1
  9301  003A6C                     l7578:
  9302                           
  9303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9304                           ;stkvar	_w @ sp[(-17)+13]
  9305                           ;stkvar	_l @ sp[(-17)+7]
  9306  003A6C  50E1               	movf	fsr1l,w,c
  9307  003A6E  0FF6               	addlw	-10
  9308  003A70  6ED9               	movwf	fsr2l,c
  9309  003A72  50E2               	movf	fsr1h,w,c
  9310  003A74  6EDA               	movwf	fsr2h,c
  9311  003A76  0EFF               	movlw	255
  9312  003A78  22DA               	addwfc	fsr2h,f,c
  9313  003A7A  0EFC               	movlw	-4
  9314  003A7C  50E3               	movf	plusw1,w,c
  9315  003A7E  5CDE               	subwf	postinc2,w,c
  9316  003A80  50DE               	movf	postinc2,w,c
  9317  003A82  0A80               	xorlw	128
  9318  003A84  6E3D               	movwf	btemp,c
  9319  003A86  0EFD               	movlw	-3
  9320  003A88  50E3               	movf	plusw1,w,c
  9321  003A8A  0A80               	xorlw	128
  9322  003A8C  583D               	subwfb	btemp,w,c
  9323  003A8E  A0D8               	btfss	status,0,c
  9324  003A90  D7CF               	goto	l7574
  9325  003A92                     u4630:
  9326                           
  9327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9328                           ;stkvar	_i @ sp[(-17)+15]
  9329  003A92  0EFE               	movlw	-2
  9330  003A94  6AE3               	clrf	plusw1,c
  9331  003A96  0EFF               	movlw	-1
  9332  003A98  6AE3               	clrf	plusw1,c
  9333                           
  9334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9335  003A9A  D045               	goto	l7588
  9336  003A9C                     l7582:
  9337                           
  9338                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9339                           ;stkvar	_fp @ sp[(-17)+-2]
  9340  003A9C  0EED               	movlw	-19
  9341  003A9E  006F FF8F FFE6     	movff	plusw1,postinc1
  9342  003AA4  006F FF8F FFE6     	movff	plusw1,postinc1
  9343                           
  9344                           ;stkvar	_cp @ sp[(-19)+11]
  9345  003AAA  0EF8               	movlw	-8
  9346  003AAC  006F FF8F FFF6     	movff	plusw1,tblptrl
  9347  003AB2  0EF9               	movlw	-7
  9348  003AB4  006F FF8F FFF7     	movff	plusw1,tblptrh
  9349  003ABA  0E00               	movlw	low (__smallconst shr (0+16))
  9350  003ABC  6EF8               	movwf	tblptru,c
  9351  003ABE  0E1F               	movlw	(high __ramtop+-1)
  9352  003AC0  64F7               	cpfsgt	tblptrh,c
  9353  003AC2  D003               	bra	u4647
  9354  003AC4  0008               	tblrd		*
  9355  003AC6  50F5               	movf	tablat,w,c
  9356  003AC8  D007               	bra	u4640
  9357  003ACA                     u4647:
  9358  003ACA  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9359  003AD0  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9360  003AD6  50EF               	movf	indf0,w,c
  9361  003AD8                     u4640:
  9362  003AD8  6EE6               	movwf	postinc1,c
  9363  003ADA  0E00               	movlw	0
  9364  003ADC  6EE6               	movwf	postinc1,c
  9365  003ADE  ECE6  F024         	call	_fputc	;wreg free
  9366                           
  9367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9368                           ;stkvar	_cp @ sp[(-17)+11]
  9369  003AE2  0EFA               	movlw	-6
  9370  003AE4  50E3               	movf	plusw1,w,c
  9371  003AE6  0F01               	addlw	1
  9372  003AE8  6E3D               	movwf	btemp,c
  9373  003AEA  0EFA               	movlw	-6
  9374  003AEC  0060  F0F7  FFE3   	movff	btemp,plusw1
  9375  003AF2  6A3D               	clrf	btemp,c
  9376  003AF4  0EFB               	movlw	-5
  9377  003AF6  50E3               	movf	plusw1,w,c
  9378  003AF8  203D               	addwfc	btemp,w,c
  9379  003AFA  6E3D               	movwf	btemp,c
  9380  003AFC  0EFB               	movlw	-5
  9381  003AFE  0060  F0F7  FFE3   	movff	btemp,plusw1
  9382                           
  9383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9384                           ;stkvar	_i @ sp[(-17)+15]
  9385  003B04  0EFE               	movlw	-2
  9386  003B06  50E3               	movf	plusw1,w,c
  9387  003B08  0F01               	addlw	1
  9388  003B0A  6E3D               	movwf	btemp,c
  9389  003B0C  0EFE               	movlw	-2
  9390  003B0E  0060  F0F7  FFE3   	movff	btemp,plusw1
  9391  003B14  6A3D               	clrf	btemp,c
  9392  003B16  0EFF               	movlw	-1
  9393  003B18  50E3               	movf	plusw1,w,c
  9394  003B1A  203D               	addwfc	btemp,w,c
  9395  003B1C  6E3D               	movwf	btemp,c
  9396  003B1E  0EFF               	movlw	-1
  9397  003B20  0060  F0F7  FFE3   	movff	btemp,plusw1
  9398  003B26                     l7588:
  9399                           
  9400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9401                           ;stkvar	_p @ sp[(-17)+9]
  9402                           ;stkvar	_i @ sp[(-17)+15]
  9403  003B26  50E1               	movf	fsr1l,w,c
  9404  003B28  0FFE               	addlw	-2
  9405  003B2A  6ED9               	movwf	fsr2l,c
  9406  003B2C  50E2               	movf	fsr1h,w,c
  9407  003B2E  6EDA               	movwf	fsr2h,c
  9408  003B30  0EFF               	movlw	255
  9409  003B32  22DA               	addwfc	fsr2h,f,c
  9410  003B34  0EF8               	movlw	-8
  9411  003B36  50E3               	movf	plusw1,w,c
  9412  003B38  5CDE               	subwf	postinc2,w,c
  9413  003B3A  50DE               	movf	postinc2,w,c
  9414  003B3C  0A80               	xorlw	128
  9415  003B3E  6E3D               	movwf	btemp,c
  9416  003B40  0EF9               	movlw	-7
  9417  003B42  50E3               	movf	plusw1,w,c
  9418  003B44  0A80               	xorlw	128
  9419  003B46  583D               	subwfb	btemp,w,c
  9420  003B48  A0D8               	btfss	status,0,c
  9421  003B4A  D7A8               	goto	l7582
  9422                           
  9423                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9424  003B4C  B027               	btfsc	_flags,0,c
  9425  003B4E  D01F               	goto	l7596
  9426  003B50  D031               	goto	u4670
  9427  003B52                     l7592:
  9428                           
  9429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9430                           ;stkvar	_fp @ sp[(-17)+-2]
  9431  003B52  0EED               	movlw	-19
  9432  003B54  006F FF8F FFE6     	movff	plusw1,postinc1
  9433  003B5A  006F FF8F FFE6     	movff	plusw1,postinc1
  9434  003B60  0E20               	movlw	32
  9435  003B62  6EE6               	movwf	postinc1,c
  9436  003B64  0E00               	movlw	0
  9437  003B66  6EE6               	movwf	postinc1,c
  9438  003B68  ECE6  F024         	call	_fputc	;wreg free
  9439                           
  9440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9441                           ;stkvar	_l @ sp[(-17)+7]
  9442  003B6C  0EF6               	movlw	-10
  9443  003B6E  50E3               	movf	plusw1,w,c
  9444  003B70  0F01               	addlw	1
  9445  003B72  6E3D               	movwf	btemp,c
  9446  003B74  0EF6               	movlw	-10
  9447  003B76  0060  F0F7  FFE3   	movff	btemp,plusw1
  9448  003B7C  6A3D               	clrf	btemp,c
  9449  003B7E  0EF7               	movlw	-9
  9450  003B80  50E3               	movf	plusw1,w,c
  9451  003B82  203D               	addwfc	btemp,w,c
  9452  003B84  6E3D               	movwf	btemp,c
  9453  003B86  0EF7               	movlw	-9
  9454  003B88  0060  F0F7  FFE3   	movff	btemp,plusw1
  9455  003B8E                     l7596:
  9456                           
  9457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9458                           ;stkvar	_w @ sp[(-17)+13]
  9459                           ;stkvar	_l @ sp[(-17)+7]
  9460  003B8E  50E1               	movf	fsr1l,w,c
  9461  003B90  0FF6               	addlw	-10
  9462  003B92  6ED9               	movwf	fsr2l,c
  9463  003B94  50E2               	movf	fsr1h,w,c
  9464  003B96  6EDA               	movwf	fsr2h,c
  9465  003B98  0EFF               	movlw	255
  9466  003B9A  22DA               	addwfc	fsr2h,f,c
  9467  003B9C  0EFC               	movlw	-4
  9468  003B9E  50E3               	movf	plusw1,w,c
  9469  003BA0  5CDE               	subwf	postinc2,w,c
  9470  003BA2  50DE               	movf	postinc2,w,c
  9471  003BA4  0A80               	xorlw	128
  9472  003BA6  6E3D               	movwf	btemp,c
  9473  003BA8  0EFD               	movlw	-3
  9474  003BAA  50E3               	movf	plusw1,w,c
  9475  003BAC  0A80               	xorlw	128
  9476  003BAE  583D               	subwfb	btemp,w,c
  9477  003BB0  A0D8               	btfss	status,0,c
  9478  003BB2  D7CF               	goto	l7592
  9479  003BB4                     u4670:
  9480                           
  9481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  9482                           ;stkvar	_l @ sp[(-17)+7]
  9483  003BB4  0EF6               	movlw	-10
  9484  003BB6  006F FF8C  F03D    	movff	plusw1,btemp
  9485  003BBC  0EF7               	movlw	-9
  9486  003BBE  006F FF8C  F03E    	movff	plusw1,btemp+1
  9487                           
  9488                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9489  003BC4  0EEB               	movlw	235
  9490  003BC6  26E1               	addwf	fsr1l,f,c
  9491  003BC8  0EFF               	movlw	255
  9492  003BCA  22E2               	addwfc	fsr1h,f,c
  9493  003BCC  0012               	return		;funcret
  9494  003BCE                     __end_of_stoa:
  9495                           	opt callstack 0
  9496                           
  9497 ;; *************** function _dtoa *****************
  9498 ;; Defined at:
  9499 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9502 ;;		 -> f(5), NULL(0), 
  9503 ;;  d               8  [STACK] long long 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;  n               8  [STACK] long long 
  9506 ;;  i               2  [STACK] int 
  9507 ;;  s               2  [STACK] int 
  9508 ;;  w               2  [STACK] int 
  9509 ;;  p               2  [STACK] int 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  2  [STACK] int 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9523 ;;Total ram usage:        0 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    8
  9526 ;; This function calls:
  9527 ;;		___aodiv
  9528 ;;		___aomod
  9529 ;;		_abs
  9530 ;;		_pad
  9531 ;; This function is called by:
  9532 ;;		_vfpfcnvrt
  9533 ;; This function uses a reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text39
  9537  002A5A                     __ptext39:
  9538                           	opt callstack 0
  9539  002A5A                     _dtoa:
  9540                           	opt callstack 0
  9541                           
  9542                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9543  002A5A  0E12               	movlw	18
  9544  002A5C  26E1               	addwf	fsr1l,f,c
  9545  002A5E  0E00               	movlw	0
  9546  002A60  22E2               	addwfc	fsr1h,f,c
  9547                           
  9548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  9549                           ;stkvar	_d @ sp[(-18)+-10]
  9550                           
  9551                           ;incstack = 0
  9552  002A62  0EE4               	movlw	228
  9553  002A64  24E1               	addwf	fsr1l,w,c
  9554  002A66  6ED9               	movwf	fsr2l,c
  9555  002A68  0EFF               	movlw	255
  9556  002A6A  20E2               	addwfc	fsr1h,w,c
  9557  002A6C  6EDA               	movwf	fsr2h,c
  9558                           
  9559                           ;stkvar	_n @ sp[(-18)+2]
  9560  002A6E  0E08               	movlw	8
  9561  002A70  6E3D               	movwf	btemp,c
  9562  002A72  0EF0               	movlw	-16
  9563  002A74                     us441999:
  9564  002A74  006F FF7B FFE3     	movff	postinc2,plusw1
  9565  002A7A  28E8               	incf	wreg,w,c
  9566  002A7C  2E3D               	decfsz	btemp,f,c
  9567  002A7E  D7FA               	bra	us441999
  9568                           
  9569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  9570                           ;stkvar	_n @ sp[(-18)+2]
  9571  002A80  0EF7               	movlw	-9
  9572  002A82  AEE3               	btfss	plusw1,7,c
  9573  002A84  D002               	goto	u4420
  9574  002A86  0E01               	movlw	1
  9575  002A88  D001               	goto	u4430
  9576  002A8A                     u4420:
  9577  002A8A  0E00               	movlw	0
  9578  002A8C                     u4430:
  9579  002A8C  6E47               	movwf	btemp+10,c
  9580  002A8E  6A48               	clrf	btemp+11,c
  9581                           
  9582                           ;stkvar	_s @ sp[(-18)+12]
  9583  002A90  0EFA               	movlw	-6
  9584  002A92  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9585  002A98  0EFB               	movlw	-5
  9586  002A9A  0060  F123  FFE3   	movff	btemp+11,plusw1
  9587                           
  9588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  9589                           ;stkvar	_s @ sp[(-18)+12]
  9590  002AA0  0EFA               	movlw	-6
  9591  002AA2  006F FF8C  F03D    	movff	plusw1,btemp
  9592  002AA8  0EFB               	movlw	-5
  9593  002AAA  50E3               	movf	plusw1,w,c
  9594  002AAC  103D               	iorwf	btemp,w,c
  9595  002AAE  B4D8               	btfsc	status,2,c
  9596  002AB0  D025               	goto	u4450
  9597                           
  9598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  9599                           ;stkvar	_n @ sp[(-18)+2]
  9600                           ;stkvar	_n @ sp[(-18)+2]
  9601  002AB2  0EF0               	movlw	-16
  9602  002AB4  6CE3               	negf	plusw1,c
  9603  002AB6  0EF1               	movlw	-15
  9604  002AB8  1EE3               	comf	plusw1,f,c
  9605  002ABA  0EF2               	movlw	-14
  9606  002ABC  1EE3               	comf	plusw1,f,c
  9607  002ABE  0EF3               	movlw	-13
  9608  002AC0  1EE3               	comf	plusw1,f,c
  9609  002AC2  0EF4               	movlw	-12
  9610  002AC4  1EE3               	comf	plusw1,f,c
  9611  002AC6  0EF5               	movlw	-11
  9612  002AC8  1EE3               	comf	plusw1,f,c
  9613  002ACA  0EF6               	movlw	-10
  9614  002ACC  1EE3               	comf	plusw1,f,c
  9615  002ACE  0EF7               	movlw	-9
  9616  002AD0  1EE3               	comf	plusw1,f,c
  9617  002AD2  E314               	bnc	u4450
  9618  002AD4  0EF1               	movlw	-15
  9619  002AD6  2AE3               	incf	plusw1,f,c
  9620  002AD8  E311               	bnc	u4450
  9621  002ADA  0EF2               	movlw	-14
  9622  002ADC  2AE3               	incf	plusw1,f,c
  9623  002ADE  E30E               	bnc	u4450
  9624  002AE0  0EF3               	movlw	-13
  9625  002AE2  2AE3               	incf	plusw1,f,c
  9626  002AE4  E30B               	bnc	u4450
  9627  002AE6  0EF4               	movlw	-12
  9628  002AE8  2AE3               	incf	plusw1,f,c
  9629  002AEA  E308               	bnc	u4450
  9630  002AEC  0EF5               	movlw	-11
  9631  002AEE  2AE3               	incf	plusw1,f,c
  9632  002AF0  E305               	bnc	u4450
  9633  002AF2  0EF6               	movlw	-10
  9634  002AF4  2AE3               	incf	plusw1,f,c
  9635  002AF6  E302               	bnc	u4450
  9636  002AF8  0EF7               	movlw	-9
  9637  002AFA  2AE3               	incf	plusw1,f,c
  9638  002AFC                     u4450:
  9639                           
  9640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  9641  002AFC  AE26               	btfss	_prec+1,7,c
  9642                           
  9643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  9644  002AFE  9227               	bcf	_flags,1,c
  9645                           
  9646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  9647  002B00  BE26               	btfsc	_prec+1,7,c
  9648  002B02  D005               	goto	u4470
  9649  002B04  5026               	movf	_prec+1,w,c
  9650  002B06  E110               	bnz	l7500
  9651  002B08  0425               	decf	_prec,w,c
  9652  002B0A  B0D8               	btfsc	status,0,c
  9653  002B0C  D00D               	goto	l7500
  9654  002B0E                     u4470:
  9655  002B0E  0E01               	movlw	1
  9656  002B10  6E47               	movwf	btemp+10,c
  9657  002B12  0E00               	movlw	0
  9658  002B14  6E48               	movwf	btemp+11,c
  9659                           
  9660                           ;stkvar	_p @ sp[(-18)+16]
  9661  002B16  0EFE               	movlw	-2
  9662  002B18  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9663  002B1E  0EFF               	movlw	-1
  9664  002B20  0060  F123  FFE3   	movff	btemp+11,plusw1
  9665  002B26  D008               	goto	l1772
  9666  002B28                     l7500:
  9667                           
  9668                           ;stkvar	_p @ sp[(-18)+16]
  9669  002B28  0EFE               	movlw	-2
  9670  002B2A  0060  F097  FFE3   	movff	_prec,plusw1
  9671  002B30  0EFF               	movlw	-1
  9672  002B32  0060  F09B  FFE3   	movff	_prec+1,plusw1
  9673  002B38                     l1772:
  9674                           
  9675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  9676                           ;stkvar	_w @ sp[(-18)+14]
  9677  002B38  0EFC               	movlw	-4
  9678  002B3A  0060  F08F  FFE3   	movff	_width,plusw1
  9679  002B40  0EFD               	movlw	-3
  9680  002B42  0060  F093  FFE3   	movff	_width+1,plusw1
  9681                           
  9682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  9683                           ;stkvar	_s @ sp[(-18)+12]
  9684  002B48  0EFA               	movlw	-6
  9685  002B4A  006F FF8C  F03D    	movff	plusw1,btemp
  9686  002B50  0EFB               	movlw	-5
  9687  002B52  50E3               	movf	plusw1,w,c
  9688  002B54  103D               	iorwf	btemp,w,c
  9689  002B56  A4D8               	btfss	status,2,c
  9690  002B58  D002               	goto	u4490
  9691  002B5A  A427               	btfss	_flags,2,c
  9692  002B5C  D00A               	goto	l7508
  9693  002B5E                     u4490:
  9694                           
  9695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  9696                           ;stkvar	_w @ sp[(-18)+14]
  9697  002B5E  50E1               	movf	fsr1l,w,c
  9698  002B60  0FFC               	addlw	-4
  9699  002B62  6ED9               	movwf	fsr2l,c
  9700  002B64  50E2               	movf	fsr1h,w,c
  9701  002B66  6EDA               	movwf	fsr2h,c
  9702  002B68  0EFF               	movlw	255
  9703  002B6A  22DA               	addwfc	fsr2h,f,c
  9704  002B6C  06DE               	decf	postinc2,f,c
  9705  002B6E  0E00               	movlw	0
  9706  002B70  5ADD               	subwfb	postdec2,f,c
  9707  002B72                     l7508:
  9708                           
  9709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  9710  002B72  0E1F               	movlw	31
  9711  002B74  6E47               	movwf	btemp+10,c
  9712  002B76  0E00               	movlw	0
  9713  002B78  6E48               	movwf	btemp+11,c
  9714                           
  9715                           ;stkvar	_i @ sp[(-18)+10]
  9716  002B7A  0EF8               	movlw	-8
  9717  002B7C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9718  002B82  0EF9               	movlw	-7
  9719  002B84  0060  F123  FFE3   	movff	btemp+11,plusw1
  9720                           
  9721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  9722  002B8A  0101               	movlb	1	; () banked
  9723  002B8C  6BEC               	clrf	(_dbuf+31)& (0+255),b
  9724                           
  9725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9726  002B8E  D109               	goto	l7522
  9727  002B90                     l7512:
  9728                           
  9729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  9730                           ;stkvar	_i @ sp[(-18)+10]
  9731  002B90  50E1               	movf	fsr1l,w,c
  9732  002B92  0FF8               	addlw	-8
  9733  002B94  6ED9               	movwf	fsr2l,c
  9734  002B96  50E2               	movf	fsr1h,w,c
  9735  002B98  6EDA               	movwf	fsr2h,c
  9736  002B9A  0EFF               	movlw	255
  9737  002B9C  22DA               	addwfc	fsr2h,f,c
  9738  002B9E  06DE               	decf	postinc2,f,c
  9739  002BA0  0E00               	movlw	0
  9740  002BA2  5ADD               	subwfb	postdec2,f,c
  9741                           
  9742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  9743  002BA4  0E0A               	movlw	10
  9744  002BA6  6EE6               	movwf	postinc1,c
  9745  002BA8  0E00               	movlw	0
  9746  002BAA  6EE6               	movwf	postinc1,c
  9747  002BAC  0E00               	movlw	0
  9748  002BAE  6EE6               	movwf	postinc1,c
  9749  002BB0  0E00               	movlw	0
  9750  002BB2  6EE6               	movwf	postinc1,c
  9751  002BB4  0E00               	movlw	0
  9752  002BB6  6EE6               	movwf	postinc1,c
  9753  002BB8  0E00               	movlw	0
  9754  002BBA  6EE6               	movwf	postinc1,c
  9755  002BBC  0E00               	movlw	0
  9756  002BBE  6EE6               	movwf	postinc1,c
  9757  002BC0  0E00               	movlw	0
  9758  002BC2  6EE6               	movwf	postinc1,c
  9759                           
  9760                           ;stkvar	_n @ sp[(-26)+2]
  9761  002BC4  50E1               	movf	fsr1l,w,c
  9762  002BC6  0FE8               	addlw	-24
  9763  002BC8  6ED9               	movwf	fsr2l,c
  9764  002BCA  50E2               	movf	fsr1h,w,c
  9765  002BCC  6EDA               	movwf	fsr2h,c
  9766  002BCE  0EFF               	movlw	255
  9767  002BD0  22DA               	addwfc	fsr2h,f,c
  9768  002BD2  006F FF7B FFE6     	movff	postinc2,postinc1
  9769  002BD8  006F FF7B FFE6     	movff	postinc2,postinc1
  9770  002BDE  006F FF7B FFE6     	movff	postinc2,postinc1
  9771  002BE4  006F FF7B FFE6     	movff	postinc2,postinc1
  9772  002BEA  006F FF7B FFE6     	movff	postinc2,postinc1
  9773  002BF0  006F FF7B FFE6     	movff	postinc2,postinc1
  9774  002BF6  006F FF7B FFE6     	movff	postinc2,postinc1
  9775  002BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  9776  002C02  EC92  F021         	call	___aomod	;wreg free
  9777  002C06  52E5               	movf	postdec1,f,c
  9778  002C08  006F FF9C  F054    	movff	indf1,btemp+23
  9779  002C0E  52E5               	movf	postdec1,f,c
  9780  002C10  006F FF9C  F053    	movff	indf1,btemp+22
  9781  002C16  52E5               	movf	postdec1,f,c
  9782  002C18  006F FF9C  F052    	movff	indf1,btemp+21
  9783  002C1E  52E5               	movf	postdec1,f,c
  9784  002C20  006F FF9C  F051    	movff	indf1,btemp+20
  9785  002C26  52E5               	movf	postdec1,f,c
  9786  002C28  006F FF9C  F050    	movff	indf1,btemp+19
  9787  002C2E  52E5               	movf	postdec1,f,c
  9788  002C30  006F FF9C  F04F    	movff	indf1,btemp+18
  9789  002C36  52E5               	movf	postdec1,f,c
  9790  002C38  006F FF9C  F04E    	movff	indf1,btemp+17
  9791  002C3E  52E5               	movf	postdec1,f,c
  9792  002C40  006F FF9C  F04D    	movff	indf1,btemp+16
  9793  002C46  0EF8               	movlw	248
  9794  002C48  26E1               	addwf	fsr1l,f,c
  9795  002C4A  0EFF               	movlw	255
  9796  002C4C  22E2               	addwfc	fsr1h,f,c
  9797  002C4E  0060  F134  F047   	movff	btemp+16,btemp+10
  9798  002C54  0060  F138  F048   	movff	btemp+17,btemp+11
  9799  002C5A  0060  F11F  FFE6   	movff	btemp+10,postinc1
  9800  002C60  0060  F123  FFE6   	movff	btemp+11,postinc1
  9801  002C66  EC7C  F02B         	call	_abs	;wreg free
  9802  002C6A  0E30               	movlw	48
  9803  002C6C  263D               	addwf	btemp,f,c
  9804                           
  9805                           ;stkvar	_i @ sp[(-18)+10]
  9806  002C6E  0EF8               	movlw	-8
  9807  002C70  006F FF8C  F047    	movff	plusw1,btemp+10
  9808  002C76  0EF9               	movlw	-7
  9809  002C78  006F FF8C  F048    	movff	plusw1,btemp+11
  9810  002C7E  0ECD               	movlw	low _dbuf
  9811  002C80  2447               	addwf	btemp+10,w,c
  9812  002C82  6ED9               	movwf	fsr2l,c
  9813  002C84  0E01               	movlw	high _dbuf
  9814  002C86  2048               	addwfc	btemp+11,w,c
  9815  002C88  6EDA               	movwf	fsr2h,c
  9816  002C8A  0060  F0F7  FFDF   	movff	btemp,indf2
  9817                           
  9818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  9819                           ;stkvar	_p @ sp[(-18)+16]
  9820  002C90  50E1               	movf	fsr1l,w,c
  9821  002C92  0FFE               	addlw	-2
  9822  002C94  6ED9               	movwf	fsr2l,c
  9823  002C96  50E2               	movf	fsr1h,w,c
  9824  002C98  6EDA               	movwf	fsr2h,c
  9825  002C9A  0EFF               	movlw	255
  9826  002C9C  22DA               	addwfc	fsr2h,f,c
  9827  002C9E  06DE               	decf	postinc2,f,c
  9828  002CA0  0E00               	movlw	0
  9829  002CA2  5ADD               	subwfb	postdec2,f,c
  9830                           
  9831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  9832                           ;stkvar	_w @ sp[(-18)+14]
  9833  002CA4  50E1               	movf	fsr1l,w,c
  9834  002CA6  0FFC               	addlw	-4
  9835  002CA8  6ED9               	movwf	fsr2l,c
  9836  002CAA  50E2               	movf	fsr1h,w,c
  9837  002CAC  6EDA               	movwf	fsr2h,c
  9838  002CAE  0EFF               	movlw	255
  9839  002CB0  22DA               	addwfc	fsr2h,f,c
  9840  002CB2  06DE               	decf	postinc2,f,c
  9841  002CB4  0E00               	movlw	0
  9842  002CB6  5ADD               	subwfb	postdec2,f,c
  9843                           
  9844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  9845  002CB8  0E0A               	movlw	10
  9846  002CBA  6EE6               	movwf	postinc1,c
  9847  002CBC  0E00               	movlw	0
  9848  002CBE  6EE6               	movwf	postinc1,c
  9849  002CC0  0E00               	movlw	0
  9850  002CC2  6EE6               	movwf	postinc1,c
  9851  002CC4  0E00               	movlw	0
  9852  002CC6  6EE6               	movwf	postinc1,c
  9853  002CC8  0E00               	movlw	0
  9854  002CCA  6EE6               	movwf	postinc1,c
  9855  002CCC  0E00               	movlw	0
  9856  002CCE  6EE6               	movwf	postinc1,c
  9857  002CD0  0E00               	movlw	0
  9858  002CD2  6EE6               	movwf	postinc1,c
  9859  002CD4  0E00               	movlw	0
  9860  002CD6  6EE6               	movwf	postinc1,c
  9861                           
  9862                           ;stkvar	_n @ sp[(-26)+2]
  9863  002CD8  50E1               	movf	fsr1l,w,c
  9864  002CDA  0FE8               	addlw	-24
  9865  002CDC  6ED9               	movwf	fsr2l,c
  9866  002CDE  50E2               	movf	fsr1h,w,c
  9867  002CE0  6EDA               	movwf	fsr2h,c
  9868  002CE2  0EFF               	movlw	255
  9869  002CE4  22DA               	addwfc	fsr2h,f,c
  9870  002CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  9871  002CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  9872  002CF2  006F FF7B FFE6     	movff	postinc2,postinc1
  9873  002CF8  006F FF7B FFE6     	movff	postinc2,postinc1
  9874  002CFE  006F FF7B FFE6     	movff	postinc2,postinc1
  9875  002D04  006F FF7B FFE6     	movff	postinc2,postinc1
  9876  002D0A  006F FF7B FFE6     	movff	postinc2,postinc1
  9877  002D10  006F FF7B FFE6     	movff	postinc2,postinc1
  9878  002D16  EC31  F01F         	call	___aodiv	;wreg free
  9879  002D1A  52E5               	movf	postdec1,f,c
  9880  002D1C  006F FF9C  F054    	movff	indf1,btemp+23
  9881  002D22  52E5               	movf	postdec1,f,c
  9882  002D24  006F FF9C  F053    	movff	indf1,btemp+22
  9883  002D2A  52E5               	movf	postdec1,f,c
  9884  002D2C  006F FF9C  F052    	movff	indf1,btemp+21
  9885  002D32  52E5               	movf	postdec1,f,c
  9886  002D34  006F FF9C  F051    	movff	indf1,btemp+20
  9887  002D3A  52E5               	movf	postdec1,f,c
  9888  002D3C  006F FF9C  F050    	movff	indf1,btemp+19
  9889  002D42  52E5               	movf	postdec1,f,c
  9890  002D44  006F FF9C  F04F    	movff	indf1,btemp+18
  9891  002D4A  52E5               	movf	postdec1,f,c
  9892  002D4C  006F FF9C  F04E    	movff	indf1,btemp+17
  9893  002D52  52E5               	movf	postdec1,f,c
  9894  002D54  006F FF9C  F04D    	movff	indf1,btemp+16
  9895  002D5A  0EF8               	movlw	248
  9896  002D5C  26E1               	addwf	fsr1l,f,c
  9897  002D5E  0EFF               	movlw	255
  9898  002D60  22E2               	addwfc	fsr1h,f,c
  9899                           
  9900                           ;stkvar	_n @ sp[(-18)+2]
  9901  002D62  0EF0               	movlw	-16
  9902  002D64  0060  F137  FFE3   	movff	btemp+16,plusw1
  9903  002D6A  0EF1               	movlw	-15
  9904  002D6C  0060  F13B  FFE3   	movff	btemp+17,plusw1
  9905  002D72  0EF2               	movlw	-14
  9906  002D74  0060  F13F  FFE3   	movff	btemp+18,plusw1
  9907  002D7A  0EF3               	movlw	-13
  9908  002D7C  0060  F143  FFE3   	movff	btemp+19,plusw1
  9909  002D82  0EF4               	movlw	-12
  9910  002D84  0060  F147  FFE3   	movff	btemp+20,plusw1
  9911  002D8A  0EF5               	movlw	-11
  9912  002D8C  0060  F14B  FFE3   	movff	btemp+21,plusw1
  9913  002D92  0EF6               	movlw	-10
  9914  002D94  0060  F14F  FFE3   	movff	btemp+22,plusw1
  9915  002D9A  0EF7               	movlw	-9
  9916  002D9C  0060  F153  FFE3   	movff	btemp+23,plusw1
  9917  002DA2                     l7522:
  9918                           
  9919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9920                           ;stkvar	_i @ sp[(-18)+10]
  9921  002DA2  0EF9               	movlw	-7
  9922  002DA4  BEE3               	btfsc	plusw1,7,c
  9923  002DA6  D036               	goto	u4540
  9924  002DA8  0EF9               	movlw	-7
  9925  002DAA  50E3               	movf	plusw1,w,c
  9926  002DAC  E104               	bnz	u4500
  9927  002DAE  0EF8               	movlw	-8
  9928  002DB0  04E3               	decf	plusw1,w,c
  9929  002DB2  A0D8               	btfss	status,0,c
  9930  002DB4  D02F               	goto	u4540
  9931  002DB6                     u4500:
  9932                           
  9933                           ;stkvar	_n @ sp[(-18)+2]
  9934  002DB6  0EF0               	movlw	-16
  9935  002DB8  50E3               	movf	plusw1,w,c
  9936  002DBA  E115               	bnz	u4511
  9937  002DBC  0EF1               	movlw	-15
  9938  002DBE  50E3               	movf	plusw1,w,c
  9939  002DC0  E112               	bnz	u4511
  9940  002DC2  0EF2               	movlw	-14
  9941  002DC4  50E3               	movf	plusw1,w,c
  9942  002DC6  E10F               	bnz	u4511
  9943  002DC8  0EF3               	movlw	-13
  9944  002DCA  50E3               	movf	plusw1,w,c
  9945  002DCC  E10C               	bnz	u4511
  9946  002DCE  0EF4               	movlw	-12
  9947  002DD0  50E3               	movf	plusw1,w,c
  9948  002DD2  E109               	bnz	u4511
  9949  002DD4  0EF5               	movlw	-11
  9950  002DD6  50E3               	movf	plusw1,w,c
  9951  002DD8  E106               	bnz	u4511
  9952  002DDA  0EF6               	movlw	-10
  9953  002DDC  50E3               	movf	plusw1,w,c
  9954  002DDE  E103               	bnz	u4511
  9955  002DE0  0EF7               	movlw	-9
  9956  002DE2  50E3               	movf	plusw1,w,c
  9957  002DE4  A4D8               	btfss	status,2,c
  9958  002DE6                     u4511:
  9959  002DE6  D6D4               	goto	l7512
  9960                           
  9961                           ;stkvar	_p @ sp[(-18)+16]
  9962  002DE8  0EFF               	movlw	-1
  9963  002DEA  BEE3               	btfsc	plusw1,7,c
  9964  002DEC  D007               	goto	u4520
  9965  002DEE  0EFF               	movlw	-1
  9966  002DF0  50E3               	movf	plusw1,w,c
  9967  002DF2  E103               	bnz	u4521
  9968  002DF4  0EFE               	movlw	-2
  9969  002DF6  04E3               	decf	plusw1,w,c
  9970  002DF8  B0D8               	btfsc	status,0,c
  9971  002DFA                     u4521:
  9972  002DFA  D6CA               	goto	l7512
  9973  002DFC                     u4520:
  9974                           
  9975                           ;stkvar	_w @ sp[(-18)+14]
  9976  002DFC  0EFD               	movlw	-3
  9977  002DFE  BEE3               	btfsc	plusw1,7,c
  9978  002E00  D009               	goto	u4540
  9979  002E02  0EFD               	movlw	-3
  9980  002E04  50E3               	movf	plusw1,w,c
  9981  002E06  E104               	bnz	u4530
  9982  002E08  0EFC               	movlw	-4
  9983  002E0A  04E3               	decf	plusw1,w,c
  9984  002E0C  A0D8               	btfss	status,0,c
  9985  002E0E  D002               	goto	u4540
  9986  002E10                     u4530:
  9987  002E10  B227               	btfsc	_flags,1,c
  9988  002E12  D6BE               	goto	l7512
  9989  002E14                     u4540:
  9990                           
  9991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  9992                           ;stkvar	_s @ sp[(-18)+12]
  9993  002E14  0EFA               	movlw	-6
  9994  002E16  006F FF8C  F03D    	movff	plusw1,btemp
  9995  002E1C  0EFB               	movlw	-5
  9996  002E1E  50E3               	movf	plusw1,w,c
  9997  002E20  103D               	iorwf	btemp,w,c
  9998  002E22  A4D8               	btfss	status,2,c
  9999  002E24  D002               	goto	u4560
 10000  002E26  A427               	btfss	_flags,2,c
 10001  002E28  D033               	goto	l7546
 10002  002E2A                     u4560:
 10003                           
 10004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 10005                           ;stkvar	_i @ sp[(-18)+10]
 10006  002E2A  50E1               	movf	fsr1l,w,c
 10007  002E2C  0FF8               	addlw	-8
 10008  002E2E  6ED9               	movwf	fsr2l,c
 10009  002E30  50E2               	movf	fsr1h,w,c
 10010  002E32  6EDA               	movwf	fsr2h,c
 10011  002E34  0EFF               	movlw	255
 10012  002E36  22DA               	addwfc	fsr2h,f,c
 10013  002E38  06DE               	decf	postinc2,f,c
 10014  002E3A  0E00               	movlw	0
 10015  002E3C  5ADD               	subwfb	postdec2,f,c
 10016                           
 10017                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10018                           ;stkvar	_s @ sp[(-18)+12]
 10019  002E3E  0EFA               	movlw	-6
 10020  002E40  006F FF8C  F03D    	movff	plusw1,btemp
 10021  002E46  0EFB               	movlw	-5
 10022  002E48  50E3               	movf	plusw1,w,c
 10023  002E4A  103D               	iorwf	btemp,w,c
 10024  002E4C  A4D8               	btfss	status,2,c
 10025  002E4E  D002               	goto	l7542
 10026  002E50  0E2B               	movlw	43
 10027  002E52  D001               	goto	L22
 10028  002E54                     l7542:
 10029  002E54  0E2D               	movlw	45
 10030  002E56                     L22:
 10031  002E56  6E47               	movwf	btemp+10,c
 10032  002E58  0E00               	movlw	0
 10033  002E5A  6E48               	movwf	btemp+11,c
 10034                           
 10035                           ;stkvar	_dtoa$3822 @ sp[(-18)+0]
 10036  002E5C  0EEE               	movlw	-18
 10037  002E5E  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10038  002E64  0EEF               	movlw	-17
 10039  002E66  0060  F123  FFE3   	movff	btemp+11,plusw1
 10040                           
 10041                           ;stkvar	_dtoa$3822 @ sp[(-18)+0]
 10042                           ;stkvar	_i @ sp[(-18)+10]
 10043  002E6C  0EF8               	movlw	-8
 10044  002E6E  006F FF8C  F047    	movff	plusw1,btemp+10
 10045  002E74  0EF9               	movlw	-7
 10046  002E76  006F FF8C  F048    	movff	plusw1,btemp+11
 10047  002E7C  0ECD               	movlw	low _dbuf
 10048  002E7E  2447               	addwf	btemp+10,w,c
 10049  002E80  6ED9               	movwf	fsr2l,c
 10050  002E82  0E01               	movlw	high _dbuf
 10051  002E84  2048               	addwfc	btemp+11,w,c
 10052  002E86  6EDA               	movwf	fsr2h,c
 10053  002E88  0EEE               	movlw	-18
 10054  002E8A  006F FF8F FFDF     	movff	plusw1,indf2
 10055  002E90                     l7546:
 10056                           
 10057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10058                           ;stkvar	_w @ sp[(-18)+14]
 10059  002E90  0EFC               	movlw	-4
 10060  002E92  006F FF8F FFE6     	movff	plusw1,postinc1
 10061  002E98  006F FF8F FFE6     	movff	plusw1,postinc1
 10062                           
 10063                           ;stkvar	_i @ sp[(-20)+10]
 10064  002E9E  0ECD               	movlw	low _dbuf
 10065  002EA0  6E47               	movwf	btemp+10,c
 10066  002EA2  0E01               	movlw	high _dbuf
 10067  002EA4  6E48               	movwf	btemp+11,c
 10068  002EA6  0EF6               	movlw	-10
 10069  002EA8  50E3               	movf	plusw1,w,c
 10070  002EAA  2647               	addwf	btemp+10,f,c
 10071  002EAC  0EF7               	movlw	-9
 10072  002EAE  50E3               	movf	plusw1,w,c
 10073  002EB0  2248               	addwfc	btemp+11,f,c
 10074  002EB2  0060  F11F  FFE6   	movff	btemp+10,postinc1
 10075  002EB8  0060  F123  FFE6   	movff	btemp+11,postinc1
 10076                           
 10077                           ;stkvar	_fp @ sp[(-22)+-2]
 10078  002EBE  0EE8               	movlw	-24
 10079  002EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 10080  002EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 10081  002ECC  EC5C  F024         	call	_pad	;wreg free
 10082                           
 10083                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10084  002ED0  0EE4               	movlw	228
 10085  002ED2  26E1               	addwf	fsr1l,f,c
 10086  002ED4  0EFF               	movlw	255
 10087  002ED6  22E2               	addwfc	fsr1h,f,c
 10088  002ED8  0012               	return		;funcret
 10089  002EDA                     __end_of_dtoa:
 10090                           	opt callstack 0
 10091                           
 10092 ;; *************** function _abs *****************
 10093 ;; Defined at:
 10094 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  a               2  [STACK] int 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  2  [STACK] int 
 10101 ;; Registers used:
 10102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/1
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10112 ;;Total ram usage:        0 bytes
 10113 ;; Hardware stack levels used:    1
 10114 ;; Hardware stack levels required when called:    3
 10115 ;; This function calls:
 10116 ;;		Nothing
 10117 ;; This function is called by:
 10118 ;;		_dtoa
 10119 ;; This function uses a reentrant model
 10120 ;;
 10121                           
 10122                           	psect	text40
 10123  0056F8                     __ptext40:
 10124                           	opt callstack 0
 10125  0056F8                     _abs:
 10126                           	opt callstack 23
 10127                           
 10128                           ;stkvar	_a @ sp[(0)+-2]
 10129                           
 10130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10131                           ;incstack = 0
 10132  0056F8  0EFF               	movlw	-1
 10133  0056FA  BEE3               	btfsc	plusw1,7,c
 10134  0056FC  D007               	goto	u2340
 10135  0056FE  0EFF               	movlw	-1
 10136  005700  50E3               	movf	plusw1,w,c
 10137  005702  E112               	bnz	l5236
 10138  005704  0EFE               	movlw	-2
 10139  005706  04E3               	decf	plusw1,w,c
 10140  005708  B0D8               	btfsc	status,0,c
 10141  00570A  D00E               	goto	l5236
 10142  00570C                     u2340:
 10143                           
 10144                           ;stkvar	_a @ sp[(0)+-2]
 10145  00570C  0EFE               	movlw	-2
 10146  00570E  006F FF8C  F03D    	movff	plusw1,btemp
 10147  005714  1E3D               	comf	btemp,f,c
 10148  005716  0EFF               	movlw	-1
 10149  005718  006F FF8C  F03E    	movff	plusw1,btemp+1
 10150  00571E  1E3E               	comf	btemp+1,f,c
 10151  005720  2A3D               	incf	btemp,f,c
 10152  005722  B4D8               	btfsc	status,2,c
 10153  005724  2A3E               	incf	btemp+1,f,c
 10154  005726  D008               	goto	l2513
 10155  005728                     l5236:
 10156                           
 10157                           ;stkvar	_a @ sp[(0)+-2]
 10158  005728  0EFE               	movlw	-2
 10159  00572A  006F FF8C  F03D    	movff	plusw1,btemp
 10160  005730  0EFF               	movlw	-1
 10161  005732  006F FF8C  F03E    	movff	plusw1,btemp+1
 10162  005738                     l2513:
 10163                           
 10164                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10165  005738  52E5               	movf	postdec1,f,c
 10166  00573A  52E5               	movf	postdec1,f,c
 10167  00573C  0012               	return		;funcret
 10168  00573E                     __end_of_abs:
 10169                           	opt callstack 0
 10170                           
 10171 ;; *************** function ___aomod *****************
 10172 ;; Defined at:
 10173 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  dividend        8  [STACK] long long 
 10176 ;;  divisor         8  [STACK] long long 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  sign            1  [STACK] unsigned char 
 10179 ;;  counter         1  [STACK] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  8  [STACK] long long 
 10182 ;; Registers used:
 10183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/1
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10193 ;;Total ram usage:        0 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    3
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_dtoa
 10200 ;; This function uses a reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text41
 10204  004324                     __ptext41:
 10205                           	opt callstack 0
 10206  004324                     ___aomod:
 10207                           	opt callstack 0
 10208                           
 10209                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10210  004324  52E6               	movf	postinc1,f,c
 10211  004326  52E6               	movf	postinc1,f,c
 10212                           
 10213                           ;stkvar	_sign @ sp[(-2)+0]
 10214                           
 10215                           ;incstack = 0
 10216  004328  0EFE               	movlw	-2
 10217  00432A  6AE3               	clrf	plusw1,c
 10218                           
 10219                           ;stkvar	_dividend @ sp[(-2)+-8]
 10220  00432C  0EFD               	movlw	-3
 10221  00432E  AEE3               	btfss	plusw1,7,c
 10222  004330  D028               	goto	l5292
 10223                           
 10224                           ;stkvar	_dividend @ sp[(-2)+-8]
 10225                           ;stkvar	_dividend @ sp[(-2)+-8]
 10226  004332  0EF6               	movlw	-10
 10227  004334  6CE3               	negf	plusw1,c
 10228  004336  0EF7               	movlw	-9
 10229  004338  1EE3               	comf	plusw1,f,c
 10230  00433A  0EF8               	movlw	-8
 10231  00433C  1EE3               	comf	plusw1,f,c
 10232  00433E  0EF9               	movlw	-7
 10233  004340  1EE3               	comf	plusw1,f,c
 10234  004342  0EFA               	movlw	-6
 10235  004344  1EE3               	comf	plusw1,f,c
 10236  004346  0EFB               	movlw	-5
 10237  004348  1EE3               	comf	plusw1,f,c
 10238  00434A  0EFC               	movlw	-4
 10239  00434C  1EE3               	comf	plusw1,f,c
 10240  00434E  0EFD               	movlw	-3
 10241  004350  1EE3               	comf	plusw1,f,c
 10242  004352  E314               	bnc	u2480
 10243  004354  0EF7               	movlw	-9
 10244  004356  2AE3               	incf	plusw1,f,c
 10245  004358  E311               	bnc	u2480
 10246  00435A  0EF8               	movlw	-8
 10247  00435C  2AE3               	incf	plusw1,f,c
 10248  00435E  E30E               	bnc	u2480
 10249  004360  0EF9               	movlw	-7
 10250  004362  2AE3               	incf	plusw1,f,c
 10251  004364  E30B               	bnc	u2480
 10252  004366  0EFA               	movlw	-6
 10253  004368  2AE3               	incf	plusw1,f,c
 10254  00436A  E308               	bnc	u2480
 10255  00436C  0EFB               	movlw	-5
 10256  00436E  2AE3               	incf	plusw1,f,c
 10257  004370  E305               	bnc	u2480
 10258  004372  0EFC               	movlw	-4
 10259  004374  2AE3               	incf	plusw1,f,c
 10260  004376  E302               	bnc	u2480
 10261  004378  0EFD               	movlw	-3
 10262  00437A  2AE3               	incf	plusw1,f,c
 10263  00437C                     u2480:
 10264                           
 10265                           ;stkvar	_sign @ sp[(-2)+0]
 10266  00437C  0EFE               	movlw	-2
 10267  00437E  6AE3               	clrf	plusw1,c
 10268  004380  2AE3               	incf	plusw1,f,c
 10269  004382                     l5292:
 10270                           
 10271                           ;stkvar	_divisor @ sp[(-2)+-16]
 10272  004382  0EF5               	movlw	-11
 10273  004384  AEE3               	btfss	plusw1,7,c
 10274  004386  D025               	goto	u2500
 10275                           
 10276                           ;stkvar	_divisor @ sp[(-2)+-16]
 10277                           ;stkvar	_divisor @ sp[(-2)+-16]
 10278  004388  0EEE               	movlw	-18
 10279  00438A  6CE3               	negf	plusw1,c
 10280  00438C  0EEF               	movlw	-17
 10281  00438E  1EE3               	comf	plusw1,f,c
 10282  004390  0EF0               	movlw	-16
 10283  004392  1EE3               	comf	plusw1,f,c
 10284  004394  0EF1               	movlw	-15
 10285  004396  1EE3               	comf	plusw1,f,c
 10286  004398  0EF2               	movlw	-14
 10287  00439A  1EE3               	comf	plusw1,f,c
 10288  00439C  0EF3               	movlw	-13
 10289  00439E  1EE3               	comf	plusw1,f,c
 10290  0043A0  0EF4               	movlw	-12
 10291  0043A2  1EE3               	comf	plusw1,f,c
 10292  0043A4  0EF5               	movlw	-11
 10293  0043A6  1EE3               	comf	plusw1,f,c
 10294  0043A8  E314               	bnc	u2500
 10295  0043AA  0EEF               	movlw	-17
 10296  0043AC  2AE3               	incf	plusw1,f,c
 10297  0043AE  E311               	bnc	u2500
 10298  0043B0  0EF0               	movlw	-16
 10299  0043B2  2AE3               	incf	plusw1,f,c
 10300  0043B4  E30E               	bnc	u2500
 10301  0043B6  0EF1               	movlw	-15
 10302  0043B8  2AE3               	incf	plusw1,f,c
 10303  0043BA  E30B               	bnc	u2500
 10304  0043BC  0EF2               	movlw	-14
 10305  0043BE  2AE3               	incf	plusw1,f,c
 10306  0043C0  E308               	bnc	u2500
 10307  0043C2  0EF3               	movlw	-13
 10308  0043C4  2AE3               	incf	plusw1,f,c
 10309  0043C6  E305               	bnc	u2500
 10310  0043C8  0EF4               	movlw	-12
 10311  0043CA  2AE3               	incf	plusw1,f,c
 10312  0043CC  E302               	bnc	u2500
 10313  0043CE  0EF5               	movlw	-11
 10314  0043D0  2AE3               	incf	plusw1,f,c
 10315  0043D2                     u2500:
 10316                           
 10317                           ;stkvar	_divisor @ sp[(-2)+-16]
 10318  0043D2  0EEE               	movlw	-18
 10319  0043D4  50E3               	movf	plusw1,w,c
 10320  0043D6  E116               	bnz	u2510
 10321  0043D8  0EEF               	movlw	-17
 10322  0043DA  50E3               	movf	plusw1,w,c
 10323  0043DC  E113               	bnz	u2510
 10324  0043DE  0EF0               	movlw	-16
 10325  0043E0  50E3               	movf	plusw1,w,c
 10326  0043E2  E110               	bnz	u2510
 10327  0043E4  0EF1               	movlw	-15
 10328  0043E6  50E3               	movf	plusw1,w,c
 10329  0043E8  E10D               	bnz	u2510
 10330  0043EA  0EF2               	movlw	-14
 10331  0043EC  50E3               	movf	plusw1,w,c
 10332  0043EE  E10A               	bnz	u2510
 10333  0043F0  0EF3               	movlw	-13
 10334  0043F2  50E3               	movf	plusw1,w,c
 10335  0043F4  E107               	bnz	u2510
 10336  0043F6  0EF4               	movlw	-12
 10337  0043F8  50E3               	movf	plusw1,w,c
 10338  0043FA  E104               	bnz	u2510
 10339  0043FC  0EF5               	movlw	-11
 10340  0043FE  50E3               	movf	plusw1,w,c
 10341  004400  B4D8               	btfsc	status,2,c
 10342  004402  D075               	goto	u2540
 10343  004404                     u2510:
 10344                           
 10345                           ;stkvar	_counter @ sp[(-2)+1]
 10346  004404  0EFF               	movlw	-1
 10347  004406  6AE3               	clrf	plusw1,c
 10348  004408  D012               	goto	L23
 10349  00440A                     l5300:
 10350                           
 10351                           ;stkvar	_divisor @ sp[(-2)+-16]
 10352  00440A  90D8               	bcf	status,0,c
 10353  00440C  0EEE               	movlw	-18
 10354  00440E  36E3               	rlcf	plusw1,f,c
 10355  004410  0EEF               	movlw	-17
 10356  004412  36E3               	rlcf	plusw1,f,c
 10357  004414  0EF0               	movlw	-16
 10358  004416  36E3               	rlcf	plusw1,f,c
 10359  004418  0EF1               	movlw	-15
 10360  00441A  36E3               	rlcf	plusw1,f,c
 10361  00441C  0EF2               	movlw	-14
 10362  00441E  36E3               	rlcf	plusw1,f,c
 10363  004420  0EF3               	movlw	-13
 10364  004422  36E3               	rlcf	plusw1,f,c
 10365  004424  0EF4               	movlw	-12
 10366  004426  36E3               	rlcf	plusw1,f,c
 10367  004428  0EF5               	movlw	-11
 10368  00442A  36E3               	rlcf	plusw1,f,c
 10369                           
 10370                           ;stkvar	_counter @ sp[(-2)+1]
 10371  00442C  0EFF               	movlw	-1
 10372  00442E                     L23:
 10373  00442E  2AE3               	incf	plusw1,f,c
 10374                           
 10375                           ;stkvar	_divisor @ sp[(-2)+-16]
 10376  004430  0EF5               	movlw	-11
 10377  004432  AEE3               	btfss	plusw1,7,c
 10378  004434  D7EA               	goto	l5300
 10379  004436                     u2520:
 10380                           
 10381                           ;stkvar	_divisor @ sp[(-2)+-16]
 10382                           ;stkvar	_dividend @ sp[(-2)+-8]
 10383  004436  50E1               	movf	fsr1l,w,c
 10384  004438  0FF6               	addlw	-10
 10385  00443A  6ED9               	movwf	fsr2l,c
 10386  00443C  50E2               	movf	fsr1h,w,c
 10387  00443E  6EDA               	movwf	fsr2h,c
 10388  004440  0EFF               	movlw	255
 10389  004442  22DA               	addwfc	fsr2h,f,c
 10390  004444  0EEE               	movlw	-18
 10391  004446  50E3               	movf	plusw1,w,c
 10392  004448  5CDE               	subwf	postinc2,w,c
 10393  00444A  0EEF               	movlw	-17
 10394  00444C  50E3               	movf	plusw1,w,c
 10395  00444E  58DE               	subwfb	postinc2,w,c
 10396  004450  0EF0               	movlw	-16
 10397  004452  50E3               	movf	plusw1,w,c
 10398  004454  58DE               	subwfb	postinc2,w,c
 10399  004456  0EF1               	movlw	-15
 10400  004458  50E3               	movf	plusw1,w,c
 10401  00445A  58DE               	subwfb	postinc2,w,c
 10402  00445C  0EF2               	movlw	-14
 10403  00445E  50E3               	movf	plusw1,w,c
 10404  004460  58DE               	subwfb	postinc2,w,c
 10405  004462  0EF3               	movlw	-13
 10406  004464  50E3               	movf	plusw1,w,c
 10407  004466  58DE               	subwfb	postinc2,w,c
 10408  004468  0EF4               	movlw	-12
 10409  00446A  50E3               	movf	plusw1,w,c
 10410  00446C  58DE               	subwfb	postinc2,w,c
 10411  00446E  0EF5               	movlw	-11
 10412  004470  50E3               	movf	plusw1,w,c
 10413  004472  58DE               	subwfb	postinc2,w,c
 10414  004474  A0D8               	btfss	status,0,c
 10415  004476  D01F               	goto	l5308
 10416                           
 10417                           ;stkvar	_divisor @ sp[(-2)+-16]
 10418                           ;stkvar	_dividend @ sp[(-2)+-8]
 10419  004478  50E1               	movf	fsr1l,w,c
 10420  00447A  0FF6               	addlw	-10
 10421  00447C  6ED9               	movwf	fsr2l,c
 10422  00447E  50E2               	movf	fsr1h,w,c
 10423  004480  6EDA               	movwf	fsr2h,c
 10424  004482  0EFF               	movlw	255
 10425  004484  22DA               	addwfc	fsr2h,f,c
 10426  004486  0EEE               	movlw	-18
 10427  004488  50E3               	movf	plusw1,w,c
 10428  00448A  5EDE               	subwf	postinc2,f,c
 10429  00448C  0EEF               	movlw	-17
 10430  00448E  50E3               	movf	plusw1,w,c
 10431  004490  5ADE               	subwfb	postinc2,f,c
 10432  004492  0EF0               	movlw	-16
 10433  004494  50E3               	movf	plusw1,w,c
 10434  004496  5ADE               	subwfb	postinc2,f,c
 10435  004498  0EF1               	movlw	-15
 10436  00449A  50E3               	movf	plusw1,w,c
 10437  00449C  5ADE               	subwfb	postinc2,f,c
 10438  00449E  0EF2               	movlw	-14
 10439  0044A0  50E3               	movf	plusw1,w,c
 10440  0044A2  5ADE               	subwfb	postinc2,f,c
 10441  0044A4  0EF3               	movlw	-13
 10442  0044A6  50E3               	movf	plusw1,w,c
 10443  0044A8  5ADE               	subwfb	postinc2,f,c
 10444  0044AA  0EF4               	movlw	-12
 10445  0044AC  50E3               	movf	plusw1,w,c
 10446  0044AE  5ADE               	subwfb	postinc2,f,c
 10447  0044B0  0EF5               	movlw	-11
 10448  0044B2  50E3               	movf	plusw1,w,c
 10449  0044B4  5ADE               	subwfb	postinc2,f,c
 10450  0044B6                     l5308:
 10451                           
 10452                           ;stkvar	_divisor @ sp[(-2)+-16]
 10453  0044B6  90D8               	bcf	status,0,c
 10454  0044B8  0EF5               	movlw	-11
 10455  0044BA  32E3               	rrcf	plusw1,f,c
 10456  0044BC  0EF4               	movlw	-12
 10457  0044BE  32E3               	rrcf	plusw1,f,c
 10458  0044C0  0EF3               	movlw	-13
 10459  0044C2  32E3               	rrcf	plusw1,f,c
 10460  0044C4  0EF2               	movlw	-14
 10461  0044C6  32E3               	rrcf	plusw1,f,c
 10462  0044C8  0EF1               	movlw	-15
 10463  0044CA  32E3               	rrcf	plusw1,f,c
 10464  0044CC  0EF0               	movlw	-16
 10465  0044CE  32E3               	rrcf	plusw1,f,c
 10466  0044D0  0EEF               	movlw	-17
 10467  0044D2  32E3               	rrcf	plusw1,f,c
 10468  0044D4  0EEE               	movlw	-18
 10469  0044D6  32E3               	rrcf	plusw1,f,c
 10470                           
 10471                           ;stkvar	_counter @ sp[(-2)+1]
 10472  0044D8  0EFF               	movlw	-1
 10473  0044DA  50E3               	movf	plusw1,w,c
 10474  0044DC  6E3D               	movwf	btemp,c
 10475  0044DE  0E01               	movlw	1
 10476  0044E0  5E3D               	subwf	btemp,f,c
 10477  0044E2  0EFF               	movlw	-1
 10478  0044E4  0060  F0F7  FFE3   	movff	btemp,plusw1
 10479  0044EA  A4D8               	btfss	status,2,c
 10480  0044EC  D7A4               	goto	u2520
 10481  0044EE                     u2540:
 10482                           
 10483                           ;stkvar	_sign @ sp[(-2)+0]
 10484  0044EE  0EFE               	movlw	-2
 10485  0044F0  50E3               	movf	plusw1,w,c
 10486  0044F2  B4D8               	btfsc	status,2,c
 10487  0044F4  D025               	goto	u2560
 10488                           
 10489                           ;stkvar	_dividend @ sp[(-2)+-8]
 10490                           ;stkvar	_dividend @ sp[(-2)+-8]
 10491  0044F6  0EF6               	movlw	-10
 10492  0044F8  6CE3               	negf	plusw1,c
 10493  0044FA  0EF7               	movlw	-9
 10494  0044FC  1EE3               	comf	plusw1,f,c
 10495  0044FE  0EF8               	movlw	-8
 10496  004500  1EE3               	comf	plusw1,f,c
 10497  004502  0EF9               	movlw	-7
 10498  004504  1EE3               	comf	plusw1,f,c
 10499  004506  0EFA               	movlw	-6
 10500  004508  1EE3               	comf	plusw1,f,c
 10501  00450A  0EFB               	movlw	-5
 10502  00450C  1EE3               	comf	plusw1,f,c
 10503  00450E  0EFC               	movlw	-4
 10504  004510  1EE3               	comf	plusw1,f,c
 10505  004512  0EFD               	movlw	-3
 10506  004514  1EE3               	comf	plusw1,f,c
 10507  004516  E314               	bnc	u2560
 10508  004518  0EF7               	movlw	-9
 10509  00451A  2AE3               	incf	plusw1,f,c
 10510  00451C  E311               	bnc	u2560
 10511  00451E  0EF8               	movlw	-8
 10512  004520  2AE3               	incf	plusw1,f,c
 10513  004522  E30E               	bnc	u2560
 10514  004524  0EF9               	movlw	-7
 10515  004526  2AE3               	incf	plusw1,f,c
 10516  004528  E30B               	bnc	u2560
 10517  00452A  0EFA               	movlw	-6
 10518  00452C  2AE3               	incf	plusw1,f,c
 10519  00452E  E308               	bnc	u2560
 10520  004530  0EFB               	movlw	-5
 10521  004532  2AE3               	incf	plusw1,f,c
 10522  004534  E305               	bnc	u2560
 10523  004536  0EFC               	movlw	-4
 10524  004538  2AE3               	incf	plusw1,f,c
 10525  00453A  E302               	bnc	u2560
 10526  00453C  0EFD               	movlw	-3
 10527  00453E  2AE3               	incf	plusw1,f,c
 10528  004540                     u2560:
 10529                           
 10530                           ;stkvar	_dividend @ sp[(-2)+-8]
 10531  004540  0EF6               	movlw	246
 10532  004542  24E1               	addwf	fsr1l,w,c
 10533  004544  6ED9               	movwf	fsr2l,c
 10534  004546  0EFF               	movlw	255
 10535  004548  20E2               	addwfc	fsr1h,w,c
 10536  00454A  6EDA               	movwf	fsr2h,c
 10537                           
 10538                           ;stkvar	?___aomod @ sp[(-2)+-8]
 10539  00454C  0E08               	movlw	8
 10540  00454E  6E3D               	movwf	btemp,c
 10541  004550  0EF6               	movlw	-10
 10542  004552                     us257999:
 10543  004552  006F FF7B FFE3     	movff	postinc2,plusw1
 10544  004558  28E8               	incf	wreg,w,c
 10545  00455A  2E3D               	decfsz	btemp,f,c
 10546  00455C  D7FA               	bra	us257999
 10547                           
 10548                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10549  00455E  52E5               	movf	postdec1,f,c
 10550  004560  52E5               	movf	postdec1,f,c
 10551  004562  0012               	return		;funcret
 10552  004564                     __end_of___aomod:
 10553                           	opt callstack 0
 10554                           
 10555 ;; *************** function ___aodiv *****************
 10556 ;; Defined at:
 10557 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  dividend        8  [STACK] long long 
 10560 ;;  divisor         8  [STACK] long long 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  quotient        8  [STACK] long long 
 10563 ;;  sign            1  [STACK] unsigned char 
 10564 ;;  counter         1  [STACK] unsigned char 
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  8  [STACK] long long 
 10567 ;; Registers used:
 10568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/1
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10578 ;;Total ram usage:        0 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    3
 10581 ;; This function calls:
 10582 ;;		Nothing
 10583 ;; This function is called by:
 10584 ;;		_dtoa
 10585 ;; This function uses a reentrant model
 10586 ;;
 10587                           
 10588                           	psect	text42
 10589  003E62                     __ptext42:
 10590                           	opt callstack 0
 10591  003E62                     ___aodiv:
 10592                           	opt callstack 0
 10593                           
 10594                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 10595  003E62  0E0A               	movlw	10
 10596  003E64  26E1               	addwf	fsr1l,f,c
 10597  003E66  0E00               	movlw	0
 10598  003E68  22E2               	addwfc	fsr1h,f,c
 10599                           
 10600                           ;stkvar	_sign @ sp[(-10)+8]
 10601                           
 10602                           ;incstack = 0
 10603  003E6A  0EFE               	movlw	-2
 10604  003E6C  6AE3               	clrf	plusw1,c
 10605                           
 10606                           ;stkvar	_divisor @ sp[(-10)+-16]
 10607  003E6E  0EED               	movlw	-19
 10608  003E70  AEE3               	btfss	plusw1,7,c
 10609  003E72  D028               	goto	l5248
 10610                           
 10611                           ;stkvar	_divisor @ sp[(-10)+-16]
 10612                           ;stkvar	_divisor @ sp[(-10)+-16]
 10613  003E74  0EE6               	movlw	-26
 10614  003E76  6CE3               	negf	plusw1,c
 10615  003E78  0EE7               	movlw	-25
 10616  003E7A  1EE3               	comf	plusw1,f,c
 10617  003E7C  0EE8               	movlw	-24
 10618  003E7E  1EE3               	comf	plusw1,f,c
 10619  003E80  0EE9               	movlw	-23
 10620  003E82  1EE3               	comf	plusw1,f,c
 10621  003E84  0EEA               	movlw	-22
 10622  003E86  1EE3               	comf	plusw1,f,c
 10623  003E88  0EEB               	movlw	-21
 10624  003E8A  1EE3               	comf	plusw1,f,c
 10625  003E8C  0EEC               	movlw	-20
 10626  003E8E  1EE3               	comf	plusw1,f,c
 10627  003E90  0EED               	movlw	-19
 10628  003E92  1EE3               	comf	plusw1,f,c
 10629  003E94  E314               	bnc	u2360
 10630  003E96  0EE7               	movlw	-25
 10631  003E98  2AE3               	incf	plusw1,f,c
 10632  003E9A  E311               	bnc	u2360
 10633  003E9C  0EE8               	movlw	-24
 10634  003E9E  2AE3               	incf	plusw1,f,c
 10635  003EA0  E30E               	bnc	u2360
 10636  003EA2  0EE9               	movlw	-23
 10637  003EA4  2AE3               	incf	plusw1,f,c
 10638  003EA6  E30B               	bnc	u2360
 10639  003EA8  0EEA               	movlw	-22
 10640  003EAA  2AE3               	incf	plusw1,f,c
 10641  003EAC  E308               	bnc	u2360
 10642  003EAE  0EEB               	movlw	-21
 10643  003EB0  2AE3               	incf	plusw1,f,c
 10644  003EB2  E305               	bnc	u2360
 10645  003EB4  0EEC               	movlw	-20
 10646  003EB6  2AE3               	incf	plusw1,f,c
 10647  003EB8  E302               	bnc	u2360
 10648  003EBA  0EED               	movlw	-19
 10649  003EBC  2AE3               	incf	plusw1,f,c
 10650  003EBE                     u2360:
 10651                           
 10652                           ;stkvar	_sign @ sp[(-10)+8]
 10653  003EBE  0EFE               	movlw	-2
 10654  003EC0  6AE3               	clrf	plusw1,c
 10655  003EC2  2AE3               	incf	plusw1,f,c
 10656  003EC4                     l5248:
 10657                           
 10658                           ;stkvar	_dividend @ sp[(-10)+-8]
 10659  003EC4  0EF5               	movlw	-11
 10660  003EC6  AEE3               	btfss	plusw1,7,c
 10661  003EC8  D027               	goto	l5254
 10662                           
 10663                           ;stkvar	_dividend @ sp[(-10)+-8]
 10664                           ;stkvar	_dividend @ sp[(-10)+-8]
 10665  003ECA  0EEE               	movlw	-18
 10666  003ECC  6CE3               	negf	plusw1,c
 10667  003ECE  0EEF               	movlw	-17
 10668  003ED0  1EE3               	comf	plusw1,f,c
 10669  003ED2  0EF0               	movlw	-16
 10670  003ED4  1EE3               	comf	plusw1,f,c
 10671  003ED6  0EF1               	movlw	-15
 10672  003ED8  1EE3               	comf	plusw1,f,c
 10673  003EDA  0EF2               	movlw	-14
 10674  003EDC  1EE3               	comf	plusw1,f,c
 10675  003EDE  0EF3               	movlw	-13
 10676  003EE0  1EE3               	comf	plusw1,f,c
 10677  003EE2  0EF4               	movlw	-12
 10678  003EE4  1EE3               	comf	plusw1,f,c
 10679  003EE6  0EF5               	movlw	-11
 10680  003EE8  1EE3               	comf	plusw1,f,c
 10681  003EEA  E314               	bnc	u2380
 10682  003EEC  0EEF               	movlw	-17
 10683  003EEE  2AE3               	incf	plusw1,f,c
 10684  003EF0  E311               	bnc	u2380
 10685  003EF2  0EF0               	movlw	-16
 10686  003EF4  2AE3               	incf	plusw1,f,c
 10687  003EF6  E30E               	bnc	u2380
 10688  003EF8  0EF1               	movlw	-15
 10689  003EFA  2AE3               	incf	plusw1,f,c
 10690  003EFC  E30B               	bnc	u2380
 10691  003EFE  0EF2               	movlw	-14
 10692  003F00  2AE3               	incf	plusw1,f,c
 10693  003F02  E308               	bnc	u2380
 10694  003F04  0EF3               	movlw	-13
 10695  003F06  2AE3               	incf	plusw1,f,c
 10696  003F08  E305               	bnc	u2380
 10697  003F0A  0EF4               	movlw	-12
 10698  003F0C  2AE3               	incf	plusw1,f,c
 10699  003F0E  E302               	bnc	u2380
 10700  003F10  0EF5               	movlw	-11
 10701  003F12  2AE3               	incf	plusw1,f,c
 10702  003F14                     u2380:
 10703                           
 10704                           ;stkvar	_sign @ sp[(-10)+8]
 10705  003F14  0EFE               	movlw	-2
 10706  003F16  70E3               	btg	plusw1,0,c
 10707  003F18                     l5254:
 10708                           
 10709                           ;stkvar	_quotient @ sp[(-10)+0]
 10710  003F18  0E07               	movlw	7
 10711  003F1A  6E3D               	movwf	btemp,c
 10712  003F1C  0EF6               	movlw	-10
 10713  003F1E                     u2391:
 10714  003F1E  6AE3               	clrf	plusw1,c
 10715  003F20  2AE8               	incf	wreg,f,c
 10716  003F22  063D               	decf	btemp,f,c
 10717  003F24  E2FC               	bc	u2391
 10718                           
 10719                           ;stkvar	_divisor @ sp[(-10)+-16]
 10720  003F26  0EE6               	movlw	-26
 10721  003F28  50E3               	movf	plusw1,w,c
 10722  003F2A  E116               	bnz	u2400
 10723  003F2C  0EE7               	movlw	-25
 10724  003F2E  50E3               	movf	plusw1,w,c
 10725  003F30  E113               	bnz	u2400
 10726  003F32  0EE8               	movlw	-24
 10727  003F34  50E3               	movf	plusw1,w,c
 10728  003F36  E110               	bnz	u2400
 10729  003F38  0EE9               	movlw	-23
 10730  003F3A  50E3               	movf	plusw1,w,c
 10731  003F3C  E10D               	bnz	u2400
 10732  003F3E  0EEA               	movlw	-22
 10733  003F40  50E3               	movf	plusw1,w,c
 10734  003F42  E10A               	bnz	u2400
 10735  003F44  0EEB               	movlw	-21
 10736  003F46  50E3               	movf	plusw1,w,c
 10737  003F48  E107               	bnz	u2400
 10738  003F4A  0EEC               	movlw	-20
 10739  003F4C  50E3               	movf	plusw1,w,c
 10740  003F4E  E104               	bnz	u2400
 10741  003F50  0EED               	movlw	-19
 10742  003F52  50E3               	movf	plusw1,w,c
 10743  003F54  B4D8               	btfsc	status,2,c
 10744  003F56  D088               	goto	u2430
 10745  003F58                     u2400:
 10746                           
 10747                           ;stkvar	_counter @ sp[(-10)+9]
 10748  003F58  0EFF               	movlw	-1
 10749  003F5A  6AE3               	clrf	plusw1,c
 10750  003F5C  D012               	goto	L24
 10751  003F5E                     l5260:
 10752                           
 10753                           ;stkvar	_divisor @ sp[(-10)+-16]
 10754  003F5E  90D8               	bcf	status,0,c
 10755  003F60  0EE6               	movlw	-26
 10756  003F62  36E3               	rlcf	plusw1,f,c
 10757  003F64  0EE7               	movlw	-25
 10758  003F66  36E3               	rlcf	plusw1,f,c
 10759  003F68  0EE8               	movlw	-24
 10760  003F6A  36E3               	rlcf	plusw1,f,c
 10761  003F6C  0EE9               	movlw	-23
 10762  003F6E  36E3               	rlcf	plusw1,f,c
 10763  003F70  0EEA               	movlw	-22
 10764  003F72  36E3               	rlcf	plusw1,f,c
 10765  003F74  0EEB               	movlw	-21
 10766  003F76  36E3               	rlcf	plusw1,f,c
 10767  003F78  0EEC               	movlw	-20
 10768  003F7A  36E3               	rlcf	plusw1,f,c
 10769  003F7C  0EED               	movlw	-19
 10770  003F7E  36E3               	rlcf	plusw1,f,c
 10771                           
 10772                           ;stkvar	_counter @ sp[(-10)+9]
 10773  003F80  0EFF               	movlw	-1
 10774  003F82                     L24:
 10775  003F82  2AE3               	incf	plusw1,f,c
 10776                           
 10777                           ;stkvar	_divisor @ sp[(-10)+-16]
 10778  003F84  0EED               	movlw	-19
 10779  003F86  AEE3               	btfss	plusw1,7,c
 10780  003F88  D7EA               	goto	l5260
 10781  003F8A                     u2410:
 10782                           
 10783                           ;stkvar	_quotient @ sp[(-10)+0]
 10784  003F8A  90D8               	bcf	status,0,c
 10785  003F8C  0EF6               	movlw	-10
 10786  003F8E  36E3               	rlcf	plusw1,f,c
 10787  003F90  0EF7               	movlw	-9
 10788  003F92  36E3               	rlcf	plusw1,f,c
 10789  003F94  0EF8               	movlw	-8
 10790  003F96  36E3               	rlcf	plusw1,f,c
 10791  003F98  0EF9               	movlw	-7
 10792  003F9A  36E3               	rlcf	plusw1,f,c
 10793  003F9C  0EFA               	movlw	-6
 10794  003F9E  36E3               	rlcf	plusw1,f,c
 10795  003FA0  0EFB               	movlw	-5
 10796  003FA2  36E3               	rlcf	plusw1,f,c
 10797  003FA4  0EFC               	movlw	-4
 10798  003FA6  36E3               	rlcf	plusw1,f,c
 10799  003FA8  0EFD               	movlw	-3
 10800  003FAA  36E3               	rlcf	plusw1,f,c
 10801                           
 10802                           ;stkvar	_divisor @ sp[(-10)+-16]
 10803                           ;stkvar	_dividend @ sp[(-10)+-8]
 10804  003FAC  50E1               	movf	fsr1l,w,c
 10805  003FAE  0FEE               	addlw	-18
 10806  003FB0  6ED9               	movwf	fsr2l,c
 10807  003FB2  50E2               	movf	fsr1h,w,c
 10808  003FB4  6EDA               	movwf	fsr2h,c
 10809  003FB6  0EFF               	movlw	255
 10810  003FB8  22DA               	addwfc	fsr2h,f,c
 10811  003FBA  0EE6               	movlw	-26
 10812  003FBC  50E3               	movf	plusw1,w,c
 10813  003FBE  5CDE               	subwf	postinc2,w,c
 10814  003FC0  0EE7               	movlw	-25
 10815  003FC2  50E3               	movf	plusw1,w,c
 10816  003FC4  58DE               	subwfb	postinc2,w,c
 10817  003FC6  0EE8               	movlw	-24
 10818  003FC8  50E3               	movf	plusw1,w,c
 10819  003FCA  58DE               	subwfb	postinc2,w,c
 10820  003FCC  0EE9               	movlw	-23
 10821  003FCE  50E3               	movf	plusw1,w,c
 10822  003FD0  58DE               	subwfb	postinc2,w,c
 10823  003FD2  0EEA               	movlw	-22
 10824  003FD4  50E3               	movf	plusw1,w,c
 10825  003FD6  58DE               	subwfb	postinc2,w,c
 10826  003FD8  0EEB               	movlw	-21
 10827  003FDA  50E3               	movf	plusw1,w,c
 10828  003FDC  58DE               	subwfb	postinc2,w,c
 10829  003FDE  0EEC               	movlw	-20
 10830  003FE0  50E3               	movf	plusw1,w,c
 10831  003FE2  58DE               	subwfb	postinc2,w,c
 10832  003FE4  0EED               	movlw	-19
 10833  003FE6  50E3               	movf	plusw1,w,c
 10834  003FE8  58DE               	subwfb	postinc2,w,c
 10835  003FEA  A0D8               	btfss	status,0,c
 10836  003FEC  D021               	goto	l5272
 10837                           
 10838                           ;stkvar	_divisor @ sp[(-10)+-16]
 10839                           ;stkvar	_dividend @ sp[(-10)+-8]
 10840  003FEE  50E1               	movf	fsr1l,w,c
 10841  003FF0  0FEE               	addlw	-18
 10842  003FF2  6ED9               	movwf	fsr2l,c
 10843  003FF4  50E2               	movf	fsr1h,w,c
 10844  003FF6  6EDA               	movwf	fsr2h,c
 10845  003FF8  0EFF               	movlw	255
 10846  003FFA  22DA               	addwfc	fsr2h,f,c
 10847  003FFC  0EE6               	movlw	-26
 10848  003FFE  50E3               	movf	plusw1,w,c
 10849  004000  5EDE               	subwf	postinc2,f,c
 10850  004002  0EE7               	movlw	-25
 10851  004004  50E3               	movf	plusw1,w,c
 10852  004006  5ADE               	subwfb	postinc2,f,c
 10853  004008  0EE8               	movlw	-24
 10854  00400A  50E3               	movf	plusw1,w,c
 10855  00400C  5ADE               	subwfb	postinc2,f,c
 10856  00400E  0EE9               	movlw	-23
 10857  004010  50E3               	movf	plusw1,w,c
 10858  004012  5ADE               	subwfb	postinc2,f,c
 10859  004014  0EEA               	movlw	-22
 10860  004016  50E3               	movf	plusw1,w,c
 10861  004018  5ADE               	subwfb	postinc2,f,c
 10862  00401A  0EEB               	movlw	-21
 10863  00401C  50E3               	movf	plusw1,w,c
 10864  00401E  5ADE               	subwfb	postinc2,f,c
 10865  004020  0EEC               	movlw	-20
 10866  004022  50E3               	movf	plusw1,w,c
 10867  004024  5ADE               	subwfb	postinc2,f,c
 10868  004026  0EED               	movlw	-19
 10869  004028  50E3               	movf	plusw1,w,c
 10870  00402A  5ADE               	subwfb	postinc2,f,c
 10871                           
 10872                           ;stkvar	_quotient @ sp[(-10)+0]
 10873  00402C  0EF6               	movlw	-10
 10874  00402E  80E3               	bsf	plusw1,0,c
 10875  004030                     l5272:
 10876                           
 10877                           ;stkvar	_divisor @ sp[(-10)+-16]
 10878  004030  90D8               	bcf	status,0,c
 10879  004032  0EED               	movlw	-19
 10880  004034  32E3               	rrcf	plusw1,f,c
 10881  004036  0EEC               	movlw	-20
 10882  004038  32E3               	rrcf	plusw1,f,c
 10883  00403A  0EEB               	movlw	-21
 10884  00403C  32E3               	rrcf	plusw1,f,c
 10885  00403E  0EEA               	movlw	-22
 10886  004040  32E3               	rrcf	plusw1,f,c
 10887  004042  0EE9               	movlw	-23
 10888  004044  32E3               	rrcf	plusw1,f,c
 10889  004046  0EE8               	movlw	-24
 10890  004048  32E3               	rrcf	plusw1,f,c
 10891  00404A  0EE7               	movlw	-25
 10892  00404C  32E3               	rrcf	plusw1,f,c
 10893  00404E  0EE6               	movlw	-26
 10894  004050  32E3               	rrcf	plusw1,f,c
 10895                           
 10896                           ;stkvar	_counter @ sp[(-10)+9]
 10897  004052  0EFF               	movlw	-1
 10898  004054  50E3               	movf	plusw1,w,c
 10899  004056  6E3D               	movwf	btemp,c
 10900  004058  0E01               	movlw	1
 10901  00405A  5E3D               	subwf	btemp,f,c
 10902  00405C  0EFF               	movlw	-1
 10903  00405E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10904  004064  A4D8               	btfss	status,2,c
 10905  004066  D791               	goto	u2410
 10906  004068                     u2430:
 10907                           
 10908                           ;stkvar	_sign @ sp[(-10)+8]
 10909  004068  0EFE               	movlw	-2
 10910  00406A  50E3               	movf	plusw1,w,c
 10911  00406C  B4D8               	btfsc	status,2,c
 10912  00406E  D025               	goto	u2450
 10913                           
 10914                           ;stkvar	_quotient @ sp[(-10)+0]
 10915                           ;stkvar	_quotient @ sp[(-10)+0]
 10916  004070  0EF6               	movlw	-10
 10917  004072  6CE3               	negf	plusw1,c
 10918  004074  0EF7               	movlw	-9
 10919  004076  1EE3               	comf	plusw1,f,c
 10920  004078  0EF8               	movlw	-8
 10921  00407A  1EE3               	comf	plusw1,f,c
 10922  00407C  0EF9               	movlw	-7
 10923  00407E  1EE3               	comf	plusw1,f,c
 10924  004080  0EFA               	movlw	-6
 10925  004082  1EE3               	comf	plusw1,f,c
 10926  004084  0EFB               	movlw	-5
 10927  004086  1EE3               	comf	plusw1,f,c
 10928  004088  0EFC               	movlw	-4
 10929  00408A  1EE3               	comf	plusw1,f,c
 10930  00408C  0EFD               	movlw	-3
 10931  00408E  1EE3               	comf	plusw1,f,c
 10932  004090  E314               	bnc	u2450
 10933  004092  0EF7               	movlw	-9
 10934  004094  2AE3               	incf	plusw1,f,c
 10935  004096  E311               	bnc	u2450
 10936  004098  0EF8               	movlw	-8
 10937  00409A  2AE3               	incf	plusw1,f,c
 10938  00409C  E30E               	bnc	u2450
 10939  00409E  0EF9               	movlw	-7
 10940  0040A0  2AE3               	incf	plusw1,f,c
 10941  0040A2  E30B               	bnc	u2450
 10942  0040A4  0EFA               	movlw	-6
 10943  0040A6  2AE3               	incf	plusw1,f,c
 10944  0040A8  E308               	bnc	u2450
 10945  0040AA  0EFB               	movlw	-5
 10946  0040AC  2AE3               	incf	plusw1,f,c
 10947  0040AE  E305               	bnc	u2450
 10948  0040B0  0EFC               	movlw	-4
 10949  0040B2  2AE3               	incf	plusw1,f,c
 10950  0040B4  E302               	bnc	u2450
 10951  0040B6  0EFD               	movlw	-3
 10952  0040B8  2AE3               	incf	plusw1,f,c
 10953  0040BA                     u2450:
 10954                           
 10955                           ;stkvar	_quotient @ sp[(-10)+0]
 10956  0040BA  0EF6               	movlw	246
 10957  0040BC  24E1               	addwf	fsr1l,w,c
 10958  0040BE  6ED9               	movwf	fsr2l,c
 10959  0040C0  0EFF               	movlw	255
 10960  0040C2  20E2               	addwfc	fsr1h,w,c
 10961  0040C4  6EDA               	movwf	fsr2h,c
 10962                           
 10963                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 10964  0040C6  0E08               	movlw	8
 10965  0040C8  6E3D               	movwf	btemp,c
 10966  0040CA  0EEE               	movlw	-18
 10967  0040CC                     us246999:
 10968  0040CC  006F FF7B FFE3     	movff	postinc2,plusw1
 10969  0040D2  28E8               	incf	wreg,w,c
 10970  0040D4  2E3D               	decfsz	btemp,f,c
 10971  0040D6  D7FA               	bra	us246999
 10972                           
 10973                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 10974  0040D8  0EF6               	movlw	246
 10975  0040DA  26E1               	addwf	fsr1l,f,c
 10976  0040DC  0EFF               	movlw	255
 10977  0040DE  22E2               	addwfc	fsr1h,f,c
 10978  0040E0  0012               	return		;funcret
 10979  0040E2                     __end_of___aodiv:
 10980                           	opt callstack 0
 10981                           
 10982 ;; *************** function _ctoa *****************
 10983 ;; Defined at:
 10984 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10987 ;;		 -> f(5), NULL(0), 
 10988 ;;  c               1  [STACK] unsigned char 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  w               2  [STACK] int 
 10991 ;;  l               2    0        int 
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  2  [STACK] int 
 10994 ;; Registers used:
 10995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:    8
 11008 ;; This function calls:
 11009 ;;		_pad
 11010 ;; This function is called by:
 11011 ;;		_vfpfcnvrt
 11012 ;; This function uses a reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text43
 11016  00533C                     __ptext43:
 11017                           	opt callstack 0
 11018  00533C                     _ctoa:
 11019                           	opt callstack 0
 11020                           
 11021                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11022  00533C  52E6               	movf	postinc1,f,c
 11023  00533E  52E6               	movf	postinc1,f,c
 11024                           
 11025                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11026                           
 11027                           ;incstack = 0
 11028  005340  5023               	movf	_width,w,c
 11029  005342  1024               	iorwf	_width+1,w,c
 11030  005344  A4D8               	btfss	status,2,c
 11031  005346  D009               	goto	l7474
 11032                           
 11033                           ;stkvar	_w @ sp[(-2)+0]
 11034  005348  0EFE               	movlw	-2
 11035  00534A  0060  F08F  FFE3   	movff	_width,plusw1
 11036  005350  0EFF               	movlw	-1
 11037  005352  0060  F093  FFE3   	movff	_width+1,plusw1
 11038  005358  D016               	goto	l7476
 11039  00535A                     l7474:
 11040  00535A  0EFF               	movlw	255
 11041  00535C  6E47               	movwf	btemp+10,c
 11042  00535E  0EFF               	movlw	255
 11043  005360  6E48               	movwf	btemp+11,c
 11044  005362  0060  F08C  F045   	movff	_width,btemp+8
 11045  005368  0060  F090  F046   	movff	_width+1,btemp+9
 11046  00536E  5047               	movf	btemp+10,w,c
 11047  005370  2645               	addwf	btemp+8,f,c
 11048  005372  5048               	movf	btemp+11,w,c
 11049  005374  2246               	addwfc	btemp+9,f,c
 11050                           
 11051                           ;stkvar	_w @ sp[(-2)+0]
 11052  005376  0EFE               	movlw	-2
 11053  005378  0060  F117  FFE3   	movff	btemp+8,plusw1
 11054  00537E  0EFF               	movlw	-1
 11055  005380  0060  F11B  FFE3   	movff	btemp+9,plusw1
 11056  005386                     l7476:
 11057                           
 11058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11059                           ;stkvar	_c @ sp[(-2)+-3]
 11060  005386  0EFB               	movlw	-5
 11061  005388  006F FF8C  F1CD    	movff	plusw1,_dbuf
 11062                           
 11063                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11064  00538E  0101               	movlb	1	; () banked
 11065  005390  6BCE               	clrf	(_dbuf+1)& (0+255),b
 11066                           
 11067                           ; BSR set to: 1
 11068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 11069                           ;stkvar	_w @ sp[(-2)+0]
 11070  005392  0EFE               	movlw	-2
 11071  005394  006F FF8F FFE6     	movff	plusw1,postinc1
 11072  00539A  006F FF8F FFE6     	movff	plusw1,postinc1
 11073  0053A0  0ECD               	movlw	low _dbuf
 11074  0053A2  6EE6               	movwf	postinc1,c
 11075  0053A4  0E01               	movlw	high _dbuf
 11076  0053A6  6EE6               	movwf	postinc1,c
 11077                           
 11078                           ;stkvar	_fp @ sp[(-6)+-2]
 11079  0053A8  0EF8               	movlw	-8
 11080  0053AA  006F FF8F FFE6     	movff	plusw1,postinc1
 11081  0053B0  006F FF8F FFE6     	movff	plusw1,postinc1
 11082  0053B6  EC5C  F024         	call	_pad	;wreg free
 11083                           
 11084                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 11085  0053BA  0EFB               	movlw	251
 11086  0053BC  26E1               	addwf	fsr1l,f,c
 11087  0053BE  0EFF               	movlw	255
 11088  0053C0  22E2               	addwfc	fsr1h,f,c
 11089  0053C2  0012               	return		;funcret
 11090  0053C4                     __end_of_ctoa:
 11091                           	opt callstack 0
 11092                           
 11093 ;; *************** function _pad *****************
 11094 ;; Defined at:
 11095 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11098 ;;		 -> f(5), NULL(0), 
 11099 ;;  buf             2  [STACK] PTR unsigned char 
 11100 ;;		 -> dbuf(32), 
 11101 ;;  p               2  [STACK] int 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;  w               2  [STACK] int 
 11104 ;;  i               2  [STACK] int 
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  2  [STACK] int 
 11107 ;; Registers used:
 11108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/1
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11118 ;;Total ram usage:        0 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:    7
 11121 ;; This function calls:
 11122 ;;		_fputc
 11123 ;;		_fputs
 11124 ;;		_strlen
 11125 ;; This function is called by:
 11126 ;;		_ctoa
 11127 ;;		_dtoa
 11128 ;; This function uses a reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text44
 11132  0048B8                     __ptext44:
 11133                           	opt callstack 0
 11134  0048B8                     _pad:
 11135                           	opt callstack 0
 11136                           
 11137                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11138  0048B8  52E6               	movf	postinc1,f,c
 11139  0048BA  52E6               	movf	postinc1,f,c
 11140  0048BC  52E6               	movf	postinc1,f,c
 11141  0048BE  52E6               	movf	postinc1,f,c
 11142                           
 11143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 11144                           
 11145                           ;incstack = 0
 11146  0048C0  A027               	btfss	_flags,0,c
 11147  0048C2  D010               	goto	l7452
 11148                           
 11149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 11150                           ;stkvar	_fp @ sp[(-4)+-2]
 11151  0048C4  0EFA               	movlw	-6
 11152  0048C6  006F FF8F FFE6     	movff	plusw1,postinc1
 11153  0048CC  006F FF8F FFE6     	movff	plusw1,postinc1
 11154                           
 11155                           ;stkvar	_buf @ sp[(-6)+-4]
 11156  0048D2  0EF6               	movlw	-10
 11157  0048D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11158  0048DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11159  0048E0  EC09  F029         	call	_fputs	;wreg free
 11160  0048E4                     l7452:
 11161                           
 11162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 11163                           ;stkvar	_p @ sp[(-4)+-6]
 11164  0048E4  0EF7               	movlw	-9
 11165  0048E6  BEE3               	btfsc	plusw1,7,c
 11166  0048E8  D011               	goto	l7456
 11167                           
 11168                           ;stkvar	_p @ sp[(-4)+-6]
 11169                           ;stkvar	_w @ sp[(-4)+0]
 11170  0048EA  0EF6               	movlw	-10
 11171  0048EC  006F FF8C  F03D    	movff	plusw1,btemp
 11172  0048F2  0EFC               	movlw	-4
 11173  0048F4  0060  F0F7  FFE3   	movff	btemp,plusw1
 11174  0048FA  0EF7               	movlw	-9
 11175  0048FC  006F FF8C  F03D    	movff	plusw1,btemp
 11176  004902  0EFD               	movlw	-3
 11177  004904  0060  F0F7  FFE3   	movff	btemp,plusw1
 11178  00490A  D004               	goto	l1752
 11179  00490C                     l7456:
 11180                           
 11181                           ;stkvar	_w @ sp[(-4)+0]
 11182  00490C  0EFC               	movlw	-4
 11183  00490E  6AE3               	clrf	plusw1,c
 11184  004910  0EFD               	movlw	-3
 11185  004912  6AE3               	clrf	plusw1,c
 11186  004914                     l1752:
 11187                           
 11188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11189                           ;stkvar	_i @ sp[(-4)+2]
 11190  004914  0EFE               	movlw	-2
 11191  004916  6AE3               	clrf	plusw1,c
 11192  004918  0EFF               	movlw	-1
 11193  00491A  6AE3               	clrf	plusw1,c
 11194                           
 11195                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11196  00491C  D01E               	goto	l7462
 11197  00491E                     l7458:
 11198                           
 11199                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 11200                           ;stkvar	_fp @ sp[(-4)+-2]
 11201  00491E  0EFA               	movlw	-6
 11202  004920  006F FF8F FFE6     	movff	plusw1,postinc1
 11203  004926  006F FF8F FFE6     	movff	plusw1,postinc1
 11204  00492C  0E20               	movlw	32
 11205  00492E  6EE6               	movwf	postinc1,c
 11206  004930  0E00               	movlw	0
 11207  004932  6EE6               	movwf	postinc1,c
 11208  004934  ECE6  F024         	call	_fputc	;wreg free
 11209                           
 11210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11211                           ;stkvar	_i @ sp[(-4)+2]
 11212  004938  0EFE               	movlw	-2
 11213  00493A  50E3               	movf	plusw1,w,c
 11214  00493C  0F01               	addlw	1
 11215  00493E  6E3D               	movwf	btemp,c
 11216  004940  0EFE               	movlw	-2
 11217  004942  0060  F0F7  FFE3   	movff	btemp,plusw1
 11218  004948  6A3D               	clrf	btemp,c
 11219  00494A  0EFF               	movlw	-1
 11220  00494C  50E3               	movf	plusw1,w,c
 11221  00494E  203D               	addwfc	btemp,w,c
 11222  004950  6E3D               	movwf	btemp,c
 11223  004952  0EFF               	movlw	-1
 11224  004954  0060  F0F7  FFE3   	movff	btemp,plusw1
 11225  00495A                     l7462:
 11226                           
 11227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11228                           ;stkvar	_w @ sp[(-4)+0]
 11229                           ;stkvar	_i @ sp[(-4)+2]
 11230  00495A  50E1               	movf	fsr1l,w,c
 11231  00495C  0FFE               	addlw	-2
 11232  00495E  6ED9               	movwf	fsr2l,c
 11233  004960  50E2               	movf	fsr1h,w,c
 11234  004962  6EDA               	movwf	fsr2h,c
 11235  004964  0EFF               	movlw	255
 11236  004966  22DA               	addwfc	fsr2h,f,c
 11237  004968  0EFC               	movlw	-4
 11238  00496A  50E3               	movf	plusw1,w,c
 11239  00496C  5CDE               	subwf	postinc2,w,c
 11240  00496E  50DE               	movf	postinc2,w,c
 11241  004970  0A80               	xorlw	128
 11242  004972  6E3D               	movwf	btemp,c
 11243  004974  0EFD               	movlw	-3
 11244  004976  50E3               	movf	plusw1,w,c
 11245  004978  0A80               	xorlw	128
 11246  00497A  583D               	subwfb	btemp,w,c
 11247  00497C  A0D8               	btfss	status,0,c
 11248  00497E  D7CF               	goto	l7458
 11249                           
 11250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 11251  004980  B027               	btfsc	_flags,0,c
 11252  004982  D010               	goto	l7466
 11253                           
 11254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 11255                           ;stkvar	_fp @ sp[(-4)+-2]
 11256  004984  0EFA               	movlw	-6
 11257  004986  006F FF8F FFE6     	movff	plusw1,postinc1
 11258  00498C  006F FF8F FFE6     	movff	plusw1,postinc1
 11259                           
 11260                           ;stkvar	_buf @ sp[(-6)+-4]
 11261  004992  0EF6               	movlw	-10
 11262  004994  006F FF8F FFE6     	movff	plusw1,postinc1
 11263  00499A  006F FF8F FFE6     	movff	plusw1,postinc1
 11264  0049A0  EC09  F029         	call	_fputs	;wreg free
 11265  0049A4                     l7466:
 11266                           
 11267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 11268                           ;stkvar	_w @ sp[(-4)+0]
 11269                           ;stkvar	_buf @ sp[(-4)+-4]
 11270  0049A4  0EF8               	movlw	-8
 11271  0049A6  006F FF8F FFE6     	movff	plusw1,postinc1
 11272  0049AC  006F FF8F FFE6     	movff	plusw1,postinc1
 11273  0049B2  ECCE  F027         	call	_strlen	;wreg free
 11274  0049B6  0EFC               	movlw	-4
 11275  0049B8  50E3               	movf	plusw1,w,c
 11276  0049BA  263D               	addwf	btemp,f,c
 11277  0049BC  0EFD               	movlw	-3
 11278  0049BE  50E3               	movf	plusw1,w,c
 11279  0049C0  223E               	addwfc	btemp+1,f,c
 11280                           
 11281                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 11282  0049C2  0EF6               	movlw	246
 11283  0049C4  26E1               	addwf	fsr1l,f,c
 11284  0049C6  0EFF               	movlw	255
 11285  0049C8  22E2               	addwfc	fsr1h,f,c
 11286  0049CA  0012               	return		;funcret
 11287  0049CC                     __end_of_pad:
 11288                           	opt callstack 0
 11289                           
 11290 ;; *************** function _strlen *****************
 11291 ;; Defined at:
 11292 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;  s               2  [STACK] PTR const unsigned char 
 11295 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11296 ;;		 -> STR_3(6), V(87), 
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;  a               2  [STACK] PTR const unsigned char 
 11299 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11300 ;;		 -> STR_3(6), V(87), 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  2  [STACK] unsigned int 
 11303 ;; Registers used:
 11304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;Total ram usage:        0 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    3
 11317 ;; This function calls:
 11318 ;;		Nothing
 11319 ;; This function is called by:
 11320 ;;		_eaDogM_WriteString
 11321 ;;		_pad
 11322 ;;		_stoa
 11323 ;; This function uses a reentrant model
 11324 ;;
 11325                           
 11326                           	psect	text45
 11327  004F9C                     __ptext45:
 11328                           	opt callstack 0
 11329  004F9C                     _strlen:
 11330                           	opt callstack 0
 11331                           
 11332                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11333  004F9C  52E6               	movf	postinc1,f,c
 11334  004F9E  52E6               	movf	postinc1,f,c
 11335                           
 11336                           ;stkvar	_s @ sp[(-2)+-2]
 11337                           
 11338                           ;incstack = 0
 11339  004FA0  0EFC               	movlw	-4
 11340  004FA2  006F FF8C  F047    	movff	plusw1,btemp+10
 11341  004FA8  0EFD               	movlw	-3
 11342  004FAA  006F FF8C  F048    	movff	plusw1,btemp+11
 11343                           
 11344                           ;stkvar	_a @ sp[(-2)+0]
 11345  004FB0  0EFF               	movlw	-1
 11346  004FB2  0060  F123  FFE3   	movff	btemp+11,plusw1
 11347  004FB8  0EFE               	movlw	-2
 11348  004FBA  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11349  004FC0  D011               	goto	l5196
 11350  004FC2                     l5194:
 11351                           
 11352                           ;stkvar	_s @ sp[(-2)+-2]
 11353  004FC2  0EFC               	movlw	-4
 11354  004FC4  50E3               	movf	plusw1,w,c
 11355  004FC6  0F01               	addlw	1
 11356  004FC8  6E3D               	movwf	btemp,c
 11357  004FCA  0EFC               	movlw	-4
 11358  004FCC  0060  F0F7  FFE3   	movff	btemp,plusw1
 11359  004FD2  6A3D               	clrf	btemp,c
 11360  004FD4  0EFD               	movlw	-3
 11361  004FD6  50E3               	movf	plusw1,w,c
 11362  004FD8  203D               	addwfc	btemp,w,c
 11363  004FDA  6E3D               	movwf	btemp,c
 11364  004FDC  0EFD               	movlw	-3
 11365  004FDE  0060  F0F7  FFE3   	movff	btemp,plusw1
 11366  004FE4                     l5196:
 11367                           
 11368                           ;stkvar	_s @ sp[(-2)+-2]
 11369  004FE4  0EFC               	movlw	-4
 11370  004FE6  006F FF8F FFF6     	movff	plusw1,tblptrl
 11371  004FEC  0EFD               	movlw	-3
 11372  004FEE  006F FF8F FFF7     	movff	plusw1,tblptrh
 11373  004FF4  0E00               	movlw	low (__smallconst shr (0+16))
 11374  004FF6  6EF8               	movwf	tblptru,c
 11375  004FF8  0E1F               	movlw	(high __ramtop+-1)
 11376  004FFA  64F7               	cpfsgt	tblptrh,c
 11377  004FFC  D003               	bra	u2277
 11378  004FFE  0008               	tblrd		*
 11379  005000  50F5               	movf	tablat,w,c
 11380  005002  D007               	bra	u2270
 11381  005004                     u2277:
 11382  005004  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11383  00500A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11384  005010  50EF               	movf	indf0,w,c
 11385  005012                     u2270:
 11386  005012  0900               	iorlw	0
 11387  005014  A4D8               	btfss	status,2,c
 11388  005016  D7D5               	goto	l5194
 11389                           
 11390                           ;stkvar	_a @ sp[(-2)+0]
 11391                           ;stkvar	_s @ sp[(-2)+-2]
 11392  005018  0EFC               	movlw	-4
 11393  00501A  006F FF8C  F03D    	movff	plusw1,btemp
 11394  005020  0EFD               	movlw	-3
 11395  005022  006F FF8C  F03E    	movff	plusw1,btemp+1
 11396  005028  0EFE               	movlw	-2
 11397  00502A  50E3               	movf	plusw1,w,c
 11398  00502C  5E3D               	subwf	btemp,f,c
 11399  00502E  0EFF               	movlw	-1
 11400  005030  50E3               	movf	plusw1,w,c
 11401  005032  5A3E               	subwfb	btemp+1,f,c
 11402                           
 11403                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11404  005034  52E5               	movf	postdec1,f,c
 11405  005036  52E5               	movf	postdec1,f,c
 11406  005038  52E5               	movf	postdec1,f,c
 11407  00503A  52E5               	movf	postdec1,f,c
 11408  00503C  0012               	return		;funcret
 11409  00503E                     __end_of_strlen:
 11410                           	opt callstack 0
 11411                           
 11412 ;; *************** function _fputs *****************
 11413 ;; Defined at:
 11414 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;  s               2  [STACK] PTR const unsigned char 
 11417 ;;		 -> dbuf(32), 
 11418 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11419 ;;		 -> f(5), NULL(0), 
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;  i               2  [STACK] int 
 11422 ;;  c               1  [STACK] unsigned char 
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  2  [STACK] int 
 11425 ;; Registers used:
 11426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/1
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11436 ;;Total ram usage:        0 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:    6
 11439 ;; This function calls:
 11440 ;;		_fputc
 11441 ;; This function is called by:
 11442 ;;		_pad
 11443 ;; This function uses a reentrant model
 11444 ;;
 11445                           
 11446                           	psect	text46
 11447  005212                     __ptext46:
 11448                           	opt callstack 0
 11449  005212                     _fputs:
 11450                           	opt callstack 0
 11451                           
 11452                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11453  005212  52E6               	movf	postinc1,f,c
 11454  005214  52E6               	movf	postinc1,f,c
 11455  005216  52E6               	movf	postinc1,f,c
 11456                           
 11457                           ;stkvar	_i @ sp[(-3)+0]
 11458                           
 11459                           ;incstack = 0
 11460  005218  0EFD               	movlw	-3
 11461  00521A  6AE3               	clrf	plusw1,c
 11462  00521C  0EFE               	movlw	-2
 11463  00521E  6AE3               	clrf	plusw1,c
 11464  005220  D01F               	goto	l7446
 11465  005222                     l7442:
 11466                           
 11467                           ;stkvar	_fp @ sp[(-3)+-4]
 11468  005222  0EF9               	movlw	-7
 11469  005224  006F FF8F FFE6     	movff	plusw1,postinc1
 11470  00522A  006F FF8F FFE6     	movff	plusw1,postinc1
 11471                           
 11472                           ;stkvar	_c @ sp[(-5)+2]
 11473  005230  0EFD               	movlw	-3
 11474  005232  50E3               	movf	plusw1,w,c
 11475  005234  6EE6               	movwf	postinc1,c
 11476  005236  0E00               	movlw	0
 11477  005238  6EE6               	movwf	postinc1,c
 11478  00523A  ECE6  F024         	call	_fputc	;wreg free
 11479                           
 11480                           ;stkvar	_i @ sp[(-3)+0]
 11481  00523E  0EFD               	movlw	-3
 11482  005240  50E3               	movf	plusw1,w,c
 11483  005242  0F01               	addlw	1
 11484  005244  6E3D               	movwf	btemp,c
 11485  005246  0EFD               	movlw	-3
 11486  005248  0060  F0F7  FFE3   	movff	btemp,plusw1
 11487  00524E  6A3D               	clrf	btemp,c
 11488  005250  0EFE               	movlw	-2
 11489  005252  50E3               	movf	plusw1,w,c
 11490  005254  203D               	addwfc	btemp,w,c
 11491  005256  6E3D               	movwf	btemp,c
 11492  005258  0EFE               	movlw	-2
 11493  00525A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11494  005260                     l7446:
 11495                           
 11496                           ;stkvar	_i @ sp[(-3)+0]
 11497  005260  0EFD               	movlw	-3
 11498  005262  006F FF8C  F047    	movff	plusw1,btemp+10
 11499  005268  0EFE               	movlw	-2
 11500  00526A  006F FF8C  F048    	movff	plusw1,btemp+11
 11501                           
 11502                           ;stkvar	_s @ sp[(-3)+-2]
 11503  005270  0EFB               	movlw	-5
 11504  005272  006F FF8C  F045    	movff	plusw1,btemp+8
 11505  005278  0EFC               	movlw	-4
 11506  00527A  006F FF8C  F046    	movff	plusw1,btemp+9
 11507  005280  5047               	movf	btemp+10,w,c
 11508  005282  2445               	addwf	btemp+8,w,c
 11509  005284  6ED9               	movwf	fsr2l,c
 11510  005286  5048               	movf	btemp+11,w,c
 11511  005288  2046               	addwfc	btemp+9,w,c
 11512  00528A  6EDA               	movwf	fsr2h,c
 11513  00528C  50DF               	movf	indf2,w,c
 11514  00528E  6E48               	movwf	btemp+11,c
 11515                           
 11516                           ;stkvar	_c @ sp[(-3)+2]
 11517  005290  0EFF               	movlw	-1
 11518  005292  0060  F123  FFE3   	movff	btemp+11,plusw1
 11519  005298  0EFF               	movlw	-1
 11520  00529A  50E3               	movf	plusw1,w,c
 11521  00529C  A4D8               	btfss	status,2,c
 11522  00529E  D7C1               	goto	l7442
 11523                           
 11524                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11525  0052A0  0EF9               	movlw	249
 11526  0052A2  26E1               	addwf	fsr1l,f,c
 11527  0052A4  0EFF               	movlw	255
 11528  0052A6  22E2               	addwfc	fsr1h,f,c
 11529  0052A8  0012               	return		;funcret
 11530  0052AA                     __end_of_fputs:
 11531                           	opt callstack 0
 11532                           
 11533 ;; *************** function _fputc *****************
 11534 ;; Defined at:
 11535 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  c               2  [STACK] int 
 11538 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11539 ;;		 -> f(5), NULL(0), 
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;		None
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  2  [STACK] int 
 11544 ;; Registers used:
 11545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11555 ;;Total ram usage:        0 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; Hardware stack levels required when called:    5
 11558 ;; This function calls:
 11559 ;;		_putch
 11560 ;; This function is called by:
 11561 ;;		_pad
 11562 ;;		_stoa
 11563 ;;		_vfpfcnvrt
 11564 ;;		_fputs
 11565 ;; This function uses a reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text47
 11569  0049CC                     __ptext47:
 11570                           	opt callstack 0
 11571  0049CC                     _fputc:
 11572                           	opt callstack 21
 11573                           
 11574                           ;stkvar	_fp @ sp[(0)+-4]
 11575                           
 11576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11577                           ;incstack = 0
 11578  0049CC  0EFC               	movlw	-4
 11579  0049CE  006F FF8C  F03D    	movff	plusw1,btemp
 11580  0049D4  0EFD               	movlw	-3
 11581  0049D6  50E3               	movf	plusw1,w,c
 11582  0049D8  103D               	iorwf	btemp,w,c
 11583  0049DA  B4D8               	btfsc	status,2,c
 11584  0049DC  D009               	goto	u4320
 11585                           
 11586                           ;stkvar	_fp @ sp[(0)+-4]
 11587  0049DE  0EFC               	movlw	-4
 11588  0049E0  006F FF8C  F03D    	movff	plusw1,btemp
 11589  0049E6  0EFD               	movlw	-3
 11590  0049E8  50E3               	movf	plusw1,w,c
 11591  0049EA  103D               	iorwf	btemp,w,c
 11592  0049EC  A4D8               	btfss	status,2,c
 11593  0049EE  D006               	goto	l7432
 11594  0049F0                     u4320:
 11595                           
 11596                           ;stkvar	_c @ sp[(0)+-2]
 11597  0049F0  0EFE               	movlw	-2
 11598  0049F2  50E3               	movf	plusw1,w,c
 11599  0049F4  6EE6               	movwf	postinc1,c
 11600  0049F6  ECAE  F02F         	call	_putch	;wreg free
 11601  0049FA  D069               	goto	l2535
 11602  0049FC                     l7432:
 11603                           
 11604                           ;stkvar	_fp @ sp[(0)+-4]
 11605  0049FC  0EFC               	movlw	-4
 11606  0049FE  006F FF8C  F047    	movff	plusw1,btemp+10
 11607  004A04  0EFD               	movlw	-3
 11608  004A06  006F FF8C  F048    	movff	plusw1,btemp+11
 11609  004A0C  0E03               	movlw	3
 11610  004A0E  2447               	addwf	btemp+10,w,c
 11611  004A10  6ED9               	movwf	fsr2l,c
 11612  004A12  0E00               	movlw	0
 11613  004A14  2048               	addwfc	btemp+11,w,c
 11614  004A16  6EDA               	movwf	fsr2h,c
 11615  004A18  50DE               	movf	postinc2,w,c
 11616  004A1A  10DE               	iorwf	postinc2,w,c
 11617  004A1C  B4D8               	btfsc	status,2,c
 11618  004A1E  D026               	goto	u4340
 11619                           
 11620                           ;stkvar	_fp @ sp[(0)+-4]
 11621  004A20  0EFC               	movlw	-4
 11622  004A22  006F FF8C  F047    	movff	plusw1,btemp+10
 11623  004A28  0EFD               	movlw	-3
 11624  004A2A  006F FF8C  F048    	movff	plusw1,btemp+11
 11625  004A30  0E03               	movlw	3
 11626  004A32  2447               	addwf	btemp+10,w,c
 11627  004A34  6ED9               	movwf	fsr2l,c
 11628  004A36  0E00               	movlw	0
 11629  004A38  2048               	addwfc	btemp+11,w,c
 11630  004A3A  6EDA               	movwf	fsr2h,c
 11631                           
 11632                           ;stkvar	_fp @ sp[(0)+-4]
 11633  004A3C  0EFC               	movlw	-4
 11634  004A3E  006F FF8C  F047    	movff	plusw1,btemp+10
 11635  004A44  0EFD               	movlw	-3
 11636  004A46  006F FF8C  F048    	movff	plusw1,btemp+11
 11637  004A4C  0E01               	movlw	1
 11638  004A4E  2447               	addwf	btemp+10,w,c
 11639  004A50  6EE9               	movwf	fsr0l,c
 11640  004A52  0E00               	movlw	0
 11641  004A54  2048               	addwfc	btemp+11,w,c
 11642  004A56  6EEA               	movwf	fsr0h,c
 11643  004A58  50DE               	movf	postinc2,w,c
 11644  004A5A  5CEE               	subwf	postinc0,w,c
 11645  004A5C  50EE               	movf	postinc0,w,c
 11646  004A5E  0A80               	xorlw	128
 11647  004A60  6E3D               	movwf	btemp,c
 11648  004A62  50DE               	movf	postinc2,w,c
 11649  004A64  0A80               	xorlw	128
 11650  004A66  583D               	subwfb	btemp,w,c
 11651  004A68  B0D8               	btfsc	status,0,c
 11652  004A6A  D031               	goto	l2535
 11653  004A6C                     u4340:
 11654                           
 11655                           ;stkvar	_c @ sp[(0)+-2]
 11656                           ;stkvar	_fp @ sp[(0)+-4]
 11657  004A6C  0EFC               	movlw	-4
 11658  004A6E  006F FF8C  F047    	movff	plusw1,btemp+10
 11659  004A74  0EFD               	movlw	-3
 11660  004A76  006F FF8C  F048    	movff	plusw1,btemp+11
 11661  004A7C  0E01               	movlw	1
 11662  004A7E  2447               	addwf	btemp+10,w,c
 11663  004A80  6ED9               	movwf	fsr2l,c
 11664  004A82  0E00               	movlw	0
 11665  004A84  2048               	addwfc	btemp+11,w,c
 11666  004A86  6EDA               	movwf	fsr2h,c
 11667  004A88  50DF               	movf	indf2,w,c
 11668  004A8A  6E48               	movwf	btemp+11,c
 11669                           
 11670                           ;stkvar	_fp @ sp[(0)+-4]
 11671  004A8C  0EFC               	movlw	-4
 11672  004A8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11673  004A94  0EFD               	movlw	-3
 11674  004A96  006F FF8F FFDA     	movff	plusw1,fsr2h
 11675  004A9C  50DF               	movf	indf2,w,c
 11676  004A9E  2448               	addwf	btemp+11,w,c
 11677  004AA0  6ED9               	movwf	fsr2l,c
 11678  004AA2  6ADA               	clrf	fsr2h,c
 11679  004AA4  0EFE               	movlw	-2
 11680  004AA6  006F FF8F FFDF     	movff	plusw1,indf2
 11681                           
 11682                           ;stkvar	_fp @ sp[(0)+-4]
 11683  004AAC  0EFC               	movlw	-4
 11684  004AAE  006F FF8C  F047    	movff	plusw1,btemp+10
 11685  004AB4  0EFD               	movlw	-3
 11686  004AB6  006F FF8C  F048    	movff	plusw1,btemp+11
 11687  004ABC  0E01               	movlw	1
 11688  004ABE  2447               	addwf	btemp+10,w,c
 11689  004AC0  6ED9               	movwf	fsr2l,c
 11690  004AC2  0E00               	movlw	0
 11691  004AC4  2048               	addwfc	btemp+11,w,c
 11692  004AC6  6EDA               	movwf	fsr2h,c
 11693  004AC8  2ADE               	incf	postinc2,f,c
 11694  004ACA  0E00               	movlw	0
 11695  004ACC  22DD               	addwfc	postdec2,f,c
 11696  004ACE                     l2535:
 11697                           
 11698                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11699  004ACE  52E5               	movf	postdec1,f,c
 11700  004AD0  52E5               	movf	postdec1,f,c
 11701  004AD2  52E5               	movf	postdec1,f,c
 11702  004AD4  52E5               	movf	postdec1,f,c
 11703  004AD6  0012               	return		;funcret
 11704  004AD8                     __end_of_fputc:
 11705                           	opt callstack 0
 11706                           
 11707 ;; *************** function _putch *****************
 11708 ;; Defined at:
 11709 ;;		line 138 in file "eadog.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;  c               1  [STACK] unsigned char 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1  [STACK] void 
 11716 ;; Registers used:
 11717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11727 ;;Total ram usage:        0 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:    4
 11730 ;; This function calls:
 11731 ;;		_ringBufS_put_dma
 11732 ;; This function is called by:
 11733 ;;		_fputc
 11734 ;; This function uses a reentrant model
 11735 ;;
 11736                           
 11737                           	psect	text48
 11738  005F5C                     __ptext48:
 11739                           	opt callstack 0
 11740  005F5C                     _putch:
 11741                           	opt callstack 21
 11742                           
 11743                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 11744                           ;stkvar	_c @ sp[(0)+-1]
 11745                           
 11746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11747                           ;incstack = 0
 11748  005F5C  0EFF               	movlw	-1
 11749  005F5E  50E3               	movf	plusw1,w,c
 11750  005F60  6EE6               	movwf	postinc1,c
 11751  005F62  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 11752  005F68  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 11753  005F6E  EC79  F027         	call	_ringBufS_put_dma	;wreg free
 11754                           
 11755                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 11756  005F72  52E5               	movf	postdec1,f,c
 11757  005F74  0012               	return		;funcret
 11758  005F76                     __end_of_putch:
 11759                           	opt callstack 0
 11760                           
 11761 ;; *************** function _ringBufS_put_dma *****************
 11762 ;; Defined at:
 11763 ;;		line 67 in file "ringbufs.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11766 ;;		 -> ring_buf1(67), 
 11767 ;;  c               1  [STACK] const unsigned char 
 11768 ;; Auto vars:     Size  Location     Type
 11769 ;;		None
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  1  [STACK] void 
 11772 ;; Registers used:
 11773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11783 ;;Total ram usage:        0 bytes
 11784 ;; Hardware stack levels used:    1
 11785 ;; Hardware stack levels required when called:    3
 11786 ;; This function calls:
 11787 ;;		Nothing
 11788 ;; This function is called by:
 11789 ;;		_putch
 11790 ;; This function uses a reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text49
 11794  004EF2                     __ptext49:
 11795                           	opt callstack 0
 11796  004EF2                     _ringBufS_put_dma:
 11797                           	opt callstack 21
 11798                           
 11799                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 11800                           ;stkvar	__this @ sp[(0)+-2]
 11801                           
 11802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11803                           ;incstack = 0
 11804  004EF2  0EFE               	movlw	-2
 11805  004EF4  006F FF8C  F047    	movff	plusw1,btemp+10
 11806  004EFA  0EFF               	movlw	-1
 11807  004EFC  006F FF8C  F048    	movff	plusw1,btemp+11
 11808  004F02  0E42               	movlw	66
 11809  004F04  2447               	addwf	btemp+10,w,c
 11810  004F06  6ED9               	movwf	fsr2l,c
 11811  004F08  0E00               	movlw	0
 11812  004F0A  2048               	addwfc	btemp+11,w,c
 11813  004F0C  6EDA               	movwf	fsr2h,c
 11814  004F0E  0E40               	movlw	64
 11815  004F10  60DF               	cpfslt	indf2,c
 11816  004F12  D040               	goto	l1445
 11817                           
 11818                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 11819                           ;stkvar	_c @ sp[(0)+-3]
 11820                           ;stkvar	__this @ sp[(0)+-2]
 11821  004F14  0EFE               	movlw	-2
 11822  004F16  006F FF8C  F047    	movff	plusw1,btemp+10
 11823  004F1C  0EFF               	movlw	-1
 11824  004F1E  006F FF8C  F048    	movff	plusw1,btemp+11
 11825  004F24  0E40               	movlw	64
 11826  004F26  2447               	addwf	btemp+10,w,c
 11827  004F28  6ED9               	movwf	fsr2l,c
 11828  004F2A  0E00               	movlw	0
 11829  004F2C  2048               	addwfc	btemp+11,w,c
 11830  004F2E  6EDA               	movwf	fsr2h,c
 11831  004F30  50DF               	movf	indf2,w,c
 11832  004F32  6E48               	movwf	btemp+11,c
 11833                           
 11834                           ;stkvar	__this @ sp[(0)+-2]
 11835  004F34  0EFE               	movlw	-2
 11836  004F36  006F FF8C  F045    	movff	plusw1,btemp+8
 11837  004F3C  0EFF               	movlw	-1
 11838  004F3E  006F FF8C  F046    	movff	plusw1,btemp+9
 11839  004F44  5048               	movf	btemp+11,w,c
 11840  004F46  2445               	addwf	btemp+8,w,c
 11841  004F48  6ED9               	movwf	fsr2l,c
 11842  004F4A  0E00               	movlw	0
 11843  004F4C  2046               	addwfc	btemp+9,w,c
 11844  004F4E  6EDA               	movwf	fsr2h,c
 11845  004F50  0EFD               	movlw	-3
 11846  004F52  006F FF8F FFDF     	movff	plusw1,indf2
 11847                           
 11848                           ;ringbufs.c: 71:   ++_this->head;
 11849                           ;stkvar	__this @ sp[(0)+-2]
 11850  004F58  0EFE               	movlw	-2
 11851  004F5A  006F FF8C  F047    	movff	plusw1,btemp+10
 11852  004F60  0EFF               	movlw	-1
 11853  004F62  006F FF8C  F048    	movff	plusw1,btemp+11
 11854  004F68  0E40               	movlw	64
 11855  004F6A  2447               	addwf	btemp+10,w,c
 11856  004F6C  6ED9               	movwf	fsr2l,c
 11857  004F6E  0E00               	movlw	0
 11858  004F70  2048               	addwfc	btemp+11,w,c
 11859  004F72  6EDA               	movwf	fsr2h,c
 11860  004F74  2ADF               	incf	indf2,f,c
 11861                           
 11862                           ;ringbufs.c: 72:   ++_this->count;
 11863                           ;stkvar	__this @ sp[(0)+-2]
 11864  004F76  0EFE               	movlw	-2
 11865  004F78  006F FF8C  F047    	movff	plusw1,btemp+10
 11866  004F7E  0EFF               	movlw	-1
 11867  004F80  006F FF8C  F048    	movff	plusw1,btemp+11
 11868  004F86  0E42               	movlw	66
 11869  004F88  2447               	addwf	btemp+10,w,c
 11870  004F8A  6ED9               	movwf	fsr2l,c
 11871  004F8C  0E00               	movlw	0
 11872  004F8E  2048               	addwfc	btemp+11,w,c
 11873  004F90  6EDA               	movwf	fsr2h,c
 11874  004F92  2ADF               	incf	indf2,f,c
 11875  004F94                     l1445:
 11876                           
 11877                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11878  004F94  52E5               	movf	postdec1,f,c
 11879  004F96  52E5               	movf	postdec1,f,c
 11880  004F98  52E5               	movf	postdec1,f,c
 11881  004F9A  0012               	return		;funcret
 11882  004F9C                     __end_of_ringBufS_put_dma:
 11883                           	opt callstack 0
 11884                           
 11885 ;; *************** function _SYSTEM_Initialize *****************
 11886 ;; Defined at:
 11887 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;		None
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;		None
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  1  [STACK] void 
 11894 ;; Registers used:
 11895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 3F/3C
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11905 ;;Total ram usage:        0 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:    5
 11908 ;; This function calls:
 11909 ;;		_ADCC_Initialize
 11910 ;;		_CLC1_Initialize
 11911 ;;		_CLKREF_Initialize
 11912 ;;		_DMA1_Initialize
 11913 ;;		_DSM_Initialize
 11914 ;;		_EXT_INT_Initialize
 11915 ;;		_INTERRUPT_Initialize
 11916 ;;		_NCO1_Initialize
 11917 ;;		_OSCILLATOR_Initialize
 11918 ;;		_PIN_MANAGER_Initialize
 11919 ;;		_PMD_Initialize
 11920 ;;		_SPI1_Initialize
 11921 ;;		_TMR5_Initialize
 11922 ;;		_TMR6_Initialize
 11923 ;;		_UART1_Initialize
 11924 ;;		_UART2_Initialize
 11925 ;; This function is called by:
 11926 ;;		_main
 11927 ;; This function uses a reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text50
 11931  0057CA                     __ptext50:
 11932                           	opt callstack 0
 11933  0057CA                     _SYSTEM_Initialize:
 11934                           	opt callstack 25
 11935                           
 11936                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 11937                           
 11938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11939                           ;incstack = 0
 11940  0057CA  EC17  F02A         	call	_INTERRUPT_Initialize	;wreg free
 11941                           
 11942                           ; BSR set to: 57
 11943                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11944  0057CE  ECEC  F02F         	call	_PMD_Initialize	;wreg free
 11945                           
 11946                           ; BSR set to: 57
 11947                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11948  0057D2  EC1F  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 11949                           
 11950                           ; BSR set to: 58
 11951                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11952  0057D6  ECE1  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 11953                           
 11954                           ; BSR set to: 57
 11955                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 11956  0057DA  EC57  F02B         	call	_ADCC_Initialize	;wreg free
 11957                           
 11958                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 11959  0057DE  EC92  F02F         	call	_NCO1_Initialize	;wreg free
 11960                           
 11961                           ; BSR set to: 63
 11962                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 11963  0057E2  EC31  F02B         	call	_EXT_INT_Initialize	;wreg free
 11964                           
 11965                           ; BSR set to: 57
 11966                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 11967  0057E6  EC01  F02E         	call	_TMR6_Initialize	;wreg free
 11968                           
 11969                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 11970  0057EA  EC00  F02F         	call	_CLC1_Initialize	;wreg free
 11971                           
 11972                           ; BSR set to: 60
 11973                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 11974  0057EE  EC9F  F02B         	call	_TMR5_Initialize	;wreg free
 11975                           
 11976                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 11977  0057F2  ECA0  F02F         	call	_DSM_Initialize	;wreg free
 11978                           
 11979                           ; BSR set to: 60
 11980                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 11981  0057F6  EC4A  F02A         	call	_UART1_Initialize	;wreg free
 11982                           
 11983                           ; BSR set to: 57
 11984                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 11985  0057FA  ECAD  F02A         	call	_UART2_Initialize	;wreg free
 11986                           
 11987                           ; BSR set to: 57
 11988                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 11989  0057FE  ECD6  F02F         	call	_SPI1_Initialize	;wreg free
 11990                           
 11991                           ; BSR set to: 61
 11992                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 11993  005802  ECE2  F029         	call	_DMA1_Initialize	;wreg free
 11994                           
 11995                           ; BSR set to: 59
 11996                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 11997  005806  EC1D  F030         	call	_CLKREF_Initialize	;wreg free
 11998                           
 11999                           ; BSR set to: 60
 12000                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12001  00580A  0012               	return		;funcret
 12002  00580C                     __end_of_SYSTEM_Initialize:
 12003                           	opt callstack 0
 12004                           
 12005 ;; *************** function _UART2_Initialize *****************
 12006 ;; Defined at:
 12007 ;;		line 78 in file "mcc_generated_files/uart2.c"
 12008 ;; Parameters:    Size  Location     Type
 12009 ;;		None
 12010 ;; Auto vars:     Size  Location     Type
 12011 ;;		None
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  1  [STACK] void 
 12014 ;; Registers used:
 12015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12016 ;; Tracked objects:
 12017 ;;		On entry : 3F/39
 12018 ;;		On exit  : 3F/39
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12025 ;;Total ram usage:        0 bytes
 12026 ;; Hardware stack levels used:    1
 12027 ;; Hardware stack levels required when called:    4
 12028 ;; This function calls:
 12029 ;;		_UART2_SetRxInterruptHandler
 12030 ;;		_UART2_SetTxInterruptHandler
 12031 ;; This function is called by:
 12032 ;;		_SYSTEM_Initialize
 12033 ;; This function uses a reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text51
 12037  00555A                     __ptext51:
 12038                           	opt callstack 0
 12039  00555A                     _UART2_Initialize:
 12040                           	opt callstack 25
 12041                           
 12042                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12043                           
 12044                           ; BSR set to: 60
 12045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12046                           ;incstack = 0
 12047  00555A  0139               	movlb	57	; () banked
 12048  00555C  9596               	bcf	150,2,b	;volatile
 12049                           
 12050                           ; BSR set to: 57
 12051                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12052  00555E  0ECA               	movlw	low _UART2_Receive_ISR
 12053  005560  6EE6               	movwf	postinc1,c
 12054  005562  0E5E               	movlw	high _UART2_Receive_ISR
 12055  005564  6EE6               	movwf	postinc1,c
 12056  005566  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12057  005568  6EE6               	movwf	postinc1,c
 12058  00556A  ECC5  F02D         	call	_UART2_SetRxInterruptHandler	;wreg free
 12059                           
 12060                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12061  00556E  0139               	movlb	57	; () banked
 12062  005570  9796               	bcf	150,3,b	;volatile
 12063                           
 12064                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12065  005572  0E3E               	movlw	low _UART2_Transmit_ISR
 12066  005574  6EE6               	movwf	postinc1,c
 12067  005576  0E5A               	movlw	high _UART2_Transmit_ISR
 12068  005578  6EE6               	movwf	postinc1,c
 12069  00557A  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 12070  00557C  6EE6               	movwf	postinc1,c
 12071  00557E  ECB1  F02D         	call	_UART2_SetTxInterruptHandler	;wreg free
 12072                           
 12073                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 12074  005582  013D               	movlb	61	; () banked
 12075  005584  6BD4               	clrf	212,b	;volatile
 12076                           
 12077                           ; BSR set to: 61
 12078                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 12079  005586  6BD6               	clrf	214,b	;volatile
 12080                           
 12081                           ; BSR set to: 61
 12082                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 12083  005588  6BD8               	clrf	216,b	;volatile
 12084                           
 12085                           ; BSR set to: 61
 12086                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 12087  00558A  0EB0               	movlw	176
 12088  00558C  6FDA               	movwf	218,b	;volatile
 12089                           
 12090                           ; BSR set to: 61
 12091                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 12092  00558E  0E80               	movlw	128
 12093  005590  6FDB               	movwf	219,b	;volatile
 12094                           
 12095                           ; BSR set to: 61
 12096                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 12097  005592  6BDC               	clrf	220,b	;volatile
 12098                           
 12099                           ; BSR set to: 61
 12100                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 12101  005594  0E82               	movlw	130
 12102  005596  6FDD               	movwf	221,b	;volatile
 12103                           
 12104                           ; BSR set to: 61
 12105                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 12106  005598  0E06               	movlw	6
 12107  00559A  6FDE               	movwf	222,b	;volatile
 12108                           
 12109                           ; BSR set to: 61
 12110                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 12111  00559C  6BDF               	clrf	223,b	;volatile
 12112                           
 12113                           ; BSR set to: 61
 12114                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 12115  00559E  6BE0               	clrf	224,b	;volatile
 12116                           
 12117                           ; BSR set to: 61
 12118                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 12119  0055A0  6BE1               	clrf	225,b	;volatile
 12120                           
 12121                           ; BSR set to: 61
 12122                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 12123  0055A2  6BE2               	clrf	226,b	;volatile
 12124                           
 12125                           ; BSR set to: 61
 12126                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 12127  0055A4  6A36               	clrf	_uart2TxHead,c	;volatile
 12128                           
 12129                           ; BSR set to: 61
 12130                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 12131  0055A6  6A35               	clrf	_uart2TxTail,c	;volatile
 12132                           
 12133                           ; BSR set to: 61
 12134                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 12135  0055A8  0E40               	movlw	64
 12136  0055AA  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 12137                           
 12138                           ; BSR set to: 61
 12139                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 12140  0055AC  6A33               	clrf	_uart2RxHead,c	;volatile
 12141                           
 12142                           ; BSR set to: 61
 12143                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 12144  0055AE  6A32               	clrf	_uart2RxTail,c	;volatile
 12145                           
 12146                           ; BSR set to: 61
 12147                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 12148  0055B0  6A31               	clrf	_uart2RxCount,c	;volatile
 12149                           
 12150                           ; BSR set to: 61
 12151                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 12152  0055B2  0139               	movlb	57	; () banked
 12153  0055B4  8596               	bsf	150,2,b	;volatile
 12154                           
 12155                           ; BSR set to: 57
 12156                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12157  0055B6  0012               	return		;funcret
 12158  0055B8                     __end_of_UART2_Initialize:
 12159                           	opt callstack 0
 12160                           
 12161 ;; *************** function _UART2_SetTxInterruptHandler *****************
 12162 ;; Defined at:
 12163 ;;		line 252 in file "mcc_generated_files/uart2.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12166 ;;		 -> UART2_Transmit_ISR(1), 
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;		None
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  1  [STACK] void 
 12171 ;; Registers used:
 12172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12173 ;; Tracked objects:
 12174 ;;		On entry : 3F/39
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12182 ;;Total ram usage:        0 bytes
 12183 ;; Hardware stack levels used:    1
 12184 ;; Hardware stack levels required when called:    3
 12185 ;; This function calls:
 12186 ;;		Nothing
 12187 ;; This function is called by:
 12188 ;;		_UART2_Initialize
 12189 ;; This function uses a reentrant model
 12190 ;;
 12191                           
 12192                           	psect	text52
 12193  005B62                     __ptext52:
 12194                           	opt callstack 0
 12195  005B62                     _UART2_SetTxInterruptHandler:
 12196                           	opt callstack 25
 12197                           
 12198                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 12199                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12200                           
 12201                           ; BSR set to: 57
 12202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12203                           ;incstack = 0
 12204  005B62  50E1               	movf	fsr1l,w,c
 12205  005B64  0FFD               	addlw	-3
 12206  005B66  6ED9               	movwf	fsr2l,c
 12207  005B68  50E2               	movf	fsr1h,w,c
 12208  005B6A  6EDA               	movwf	fsr2h,c
 12209  005B6C  0EFF               	movlw	255
 12210  005B6E  22DA               	addwfc	fsr2h,f,c
 12211  005B70  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler
 12212  005B76  006F FF78  F015    	movff	postinc2,_UART2_TxInterruptHandler+1
 12213  005B7C  006F FF74  F016    	movff	postdec2,_UART2_TxInterruptHandler+2
 12214                           
 12215                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12216  005B82  52E5               	movf	postdec1,f,c
 12217  005B84  52E5               	movf	postdec1,f,c
 12218  005B86  52E5               	movf	postdec1,f,c
 12219  005B88  0012               	return		;funcret
 12220  005B8A                     __end_of_UART2_SetTxInterruptHandler:
 12221                           	opt callstack 0
 12222                           
 12223 ;; *************** function _UART2_SetRxInterruptHandler *****************
 12224 ;; Defined at:
 12225 ;;		line 248 in file "mcc_generated_files/uart2.c"
 12226 ;; Parameters:    Size  Location     Type
 12227 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12228 ;;		 -> UART2_Receive_ISR(1), 
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;		None
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1  [STACK] void 
 12233 ;; Registers used:
 12234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12235 ;; Tracked objects:
 12236 ;;		On entry : 3F/39
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12244 ;;Total ram usage:        0 bytes
 12245 ;; Hardware stack levels used:    1
 12246 ;; Hardware stack levels required when called:    3
 12247 ;; This function calls:
 12248 ;;		Nothing
 12249 ;; This function is called by:
 12250 ;;		_UART2_Initialize
 12251 ;; This function uses a reentrant model
 12252 ;;
 12253                           
 12254                           	psect	text53
 12255  005B8A                     __ptext53:
 12256                           	opt callstack 0
 12257  005B8A                     _UART2_SetRxInterruptHandler:
 12258                           	opt callstack 25
 12259                           
 12260                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 12261                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12262                           
 12263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12264                           ;incstack = 0
 12265  005B8A  50E1               	movf	fsr1l,w,c
 12266  005B8C  0FFD               	addlw	-3
 12267  005B8E  6ED9               	movwf	fsr2l,c
 12268  005B90  50E2               	movf	fsr1h,w,c
 12269  005B92  6EDA               	movwf	fsr2h,c
 12270  005B94  0EFF               	movlw	255
 12271  005B96  22DA               	addwfc	fsr2h,f,c
 12272  005B98  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler
 12273  005B9E  006F FF78  F018    	movff	postinc2,_UART2_RxInterruptHandler+1
 12274  005BA4  006F FF74  F019    	movff	postdec2,_UART2_RxInterruptHandler+2
 12275                           
 12276                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12277  005BAA  52E5               	movf	postdec1,f,c
 12278  005BAC  52E5               	movf	postdec1,f,c
 12279  005BAE  52E5               	movf	postdec1,f,c
 12280  005BB0  0012               	return		;funcret
 12281  005BB2                     __end_of_UART2_SetRxInterruptHandler:
 12282                           	opt callstack 0
 12283                           
 12284 ;; *************** function _UART1_Initialize *****************
 12285 ;; Defined at:
 12286 ;;		line 78 in file "mcc_generated_files/uart1.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1  [STACK] void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12295 ;; Tracked objects:
 12296 ;;		On entry : 3F/3C
 12297 ;;		On exit  : 3F/39
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12304 ;;Total ram usage:        0 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; Hardware stack levels required when called:    4
 12307 ;; This function calls:
 12308 ;;		_UART1_SetRxInterruptHandler
 12309 ;;		_UART1_SetTxInterruptHandler
 12310 ;; This function is called by:
 12311 ;;		_SYSTEM_Initialize
 12312 ;; This function uses a reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text54
 12316  005494                     __ptext54:
 12317                           	opt callstack 0
 12318  005494                     _UART1_Initialize:
 12319                           	opt callstack 25
 12320                           
 12321                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 12322                           
 12323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12324                           ;incstack = 0
 12325  005494  0139               	movlb	57	; () banked
 12326  005496  9793               	bcf	147,3,b	;volatile
 12327                           
 12328                           ; BSR set to: 57
 12329                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12330  005498  0EAA               	movlw	low _UART1_Receive_ISR
 12331  00549A  6EE6               	movwf	postinc1,c
 12332  00549C  0E5E               	movlw	high _UART1_Receive_ISR
 12333  00549E  6EE6               	movwf	postinc1,c
 12334  0054A0  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12335  0054A2  6EE6               	movwf	postinc1,c
 12336  0054A4  ECED  F02D         	call	_UART1_SetRxInterruptHandler	;wreg free
 12337                           
 12338                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 12339  0054A8  0139               	movlb	57	; () banked
 12340  0054AA  9993               	bcf	147,4,b	;volatile
 12341                           
 12342                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12343  0054AC  0E12               	movlw	low _UART1_Transmit_ISR
 12344  0054AE  6EE6               	movwf	postinc1,c
 12345  0054B0  0E5A               	movlw	high _UART1_Transmit_ISR
 12346  0054B2  6EE6               	movwf	postinc1,c
 12347  0054B4  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12348  0054B6  6EE6               	movwf	postinc1,c
 12349  0054B8  ECD9  F02D         	call	_UART1_SetTxInterruptHandler	;wreg free
 12350                           
 12351                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12352  0054BC  013D               	movlb	61	; () banked
 12353  0054BE  6BEC               	clrf	236,b	;volatile
 12354                           
 12355                           ; BSR set to: 61
 12356                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12357  0054C0  6BED               	clrf	237,b	;volatile
 12358                           
 12359                           ; BSR set to: 61
 12360                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12361  0054C2  6BEE               	clrf	238,b	;volatile
 12362                           
 12363                           ; BSR set to: 61
 12364                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12365  0054C4  6BEF               	clrf	239,b	;volatile
 12366                           
 12367                           ; BSR set to: 61
 12368                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12369  0054C6  6BF0               	clrf	240,b	;volatile
 12370                           
 12371                           ; BSR set to: 61
 12372                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12373  0054C8  6BF1               	clrf	241,b	;volatile
 12374                           
 12375                           ; BSR set to: 61
 12376                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12377  0054CA  0EB0               	movlw	176
 12378  0054CC  6FF2               	movwf	242,b	;volatile
 12379                           
 12380                           ; BSR set to: 61
 12381                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12382  0054CE  0E80               	movlw	128
 12383  0054D0  6FF3               	movwf	243,b	;volatile
 12384                           
 12385                           ; BSR set to: 61
 12386                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12387  0054D2  6BF4               	clrf	244,b	;volatile
 12388                           
 12389                           ; BSR set to: 61
 12390                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12391  0054D4  0E82               	movlw	130
 12392  0054D6  6FF5               	movwf	245,b	;volatile
 12393                           
 12394                           ; BSR set to: 61
 12395                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12396  0054D8  0E06               	movlw	6
 12397  0054DA  6FF6               	movwf	246,b	;volatile
 12398                           
 12399                           ; BSR set to: 61
 12400                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12401  0054DC  6BF7               	clrf	247,b	;volatile
 12402                           
 12403                           ; BSR set to: 61
 12404                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12405  0054DE  6BF8               	clrf	248,b	;volatile
 12406                           
 12407                           ; BSR set to: 61
 12408                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12409  0054E0  6BF9               	clrf	249,b	;volatile
 12410                           
 12411                           ; BSR set to: 61
 12412                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12413  0054E2  6BFA               	clrf	250,b	;volatile
 12414                           
 12415                           ; BSR set to: 61
 12416                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12417  0054E4  6A3C               	clrf	_uart1TxHead,c	;volatile
 12418                           
 12419                           ; BSR set to: 61
 12420                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12421  0054E6  6A3B               	clrf	_uart1TxTail,c	;volatile
 12422                           
 12423                           ; BSR set to: 61
 12424                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12425  0054E8  0E40               	movlw	64
 12426  0054EA  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 12427                           
 12428                           ; BSR set to: 61
 12429                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12430  0054EC  6A39               	clrf	_uart1RxHead,c	;volatile
 12431                           
 12432                           ; BSR set to: 61
 12433                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12434  0054EE  6A38               	clrf	_uart1RxTail,c	;volatile
 12435                           
 12436                           ; BSR set to: 61
 12437                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12438  0054F0  6A37               	clrf	_uart1RxCount,c	;volatile
 12439                           
 12440                           ; BSR set to: 61
 12441                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12442  0054F2  0139               	movlb	57	; () banked
 12443  0054F4  8793               	bsf	147,3,b	;volatile
 12444                           
 12445                           ; BSR set to: 57
 12446                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12447  0054F6  0012               	return		;funcret
 12448  0054F8                     __end_of_UART1_Initialize:
 12449                           	opt callstack 0
 12450                           
 12451 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12452 ;; Defined at:
 12453 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12456 ;;		 -> UART1_Transmit_ISR(1), 
 12457 ;; Auto vars:     Size  Location     Type
 12458 ;;		None
 12459 ;; Return value:  Size  Location     Type
 12460 ;;                  1  [STACK] void 
 12461 ;; Registers used:
 12462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12463 ;; Tracked objects:
 12464 ;;		On entry : 3F/39
 12465 ;;		On exit  : 0/0
 12466 ;;		Unchanged: 0/0
 12467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12472 ;;Total ram usage:        0 bytes
 12473 ;; Hardware stack levels used:    1
 12474 ;; Hardware stack levels required when called:    3
 12475 ;; This function calls:
 12476 ;;		Nothing
 12477 ;; This function is called by:
 12478 ;;		_UART1_Initialize
 12479 ;; This function uses a reentrant model
 12480 ;;
 12481                           
 12482                           	psect	text55
 12483  005BB2                     __ptext55:
 12484                           	opt callstack 0
 12485  005BB2                     _UART1_SetTxInterruptHandler:
 12486                           	opt callstack 25
 12487                           
 12488                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12489                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12490                           
 12491                           ; BSR set to: 57
 12492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12493                           ;incstack = 0
 12494  005BB2  50E1               	movf	fsr1l,w,c
 12495  005BB4  0FFD               	addlw	-3
 12496  005BB6  6ED9               	movwf	fsr2l,c
 12497  005BB8  50E2               	movf	fsr1h,w,c
 12498  005BBA  6EDA               	movwf	fsr2h,c
 12499  005BBC  0EFF               	movlw	255
 12500  005BBE  22DA               	addwfc	fsr2h,f,c
 12501  005BC0  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler
 12502  005BC6  006F FF78  F00F    	movff	postinc2,_UART1_TxInterruptHandler+1
 12503  005BCC  006F FF74  F010    	movff	postdec2,_UART1_TxInterruptHandler+2
 12504                           
 12505                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12506  005BD2  52E5               	movf	postdec1,f,c
 12507  005BD4  52E5               	movf	postdec1,f,c
 12508  005BD6  52E5               	movf	postdec1,f,c
 12509  005BD8  0012               	return		;funcret
 12510  005BDA                     __end_of_UART1_SetTxInterruptHandler:
 12511                           	opt callstack 0
 12512                           
 12513 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12514 ;; Defined at:
 12515 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12518 ;;		 -> UART1_Receive_ISR(1), 
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;		None
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1  [STACK] void 
 12523 ;; Registers used:
 12524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12525 ;; Tracked objects:
 12526 ;;		On entry : 3F/39
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12534 ;;Total ram usage:        0 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    3
 12537 ;; This function calls:
 12538 ;;		Nothing
 12539 ;; This function is called by:
 12540 ;;		_UART1_Initialize
 12541 ;; This function uses a reentrant model
 12542 ;;
 12543                           
 12544                           	psect	text56
 12545  005BDA                     __ptext56:
 12546                           	opt callstack 0
 12547  005BDA                     _UART1_SetRxInterruptHandler:
 12548                           	opt callstack 25
 12549                           
 12550                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12551                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12552                           
 12553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12554                           ;incstack = 0
 12555  005BDA  50E1               	movf	fsr1l,w,c
 12556  005BDC  0FFD               	addlw	-3
 12557  005BDE  6ED9               	movwf	fsr2l,c
 12558  005BE0  50E2               	movf	fsr1h,w,c
 12559  005BE2  6EDA               	movwf	fsr2h,c
 12560  005BE4  0EFF               	movlw	255
 12561  005BE6  22DA               	addwfc	fsr2h,f,c
 12562  005BE8  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler
 12563  005BEE  006F FF78  F012    	movff	postinc2,_UART1_RxInterruptHandler+1
 12564  005BF4  006F FF74  F013    	movff	postdec2,_UART1_RxInterruptHandler+2
 12565                           
 12566                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12567  005BFA  52E5               	movf	postdec1,f,c
 12568  005BFC  52E5               	movf	postdec1,f,c
 12569  005BFE  52E5               	movf	postdec1,f,c
 12570  005C00  0012               	return		;funcret
 12571  005C02                     __end_of_UART1_SetRxInterruptHandler:
 12572                           	opt callstack 0
 12573                           
 12574 ;; *************** function _TMR6_Initialize *****************
 12575 ;; Defined at:
 12576 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;		None
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1  [STACK] void 
 12583 ;; Registers used:
 12584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12585 ;; Tracked objects:
 12586 ;;		On entry : 3F/39
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12594 ;;Total ram usage:        0 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:    4
 12597 ;; This function calls:
 12598 ;;		_TMR6_SetInterruptHandler
 12599 ;; This function is called by:
 12600 ;;		_SYSTEM_Initialize
 12601 ;; This function uses a reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text57
 12605  005C02                     __ptext57:
 12606                           	opt callstack 0
 12607  005C02                     _TMR6_Initialize:
 12608                           	opt callstack 25
 12609                           
 12610                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12611                           
 12612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12613                           ;incstack = 0
 12614  005C02  0E01               	movlw	1
 12615  005C04  6E96               	movwf	16278,c	;volatile
 12616                           
 12617                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12618  005C06  6A95               	clrf	16277,c	;volatile
 12619                           
 12620                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12621  005C08  6A97               	clrf	16279,c	;volatile
 12622                           
 12623                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12624  005C0A  0E03               	movlw	3
 12625  005C0C  6E93               	movwf	16275,c	;volatile
 12626                           
 12627                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12628  005C0E  6A92               	clrf	16274,c	;volatile
 12629                           
 12630                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12631  005C10  0139               	movlb	57	; () banked
 12632  005C12  91A9               	bcf	169,0,b	;volatile
 12633                           
 12634                           ; BSR set to: 57
 12635                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12636  005C14  8199               	bsf	153,0,b	;volatile
 12637                           
 12638                           ; BSR set to: 57
 12639                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12640  005C16  0E84               	movlw	low _TMR6_DefaultInterruptHandler
 12641  005C18  6EE6               	movwf	postinc1,c
 12642  005C1A  0E57               	movlw	high _TMR6_DefaultInterruptHandler
 12643  005C1C  6EE6               	movwf	postinc1,c
 12644  005C1E  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12645  005C20  6EE6               	movwf	postinc1,c
 12646  005C22  EC15  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12647                           
 12648                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12649  005C26  6894               	setf	16276,c	;volatile
 12650                           
 12651                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12652  005C28  0012               	return		;funcret
 12653  005C2A                     __end_of_TMR6_Initialize:
 12654                           	opt callstack 0
 12655                           
 12656 ;; *************** function _TMR6_SetInterruptHandler *****************
 12657 ;; Defined at:
 12658 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12661 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12662 ;; Auto vars:     Size  Location     Type
 12663 ;;		None
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  1  [STACK] void 
 12666 ;; Registers used:
 12667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12668 ;; Tracked objects:
 12669 ;;		On entry : 3F/39
 12670 ;;		On exit  : 0/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12677 ;;Total ram usage:        0 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:    3
 12680 ;; This function calls:
 12681 ;;		Nothing
 12682 ;; This function is called by:
 12683 ;;		_TMR6_Initialize
 12684 ;; This function uses a reentrant model
 12685 ;;
 12686                           
 12687                           	psect	text58
 12688  005C2A                     __ptext58:
 12689                           	opt callstack 0
 12690  005C2A                     _TMR6_SetInterruptHandler:
 12691                           	opt callstack 25
 12692                           
 12693                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 12694                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12695                           
 12696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12697                           ;incstack = 0
 12698  005C2A  50E1               	movf	fsr1l,w,c
 12699  005C2C  0FFD               	addlw	-3
 12700  005C2E  6ED9               	movwf	fsr2l,c
 12701  005C30  50E2               	movf	fsr1h,w,c
 12702  005C32  6EDA               	movwf	fsr2h,c
 12703  005C34  0EFF               	movlw	255
 12704  005C36  22DA               	addwfc	fsr2h,f,c
 12705  005C38  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler
 12706  005C3E  006F FF78  F009    	movff	postinc2,_TMR6_InterruptHandler+1
 12707  005C44  006F FF74  F00A    	movff	postdec2,_TMR6_InterruptHandler+2
 12708                           
 12709                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12710  005C4A  52E5               	movf	postdec1,f,c
 12711  005C4C  52E5               	movf	postdec1,f,c
 12712  005C4E  52E5               	movf	postdec1,f,c
 12713  005C50  0012               	return		;funcret
 12714  005C52                     __end_of_TMR6_SetInterruptHandler:
 12715                           	opt callstack 0
 12716                           
 12717 ;; *************** function _TMR5_Initialize *****************
 12718 ;; Defined at:
 12719 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;		None
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;		None
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  1  [STACK] void 
 12726 ;; Registers used:
 12727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12728 ;; Tracked objects:
 12729 ;;		On entry : 3F/3C
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;Total ram usage:        0 bytes
 12738 ;; Hardware stack levels used:    1
 12739 ;; Hardware stack levels required when called:    4
 12740 ;; This function calls:
 12741 ;;		_TMR5_SetInterruptHandler
 12742 ;; This function is called by:
 12743 ;;		_SYSTEM_Initialize
 12744 ;; This function uses a reentrant model
 12745 ;;
 12746                           
 12747                           	psect	text59
 12748  00573E                     __ptext59:
 12749                           	opt callstack 0
 12750  00573E                     _TMR5_Initialize:
 12751                           	opt callstack 25
 12752                           
 12753                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 12754                           
 12755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12756                           ;incstack = 0
 12757  00573E  6A9B               	clrf	16283,c	;volatile
 12758                           
 12759                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 12760  005740  6A9C               	clrf	16284,c	;volatile
 12761                           
 12762                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 12763  005742  0E01               	movlw	1
 12764  005744  6E9D               	movwf	16285,c	;volatile
 12765                           
 12766                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 12767  005746  0E63               	movlw	99
 12768  005748  6E99               	movwf	16281,c	;volatile
 12769                           
 12770                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 12771  00574A  0EC0               	movlw	192
 12772  00574C  6E98               	movwf	16280,c	;volatile
 12773                           
 12774                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 12775  00574E  5098               	movf	16280,w,c	;volatile
 12776  005750  006F FE64  F03D    	movff	16281,btemp	;volatile
 12777  005756  6A3E               	clrf	btemp+1,c
 12778  005758  0060  F0F4  F03E   	movff	btemp,btemp+1
 12779  00575E  6A3D               	clrf	btemp,c
 12780  005760  103D               	iorwf	btemp,w,c
 12781  005762  6E2B               	movwf	_timer5ReloadVal,c	;volatile
 12782  005764  503E               	movf	btemp+1,w,c
 12783  005766  6E2C               	movwf	_timer5ReloadVal+1,c	;volatile
 12784                           
 12785                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 12786  005768  0139               	movlb	57	; () banked
 12787  00576A  9DA8               	bcf	168,6,b	;volatile
 12788                           
 12789                           ; BSR set to: 57
 12790                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 12791  00576C  8D98               	bsf	152,6,b	;volatile
 12792                           
 12793                           ; BSR set to: 57
 12794                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 12795  00576E  0E92               	movlw	low _TMR5_DefaultInterruptHandler
 12796  005770  6EE6               	movwf	postinc1,c
 12797  005772  0E5F               	movlw	high _TMR5_DefaultInterruptHandler
 12798  005774  6EE6               	movwf	postinc1,c
 12799  005776  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12800  005778  6EE6               	movwf	postinc1,c
 12801  00577A  EC29  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12802                           
 12803                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 12804  00577E  0E31               	movlw	49
 12805  005780  6E9A               	movwf	16282,c	;volatile
 12806                           
 12807                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12808  005782  0012               	return		;funcret
 12809  005784                     __end_of_TMR5_Initialize:
 12810                           	opt callstack 0
 12811                           
 12812 ;; *************** function _TMR5_SetInterruptHandler *****************
 12813 ;; Defined at:
 12814 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12817 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;		None
 12820 ;; Return value:  Size  Location     Type
 12821 ;;                  1  [STACK] void 
 12822 ;; Registers used:
 12823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12824 ;; Tracked objects:
 12825 ;;		On entry : 3F/39
 12826 ;;		On exit  : 0/0
 12827 ;;		Unchanged: 0/0
 12828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12833 ;;Total ram usage:        0 bytes
 12834 ;; Hardware stack levels used:    1
 12835 ;; Hardware stack levels required when called:    3
 12836 ;; This function calls:
 12837 ;;		Nothing
 12838 ;; This function is called by:
 12839 ;;		_TMR5_Initialize
 12840 ;; This function uses a reentrant model
 12841 ;;
 12842                           
 12843                           	psect	text60
 12844  005C52                     __ptext60:
 12845                           	opt callstack 0
 12846  005C52                     _TMR5_SetInterruptHandler:
 12847                           	opt callstack 25
 12848                           
 12849                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 12850                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12851                           
 12852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12853                           ;incstack = 0
 12854  005C52  50E1               	movf	fsr1l,w,c
 12855  005C54  0FFD               	addlw	-3
 12856  005C56  6ED9               	movwf	fsr2l,c
 12857  005C58  50E2               	movf	fsr1h,w,c
 12858  005C5A  6EDA               	movwf	fsr2h,c
 12859  005C5C  0EFF               	movlw	255
 12860  005C5E  22DA               	addwfc	fsr2h,f,c
 12861  005C60  006F FF78  F090    	movff	postinc2,_TMR5_InterruptHandler
 12862  005C66  006F FF78  F091    	movff	postinc2,_TMR5_InterruptHandler+1
 12863  005C6C  006F FF74  F092    	movff	postdec2,_TMR5_InterruptHandler+2
 12864                           
 12865                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12866  005C72  52E5               	movf	postdec1,f,c
 12867  005C74  52E5               	movf	postdec1,f,c
 12868  005C76  52E5               	movf	postdec1,f,c
 12869  005C78  0012               	return		;funcret
 12870  005C7A                     __end_of_TMR5_SetInterruptHandler:
 12871                           	opt callstack 0
 12872                           
 12873 ;; *************** function _SPI1_Initialize *****************
 12874 ;; Defined at:
 12875 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12876 ;; Parameters:    Size  Location     Type
 12877 ;;		None
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;		None
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  1  [STACK] void 
 12882 ;; Registers used:
 12883 ;;		wreg, status,2
 12884 ;; Tracked objects:
 12885 ;;		On entry : 3F/39
 12886 ;;		On exit  : 3F/3D
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12893 ;;Total ram usage:        0 bytes
 12894 ;; Hardware stack levels used:    1
 12895 ;; Hardware stack levels required when called:    3
 12896 ;; This function calls:
 12897 ;;		Nothing
 12898 ;; This function is called by:
 12899 ;;		_SYSTEM_Initialize
 12900 ;; This function uses a reentrant model
 12901 ;;
 12902                           
 12903                           	psect	text61
 12904  005FAC                     __ptext61:
 12905                           	opt callstack 0
 12906  005FAC                     _SPI1_Initialize:
 12907                           	opt callstack 26
 12908                           
 12909                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 12910                           
 12911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12912                           ;incstack = 0
 12913  005FAC  0E40               	movlw	64
 12914  005FAE  013D               	movlb	61	; () banked
 12915  005FB0  6F15               	movwf	21,b	;volatile
 12916                           
 12917                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 12918  005FB2  0E03               	movlw	3
 12919  005FB4  6F16               	movwf	22,b	;volatile
 12920                           
 12921                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 12922  005FB6  0E4F               	movlw	79
 12923  005FB8  6F19               	movwf	25,b	;volatile
 12924                           
 12925                           ; BSR set to: 61
 12926                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 12927  005FBA  6B1C               	clrf	28,b	;volatile
 12928                           
 12929                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 12930  005FBC  0E83               	movlw	131
 12931  005FBE  6F14               	movwf	20,b	;volatile
 12932                           
 12933                           ; BSR set to: 61
 12934                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12935  005FC0  0012               	return		;funcret
 12936  005FC2                     __end_of_SPI1_Initialize:
 12937                           	opt callstack 0
 12938                           
 12939 ;; *************** function _PMD_Initialize *****************
 12940 ;; Defined at:
 12941 ;;		line 88 in file "mcc_generated_files/mcc.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;		None
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;		None
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1  [STACK] void 
 12948 ;; Registers used:
 12949 ;;		None
 12950 ;; Tracked objects:
 12951 ;;		On entry : 3F/39
 12952 ;;		On exit  : 3F/39
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12959 ;;Total ram usage:        0 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:    3
 12962 ;; This function calls:
 12963 ;;		Nothing
 12964 ;; This function is called by:
 12965 ;;		_SYSTEM_Initialize
 12966 ;; This function uses a reentrant model
 12967 ;;
 12968                           
 12969                           	psect	text62
 12970  005FD8                     __ptext62:
 12971                           	opt callstack 0
 12972  005FD8                     _PMD_Initialize:
 12973                           	opt callstack 26
 12974                           
 12975                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 12976                           
 12977                           ; BSR set to: 61
 12978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12979                           ;incstack = 0
 12980  005FD8  0139               	movlb	57	; () banked
 12981  005FDA  6BC0               	clrf	192,b	;volatile
 12982                           
 12983                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 12984  005FDC  6BC1               	clrf	193,b	;volatile
 12985                           
 12986                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 12987  005FDE  6BC2               	clrf	194,b	;volatile
 12988                           
 12989                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 12990  005FE0  6BC3               	clrf	195,b	;volatile
 12991                           
 12992                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 12993  005FE2  6BC4               	clrf	196,b	;volatile
 12994                           
 12995                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 12996  005FE4  6BC5               	clrf	197,b	;volatile
 12997                           
 12998                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 12999  005FE6  6BC6               	clrf	198,b	;volatile
 13000                           
 13001                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 13002  005FE8  6BC7               	clrf	199,b	;volatile
 13003                           
 13004                           ; BSR set to: 57
 13005                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13006  005FEA  0012               	return		;funcret
 13007  005FEC                     __end_of_PMD_Initialize:
 13008                           	opt callstack 0
 13009                           
 13010 ;; *************** function _PIN_MANAGER_Initialize *****************
 13011 ;; Defined at:
 13012 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;		None
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;		None
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1  [STACK] void 
 13019 ;; Registers used:
 13020 ;;		wreg, status,2
 13021 ;; Tracked objects:
 13022 ;;		On entry : 3F/39
 13023 ;;		On exit  : 3F/3A
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13030 ;;Total ram usage:        0 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    3
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_SYSTEM_Initialize
 13037 ;; This function uses a reentrant model
 13038 ;;
 13039                           
 13040                           	psect	text63
 13041  00503E                     __ptext63:
 13042                           	opt callstack 0
 13043  00503E                     _PIN_MANAGER_Initialize:
 13044                           	opt callstack 26
 13045                           
 13046                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13047                           
 13048                           ; BSR set to: 57
 13049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13050                           ;incstack = 0
 13051  00503E  0E07               	movlw	7
 13052  005040  6EBE               	movwf	16318,c	;volatile
 13053                           
 13054                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13055  005042  6ABD               	clrf	16317,c	;volatile
 13056                           
 13057                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13058  005044  6ABA               	clrf	16314,c	;volatile
 13059                           
 13060                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13061  005046  6ABF               	clrf	16319,c	;volatile
 13062                           
 13063                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13064  005048  6ABB               	clrf	16315,c	;volatile
 13065                           
 13066                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 13067  00504A  0E06               	movlw	6
 13068  00504C  6EBC               	movwf	16316,c	;volatile
 13069                           
 13070                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 13071  00504E  6AC6               	clrf	16326,c	;volatile
 13072                           
 13073                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 13074  005050  68C7               	setf	16327,c	;volatile
 13075                           
 13076                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 13077  005052  0E8F               	movlw	143
 13078  005054  6EC2               	movwf	16322,c	;volatile
 13079                           
 13080                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 13081  005056  0EBF               	movlw	191
 13082  005058  6EC3               	movwf	16323,c	;volatile
 13083                           
 13084                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 13085  00505A  0E91               	movlw	145
 13086  00505C  6EC4               	movwf	16324,c	;volatile
 13087                           
 13088                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 13089  00505E  0EFC               	movlw	252
 13090  005060  6EC5               	movwf	16325,c	;volatile
 13091                           
 13092                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 13093  005062  0EF0               	movlw	240
 13094  005064  013A               	movlb	58	; () banked
 13095  005066  6F70               	movwf	112,b	;volatile
 13096                           
 13097                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 13098  005068  0E01               	movlw	1
 13099  00506A  6F60               	movwf	96,b	;volatile
 13100                           
 13101                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 13102  00506C  0E38               	movlw	56
 13103  00506E  6F50               	movwf	80,b	;volatile
 13104                           
 13105                           ; BSR set to: 58
 13106                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 13107  005070  6B80               	clrf	128,b	;volatile
 13108                           
 13109                           ; BSR set to: 58
 13110                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 13111  005072  6990               	setf	144,b	;volatile
 13112                           
 13113                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 13114  005074  0E8F               	movlw	143
 13115  005076  6F40               	movwf	64,b	;volatile
 13116                           
 13117                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 13118  005078  0E0C               	movlw	12
 13119  00507A  6F71               	movwf	113,b	;volatile
 13120                           
 13121                           ; BSR set to: 58
 13122                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 13123  00507C  6B91               	clrf	145,b	;volatile
 13124                           
 13125                           ; BSR set to: 58
 13126                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 13127  00507E  6B81               	clrf	129,b	;volatile
 13128                           
 13129                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 13130  005080  0E87               	movlw	135
 13131  005082  6F51               	movwf	81,b	;volatile
 13132                           
 13133                           ; BSR set to: 58
 13134                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 13135  005084  6B41               	clrf	65,b	;volatile
 13136                           
 13137                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 13138  005086  0E90               	movlw	144
 13139  005088  6F61               	movwf	97,b	;volatile
 13140                           
 13141                           ; BSR set to: 58
 13142                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 13143  00508A  6B82               	clrf	130,b	;volatile
 13144                           
 13145                           ; BSR set to: 58
 13146                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 13147  00508C  6B92               	clrf	146,b	;volatile
 13148                           
 13149                           ; BSR set to: 58
 13150                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 13151  00508E  6B42               	clrf	66,b	;volatile
 13152                           
 13153                           ; BSR set to: 58
 13154                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 13155  005090  6B52               	clrf	82,b	;volatile
 13156                           
 13157                           ; BSR set to: 58
 13158                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 13159  005092  6B62               	clrf	98,b	;volatile
 13160                           
 13161                           ; BSR set to: 58
 13162                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 13163  005094  6B72               	clrf	114,b	;volatile
 13164                           
 13165                           ; BSR set to: 58
 13166                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 13167  005096  6943               	setf	67,b	;volatile
 13168                           
 13169                           ; BSR set to: 58
 13170                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 13171  005098  6953               	setf	83,b	;volatile
 13172                           
 13173                           ; BSR set to: 58
 13174                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 13175  00509A  6963               	setf	99,b	;volatile
 13176                           
 13177                           ; BSR set to: 58
 13178                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 13179  00509C  6973               	setf	115,b	;volatile
 13180                           
 13181                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 13182  00509E  0E07               	movlw	7
 13183  0050A0  6F83               	movwf	131,b	;volatile
 13184                           
 13185                           ; BSR set to: 58
 13186                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 13187  0050A2  6993               	setf	147,b	;volatile
 13188                           
 13189                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 13190  0050A4  0E0F               	movlw	15
 13191  0050A6  6FE8               	movwf	232,b	;volatile
 13192                           
 13193                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 13194  0050A8  0E16               	movlw	22
 13195  0050AA  6F0E               	movwf	14,b	;volatile
 13196                           
 13197                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 13198  0050AC  0E1E               	movlw	30
 13199  0050AE  6F13               	movwf	19,b	;volatile
 13200                           
 13201                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 13202  0050B0  0E08               	movlw	8
 13203  0050B2  6FC0               	movwf	192,b	;volatile
 13204                           
 13205                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 13206  0050B4  0E0A               	movlw	10
 13207  0050B6  6FC2               	movwf	194,b	;volatile
 13208                           
 13209                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 13210  0050B8  0E09               	movlw	9
 13211  0050BA  6FC1               	movwf	193,b	;volatile
 13212                           
 13213                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 13214  0050BC  0E17               	movlw	23
 13215  0050BE  6FE5               	movwf	229,b	;volatile
 13216                           
 13217                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 13218  0050C0  0E13               	movlw	19
 13219  0050C2  6FDE               	movwf	222,b	;volatile
 13220                           
 13221                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 13222  0050C4  0E01               	movlw	1
 13223  0050C6  6F04               	movwf	4,b	;volatile
 13224                           
 13225                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 13226  0050C8  0E26               	movlw	38
 13227  0050CA  6F05               	movwf	5,b	;volatile
 13228                           
 13229                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 13230  0050CC  0E28               	movlw	40
 13231  0050CE  6F06               	movwf	6,b	;volatile
 13232                           
 13233                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 13234  0050D0  0E1F               	movlw	31
 13235  0050D2  6F15               	movwf	21,b	;volatile
 13236                           
 13237                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 13238  0050D4  0E13               	movlw	19
 13239  0050D6  6F16               	movwf	22,b	;volatile
 13240                           
 13241                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 13242  0050D8  0E14               	movlw	20
 13243  0050DA  6FDF               	movwf	223,b	;volatile
 13244                           
 13245                           ; BSR set to: 58
 13246                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 13247  0050DC  0012               	return		;funcret
 13248  0050DE                     __end_of_PIN_MANAGER_Initialize:
 13249                           	opt callstack 0
 13250                           
 13251 ;; *************** function _OSCILLATOR_Initialize *****************
 13252 ;; Defined at:
 13253 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;		None
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;		None
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  1  [STACK] void 
 13260 ;; Registers used:
 13261 ;;		wreg, status,2
 13262 ;; Tracked objects:
 13263 ;;		On entry : 3F/3A
 13264 ;;		On exit  : 3F/39
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13271 ;;Total ram usage:        0 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; Hardware stack levels required when called:    3
 13274 ;; This function calls:
 13275 ;;		Nothing
 13276 ;; This function is called by:
 13277 ;;		_SYSTEM_Initialize
 13278 ;; This function uses a reentrant model
 13279 ;;
 13280                           
 13281                           	psect	text64
 13282  005FC2                     __ptext64:
 13283                           	opt callstack 0
 13284  005FC2                     _OSCILLATOR_Initialize:
 13285                           	opt callstack 26
 13286                           
 13287                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 13288                           
 13289                           ; BSR set to: 58
 13290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13291                           ;incstack = 0
 13292  005FC2  0E20               	movlw	32
 13293  005FC4  0139               	movlb	57	; () banked
 13294  005FC6  6FD9               	movwf	217,b	;volatile
 13295                           
 13296                           ; BSR set to: 57
 13297                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 13298  005FC8  6BDB               	clrf	219,b	;volatile
 13299                           
 13300                           ; BSR set to: 57
 13301                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 13302  005FCA  6BDD               	clrf	221,b	;volatile
 13303                           
 13304                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 13305  005FCC  0E02               	movlw	2
 13306  005FCE  6FDF               	movwf	223,b	;volatile
 13307                           
 13308                           ; BSR set to: 57
 13309                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 13310  005FD0  6BDE               	clrf	222,b	;volatile
 13311  005FD2                     l194:
 13312                           
 13313                           ; BSR set to: 57
 13314                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 13315  005FD2  B1DC               	btfsc	220,0,b	;volatile
 13316  005FD4  0012               	return	
 13317  005FD6  D7FD               	goto	l194
 13318  005FD8                     __end_of_OSCILLATOR_Initialize:
 13319                           	opt callstack 0
 13320                           
 13321 ;; *************** function _NCO1_Initialize *****************
 13322 ;; Defined at:
 13323 ;;		line 58 in file "mcc_generated_files/nco1.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;		None
 13326 ;; Auto vars:     Size  Location     Type
 13327 ;;		None
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1  [STACK] void 
 13330 ;; Registers used:
 13331 ;;		wreg, status,2
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/39
 13334 ;;		On exit  : 3F/3F
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13341 ;;Total ram usage:        0 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:    3
 13344 ;; This function calls:
 13345 ;;		Nothing
 13346 ;; This function is called by:
 13347 ;;		_SYSTEM_Initialize
 13348 ;; This function uses a reentrant model
 13349 ;;
 13350                           
 13351                           	psect	text65
 13352  005F24                     __ptext65:
 13353                           	opt callstack 0
 13354  005F24                     _NCO1_Initialize:
 13355                           	opt callstack 26
 13356                           
 13357                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13358                           
 13359                           ; BSR set to: 57
 13360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13361                           ;incstack = 0
 13362  005F24  013F               	movlb	63	; () banked
 13363  005F26  6B3E               	clrf	62,b	;volatile
 13364                           
 13365                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13366  005F28  6B3F               	clrf	63,b	;volatile
 13367                           
 13368                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13369  005F2A  6B3A               	clrf	58,b	;volatile
 13370                           
 13371                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13372  005F2C  6B39               	clrf	57,b	;volatile
 13373                           
 13374                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13375  005F2E  6B38               	clrf	56,b	;volatile
 13376                           
 13377                           ; BSR set to: 63
 13378                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13379  005F30  0E06               	movlw	6
 13380  005F32  6F3D               	movwf	61,b	;volatile
 13381                           
 13382                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13383  005F34  0EC7               	movlw	199
 13384  005F36  6F3C               	movwf	60,b	;volatile
 13385                           
 13386                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13387  005F38  0EAE               	movlw	174
 13388  005F3A  6F3B               	movwf	59,b	;volatile
 13389                           
 13390                           ; BSR set to: 63
 13391                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13392  005F3C  8F3E               	bsf	62,7,b	;volatile
 13393                           
 13394                           ; BSR set to: 63
 13395                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13396  005F3E  0012               	return		;funcret
 13397  005F40                     __end_of_NCO1_Initialize:
 13398                           	opt callstack 0
 13399                           
 13400 ;; *************** function _INTERRUPT_Initialize *****************
 13401 ;; Defined at:
 13402 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;		None
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;  state           1  [STACK] _Bool 
 13407 ;; Return value:  Size  Location     Type
 13408 ;;                  1  [STACK] void 
 13409 ;; Registers used:
 13410 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13411 ;; Tracked objects:
 13412 ;;		On entry : 0/0
 13413 ;;		On exit  : 3F/39
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13420 ;;Total ram usage:        0 bytes
 13421 ;; Hardware stack levels used:    1
 13422 ;; Hardware stack levels required when called:    3
 13423 ;; This function calls:
 13424 ;;		Nothing
 13425 ;; This function is called by:
 13426 ;;		_SYSTEM_Initialize
 13427 ;; This function uses a reentrant model
 13428 ;;
 13429                           
 13430                           	psect	text66
 13431  00542E                     __ptext66:
 13432                           	opt callstack 0
 13433  00542E                     _INTERRUPT_Initialize:
 13434                           	opt callstack 0
 13435                           
 13436                           ; BSR set to: 63
 13437                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13438  00542E  52E6               	movf	postinc1,f,c
 13439                           
 13440                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13441                           
 13442                           ;incstack = 0
 13443  005430  8AD2               	bsf	16338,5,c	;volatile
 13444                           
 13445                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13446  005432  AED2               	btfss	16338,7,c	;volatile
 13447  005434  D003               	goto	u940
 13448  005436  6A48               	clrf	btemp+11,c
 13449  005438  2A48               	incf	btemp+11,f,c
 13450  00543A  D001               	goto	u958
 13451  00543C                     u940:
 13452  00543C  6A48               	clrf	btemp+11,c
 13453  00543E                     u958:
 13454                           
 13455                           ;stkvar	_state @ sp[(-1)+0]
 13456  00543E  0EFF               	movlw	-1
 13457  005440  0060  F123  FFE3   	movff	btemp+11,plusw1
 13458                           
 13459                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13460  005446  9ED2               	bcf	16338,7,c	;volatile
 13461                           
 13462                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13463  005448  0E55               	movlw	85
 13464  00544A  6ED4               	movwf	16340,c	;volatile
 13465                           
 13466                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13467  00544C  0EAA               	movlw	170
 13468  00544E  6ED4               	movwf	16340,c	;volatile
 13469                           
 13470                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13471  005450  90D4               	bcf	16340,0,c	;volatile
 13472                           
 13473                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13474  005452  0138               	movlb	56	; () banked
 13475  005454  6B9F               	clrf	159,b	;volatile
 13476                           
 13477                           ; BSR set to: 56
 13478                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13479  005456  6B9E               	clrf	158,b	;volatile
 13480                           
 13481                           ; BSR set to: 56
 13482                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13483  005458  0E08               	movlw	8
 13484  00545A  6F9D               	movwf	157,b	;volatile
 13485                           
 13486                           ; BSR set to: 56
 13487                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13488  00545C  0E55               	movlw	85
 13489  00545E  6ED4               	movwf	16340,c	;volatile
 13490                           
 13491                           ; BSR set to: 56
 13492                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13493  005460  0EAA               	movlw	170
 13494  005462  6ED4               	movwf	16340,c	;volatile
 13495                           
 13496                           ; BSR set to: 56
 13497                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13498  005464  80D4               	bsf	16340,0,c	;volatile
 13499                           
 13500                           ; BSR set to: 56
 13501                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13502                           ;stkvar	_state @ sp[(-1)+0]
 13503  005466  0EFF               	movlw	-1
 13504  005468  B0E3               	btfsc	plusw1,0,c
 13505  00546A  D002               	bra	u965
 13506  00546C  9ED2               	bcf	16338,7,c	;volatile
 13507  00546E  D001               	bra	u966
 13508  005470                     u965:
 13509  005470  8ED2               	bsf	16338,7,c	;volatile
 13510  005472                     u966:
 13511                           
 13512                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13513  005472  0139               	movlb	57	; () banked
 13514  005474  8782               	bsf	130,3,b	;volatile
 13515                           
 13516                           ; BSR set to: 57
 13517                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13518  005476  8382               	bsf	130,1,b	;volatile
 13519                           
 13520                           ; BSR set to: 57
 13521                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13522  005478  8182               	bsf	130,0,b	;volatile
 13523                           
 13524                           ; BSR set to: 57
 13525                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13526  00547A  8582               	bsf	130,2,b	;volatile
 13527                           
 13528                           ; BSR set to: 57
 13529                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13530  00547C  8786               	bsf	134,3,b	;volatile
 13531                           
 13532                           ; BSR set to: 57
 13533                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13534  00547E  8586               	bsf	134,2,b	;volatile
 13535                           
 13536                           ; BSR set to: 57
 13537                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13538  005480  8983               	bsf	131,4,b	;volatile
 13539                           
 13540                           ; BSR set to: 57
 13541                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13542  005482  8783               	bsf	131,3,b	;volatile
 13543                           
 13544                           ; BSR set to: 57
 13545                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13546  005484  8181               	bsf	129,0,b	;volatile
 13547                           
 13548                           ; BSR set to: 57
 13549                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13550  005486  8185               	bsf	133,0,b	;volatile
 13551                           
 13552                           ; BSR set to: 57
 13553                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13554  005488  8B87               	bsf	135,5,b	;volatile
 13555                           
 13556                           ; BSR set to: 57
 13557                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13558  00548A  8189               	bsf	137,0,b	;volatile
 13559                           
 13560                           ; BSR set to: 57
 13561                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13562  00548C  8D88               	bsf	136,6,b	;volatile
 13563                           
 13564                           ; BSR set to: 57
 13565                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13566  00548E  8581               	bsf	129,2,b	;volatile
 13567                           
 13568                           ; BSR set to: 57
 13569                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13570  005490  52E5               	movf	postdec1,f,c
 13571  005492  0012               	return		;funcret
 13572  005494                     __end_of_INTERRUPT_Initialize:
 13573                           	opt callstack 0
 13574                           
 13575 ;; *************** function _EXT_INT_Initialize *****************
 13576 ;; Defined at:
 13577 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 13578 ;; Parameters:    Size  Location     Type
 13579 ;;		None
 13580 ;; Auto vars:     Size  Location     Type
 13581 ;;		None
 13582 ;; Return value:  Size  Location     Type
 13583 ;;                  1  [STACK] void 
 13584 ;; Registers used:
 13585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13586 ;; Tracked objects:
 13587 ;;		On entry : 3F/3F
 13588 ;;		On exit  : 3F/39
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13595 ;;Total ram usage:        0 bytes
 13596 ;; Hardware stack levels used:    1
 13597 ;; Hardware stack levels required when called:    4
 13598 ;; This function calls:
 13599 ;;		_INT0_SetInterruptHandler
 13600 ;;		_INT1_SetInterruptHandler
 13601 ;;		_INT2_SetInterruptHandler
 13602 ;; This function is called by:
 13603 ;;		_SYSTEM_Initialize
 13604 ;; This function uses a reentrant model
 13605 ;;
 13606                           
 13607                           	psect	text67
 13608  005662                     __ptext67:
 13609                           	opt callstack 0
 13610  005662                     _EXT_INT_Initialize:
 13611                           	opt callstack 25
 13612                           
 13613                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 13614                           
 13615                           ; BSR set to: 57
 13616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13617                           ;incstack = 0
 13618  005662  0139               	movlb	57	; () banked
 13619  005664  91A1               	bcf	161,0,b	;volatile
 13620                           
 13621                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 13622  005666  90D2               	bcf	16338,0,c	;volatile
 13623                           
 13624                           ; BSR set to: 57
 13625                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 13626  005668  0E9A               	movlw	low _INT0_DefaultInterruptHandler
 13627  00566A  6EE6               	movwf	postinc1,c
 13628  00566C  0E60               	movlw	high _INT0_DefaultInterruptHandler
 13629  00566E  6EE6               	movwf	postinc1,c
 13630  005670  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13631  005672  6EE6               	movwf	postinc1,c
 13632  005674  EC65  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 13633                           
 13634                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 13635  005678  0139               	movlb	57	; () banked
 13636  00567A  8191               	bsf	145,0,b	;volatile
 13637                           
 13638                           ; BSR set to: 57
 13639                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 13640  00567C  91A5               	bcf	165,0,b	;volatile
 13641                           
 13642                           ; BSR set to: 57
 13643                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 13644  00567E  92D2               	bcf	16338,1,c	;volatile
 13645                           
 13646                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 13647  005680  0E9C               	movlw	low _INT1_DefaultInterruptHandler
 13648  005682  6EE6               	movwf	postinc1,c
 13649  005684  0E60               	movlw	high _INT1_DefaultInterruptHandler
 13650  005686  6EE6               	movwf	postinc1,c
 13651  005688  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13652  00568A  6EE6               	movwf	postinc1,c
 13653  00568C  EC51  F02E         	call	_INT1_SetInterruptHandler	;wreg free
 13654                           
 13655                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 13656  005690  0139               	movlb	57	; () banked
 13657  005692  8195               	bsf	149,0,b	;volatile
 13658                           
 13659                           ; BSR set to: 57
 13660                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 13661  005694  9BA7               	bcf	167,5,b	;volatile
 13662                           
 13663                           ; BSR set to: 57
 13664                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 13665  005696  94D2               	bcf	16338,2,c	;volatile
 13666                           
 13667                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 13668  005698  0E9E               	movlw	low _INT2_DefaultInterruptHandler
 13669  00569A  6EE6               	movwf	postinc1,c
 13670  00569C  0E60               	movlw	high _INT2_DefaultInterruptHandler
 13671  00569E  6EE6               	movwf	postinc1,c
 13672  0056A0  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 13673  0056A2  6EE6               	movwf	postinc1,c
 13674  0056A4  EC3D  F02E         	call	_INT2_SetInterruptHandler	;wreg free
 13675                           
 13676                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 13677  0056A8  0139               	movlb	57	; () banked
 13678  0056AA  8B97               	bsf	151,5,b	;volatile
 13679                           
 13680                           ; BSR set to: 57
 13681                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13682  0056AC  0012               	return		;funcret
 13683  0056AE                     __end_of_EXT_INT_Initialize:
 13684                           	opt callstack 0
 13685                           
 13686 ;; *************** function _INT2_SetInterruptHandler *****************
 13687 ;; Defined at:
 13688 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13691 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13692 ;; Auto vars:     Size  Location     Type
 13693 ;;		None
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  1  [STACK] void 
 13696 ;; Registers used:
 13697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13698 ;; Tracked objects:
 13699 ;;		On entry : 3F/39
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13707 ;;Total ram usage:        0 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; Hardware stack levels required when called:    3
 13710 ;; This function calls:
 13711 ;;		Nothing
 13712 ;; This function is called by:
 13713 ;;		_EXT_INT_Initialize
 13714 ;; This function uses a reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text68
 13718  005C7A                     __ptext68:
 13719                           	opt callstack 0
 13720  005C7A                     _INT2_SetInterruptHandler:
 13721                           	opt callstack 25
 13722                           
 13723                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 13724                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13725                           
 13726                           ; BSR set to: 57
 13727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13728                           ;incstack = 0
 13729  005C7A  50E1               	movf	fsr1l,w,c
 13730  005C7C  0FFD               	addlw	-3
 13731  005C7E  6ED9               	movwf	fsr2l,c
 13732  005C80  50E2               	movf	fsr1h,w,c
 13733  005C82  6EDA               	movwf	fsr2h,c
 13734  005C84  0EFF               	movlw	255
 13735  005C86  22DA               	addwfc	fsr2h,f,c
 13736  005C88  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler
 13737  005C8E  006F FF78  F01B    	movff	postinc2,_INT2_InterruptHandler+1
 13738  005C94  006F FF74  F01C    	movff	postdec2,_INT2_InterruptHandler+2
 13739                           
 13740                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13741  005C9A  52E5               	movf	postdec1,f,c
 13742  005C9C  52E5               	movf	postdec1,f,c
 13743  005C9E  52E5               	movf	postdec1,f,c
 13744  005CA0  0012               	return		;funcret
 13745  005CA2                     __end_of_INT2_SetInterruptHandler:
 13746                           	opt callstack 0
 13747                           
 13748 ;; *************** function _INT1_SetInterruptHandler *****************
 13749 ;; Defined at:
 13750 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13753 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13754 ;; Auto vars:     Size  Location     Type
 13755 ;;		None
 13756 ;; Return value:  Size  Location     Type
 13757 ;;                  1  [STACK] void 
 13758 ;; Registers used:
 13759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13760 ;; Tracked objects:
 13761 ;;		On entry : 3F/39
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13769 ;;Total ram usage:        0 bytes
 13770 ;; Hardware stack levels used:    1
 13771 ;; Hardware stack levels required when called:    3
 13772 ;; This function calls:
 13773 ;;		Nothing
 13774 ;; This function is called by:
 13775 ;;		_EXT_INT_Initialize
 13776 ;; This function uses a reentrant model
 13777 ;;
 13778                           
 13779                           	psect	text69
 13780  005CA2                     __ptext69:
 13781                           	opt callstack 0
 13782  005CA2                     _INT1_SetInterruptHandler:
 13783                           	opt callstack 25
 13784                           
 13785                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 13786                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13787                           
 13788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13789                           ;incstack = 0
 13790  005CA2  50E1               	movf	fsr1l,w,c
 13791  005CA4  0FFD               	addlw	-3
 13792  005CA6  6ED9               	movwf	fsr2l,c
 13793  005CA8  50E2               	movf	fsr1h,w,c
 13794  005CAA  6EDA               	movwf	fsr2h,c
 13795  005CAC  0EFF               	movlw	255
 13796  005CAE  22DA               	addwfc	fsr2h,f,c
 13797  005CB0  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler
 13798  005CB6  006F FF78  F01E    	movff	postinc2,_INT1_InterruptHandler+1
 13799  005CBC  006F FF74  F01F    	movff	postdec2,_INT1_InterruptHandler+2
 13800                           
 13801                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13802  005CC2  52E5               	movf	postdec1,f,c
 13803  005CC4  52E5               	movf	postdec1,f,c
 13804  005CC6  52E5               	movf	postdec1,f,c
 13805  005CC8  0012               	return		;funcret
 13806  005CCA                     __end_of_INT1_SetInterruptHandler:
 13807                           	opt callstack 0
 13808                           
 13809 ;; *************** function _INT0_SetInterruptHandler *****************
 13810 ;; Defined at:
 13811 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 13812 ;; Parameters:    Size  Location     Type
 13813 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13814 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;		None
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1  [STACK] void 
 13819 ;; Registers used:
 13820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13821 ;; Tracked objects:
 13822 ;;		On entry : 3F/39
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13830 ;;Total ram usage:        0 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    3
 13833 ;; This function calls:
 13834 ;;		Nothing
 13835 ;; This function is called by:
 13836 ;;		_EXT_INT_Initialize
 13837 ;; This function uses a reentrant model
 13838 ;;
 13839                           
 13840                           	psect	text70
 13841  005CCA                     __ptext70:
 13842                           	opt callstack 0
 13843  005CCA                     _INT0_SetInterruptHandler:
 13844                           	opt callstack 25
 13845                           
 13846                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 13847                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13848                           
 13849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13850                           ;incstack = 0
 13851  005CCA  50E1               	movf	fsr1l,w,c
 13852  005CCC  0FFD               	addlw	-3
 13853  005CCE  6ED9               	movwf	fsr2l,c
 13854  005CD0  50E2               	movf	fsr1h,w,c
 13855  005CD2  6EDA               	movwf	fsr2h,c
 13856  005CD4  0EFF               	movlw	255
 13857  005CD6  22DA               	addwfc	fsr2h,f,c
 13858  005CD8  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler
 13859  005CDE  006F FF78  F021    	movff	postinc2,_INT0_InterruptHandler+1
 13860  005CE4  006F FF74  F022    	movff	postdec2,_INT0_InterruptHandler+2
 13861                           
 13862                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13863  005CEA  52E5               	movf	postdec1,f,c
 13864  005CEC  52E5               	movf	postdec1,f,c
 13865  005CEE  52E5               	movf	postdec1,f,c
 13866  005CF0  0012               	return		;funcret
 13867  005CF2                     __end_of_INT0_SetInterruptHandler:
 13868                           	opt callstack 0
 13869                           
 13870 ;; *************** function _DSM_Initialize *****************
 13871 ;; Defined at:
 13872 ;;		line 58 in file "mcc_generated_files/dsm.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;		None
 13875 ;; Auto vars:     Size  Location     Type
 13876 ;;		None
 13877 ;; Return value:  Size  Location     Type
 13878 ;;                  1  [STACK] void 
 13879 ;; Registers used:
 13880 ;;		wreg, status,2
 13881 ;; Tracked objects:
 13882 ;;		On entry : 0/3C
 13883 ;;		On exit  : 3F/3C
 13884 ;;		Unchanged: 0/0
 13885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13890 ;;Total ram usage:        0 bytes
 13891 ;; Hardware stack levels used:    1
 13892 ;; Hardware stack levels required when called:    3
 13893 ;; This function calls:
 13894 ;;		Nothing
 13895 ;; This function is called by:
 13896 ;;		_SYSTEM_Initialize
 13897 ;; This function uses a reentrant model
 13898 ;;
 13899                           
 13900                           	psect	text71
 13901  005F40                     __ptext71:
 13902                           	opt callstack 0
 13903  005F40                     _DSM_Initialize:
 13904                           	opt callstack 26
 13905                           
 13906                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 13907                           
 13908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13909                           ;incstack = 0
 13910  005F40  013C               	movlb	60	; () banked
 13911  005F42  99FA               	bcf	250,4,b	;volatile
 13912                           
 13913                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 13914  005F44  81FB               	bsf	251,0,b	;volatile
 13915                           
 13916                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 13917  005F46  93FB               	bcf	251,1,b	;volatile
 13918                           
 13919                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 13920  005F48  89FB               	bsf	251,4,b	;volatile
 13921                           
 13922                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 13923  005F4A  9BFB               	bcf	251,5,b	;volatile
 13924                           
 13925                           ; BSR set to: 60
 13926                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 13927  005F4C  0E13               	movlw	19
 13928  005F4E  6FFC               	movwf	252,b	;volatile
 13929                           
 13930                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 13931  005F50  0E0E               	movlw	14
 13932  005F52  6FFE               	movwf	254,b	;volatile
 13933                           
 13934                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 13935  005F54  0E04               	movlw	4
 13936  005F56  6FFD               	movwf	253,b	;volatile
 13937                           
 13938                           ; BSR set to: 60
 13939                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 13940  005F58  8FFA               	bsf	250,7,b	;volatile
 13941                           
 13942                           ; BSR set to: 60
 13943                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13944  005F5A  0012               	return		;funcret
 13945  005F5C                     __end_of_DSM_Initialize:
 13946                           	opt callstack 0
 13947                           
 13948 ;; *************** function _DMA1_Initialize *****************
 13949 ;; Defined at:
 13950 ;;		line 86 in file "mcc_generated_files/dma1.c"
 13951 ;; Parameters:    Size  Location     Type
 13952 ;;		None
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;		None
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  1  [STACK] void 
 13957 ;; Registers used:
 13958 ;;		wreg, status,2
 13959 ;; Tracked objects:
 13960 ;;		On entry : 3F/3D
 13961 ;;		On exit  : 3F/3B
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13968 ;;Total ram usage:        0 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; Hardware stack levels required when called:    3
 13971 ;; This function calls:
 13972 ;;		Nothing
 13973 ;; This function is called by:
 13974 ;;		_SYSTEM_Initialize
 13975 ;; This function uses a reentrant model
 13976 ;;
 13977                           
 13978                           	psect	text72
 13979  0053C4                     __ptext72:
 13980                           	opt callstack 0
 13981  0053C4                     _DMA1_Initialize:
 13982                           	opt callstack 26
 13983                           
 13984                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 13985                           
 13986                           ; BSR set to: 60
 13987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13988                           ;incstack = 0
 13989  0053C4  0E00               	movlw	0
 13990  0053C6  013B               	movlb	59	; () banked
 13991  0053C8  6FF9               	movwf	249,b	;volatile
 13992  0053CA  0E10               	movlw	16
 13993  0053CC  6FFA               	movwf	250,b	;volatile
 13994  0053CE  0E00               	movlw	0
 13995  0053D0  6FFB               	movwf	251,b	;volatile
 13996                           
 13997                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 13998  0053D2  0E3D               	movlw	61
 13999  0053D4  6FF1               	movwf	241,b	;volatile
 14000  0053D6  0E11               	movlw	17
 14001  0053D8  6FF0               	movwf	240,b	;volatile
 14002                           
 14003                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 14004  0053DA  0E03               	movlw	3
 14005  0053DC  6FFD               	movwf	253,b	;volatile
 14006                           
 14007                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 14008  0053DE  0E00               	movlw	0
 14009  0053E0  6FF8               	movwf	248,b	;volatile
 14010  0053E2  0E01               	movlw	1
 14011  0053E4  6FF7               	movwf	247,b	;volatile
 14012                           
 14013                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14014  0053E6  0E00               	movlw	0
 14015  0053E8  6FEF               	movwf	239,b	;volatile
 14016  0053EA  0E01               	movlw	1
 14017  0053EC  6FEE               	movwf	238,b	;volatile
 14018                           
 14019                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14020  0053EE  0E15               	movlw	21
 14021  0053F0  6FFF               	movwf	255,b	;volatile
 14022                           
 14023                           ; BSR set to: 59
 14024                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14025  0053F2  6BFE               	clrf	254,b	;volatile
 14026                           
 14027                           ; BSR set to: 59
 14028                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14029  0053F4  0139               	movlb	57	; () banked
 14030  0053F6  93A2               	bcf	162,1,b	;volatile
 14031                           
 14032                           ; BSR set to: 57
 14033                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14034  0053F8  91A2               	bcf	162,0,b	;volatile
 14035                           
 14036                           ; BSR set to: 57
 14037                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14038  0053FA  97A2               	bcf	162,3,b	;volatile
 14039                           
 14040                           ; BSR set to: 57
 14041                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14042  0053FC  95A2               	bcf	162,2,b	;volatile
 14043                           
 14044                           ; BSR set to: 57
 14045                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14046  0053FE  8392               	bsf	146,1,b	;volatile
 14047                           
 14048                           ; BSR set to: 57
 14049                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14050  005400  8192               	bsf	146,0,b	;volatile
 14051                           
 14052                           ; BSR set to: 57
 14053                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14054  005402  8792               	bsf	146,3,b	;volatile
 14055                           
 14056                           ; BSR set to: 57
 14057                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14058  005404  8592               	bsf	146,2,b	;volatile
 14059                           
 14060                           ; BSR set to: 57
 14061                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14062  005406  6BF1               	clrf	241,b	;volatile
 14063                           
 14064                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14065  005408  0E01               	movlw	1
 14066  00540A  6FF2               	movwf	242,b	;volatile
 14067                           
 14068                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 14069  00540C  0E04               	movlw	4
 14070  00540E  6FF3               	movwf	243,b	;volatile
 14071                           
 14072                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 14073  005410  0E02               	movlw	2
 14074  005412  6FF4               	movwf	244,b	;volatile
 14075                           
 14076                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 14077  005414  0E03               	movlw	3
 14078  005416  6FF7               	movwf	247,b	;volatile
 14079  005418  9ED2               	bcf	16338,7,c	;# 
 14080  00541A  0139               	banksel	14831	;# 
 14081  00541C  0E55               	movlw	85	;# 
 14082  00541E  6FEF               	movwf	14831,b	;# 
 14083  005420  0EAA               	movlw	170	;# 
 14084  005422  6FEF               	movwf	14831,b	;# 
 14085  005424  81EF               	bsf	14831,0,b	;# 
 14086  005426  8ED2               	bsf	16338,7,c	;# 
 14087                           
 14088                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 14089  005428  013B               	movlb	59	; () banked
 14090  00542A  6BFC               	clrf	252,b	;volatile
 14091                           
 14092                           ; BSR set to: 59
 14093                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14094  00542C  0012               	return		;funcret
 14095  00542E                     __end_of_DMA1_Initialize:
 14096                           	opt callstack 0
 14097                           
 14098 ;; *************** function _CLKREF_Initialize *****************
 14099 ;; Defined at:
 14100 ;;		line 58 in file "mcc_generated_files/clkref.c"
 14101 ;; Parameters:    Size  Location     Type
 14102 ;;		None
 14103 ;; Auto vars:     Size  Location     Type
 14104 ;;		None
 14105 ;; Return value:  Size  Location     Type
 14106 ;;                  1  [STACK] void 
 14107 ;; Registers used:
 14108 ;;		wreg, status,2
 14109 ;; Tracked objects:
 14110 ;;		On entry : 3F/3B
 14111 ;;		On exit  : 3F/3C
 14112 ;;		Unchanged: 0/0
 14113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14118 ;;Total ram usage:        0 bytes
 14119 ;; Hardware stack levels used:    1
 14120 ;; Hardware stack levels required when called:    3
 14121 ;; This function calls:
 14122 ;;		Nothing
 14123 ;; This function is called by:
 14124 ;;		_SYSTEM_Initialize
 14125 ;; This function uses a reentrant model
 14126 ;;
 14127                           
 14128                           	psect	text73
 14129  00603A                     __ptext73:
 14130                           	opt callstack 0
 14131  00603A                     _CLKREF_Initialize:
 14132                           	opt callstack 26
 14133                           
 14134                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 14135                           
 14136                           ; BSR set to: 59
 14137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14138                           ;incstack = 0
 14139  00603A  013C               	movlb	60	; () banked
 14140  00603C  6BE6               	clrf	230,b	;volatile
 14141                           
 14142                           ; BSR set to: 60
 14143                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 14144  00603E  0E94               	movlw	148
 14145  006040  6FE5               	movwf	229,b	;volatile
 14146                           
 14147                           ; BSR set to: 60
 14148                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14149  006042  0012               	return		;funcret
 14150  006044                     __end_of_CLKREF_Initialize:
 14151                           	opt callstack 0
 14152                           
 14153 ;; *************** function _CLC1_Initialize *****************
 14154 ;; Defined at:
 14155 ;;		line 58 in file "mcc_generated_files/clc1.c"
 14156 ;; Parameters:    Size  Location     Type
 14157 ;;		None
 14158 ;; Auto vars:     Size  Location     Type
 14159 ;;		None
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  1  [STACK] void 
 14162 ;; Registers used:
 14163 ;;		wreg, status,2
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/39
 14166 ;;		On exit  : 3F/3C
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14173 ;;Total ram usage:        0 bytes
 14174 ;; Hardware stack levels used:    1
 14175 ;; Hardware stack levels required when called:    3
 14176 ;; This function calls:
 14177 ;;		Nothing
 14178 ;; This function is called by:
 14179 ;;		_SYSTEM_Initialize
 14180 ;; This function uses a reentrant model
 14181 ;;
 14182                           
 14183                           	psect	text74
 14184  005E00                     __ptext74:
 14185                           	opt callstack 0
 14186  005E00                     _CLC1_Initialize:
 14187                           	opt callstack 26
 14188                           
 14189                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 14190                           
 14191                           ; BSR set to: 60
 14192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14193                           ;incstack = 0
 14194  005E00  013C               	movlb	60	; () banked
 14195  005E02  6B75               	clrf	117,b	;volatile
 14196                           
 14197                           ; BSR set to: 60
 14198                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 14199  005E04  0E04               	movlw	4
 14200  005E06  6F76               	movwf	118,b	;volatile
 14201                           
 14202                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 14203  005E08  0E04               	movlw	4
 14204  005E0A  6F77               	movwf	119,b	;volatile
 14205                           
 14206                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 14207  005E0C  0E04               	movlw	4
 14208  005E0E  6F78               	movwf	120,b	;volatile
 14209                           
 14210                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 14211  005E10  0E04               	movlw	4
 14212  005E12  6F79               	movwf	121,b	;volatile
 14213                           
 14214                           ; BSR set to: 60
 14215                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 14216  005E14  6B7A               	clrf	122,b	;volatile
 14217                           
 14218                           ; BSR set to: 60
 14219                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 14220  005E16  6B7B               	clrf	123,b	;volatile
 14221                           
 14222                           ; BSR set to: 60
 14223                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 14224  005E18  6B7C               	clrf	124,b	;volatile
 14225                           
 14226                           ; BSR set to: 60
 14227                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 14228  005E1A  6B7D               	clrf	125,b	;volatile
 14229                           
 14230                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 14231  005E1C  0E81               	movlw	129
 14232  005E1E  6F74               	movwf	116,b	;volatile
 14233                           
 14234                           ; BSR set to: 60
 14235                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14236  005E20  0012               	return		;funcret
 14237  005E22                     __end_of_CLC1_Initialize:
 14238                           	opt callstack 0
 14239                           
 14240 ;; *************** function _ADCC_Initialize *****************
 14241 ;; Defined at:
 14242 ;;		line 64 in file "mcc_generated_files/adcc.c"
 14243 ;; Parameters:    Size  Location     Type
 14244 ;;		None
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;		None
 14247 ;; Return value:  Size  Location     Type
 14248 ;;                  1  [STACK] void 
 14249 ;; Registers used:
 14250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14251 ;; Tracked objects:
 14252 ;;		On entry : 3F/39
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14260 ;;Total ram usage:        0 bytes
 14261 ;; Hardware stack levels used:    1
 14262 ;; Hardware stack levels required when called:    4
 14263 ;; This function calls:
 14264 ;;		_ADCC_SetADIInterruptHandler
 14265 ;; This function is called by:
 14266 ;;		_SYSTEM_Initialize
 14267 ;; This function uses a reentrant model
 14268 ;;
 14269                           
 14270                           	psect	text75
 14271  0056AE                     __ptext75:
 14272                           	opt callstack 0
 14273  0056AE                     _ADCC_Initialize:
 14274                           	opt callstack 25
 14275                           
 14276                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 14277                           
 14278                           ; BSR set to: 60
 14279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14280                           ;incstack = 0
 14281  0056AE  013E               	movlb	62	; () banked
 14282  0056B0  6BDE               	clrf	222,b	;volatile
 14283                           
 14284                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 14285  0056B2  6BDF               	clrf	223,b	;volatile
 14286                           
 14287                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 14288  0056B4  6BE0               	clrf	224,b	;volatile
 14289                           
 14290                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 14291  0056B6  6BE1               	clrf	225,b	;volatile
 14292                           
 14293                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 14294  0056B8  6BE4               	clrf	228,b	;volatile
 14295                           
 14296                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 14297  0056BA  6BE5               	clrf	229,b	;volatile
 14298                           
 14299                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 14300  0056BC  6BEA               	clrf	234,b	;volatile
 14301                           
 14302                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 14303  0056BE  6BEC               	clrf	236,b	;volatile
 14304                           
 14305                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 14306  0056C0  6BF1               	clrf	241,b	;volatile
 14307                           
 14308                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 14309  0056C2  6BF3               	clrf	243,b	;volatile
 14310                           
 14311                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 14312  0056C4  6BF4               	clrf	244,b	;volatile
 14313                           
 14314                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 14315  0056C6  6BF5               	clrf	245,b	;volatile
 14316                           
 14317                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 14318  0056C8  6BF6               	clrf	246,b	;volatile
 14319                           
 14320                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 14321  0056CA  6BF7               	clrf	247,b	;volatile
 14322                           
 14323                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 14324  0056CC  6BF9               	clrf	249,b	;volatile
 14325                           
 14326                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 14327  0056CE  6BFA               	clrf	250,b	;volatile
 14328                           
 14329                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 14330  0056D0  6BFB               	clrf	251,b	;volatile
 14331                           
 14332                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 14333  0056D2  6BFC               	clrf	252,b	;volatile
 14334                           
 14335                           ; BSR set to: 62
 14336                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 14337  0056D4  0E02               	movlw	2
 14338  0056D6  6FFD               	movwf	253,b	;volatile
 14339                           
 14340                           ; BSR set to: 62
 14341                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 14342  0056D8  6BFE               	clrf	254,b	;volatile
 14343                           
 14344                           ; BSR set to: 62
 14345                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14346  0056DA  6BFF               	clrf	255,b	;volatile
 14347                           
 14348                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14349  0056DC  0E94               	movlw	148
 14350  0056DE  6FF8               	movwf	248,b	;volatile
 14351                           
 14352                           ; BSR set to: 62
 14353                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14354  0056E0  0139               	movlb	57	; () banked
 14355  0056E2  95A1               	bcf	161,2,b	;volatile
 14356                           
 14357                           ; BSR set to: 57
 14358                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14359  0056E4  8591               	bsf	145,2,b	;volatile
 14360                           
 14361                           ; BSR set to: 57
 14362                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14363  0056E6  0EA0               	movlw	low _ADCC_DefaultInterruptHandler
 14364  0056E8  6EE6               	movwf	postinc1,c
 14365  0056EA  0E60               	movlw	high _ADCC_DefaultInterruptHandler
 14366  0056EC  6EE6               	movwf	postinc1,c
 14367  0056EE  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14368  0056F0  6EE6               	movwf	postinc1,c
 14369  0056F2  EC79  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14370                           
 14371                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14372  0056F6  0012               	return		;funcret
 14373  0056F8                     __end_of_ADCC_Initialize:
 14374                           	opt callstack 0
 14375                           
 14376 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14377 ;; Defined at:
 14378 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14381 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;		None
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1  [STACK] void 
 14386 ;; Registers used:
 14387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14388 ;; Tracked objects:
 14389 ;;		On entry : 3F/39
 14390 ;;		On exit  : 0/0
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14397 ;;Total ram usage:        0 bytes
 14398 ;; Hardware stack levels used:    1
 14399 ;; Hardware stack levels required when called:    3
 14400 ;; This function calls:
 14401 ;;		Nothing
 14402 ;; This function is called by:
 14403 ;;		_ADCC_Initialize
 14404 ;; This function uses a reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text76
 14408  005CF2                     __ptext76:
 14409                           	opt callstack 0
 14410  005CF2                     _ADCC_SetADIInterruptHandler:
 14411                           	opt callstack 25
 14412                           
 14413                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14414                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14415                           
 14416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14417                           ;incstack = 0
 14418  005CF2  50E1               	movf	fsr1l,w,c
 14419  005CF4  0FFD               	addlw	-3
 14420  005CF6  6ED9               	movwf	fsr2l,c
 14421  005CF8  50E2               	movf	fsr1h,w,c
 14422  005CFA  6EDA               	movwf	fsr2h,c
 14423  005CFC  0EFF               	movlw	255
 14424  005CFE  22DA               	addwfc	fsr2h,f,c
 14425  005D00  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14426  005D06  006F FF78  F00C    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14427  005D0C  006F FF74  F00D    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14428                           
 14429                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14430  005D12  52E5               	movf	postdec1,f,c
 14431  005D14  52E5               	movf	postdec1,f,c
 14432  005D16  52E5               	movf	postdec1,f,c
 14433  005D18  0012               	return		;funcret
 14434  005D1A                     __end_of_ADCC_SetADIInterruptHandler:
 14435                           	opt callstack 0
 14436                           
 14437 ;; *************** function _INT0_ISR *****************
 14438 ;; Defined at:
 14439 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;		None
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;		None
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  1    wreg      void 
 14446 ;; Registers used:
 14447 ;;		wreg, status,2, status,0, pclath, tosl
 14448 ;; Tracked objects:
 14449 ;;		On entry : 0/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14457 ;;Total ram usage:        0 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    2
 14460 ;; This function calls:
 14461 ;;		_INT0_CallBack
 14462 ;; This function is called by:
 14463 ;;		Interrupt level 2
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text77
 14468  005FFC                     __ptext77:
 14469                           	opt callstack 0
 14470  005FFC                     _INT0_ISR:
 14471                           	opt callstack 17
 14472                           
 14473                           ;incstack = 0
 14474  005FFC  EE13  F130         	lfsr	1,___inthi_sp
 14475                           
 14476                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 14477  006000  0139               	movlb	57	; () banked
 14478  006002  91A1               	bcf	161,0,b	;volatile
 14479                           
 14480                           ; BSR set to: 57
 14481                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 14482  006004  EC11  F02F         	call	_INT0_CallBack	;wreg free
 14483  006008  0011               	retfie		f
 14484  00600A                     __end_of_INT0_ISR:
 14485                           	opt callstack 0
 14486                           
 14487 ;; *************** function _INT0_CallBack *****************
 14488 ;; Defined at:
 14489 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;		None
 14492 ;; Auto vars:     Size  Location     Type
 14493 ;;		None
 14494 ;; Return value:  Size  Location     Type
 14495 ;;                  1  [STACK] void 
 14496 ;; Registers used:
 14497 ;;		wreg, status,2, status,0, pclath, tosl
 14498 ;; Tracked objects:
 14499 ;;		On entry : 3F/39
 14500 ;;		On exit  : 0/0
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14507 ;;Total ram usage:        0 bytes
 14508 ;; Hardware stack levels used:    1
 14509 ;; Hardware stack levels required when called:    1
 14510 ;; This function calls:
 14511 ;;		Absolute function
 14512 ;;		_INT0_DefaultInterruptHandler
 14513 ;; This function is called by:
 14514 ;;		_INT0_ISR
 14515 ;; This function uses a reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text78
 14519  005E22                     __ptext78:
 14520                           	opt callstack 0
 14521  005E22                     _INT0_CallBack:
 14522                           	opt callstack 17
 14523                           
 14524                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 14525                           
 14526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14527                           ;incstack = 0
 14528  005E22  5020               	movf	_INT0_InterruptHandler,w,c
 14529  005E24  1021               	iorwf	_INT0_InterruptHandler+1,w,c
 14530  005E26  1022               	iorwf	_INT0_InterruptHandler+2,w,c
 14531  005E28  B4D8               	btfsc	status,2,c
 14532  005E2A  0012               	return	
 14533                           
 14534                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 14535  005E2C  D801               	call	u114_48
 14536  005E2E  0012               	return	
 14537  005E30                     u114_48:
 14538  005E30  0005               	push	
 14539  005E32  6EFA               	movwf	pclath,c
 14540  005E34  5020               	movf	_INT0_InterruptHandler,w,c
 14541  005E36  6EFD               	movwf	tosl,c
 14542  005E38  5021               	movf	_INT0_InterruptHandler+1,w,c
 14543  005E3A  6EFE               	movwf	tosh,c
 14544  005E3C  5022               	movf	_INT0_InterruptHandler+2,w,c
 14545  005E3E  6EFF               	movwf	tosu,c
 14546  005E40  50FA               	movf	pclath,w,c
 14547  005E42  0012               	return		;indir
 14548  005E44                     __end_of_INT0_CallBack:
 14549                           	opt callstack 0
 14550                           
 14551 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14552 ;; Defined at:
 14553 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 14554 ;; Parameters:    Size  Location     Type
 14555 ;;		None
 14556 ;; Auto vars:     Size  Location     Type
 14557 ;;		None
 14558 ;; Return value:  Size  Location     Type
 14559 ;;                  1  [STACK] void 
 14560 ;; Registers used:
 14561 ;;		None
 14562 ;; Tracked objects:
 14563 ;;		On entry : 0/39
 14564 ;;		On exit  : 0/0
 14565 ;;		Unchanged: 0/0
 14566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14571 ;;Total ram usage:        0 bytes
 14572 ;; Hardware stack levels used:    1
 14573 ;; This function calls:
 14574 ;;		Nothing
 14575 ;; This function is called by:
 14576 ;;		_EXT_INT_Initialize
 14577 ;;		_INT0_CallBack
 14578 ;; This function uses a reentrant model
 14579 ;;
 14580                           
 14581                           	psect	text79
 14582  00609A                     __ptext79:
 14583                           	opt callstack 0
 14584  00609A                     _INT0_DefaultInterruptHandler:
 14585                           	opt callstack 17
 14586                           
 14587                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14588                           
 14589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14590                           ;incstack = 0
 14591  00609A  0012               	return		;funcret
 14592  00609C                     __end_of_INT0_DefaultInterruptHandler:
 14593                           	opt callstack 0
 14594                           
 14595 ;; *************** function _INT1_ISR *****************
 14596 ;; Defined at:
 14597 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;		None
 14600 ;; Auto vars:     Size  Location     Type
 14601 ;;		None
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  1    wreg      void 
 14604 ;; Registers used:
 14605 ;;		wreg, status,2, status,0, pclath, tosl
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14615 ;;Total ram usage:        0 bytes
 14616 ;; Hardware stack levels used:    1
 14617 ;; Hardware stack levels required when called:    2
 14618 ;; This function calls:
 14619 ;;		_INT1_CallBack
 14620 ;; This function is called by:
 14621 ;;		Interrupt level 2
 14622 ;; This function uses a non-reentrant model
 14623 ;;
 14624                           
 14625                           	psect	text80
 14626  00600C                     __ptext80:
 14627                           	opt callstack 0
 14628  00600C                     _INT1_ISR:
 14629                           	opt callstack 17
 14630                           
 14631                           ;incstack = 0
 14632  00600C  EE13  F130         	lfsr	1,___inthi_sp
 14633                           
 14634                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 14635  006010  0139               	movlb	57	; () banked
 14636  006012  91A5               	bcf	165,0,b	;volatile
 14637                           
 14638                           ; BSR set to: 57
 14639                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 14640  006014  EC22  F02F         	call	_INT1_CallBack	;wreg free
 14641  006018  0011               	retfie		f
 14642  00601A                     __end_of_INT1_ISR:
 14643                           	opt callstack 0
 14644                           
 14645 ;; *************** function _INT1_CallBack *****************
 14646 ;; Defined at:
 14647 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;		None
 14650 ;; Auto vars:     Size  Location     Type
 14651 ;;		None
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  1  [STACK] void 
 14654 ;; Registers used:
 14655 ;;		wreg, status,2, status,0, pclath, tosl
 14656 ;; Tracked objects:
 14657 ;;		On entry : 3F/39
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14665 ;;Total ram usage:        0 bytes
 14666 ;; Hardware stack levels used:    1
 14667 ;; Hardware stack levels required when called:    1
 14668 ;; This function calls:
 14669 ;;		Absolute function
 14670 ;;		_INT1_DefaultInterruptHandler
 14671 ;; This function is called by:
 14672 ;;		_INT1_ISR
 14673 ;; This function uses a reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text81
 14677  005E44                     __ptext81:
 14678                           	opt callstack 0
 14679  005E44                     _INT1_CallBack:
 14680                           	opt callstack 17
 14681                           
 14682                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 14683                           
 14684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14685                           ;incstack = 0
 14686  005E44  501D               	movf	_INT1_InterruptHandler,w,c
 14687  005E46  101E               	iorwf	_INT1_InterruptHandler+1,w,c
 14688  005E48  101F               	iorwf	_INT1_InterruptHandler+2,w,c
 14689  005E4A  B4D8               	btfsc	status,2,c
 14690  005E4C  0012               	return	
 14691                           
 14692                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 14693  005E4E  D801               	call	u116_48
 14694  005E50  0012               	return	
 14695  005E52                     u116_48:
 14696  005E52  0005               	push	
 14697  005E54  6EFA               	movwf	pclath,c
 14698  005E56  501D               	movf	_INT1_InterruptHandler,w,c
 14699  005E58  6EFD               	movwf	tosl,c
 14700  005E5A  501E               	movf	_INT1_InterruptHandler+1,w,c
 14701  005E5C  6EFE               	movwf	tosh,c
 14702  005E5E  501F               	movf	_INT1_InterruptHandler+2,w,c
 14703  005E60  6EFF               	movwf	tosu,c
 14704  005E62  50FA               	movf	pclath,w,c
 14705  005E64  0012               	return		;indir
 14706  005E66                     __end_of_INT1_CallBack:
 14707                           	opt callstack 0
 14708                           
 14709 ;; *************** function _INT1_DefaultInterruptHandler *****************
 14710 ;; Defined at:
 14711 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 14712 ;; Parameters:    Size  Location     Type
 14713 ;;		None
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;		None
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  1  [STACK] void 
 14718 ;; Registers used:
 14719 ;;		None
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/39
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14729 ;;Total ram usage:        0 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; This function calls:
 14732 ;;		Nothing
 14733 ;; This function is called by:
 14734 ;;		_EXT_INT_Initialize
 14735 ;;		_INT1_CallBack
 14736 ;; This function uses a reentrant model
 14737 ;;
 14738                           
 14739                           	psect	text82
 14740  00609C                     __ptext82:
 14741                           	opt callstack 0
 14742  00609C                     _INT1_DefaultInterruptHandler:
 14743                           	opt callstack 17
 14744                           
 14745                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14746                           
 14747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14748                           ;incstack = 0
 14749  00609C  0012               	return		;funcret
 14750  00609E                     __end_of_INT1_DefaultInterruptHandler:
 14751                           	opt callstack 0
 14752                           
 14753 ;; *************** function _INT2_ISR *****************
 14754 ;; Defined at:
 14755 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;		None
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;		None
 14760 ;; Return value:  Size  Location     Type
 14761 ;;                  1    wreg      void 
 14762 ;; Registers used:
 14763 ;;		wreg, status,2, status,0, pclath, tosl
 14764 ;; Tracked objects:
 14765 ;;		On entry : 0/0
 14766 ;;		On exit  : 0/0
 14767 ;;		Unchanged: 0/0
 14768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14773 ;;Total ram usage:        0 bytes
 14774 ;; Hardware stack levels used:    1
 14775 ;; Hardware stack levels required when called:    2
 14776 ;; This function calls:
 14777 ;;		_INT2_CallBack
 14778 ;; This function is called by:
 14779 ;;		Interrupt level 2
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783                           	psect	text83
 14784  00601C                     __ptext83:
 14785                           	opt callstack 0
 14786  00601C                     _INT2_ISR:
 14787                           	opt callstack 17
 14788                           
 14789                           ;incstack = 0
 14790  00601C  EE13  F130         	lfsr	1,___inthi_sp
 14791                           
 14792                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 14793  006020  0139               	movlb	57	; () banked
 14794  006022  9BA7               	bcf	167,5,b	;volatile
 14795                           
 14796                           ; BSR set to: 57
 14797                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 14798  006024  EC33  F02F         	call	_INT2_CallBack	;wreg free
 14799  006028  0011               	retfie		f
 14800  00602A                     __end_of_INT2_ISR:
 14801                           	opt callstack 0
 14802                           
 14803 ;; *************** function _INT2_CallBack *****************
 14804 ;; Defined at:
 14805 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;		None
 14808 ;; Auto vars:     Size  Location     Type
 14809 ;;		None
 14810 ;; Return value:  Size  Location     Type
 14811 ;;                  1  [STACK] void 
 14812 ;; Registers used:
 14813 ;;		wreg, status,2, status,0, pclath, tosl
 14814 ;; Tracked objects:
 14815 ;;		On entry : 3F/39
 14816 ;;		On exit  : 0/0
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14823 ;;Total ram usage:        0 bytes
 14824 ;; Hardware stack levels used:    1
 14825 ;; Hardware stack levels required when called:    1
 14826 ;; This function calls:
 14827 ;;		Absolute function
 14828 ;;		_INT2_DefaultInterruptHandler
 14829 ;; This function is called by:
 14830 ;;		_INT2_ISR
 14831 ;; This function uses a reentrant model
 14832 ;;
 14833                           
 14834                           	psect	text84
 14835  005E66                     __ptext84:
 14836                           	opt callstack 0
 14837  005E66                     _INT2_CallBack:
 14838                           	opt callstack 17
 14839                           
 14840                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 14841                           
 14842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14843                           ;incstack = 0
 14844  005E66  501A               	movf	_INT2_InterruptHandler,w,c
 14845  005E68  101B               	iorwf	_INT2_InterruptHandler+1,w,c
 14846  005E6A  101C               	iorwf	_INT2_InterruptHandler+2,w,c
 14847  005E6C  B4D8               	btfsc	status,2,c
 14848  005E6E  0012               	return	
 14849                           
 14850                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 14851  005E70  D801               	call	u118_48
 14852  005E72  0012               	return	
 14853  005E74                     u118_48:
 14854  005E74  0005               	push	
 14855  005E76  6EFA               	movwf	pclath,c
 14856  005E78  501A               	movf	_INT2_InterruptHandler,w,c
 14857  005E7A  6EFD               	movwf	tosl,c
 14858  005E7C  501B               	movf	_INT2_InterruptHandler+1,w,c
 14859  005E7E  6EFE               	movwf	tosh,c
 14860  005E80  501C               	movf	_INT2_InterruptHandler+2,w,c
 14861  005E82  6EFF               	movwf	tosu,c
 14862  005E84  50FA               	movf	pclath,w,c
 14863  005E86  0012               	return		;indir
 14864  005E88                     __end_of_INT2_CallBack:
 14865                           	opt callstack 0
 14866                           
 14867 ;; *************** function _INT2_DefaultInterruptHandler *****************
 14868 ;; Defined at:
 14869 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;		None
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;		None
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  1  [STACK] void 
 14876 ;; Registers used:
 14877 ;;		None
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/39
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14887 ;;Total ram usage:        0 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_EXT_INT_Initialize
 14893 ;;		_INT2_CallBack
 14894 ;; This function uses a reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text85
 14898  00609E                     __ptext85:
 14899                           	opt callstack 0
 14900  00609E                     _INT2_DefaultInterruptHandler:
 14901                           	opt callstack 17
 14902                           
 14903                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14904                           
 14905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14906                           ;incstack = 0
 14907  00609E  0012               	return		;funcret
 14908  0060A0                     __end_of_INT2_DefaultInterruptHandler:
 14909                           	opt callstack 0
 14910                           
 14911 ;; *************** function _Default_ISR *****************
 14912 ;; Defined at:
 14913 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		None
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14931 ;;Total ram usage:        0 bytes
 14932 ;; Hardware stack levels used:    1
 14933 ;; This function calls:
 14934 ;;		Nothing
 14935 ;; This function is called by:
 14936 ;;		Interrupt level 2
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           	psect	text86
 14941  006094                     __ptext86:
 14942                           	opt callstack 0
 14943  006094                     _Default_ISR:
 14944                           	opt callstack 19
 14945                           
 14946                           ;incstack = 0
 14947  006094  EE13  F130         	lfsr	1,___inthi_sp
 14948  006098  0011               	retfie		f
 14949  00609A                     __end_of_Default_ISR:
 14950                           	opt callstack 0
 14951                           
 14952 ;; *************** function _ADCC_ISR *****************
 14953 ;; Defined at:
 14954 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14955 ;; Parameters:    Size  Location     Type
 14956 ;;		None
 14957 ;; Auto vars:     Size  Location     Type
 14958 ;;		None
 14959 ;; Return value:  Size  Location     Type
 14960 ;;                  1    wreg      void 
 14961 ;; Registers used:
 14962 ;;		wreg, status,2, status,0, pclath, tosl
 14963 ;; Tracked objects:
 14964 ;;		On entry : 0/0
 14965 ;;		On exit  : 0/0
 14966 ;;		Unchanged: 0/0
 14967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14972 ;;Total ram usage:        0 bytes
 14973 ;; Hardware stack levels used:    1
 14974 ;; Hardware stack levels required when called:    1
 14975 ;; This function calls:
 14976 ;;		Absolute function
 14977 ;;		_ADCC_DefaultInterruptHandler
 14978 ;; This function is called by:
 14979 ;;		Interrupt level 2
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           	psect	text87
 14984  005AC0                     __ptext87:
 14985                           	opt callstack 0
 14986  005AC0                     _ADCC_ISR:
 14987                           	opt callstack 18
 14988                           
 14989                           ;incstack = 0
 14990  005AC0  EE13  F130         	lfsr	1,___inthi_sp
 14991                           
 14992                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14993  005AC4  0139               	movlb	57	; () banked
 14994  005AC6  95A1               	bcf	161,2,b	;volatile
 14995                           
 14996                           ; BSR set to: 57
 14997                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14998  005AC8  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 14999  005ACA  100C               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 15000  005ACC  100D               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 15001  005ACE  B4D8               	btfsc	status,2,c
 15002  005AD0  0011               	retfie		f
 15003                           
 15004                           ; BSR set to: 57
 15005                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 15006  005AD2  D801               	call	i2u198_48
 15007  005AD4  0011               	retfie		f
 15008  005AD6                     i2u198_48:
 15009  005AD6  0005               	push	
 15010  005AD8  6EFA               	movwf	pclath,c
 15011  005ADA  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 15012  005ADC  6EFD               	movwf	tosl,c
 15013  005ADE  500C               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 15014  005AE0  6EFE               	movwf	tosh,c
 15015  005AE2  500D               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 15016  005AE4  6EFF               	movwf	tosu,c
 15017  005AE6  50FA               	movf	pclath,w,c
 15018  005AE8  0012               	return		;indir
 15019  005AEA                     __end_of_ADCC_ISR:
 15020                           	opt callstack 0
 15021                           
 15022 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15023 ;; Defined at:
 15024 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;		None
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1  [STACK] void 
 15031 ;; Registers used:
 15032 ;;		None
 15033 ;; Tracked objects:
 15034 ;;		On entry : 3F/39
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15042 ;;Total ram usage:        0 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; This function calls:
 15045 ;;		Nothing
 15046 ;; This function is called by:
 15047 ;;		_ADCC_Initialize
 15048 ;;		_ADCC_ISR
 15049 ;; This function uses a reentrant model
 15050 ;;
 15051                           
 15052                           	psect	text88
 15053  0060A0                     __ptext88:
 15054                           	opt callstack 0
 15055  0060A0                     _ADCC_DefaultInterruptHandler:
 15056                           	opt callstack 18
 15057                           
 15058                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15059                           
 15060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15061                           ;incstack = 0
 15062  0060A0  0012               	return		;funcret
 15063  0060A2                     __end_of_ADCC_DefaultInterruptHandler:
 15064                           	opt callstack 0
 15065                           
 15066 ;; *************** function _UART1_tx_vect_isr *****************
 15067 ;; Defined at:
 15068 ;;		line 197 in file "mcc_generated_files/uart1.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;		None
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;		None
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1    wreg      void 
 15075 ;; Registers used:
 15076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15077 ;; Tracked objects:
 15078 ;;		On entry : 0/0
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15086 ;;Total ram usage:        0 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:    1
 15089 ;; This function calls:
 15090 ;;		Absolute function
 15091 ;;		_UART1_Transmit_ISR
 15092 ;; This function is called by:
 15093 ;;		Interrupt level 2
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           	psect	text89
 15098  005D1C                     __ptext89:
 15099                           	opt callstack 0
 15100  005D1C                     _UART1_tx_vect_isr:
 15101                           	opt callstack 18
 15102                           
 15103                           ;incstack = 0
 15104  005D1C  EE13  F130         	lfsr	1,___inthi_sp
 15105                           
 15106                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 15107  005D20  500E               	movf	_UART1_TxInterruptHandler,w,c
 15108  005D22  100F               	iorwf	_UART1_TxInterruptHandler+1,w,c
 15109  005D24  1010               	iorwf	_UART1_TxInterruptHandler+2,w,c
 15110  005D26  B4D8               	btfsc	status,2,c
 15111  005D28  0011               	retfie		f
 15112                           
 15113                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 15114  005D2A  D801               	call	i2u408_48
 15115  005D2C  0011               	retfie		f
 15116  005D2E                     i2u408_48:
 15117  005D2E  0005               	push	
 15118  005D30  6EFA               	movwf	pclath,c
 15119  005D32  500E               	movf	_UART1_TxInterruptHandler,w,c
 15120  005D34  6EFD               	movwf	tosl,c
 15121  005D36  500F               	movf	_UART1_TxInterruptHandler+1,w,c
 15122  005D38  6EFE               	movwf	tosh,c
 15123  005D3A  5010               	movf	_UART1_TxInterruptHandler+2,w,c
 15124  005D3C  6EFF               	movwf	tosu,c
 15125  005D3E  50FA               	movf	pclath,w,c
 15126  005D40  0012               	return		;indir
 15127  005D42                     __end_of_UART1_tx_vect_isr:
 15128                           	opt callstack 0
 15129                           
 15130 ;; *************** function _UART1_Transmit_ISR *****************
 15131 ;; Defined at:
 15132 ;;		line 211 in file "mcc_generated_files/uart1.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1  [STACK] void 
 15139 ;; Registers used:
 15140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15141 ;; Tracked objects:
 15142 ;;		On entry : 0/0
 15143 ;;		On exit  : 3B/39
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15150 ;;Total ram usage:        0 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_UART1_Initialize
 15156 ;;		_UART1_tx_vect_isr
 15157 ;; This function uses a reentrant model
 15158 ;;
 15159                           
 15160                           	psect	text90
 15161  005A12                     __ptext90:
 15162                           	opt callstack 0
 15163  005A12                     _UART1_Transmit_ISR:
 15164                           	opt callstack 18
 15165                           
 15166                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 15167                           
 15168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15169                           ;incstack = 0
 15170  005A12  0E40               	movlw	64
 15171  005A14  603A               	cpfslt	_uart1TxBufferRemaining,c
 15172  005A16  D010               	goto	l597
 15173                           
 15174                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 15175  005A18  0E80               	movlw	low _uart1TxBuffer
 15176  005A1A  243B               	addwf	_uart1TxTail,w,c	;volatile
 15177  005A1C  6ED9               	movwf	fsr2l,c
 15178  005A1E  6ADA               	clrf	fsr2h,c
 15179  005A20  0E02               	movlw	high _uart1TxBuffer
 15180  005A22  22DA               	addwfc	fsr2h,f,c
 15181  005A24  50DF               	movf	indf2,w,c
 15182  005A26  013D               	movlb	61	; () banked
 15183  005A28  6FEA               	movwf	234,b	;volatile
 15184                           
 15185                           ; BSR set to: 61
 15186  005A2A  2A3B               	incf	_uart1TxTail,f,c	;volatile
 15187                           
 15188                           ; BSR set to: 61
 15189                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 15190  005A2C  0E3F               	movlw	63
 15191  005A2E  643B               	cpfsgt	_uart1TxTail,c
 15192  005A30  D001               	goto	l6228
 15193                           
 15194                           ; BSR set to: 61
 15195                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 15196  005A32  6A3B               	clrf	_uart1TxTail,c	;volatile
 15197  005A34                     l6228:
 15198                           
 15199                           ; BSR set to: 61
 15200                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 15201  005A34  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 15202                           
 15203                           ;mcc_generated_files/uart1.c: 220:  } else {
 15204  005A36  0012               	return	
 15205  005A38                     l597:
 15206                           
 15207                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 15208  005A38  0139               	movlb	57	; () banked
 15209  005A3A  9993               	bcf	147,4,b	;volatile
 15210                           
 15211                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15212  005A3C  0012               	return		;funcret
 15213  005A3E                     __end_of_UART1_Transmit_ISR:
 15214                           	opt callstack 0
 15215                           
 15216 ;; *************** function _UART1_rx_vect_isr *****************
 15217 ;; Defined at:
 15218 ;;		line 204 in file "mcc_generated_files/uart1.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;		None
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;		None
 15223 ;; Return value:  Size  Location     Type
 15224 ;;                  1    wreg      void 
 15225 ;; Registers used:
 15226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15236 ;;Total ram usage:        0 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; Hardware stack levels required when called:    1
 15239 ;; This function calls:
 15240 ;;		Absolute function
 15241 ;;		_UART1_Receive_ISR
 15242 ;; This function is called by:
 15243 ;;		Interrupt level 2
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           
 15247                           	psect	text91
 15248  005D44                     __ptext91:
 15249                           	opt callstack 0
 15250  005D44                     _UART1_rx_vect_isr:
 15251                           	opt callstack 18
 15252                           
 15253                           ;incstack = 0
 15254  005D44  EE13  F130         	lfsr	1,___inthi_sp
 15255                           
 15256                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 15257  005D48  5011               	movf	_UART1_RxInterruptHandler,w,c
 15258  005D4A  1012               	iorwf	_UART1_RxInterruptHandler+1,w,c
 15259  005D4C  1013               	iorwf	_UART1_RxInterruptHandler+2,w,c
 15260  005D4E  B4D8               	btfsc	status,2,c
 15261  005D50  0011               	retfie		f
 15262                           
 15263                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 15264  005D52  D801               	call	i2u410_48
 15265  005D54  0011               	retfie		f
 15266  005D56                     i2u410_48:
 15267  005D56  0005               	push	
 15268  005D58  6EFA               	movwf	pclath,c
 15269  005D5A  5011               	movf	_UART1_RxInterruptHandler,w,c
 15270  005D5C  6EFD               	movwf	tosl,c
 15271  005D5E  5012               	movf	_UART1_RxInterruptHandler+1,w,c
 15272  005D60  6EFE               	movwf	tosh,c
 15273  005D62  5013               	movf	_UART1_RxInterruptHandler+2,w,c
 15274  005D64  6EFF               	movwf	tosu,c
 15275  005D66  50FA               	movf	pclath,w,c
 15276  005D68  0012               	return		;indir
 15277  005D6A                     __end_of_UART1_rx_vect_isr:
 15278                           	opt callstack 0
 15279                           
 15280 ;; *************** function _UART1_Receive_ISR *****************
 15281 ;; Defined at:
 15282 ;;		line 227 in file "mcc_generated_files/uart1.c"
 15283 ;; Parameters:    Size  Location     Type
 15284 ;;		None
 15285 ;; Auto vars:     Size  Location     Type
 15286 ;;		None
 15287 ;; Return value:  Size  Location     Type
 15288 ;;                  1  [STACK] void 
 15289 ;; Registers used:
 15290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15291 ;; Tracked objects:
 15292 ;;		On entry : 0/0
 15293 ;;		On exit  : 0/0
 15294 ;;		Unchanged: 0/0
 15295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15300 ;;Total ram usage:        0 bytes
 15301 ;; Hardware stack levels used:    1
 15302 ;; This function calls:
 15303 ;;		Nothing
 15304 ;; This function is called by:
 15305 ;;		_UART1_Initialize
 15306 ;;		_UART1_rx_vect_isr
 15307 ;; This function uses a reentrant model
 15308 ;;
 15309                           
 15310                           	psect	text92
 15311  005EAA                     __ptext92:
 15312                           	opt callstack 0
 15313  005EAA                     _UART1_Receive_ISR:
 15314                           	opt callstack 18
 15315                           
 15316                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 15317                           
 15318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15319                           ;incstack = 0
 15320  005EAA  0E40               	movlw	low _uart1RxBuffer
 15321  005EAC  2439               	addwf	_uart1RxHead,w,c	;volatile
 15322  005EAE  6ED9               	movwf	fsr2l,c
 15323  005EB0  6ADA               	clrf	fsr2h,c
 15324  005EB2  0E02               	movlw	high _uart1RxBuffer
 15325  005EB4  22DA               	addwfc	fsr2h,f,c
 15326  005EB6  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15327  005EBC  2A39               	incf	_uart1RxHead,f,c	;volatile
 15328                           
 15329                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 15330  005EBE  0E3F               	movlw	63
 15331  005EC0  6439               	cpfsgt	_uart1RxHead,c
 15332  005EC2  D001               	goto	l6238
 15333                           
 15334                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 15335  005EC4  6A39               	clrf	_uart1RxHead,c	;volatile
 15336  005EC6                     l6238:
 15337                           
 15338                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 15339  005EC6  2A37               	incf	_uart1RxCount,f,c	;volatile
 15340                           
 15341                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15342  005EC8  0012               	return		;funcret
 15343  005ECA                     __end_of_UART1_Receive_ISR:
 15344                           	opt callstack 0
 15345                           
 15346 ;; *************** function _UART2_tx_vect_isr *****************
 15347 ;; Defined at:
 15348 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;		None
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15366 ;;Total ram usage:        0 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:    1
 15369 ;; This function calls:
 15370 ;;		Absolute function
 15371 ;;		_UART2_Transmit_ISR
 15372 ;; This function is called by:
 15373 ;;		Interrupt level 2
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377                           	psect	text93
 15378  005D6C                     __ptext93:
 15379                           	opt callstack 0
 15380  005D6C                     _UART2_tx_vect_isr:
 15381                           	opt callstack 18
 15382                           
 15383                           ;incstack = 0
 15384  005D6C  EE13  F130         	lfsr	1,___inthi_sp
 15385                           
 15386                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15387  005D70  5014               	movf	_UART2_TxInterruptHandler,w,c
 15388  005D72  1015               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15389  005D74  1016               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15390  005D76  B4D8               	btfsc	status,2,c
 15391  005D78  0011               	retfie		f
 15392                           
 15393                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15394  005D7A  D801               	call	i2u412_48
 15395  005D7C  0011               	retfie		f
 15396  005D7E                     i2u412_48:
 15397  005D7E  0005               	push	
 15398  005D80  6EFA               	movwf	pclath,c
 15399  005D82  5014               	movf	_UART2_TxInterruptHandler,w,c
 15400  005D84  6EFD               	movwf	tosl,c
 15401  005D86  5015               	movf	_UART2_TxInterruptHandler+1,w,c
 15402  005D88  6EFE               	movwf	tosh,c
 15403  005D8A  5016               	movf	_UART2_TxInterruptHandler+2,w,c
 15404  005D8C  6EFF               	movwf	tosu,c
 15405  005D8E  50FA               	movf	pclath,w,c
 15406  005D90  0012               	return		;indir
 15407  005D92                     __end_of_UART2_tx_vect_isr:
 15408                           	opt callstack 0
 15409                           
 15410 ;; *************** function _UART2_Transmit_ISR *****************
 15411 ;; Defined at:
 15412 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;		None
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;		None
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  1  [STACK] void 
 15419 ;; Registers used:
 15420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 3B/39
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15430 ;;Total ram usage:        0 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_UART2_Initialize
 15436 ;;		_UART2_tx_vect_isr
 15437 ;; This function uses a reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text94
 15441  005A3E                     __ptext94:
 15442                           	opt callstack 0
 15443  005A3E                     _UART2_Transmit_ISR:
 15444                           	opt callstack 18
 15445                           
 15446                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15447                           
 15448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15449                           ;incstack = 0
 15450  005A3E  0E40               	movlw	64
 15451  005A40  6034               	cpfslt	_uart2TxBufferRemaining,c
 15452  005A42  D010               	goto	l717
 15453                           
 15454                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15455  005A44  0E00               	movlw	low _uart2TxBuffer
 15456  005A46  2435               	addwf	_uart2TxTail,w,c	;volatile
 15457  005A48  6ED9               	movwf	fsr2l,c
 15458  005A4A  6ADA               	clrf	fsr2h,c
 15459  005A4C  0E03               	movlw	high _uart2TxBuffer
 15460  005A4E  22DA               	addwfc	fsr2h,f,c
 15461  005A50  50DF               	movf	indf2,w,c
 15462  005A52  013D               	movlb	61	; () banked
 15463  005A54  6FD2               	movwf	210,b	;volatile
 15464                           
 15465                           ; BSR set to: 61
 15466  005A56  2A35               	incf	_uart2TxTail,f,c	;volatile
 15467                           
 15468                           ; BSR set to: 61
 15469                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15470  005A58  0E3F               	movlw	63
 15471  005A5A  6435               	cpfsgt	_uart2TxTail,c
 15472  005A5C  D001               	goto	l6250
 15473                           
 15474                           ; BSR set to: 61
 15475                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15476  005A5E  6A35               	clrf	_uart2TxTail,c	;volatile
 15477  005A60                     l6250:
 15478                           
 15479                           ; BSR set to: 61
 15480                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15481  005A60  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15482                           
 15483                           ;mcc_generated_files/uart2.c: 224:     }
 15484  005A62  0012               	return	
 15485  005A64                     l717:
 15486                           
 15487                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15488  005A64  0139               	movlb	57	; () banked
 15489  005A66  9796               	bcf	150,3,b	;volatile
 15490                           
 15491                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15492  005A68  0012               	return		;funcret
 15493  005A6A                     __end_of_UART2_Transmit_ISR:
 15494                           	opt callstack 0
 15495                           
 15496 ;; *************** function _UART2_rx_vect_isr *****************
 15497 ;; Defined at:
 15498 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;		None
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;		None
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  1    wreg      void 
 15505 ;; Registers used:
 15506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15507 ;; Tracked objects:
 15508 ;;		On entry : 0/0
 15509 ;;		On exit  : 0/0
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15516 ;;Total ram usage:        0 bytes
 15517 ;; Hardware stack levels used:    1
 15518 ;; Hardware stack levels required when called:    1
 15519 ;; This function calls:
 15520 ;;		Absolute function
 15521 ;;		_UART2_Receive_ISR
 15522 ;; This function is called by:
 15523 ;;		Interrupt level 2
 15524 ;; This function uses a non-reentrant model
 15525 ;;
 15526                           
 15527                           	psect	text95
 15528  005D94                     __ptext95:
 15529                           	opt callstack 0
 15530  005D94                     _UART2_rx_vect_isr:
 15531                           	opt callstack 18
 15532                           
 15533                           ;incstack = 0
 15534  005D94  EE13  F130         	lfsr	1,___inthi_sp
 15535                           
 15536                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15537  005D98  5017               	movf	_UART2_RxInterruptHandler,w,c
 15538  005D9A  1018               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15539  005D9C  1019               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15540  005D9E  B4D8               	btfsc	status,2,c
 15541  005DA0  0011               	retfie		f
 15542                           
 15543                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15544  005DA2  D801               	call	i2u414_48
 15545  005DA4  0011               	retfie		f
 15546  005DA6                     i2u414_48:
 15547  005DA6  0005               	push	
 15548  005DA8  6EFA               	movwf	pclath,c
 15549  005DAA  5017               	movf	_UART2_RxInterruptHandler,w,c
 15550  005DAC  6EFD               	movwf	tosl,c
 15551  005DAE  5018               	movf	_UART2_RxInterruptHandler+1,w,c
 15552  005DB0  6EFE               	movwf	tosh,c
 15553  005DB2  5019               	movf	_UART2_RxInterruptHandler+2,w,c
 15554  005DB4  6EFF               	movwf	tosu,c
 15555  005DB6  50FA               	movf	pclath,w,c
 15556  005DB8  0012               	return		;indir
 15557  005DBA                     __end_of_UART2_rx_vect_isr:
 15558                           	opt callstack 0
 15559                           
 15560 ;; *************** function _UART2_Receive_ISR *****************
 15561 ;; Defined at:
 15562 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15563 ;; Parameters:    Size  Location     Type
 15564 ;;		None
 15565 ;; Auto vars:     Size  Location     Type
 15566 ;;		None
 15567 ;; Return value:  Size  Location     Type
 15568 ;;                  1  [STACK] void 
 15569 ;; Registers used:
 15570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15571 ;; Tracked objects:
 15572 ;;		On entry : 0/0
 15573 ;;		On exit  : 0/0
 15574 ;;		Unchanged: 0/0
 15575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15580 ;;Total ram usage:        0 bytes
 15581 ;; Hardware stack levels used:    1
 15582 ;; This function calls:
 15583 ;;		Nothing
 15584 ;; This function is called by:
 15585 ;;		_UART2_Initialize
 15586 ;;		_UART2_rx_vect_isr
 15587 ;; This function uses a reentrant model
 15588 ;;
 15589                           
 15590                           	psect	text96
 15591  005ECA                     __ptext96:
 15592                           	opt callstack 0
 15593  005ECA                     _UART2_Receive_ISR:
 15594                           	opt callstack 18
 15595                           
 15596                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15597                           
 15598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15599                           ;incstack = 0
 15600  005ECA  0E00               	movlw	low _uart2RxBuffer
 15601  005ECC  2433               	addwf	_uart2RxHead,w,c	;volatile
 15602  005ECE  6ED9               	movwf	fsr2l,c
 15603  005ED0  6ADA               	clrf	fsr2h,c
 15604  005ED2  0E02               	movlw	high _uart2RxBuffer
 15605  005ED4  22DA               	addwfc	fsr2h,f,c
 15606  005ED6  006F F743 FFDF     	movff	15824,indf2	;volatile
 15607  005EDC  2A33               	incf	_uart2RxHead,f,c	;volatile
 15608                           
 15609                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15610  005EDE  0E3F               	movlw	63
 15611  005EE0  6433               	cpfsgt	_uart2RxHead,c
 15612  005EE2  D001               	goto	l6260
 15613                           
 15614                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15615  005EE4  6A33               	clrf	_uart2RxHead,c	;volatile
 15616  005EE6                     l6260:
 15617                           
 15618                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15619  005EE6  2A31               	incf	_uart2RxCount,f,c	;volatile
 15620                           
 15621                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15622  005EE8  0012               	return		;funcret
 15623  005EEA                     __end_of_UART2_Receive_ISR:
 15624                           	opt callstack 0
 15625                           
 15626 ;; *************** function _TMR6_ISR *****************
 15627 ;; Defined at:
 15628 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;		None
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  1    wreg      void 
 15635 ;; Registers used:
 15636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15646 ;;Total ram usage:        1 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:    2
 15649 ;; This function calls:
 15650 ;;		_TMR6_CallBack
 15651 ;; This function is called by:
 15652 ;;		Interrupt level 2
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text97
 15657  005F78                     __ptext97:
 15658                           	opt callstack 0
 15659  005F78                     _TMR6_ISR:
 15660                           	opt callstack 17
 15661                           
 15662                           ;incstack = 0
 15663  005F78  0060  F0F4  F05E   	movff	btemp,??_TMR6_ISR
 15664  005F7E  EE13  F130         	lfsr	1,___inthi_sp
 15665                           
 15666                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 15667  005F82  0139               	movlb	57	; () banked
 15668  005F84  91A9               	bcf	169,0,b	;volatile
 15669                           
 15670                           ; BSR set to: 57
 15671                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 15672  005F86  EC44  F02F         	call	_TMR6_CallBack	;wreg free
 15673  005F8A  0060  F178  F03D   	movff	??_TMR6_ISR,btemp
 15674  005F90  0011               	retfie		f
 15675  005F92                     __end_of_TMR6_ISR:
 15676                           	opt callstack 0
 15677                           
 15678 ;; *************** function _TMR6_CallBack *****************
 15679 ;; Defined at:
 15680 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;		None
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;		None
 15685 ;; Return value:  Size  Location     Type
 15686 ;;                  1  [STACK] void 
 15687 ;; Registers used:
 15688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15689 ;; Tracked objects:
 15690 ;;		On entry : 3F/39
 15691 ;;		On exit  : 0/0
 15692 ;;		Unchanged: 0/0
 15693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15698 ;;Total ram usage:        0 bytes
 15699 ;; Hardware stack levels used:    1
 15700 ;; Hardware stack levels required when called:    1
 15701 ;; This function calls:
 15702 ;;		Absolute function
 15703 ;;		_TMR6_DefaultInterruptHandler
 15704 ;; This function is called by:
 15705 ;;		_TMR6_ISR
 15706 ;; This function uses a reentrant model
 15707 ;;
 15708                           
 15709                           	psect	text98
 15710  005E88                     __ptext98:
 15711                           	opt callstack 0
 15712  005E88                     _TMR6_CallBack:
 15713                           	opt callstack 17
 15714                           
 15715                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 15716                           
 15717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15718                           ;incstack = 0
 15719  005E88  5008               	movf	_TMR6_InterruptHandler,w,c
 15720  005E8A  1009               	iorwf	_TMR6_InterruptHandler+1,w,c
 15721  005E8C  100A               	iorwf	_TMR6_InterruptHandler+2,w,c
 15722  005E8E  B4D8               	btfsc	status,2,c
 15723  005E90  0012               	return	
 15724                           
 15725                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 15726  005E92  D801               	call	u337_48
 15727  005E94  0012               	return	
 15728  005E96                     u337_48:
 15729  005E96  0005               	push	
 15730  005E98  6EFA               	movwf	pclath,c
 15731  005E9A  5008               	movf	_TMR6_InterruptHandler,w,c
 15732  005E9C  6EFD               	movwf	tosl,c
 15733  005E9E  5009               	movf	_TMR6_InterruptHandler+1,w,c
 15734  005EA0  6EFE               	movwf	tosh,c
 15735  005EA2  500A               	movf	_TMR6_InterruptHandler+2,w,c
 15736  005EA4  6EFF               	movwf	tosu,c
 15737  005EA6  50FA               	movf	pclath,w,c
 15738  005EA8  0012               	return		;indir
 15739  005EAA                     __end_of_TMR6_CallBack:
 15740                           	opt callstack 0
 15741                           
 15742 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 15743 ;; Defined at:
 15744 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;		None
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;  i               1  [STACK] unsigned char 
 15749 ;; Return value:  Size  Location     Type
 15750 ;;                  1  [STACK] void 
 15751 ;; Registers used:
 15752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/39
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15762 ;;Total ram usage:        0 bytes
 15763 ;; Hardware stack levels used:    1
 15764 ;; This function calls:
 15765 ;;		Nothing
 15766 ;; This function is called by:
 15767 ;;		_TMR6_Initialize
 15768 ;;		_TMR6_CallBack
 15769 ;; This function uses a reentrant model
 15770 ;;
 15771                           
 15772                           	psect	text99
 15773  005784                     __ptext99:
 15774                           	opt callstack 0
 15775  005784                     _TMR6_DefaultInterruptHandler:
 15776                           	opt callstack 0
 15777                           
 15778                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15779  005784  52E6               	movf	postinc1,f,c
 15780                           
 15781                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 15782                           ;stkvar	_i @ sp[(-1)+0]
 15783                           
 15784                           ;incstack = 0
 15785  005786  0EFF               	movlw	-1
 15786  005788  6AE3               	clrf	plusw1,c
 15787  00578A                     l5880:
 15788                           
 15789                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 15790                           ;stkvar	_i @ sp[(-1)+0]
 15791  00578A  0EFF               	movlw	-1
 15792  00578C  50E3               	movf	plusw1,w,c
 15793  00578E  0D02               	mullw	2
 15794  005790  50F3               	movf	prodl,w,c
 15795  005792  0F79               	addlw	low _tickCount
 15796  005794  6ED9               	movwf	fsr2l,c
 15797  005796  6ADA               	clrf	fsr2h,c
 15798  005798  50DE               	movf	postinc2,w,c
 15799  00579A  10DE               	iorwf	postinc2,w,c
 15800  00579C  B4D8               	btfsc	status,2,c
 15801  00579E  D00A               	goto	l5884
 15802                           
 15803                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 15804                           ;stkvar	_i @ sp[(-1)+0]
 15805  0057A0  0EFF               	movlw	-1
 15806  0057A2  50E3               	movf	plusw1,w,c
 15807  0057A4  0D02               	mullw	2
 15808  0057A6  50F3               	movf	prodl,w,c
 15809  0057A8  0F79               	addlw	low _tickCount
 15810  0057AA  6ED9               	movwf	fsr2l,c
 15811  0057AC  6ADA               	clrf	fsr2h,c
 15812  0057AE  06DE               	decf	postinc2,f,c
 15813  0057B0  0E00               	movlw	0
 15814  0057B2  5ADD               	subwfb	postdec2,f,c
 15815  0057B4                     l5884:
 15816                           
 15817                           ;mcc_generated_files/tmr6.c: 207:  }
 15818                           ;stkvar	_i @ sp[(-1)+0]
 15819  0057B4  0EFF               	movlw	-1
 15820  0057B6  2AE3               	incf	plusw1,f,c
 15821                           
 15822                           ;stkvar	_i @ sp[(-1)+0]
 15823  0057B8  0EFF               	movlw	-1
 15824  0057BA  006F FF8C  F03D    	movff	plusw1,btemp
 15825  0057C0  0E05               	movlw	5
 15826  0057C2  643D               	cpfsgt	btemp,c
 15827  0057C4  D7E2               	goto	l5880
 15828                           
 15829                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15830  0057C6  52E5               	movf	postdec1,f,c
 15831  0057C8  0012               	return		;funcret
 15832  0057CA                     __end_of_TMR6_DefaultInterruptHandler:
 15833                           	opt callstack 0
 15834                           
 15835 ;; *************** function _DMA1_DMASCNT_ISR *****************
 15836 ;; Defined at:
 15837 ;;		line 126 in file "mcc_generated_files/dma1.c"
 15838 ;; Parameters:    Size  Location     Type
 15839 ;;		None
 15840 ;; Auto vars:     Size  Location     Type
 15841 ;;		None
 15842 ;; Return value:  Size  Location     Type
 15843 ;;                  1    wreg      void 
 15844 ;; Registers used:
 15845 ;;		None
 15846 ;; Tracked objects:
 15847 ;;		On entry : 0/0
 15848 ;;		On exit  : 3F/0
 15849 ;;		Unchanged: 0/0
 15850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15855 ;;Total ram usage:        0 bytes
 15856 ;; Hardware stack levels used:    1
 15857 ;; This function calls:
 15858 ;;		Nothing
 15859 ;; This function is called by:
 15860 ;;		Interrupt level 2
 15861 ;; This function uses a non-reentrant model
 15862 ;;
 15863                           
 15864                           	psect	text100
 15865  00602C                     __ptext100:
 15866                           	opt callstack 0
 15867  00602C                     _DMA1_DMASCNT_ISR:
 15868                           	opt callstack 19
 15869                           
 15870                           ;incstack = 0
 15871  00602C  EE13  F130         	lfsr	1,___inthi_sp
 15872                           
 15873                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 15874  006030  0139               	movlb	57	; () banked
 15875  006032  91A2               	bcf	162,0,b	;volatile
 15876                           
 15877                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 15878  006034  0100               	movlb	0	; () banked
 15879  006036  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 15880                           
 15881                           ; BSR set to: 0
 15882  006038  0011               	retfie		f
 15883  00603A                     __end_of_DMA1_DMASCNT_ISR:
 15884                           	opt callstack 0
 15885                           
 15886 ;; *************** function _DMA1_DMADCNT_ISR *****************
 15887 ;; Defined at:
 15888 ;;		line 133 in file "mcc_generated_files/dma1.c"
 15889 ;; Parameters:    Size  Location     Type
 15890 ;;		None
 15891 ;; Auto vars:     Size  Location     Type
 15892 ;;		None
 15893 ;; Return value:  Size  Location     Type
 15894 ;;                  1    wreg      void 
 15895 ;; Registers used:
 15896 ;;		None
 15897 ;; Tracked objects:
 15898 ;;		On entry : 0/0
 15899 ;;		On exit  : 3F/39
 15900 ;;		Unchanged: 0/0
 15901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15906 ;;Total ram usage:        0 bytes
 15907 ;; Hardware stack levels used:    1
 15908 ;; This function calls:
 15909 ;;		Nothing
 15910 ;; This function is called by:
 15911 ;;		Interrupt level 2
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           	psect	text101
 15916  006044                     __ptext101:
 15917                           	opt callstack 0
 15918  006044                     _DMA1_DMADCNT_ISR:
 15919                           	opt callstack 19
 15920                           
 15921                           ; BSR set to: 0
 15922                           ;incstack = 0
 15923  006044  EE13  F130         	lfsr	1,___inthi_sp
 15924                           
 15925                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 15926  006048  0139               	movlb	57	; () banked
 15927  00604A  93A2               	bcf	162,1,b	;volatile
 15928                           
 15929                           ; BSR set to: 57
 15930  00604C  0011               	retfie		f
 15931  00604E                     __end_of_DMA1_DMADCNT_ISR:
 15932                           	opt callstack 0
 15933                           
 15934 ;; *************** function _DMA1_DMAA_ISR *****************
 15935 ;; Defined at:
 15936 ;;		line 143 in file "mcc_generated_files/dma1.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;		None
 15939 ;; Auto vars:     Size  Location     Type
 15940 ;;		None
 15941 ;; Return value:  Size  Location     Type
 15942 ;;                  1    wreg      void 
 15943 ;; Registers used:
 15944 ;;		None
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/0
 15947 ;;		On exit  : 3F/39
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15954 ;;Total ram usage:        0 bytes
 15955 ;; Hardware stack levels used:    1
 15956 ;; This function calls:
 15957 ;;		Nothing
 15958 ;; This function is called by:
 15959 ;;		Interrupt level 2
 15960 ;; This function uses a non-reentrant model
 15961 ;;
 15962                           
 15963                           	psect	text102
 15964  006050                     __ptext102:
 15965                           	opt callstack 0
 15966  006050                     _DMA1_DMAA_ISR:
 15967                           	opt callstack 19
 15968                           
 15969                           ; BSR set to: 57
 15970                           ;incstack = 0
 15971  006050  EE13  F130         	lfsr	1,___inthi_sp
 15972                           
 15973                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 15974  006054  0139               	movlb	57	; () banked
 15975  006056  97A2               	bcf	162,3,b	;volatile
 15976                           
 15977                           ; BSR set to: 57
 15978  006058  0011               	retfie		f
 15979  00605A                     __end_of_DMA1_DMAA_ISR:
 15980                           	opt callstack 0
 15981                           
 15982 ;; *************** function _DMA1_DMAOR_ISR *****************
 15983 ;; Defined at:
 15984 ;;		line 154 in file "mcc_generated_files/dma1.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;		None
 15987 ;; Auto vars:     Size  Location     Type
 15988 ;;		None
 15989 ;; Return value:  Size  Location     Type
 15990 ;;                  1    wreg      void 
 15991 ;; Registers used:
 15992 ;;		None
 15993 ;; Tracked objects:
 15994 ;;		On entry : 0/0
 15995 ;;		On exit  : 3F/39
 15996 ;;		Unchanged: 0/0
 15997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16002 ;;Total ram usage:        0 bytes
 16003 ;; Hardware stack levels used:    1
 16004 ;; This function calls:
 16005 ;;		Nothing
 16006 ;; This function is called by:
 16007 ;;		Interrupt level 2
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011                           	psect	text103
 16012  00605C                     __ptext103:
 16013                           	opt callstack 0
 16014  00605C                     _DMA1_DMAOR_ISR:
 16015                           	opt callstack 19
 16016                           
 16017                           ; BSR set to: 57
 16018                           ;incstack = 0
 16019  00605C  EE13  F130         	lfsr	1,___inthi_sp
 16020                           
 16021                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 16022  006060  0139               	movlb	57	; () banked
 16023  006062  95A2               	bcf	162,2,b	;volatile
 16024                           
 16025                           ; BSR set to: 57
 16026  006064  0011               	retfie		f
 16027  006066                     __end_of_DMA1_DMAOR_ISR:
 16028                           	opt callstack 0
 16029                           
 16030 ;; *************** function _TMR5_ISR *****************
 16031 ;; Defined at:
 16032 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 16033 ;; Parameters:    Size  Location     Type
 16034 ;;		None
 16035 ;; Auto vars:     Size  Location     Type
 16036 ;;		None
 16037 ;; Return value:  Size  Location     Type
 16038 ;;                  1    wreg      void 
 16039 ;; Registers used:
 16040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16041 ;; Tracked objects:
 16042 ;;		On entry : 0/0
 16043 ;;		On exit  : 0/0
 16044 ;;		Unchanged: 0/0
 16045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16049 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16050 ;;Total ram usage:        1 bytes
 16051 ;; Hardware stack levels used:    1
 16052 ;; Hardware stack levels required when called:    2
 16053 ;; This function calls:
 16054 ;;		_TMR5_CallBack
 16055 ;;		_TMR5_WriteTimer
 16056 ;; This function is called by:
 16057 ;;		Interrupt level 2
 16058 ;; This function uses a non-reentrant model
 16059 ;;
 16060                           
 16061                           	psect	text104
 16062  005908                     __ptext104:
 16063                           	opt callstack 0
 16064  005908                     _TMR5_ISR:
 16065                           	opt callstack 17
 16066                           
 16067                           ; BSR set to: 57
 16068                           ;incstack = 0
 16069  005908  0060  F120  F0F5   	movff	btemp+11,??_TMR5_ISR
 16070  00590E  EE13  F130         	lfsr	1,___inthi_sp
 16071                           
 16072                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 16073  005912  0139               	movlb	57	; () banked
 16074  005914  9DA8               	bcf	168,6,b	;volatile
 16075                           
 16076                           ; BSR set to: 57
 16077                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 16078  005916  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 16079  00591C  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 16080  005922  EC06  F02C         	call	_TMR5_WriteTimer	;wreg free
 16081                           
 16082                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 16083  005926  4A29               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 16084  005928  2A2A               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 16085  00592A  502A               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 16086  00592C  E104               	bnz	i2u562_40
 16087  00592E  0E32               	movlw	50
 16088  005930  5C29               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 16089  005932  A0D8               	btfss	status,0,c
 16090  005934  D004               	goto	i2l1135
 16091  005936                     i2u562_40:
 16092                           
 16093                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 16094  005936  ECDD  F02E         	call	_TMR5_CallBack	;wreg free
 16095                           
 16096                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 16097  00593A  6A29               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 16098  00593C  6A2A               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 16099  00593E                     i2l1135:
 16100  00593E  0060  F3D4  F048   	movff	??_TMR5_ISR,btemp+11
 16101  005944  0011               	retfie		f
 16102  005946                     __end_of_TMR5_ISR:
 16103                           	opt callstack 0
 16104                           
 16105 ;; *************** function _TMR5_WriteTimer *****************
 16106 ;; Defined at:
 16107 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  timerVal        2  [STACK] unsigned short 
 16110 ;; Auto vars:     Size  Location     Type
 16111 ;;		None
 16112 ;; Return value:  Size  Location     Type
 16113 ;;                  1  [STACK] void 
 16114 ;; Registers used:
 16115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16116 ;; Tracked objects:
 16117 ;;		On entry : 3F/39
 16118 ;;		On exit  : 0/0
 16119 ;;		Unchanged: 0/0
 16120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16125 ;;Total ram usage:        0 bytes
 16126 ;; Hardware stack levels used:    1
 16127 ;; This function calls:
 16128 ;;		Nothing
 16129 ;; This function is called by:
 16130 ;;		_TMR5_ISR
 16131 ;; This function uses a reentrant model
 16132 ;;
 16133                           
 16134                           	psect	text105
 16135  00580C                     __ptext105:
 16136                           	opt callstack 0
 16137  00580C                     _TMR5_WriteTimer:
 16138                           	opt callstack 18
 16139                           
 16140                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 16141                           
 16142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16143                           ;incstack = 0
 16144  00580C  A49A               	btfss	16282,2,c	;volatile
 16145  00580E  D00F               	goto	l3930
 16146                           
 16147                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 16148  005810  909A               	bcf	16282,0,c	;volatile
 16149                           
 16150                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 16151                           ;stkvar	_timerVal @ sp[(0)+-2]
 16152  005812  0EFF               	movlw	255
 16153  005814  24E1               	addwf	fsr1l,w,c
 16154  005816  6ED9               	movwf	fsr2l,c
 16155  005818  0EFF               	movlw	255
 16156  00581A  20E2               	addwfc	fsr1h,w,c
 16157  00581C  6EDA               	movwf	fsr2h,c
 16158  00581E  50DF               	movf	indf2,w,c
 16159  005820  6E99               	movwf	16281,c	;volatile
 16160                           
 16161                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 16162                           ;stkvar	_timerVal @ sp[(0)+-2]
 16163  005822  0EFE               	movlw	-2
 16164  005824  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16165                           
 16166                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 16167  00582A  809A               	bsf	16282,0,c	;volatile
 16168                           
 16169                           ;mcc_generated_files/tmr5.c: 141:  } else {
 16170  00582C  D00C               	goto	l1118
 16171  00582E                     l3930:
 16172                           
 16173                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 16174                           ;stkvar	_timerVal @ sp[(0)+-2]
 16175  00582E  0EFF               	movlw	255
 16176  005830  24E1               	addwf	fsr1l,w,c
 16177  005832  6ED9               	movwf	fsr2l,c
 16178  005834  0EFF               	movlw	255
 16179  005836  20E2               	addwfc	fsr1h,w,c
 16180  005838  6EDA               	movwf	fsr2h,c
 16181  00583A  50DF               	movf	indf2,w,c
 16182  00583C  6E99               	movwf	16281,c	;volatile
 16183                           
 16184                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 16185                           ;stkvar	_timerVal @ sp[(0)+-2]
 16186  00583E  0EFE               	movlw	-2
 16187  005840  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16188  005846                     l1118:
 16189                           
 16190                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 16191  005846  52E5               	movf	postdec1,f,c
 16192  005848  52E5               	movf	postdec1,f,c
 16193  00584A  0012               	return		;funcret
 16194  00584C                     __end_of_TMR5_WriteTimer:
 16195                           	opt callstack 0
 16196                           
 16197 ;; *************** function _TMR5_CallBack *****************
 16198 ;; Defined at:
 16199 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 16200 ;; Parameters:    Size  Location     Type
 16201 ;;		None
 16202 ;; Auto vars:     Size  Location     Type
 16203 ;;		None
 16204 ;; Return value:  Size  Location     Type
 16205 ;;                  1  [STACK] void 
 16206 ;; Registers used:
 16207 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 16208 ;; Tracked objects:
 16209 ;;		On entry : 0/39
 16210 ;;		On exit  : 0/0
 16211 ;;		Unchanged: 0/0
 16212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16217 ;;Total ram usage:        0 bytes
 16218 ;; Hardware stack levels used:    1
 16219 ;; Hardware stack levels required when called:    1
 16220 ;; This function calls:
 16221 ;;		Absolute function
 16222 ;;		_TMR5_DefaultInterruptHandler
 16223 ;; This function is called by:
 16224 ;;		_TMR5_ISR
 16225 ;; This function uses a reentrant model
 16226 ;;
 16227                           
 16228                           	psect	text106
 16229  005DBA                     __ptext106:
 16230                           	opt callstack 0
 16231  005DBA                     _TMR5_CallBack:
 16232                           	opt callstack 17
 16233                           
 16234                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 16235                           
 16236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16237                           ;incstack = 0
 16238  005DBA  0100               	movlb	0	; () banked
 16239  005DBC  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16240  005DBE  1191               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16241  005DC0  1192               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16242  005DC2  B4D8               	btfsc	status,2,c
 16243  005DC4  0012               	return	
 16244                           
 16245                           ; BSR set to: 0
 16246                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 16247  005DC6  D801               	call	u339_48
 16248  005DC8  0012               	return	
 16249  005DCA                     u339_48:
 16250  005DCA  0005               	push	
 16251  005DCC  6EFA               	movwf	pclath,c
 16252  005DCE  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16253  005DD0  6EFD               	movwf	tosl,c
 16254  005DD2  5191               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16255  005DD4  6EFE               	movwf	tosh,c
 16256  005DD6  5192               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16257  005DD8  6EFF               	movwf	tosu,c
 16258  005DDA  50FA               	movf	pclath,w,c
 16259  005DDC  0012               	return		;indir
 16260  005DDE                     __end_of_TMR5_CallBack:
 16261                           	opt callstack 0
 16262                           
 16263 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 16264 ;; Defined at:
 16265 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 16266 ;; Parameters:    Size  Location     Type
 16267 ;;		None
 16268 ;; Auto vars:     Size  Location     Type
 16269 ;;		None
 16270 ;; Return value:  Size  Location     Type
 16271 ;;                  1  [STACK] void 
 16272 ;; Registers used:
 16273 ;;		wreg, status,2, status,0, btemp+11
 16274 ;; Tracked objects:
 16275 ;;		On entry : 3F/0
 16276 ;;		On exit  : 0/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16283 ;;Total ram usage:        0 bytes
 16284 ;; Hardware stack levels used:    1
 16285 ;; This function calls:
 16286 ;;		Nothing
 16287 ;; This function is called by:
 16288 ;;		_TMR5_Initialize
 16289 ;;		_TMR5_CallBack
 16290 ;; This function uses a reentrant model
 16291 ;;
 16292                           
 16293                           	psect	text107
 16294  005F92                     __ptext107:
 16295                           	opt callstack 0
 16296  005F92                     _TMR5_DefaultInterruptHandler:
 16297                           	opt callstack 17
 16298                           
 16299                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 16300                           
 16301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16302                           ;incstack = 0
 16303  005F92  A0BE               	btfss	16318,0,c	;volatile
 16304  005F94  D002               	goto	u321_40
 16305  005F96  0E01               	movlw	1
 16306  005F98  D001               	goto	u321_46
 16307  005F9A                     u321_40:
 16308  005F9A  0E00               	movlw	0
 16309  005F9C                     u321_46:
 16310  005F9C  0AFF               	xorlw	255
 16311  005F9E  6E48               	movwf	btemp+11,c
 16312  005FA0  50BE               	movf	16318,w,c	;volatile
 16313  005FA2  1848               	xorwf	btemp+11,w,c
 16314  005FA4  0BFE               	andlw	-2
 16315  005FA6  1848               	xorwf	btemp+11,w,c
 16316  005FA8  6EBE               	movwf	16318,c	;volatile
 16317                           
 16318                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16319  005FAA  0012               	return		;funcret
 16320  005FAC                     __end_of_TMR5_DefaultInterruptHandler:
 16321                           	opt callstack 0
 16322                           
 16323                           ;
 16324                           ; Interrupt Vector Table @ 0x8
 16325                           ;
 16326                           
 16327                           	psect	ivt0x8
 16328  000008                     __pivt0x8:
 16329                           	opt callstack 0
 16330  000008                     ivt0x8_base:
 16331                           	opt callstack 0
 16332                           
 16333                           ; Vector 0 : SWINT
 16334  000008  1825               	dw	_Default_ISR shr (0+2)
 16335                           
 16336                           ; Vector 1 : HLVD
 16337  00000A  1825               	dw	_Default_ISR shr (0+2)
 16338                           
 16339                           ; Vector 2 : OSF
 16340  00000C  1825               	dw	_Default_ISR shr (0+2)
 16341                           
 16342                           ; Vector 3 : CSW
 16343  00000E  1825               	dw	_Default_ISR shr (0+2)
 16344                           
 16345                           ; Vector 4 : NVM
 16346  000010  1825               	dw	_Default_ISR shr (0+2)
 16347                           
 16348                           ; Vector 5 : SCAN
 16349  000012  1825               	dw	_Default_ISR shr (0+2)
 16350                           
 16351                           ; Vector 6 : CRC
 16352  000014  1825               	dw	_Default_ISR shr (0+2)
 16353                           
 16354                           ; Vector 7 : IOC
 16355  000016  1825               	dw	_Default_ISR shr (0+2)
 16356                           
 16357                           ; Vector 8 : INT0
 16358  000018  17FF               	dw	_INT0_ISR shr (0+2)
 16359                           
 16360                           ; Vector 9 : ZCD
 16361  00001A  1825               	dw	_Default_ISR shr (0+2)
 16362                           
 16363                           ; Vector 10 : AD
 16364  00001C  16B0               	dw	_ADCC_ISR shr (0+2)
 16365                           
 16366                           ; Vector 11 : ADT
 16367  00001E  1825               	dw	_Default_ISR shr (0+2)
 16368                           
 16369                           ; Vector 12 : CMP1
 16370  000020  1825               	dw	_Default_ISR shr (0+2)
 16371                           
 16372                           ; Vector 13 : SMT1
 16373  000022  1825               	dw	_Default_ISR shr (0+2)
 16374                           
 16375                           ; Vector 14 : SMT1PRA
 16376  000024  1825               	dw	_Default_ISR shr (0+2)
 16377                           
 16378                           ; Vector 15 : SMT1PRW
 16379  000026  1825               	dw	_Default_ISR shr (0+2)
 16380                           
 16381                           ; Vector 16 : DMA1SCNT
 16382  000028  180B               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16383                           
 16384                           ; Vector 17 : DMA1DCNT
 16385  00002A  1811               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16386                           
 16387                           ; Vector 18 : DMA1OR
 16388  00002C  1817               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16389                           
 16390                           ; Vector 19 : DMA1A
 16391  00002E  1814               	dw	_DMA1_DMAA_ISR shr (0+2)
 16392                           
 16393                           ; Vector 20 : SPI1RX
 16394  000030  1825               	dw	_Default_ISR shr (0+2)
 16395                           
 16396                           ; Vector 21 : SPI1TX
 16397  000032  1825               	dw	_Default_ISR shr (0+2)
 16398                           
 16399                           ; Vector 22 : SPI1
 16400  000034  1825               	dw	_Default_ISR shr (0+2)
 16401                           
 16402                           ; Vector 23 : I2C1RX
 16403  000036  1825               	dw	_Default_ISR shr (0+2)
 16404                           
 16405                           ; Vector 24 : I2C1TX
 16406  000038  1825               	dw	_Default_ISR shr (0+2)
 16407                           
 16408                           ; Vector 25 : I2C1
 16409  00003A  1825               	dw	_Default_ISR shr (0+2)
 16410                           
 16411                           ; Vector 26 : I2C1E
 16412  00003C  1825               	dw	_Default_ISR shr (0+2)
 16413                           
 16414                           ; Vector 27 : U1RX
 16415  00003E  1751               	dw	_UART1_rx_vect_isr shr (0+2)
 16416                           
 16417                           ; Vector 28 : U1TX
 16418  000040  1747               	dw	_UART1_tx_vect_isr shr (0+2)
 16419                           
 16420                           ; Vector 29 : U1E
 16421  000042  1825               	dw	_Default_ISR shr (0+2)
 16422                           
 16423                           ; Vector 30 : U1
 16424  000044  1825               	dw	_Default_ISR shr (0+2)
 16425                           
 16426                           ; Vector 31 : TMR0
 16427  000046  1825               	dw	_Default_ISR shr (0+2)
 16428                           
 16429                           ; Vector 32 : TMR1
 16430  000048  1825               	dw	_Default_ISR shr (0+2)
 16431                           
 16432                           ; Vector 33 : TMR1G
 16433  00004A  1825               	dw	_Default_ISR shr (0+2)
 16434                           
 16435                           ; Vector 34 : TMR2
 16436  00004C  1825               	dw	_Default_ISR shr (0+2)
 16437                           
 16438                           ; Vector 35 : CCP1
 16439  00004E  1825               	dw	_Default_ISR shr (0+2)
 16440                           
 16441                           ; Vector 36 : Undefined
 16442  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16443                           
 16444                           ; Vector 37 : NCO1
 16445  000052  1825               	dw	_Default_ISR shr (0+2)
 16446                           
 16447                           ; Vector 38 : CWG1
 16448  000054  1825               	dw	_Default_ISR shr (0+2)
 16449                           
 16450                           ; Vector 39 : CLC1
 16451  000056  1825               	dw	_Default_ISR shr (0+2)
 16452                           
 16453                           ; Vector 40 : INT1
 16454  000058  1803               	dw	_INT1_ISR shr (0+2)
 16455                           
 16456                           ; Vector 41 : CMP2
 16457  00005A  1825               	dw	_Default_ISR shr (0+2)
 16458                           
 16459                           ; Vector 42 : DMA2SCNT
 16460  00005C  1825               	dw	_Default_ISR shr (0+2)
 16461                           
 16462                           ; Vector 43 : DMA2DCNT
 16463  00005E  1825               	dw	_Default_ISR shr (0+2)
 16464                           
 16465                           ; Vector 44 : DMA2OR
 16466  000060  1825               	dw	_Default_ISR shr (0+2)
 16467                           
 16468                           ; Vector 45 : DMA2A
 16469  000062  1825               	dw	_Default_ISR shr (0+2)
 16470                           
 16471                           ; Vector 46 : I2C2RX
 16472  000064  1825               	dw	_Default_ISR shr (0+2)
 16473                           
 16474                           ; Vector 47 : I2C2TX
 16475  000066  1825               	dw	_Default_ISR shr (0+2)
 16476                           
 16477                           ; Vector 48 : I2C2
 16478  000068  1825               	dw	_Default_ISR shr (0+2)
 16479                           
 16480                           ; Vector 49 : I2C2E
 16481  00006A  1825               	dw	_Default_ISR shr (0+2)
 16482                           
 16483                           ; Vector 50 : U2RX
 16484  00006C  1765               	dw	_UART2_rx_vect_isr shr (0+2)
 16485                           
 16486                           ; Vector 51 : U2TX
 16487  00006E  175B               	dw	_UART2_tx_vect_isr shr (0+2)
 16488                           
 16489                           ; Vector 52 : U2E
 16490  000070  1825               	dw	_Default_ISR shr (0+2)
 16491                           
 16492                           ; Vector 53 : U2
 16493  000072  1825               	dw	_Default_ISR shr (0+2)
 16494                           
 16495                           ; Vector 54 : TMR3
 16496  000074  1825               	dw	_Default_ISR shr (0+2)
 16497                           
 16498                           ; Vector 55 : TMR3G
 16499  000076  1825               	dw	_Default_ISR shr (0+2)
 16500                           
 16501                           ; Vector 56 : TMR4
 16502  000078  1825               	dw	_Default_ISR shr (0+2)
 16503                           
 16504                           ; Vector 57 : CCP2
 16505  00007A  1825               	dw	_Default_ISR shr (0+2)
 16506                           
 16507                           ; Vector 58 : Undefined
 16508  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16509                           
 16510                           ; Vector 59 : CWG2
 16511  00007E  1825               	dw	_Default_ISR shr (0+2)
 16512                           
 16513                           ; Vector 60 : CLC2
 16514  000080  1825               	dw	_Default_ISR shr (0+2)
 16515                           
 16516                           ; Vector 61 : INT2
 16517  000082  1807               	dw	_INT2_ISR shr (0+2)
 16518                           
 16519                           ; Vector 62 : Undefined
 16520  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16521                           
 16522                           ; Vector 63 : Undefined
 16523  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16524                           
 16525                           ; Vector 64 : Undefined
 16526  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16527                           
 16528                           ; Vector 65 : Undefined
 16529  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16530                           
 16531                           ; Vector 66 : Undefined
 16532  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16533                           
 16534                           ; Vector 67 : Undefined
 16535  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16536                           
 16537                           ; Vector 68 : Undefined
 16538  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16539                           
 16540                           ; Vector 69 : Undefined
 16541  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16542                           
 16543                           ; Vector 70 : TMR5
 16544  000094  1642               	dw	_TMR5_ISR shr (0+2)
 16545                           
 16546                           ; Vector 71 : TMR5G
 16547  000096  1825               	dw	_Default_ISR shr (0+2)
 16548                           
 16549                           ; Vector 72 : TMR6
 16550  000098  17DE               	dw	_TMR6_ISR shr (0+2)
 16551                           
 16552                           ; Vector 73 : CCP3
 16553  00009A  1825               	dw	_Default_ISR shr (0+2)
 16554                           
 16555                           ; Vector 74 : CWG3
 16556  00009C  1825               	dw	_Default_ISR shr (0+2)
 16557                           
 16558                           ; Vector 75 : CLC3
 16559  00009E  1825               	dw	_Default_ISR shr (0+2)
 16560                           
 16561                           ; Vector 76 : Undefined
 16562  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16563                           
 16564                           ; Vector 77 : Undefined
 16565  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16566                           
 16567                           ; Vector 78 : Undefined
 16568  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16569                           
 16570                           ; Vector 79 : Undefined
 16571  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16572                           
 16573                           ; Vector 80 : CCP4
 16574  0000A8  1825               	dw	_Default_ISR shr (0+2)
 16575                           
 16576                           ; Vector 81 : CLC4
 16577  0000AA  1825               	dw	_Default_ISR shr (0+2)
 16578  0000AC                     ivt0x8_undefint:
 16579                           	opt callstack 0
 16580  0000AC  00FF               	reset	
 16581                           
 16582                           	psect	text108
 16583  000000                     __ptext108:
 16584                           	opt callstack 0
 16585                           
 16586                           	psect	rparam
 16587  0000                     
 16588                           	psect	temp
 16589  00003D                     btemp:
 16590                           	opt callstack 0
 16591  00003D                     	ds	32
 16592  0000                     wtemp0	set	btemp
 16593  0000                     wtemp1	set	btemp+2
 16594  0000                     wtemp2	set	btemp+4
 16595  0000                     wtemp3	set	btemp+6
 16596  0000                     wtemp4	set	btemp+8
 16597  0000                     wtemp5	set	btemp+10
 16598  0000                     wtemp8	set	btemp+1
 16599  0000                     ttemp0	set	btemp
 16600  0000                     ttemp1	set	btemp+3
 16601  0000                     ttemp2	set	btemp+6
 16602  0000                     ttemp3	set	btemp+9
 16603  0000                     ttemp5	set	btemp+1
 16604  0000                     ttemp6	set	btemp+4
 16605  0000                     ttemp7	set	btemp+8
 16606  0000                     ltemp0	set	btemp
 16607  0000                     ltemp1	set	btemp+4
 16608  0000                     ltemp2	set	btemp+8
 16609  0000                     lltemp0	set	btemp
 16610  0000                     lltemp1	set	btemp+8
 16611  0000                     lltemp2	set	btemp+16
 16612  0000                     lltemp3	set	btemp+24
 16613                           tosu	equ	0x3FFF
 16614                           tosh	equ	0x3FFE
 16615                           tosl	equ	0x3FFD
 16616                           stkptr	equ	0x3FFC
 16617                           pclatu	equ	0x3FFB
 16618                           pclath	equ	0x3FFA
 16619                           pcl	equ	0x3FF9
 16620                           tblptru	equ	0x3FF8
 16621                           tblptrh	equ	0x3FF7
 16622                           tblptrl	equ	0x3FF6
 16623                           tablat	equ	0x3FF5
 16624                           prodh	equ	0x3FF4
 16625                           prodl	equ	0x3FF3
 16626                           indf0	equ	0x3FEF
 16627                           postinc0	equ	0x3FEE
 16628                           postdec0	equ	0x3FED
 16629                           preinc0	equ	0x3FEC
 16630                           plusw0	equ	0x3FEB
 16631                           fsr0h	equ	0x3FEA
 16632                           fsr0l	equ	0x3FE9
 16633                           wreg	equ	0x3FE8
 16634                           indf1	equ	0x3FE7
 16635                           postinc1	equ	0x3FE6
 16636                           postdec1	equ	0x3FE5
 16637                           preinc1	equ	0x3FE4
 16638                           plusw1	equ	0x3FE3
 16639                           fsr1h	equ	0x3FE2
 16640                           fsr1l	equ	0x3FE1
 16641                           bsr	equ	0x3FE0
 16642                           indf2	equ	0x3FDF
 16643                           postinc2	equ	0x3FDE
 16644                           postdec2	equ	0x3FDD
 16645                           preinc2	equ	0x3FDC
 16646                           plusw2	equ	0x3FDB
 16647                           fsr2h	equ	0x3FDA
 16648                           fsr2l	equ	0x3FD9
 16649                           status	equ	0x3FD8


Data Sizes:
    Strings     162
    Constant    0
    Data        269
    BSS         624
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      62
    BANK0           160      1     150
    BANK1           256      0     237
    BANK2           256      0     248
    BANK3           256      0     198
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_23(CODE[3]), STR_19(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_23(CODE[3]), STR_19(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[21]), 
		 -> STR_12(CODE[17]), STR_11(CODE[6]), STR_10(CODE[14]), STR_9(CODE[19]), 
		 -> STR_8(CODE[20]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[21]), 
		 -> STR_12(CODE[17]), STR_11(CODE[6]), STR_10(CODE[14]), STR_9(CODE[19]), 
		 -> STR_8(CODE[20]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 87
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[87]), 

    a	PTR const unsigned char  size(2) Largest target is 87
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[87]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_13(CODE[21]), STR_12(CODE[17]), STR_11(CODE[6]), STR_10(CODE[14]), 
		 -> STR_9(CODE[19]), STR_8(CODE[20]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 87
		 -> V(BANK0[87]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 87
		 -> V(BANK0[87]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4310_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 87
		 -> V(BANK0[87]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 87
		 -> V(BANK0[87]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[21]), 
		 -> STR_12(CODE[17]), STR_11(CODE[6]), STR_10(CODE[14]), STR_9(CODE[19]), 
		 -> STR_8(CODE[20]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[21]), 
		 -> STR_12(CODE[17]), STR_11(CODE[6]), STR_10(CODE[14]), STR_9(CODE[19]), 
		 -> STR_8(CODE[20]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[87]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[87]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[87]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16618.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16618.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 87
		 -> V(BANK0[87]), 

    S3641response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16607.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3641response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16607.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 87
		 -> V(BANK0[87]), 

    m_link	PTR enum E16164 size(1) Largest target is 87
		 -> V(BANK0[87]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 87
		 -> V(BANK0[87]), 

    strPtr	PTR unsigned char  size(1) Largest target is 87
		 -> V(BANK0[87]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42797
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1823
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     186
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1702
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     864
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    1187
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      15
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              0 BANK0      1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      96       5       93.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37F      58        0.0%
DATA                 0      0     37F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 13 03:13:20 2019

                    _SPI1_Exchange8bit 5EEA                                      _V 0097  
     __end_of_TMR5_SetInterruptHandler 5C7A              __end_of_UART2_is_rx_ready 6076  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
                          __CFG_LVP$ON 000000                                    _H10 0100  
                                  _H12 015F                                    _H13 01BD  
                                  _H14 01AC                                    _H24 017D  
                                  _H17 0198                                    _H27 0141  
                                  _H53 02C0                                    l194 5FD2  
                                  l572 58F2                                    l717 5A64  
                                  l579 5862                                    l692 58B4  
                                  l597 5A38                                    l847 5EF8  
                                  _GIE 01FE97                                    u940 543C  
                                  u965 5470                                    u966 5472  
                                  u958 543E                                    _abs 56F8  
                                  _pad 48B8                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 5E22                           _run_checksum 59BA  
                   _UART1_Transmit_ISR 5A12                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 5E44                           __CFG_ZCD$OFF 000000  
                                 l1221 2FAA                                   l1118 5846  
                                 l1231 306C                                   l1313 55C4  
                                 l1242 31AC                                   l1252 329C  
                                 l1236 30D6                                   l1253 32C8  
                                 l1238 30DA                                   l1248 3258  
                                 l1445 4F94                                   l2513 5738  
                                 l1449 5334                                   l1625 3BD2  
                                 l1660 471E                                   l2535 4ACE  
                                 l1639 3D44                                   l1752 4914  
                                 l1818 2A50                                   l5300 440A  
                                 l1772 2B38                                   l1588 335C  
                                 l2567 48AE                                   l5260 3F5E  
                                 l5308 44B6                                   l5236 5728  
                                 l5254 3F18                                   l1799 39FA  
                                 l5272 4030                                   l5248 3EC4  
                                 l3930 582E                                   l6250 5A60  
                                 l5194 4FC2                                   l6260 5EE6  
                                 l6228 5A34                                   l5196 4FE4  
                                 l5292 4382                                   l5460 478C  
                                 l8020 430C                                   l6238 5EC6  
                                 l8006 42C0                                   l5464 47BC  
                                 l8210 3492                                   l8202 3442  
                                 l8018 42DA                                   l7500 2B28  
                                 l5556 55D6                                   l8300 3C44  
                                 l5830 58CA                                   l8222 3510  
                                 l8214 34C2                                   l8206 3466  
                                 l8302 3C56                                   l7432 49FC  
                                 l7512 2B90                                   l8224 3514  
                                 l8312 3C98                                   l7442 5222  
                                 l7522 2DA2                                   l8250 35A2  
                                 l8234 3538                                   l8154 3326  
                                 l8330 3D1A                                   l8322 3CE2  
                                 l7452 48E4                                   l7508 2B72  
                                 l7620 268A                                   l8500 233E  
                                 l8260 35C8                                   l8340 3D60  
                                 l8316 3CB0                                   l7446 5260  
                                 l7462 495A                                   l7542 2E54  
                                 l5854 588C                                   l8502 2342  
                                 l8422 213C                                   l8254 35B8  
                                 l8318 3CBC                                   l5880 578A  
                                 l7456 490C                                   l7632 27C0  
                                 l7712 3892                                   l7704 37E4  
                                 l8512 2372                                   l8408 20F2  
                                 l8256 35BC                                   l8184 33E4  
                                 l8176 33B4                                   l8352 3D94  
                                 l8344 3D76                                   l7466 49A4  
                                 l7458 491E                                   l7474 535A  
                                 l7546 2E90                                   l5698 5DF8  
                                 l8530 23CA                                   l8442 21B0  
                                 l8186 33F0                                   l8266 35D0  
                                 l8370 3DEC                                   l5884 57B4  
                                 l7476 5386                                   l7660 29E2  
                                 l7644 28E6                                   l7628 276E  
                                 l7724 5194                                   l5892 5AAA  
                                 l8428 2164                                   l8268 3612  
                                 l7900 4132                                   l8372 3DF0  
                                 l8348 3D7E                                   l8292 3C14  
                                 l8380 3E0E                                   l7582 3A9C  
                                 l7574 3A30                                   l7558 397C  
                                 l7654 298E                                   l7670 2A02  
                                 l7726 51D6                                   l8550 2498  
                                 l8542 244A                                   l8534 23EE  
                                 l8526 23AC                                   l8462 2218  
                                 l7750 5882                                   l8198 3424  
                                 l8374 3DF8                                   l8358 3DB0  
                                 l8382 3E50                                   l7592 3B52  
                                 l7664 29E6                                   l7840 59C8  
                                 l8552 249C                                   l8480 2270  
                                 l8456 21FC                                   l7752 5884  
                                 l7920 418A                                   l8376 3E00  
                                 l8368 3DDE                                   l8712 30BE  
                                 l8624 2EEA                                   l7578 3A6C  
                                 l7826 512A                                   l8562 24C0  
                                 l8538 241A                                   l8394 20A8  
                                 l7930 41AC                                   l7906 4150  
                                 l7596 3B8E                                   l7588 3B26  
                                 l7692 36BC                                   l8580 252C  
                                 l8492 22F0                                   l8484 2294  
                                 l8476 2252                                   l7764 5A8C  
                                 l7932 41D2                                   l8708 30A8  
                                 l8636 2F0C                                   l8590 254A  
                                 l8582 2530                                   l7782 4BDC  
                                 l7870 46B6                                   l7950 41F6  
                                 l8734 3192                                   l8726 3128  
                                 l8584 2538                                   l8488 22C0  
                                 l7880 4718                                   l7952 4210  
                                 l8760 3222                                   l8744 31B6  
                                 l8728 315A                                   l7698 377A  
                                 l8586 253C                                   l8578 251E  
                                 l8594 2558                                   l7786 4C4E  
                                 l7866 469C                                   l7858 45EE  
                                 l8770 325C                                   l8690 3048  
                                 l8666 2FC8                                   l8588 2544  
                                 l8596 259A                                   l7980 4248  
                                 l8756 3212                                   l8772 3288  
                                 l8684 3034                                   l7878 46F0  
                                 l7982 4286                                   l7886 40F4  
                                 l8694 3060                                   l8686 3038  
                                 l8782 32A0                                   l7968 422E  
                                 STR_1 204E                                   STR_2 207C  
                                 STR_3 2094                                   STR_4 205F  
                                 STR_5 206E                                   STR_6 208E  
                                 STR_7 2088                                   STR_8 2016  
                                 STR_9 202A                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2400 3F58                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2410 3F8A  
                                 _LATF 003FBF                                   u2500 43D2  
                                 u2340 570C                                   u2270 5012  
                                 u2430 4068                                   u2510 4404  
                                 u2360 3EBE                                   u2520 4436  
                                 u2450 40BA                                   u2380 3F14  
                                 u2540 44EE                                   u2277 5004  
                                 u2391 3F1E                                   u4320 49F0  
                                 u2560 4540                                   u2480 437C  
                                 u5105 3582                                   u5107 3586  
                                 u4340 4A6C                                   u4500 2DB6  
                                 u4420 2A8A                                   u2900 4864  
                                 u4430 2A8C                                   u4511 2DE6  
                                 u4520 2DFC                                   u4521 2DFA  
                                 u4530 2E10                                   u4450 2AFC  
                                 _T6PR 003F93                                   u4540 2E14  
                                 _PMD0 0039C0                                   u5085 3562  
                                 u5181 3CD6                                   _PMD1 0039C1  
                                 u4470 2B0E                                   u4630 3A92  
                                 u4710 26DA                                   _PMD2 0039C2  
                                 u5095 3572                                   u5087 3566  
                                 _PMD3 0039C3                                   u4560 2E2A  
                                 u4640 3AD8                                   u4800 3906  
                                 _PMD4 0039C4                                   u5097 3576  
                                 _PMD5 0039C5                                   u4490 2B5E  
                                 u4730 2818                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u4900 45E8  
                                 u5700 3078                                   u4670 3BB4  
                                 u4647 3ACA                                   u5706 307A  
                                 u5740 3204                                   u5660 3042  
                                 u5575 24EA                                   u4880 511A  
                                 u5760 324E                                   u5585 24FA  
                                 u5577 24EE                                   u5746 3206  
                                 u5595 250A                                   u5587 24FE  
                                 u5597 250E                                   u5766 3250  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 5E66  
                     __end_of_ADCC_ISR 5AEA                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01CD                                   _ctoa 533C  
                                 _main 2EDA                                   _dtoa 2A5A  
                                 _prec 0025                                   _nout 0093  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3910  
                                 btemp 003D      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 002B              __end_of_SPI1_Exchange8bit 5F08  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5D44  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005E             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 600A                       __end_of_INT1_ISR 601A  
                     __end_of_INT2_ISR 602A         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 4F9C          __end_of_OSCILLATOR_Initialize 5FD8  
                                PRLOCK 0039EF                        __end_of___aodiv 40E2  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 4564  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 206E                                  STR_11 2088  
                                STR_12 203D                                  STR_21 209D  
                                STR_13 2001                                  STR_14 2085  
                                STR_23 209D                                  STR_15 20A0  
                                STR_17 209A                          __CFG_WDTE$OFF 000000  
                                STR_19 209A                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005E                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 6094  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5D1C  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5946  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 5F92  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002F  
                                _flags 0027                                  _fputc 49CC  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 5212  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005E  
                                _width 0023                                  _putch 5F5C  
             _INT1_SetInterruptHandler 5CA2                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003D                                  ttemp1 0040  
                                ttemp2 0043                                  ttemp3 0046  
                                ttemp5 003E                                  ttemp6 0041  
                                ttemp7 0045                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5C02            _UART1_SetRxInterruptHandler 5BDA  
                                wtemp0 003D                                  wtemp1 003F  
                                wtemp2 0041                                  wtemp3 0043  
                                wtemp4 0045                                  wtemp5 0047  
                                wtemp8 003E                        __end_of_sprintf 4EF2  
                      __end_of_strncmp 48B8                    ??_UART1_tx_vect_isr 005E  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5D6A  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 573E  
                __end_of_ringBufS_init 5B62                        __initialization 4D62  
                    _UART2_rx_vect_isr 5D94                           __end_of_ctoa 53C4  
                         __end_of_main 3322                           __end_of_dtoa 2EDA  
                         __end_of_stoa 3BCE             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005E  
             _TMR5_SetInterruptHandler 5C52                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005E              __end_of_UART1_tx_vect_isr 5D42  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5C02  
                     _UART1_Initialize 5494                      _UART2_tx_vect_isr 5D6C  
                   _UART2_Transmit_ISR 5A3E                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005E  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1135 593E  
                               u114_48 5E30                         __CFG_WDTCCS$SC 000000  
                               u116_48 5E52                                 u118_48 5E74  
                               u321_40 5F9A                                 u321_46 5F9C  
                               _SCANPR 0039F7                                 u337_48 5E96  
                               u339_48 5DCA                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 5662                    ??_UART2_tx_vect_isr 005E  
            __end_of_UART2_rx_vect_isr 5DBA             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 603A                       _UART2_Initialize 555A  
                               _WaitMs 5A94   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 52AA  
                               _memset 3624                                 clear_0 4DE2  
                               clear_1 4DEE                                 clear_2 4DFA  
                               clear_3 4E06                                 clear_4 4E12  
                               _printf 54F8                     _eaDogM_WriteString 50DE  
                            ?_ADCC_ISR 005E                                 _strlen 4F9C  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 56AE  
                       _PMD_Initialize 5FD8   __end_of_INT2_DefaultInterruptHandler 60A0  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 609E  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 5D92  
                               lltemp0 003D                                 lltemp1 0045  
                               lltemp2 004D                                 lltemp3 0055  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 5614                       __end_of_vfprintf 5212  
                           _StartTimer 5946                        _CLC1_Initialize 5E00  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5784  
                    _SYSTEM_Initialize 57CA                             __accesstop 0060  
              __end_of__initialization 4E24                              ?_INT0_ISR 005E  
                            ?_INT1_ISR 005E                              ?_INT2_ISR 005E  
            __end_of_CLKREF_Initialize 6044                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 580C  
               __end_of_ringBufS_flush 533C                         __pcstackCOMRAM 005E  
                           ___inthi_sp 0D30                           __pidataBANK0 607E  
                         __pidataBANK1 4C94                           __pidataBANK2 5982  
                            ?_TMR5_ISR 005E                              ?_TMR6_ISR 005E  
                       ivt0x8_undefint 00AC                          __end_of_fputc 4AD8  
                        __end_of_fputs 52AA                  __end_of_TMR5_CallBack 5DDE  
                        __end_of_putch 5F76                __end_of_TMR6_Initialize 5C2A  
               __end_of_PMD_Initialize 5FEC                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005E                  __end_of_TMR6_CallBack 5EAA  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 6050       __end_of_INT2_SetInterruptHandler 5CA2  
             _UART2_RxInterruptHandler 0017              __end_of_SYSTEM_Initialize 580C  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5F40                             __pbssBANK0 0060  
                           __pbssBANK1 01CD                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 0020  
                           ??_INT0_ISR 005E                             ??_INT1_ISR 005E  
                           ??_INT2_ISR 005E                      __end_of_TimerDone 5E00  
                     _DMA1_DMADCNT_ISR 6044              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 5F24                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5C52                __end_of_ADCC_Initialize 56F8  
                           ??_TMR5_ISR 00F5                             ??_TMR6_ISR 005E  
                   __size_of_secs_send 01C4                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 5EAA  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005E  
                     _DMA1_DMASCNT_ISR 602C                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5E22                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005E  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 5F5C                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 584C                     __end_of_UART1_Read 5906  
                   __end_of_UART2_Read 58C8      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 54F8                        __size_of_WaitMs 002A  
                              ___aodiv 3E62                                ___aomod 4324  
                           _m_protocol 20A4              __end_of_UART1_Receive_ISR 5ECA  
                         __psmallconst 2000                   __end_of_init_display 4BC2  
                              __pcinit 4D62                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 5FEC                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 2EDA                                __ptext1 3BCE  
                              __ptext2 40E2                                __ptext3 4E2A  
                              __ptext4 3322                                __ptext5 4564  
                              __ptext6 4BC2                                __ptext7 5A6A  
                              __ptext8 6066                                __ptext9 584C  
                    _UART2_Receive_ISR 5ECA                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us246999 40CC                                us257999 4552  
                              us441999 2A74                  _OSCILLATOR_Initialize 5FC2  
                         __size_of_abs 0046                                _r_block 0060  
                              us458999 3922                           __size_of_pad 0114  
                              us494999 4316                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 55B8  
                   m_protocol@rxData_l 0030             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 4E2A                                _strncmp 4728  
                 end_of_initialization 4E24                      __end_of_secs_send 4728  
             _INT2_SetInterruptHandler 5C7A               __size_of_secs_II_message 0242  
                           _r_protocol 3322    __end_of_UART1_SetTxInterruptHandler 5BDA  
          _UART1_SetTxInterruptHandler 5BB2    __end_of_UART2_SetRxInterruptHandler 5BB2  
          _UART2_SetRxInterruptHandler 5B8A                             _t_protocol 3BCE  
                    __end_of_vfpfcnvrt 2A5A                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 6092              __end_of_UART2_Receive_ISR 5EEA  
                       wdtdelay@dcount 008C                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005F                         _block_checksum 4BC2  
                _INT1_InterruptHandler 001D                              _PORTDbits 003FCD  
             _TMR6_SetInterruptHandler 5C2A                  _TMR5_InterruptHandler 0090  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5D1A            _ADCC_SetADIInterruptHandler 5CF2  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 53C4                        _SPI1_Initialize 5FAC  
                     _UART1_put_buffer 5A6A                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 5ABE           __end_of_INTERRUPT_Initialize 5494  
               __end_of_block_checksum 4C94   __end_of_INT0_DefaultInterruptHandler 609C  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 609A  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 60A2  
                    __size_of_TMR5_ISR 003E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3910  
                       __end_of_printf 555A               __end_of_DMA1_DMADCNT_ISR 604E  
                __end_of_INT0_CallBack 5E44                         __end_of_strlen 503E  
                  start_initialization 4D62   __end_of_TMR5_DefaultInterruptHandler 5FAC  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 5F92  
      __size_of_PIN_MANAGER_Initialize 00A0                            __end_of_abs 573E  
                __end_of_INT1_CallBack 5E66                            __end_of_pad 49CC  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 5B3A  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 5E88  
                 secs_II_message@block 0001                          _uart1RxBuffer 0240  
                        _uart1TxBuffer 0280                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 603A                          _uart2TxBuffer 0300  
                       _DMA1_DMAOR_ISR 605C                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 009C  
                            _TimerDone 5DDE                          _ringBufS_init 5B3A  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 00EE                            __pdataBANK1 0100  
                          __pdataBANK2 02C0             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 56AE                        run_checksum@sum 0095  
      __end_of_eaDogM_WriteStringAtPos 5A12                __end_of_DMA1_Initialize 542E  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 5CF2  
                        __pcstackBANK0 00F5                __end_of_SPI1_Initialize 5FC2  
             _UART1_RxInterruptHandler 0011               _UART2_TxInterruptHandler 0014  
                  __size_of_m_protocol 0508              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4AD8                 __end_of_DMA1_DMAOR_ISR 6066  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 001A  
                _TMR6_InterruptHandler 0008                 __size_of_TMR6_CallBack 0022  
               _PIN_MANAGER_Initialize 503E                   __end_of_wait_lcd_set 608C  
                            __ptext100 602C                              __ptext101 6044  
                            __ptext102 6050                              __ptext103 605C  
                            __ptext104 5908                              __ptext105 580C  
                            __ptext106 5DBA                              __ptext107 5F92  
                            __ptext108 0000                     __end_of_StartTimer 5982  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5AC0                    __size_of_r_protocol 0302  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 0294  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 542E  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005E                               _INT0_ISR 5FFC  
                             _INT1_ISR 600C                               _INT2_ISR 601C  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 4564                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               i2u410_48 5D56  
                             i2u412_48 5D7E                               i2u414_48 5DA6  
                             i2u408_48 5D2E                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u198_48 5AD6                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               i2u562_40 5936  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5A3E                               _TMR5_ISR 5908  
                             _TMR6_ISR 5F78                              _vfpfcnvrt 25AC  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 5DBA  
                            _start_lcd 608C              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 5E88               __end_of_UART1_put_buffer 5A94  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 588A               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4D76  
                            copy_data1 4D98                              copy_data2 4DBA  
             _INT0_SetInterruptHandler 5CCA                 _uart1TxBufferRemaining 003A  
  __end_of_UART2_SetTxInterruptHandler 5B8A            _UART2_SetTxInterruptHandler 5B62  
                         _uart1RxCount 0037                           _uart2RxCount 0031  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 59E6  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 5F08                           _send_lcd_cmd 5B12  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 5F24                  __end_of_DMA1_DMAA_ISR 605A  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005E  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 5FFA  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005F  
                             __ptext10 20A4                               __ptext11 59BA  
                             __ptext20 5AEA                               __ptext12 5A94  
                             __ptext21 5B12                               __ptext13 5DDE  
                             __ptext30 55B8                               __ptext22 5EEA  
                             __ptext14 5946                               __ptext31 608C  
                             __ptext23 5B3A                               __ptext15 606E  
                             __ptext40 56F8                               __ptext32 52AA  
                             __ptext24 59E6                               __ptext16 588A  
                             __ptext41 4324                               __ptext33 3624  
                             __ptext25 50DE                               __ptext17 6076  
                             __ptext50 57CA                               __ptext42 3E62  
                             __ptext34 54F8                               __ptext26 5FEC  
                             __ptext18 58C8                               __ptext51 555A  
                             __ptext43 533C                               __ptext35 517A  
                             __ptext27 5614                               __ptext19 4AD8  
                             __ptext60 5C52                               __ptext52 5B62  
                             __ptext44 48B8                               __ptext36 25AC  
                             __ptext28 6086                               __ptext61 5FAC  
                             __ptext53 5B8A                               __ptext45 4F9C  
                             __ptext37 4728                               __ptext29 5F08  
                             __ptext70 5CCA                               __ptext62 5FD8  
                             __ptext54 5494                               __ptext46 5212  
                             __ptext38 3910                               __ptext71 5F40  
                             __ptext63 503E                               __ptext55 5BB2  
                             __ptext47 49CC                               __ptext39 2A5A  
                             __ptext80 600C                               __ptext72 53C4  
                             __ptext64 5FC2                               __ptext56 5BDA  
                             __ptext48 5F5C                               __ptext81 5E44  
                             __ptext73 603A                               __ptext65 5F24  
                             __ptext57 5C02                               __ptext49 4EF2  
                             __ptext90 5A12                               __ptext82 609C  
                             __ptext74 5E00                               __ptext66 542E  
                             __ptext58 5C2A                               __ptext91 5D44  
                             __ptext83 601C                               __ptext75 56AE  
                             __ptext67 5662                               __ptext59 573E  
                             __ptext92 5EAA                               __ptext84 5E66  
                             __ptext76 5CF2                               __ptext68 5C7A  
                             __ptext93 5D6C                               __ptext85 609E  
                             __ptext77 5FFC                               __ptext69 5CA2  
                             __ptext94 5A3E                               __ptext86 6094  
                             __ptext78 5E22                               __ptext95 5D94  
                             __ptext87 5AC0                               __ptext79 609A  
                             __ptext96 5ECA                               __ptext88 60A0  
                             __ptext97 5F78                               __ptext89 5D1C  
                             __ptext98 5E88                               __ptext99 5784  
                      _secs_II_message 40E2               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 4EF2                     __end_of_m_protocol 25AC  
                        __size_of_ctoa 0088                          __size_of_main 0448  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005E                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 000B  
                            stoa@F1144 00EE                     ??_DMA1_DMASCNT_ISR 005F  
                             _spi_link 006D                               _wdtdelay 55B8  
           __end_of_UART2_Transmit_ISR 5A6A                               _vfprintf 517A  
                    _UART1_is_rx_ready 6076                            _UART1_Write 584C  
 __end_of_INT1_DefaultInterruptHandler 609E  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 609C                      _UART1_is_tx_ready 6066  
                      r_protocol@retry 005D                      t_protocol@requeue 002D  
                        ??_Default_ISR 005E                     __end_of_r_protocol 3624  
                          _uart1RxHead 0039                            _uart1TxHead 003C  
                          _uart2RxHead 0033                            _uart1RxTail 0038  
                          _uart2TxHead 0036                            _uart1TxTail 003B  
                          _uart2RxTail 0032                            _uart2TxTail 0035  
                         _wait_lcd_set 6086                     _EXT_INT_Initialize 5662  
 __end_of_TMR6_DefaultInterruptHandler 57CA  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5784                     __end_of_t_protocol 3E62  
 __end_of_ADCC_DefaultInterruptHandler 60A2  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 60A0                               intlevel2 0000  
                    _send_lcd_cmd_long 5AEA                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 517A                __end_of_NCO1_Initialize 5F40  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 607E  
                           _UART1_Read 58C8                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 588A              __end_of_UART1_is_tx_ready 606E  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 606E  
               _uart2TxBufferRemaining 0034                       _send_lcd_cmd_dma 5614  
                TMR5_ISR@CountCallBack 0029                __end_of_secs_II_message 4324  
     __end_of_INT1_SetInterruptHandler 5CCA              __size_of_UART1_Initialize 0064  
                      t_protocol@block 0085                       ??_DMA1_DMAOR_ISR 005F  
             _UART1_TxInterruptHandler 000E                        t_protocol@retry 002E  
            __end_of_send_lcd_cmd_long 5B12                    __end_of_Default_ISR 609A  
       __end_of_PIN_MANAGER_Initialize 50DE                  __size_of_run_checksum 002C  
              _eaDogM_WriteStringAtPos 59E6              __size_of_UART2_Initialize 005E  
