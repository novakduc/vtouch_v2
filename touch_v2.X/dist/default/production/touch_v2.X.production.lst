

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 23 15:16:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK6,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	text0,global,reloc=2,class=CODE,delta=1
    29                           	psect	text1,global,reloc=2,class=CODE,delta=1
    30                           	psect	text2,global,reloc=2,class=CODE,delta=1
    31                           	psect	text3,global,reloc=2,class=CODE,delta=1
    32                           	psect	text4,global,reloc=2,class=CODE,delta=1
    33                           	psect	text5,global,reloc=2,class=CODE,delta=1
    34                           	psect	text6,global,reloc=2,class=CODE,delta=1
    35                           	psect	text7,global,reloc=2,class=CODE,delta=1
    36                           	psect	text8,global,reloc=2,class=CODE,delta=1
    37                           	psect	text9,global,reloc=2,class=CODE,delta=1
    38                           	psect	text10,global,reloc=2,class=CODE,delta=1
    39                           	psect	text11,global,reloc=2,class=CODE,delta=1
    40                           	psect	text12,global,reloc=2,class=CODE,delta=1
    41                           	psect	text13,global,reloc=2,class=CODE,delta=1
    42                           	psect	text14,global,reloc=2,class=CODE,delta=1
    43                           	psect	text15,global,reloc=2,class=CODE,delta=1
    44                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text17,global,reloc=2,class=CODE,delta=1
    46                           	psect	text18,global,reloc=2,class=CODE,delta=1
    47                           	psect	text19,global,reloc=2,class=CODE,delta=1
    48                           	psect	text20,global,reloc=2,class=CODE,delta=1
    49                           	psect	text21,global,reloc=2,class=CODE,delta=1
    50                           	psect	text22,global,reloc=2,class=CODE,delta=1
    51                           	psect	text23,global,reloc=2,class=CODE,delta=1
    52                           	psect	text24,global,reloc=2,class=CODE,delta=1
    53                           	psect	text25,global,reloc=2,class=CODE,delta=1
    54                           	psect	text26,global,reloc=2,class=CODE,delta=1
    55                           	psect	text27,global,reloc=2,class=CODE,delta=1
    56                           	psect	text28,global,reloc=2,class=CODE,delta=1
    57                           	psect	text29,global,reloc=2,class=CODE,delta=1
    58                           	psect	text30,global,reloc=2,class=CODE,delta=1
    59                           	psect	text31,global,reloc=2,class=CODE,delta=1
    60                           	psect	text32,global,reloc=2,class=CODE,delta=1
    61                           	psect	text33,global,reloc=2,class=CODE,delta=1
    62                           	psect	text34,global,reloc=2,class=CODE,delta=1
    63                           	psect	text35,global,reloc=2,class=CODE,delta=1
    64                           	psect	text36,global,reloc=2,class=CODE,delta=1
    65                           	psect	text37,global,reloc=2,class=CODE,delta=1
    66                           	psect	text38,global,reloc=2,class=CODE,delta=1
    67                           	psect	text39,global,reloc=2,class=CODE,delta=1
    68                           	psect	text40,global,reloc=2,class=CODE,delta=1
    69                           	psect	text41,global,reloc=2,class=CODE,delta=1
    70                           	psect	text42,global,reloc=2,class=CODE,delta=1
    71                           	psect	text43,global,reloc=2,class=CODE,delta=1
    72                           	psect	text44,global,reloc=2,class=CODE,delta=1
    73                           	psect	text45,global,reloc=2,class=CODE,delta=1
    74                           	psect	text46,global,reloc=2,class=CODE,delta=1
    75                           	psect	text47,global,reloc=2,class=CODE,delta=1
    76                           	psect	text48,global,reloc=2,class=CODE,delta=1
    77                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text52,global,reloc=2,class=CODE,delta=1
    81                           	psect	text53,global,reloc=2,class=CODE,delta=1
    82                           	psect	text54,global,reloc=2,class=CODE,delta=1
    83                           	psect	text55,global,reloc=2,class=CODE,delta=1
    84                           	psect	text56,global,reloc=2,class=CODE,delta=1
    85                           	psect	text57,global,reloc=2,class=CODE,delta=1
    86                           	psect	text58,global,reloc=2,class=CODE,delta=1
    87                           	psect	text59,global,reloc=2,class=CODE,delta=1
    88                           	psect	text60,global,reloc=2,class=CODE,delta=1
    89                           	psect	text61,global,reloc=2,class=CODE,delta=1
    90                           	psect	text62,global,reloc=2,class=CODE,delta=1
    91                           	psect	text63,global,reloc=2,class=CODE,delta=1
    92                           	psect	text64,global,reloc=2,class=CODE,delta=1
    93                           	psect	text65,global,reloc=2,class=CODE,delta=1
    94                           	psect	text66,global,reloc=2,class=CODE,delta=1
    95                           	psect	text67,global,reloc=2,class=CODE,delta=1
    96                           	psect	text68,global,reloc=2,class=CODE,delta=1
    97                           	psect	text69,global,reloc=2,class=CODE,delta=1
    98                           	psect	text70,global,reloc=2,class=CODE,delta=1
    99                           	psect	text71,global,reloc=2,class=CODE,delta=1
   100                           	psect	text72,global,reloc=2,class=CODE,delta=1
   101                           	psect	text73,global,reloc=2,class=CODE,delta=1
   102                           	psect	text74,global,reloc=2,class=CODE,delta=1
   103                           	psect	text75,global,reloc=2,class=CODE,delta=1
   104                           	psect	text76,global,reloc=2,class=CODE,delta=1
   105                           	psect	text77,global,reloc=2,class=CODE,delta=1
   106                           	psect	text78,global,reloc=2,class=CODE,delta=1
   107                           	psect	text79,global,reloc=2,class=CODE,delta=1
   108                           	psect	text80,global,reloc=2,class=CODE,delta=1
   109                           	psect	text81,global,reloc=2,class=CODE,delta=1
   110                           	psect	text82,global,reloc=2,class=CODE,delta=1
   111                           	psect	text83,global,reloc=2,class=CODE,delta=1
   112                           	psect	text84,global,reloc=2,class=CODE,delta=1
   113                           	psect	text85,global,reloc=2,class=CODE,delta=1
   114                           	psect	text86,global,reloc=2,class=CODE,delta=1
   115                           	psect	text87,global,reloc=2,class=CODE,delta=1
   116                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text91,global,reloc=2,class=CODE,delta=1
   120                           	psect	text92,global,reloc=2,class=CODE,delta=1
   121                           	psect	text93,global,reloc=2,class=CODE,delta=1
   122                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text98,global,reloc=2,class=CODE,delta=1
   127                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text102,global,reloc=2,class=CODE,delta=1
   131                           	psect	text103,global,reloc=2,class=CODE,delta=1
   132                           	psect	text104,global,reloc=2,class=CODE,delta=1
   133                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text108,global,reloc=2,class=CODE,delta=1
   137                           	psect	text109,global,reloc=2,class=CODE,delta=1
   138                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	text114,global,reloc=2,class=CODE,delta=1
   143                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text118,global,reloc=2,class=CODE,delta=1
   147                           	psect	text119,global,reloc=2,class=CODE,delta=1,inline
   148                           	psect	text120,global,reloc=4,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=4,class=CODE,delta=1
   152                           	psect	text124,global,reloc=2,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	text126,global,reloc=4,class=CODE,delta=1
   155                           	psect	text127,global,reloc=4,class=CODE,delta=1
   156                           	psect	text128,global,reloc=2,class=CODE,delta=1
   157                           	psect	text129,global,reloc=4,class=CODE,delta=1
   158                           	psect	text130,global,reloc=2,class=CODE,delta=1
   159                           	psect	text131,global,reloc=4,class=CODE,delta=1
   160                           	psect	text132,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=4,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=4,class=CODE,delta=1
   164                           	psect	text136,global,reloc=2,class=CODE,delta=1
   165                           	psect	text137,global,reloc=4,class=CODE,delta=1
   166                           	psect	text138,global,reloc=2,class=CODE,delta=1
   167                           	psect	text139,global,reloc=2,class=CODE,delta=1
   168                           	psect	text140,global,reloc=4,class=CODE,delta=1
   169                           	psect	text141,global,reloc=4,class=CODE,delta=1
   170                           	psect	text142,global,reloc=4,class=CODE,delta=1
   171                           	psect	text143,global,reloc=4,class=CODE,delta=1
   172                           	psect	text144,global,reloc=4,class=CODE,delta=1
   173                           	psect	text145,global,reloc=2,class=CODE,delta=1
   174                           	psect	text146,global,reloc=2,class=CODE,delta=1
   175                           	psect	text147,global,reloc=2,class=CODE,delta=1
   176                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   177                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   178                           	psect	text148,global,reloc=2,class=CODE,delta=1
   179                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   180                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   181  0000                     
   182                           ; Version 2.10
   183                           ; Generated 31/07/2019 GMT
   184                           ; 
   185                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   186                           ; All rights reserved.
   187                           ; 
   188                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   189                           ; 
   190                           ; Redistribution and use in source and binary forms, with or without modification, are
   191                           ; permitted provided that the following conditions are met:
   192                           ; 
   193                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   194                           ;        conditions and the following disclaimer.
   195                           ; 
   196                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   197                           ;        of conditions and the following disclaimer in the documentation and/or other
   198                           ;        materials provided with the distribution.
   199                           ; 
   200                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   201                           ;        software without specific prior written permission.
   202                           ; 
   203                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   204                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   205                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   206                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   207                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   208                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   209                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   210                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   211                           ; 
   212                           ; 
   213                           ; Code-generator required, PIC18F57K42 Definitions
   214                           ; 
   215                           ; SFR Addresses
   216  0000                     
   217 ;;_s	offset	0
   218 ;;_mode	offset	2
   219 ;;_rxData	offset	0
   220 ;;_t_link	offset=-2 (param)
   221 ;;_k	offset	0
   222 ;;_checksum	offset	2
   223 ;;_i	offset	4
   224 ;;_byte_block	offset=-2 (param)
   225 ;;_length	offset=-3 (param)
   226 ;;_fake	offset=-4 (param)
   227 ;;_s_uart	offset=-5 (param)
   228 ;;_i	offset	0
   229 ;;_sum	offset	2
   230 ;;_byte_block	offset=-2 (param)
   231 ;;_byte_count	offset=-4 (param)
   232 ;;_bufData	offset=-1 (param)
   233 ;;_txData	offset=-1 (param)
   234 ;;_bufData	offset=-1 (param)
   235 ;;_ceid	offset	0
   236 ;;_i	offset	4
   237 ;;_stream	offset=-6 (param)
   238 ;;_function	offset=-7 (param)
   239 ;;_block	offset=-1 (param)
   240 ;;_sid	offset=-2 (param)
   241 ;;_s	offset=-2 (param)
   242 ;;_rxData	offset	0
   243 ;;_r_link	offset=-2 (param)
   244 ;;_txData	offset=-1 (param)
   245 ;;_rxData	offset	0
   246 ;;_m_link	offset=-2 (param)
   247 ;;_stream	offset=-1 (param)
   248 ;;_function	offset=-2 (param)
   249 ;;_t_format	offset=-1 (param)
   250 ;;_sid	offset=-1 (param)
   251 ;;_j	offset	0
   252 ;;_k	offset	2
   253 ;;_i	offset	4
   254 ;;_z	offset	6
   255 ;;_data	offset=-2 (param)
   256 ;;_msg_data	offset	0
   257 ;;_stream	offset=-1 (param)
   258 ;;_function	offset=-2 (param)
   259 ;;_dtime	offset=-4 (param)
   260 ;;_i	offset	0
   261 ;;_stream	offset=-1 (param)
   262 ;;_function	offset=-2 (param)
   263 ;;_dtime	offset=-4 (param)
   264 ;;_msg_data	offset=-6 (param)
   265 ;;_GIEBitValue	offset	0
   266 ;;_bAdd	offset=-2 (param)
   267 ;;_bData	offset=-3 (param)
   268 ;;_byte_block	offset=-1 (param)
   269 ;;_clear	offset=-2 (param)
   270 ;;_readValue	offset	0
   271 ;;_readValue	offset	0
   272 ;;_cmd	offset=-1 (param)
   273 ;;_cmd	offset=-1 (param)
   274 ;;_data	offset=-1 (param)
   275 ;;__this	offset=-2 (param)
   276 ;;_cmd	offset=-1 (param)
   277 ;;_flipper	offset=-1 (param)
   278 ;;_numMilliseconds	offset=-2 (param)
   279 ;;_vterm	offset=-1 (param)
   280 ;;_new_response_info	offset=-1 (param)
   281 ;;_new_response_info	offset=-1 (param)
   282 ;;_level	offset=-2 (param)
   283 ;;_dutyValue	offset=-2 (param)
   284 ;;_timer	offset=-1 (param)
   285 ;;_count	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_state	offset	0
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_r	offset=-1 (param)
   297 ;;_c	offset=-2 (param)
   298 ;;_strPtr	offset=-4 (param)
   299 ;;_vterm	offset=-1 (param)
   300 ;;_r	offset=-1 (param)
   301 ;;_c	offset=-2 (param)
   302 ;;_strPtr	offset=-4 (param)
   303 ;;_strPtr	offset=-1 (param)
   304 ;;_delay	offset=-4 (param)
   305 ;;_strPtr	offset=-2 (param)
   306 ;;__this	offset=-2 (param)
   307 ;;_clearBuffer	offset=-3 (param)
   308 ;;_s	offset	0
   309 ;;_k	offset	2
   310 ;;_dest	offset=-2 (param)
   311 ;;_c	offset=-4 (param)
   312 ;;_n	offset=-6 (param)
   313 ;;_ap	offset	0
   314 ;;_fmt	offset=-3 (param)
   315 ;;_f	offset	0
   316 ;;_ap	offset	6
   317 ;;_s	offset=-3 (param)
   318 ;;_fmt	offset=-5 (param)
   319 ;;_cfmt	offset	0
   320 ;;_fp	offset=-2 (param)
   321 ;;_fmt	offset=-4 (param)
   322 ;;_ap	offset=-6 (param)
   323 ;;_vfpfcnvrt$5082	offset	0
   324 ;;_vfpfcnvrt$5081	offset	2
   325 ;;_llu	offset	4
   326 ;;_ll	offset	12
   327 ;;_vp	offset	20
   328 ;;_done	offset	22
   329 ;;_cp	offset	24
   330 ;;_c	offset	26
   331 ;;_fp	offset=-2 (param)
   332 ;;_fmt	offset=-4 (param)
   333 ;;_ap	offset=-6 (param)
   334 ;;_xtoa$5067	offset	0
   335 ;;_xtoa$5066	offset	2
   336 ;;_n	offset	4
   337 ;;_c	offset	12
   338 ;;_i	offset	14
   339 ;;_w	offset	16
   340 ;;_p	offset	18
   341 ;;_fp	offset=-2 (param)
   342 ;;_d	offset=-10 (param)
   343 ;;_x	offset=-11 (param)
   344 ;;_toupper$5801	offset	0
   345 ;;_c	offset=-2 (param)
   346 ;;_c	offset=-2 (param)
   347 ;;_c	offset=-2 (param)
   348 ;;_c	offset=-2 (param)
   349 ;;_n	offset	0
   350 ;;_i	offset	8
   351 ;;_w	offset	10
   352 ;;_p	offset	12
   353 ;;_fp	offset=-2 (param)
   354 ;;_d	offset=-10 (param)
   355 ;;_counter	offset	0
   356 ;;_dividend	offset=-8 (param)
   357 ;;_divisor	offset=-16 (param)
   358 ;;_quotient	offset	0
   359 ;;_counter	offset	8
   360 ;;_dividend	offset=-8 (param)
   361 ;;_divisor	offset=-16 (param)
   362 ;;_r	offset	0
   363 ;;_l	offset	2
   364 ;;__l	offset=-2 (param)
   365 ;;__r	offset=-4 (param)
   366 ;;_n	offset=-6 (param)
   367 ;;_nuls	offset	0
   368 ;;_l	offset	7
   369 ;;_p	offset	9
   370 ;;_cp	offset	11
   371 ;;_w	offset	13
   372 ;;_i	offset	15
   373 ;;_fp	offset=-2 (param)
   374 ;;_s	offset=-4 (param)
   375 ;;_n	offset	0
   376 ;;_i	offset	8
   377 ;;_w	offset	10
   378 ;;_t	offset	12
   379 ;;_p	offset	14
   380 ;;_fp	offset=-2 (param)
   381 ;;_d	offset=-10 (param)
   382 ;;_dtoa$5031	offset	0
   383 ;;_n	offset	2
   384 ;;_i	offset	10
   385 ;;_s	offset	12
   386 ;;_w	offset	14
   387 ;;_p	offset	16
   388 ;;_fp	offset=-2 (param)
   389 ;;_d	offset=-10 (param)
   390 ;;_a	offset=-2 (param)
   391 ;;_sign	offset	0
   392 ;;_counter	offset	1
   393 ;;_dividend	offset=-8 (param)
   394 ;;_divisor	offset=-16 (param)
   395 ;;_quotient	offset	0
   396 ;;_sign	offset	8
   397 ;;_counter	offset	9
   398 ;;_dividend	offset=-8 (param)
   399 ;;_divisor	offset=-16 (param)
   400 ;;_w	offset	0
   401 ;;_fp	offset=-2 (param)
   402 ;;_c	offset=-3 (param)
   403 ;;_w	offset	0
   404 ;;_i	offset	2
   405 ;;_fp	offset=-2 (param)
   406 ;;_buf	offset=-3 (param)
   407 ;;_p	offset=-5 (param)
   408 ;;_a	offset	0
   409 ;;_s	offset=-2 (param)
   410 ;;_i	offset	0
   411 ;;_c	offset	2
   412 ;;_s	offset=-1 (param)
   413 ;;_fp	offset=-3 (param)
   414 ;;_c	offset=-2 (param)
   415 ;;_fp	offset=-4 (param)
   416 ;;_c	offset=-1 (param)
   417 ;;__this	offset=-2 (param)
   418 ;;_c	offset=-3 (param)
   419 ;;_atoi$5678	offset	0
   420 ;;_atoi$5676	offset	2
   421 ;;_atoi$5677	offset	4
   422 ;;_n	offset	5
   423 ;;_neg	offset	7
   424 ;;_s	offset=-2 (param)
   425 ;;_isspace$5703	offset	0
   426 ;;_c	offset=-2 (param)
   427 ;;_c	offset=-2 (param)
   428 ;;_line	offset=-1 (param)
   429 ;;_vterm	offset=-2 (param)
   430 ;;_timer	offset=-1 (param)
   431 ;;_i	offset	0
   432 ;;_timerVal	offset=-2 (param)
   433                           
   434                           	psect	idataCOMRAM
   435  019AE6                     __pidataCOMRAM:
   436                           	opt callstack 0
   437                           
   438                           ;initializer for secs_II_monitor_message@store6_11
   439  019AE6  01                 	db	1
   440                           
   441                           ;initializer for secs_II_monitor_message@store1_13
   442  019AE7  01                 	db	1
   443                           
   444                           ;initializer for secs_II_monitor_message@store1_1
   445  019AE8  01                 	db	1
   446                           
   447                           ;initializer for r_protocol@d
   448  019AE9  01                 	db	1
   449                           
   450                           ;initializer for r_protocol@retry
   451  019AEA  03                 	db	3
   452                           
   453                           	psect	idataBIGRAM
   454  01430A                     __pidataBIGRAM:
   455                           	opt callstack 0
   456                           
   457                           ;initializer for _V
   458  01430A  00                 	db	0
   459  01430B  00                 	db	0
   460  01430C  00                 	db	0
   461  01430D  00                 	db	0
   462  01430E  00                 	db	0
   463  01430F  00                 	db	0
   464  014310  00                 	db	0
   465  014311  00                 	db	0
   466  014312  00                 	db	0
   467  014313  00                 	db	0
   468  014314  00                 	db	0
   469  014315  00                 	db	0
   470  014316  00                 	db	0
   471  014317  00                 	db	0
   472  014318  00                 	db	0
   473  014319  00                 	db	0
   474  01431A  00                 	db	0
   475  01431B  00                 	db	0
   476  01431C  00                 	db	0
   477  01431D  00                 	db	0
   478  01431E  00                 	db	0
   479  01431F  00                 	db	0
   480  014320  00                 	db	0
   481  014321  00                 	db	0
   482  014322  00                 	db	0
   483  014323  00                 	db	0
   484  014324  00                 	db	0
   485  014325  00                 	db	0
   486  014326  00                 	db	0
   487  014327  00                 	db	0
   488  014328  00                 	db	0
   489  014329  00                 	db	0
   490  01432A  00                 	db	0
   491  01432B  00                 	db	0
   492  01432C  00                 	db	0
   493  01432D  00                 	db	0
   494  01432E  00                 	db	0
   495  01432F  00                 	db	0
   496  014330  00                 	db	0
   497  014331  00                 	db	0
   498  014332  00                 	db	0
   499  014333  00                 	db	0
   500  014334  00                 	db	0
   501  014335  00                 	db	0
   502  014336  00                 	db	0
   503  014337  00                 	db	0
   504  014338  00                 	db	0
   505  014339  00                 	db	0
   506  01433A  00                 	db	0
   507  01433B  00                 	db	0
   508  01433C  00                 	db	0
   509  01433D  00                 	db	0
   510  01433E  00                 	db	0
   511  01433F  00                 	db	0
   512  014340  00                 	db	0
   513  014341  00                 	db	0
   514  014342  00                 	db	0
   515  014343  00                 	db	0
   516  014344  00                 	db	0
   517  014345  00                 	db	0
   518  014346  00                 	db	0
   519  014347  00                 	db	0
   520  014348  00                 	db	0
   521  014349  00                 	db	0
   522  01434A  00                 	db	0
   523  01434B  00                 	db	0
   524  01434C  00                 	db	0
   525  01434D  00                 	db	0
   526  01434E  00                 	db	0
   527  01434F  00                 	db	0
   528  014350  00                 	db	0
   529  014351  00                 	db	0
   530  014352  00                 	db	0
   531  014353  00                 	db	0
   532  014354  00                 	db	0
   533  014355  00                 	db	0
   534  014356  00                 	db	0
   535  014357  00                 	db	0
   536  014358  00                 	db	0
   537  014359  00                 	db	0
   538  01435A  00                 	db	0
   539  01435B  00                 	db	0
   540  01435C  00                 	db	0
   541  01435D  00                 	db	0
   542  01435E  00                 	db	0
   543  01435F  00                 	db	0
   544  014360  00                 	db	0
   545  014361  00                 	db	0
   546  014362  00                 	db	0
   547  014363  00                 	db	0
   548  014364  00                 	db	0
   549  014365  00                 	db	0
   550  014366  00                 	db	0
   551  014367  00                 	db	0
   552  014368  00                 	db	0
   553  014369  00                 	db	0
   554  01436A  00                 	db	0
   555  01436B  00                 	db	0
   556  01436C  00                 	db	0
   557  01436D  00                 	db	0
   558  01436E  00                 	db	0
   559  01436F  00                 	db	0
   560  014370  00                 	db	0
   561  014371  00                 	db	0
   562  014372  00                 	db	0
   563  014373  00                 	db	0
   564  014374  00                 	db	0
   565  014375  00                 	db	0
   566  014376  00                 	db	0
   567  014377  00                 	db	0
   568  014378  00                 	db	0
   569  014379  00                 	db	0
   570  01437A  00                 	db	0
   571  01437B  00                 	db	0
   572  01437C  00                 	db	0
   573  01437D  00                 	db	0
   574  01437E  00                 	db	0
   575  01437F  00                 	db	0
   576  014380  00                 	db	0
   577  014381  00                 	db	0
   578  014382  00                 	db	0
   579  014383  00                 	db	0
   580  014384  00                 	db	0
   581  014385  00                 	db	0
   582  014386  00                 	db	0
   583  014387  00                 	db	0
   584  014388  00                 	db	0
   585  014389  00                 	db	0
   586  01438A  00                 	db	0
   587  01438B  00                 	db	0
   588  01438C  00                 	db	0
   589  01438D  00                 	db	0
   590  01438E  00                 	db	0
   591  01438F  00                 	db	0
   592  014390  00                 	db	0
   593  014391  00                 	db	0
   594  014392  00                 	db	0
   595  014393  00                 	db	0
   596  014394  00                 	db	0
   597  014395  00                 	db	0
   598  014396  00                 	db	0
   599  014397  00                 	db	0
   600  014398  00                 	db	0
   601  014399  00                 	db	0
   602  01439A  00                 	db	0
   603  01439B  00                 	db	0
   604  01439C  00                 	db	0
   605  01439D  00                 	db	0
   606  01439E  00                 	db	0
   607  01439F  00                 	db	0
   608  0143A0  00                 	db	0
   609  0143A1  00                 	db	0
   610  0143A2  00                 	db	0
   611  0143A3  00                 	db	0
   612  0143A4  00                 	db	0
   613  0143A5  00                 	db	0
   614  0143A6  00                 	db	0
   615  0143A7  00                 	db	0
   616  0143A8  00                 	db	0
   617  0143A9  00                 	db	0
   618  0143AA  00                 	db	0
   619  0143AB  00                 	db	0
   620  0143AC  00                 	db	0
   621  0143AD  00                 	db	0
   622  0143AE  00                 	db	0
   623  0143AF  00                 	db	0
   624  0143B0  00                 	db	0
   625  0143B1  00                 	db	0
   626  0143B2  00                 	db	0
   627  0143B3  00                 	db	0
   628  0143B4  00                 	db	0
   629  0143B5  00                 	db	0
   630  0143B6  00                 	db	0
   631  0143B7  00                 	db	0
   632  0143B8  00                 	db	0
   633  0143B9  00                 	db	0
   634  0143BA  00                 	db	0
   635  0143BB  00                 	db	0
   636  0143BC  00                 	db	0
   637  0143BD  00                 	db	0
   638  0143BE  00                 	db	0
   639  0143BF  00                 	db	0
   640  0143C0  00                 	db	0
   641  0143C1  00                 	db	0
   642  0143C2  00                 	db	0
   643  0143C3  00                 	db	0
   644  0143C4  00                 	db	0
   645  0143C5  00                 	db	0
   646  0143C6  00                 	db	0
   647  0143C7  00                 	db	0
   648  0143C8  00                 	db	0
   649  0143C9  00                 	db	0
   650  0143CA  00                 	db	0
   651  0143CB  00                 	db	0
   652  0143CC  00                 	db	0
   653  0143CD  00                 	db	0
   654  0143CE  00                 	db	0
   655  0143CF  00                 	db	0
   656  0143D0  00                 	db	0
   657  0143D1  00                 	db	0
   658  0143D2  00                 	db	0
   659  0143D3  00                 	db	0
   660  0143D4  00                 	db	0
   661  0143D5  00                 	db	0
   662  0143D6  00                 	db	0
   663  0143D7  00                 	db	0
   664  0143D8  00                 	db	0
   665  0143D9  00                 	db	0
   666  0143DA  00                 	db	0
   667  0143DB  00                 	db	0
   668  0143DC  00                 	db	0
   669  0143DD  00                 	db	0
   670  0143DE  00                 	db	0
   671  0143DF  00                 	db	0
   672  0143E0  00                 	db	0
   673  0143E1  00                 	db	0
   674  0143E2  00                 	db	0
   675  0143E3  00                 	db	0
   676  0143E4  00                 	db	0
   677  0143E5  00                 	db	0
   678  0143E6  00                 	db	0
   679  0143E7  00                 	db	0
   680  0143E8  00                 	db	0
   681  0143E9  00                 	db	0
   682  0143EA  00                 	db	0
   683  0143EB  00                 	db	0
   684  0143EC  00                 	db	0
   685  0143ED  00                 	db	0
   686  0143EE  00                 	db	0
   687  0143EF  00                 	db	0
   688  0143F0  00                 	db	0
   689  0143F1  00                 	db	0
   690  0143F2  00                 	db	0
   691  0143F3  00                 	db	0
   692  0143F4  00                 	db	0
   693  0143F5  00                 	db	0
   694  0143F6  00                 	db	0
   695  0143F7  00                 	db	0
   696  0143F8  00                 	db	0
   697  0143F9  00                 	db	0
   698  0143FA  00                 	db	0
   699  0143FB  00                 	db	0
   700  0143FC  00                 	db	0
   701  0143FD  00                 	db	0
   702  0143FE  00                 	db	0
   703  0143FF  00                 	db	0
   704  014400  00                 	db	0
   705  014401  00                 	db	0
   706  014402  00                 	db	0
   707  014403  00                 	db	0
   708  014404  00                 	db	0
   709  014405  00                 	db	0
   710  014406  00                 	db	0
   711  014407  00                 	db	0
   712  014408  00                 	db	0
   713  014409  00                 	db	0
   714  01440A  00                 	db	0
   715  01440B  00                 	db	0
   716  01440C  00                 	db	0
   717  01440D  00                 	db	0
   718  01440E  00                 	db	0
   719  01440F  00                 	db	0
   720  014410  00                 	db	0
   721  014411  00                 	db	0
   722  014412  00                 	db	0
   723  014413  00                 	db	0
   724  014414  00                 	db	0
   725  014415  00                 	db	0
   726  014416  00                 	db	0
   727  014417  00                 	db	0
   728  014418  00                 	db	0
   729  014419  00                 	db	0
   730  01441A  00                 	db	0
   731  01441B  00                 	db	0
   732  01441C  00                 	db	0
   733  01441D  00                 	db	0
   734  01441E  00                 	db	0
   735  01441F  00                 	db	0
   736  014420  00                 	db	0
   737  014421  00                 	db	0
   738  014422  00                 	db	0
   739  014423  00                 	db	0
   740  014424  00                 	db	0
   741  014425  00                 	db	0
   742  014426  00                 	db	0
   743  014427  00                 	db	0
   744  014428  00                 	db	0
   745  014429  00                 	db	0
   746  01442A  00                 	db	0
   747  01442B  00                 	db	0
   748  01442C  00                 	db	0
   749  01442D  00                 	db	0
   750  01442E  00                 	db	0
   751  01442F  00                 	db	0
   752  014430  00                 	db	0
   753  014431  0000               	dw	0
   754  014433  0000               	dw	0
   755  014435  0000               	dw	0
   756  014437  0000               	dw	0
   757  014439  0000               	dw	0
   758  01443B  0000               	dw	0
   759  01443D  00                 	db	0
   760  01443E  00                 	db	0
   761  01443F  0A                 	db	10
   762  014440  0A                 	db	10
   763  014441  14                 	db	20
   764  014442  00                 	db	0
   765  014443  00                 	db	0
   766  014444  00                 	db	0
   767  014445  0000               	dw	0
   768  014447  0000               	dw	0
   769  014449  0000               	dw	0
   770  01444B  0000               	dw	0
   771  01444D  0000               	dw	0
   772  01444F  0000               	dw	0
   773  014451  0000               	dw	0
   774  014453  0000               	dw	0
   775  014455  0000               	dw	0
   776  014457  00                 	db	0
   777  014458  00                 	db	0
   778  014459  00                 	db	0
   779  01445A  00                 	db	0
   780  01445B  00                 	db	0
   781  01445C  00                 	db	0
   782  01445D  00                 	db	0
   783  01445E  00                 	db	0
   784  01445F  00                 	db	0
   785  014460  00                 	db	0
   786  014461  00                 	db	0
   787  014462  00                 	db	0
   788  014463  00                 	db	0
   789  014464  00                 	db	0
   790  014465  00                 	db	0
   791  014466  00                 	db	0
   792  014467  00                 	db	0
   793  014468  00                 	db	0
   794  014469  00                 	db	0
   795  01446A  00                 	db	0
   796  01446B  00                 	db	0
   797  01446C  00                 	db	0
   798  01446D  00                 	db	0
   799  01446E  00                 	db	0
   800  01446F  00                 	db	0
   801  014470  00                 	db	0
   802  014471  00                 	db	0
   803  014472  00                 	db	0
   804  014473  00                 	db	0
   805  014474  00                 	db	0
   806  014475  00                 	db	0
   807  014476  00                 	db	0
   808  014477  00                 	db	0
   809  014478  00                 	db	0
   810  014479  00                 	db	0
   811  01447A  00                 	db	0
   812  01447B  00                 	db	0
   813  01447C  00                 	db	0
   814  01447D  00                 	db	0
   815  01447E  00                 	db	0
   816  01447F  00                 	db	0
   817  014480  00                 	db	0
   818  014481  00                 	db	0
   819  014482  00                 	db	0
   820  014483  0000               	dw	0
   821  014485  0000               	dw	0
   822  014487  01                 	db	1
   823  014488  00                 	db	0
   824  014489  01                 	db	1
   825  01448A  00                 	db	0
   826  01448B  2D                 	db	45
   827  01448C  00                 	db	0
   828                           
   829                           ;initializer for _H153
   830  01448D  0000               	dw	0
   831  01448F  4B                 	db	75
   832  014490  4F                 	db	79
   833  014491  4F                 	db	79
   834  014492  52                 	db	82
   835  014493  42                 	db	66
   836  014494  42                 	db	66
   837  014495  42                 	db	66
   838  014496  42                 	db	66
   839  014497  34                 	db	52
   840  014498  33                 	db	51
   841  014499  32                 	db	50
   842  01449A  31                 	db	49
   843  01449B  44                 	db	68
   844  01449C  45                 	db	69
   845  01449D  32                 	db	50
   846  01449E  31                 	db	49
   847  01449F  53                 	db	83
   848  0144A0  4B                 	db	75
   849  0144A1  4F                 	db	79
   850  0144A2  4F                 	db	79
   851  0144A3  52                 	db	82
   852  0144A4  42                 	db	66
   853  0144A5  42                 	db	66
   854  0144A6  42                 	db	66
   855  0144A7  42                 	db	66
   856  0144A8  34                 	db	52
   857  0144A9  30                 	db	48
   858  0144AA  30                 	db	48
   859  0144AB  33                 	db	51
   860  0144AC  32                 	db	50
   861  0144AD  31                 	db	49
   862  0144AE  44                 	db	68
   863  0144AF  45                 	db	69
   864  0144B0  52                 	db	82
   865  0144B1  46                 	db	70
   866  0144B2  20                 	db	32
   867  0144B3  00                 	db	0
   868  0144B4  00                 	db	0
   869  0144B5  00                 	db	0
   870  0144B6  00                 	db	0
   871  0144B7  00                 	db	0
   872  0144B8  00                 	db	0
   873  0144B9  00                 	db	0
   874  0144BA  00                 	db	0
   875  0144BB  00                 	db	0
   876  0144BC  00                 	db	0
   877  0144BD  00                 	db	0
   878  0144BE  00                 	db	0
   879  0144BF  00                 	db	0
   880  0144C0  00                 	db	0
   881  0144C1  00                 	db	0
   882  0144C2  00                 	db	0
   883  0144C3  00                 	db	0
   884  0144C4  00                 	db	0
   885  0144C5  00                 	db	0
   886  0144C6  00                 	db	0
   887  0144C7  00                 	db	0
   888  0144C8  00                 	db	0
   889  0144C9  00                 	db	0
   890  0144CA  00                 	db	0
   891  0144CB  00                 	db	0
   892  0144CC  00                 	db	0
   893  0144CD  00                 	db	0
   894  0144CE  00                 	db	0
   895  0144CF  00                 	db	0
   896  0144D0  00                 	db	0
   897  0144D1  00                 	db	0
   898  0144D2  00                 	db	0
   899  0144D3  00                 	db	0
   900  0144D4  00                 	db	0
   901  0144D5  00                 	db	0
   902  0144D6  00                 	db	0
   903  0144D7  00                 	db	0
   904  0144D8  00                 	db	0
   905  0144D9  00                 	db	0
   906  0144DA  00                 	db	0
   907  0144DB  00                 	db	0
   908  0144DC  00                 	db	0
   909  0144DD  00                 	db	0
   910  0144DE  00                 	db	0
   911  0144DF  00                 	db	0
   912  0144E0  00                 	db	0
   913  0144E1  00                 	db	0
   914  0144E2  00                 	db	0
   915  0144E3  00                 	db	0
   916  0144E4  00                 	db	0
   917  0144E5  00                 	db	0
   918  0144E6  00                 	db	0
   919  0144E7  00                 	db	0
   920  0144E8  00                 	db	0
   921  0144E9  00                 	db	0
   922  0144EA  00                 	db	0
   923  0144EB  00                 	db	0
   924  0144EC  00                 	db	0
   925  0144ED  00                 	db	0
   926  0144EE  00                 	db	0
   927  0144EF  00                 	db	0
   928  0144F0  00                 	db	0
   929  0144F1  00                 	db	0
   930  0144F2  00                 	db	0
   931  0144F3  00                 	db	0
   932  0144F4  00                 	db	0
   933  0144F5  00                 	db	0
   934  0144F6  00                 	db	0
   935  0144F7  00                 	db	0
   936  0144F8  00                 	db	0
   937  0144F9  00                 	db	0
   938  0144FA  00                 	db	0
   939  0144FB  00                 	db	0
   940  0144FC  00                 	db	0
   941  0144FD  00                 	db	0
   942  0144FE  00                 	db	0
   943  0144FF  00                 	db	0
   944  014500  00                 	db	0
   945  014501  00                 	db	0
   946  014502  00                 	db	0
   947  014503  00                 	db	0
   948  014504  00                 	db	0
   949  014505  00                 	db	0
   950  014506  00                 	db	0
   951  014507  00                 	db	0
   952  014508  00                 	db	0
   953  014509  00                 	db	0
   954  01450A  00                 	db	0
   955  01450B  00                 	db	0
   956  01450C  00                 	db	0
   957  01450D  00                 	db	0
   958  01450E  00                 	db	0
   959  01450F  00                 	db	0
   960  014510  00                 	db	0
   961  014511  00                 	db	0
   962  014512  00                 	db	0
   963  014513  00                 	db	0
   964  014514  00                 	db	0
   965  014515  00                 	db	0
   966  014516  00                 	db	0
   967  014517  2C                 	db	44
   968  014518  41                 	db	65
   969  014519  01                 	db	1
   970  01451A  01                 	db	1
   971  01451B  21                 	db	33
   972  01451C  02                 	db	2
   973  01451D  01                 	db	1
   974  01451E  0001               	dw	1
   975  014520  0000               	dw	0
   976  014522  01                 	db	1
   977  014523  80                 	db	128
   978  014524  03                 	db	3
   979  014525  8A                 	db	138
   980  014526  00                 	db	0
   981  014527  00                 	db	0
   982  014528  99                 	db	153
   983  014529  0000               	dw	0
   984  01452B  6F                 	db	111
   985  01452C  53                 	db	83
   986  01452D  4B                 	db	75
   987  01452E  4F                 	db	79
   988  01452F  4F                 	db	79
   989  014530  52                 	db	82
   990  014531  42                 	db	66
   991  014532  42                 	db	66
   992  014533  42                 	db	66
   993  014534  42                 	db	66
   994  014535  34                 	db	52
   995  014536  33                 	db	51
   996  014537  32                 	db	50
   997  014538  31                 	db	49
   998  014539  44                 	db	68
   999  01453A  45                 	db	69
  1000  01453B  32                 	db	50
  1001  01453C  31                 	db	49
  1002  01453D  53                 	db	83
  1003  01453E  4B                 	db	75
  1004  01453F  52                 	db	82
  1005  014540  42                 	db	66
  1006  014541  2A                 	db	42
  1007  014542  17                 	db	23
  1008  014543  41                 	db	65
  1009  014544  34                 	db	52
  1010  014545  33                 	db	51
  1011  014546  32                 	db	50
  1012  014547  31                 	db	49
  1013  014548  44                 	db	68
  1014  014549  45                 	db	69
  1015  01454A  52                 	db	82
  1016  01454B  46                 	db	70
  1017  01454C  2A                 	db	42
  1018  01454D  00                 	db	0
  1019  01454E  00                 	db	0
  1020  01454F  00                 	db	0
  1021  014550  00                 	db	0
  1022  014551  00                 	db	0
  1023  014552  00                 	db	0
  1024  014553  00                 	db	0
  1025  014554  00                 	db	0
  1026  014555  00                 	db	0
  1027  014556  00                 	db	0
  1028  014557  00                 	db	0
  1029  014558  00                 	db	0
  1030  014559  00                 	db	0
  1031  01455A  00                 	db	0
  1032  01455B  00                 	db	0
  1033  01455C  00                 	db	0
  1034  01455D  00                 	db	0
  1035  01455E  00                 	db	0
  1036  01455F  00                 	db	0
  1037  014560  00                 	db	0
  1038  014561  00                 	db	0
  1039  014562  00                 	db	0
  1040  014563  00                 	db	0
  1041  014564  00                 	db	0
  1042  014565  00                 	db	0
  1043  014566  00                 	db	0
  1044  014567  00                 	db	0
  1045  014568  00                 	db	0
  1046  014569  00                 	db	0
  1047  01456A  00                 	db	0
  1048  01456B  00                 	db	0
  1049  01456C  00                 	db	0
  1050  01456D  00                 	db	0
  1051  01456E  00                 	db	0
  1052  01456F  00                 	db	0
  1053  014570  00                 	db	0
  1054  014571  00                 	db	0
  1055  014572  00                 	db	0
  1056  014573  00                 	db	0
  1057  014574  00                 	db	0
  1058  014575  00                 	db	0
  1059  014576  00                 	db	0
  1060  014577  00                 	db	0
  1061  014578  00                 	db	0
  1062  014579  00                 	db	0
  1063  01457A  00                 	db	0
  1064  01457B  00                 	db	0
  1065  01457C  00                 	db	0
  1066  01457D  00                 	db	0
  1067  01457E  00                 	db	0
  1068  01457F  00                 	db	0
  1069  014580  00                 	db	0
  1070  014581  00                 	db	0
  1071  014582  00                 	db	0
  1072  014583  00                 	db	0
  1073  014584  00                 	db	0
  1074  014585  00                 	db	0
  1075  014586  00                 	db	0
  1076  014587  00                 	db	0
  1077  014588  00                 	db	0
  1078  014589  00                 	db	0
  1079  01458A  00                 	db	0
  1080  01458B  00                 	db	0
  1081  01458C  00                 	db	0
  1082  01458D  00                 	db	0
  1083  01458E  00                 	db	0
  1084  01458F  00                 	db	0
  1085  014590  00                 	db	0
  1086  014591  00                 	db	0
  1087  014592  00                 	db	0
  1088  014593  00                 	db	0
  1089  014594  00                 	db	0
  1090  014595  00                 	db	0
  1091  014596  00                 	db	0
  1092  014597  00                 	db	0
  1093  014598  00                 	db	0
  1094  014599  00                 	db	0
  1095  01459A  00                 	db	0
  1096  01459B  00                 	db	0
  1097  01459C  00                 	db	0
  1098  01459D  00                 	db	0
  1099  01459E  00                 	db	0
  1100  01459F  00                 	db	0
  1101  0145A0  00                 	db	0
  1102  0145A1  00                 	db	0
  1103  0145A2  00                 	db	0
  1104  0145A3  00                 	db	0
  1105  0145A4  00                 	db	0
  1106  0145A5  00                 	db	0
  1107  0145A6  00                 	db	0
  1108  0145A7  00                 	db	0
  1109  0145A8  00                 	db	0
  1110  0145A9  00                 	db	0
  1111  0145AA  00                 	db	0
  1112  0145AB  00                 	db	0
  1113  0145AC  00                 	db	0
  1114  0145AD  00                 	db	0
  1115  0145AE  00                 	db	0
  1116  0145AF  00                 	db	0
  1117  0145B0  00                 	db	0
  1118  0145B1  09                 	db	9
  1119  0145B2  41                 	db	65
  1120  0145B3  02                 	db	2
  1121  0145B4  01                 	db	1
  1122  0145B5  01                 	db	1
  1123  0145B6  01                 	db	1
  1124  0145B7  21                 	db	33
  1125  0145B8  02                 	db	2
  1126  0145B9  01                 	db	1
  1127  0145BA  0001               	dw	1
  1128  0145BC  0000               	dw	0
  1129  0145BE  01                 	db	1
  1130  0145BF  80                 	db	128
  1131  0145C0  05                 	db	5
  1132  0145C1  8A                 	db	138
  1133  0145C2  00                 	db	0
  1134  0145C3  00                 	db	0
  1135  0145C4  99                 	db	153
  1136                           
  1137                           ;initializer for _H254
  1138  0145C5  2019               	dw	8217
  1139  0145C7  57                 	db	87
  1140  0145C8  19                 	db	25
  1141  0145C9  00                 	db	0
  1142  0145CA  00                 	db	0
  1143  0145CB  00                 	db	0
  1144  0145CC  00                 	db	0
  1145  0145CD  00                 	db	0
  1146  0145CE  00                 	db	0
  1147  0145CF  00                 	db	0
  1148  0145D0  00                 	db	0
  1149  0145D1  00                 	db	0
  1150  0145D2  00                 	db	0
  1151  0145D3  00                 	db	0
  1152  0145D4  00                 	db	0
  1153  0145D5  00                 	db	0
  1154  0145D6  00                 	db	0
  1155  0145D7  00                 	db	0
  1156  0145D8  00                 	db	0
  1157  0145D9  00                 	db	0
  1158  0145DA  00                 	db	0
  1159  0145DB  00                 	db	0
  1160  0145DC  00                 	db	0
  1161  0145DD  00                 	db	0
  1162  0145DE  00                 	db	0
  1163  0145DF  00                 	db	0
  1164  0145E0  00                 	db	0
  1165  0145E1  00                 	db	0
  1166  0145E2  00                 	db	0
  1167  0145E3  00                 	db	0
  1168  0145E4  00                 	db	0
  1169  0145E5  00                 	db	0
  1170  0145E6  00                 	db	0
  1171  0145E7  00                 	db	0
  1172  0145E8  00                 	db	0
  1173  0145E9  00                 	db	0
  1174  0145EA  00                 	db	0
  1175  0145EB  00                 	db	0
  1176  0145EC  00                 	db	0
  1177  0145ED  00                 	db	0
  1178  0145EE  00                 	db	0
  1179  0145EF  00                 	db	0
  1180  0145F0  00                 	db	0
  1181  0145F1  00                 	db	0
  1182  0145F2  00                 	db	0
  1183  0145F3  00                 	db	0
  1184  0145F4  00                 	db	0
  1185  0145F5  00                 	db	0
  1186  0145F6  00                 	db	0
  1187  0145F7  00                 	db	0
  1188  0145F8  00                 	db	0
  1189  0145F9  00                 	db	0
  1190  0145FA  00                 	db	0
  1191  0145FB  00                 	db	0
  1192  0145FC  00                 	db	0
  1193  0145FD  00                 	db	0
  1194  0145FE  00                 	db	0
  1195  0145FF  00                 	db	0
  1196  014600  00                 	db	0
  1197  014601  00                 	db	0
  1198  014602  00                 	db	0
  1199  014603  00                 	db	0
  1200  014604  00                 	db	0
  1201  014605  00                 	db	0
  1202  014606  00                 	db	0
  1203  014607  00                 	db	0
  1204  014608  00                 	db	0
  1205  014609  00                 	db	0
  1206  01460A  00                 	db	0
  1207  01460B  00                 	db	0
  1208  01460C  00                 	db	0
  1209  01460D  00                 	db	0
  1210  01460E  00                 	db	0
  1211  01460F  00                 	db	0
  1212  014610  00                 	db	0
  1213  014611  00                 	db	0
  1214  014612  00                 	db	0
  1215  014613  00                 	db	0
  1216  014614  00                 	db	0
  1217  014615  00                 	db	0
  1218  014616  00                 	db	0
  1219  014617  00                 	db	0
  1220  014618  00                 	db	0
  1221  014619  00                 	db	0
  1222  01461A  00                 	db	0
  1223  01461B  00                 	db	0
  1224  01461C  00                 	db	0
  1225  01461D  00                 	db	0
  1226  01461E  00                 	db	0
  1227  01461F  00                 	db	0
  1228  014620  00                 	db	0
  1229  014621  00                 	db	0
  1230  014622  00                 	db	0
  1231  014623  00                 	db	0
  1232  014624  00                 	db	0
  1233  014625  00                 	db	0
  1234  014626  00                 	db	0
  1235  014627  00                 	db	0
  1236  014628  00                 	db	0
  1237  014629  00                 	db	0
  1238  01462A  00                 	db	0
  1239  01462B  00                 	db	0
  1240  01462C  00                 	db	0
  1241  01462D  00                 	db	0
  1242  01462E  00                 	db	0
  1243  01462F  00                 	db	0
  1244  014630  00                 	db	0
  1245  014631  00                 	db	0
  1246  014632  00                 	db	0
  1247  014633  00                 	db	0
  1248  014634  00                 	db	0
  1249  014635  00                 	db	0
  1250  014636  00                 	db	0
  1251  014637  00                 	db	0
  1252  014638  00                 	db	0
  1253  014639  00                 	db	0
  1254  01463A  00                 	db	0
  1255  01463B  00                 	db	0
  1256  01463C  00                 	db	0
  1257  01463D  00                 	db	0
  1258  01463E  00                 	db	0
  1259  01463F  00                 	db	0
  1260  014640  00                 	db	0
  1261  014641  00                 	db	0
  1262  014642  00                 	db	0
  1263  014643  00                 	db	0
  1264  014644  00                 	db	0
  1265  014645  00                 	db	0
  1266  014646  00                 	db	0
  1267  014647  00                 	db	0
  1268  014648  00                 	db	0
  1269  014649  00                 	db	0
  1270  01464A  00                 	db	0
  1271  01464B  00                 	db	0
  1272  01464C  00                 	db	0
  1273  01464D  00                 	db	0
  1274  01464E  00                 	db	0
  1275  01464F  00                 	db	0
  1276  014650  00                 	db	0
  1277  014651  00                 	db	0
  1278  014652  00                 	db	0
  1279  014653  00                 	db	0
  1280  014654  00                 	db	0
  1281  014655  00                 	db	0
  1282  014656  00                 	db	0
  1283  014657  00                 	db	0
  1284  014658  00                 	db	0
  1285  014659  00                 	db	0
  1286  01465A  00                 	db	0
  1287  01465B  00                 	db	0
  1288  01465C  00                 	db	0
  1289  01465D  00                 	db	0
  1290  01465E  00                 	db	0
  1291  01465F  00                 	db	0
  1292  014660  00                 	db	0
  1293  014661  00                 	db	0
  1294  014662  00                 	db	0
  1295  014663  00                 	db	0
  1296  014664  00                 	db	0
  1297  014665  00                 	db	0
  1298  014666  00                 	db	0
  1299  014667  00                 	db	0
  1300  014668  00                 	db	0
  1301  014669  00                 	db	0
  1302  01466A  00                 	db	0
  1303  01466B  00                 	db	0
  1304  01466C  00                 	db	0
  1305  01466D  00                 	db	0
  1306  01466E  00                 	db	0
  1307  01466F  00                 	db	0
  1308  014670  00                 	db	0
  1309  014671  00                 	db	0
  1310  014672  00                 	db	0
  1311  014673  00                 	db	0
  1312  014674  00                 	db	0
  1313  014675  00                 	db	0
  1314  014676  00                 	db	0
  1315  014677  00                 	db	0
  1316  014678  00                 	db	0
  1317  014679  00                 	db	0
  1318  01467A  00                 	db	0
  1319  01467B  00                 	db	0
  1320  01467C  00                 	db	0
  1321  01467D  00                 	db	0
  1322  01467E  00                 	db	0
  1323  01467F  00                 	db	0
  1324  014680  00                 	db	0
  1325  014681  00                 	db	0
  1326  014682  00                 	db	0
  1327  014683  00                 	db	0
  1328  014684  00                 	db	0
  1329  014685  00                 	db	0
  1330  014686  00                 	db	0
  1331  014687  00                 	db	0
  1332  014688  00                 	db	0
  1333  014689  00                 	db	0
  1334  01468A  00                 	db	0
  1335  01468B  00                 	db	0
  1336  01468C  00                 	db	0
  1337  01468D  00                 	db	0
  1338  01468E  00                 	db	0
  1339  01468F  00                 	db	0
  1340  014690  00                 	db	0
  1341  014691  00                 	db	0
  1342  014692  00                 	db	0
  1343  014693  00                 	db	0
  1344  014694  00                 	db	0
  1345  014695  00                 	db	0
  1346  014696  00                 	db	0
  1347  014697  00                 	db	0
  1348  014698  00                 	db	0
  1349  014699  00                 	db	0
  1350  01469A  00                 	db	0
  1351  01469B  00                 	db	0
  1352  01469C  00                 	db	0
  1353  01469D  00                 	db	0
  1354  01469E  00                 	db	0
  1355  01469F  00                 	db	0
  1356  0146A0  00                 	db	0
  1357  0146A1  00                 	db	0
  1358  0146A2  00                 	db	0
  1359  0146A3  00                 	db	0
  1360  0146A4  00                 	db	0
  1361  0146A5  00                 	db	0
  1362  0146A6  00                 	db	0
  1363  0146A7  00                 	db	0
  1364  0146A8  00                 	db	0
  1365  0146A9  00                 	db	0
  1366  0146AA  00                 	db	0
  1367  0146AB  00                 	db	0
  1368  0146AC  00                 	db	0
  1369  0146AD  00                 	db	0
  1370  0146AE  00                 	db	0
  1371  0146AF  00                 	db	0
  1372  0146B0  00                 	db	0
  1373  0146B1  00                 	db	0
  1374  0146B2  00                 	db	0
  1375  0146B3  00                 	db	0
  1376  0146B4  00                 	db	0
  1377  0146B5  00                 	db	0
  1378  0146B6  00                 	db	0
  1379  0146B7  00                 	db	0
  1380  0146B8  00                 	db	0
  1381  0146B9  00                 	db	0
  1382  0146BA  00                 	db	0
  1383  0146BB  0001               	dw	1
  1384  0146BD  0000               	dw	0
  1385  0146BF  01                 	db	1
  1386  0146C0  80                 	db	128
  1387  0146C1  03                 	db	3
  1388  0146C2  8A                 	db	138
  1389  0146C3  EF                 	db	239
  1390  0146C4  80                 	db	128
  1391  0146C5  FE                 	db	254
  1392                           
  1393                           	psect	idataBANK0
  1394  019478                     __pidataBANK0:
  1395                           	opt callstack 0
  1396                           
  1397                           ;initializer for stoa@F1152
  1398  019478  28                 	db	40
  1399  019479  6E                 	db	110
  1400  01947A  75                 	db	117
  1401  01947B  6C                 	db	108
  1402  01947C  6C                 	db	108
  1403  01947D  29                 	db	41
  1404  01947E  00                 	db	0
  1405                           
  1406                           ;initializer for _H33
  1407  01947F  0000               	dw	0
  1408  019481  01                 	db	1
  1409  019482  01                 	db	1
  1410  019483  A5                 	db	165
  1411  019484  4B                 	db	75
  1412  019485  43                 	db	67
  1413  019486  4F                 	db	79
  1414  019487  4C                 	db	76
  1415  019488  44                 	db	68
  1416  019489  41                 	db	65
  1417  01948A  4F                 	db	79
  1418  01948B  4C                 	db	76
  1419  01948C  08                 	db	8
  1420  01948D  41                 	db	65
  1421  01948E  02                 	db	2
  1422  01948F  01                 	db	1
  1423  019490  01                 	db	1
  1424  019491  01                 	db	1
  1425  019492  37                 	db	55
  1426  019493  31                 	db	49
  1427  019494  02                 	db	2
  1428  019495  41                 	db	65
  1429  019496  02                 	db	2
  1430  019497  01                 	db	1
  1431  019498  0001               	dw	1
  1432  01949A  0000               	dw	0
  1433  01949C  01                 	db	1
  1434  01949D  80                 	db	128
  1435  01949E  29                 	db	41
  1436  01949F  82                 	db	130
  1437  0194A0  00                 	db	0
  1438  0194A1  00                 	db	0
  1439  0194A2  21                 	db	33
  1440                           
  1441                           	psect	idataBANK1
  1442  018132                     __pidataBANK1:
  1443                           	opt callstack 0
  1444                           
  1445                           ;initializer for _H10
  1446  018132  0000               	dw	0
  1447  018134  0001               	dw	1
  1448  018136  0000               	dw	0
  1449  018138  01                 	db	1
  1450  018139  80                 	db	128
  1451  01813A  01                 	db	1
  1452  01813B  81                 	db	129
  1453  01813C  00                 	db	0
  1454  01813D  00                 	db	0
  1455  01813E  0A                 	db	10
  1456  01813F  0000               	dw	0
  1457  018141  00                 	db	0
  1458  018142  00                 	db	0
  1459  018143  00                 	db	0
  1460  018144  00                 	db	0
  1461  018145  00                 	db	0
  1462  018146  00                 	db	0
  1463  018147  00                 	db	0
  1464  018148  00                 	db	0
  1465  018149  00                 	db	0
  1466  01814A  00                 	db	0
  1467  01814B  0A                 	db	10
  1468  01814C  0000               	dw	0
  1469  01814E  0001               	dw	1
  1470  018150  0000               	dw	0
  1471  018152  01                 	db	1
  1472  018153  80                 	db	128
  1473  018154  00                 	db	0
  1474  018155  01                 	db	1
  1475  018156  00                 	db	0
  1476  018157  00                 	db	0
  1477  018158  0A                 	db	10
  1478  018159  0000               	dw	0
  1479  01815B  0001               	dw	1
  1480  01815D  0000               	dw	0
  1481  01815F  01                 	db	1
  1482  018160  80                 	db	128
  1483  018161  01                 	db	1
  1484  018162  81                 	db	129
  1485  018163  00                 	db	0
  1486  018164  80                 	db	128
  1487  018165  0A                 	db	10
  1488  018166  0000               	dw	0
  1489  018168  0001               	dw	1
  1490  01816A  0000               	dw	0
  1491  01816C  01                 	db	1
  1492  01816D  80                 	db	128
  1493  01816E  11                 	db	17
  1494  01816F  82                 	db	130
  1495  018170  00                 	db	0
  1496  018171  00                 	db	0
  1497  018172  0A                 	db	10
  1498  018173  0000               	dw	0
  1499  018175  0001               	dw	1
  1500  018177  0000               	dw	0
  1501  018179  01                 	db	1
  1502  01817A  80                 	db	128
  1503  01817B  0F                 	db	15
  1504  01817C  81                 	db	129
  1505  01817D  00                 	db	0
  1506  01817E  00                 	db	0
  1507  01817F  0A                 	db	10
  1508  018180  0000               	dw	0
  1509  018182  0001               	dw	1
  1510  018184  0000               	dw	0
  1511  018186  01                 	db	1
  1512  018187  80                 	db	128
  1513  018188  11                 	db	17
  1514  018189  81                 	db	129
  1515  01818A  00                 	db	0
  1516  01818B  00                 	db	0
  1517  01818C  0A                 	db	10
  1518                           
  1519                           ;initializer for _H13
  1520  01818D  0000               	dw	0
  1521  01818F  00                 	db	0
  1522  018190  01                 	db	1
  1523  018191  21                 	db	33
  1524  018192  0001               	dw	1
  1525  018194  0000               	dw	0
  1526  018196  01                 	db	1
  1527  018197  80                 	db	128
  1528  018198  0C                 	db	12
  1529  018199  06                 	db	6
  1530  01819A  00                 	db	0
  1531  01819B  00                 	db	0
  1532  01819C  0D                 	db	13
  1533  01819D  0000               	dw	0
  1534  01819F  00                 	db	0
  1535  0181A0  01                 	db	1
  1536  0181A1  21                 	db	33
  1537  0181A2  0001               	dw	1
  1538  0181A4  0000               	dw	0
  1539  0181A6  01                 	db	1
  1540  0181A7  80                 	db	128
  1541  0181A8  02                 	db	2
  1542  0181A9  0A                 	db	10
  1543  0181AA  00                 	db	0
  1544  0181AB  00                 	db	0
  1545  0181AC  0D                 	db	13
  1546  0181AD  0000               	dw	0
  1547  0181AF  00                 	db	0
  1548  0181B0  01                 	db	1
  1549  0181B1  21                 	db	33
  1550  0181B2  0001               	dw	1
  1551  0181B4  0000               	dw	0
  1552  0181B6  01                 	db	1
  1553  0181B7  80                 	db	128
  1554  0181B8  02                 	db	2
  1555  0181B9  05                 	db	5
  1556  0181BA  00                 	db	0
  1557  0181BB  00                 	db	0
  1558  0181BC  0D                 	db	13
  1559  0181BD  0000               	dw	0
  1560  0181BF  FF                 	db	255
  1561  0181C0  01                 	db	1
  1562  0181C1  21                 	db	33
  1563  0181C2  0001               	dw	1
  1564  0181C4  0000               	dw	0
  1565  0181C6  01                 	db	1
  1566  0181C7  80                 	db	128
  1567  0181C8  1A                 	db	26
  1568  0181C9  02                 	db	2
  1569  0181CA  00                 	db	0
  1570  0181CB  00                 	db	0
  1571  0181CC  0D                 	db	13
  1572                           
  1573                           ;initializer for _H12
  1574  0181CD  0000               	dw	0
  1575  0181CF  00                 	db	0
  1576  0181D0  01                 	db	1
  1577  0181D1  0001               	dw	1
  1578  0181D3  0000               	dw	0
  1579  0181D5  01                 	db	1
  1580  0181D6  80                 	db	128
  1581  0181D7  02                 	db	2
  1582  0181D8  01                 	db	1
  1583  0181D9  00                 	db	0
  1584  0181DA  00                 	db	0
  1585  0181DB  0C                 	db	12
  1586  0181DC  0000               	dw	0
  1587  0181DE  00                 	db	0
  1588  0181DF  01                 	db	1
  1589  0181E0  0001               	dw	1
  1590  0181E2  0000               	dw	0
  1591  0181E4  01                 	db	1
  1592  0181E5  80                 	db	128
  1593  0181E6  0D                 	db	13
  1594  0181E7  81                 	db	129
  1595  0181E8  00                 	db	0
  1596  0181E9  00                 	db	0
  1597  0181EA  0C                 	db	12
  1598                           
  1599                           ;initializer for _H17
  1600  0181EB  0000               	dw	0
  1601  0181ED  00                 	db	0
  1602  0181EE  01                 	db	1
  1603  0181EF  00                 	db	0
  1604  0181F0  01                 	db	1
  1605  0181F1  21                 	db	33
  1606  0181F2  02                 	db	2
  1607  0181F3  01                 	db	1
  1608  0181F4  0001               	dw	1
  1609  0181F6  0000               	dw	0
  1610  0181F8  01                 	db	1
  1611  0181F9  80                 	db	128
  1612  0181FA  0E                 	db	14
  1613  0181FB  01                 	db	1
  1614  0181FC  00                 	db	0
  1615  0181FD  00                 	db	0
  1616  0181FE  11                 	db	17
  1617                           
  1618                           ;initializer for _H14
  1619  0181FF  0000               	dw	0
  1620  018201  00                 	db	0
  1621  018202  41                 	db	65
  1622  018203  11                 	db	17
  1623  018204  01                 	db	1
  1624  018205  0001               	dw	1
  1625  018207  0000               	dw	0
  1626  018209  01                 	db	1
  1627  01820A  80                 	db	128
  1628  01820B  04                 	db	4
  1629  01820C  01                 	db	1
  1630  01820D  00                 	db	0
  1631  01820E  00                 	db	0
  1632  01820F  0E                 	db	14
  1633                           
  1634                           ;initializer for _port_data
  1635  018210  FF                 	db	255
  1636  018211  00                 	db	0
  1637  018212  FF                 	db	255
  1638  018213  00                 	db	0
  1639  018214  FF                 	db	255
  1640  018215  00                 	db	0
  1641  018216  FF                 	db	255
  1642  018217  00                 	db	0
  1643  018218  FF                 	db	255
  1644  018219  00                 	db	0
  1645  01821A  FF                 	db	255
  1646  01821B  00                 	db	0
  1647  01821C  FF                 	db	255
  1648  01821D  00                 	db	0
  1649  01821E  FF                 	db	255
  1650  01821F  00                 	db	0
  1651                           
  1652                           	psect	idataBANK2
  1653  01990A                     __pidataBANK2:
  1654                           	opt callstack 0
  1655                           
  1656                           ;initializer for _H26
  1657  01990A  0000               	dw	0
  1658  01990C  30                 	db	48
  1659  01990D  31                 	db	49
  1660  01990E  30                 	db	48
  1661  01990F  39                 	db	57
  1662  019910  31                 	db	49
  1663  019911  31                 	db	49
  1664  019912  30                 	db	48
  1665  019913  38                 	db	56
  1666  019914  34                 	db	52
  1667  019915  36                 	db	54
  1668  019916  30                 	db	48
  1669  019917  30                 	db	48
  1670  019918  30                 	db	48
  1671  019919  30                 	db	48
  1672  01991A  0E                 	db	14
  1673  01991B  41                 	db	65
  1674  01991C  0001               	dw	1
  1675  01991E  0000               	dw	0
  1676  019920  01                 	db	1
  1677  019921  80                 	db	128
  1678  019922  12                 	db	18
  1679  019923  02                 	db	2
  1680  019924  00                 	db	0
  1681  019925  00                 	db	0
  1682  019926  1A                 	db	26
  1683                           
  1684                           	psect	idataBANK6
  1685  017F3C                     __pidataBANK6:
  1686                           	opt callstack 0
  1687                           
  1688                           ;initializer for _T
  1689  017F3C  63                 	db	99
  1690  017F3D  6F                 	db	111
  1691  017F3E  6D                 	db	109
  1692  017F3F  6D                 	db	109
  1693  017F40  61                 	db	97
  1694  017F41  6E                 	db	110
  1695  017F42  64                 	db	100
  1696  017F43  73                 	db	115
  1697  017F44  20                 	db	32
  1698  017F45  31                 	db	49
  1699  017F46  00                 	db	0
  1700  017F47  00                 	db	0
  1701  017F48  00                 	db	0
  1702  017F49  00                 	db	0
  1703  017F4A  00                 	db	0
  1704  017F4B  00                 	db	0
  1705  017F4C  00                 	db	0
  1706  017F4D  00                 	db	0
  1707  017F4E  00                 	db	0
  1708  017F4F  00                 	db	0
  1709  017F50  00                 	db	0
  1710  017F51  00                 	db	0
  1711  017F52  00                 	db	0
  1712  017F53  00                 	db	0
  1713  017F54  00                 	db	0
  1714  017F55  00                 	db	0
  1715  017F56  00                 	db	0
  1716  017F57  00                 	db	0
  1717  017F58  00                 	db	0
  1718  017F59  00                 	db	0
  1719  017F5A  00                 	db	0
  1720  017F5B  00                 	db	0
  1721  017F5C  64                 	db	100
  1722  017F5D  69                 	db	105
  1723  017F5E  73                 	db	115
  1724  017F5F  70                 	db	112
  1725  017F60  6C                 	db	108
  1726  017F61  61                 	db	97
  1727  017F62  79                 	db	121
  1728  017F63  73                 	db	115
  1729  017F64  20                 	db	32
  1730  017F65  31                 	db	49
  1731  017F66  00                 	db	0
  1732  017F67  00                 	db	0
  1733  017F68  00                 	db	0
  1734  017F69  00                 	db	0
  1735  017F6A  00                 	db	0
  1736  017F6B  00                 	db	0
  1737  017F6C  00                 	db	0
  1738  017F6D  00                 	db	0
  1739  017F6E  00                 	db	0
  1740  017F6F  00                 	db	0
  1741  017F70  00                 	db	0
  1742  017F71  00                 	db	0
  1743  017F72  00                 	db	0
  1744  017F73  00                 	db	0
  1745  017F74  00                 	db	0
  1746  017F75  00                 	db	0
  1747  017F76  00                 	db	0
  1748  017F77  00                 	db	0
  1749  017F78  00                 	db	0
  1750  017F79  00                 	db	0
  1751  017F7A  00                 	db	0
  1752  017F7B  00                 	db	0
  1753  017F7C  63                 	db	99
  1754  017F7D  6F                 	db	111
  1755  017F7E  6D                 	db	109
  1756  017F7F  6D                 	db	109
  1757  017F80  61                 	db	97
  1758  017F81  6E                 	db	110
  1759  017F82  64                 	db	100
  1760  017F83  73                 	db	115
  1761  017F84  20                 	db	32
  1762  017F85  32                 	db	50
  1763  017F86  00                 	db	0
  1764  017F87  00                 	db	0
  1765  017F88  00                 	db	0
  1766  017F89  00                 	db	0
  1767  017F8A  00                 	db	0
  1768  017F8B  00                 	db	0
  1769  017F8C  00                 	db	0
  1770  017F8D  00                 	db	0
  1771  017F8E  00                 	db	0
  1772  017F8F  00                 	db	0
  1773  017F90  00                 	db	0
  1774  017F91  00                 	db	0
  1775  017F92  00                 	db	0
  1776  017F93  00                 	db	0
  1777  017F94  00                 	db	0
  1778  017F95  00                 	db	0
  1779  017F96  00                 	db	0
  1780  017F97  00                 	db	0
  1781  017F98  00                 	db	0
  1782  017F99  00                 	db	0
  1783  017F9A  00                 	db	0
  1784  017F9B  00                 	db	0
  1785  017F9C  64                 	db	100
  1786  017F9D  69                 	db	105
  1787  017F9E  73                 	db	115
  1788  017F9F  70                 	db	112
  1789  017FA0  6C                 	db	108
  1790  017FA1  61                 	db	97
  1791  017FA2  79                 	db	121
  1792  017FA3  73                 	db	115
  1793  017FA4  20                 	db	32
  1794  017FA5  32                 	db	50
  1795  017FA6  00                 	db	0
  1796  017FA7  00                 	db	0
  1797  017FA8  00                 	db	0
  1798  017FA9  00                 	db	0
  1799  017FAA  00                 	db	0
  1800  017FAB  00                 	db	0
  1801  017FAC  00                 	db	0
  1802  017FAD  00                 	db	0
  1803  017FAE  00                 	db	0
  1804  017FAF  00                 	db	0
  1805  017FB0  00                 	db	0
  1806  017FB1  00                 	db	0
  1807  017FB2  00                 	db	0
  1808  017FB3  00                 	db	0
  1809  017FB4  00                 	db	0
  1810  017FB5  00                 	db	0
  1811  017FB6  00                 	db	0
  1812  017FB7  00                 	db	0
  1813  017FB8  00                 	db	0
  1814  017FB9  00                 	db	0
  1815  017FBA  00                 	db	0
  1816  017FBB  00                 	db	0
  1817  017FBC  63                 	db	99
  1818  017FBD  6F                 	db	111
  1819  017FBE  6D                 	db	109
  1820  017FBF  6D                 	db	109
  1821  017FC0  61                 	db	97
  1822  017FC1  6E                 	db	110
  1823  017FC2  64                 	db	100
  1824  017FC3  73                 	db	115
  1825  017FC4  20                 	db	32
  1826  017FC5  33                 	db	51
  1827  017FC6  00                 	db	0
  1828  017FC7  00                 	db	0
  1829  017FC8  00                 	db	0
  1830  017FC9  00                 	db	0
  1831  017FCA  00                 	db	0
  1832  017FCB  00                 	db	0
  1833  017FCC  00                 	db	0
  1834  017FCD  00                 	db	0
  1835  017FCE  00                 	db	0
  1836  017FCF  00                 	db	0
  1837  017FD0  00                 	db	0
  1838  017FD1  00                 	db	0
  1839  017FD2  00                 	db	0
  1840  017FD3  00                 	db	0
  1841  017FD4  00                 	db	0
  1842  017FD5  00                 	db	0
  1843  017FD6  00                 	db	0
  1844  017FD7  00                 	db	0
  1845  017FD8  00                 	db	0
  1846  017FD9  00                 	db	0
  1847  017FDA  00                 	db	0
  1848  017FDB  00                 	db	0
  1849  017FDC  64                 	db	100
  1850  017FDD  69                 	db	105
  1851  017FDE  73                 	db	115
  1852  017FDF  70                 	db	112
  1853  017FE0  6C                 	db	108
  1854  017FE1  61                 	db	97
  1855  017FE2  79                 	db	121
  1856  017FE3  73                 	db	115
  1857  017FE4  20                 	db	32
  1858  017FE5  33                 	db	51
  1859  017FE6  00                 	db	0
  1860  017FE7  00                 	db	0
  1861  017FE8  00                 	db	0
  1862  017FE9  00                 	db	0
  1863  017FEA  00                 	db	0
  1864  017FEB  00                 	db	0
  1865  017FEC  00                 	db	0
  1866  017FED  00                 	db	0
  1867  017FEE  00                 	db	0
  1868  017FEF  00                 	db	0
  1869  017FF0  00                 	db	0
  1870  017FF1  00                 	db	0
  1871  017FF2  00                 	db	0
  1872  017FF3  00                 	db	0
  1873  017FF4  00                 	db	0
  1874  017FF5  00                 	db	0
  1875  017FF6  00                 	db	0
  1876  017FF7  00                 	db	0
  1877  017FF8  00                 	db	0
  1878  017FF9  00                 	db	0
  1879  017FFA  00                 	db	0
  1880  017FFB  00                 	db	0
  1881  017FFC  63                 	db	99
  1882  017FFD  6F                 	db	111
  1883  017FFE  6D                 	db	109
  1884  017FFF  6D                 	db	109
  1885  018000  61                 	db	97
  1886  018001  6E                 	db	110
  1887  018002  64                 	db	100
  1888  018003  73                 	db	115
  1889  018004  20                 	db	32
  1890  018005  34                 	db	52
  1891  018006  00                 	db	0
  1892  018007  00                 	db	0
  1893  018008  00                 	db	0
  1894  018009  00                 	db	0
  1895  01800A  00                 	db	0
  1896  01800B  00                 	db	0
  1897  01800C  00                 	db	0
  1898  01800D  00                 	db	0
  1899  01800E  00                 	db	0
  1900  01800F  00                 	db	0
  1901  018010  00                 	db	0
  1902  018011  00                 	db	0
  1903  018012  00                 	db	0
  1904  018013  00                 	db	0
  1905  018014  00                 	db	0
  1906  018015  00                 	db	0
  1907  018016  00                 	db	0
  1908  018017  00                 	db	0
  1909  018018  00                 	db	0
  1910  018019  00                 	db	0
  1911  01801A  00                 	db	0
  1912  01801B  00                 	db	0
  1913  01801C  64                 	db	100
  1914  01801D  69                 	db	105
  1915  01801E  73                 	db	115
  1916  01801F  70                 	db	112
  1917  018020  6C                 	db	108
  1918  018021  61                 	db	97
  1919  018022  79                 	db	121
  1920  018023  73                 	db	115
  1921  018024  20                 	db	32
  1922  018025  34                 	db	52
  1923  018026  00                 	db	0
  1924  018027  00                 	db	0
  1925  018028  00                 	db	0
  1926  018029  00                 	db	0
  1927  01802A  00                 	db	0
  1928  01802B  00                 	db	0
  1929  01802C  00                 	db	0
  1930  01802D  00                 	db	0
  1931  01802E  00                 	db	0
  1932  01802F  00                 	db	0
  1933  018030  00                 	db	0
  1934  018031  00                 	db	0
  1935  018032  00                 	db	0
  1936  018033  00                 	db	0
  1937  018034  00                 	db	0
  1938  018035  00                 	db	0
  1939  018036  00                 	db	0
  1940  018037  00                 	db	0
  1941  018038  00                 	db	0
  1942  018039  00                 	db	0
  1943  01803A  00                 	db	0
  1944  01803B  00                 	db	0
  1945                           
  1946                           	psect	mediumconst
  1947  00FAF0                     __pmediumconst:
  1948                           	opt callstack 0
  1949  00FAF0  00                 	db	0
  1950  00FAF1                     _HC33:
  1951                           	opt callstack 0
  1952  00FAF1  0000               	dw	0
  1953  00FAF3  01                 	db	1
  1954  00FAF4  01                 	db	1
  1955  00FAF5  A5                 	db	165
  1956  00FAF6  4B                 	db	75
  1957  00FAF7  43                 	db	67
  1958  00FAF8  4F                 	db	79
  1959  00FAF9  4C                 	db	76
  1960  00FAFA  44                 	db	68
  1961  00FAFB  41                 	db	65
  1962  00FAFC  4F                 	db	79
  1963  00FAFD  4C                 	db	76
  1964  00FAFE  08                 	db	8
  1965  00FAFF  41                 	db	65
  1966  00FB00  02                 	db	2
  1967  00FB01  01                 	db	1
  1968  00FB02  01                 	db	1
  1969  00FB03  01                 	db	1
  1970  00FB04  37                 	db	55
  1971  00FB05  31                 	db	49
  1972  00FB06  02                 	db	2
  1973  00FB07  41                 	db	65
  1974  00FB08  02                 	db	2
  1975  00FB09  01                 	db	1
  1976  00FB0A  0001               	dw	1
  1977  00FB0C  0000               	dw	0
  1978  00FB0E  01                 	db	1
  1979  00FB0F  80                 	db	128
  1980  00FB10  29                 	db	41
  1981  00FB11  82                 	db	130
  1982  00FB12  00                 	db	0
  1983  00FB13  00                 	db	0
  1984  00FB14  21                 	db	33
  1985  00FB15  0000               	dw	0
  1986  00FB17  01                 	db	1
  1987  00FB18  01                 	db	1
  1988  00FB19  A5                 	db	165
  1989  00FB1A  4B                 	db	75
  1990  00FB1B  43                 	db	67
  1991  00FB1C  4F                 	db	79
  1992  00FB1D  4C                 	db	76
  1993  00FB1E  44                 	db	68
  1994  00FB1F  41                 	db	65
  1995  00FB20  4F                 	db	79
  1996  00FB21  4C                 	db	76
  1997  00FB22  08                 	db	8
  1998  00FB23  41                 	db	65
  1999  00FB24  02                 	db	2
  2000  00FB25  01                 	db	1
  2001  00FB26  01                 	db	1
  2002  00FB27  01                 	db	1
  2003  00FB28  32                 	db	50
  2004  00FB29  31                 	db	49
  2005  00FB2A  02                 	db	2
  2006  00FB2B  41                 	db	65
  2007  00FB2C  02                 	db	2
  2008  00FB2D  01                 	db	1
  2009  00FB2E  0001               	dw	1
  2010  00FB30  0000               	dw	0
  2011  00FB32  01                 	db	1
  2012  00FB33  80                 	db	128
  2013  00FB34  29                 	db	41
  2014  00FB35  82                 	db	130
  2015  00FB36  00                 	db	0
  2016  00FB37  00                 	db	0
  2017  00FB38  21                 	db	33
  2018  00FB39                     __end_of_HC33:
  2019                           	opt callstack 0
  2020  00FB39                     _msg0:
  2021                           	opt callstack 0
  2022  00FB39  4D                 	db	77
  2023  00FB3A  45                 	db	69
  2024  00FB3B  53                 	db	83
  2025  00FB3C  53                 	db	83
  2026  00FB3D  41                 	db	65
  2027  00FB3E  47                 	db	71
  2028  00FB3F  45                 	db	69
  2029  00FB40  20                 	db	32
  2030  00FB41  41                 	db	65
  2031  00FB42  6C                 	db	108
  2032  00FB43  6C                 	db	108
  2033  00FB44  20                 	db	32
  2034  00FB45  25                 	db	37
  2035  00FB46  64                 	db	100
  2036  00FB47  2C                 	db	44
  2037  00FB48  20                 	db	32
  2038  00FB49  52                 	db	82
  2039  00FB4A  65                 	db	101
  2040  00FB4B  61                 	db	97
  2041  00FB4C  64                 	db	100
  2042  00FB4D  20                 	db	32
  2043  00FB4E  25                 	db	37
  2044  00FB4F  64                 	db	100
  2045  00FB50  20                 	db	32
  2046  00FB51  46                 	db	70
  2047  00FB52  61                 	db	97
  2048  00FB53  69                 	db	105
  2049  00FB54  6C                 	db	108
  2050  00FB55  65                 	db	101
  2051  00FB56  64                 	db	100
  2052  00FB57  20                 	db	32
  2053  00FB58  25                 	db	37
  2054  00FB59  64                 	db	100
  2055  00FB5A  2C                 	db	44
  2056  00FB5B  20                 	db	32
  2057  00FB5C  54                 	db	84
  2058  00FB5D  72                 	db	114
  2059  00FB5E  61                 	db	97
  2060  00FB5F  6E                 	db	110
  2061  00FB60  73                 	db	115
  2062  00FB61  6D                 	db	109
  2063  00FB62  69                 	db	105
  2064  00FB63  74                 	db	116
  2065  00FB64  20                 	db	32
  2066  00FB65  25                 	db	37
  2067  00FB66  64                 	db	100
  2068  00FB67  20                 	db	32
  2069  00FB68  46                 	db	70
  2070  00FB69  61                 	db	97
  2071  00FB6A  69                 	db	105
  2072  00FB6B  6C                 	db	108
  2073  00FB6C  65                 	db	101
  2074  00FB6D  64                 	db	100
  2075  00FB6E  20                 	db	32
  2076  00FB6F  25                 	db	37
  2077  00FB70  64                 	db	100
  2078  00FB71  2C                 	db	44
  2079  00FB72  20                 	db	32
  2080  00FB73  43                 	db	67
  2081  00FB74  68                 	db	104
  2082  00FB75  65                 	db	101
  2083  00FB76  63                 	db	99
  2084  00FB77  6B                 	db	107
  2085  00FB78  73                 	db	115
  2086  00FB79  75                 	db	117
  2087  00FB7A  6D                 	db	109
  2088  00FB7B  20                 	db	32
  2089  00FB7C  65                 	db	101
  2090  00FB7D  72                 	db	114
  2091  00FB7E  72                 	db	114
  2092  00FB7F  6F                 	db	111
  2093  00FB80  72                 	db	114
  2094  00FB81  20                 	db	32
  2095  00FB82  25                 	db	37
  2096  00FB83  64                 	db	100
  2097  00FB84  20                 	db	32
  2098  00FB85  20                 	db	32
  2099  00FB86  46                 	db	70
  2100  00FB87  47                 	db	71
  2101  00FB88  42                 	db	66
  2102  00FB89  40                 	db	64
  2103  00FB8A  4D                 	db	77
  2104  00FB8B  43                 	db	67
  2105  00FB8C  48                 	db	72
  2106  00FB8D  50                 	db	80
  2107  00FB8E  20                 	db	32
  2108  00FB8F  25                 	db	37
  2109  00FB90  73                 	db	115
  2110  00FB91  00                 	db	0
  2111  00FB92                     __end_of_msg0:
  2112                           	opt callstack 0
  2113  00FB92                     _msg1:
  2114                           	opt callstack 0
  2115  00FB92  4F                 	db	79
  2116  00FB93  4E                 	db	78
  2117  00FB94  4C                 	db	76
  2118  00FB95  49                 	db	73
  2119  00FB96  4E                 	db	78
  2120  00FB97  45                 	db	69
  2121  00FB98  20                 	db	32
  2122  00FB99  41                 	db	65
  2123  00FB9A  6C                 	db	108
  2124  00FB9B  6C                 	db	108
  2125  00FB9C  20                 	db	32
  2126  00FB9D  25                 	db	37
  2127  00FB9E  64                 	db	100
  2128  00FB9F  2C                 	db	44
  2129  00FBA0  20                 	db	32
  2130  00FBA1  52                 	db	82
  2131  00FBA2  65                 	db	101
  2132  00FBA3  61                 	db	97
  2133  00FBA4  64                 	db	100
  2134  00FBA5  20                 	db	32
  2135  00FBA6  25                 	db	37
  2136  00FBA7  64                 	db	100
  2137  00FBA8  20                 	db	32
  2138  00FBA9  46                 	db	70
  2139  00FBAA  61                 	db	97
  2140  00FBAB  69                 	db	105
  2141  00FBAC  6C                 	db	108
  2142  00FBAD  65                 	db	101
  2143  00FBAE  64                 	db	100
  2144  00FBAF  20                 	db	32
  2145  00FBB0  25                 	db	37
  2146  00FBB1  64                 	db	100
  2147  00FBB2  2C                 	db	44
  2148  00FBB3  20                 	db	32
  2149  00FBB4  54                 	db	84
  2150  00FBB5  72                 	db	114
  2151  00FBB6  61                 	db	97
  2152  00FBB7  6E                 	db	110
  2153  00FBB8  73                 	db	115
  2154  00FBB9  6D                 	db	109
  2155  00FBBA  69                 	db	105
  2156  00FBBB  74                 	db	116
  2157  00FBBC  20                 	db	32
  2158  00FBBD  25                 	db	37
  2159  00FBBE  64                 	db	100
  2160  00FBBF  20                 	db	32
  2161  00FBC0  46                 	db	70
  2162  00FBC1  61                 	db	97
  2163  00FBC2  69                 	db	105
  2164  00FBC3  6C                 	db	108
  2165  00FBC4  65                 	db	101
  2166  00FBC5  64                 	db	100
  2167  00FBC6  20                 	db	32
  2168  00FBC7  25                 	db	37
  2169  00FBC8  64                 	db	100
  2170  00FBC9  2C                 	db	44
  2171  00FBCA  20                 	db	32
  2172  00FBCB  43                 	db	67
  2173  00FBCC  68                 	db	104
  2174  00FBCD  65                 	db	101
  2175  00FBCE  63                 	db	99
  2176  00FBCF  6B                 	db	107
  2177  00FBD0  73                 	db	115
  2178  00FBD1  75                 	db	117
  2179  00FBD2  6D                 	db	109
  2180  00FBD3  20                 	db	32
  2181  00FBD4  65                 	db	101
  2182  00FBD5  72                 	db	114
  2183  00FBD6  72                 	db	114
  2184  00FBD7  6F                 	db	111
  2185  00FBD8  72                 	db	114
  2186  00FBD9  20                 	db	32
  2187  00FBDA  25                 	db	37
  2188  00FBDB  64                 	db	100
  2189  00FBDC  20                 	db	32
  2190  00FBDD  20                 	db	32
  2191  00FBDE  46                 	db	70
  2192  00FBDF  47                 	db	71
  2193  00FBE0  42                 	db	66
  2194  00FBE1  40                 	db	64
  2195  00FBE2  4D                 	db	77
  2196  00FBE3  43                 	db	67
  2197  00FBE4  48                 	db	72
  2198  00FBE5  50                 	db	80
  2199  00FBE6  20                 	db	32
  2200  00FBE7  25                 	db	37
  2201  00FBE8  73                 	db	115
  2202  00FBE9  00                 	db	0
  2203  00FBEA                     __end_of_msg1:
  2204                           	opt callstack 0
  2205  00FBEA                     _msg2:
  2206                           	opt callstack 0
  2207  00FBEA  43                 	db	67
  2208  00FBEB  4F                 	db	79
  2209  00FBEC  4D                 	db	77
  2210  00FBED  4D                 	db	77
  2211  00FBEE  20                 	db	32
  2212  00FBEF  41                 	db	65
  2213  00FBF0  6C                 	db	108
  2214  00FBF1  6C                 	db	108
  2215  00FBF2  20                 	db	32
  2216  00FBF3  25                 	db	37
  2217  00FBF4  64                 	db	100
  2218  00FBF5  2C                 	db	44
  2219  00FBF6  20                 	db	32
  2220  00FBF7  52                 	db	82
  2221  00FBF8  65                 	db	101
  2222  00FBF9  61                 	db	97
  2223  00FBFA  64                 	db	100
  2224  00FBFB  20                 	db	32
  2225  00FBFC  25                 	db	37
  2226  00FBFD  64                 	db	100
  2227  00FBFE  20                 	db	32
  2228  00FBFF  46                 	db	70
  2229  00FC00  61                 	db	97
  2230  00FC01  69                 	db	105
  2231  00FC02  6C                 	db	108
  2232  00FC03  65                 	db	101
  2233  00FC04  64                 	db	100
  2234  00FC05  20                 	db	32
  2235  00FC06  25                 	db	37
  2236  00FC07  64                 	db	100
  2237  00FC08  2C                 	db	44
  2238  00FC09  20                 	db	32
  2239  00FC0A  54                 	db	84
  2240  00FC0B  72                 	db	114
  2241  00FC0C  61                 	db	97
  2242  00FC0D  6E                 	db	110
  2243  00FC0E  73                 	db	115
  2244  00FC0F  6D                 	db	109
  2245  00FC10  69                 	db	105
  2246  00FC11  74                 	db	116
  2247  00FC12  20                 	db	32
  2248  00FC13  25                 	db	37
  2249  00FC14  64                 	db	100
  2250  00FC15  20                 	db	32
  2251  00FC16  46                 	db	70
  2252  00FC17  61                 	db	97
  2253  00FC18  69                 	db	105
  2254  00FC19  6C                 	db	108
  2255  00FC1A  65                 	db	101
  2256  00FC1B  64                 	db	100
  2257  00FC1C  20                 	db	32
  2258  00FC1D  25                 	db	37
  2259  00FC1E  64                 	db	100
  2260  00FC1F  2C                 	db	44
  2261  00FC20  20                 	db	32
  2262  00FC21  43                 	db	67
  2263  00FC22  68                 	db	104
  2264  00FC23  65                 	db	101
  2265  00FC24  63                 	db	99
  2266  00FC25  6B                 	db	107
  2267  00FC26  73                 	db	115
  2268  00FC27  75                 	db	117
  2269  00FC28  6D                 	db	109
  2270  00FC29  20                 	db	32
  2271  00FC2A  65                 	db	101
  2272  00FC2B  72                 	db	114
  2273  00FC2C  72                 	db	114
  2274  00FC2D  6F                 	db	111
  2275  00FC2E  72                 	db	114
  2276  00FC2F  20                 	db	32
  2277  00FC30  25                 	db	37
  2278  00FC31  64                 	db	100
  2279  00FC32  20                 	db	32
  2280  00FC33  20                 	db	32
  2281  00FC34  46                 	db	70
  2282  00FC35  47                 	db	71
  2283  00FC36  42                 	db	66
  2284  00FC37  40                 	db	64
  2285  00FC38  4D                 	db	77
  2286  00FC39  43                 	db	67
  2287  00FC3A  48                 	db	72
  2288  00FC3B  50                 	db	80
  2289  00FC3C  20                 	db	32
  2290  00FC3D  25                 	db	37
  2291  00FC3E  73                 	db	115
  2292  00FC3F  00                 	db	0
  2293  00FC40                     __end_of_msg2:
  2294                           	opt callstack 0
  2295  00FC40                     _msg99:
  2296                           	opt callstack 0
  2297  00FC40  55                 	db	85
  2298  00FC41  4E                 	db	78
  2299  00FC42  4B                 	db	75
  2300  00FC43  20                 	db	32
  2301  00FC44  46                 	db	70
  2302  00FC45  4F                 	db	79
  2303  00FC46  52                 	db	82
  2304  00FC47  4D                 	db	77
  2305  00FC48  41                 	db	65
  2306  00FC49  54                 	db	84
  2307  00FC4A  20                 	db	32
  2308  00FC4B  41                 	db	65
  2309  00FC4C  6C                 	db	108
  2310  00FC4D  6C                 	db	108
  2311  00FC4E  20                 	db	32
  2312  00FC4F  25                 	db	37
  2313  00FC50  64                 	db	100
  2314  00FC51  2C                 	db	44
  2315  00FC52  20                 	db	32
  2316  00FC53  52                 	db	82
  2317  00FC54  25                 	db	37
  2318  00FC55  64                 	db	100
  2319  00FC56  20                 	db	32
  2320  00FC57  46                 	db	70
  2321  00FC58  25                 	db	37
  2322  00FC59  64                 	db	100
  2323  00FC5A  2C                 	db	44
  2324  00FC5B  20                 	db	32
  2325  00FC5C  54                 	db	84
  2326  00FC5D  25                 	db	37
  2327  00FC5E  64                 	db	100
  2328  00FC5F  20                 	db	32
  2329  00FC60  46                 	db	70
  2330  00FC61  25                 	db	37
  2331  00FC62  64                 	db	100
  2332  00FC63  2C                 	db	44
  2333  00FC64  20                 	db	32
  2334  00FC65  43                 	db	67
  2335  00FC66  25                 	db	37
  2336  00FC67  64                 	db	100
  2337  00FC68  20                 	db	32
  2338  00FC69  46                 	db	70
  2339  00FC6A  47                 	db	71
  2340  00FC6B  42                 	db	66
  2341  00FC6C  40                 	db	64
  2342  00FC6D  4D                 	db	77
  2343  00FC6E  43                 	db	67
  2344  00FC6F  48                 	db	72
  2345  00FC70  50                 	db	80
  2346  00FC71  20                 	db	32
  2347  00FC72  25                 	db	37
  2348  00FC73  73                 	db	115
  2349  00FC74  20                 	db	32
  2350  00FC75  20                 	db	32
  2351  00FC76  20                 	db	32
  2352  00FC77  00                 	db	0
  2353  00FC78                     __end_of_msg99:
  2354                           	opt callstack 0
  2355  0000                     _IVTADL	set	14493
  2356  0000                     _IVTADH	set	14494
  2357  0000                     _IVTADU	set	14495
  2358  0000                     _PIR4bits	set	14756
  2359  0000                     _PIE8bits	set	14744
  2360  0000                     _PIR8bits	set	14760
  2361  0000                     _NVMCON2	set	14822
  2362  0000                     _NVMDAT	set	14819
  2363  0000                     _NVMADRL	set	14816
  2364  0000                     _NVMADRH	set	14817
  2365  0000                     _NVMCON1bits	set	14821
  2366  0000                     _SCANPR	set	14839
  2367  0000                     _DMA2PR	set	14836
  2368  0000                     _DMA1PR	set	14835
  2369  0000                     _MAINPR	set	14834
  2370  0000                     _ISRPR	set	14833
  2371  0000                     _PIE2bits	set	14738
  2372  0000                     _PIR2bits	set	14754
  2373  0000                     _PIE9bits	set	14745
  2374  0000                     _PIR9bits	set	14761
  2375  0000                     _PIE6bits	set	14742
  2376  0000                     _PIE3bits	set	14739
  2377  0000                     _PMD7	set	14791
  2378  0000                     _PMD6	set	14790
  2379  0000                     _PMD5	set	14789
  2380  0000                     _PMD4	set	14788
  2381  0000                     _PMD3	set	14787
  2382  0000                     _PMD2	set	14786
  2383  0000                     _PMD1	set	14785
  2384  0000                     _PMD0	set	14784
  2385  0000                     _OSCTUNE	set	14814
  2386  0000                     _OSCFRQ	set	14815
  2387  0000                     _OSCEN	set	14813
  2388  0000                     _OSCCON3	set	14811
  2389  0000                     _OSCCON1	set	14809
  2390  0000                     _IPR8bits	set	14728
  2391  0000                     _IPR9bits	set	14729
  2392  0000                     _IPR5bits	set	14725
  2393  0000                     _IPR1bits	set	14721
  2394  0000                     _IPR3bits	set	14723
  2395  0000                     _IPR6bits	set	14726
  2396  0000                     _IPR2bits	set	14722
  2397  0000                     _PIE5bits	set	14741
  2398  0000                     _PIE1bits	set	14737
  2399  0000                     _PIR5bits	set	14757
  2400  0000                     _PIR1bits	set	14753
  2401  0000                     _PLLR	set	118496
  2402  0000                     _SPI1SDIPPS	set	15071
  2403  0000                     _U1RXPPS	set	15077
  2404  0000                     _RC6PPS	set	14870
  2405  0000                     _RC5PPS	set	14869
  2406  0000                     _INT1PPS	set	15041
  2407  0000                     _RD1PPS	set	14873
  2408  0000                     _INT0PPS	set	15040
  2409  0000                     _RC3PPS	set	14867
  2410  0000                     _RB6PPS	set	14862
  2411  0000                     _SPI1SCKPPS	set	15070
  2412  0000                     _U2RXPPS	set	15080
  2413  0000                     _SLRCONF	set	14995
  2414  0000                     _SLRCONE	set	14979
  2415  0000                     _SLRCOND	set	14963
  2416  0000                     _SLRCONC	set	14947
  2417  0000                     _SLRCONB	set	14931
  2418  0000                     _SLRCONA	set	14915
  2419  0000                     _ODCOND	set	14962
  2420  0000                     _ODCONC	set	14946
  2421  0000                     _ODCONB	set	14930
  2422  0000                     _ODCONA	set	14914
  2423  0000                     _ODCONF	set	14994
  2424  0000                     _ODCONE	set	14978
  2425  0000                     _WPUC	set	14945
  2426  0000                     _WPUA	set	14913
  2427  0000                     _WPUB	set	14929
  2428  0000                     _WPUE	set	14977
  2429  0000                     _WPUF	set	14993
  2430  0000                     _WPUD	set	14961
  2431  0000                     _ANSELA	set	14912
  2432  0000                     _ANSELF	set	14992
  2433  0000                     _ANSELE	set	14976
  2434  0000                     _ANSELB	set	14928
  2435  0000                     _ANSELC	set	14944
  2436  0000                     _ANSELD	set	14960
  2437  0000                     _DMA2SSA	set	15321
  2438  0000                     _DMA1SSA	set	15353
  2439  0000                     _DMA2DSZ	set	15310
  2440  0000                     _DMA2SSZ	set	15319
  2441  0000                     _DMA2DSA	set	15312
  2442  0000                     _DMA1DSZ	set	15342
  2443  0000                     _DMA1SSZ	set	15351
  2444  0000                     _DMA1DSA	set	15344
  2445  0000                     _DMA1CON0bits	set	15356
  2446  0000                     _DMA1CON1bits	set	15357
  2447  0000                     _DMA2CON0	set	15324
  2448  0000                     _DMA2AIRQ	set	15326
  2449  0000                     _DMA2SIRQ	set	15327
  2450  0000                     _DMA2CON1	set	15325
  2451  0000                     _DMA1CON0	set	15356
  2452  0000                     _DMA1AIRQ	set	15358
  2453  0000                     _DMA1SIRQ	set	15359
  2454  0000                     _DMA1CON1	set	15357
  2455  0000                     _CLKRCON	set	15589
  2456  0000                     _CLKRCLK	set	15590
  2457  0000                     _SPI1INTFbits	set	15642
  2458  0000                     _SPI1RXB	set	15632
  2459  0000                     _SPI1TXB	set	15633
  2460  0000                     _SPI1TCNTL	set	15634
  2461  0000                     _SPI1CON0	set	15636
  2462  0000                     _SPI1CLK	set	15644
  2463  0000                     _SPI1BAUD	set	15641
  2464  0000                     _SPI1CON2	set	15638
  2465  0000                     _SPI1CON1	set	15637
  2466  0000                     _U2RXB	set	15824
  2467  0000                     _U2TXB	set	15826
  2468  0000                     _U2ERRIE	set	15842
  2469  0000                     _U2ERRIR	set	15841
  2470  0000                     _U2UIR	set	15840
  2471  0000                     _U2FIFO	set	15839
  2472  0000                     _U2BRGH	set	15838
  2473  0000                     _U2BRGL	set	15837
  2474  0000                     _U2CON2	set	15836
  2475  0000                     _U2CON1	set	15835
  2476  0000                     _U2CON0	set	15834
  2477  0000                     _U2P3L	set	15832
  2478  0000                     _U2P2L	set	15830
  2479  0000                     _U2P1L	set	15828
  2480  0000                     _U1RXB	set	15848
  2481  0000                     _U1TXB	set	15850
  2482  0000                     _U1ERRIE	set	15866
  2483  0000                     _U1ERRIR	set	15865
  2484  0000                     _U1UIR	set	15864
  2485  0000                     _U1FIFO	set	15863
  2486  0000                     _U1BRGH	set	15862
  2487  0000                     _U1BRGL	set	15861
  2488  0000                     _U1CON2	set	15860
  2489  0000                     _U1CON1	set	15859
  2490  0000                     _U1CON0	set	15858
  2491  0000                     _U1P3H	set	15857
  2492  0000                     _U1P3L	set	15856
  2493  0000                     _U1P2H	set	15855
  2494  0000                     _U1P2L	set	15854
  2495  0000                     _U1P1H	set	15853
  2496  0000                     _U1P1L	set	15852
  2497  0000                     _ADCON0	set	16120
  2498  0000                     _ADCLK	set	16127
  2499  0000                     _ADACT	set	16126
  2500  0000                     _ADREF	set	16125
  2501  0000                     _ADSTAT	set	16124
  2502  0000                     _ADCON3	set	16123
  2503  0000                     _ADCON2	set	16122
  2504  0000                     _ADCON1	set	16121
  2505  0000                     _ADPREH	set	16119
  2506  0000                     _ADPREL	set	16118
  2507  0000                     _ADCAP	set	16117
  2508  0000                     _ADACQH	set	16116
  2509  0000                     _ADACQL	set	16115
  2510  0000                     _ADPCH	set	16113
  2511  0000                     _ADRPT	set	16108
  2512  0000                     _ADACCU	set	16106
  2513  0000                     _ADSTPTH	set	16101
  2514  0000                     _ADSTPTL	set	16100
  2515  0000                     _ADUTHH	set	16097
  2516  0000                     _ADUTHL	set	16096
  2517  0000                     _ADLTHH	set	16095
  2518  0000                     _ADLTHL	set	16094
  2519  0000                     _CCPTMRS1bits	set	16223
  2520  0000                     _LATCbits	set	16316
  2521  0000                     _LATDbits	set	16317
  2522  0000                     _PORTBbits	set	16331
  2523  0000                     _T2CON	set	16300
  2524  0000                     _T2TMR	set	16298
  2525  0000                     _T2PR	set	16299
  2526  0000                     _T2RST	set	16303
  2527  0000                     _T2HLT	set	16301
  2528  0000                     _T2CLKCON	set	16302
  2529  0000                     _PWM8DCL	set	16224
  2530  0000                     _PWM8DCH	set	16225
  2531  0000                     _PWM8CON	set	16226
  2532  0000                     _T5CONbits	set	16282
  2533  0000                     _T5CON	set	16282
  2534  0000                     _TMR5L	set	16280
  2535  0000                     _TMR5H	set	16281
  2536  0000                     _T5CLK	set	16285
  2537  0000                     _T5GATE	set	16284
  2538  0000                     _T5GCON	set	16283
  2539  0000                     _T6CON	set	16276
  2540  0000                     _T6TMR	set	16274
  2541  0000                     _T6PR	set	16275
  2542  0000                     _T6RST	set	16279
  2543  0000                     _T6HLT	set	16277
  2544  0000                     _T6CLKCON	set	16278
  2545  0000                     _LATEbits	set	16318
  2546  0000                     _TRISD	set	16325
  2547  0000                     _TRISC	set	16324
  2548  0000                     _TRISB	set	16323
  2549  0000                     _TRISA	set	16322
  2550  0000                     _TRISF	set	16327
  2551  0000                     _TRISE	set	16326
  2552  0000                     _LATC	set	16316
  2553  0000                     _LATB	set	16315
  2554  0000                     _LATF	set	16319
  2555  0000                     _LATA	set	16314
  2556  0000                     _LATD	set	16317
  2557  0000                     _LATE	set	16318
  2558  0000                     _IVTLOCKbits	set	16340
  2559  0000                     _IVTLOCK	set	16340
  2560  0000                     _INTCON0bits	set	16338
  2561  0000                     _GIE	set	130711
  2562  00FC78                     STR_25:
  2563  00FC78  52                 	db	82	;'R'
  2564  00FC79  25                 	db	37
  2565  00FC7A  64                 	db	100	;'d'
  2566  00FC7B  20                 	db	32
  2567  00FC7C  25                 	db	37
  2568  00FC7D  64                 	db	100	;'d'
  2569  00FC7E  2C                 	db	44
  2570  00FC7F  20                 	db	32
  2571  00FC80  54                 	db	84	;'T'
  2572  00FC81  25                 	db	37
  2573  00FC82  64                 	db	100	;'d'
  2574  00FC83  20                 	db	32
  2575  00FC84  25                 	db	37
  2576  00FC85  64                 	db	100	;'d'
  2577  00FC86  20                 	db	32
  2578  00FC87  43                 	db	67	;'C'
  2579  00FC88  25                 	db	37
  2580  00FC89  64                 	db	100	;'d'
  2581  00FC8A  20                 	db	32
  2582  00FC8B  25                 	db	37
  2583  00FC8C  64                 	db	100	;'d'
  2584  00FC8D  20                 	db	32
  2585  00FC8E  20                 	db	32
  2586  00FC8F  20                 	db	32
  2587  00FC90  20                 	db	32
  2588  00FC91  20                 	db	32
  2589  00FC92  20                 	db	32
  2590  00FC93  23                 	db	35
  2591  00FC94  00                 	db	0
  2592  00FC95                     STR_61:
  2593  00FC95  20                 	db	32
  2594  00FC96  54                 	db	84	;'T'
  2595  00FC97  65                 	db	101	;'e'
  2596  00FC98  72                 	db	114	;'r'
  2597  00FC99  6D                 	db	109	;'m'
  2598  00FC9A  69                 	db	105	;'i'
  2599  00FC9B  6E                 	db	110	;'n'
  2600  00FC9C  61                 	db	97	;'a'
  2601  00FC9D  6C                 	db	108	;'l'
  2602  00FC9E  20                 	db	32
  2603  00FC9F  25                 	db	37
  2604  00FCA0  64                 	db	100	;'d'
  2605  00FCA1  20                 	db	32
  2606  00FCA2  20                 	db	32
  2607  00FCA3  20                 	db	32
  2608  00FCA4  20                 	db	32
  2609  00FCA5  20                 	db	32
  2610  00FCA6  20                 	db	32
  2611  00FCA7  20                 	db	32
  2612  00FCA8  20                 	db	32
  2613  00FCA9  20                 	db	32
  2614  00FCAA  20                 	db	32
  2615  00FCAB  20                 	db	32
  2616  00FCAC  20                 	db	32
  2617  00FCAD  20                 	db	32
  2618  00FCAE  00                 	db	0
  2619  00FCAF                     STR_35:
  2620  00FCAF  20                 	db	32
  2621  00FCB0  44                 	db	68	;'D'
  2622  00FCB1  65                 	db	101	;'e'
  2623  00FCB2  62                 	db	98	;'b'
  2624  00FCB3  75                 	db	117	;'u'
  2625  00FCB4  67                 	db	103	;'g'
  2626  00FCB5  20                 	db	32
  2627  00FCB6  54                 	db	84	;'T'
  2628  00FCB7  6F                 	db	111	;'o'
  2629  00FCB8  67                 	db	103	;'g'
  2630  00FCB9  67                 	db	103	;'g'
  2631  00FCBA  6C                 	db	108	;'l'
  2632  00FCBB  65                 	db	101	;'e'
  2633  00FCBC  20                 	db	32
  2634  00FCBD  20                 	db	32
  2635  00FCBE  20                 	db	32
  2636  00FCBF  20                 	db	32
  2637  00FCC0  20                 	db	32
  2638  00FCC1  20                 	db	32
  2639  00FCC2  20                 	db	32
  2640  00FCC3  20                 	db	32
  2641  00FCC4  20                 	db	32
  2642  00FCC5  20                 	db	32
  2643  00FCC6  20                 	db	32
  2644  00FCC7  20                 	db	32
  2645  00FCC8  00                 	db	0
  2646  00FCC9                     STR_34:
  2647  00FCC9  20                 	db	32
  2648  00FCCA  4C                 	db	76	;'L'
  2649  00FCCB  6F                 	db	111	;'o'
  2650  00FCCC  67                 	db	103	;'g'
  2651  00FCCD  20                 	db	32
  2652  00FCCE  66                 	db	102	;'f'
  2653  00FCCF  69                 	db	105	;'i'
  2654  00FCD0  6C                 	db	108	;'l'
  2655  00FCD1  65                 	db	101	;'e'
  2656  00FCD2  20                 	db	32
  2657  00FCD3  72                 	db	114	;'r'
  2658  00FCD4  65                 	db	101	;'e'
  2659  00FCD5  73                 	db	115	;'s'
  2660  00FCD6  65                 	db	101	;'e'
  2661  00FCD7  74                 	db	116	;'t'
  2662  00FCD8  20                 	db	32
  2663  00FCD9  20                 	db	32
  2664  00FCDA  20                 	db	32
  2665  00FCDB  20                 	db	32
  2666  00FCDC  20                 	db	32
  2667  00FCDD  20                 	db	32
  2668  00FCDE  20                 	db	32
  2669  00FCDF  20                 	db	32
  2670  00FCE0  20                 	db	32
  2671  00FCE1  20                 	db	32
  2672  00FCE2  00                 	db	0
  2673  00FCE3                     STR_20:
  2674  00FCE3  4C                 	db	76	;'L'
  2675  00FCE4  4F                 	db	79	;'O'
  2676  00FCE5  47                 	db	71	;'G'
  2677  00FCE6  3A                 	db	58	;':'
  2678  00FCE7  20                 	db	32
  2679  00FCE8  55                 	db	85	;'U'
  2680  00FCE9  25                 	db	37
  2681  00FCEA  64                 	db	100	;'d'
  2682  00FCEB  20                 	db	32
  2683  00FCEC  47                 	db	71	;'G'
  2684  00FCED  25                 	db	37
  2685  00FCEE  64                 	db	100	;'d'
  2686  00FCEF  20                 	db	32
  2687  00FCF0  25                 	db	37
  2688  00FCF1  64                 	db	100	;'d'
  2689  00FCF2  20                 	db	32
  2690  00FCF3  25                 	db	37
  2691  00FCF4  64                 	db	100	;'d'
  2692  00FCF5  20                 	db	32
  2693  00FCF6  20                 	db	32
  2694  00FCF7  20                 	db	32
  2695  00FCF8  20                 	db	32
  2696  00FCF9  20                 	db	32
  2697  00FCFA  20                 	db	32
  2698  00FCFB  23                 	db	35
  2699  00FCFC  00                 	db	0
  2700  00FCFD                     STR_62:
  2701  00FCFD  20                 	db	32
  2702  00FCFE  43                 	db	67	;'C'
  2703  00FCFF  4D                 	db	77	;'M'
  2704  00FD00  44                 	db	68	;'D'
  2705  00FD01  20                 	db	32
  2706  00FD02  25                 	db	37
  2707  00FD03  63                 	db	99	;'c'
  2708  00FD04  20                 	db	32
  2709  00FD05  25                 	db	37
  2710  00FD06  63                 	db	99	;'c'
  2711  00FD07  20                 	db	32
  2712  00FD08  4C                 	db	76	;'L'
  2713  00FD09  65                 	db	101	;'e'
  2714  00FD0A  6E                 	db	110	;'n'
  2715  00FD0B  20                 	db	32
  2716  00FD0C  25                 	db	37
  2717  00FD0D  64                 	db	100	;'d'
  2718  00FD0E  20                 	db	32
  2719  00FD0F  20                 	db	32
  2720  00FD10  20                 	db	32
  2721  00FD11  20                 	db	32
  2722  00FD12  20                 	db	32
  2723  00FD13  20                 	db	32
  2724  00FD14  20                 	db	32
  2725  00FD15  00                 	db	0
  2726  00FD16                     STR_46:
  2727  00FD16  20                 	db	32
  2728  00FD17  4D                 	db	77	;'M'
  2729  00FD18  65                 	db	101	;'e'
  2730  00FD19  73                 	db	115	;'s'
  2731  00FD1A  67                 	db	103	;'g'
  2732  00FD1B  20                 	db	32
  2733  00FD1C  25                 	db	37
  2734  00FD1D  64                 	db	100	;'d'
  2735  00FD1E  20                 	db	32
  2736  00FD1F  53                 	db	83	;'S'
  2737  00FD20  74                 	db	116	;'t'
  2738  00FD21  61                 	db	97	;'a'
  2739  00FD22  63                 	db	99	;'c'
  2740  00FD23  6B                 	db	107	;'k'
  2741  00FD24  20                 	db	32
  2742  00FD25  25                 	db	37
  2743  00FD26  64                 	db	100	;'d'
  2744  00FD27  20                 	db	32
  2745  00FD28  20                 	db	32
  2746  00FD29  20                 	db	32
  2747  00FD2A  20                 	db	32
  2748  00FD2B  20                 	db	32
  2749  00FD2C  20                 	db	32
  2750  00FD2D  00                 	db	0
  2751  00FD2E                     STR_57:
  2752  00FD2E  20                 	db	32
  2753  00FD2F  4C                 	db	76	;'L'
  2754  00FD30  6F                 	db	111	;'o'
  2755  00FD31  61                 	db	97	;'a'
  2756  00FD32  64                 	db	100	;'d'
  2757  00FD33  2D                 	db	45
  2758  00FD34  6C                 	db	108	;'l'
  2759  00FD35  6F                 	db	111	;'o'
  2760  00FD36  63                 	db	99	;'c'
  2761  00FD37  6B                 	db	107	;'k'
  2762  00FD38  20                 	db	32
  2763  00FD39  6E                 	db	110	;'n'
  2764  00FD3A  75                 	db	117	;'u'
  2765  00FD3B  6D                 	db	109	;'m'
  2766  00FD3C  20                 	db	32
  2767  00FD3D  25                 	db	37
  2768  00FD3E  64                 	db	100	;'d'
  2769  00FD3F  20                 	db	32
  2770  00FD40  20                 	db	32
  2771  00FD41  20                 	db	32
  2772  00FD42  20                 	db	32
  2773  00FD43  20                 	db	32
  2774  00FD44  20                 	db	32
  2775  00FD45  00                 	db	0
  2776  00FD46                     STR_14:
  2777  00FD46  20                 	db	32
  2778  00FD47  53                 	db	83	;'S'
  2779  00FD48  25                 	db	37
  2780  00FD49  64                 	db	100	;'d'
  2781  00FD4A  46                 	db	70	;'F'
  2782  00FD4B  25                 	db	37
  2783  00FD4C  64                 	db	100	;'d'
  2784  00FD4D  20                 	db	32
  2785  00FD4E  23                 	db	35
  2786  00FD4F  20                 	db	32
  2787  00FD50  4F                 	db	79	;'O'
  2788  00FD51  4B                 	db	75	;'K'
  2789  00FD52  20                 	db	32
  2790  00FD53  25                 	db	37
  2791  00FD54  64                 	db	100	;'d'
  2792  00FD55  20                 	db	32
  2793  00FD56  20                 	db	32
  2794  00FD57  20                 	db	32
  2795  00FD58  20                 	db	32
  2796  00FD59  20                 	db	32
  2797  00FD5A  20                 	db	32
  2798  00FD5B  20                 	db	32
  2799  00FD5C  20                 	db	32
  2800  00FD5D  00                 	db	0
  2801  00FD5E                     STR_13:
  2802  00FD5E  20                 	db	32
  2803  00FD5F  53                 	db	83	;'S'
  2804  00FD60  25                 	db	37
  2805  00FD61  64                 	db	100	;'d'
  2806  00FD62  46                 	db	70	;'F'
  2807  00FD63  25                 	db	37
  2808  00FD64  64                 	db	100	;'d'
  2809  00FD65  20                 	db	32
  2810  00FD66  23                 	db	35
  2811  00FD67  20                 	db	32
  2812  00FD68  4F                 	db	79	;'O'
  2813  00FD69  4B                 	db	75	;'K'
  2814  00FD6A  51                 	db	81	;'Q'
  2815  00FD6B  25                 	db	37
  2816  00FD6C  64                 	db	100	;'d'
  2817  00FD6D  20                 	db	32
  2818  00FD6E  20                 	db	32
  2819  00FD6F  20                 	db	32
  2820  00FD70  20                 	db	32
  2821  00FD71  20                 	db	32
  2822  00FD72  20                 	db	32
  2823  00FD73  20                 	db	32
  2824  00FD74  20                 	db	32
  2825  00FD75  00                 	db	0
  2826  00FD76                     STR_59:
  2827  00FD76  20                 	db	32
  2828  00FD77  44                 	db	68	;'D'
  2829  00FD78  69                 	db	105	;'i'
  2830  00FD79  73                 	db	115	;'s'
  2831  00FD7A  70                 	db	112	;'p'
  2832  00FD7B  6C                 	db	108	;'l'
  2833  00FD7C  61                 	db	97	;'a'
  2834  00FD7D  79                 	db	121	;'y'
  2835  00FD7E  20                 	db	32
  2836  00FD7F  6E                 	db	110	;'n'
  2837  00FD80  75                 	db	117	;'u'
  2838  00FD81  6D                 	db	109	;'m'
  2839  00FD82  20                 	db	32
  2840  00FD83  25                 	db	37
  2841  00FD84  64                 	db	100	;'d'
  2842  00FD85  20                 	db	32
  2843  00FD86  20                 	db	32
  2844  00FD87  20                 	db	32
  2845  00FD88  20                 	db	32
  2846  00FD89  20                 	db	32
  2847  00FD8A  20                 	db	32
  2848  00FD8B  00                 	db	0
  2849  00FD8C                     STR_47:
  2850  00FD8C  20                 	db	32
  2851  00FD8D  53                 	db	83	;'S'
  2852  00FD8E  25                 	db	37
  2853  00FD8F  64                 	db	100	;'d'
  2854  00FD90  46                 	db	70	;'F'
  2855  00FD91  25                 	db	37
  2856  00FD92  64                 	db	100	;'d'
  2857  00FD93  20                 	db	32
  2858  00FD94  6C                 	db	108	;'l'
  2859  00FD95  6F                 	db	111	;'o'
  2860  00FD96  67                 	db	103	;'g'
  2861  00FD97  20                 	db	32
  2862  00FD98  20                 	db	32
  2863  00FD99  20                 	db	32
  2864  00FD9A  20                 	db	32
  2865  00FD9B  25                 	db	37
  2866  00FD9C  64                 	db	100	;'d'
  2867  00FD9D  20                 	db	32
  2868  00FD9E  20                 	db	32
  2869  00FD9F  20                 	db	32
  2870  00FDA0  20                 	db	32
  2871  00FDA1  00                 	db	0
  2872  00FDA2                     STR_58:
  2873  00FDA2  20                 	db	32
  2874  00FDA3  53                 	db	83	;'S'
  2875  00FDA4  45                 	db	69	;'E'
  2876  00FDA5  51                 	db	81	;'Q'
  2877  00FDA6  55                 	db	85	;'U'
  2878  00FDA7  45                 	db	69	;'E'
  2879  00FDA8  4E                 	db	78	;'N'
  2880  00FDA9  43                 	db	67	;'C'
  2881  00FDAA  45                 	db	69	;'E'
  2882  00FDAB  20                 	db	32
  2883  00FDAC  25                 	db	37
  2884  00FDAD  64                 	db	100	;'d'
  2885  00FDAE  20                 	db	32
  2886  00FDAF  20                 	db	32
  2887  00FDB0  20                 	db	32
  2888  00FDB1  20                 	db	32
  2889  00FDB2  20                 	db	32
  2890  00FDB3  20                 	db	32
  2891  00FDB4  20                 	db	32
  2892  00FDB5  20                 	db	32
  2893  00FDB6  00                 	db	0
  2894  00FDB7                     STR_36:
  2895  00FDB7  53                 	db	83	;'S'
  2896  00FDB8  61                 	db	97	;'a'
  2897  00FDB9  76                 	db	118	;'v'
  2898  00FDBA  65                 	db	101	;'e'
  2899  00FDBB  64                 	db	100	;'d'
  2900  00FDBC  20                 	db	32
  2901  00FDBD  53                 	db	83	;'S'
  2902  00FDBE  25                 	db	37
  2903  00FDBF  64                 	db	100	;'d'
  2904  00FDC0  46                 	db	70	;'F'
  2905  00FDC1  25                 	db	37
  2906  00FDC2  64                 	db	100	;'d'
  2907  00FDC3  20                 	db	32
  2908  00FDC4  25                 	db	37
  2909  00FDC5  64                 	db	100	;'d'
  2910  00FDC6  20                 	db	32
  2911  00FDC7  20                 	db	32
  2912  00FDC8  20                 	db	32
  2913  00FDC9  20                 	db	32
  2914  00FDCA  20                 	db	32
  2915  00FDCB  00                 	db	0
  2916  00FDCC                     STR_12:
  2917  00FDCC  20                 	db	32
  2918  00FDCD  53                 	db	83	;'S'
  2919  00FDCE  25                 	db	37
  2920  00FDCF  64                 	db	100	;'d'
  2921  00FDD0  46                 	db	70	;'F'
  2922  00FDD1  25                 	db	37
  2923  00FDD2  64                 	db	100	;'d'
  2924  00FDD3  20                 	db	32
  2925  00FDD4  23                 	db	35
  2926  00FDD5  20                 	db	32
  2927  00FDD6  20                 	db	32
  2928  00FDD7  20                 	db	32
  2929  00FDD8  20                 	db	32
  2930  00FDD9  20                 	db	32
  2931  00FDDA  20                 	db	32
  2932  00FDDB  20                 	db	32
  2933  00FDDC  20                 	db	32
  2934  00FDDD  20                 	db	32
  2935  00FDDE  20                 	db	32
  2936  00FDDF  20                 	db	32
  2937  00FDE0  00                 	db	0
  2938  00FDE1                     STR_11:
  2939  00FDE1  20                 	db	32
  2940  00FDE2  53                 	db	83	;'S'
  2941  00FDE3  25                 	db	37
  2942  00FDE4  64                 	db	100	;'d'
  2943  00FDE5  46                 	db	70	;'F'
  2944  00FDE6  25                 	db	37
  2945  00FDE7  64                 	db	100	;'d'
  2946  00FDE8  20                 	db	32
  2947  00FDE9  45                 	db	69	;'E'
  2948  00FDEA  72                 	db	114	;'r'
  2949  00FDEB  72                 	db	114	;'r'
  2950  00FDEC  20                 	db	32
  2951  00FDED  20                 	db	32
  2952  00FDEE  20                 	db	32
  2953  00FDEF  20                 	db	32
  2954  00FDF0  20                 	db	32
  2955  00FDF1  20                 	db	32
  2956  00FDF2  20                 	db	32
  2957  00FDF3  20                 	db	32
  2958  00FDF4  20                 	db	32
  2959  00FDF5  00                 	db	0
  2960  00FDF6                     STR_23:
  2961  00FDF6  45                 	db	69	;'E'
  2962  00FDF7  71                 	db	113	;'q'
  2963  00FDF8  75                 	db	117	;'u'
  2964  00FDF9  69                 	db	105	;'i'
  2965  00FDFA  70                 	db	112	;'p'
  2966  00FDFB  20                 	db	32
  2967  00FDFC  74                 	db	116	;'t'
  2968  00FDFD  79                 	db	121	;'y'
  2969  00FDFE  70                 	db	112	;'p'
  2970  00FDFF  65                 	db	101	;'e'
  2971  00FE00  20                 	db	32
  2972  00FE01  25                 	db	37
  2973  00FE02  64                 	db	100	;'d'
  2974  00FE03  20                 	db	32
  2975  00FE04  20                 	db	32
  2976  00FE05  20                 	db	32
  2977  00FE06  20                 	db	32
  2978  00FE07  20                 	db	32
  2979  00FE08  20                 	db	32
  2980  00FE09  20                 	db	32
  2981  00FE0A  00                 	db	0
  2982  00FE0B                     STR_16:
  2983  00FE0B  48                 	db	72	;'H'
  2984  00FE0C  32                 	db	50	;'2'
  2985  00FE0D  35                 	db	53	;'5'
  2986  00FE0E  34                 	db	52	;'4'
  2987  00FE0F  20                 	db	32
  2988  00FE10  25                 	db	37
  2989  00FE11  64                 	db	100	;'d'
  2990  00FE12  2C                 	db	44
  2991  00FE13  20                 	db	32
  2992  00FE14  54                 	db	84	;'T'
  2993  00FE15  25                 	db	37
  2994  00FE16  6C                 	db	108	;'l'
  2995  00FE17  64                 	db	100	;'d'
  2996  00FE18  20                 	db	32
  2997  00FE19  20                 	db	32
  2998  00FE1A  20                 	db	32
  2999  00FE1B  20                 	db	32
  3000  00FE1C  20                 	db	32
  3001  00FE1D  20                 	db	32
  3002  00FE1E  20                 	db	32
  3003  00FE1F  00                 	db	0
  3004  00FE20                     STR_10:
  3005  00FE20  48                 	db	72	;'H'
  3006  00FE21  4F                 	db	79	;'O'
  3007  00FE22  53                 	db	83	;'S'
  3008  00FE23  54                 	db	84	;'T'
  3009  00FE24  3A                 	db	58	;':'
  3010  00FE25  20                 	db	32
  3011  00FE26  25                 	db	37
  3012  00FE27  6C                 	db	108	;'l'
  3013  00FE28  64                 	db	100	;'d'
  3014  00FE29  20                 	db	32
  3015  00FE2A  47                 	db	71	;'G'
  3016  00FE2B  25                 	db	37
  3017  00FE2C  64                 	db	100	;'d'
  3018  00FE2D  20                 	db	32
  3019  00FE2E  20                 	db	32
  3020  00FE2F  20                 	db	32
  3021  00FE30  20                 	db	32
  3022  00FE31  20                 	db	32
  3023  00FE32  20                 	db	32
  3024  00FE33  23                 	db	35
  3025  00FE34  00                 	db	0
  3026  00FE35                     STR_50:
  3027  00FE35  20                 	db	32
  3028  00FE36  53                 	db	83	;'S'
  3029  00FE37  32                 	db	50	;'2'
  3030  00FE38  46                 	db	70	;'F'
  3031  00FE39  34                 	db	52	;'4'
  3032  00FE3A  31                 	db	49	;'1'
  3033  00FE3B  20                 	db	32
  3034  00FE3C  23                 	db	35
  3035  00FE3D  25                 	db	37
  3036  00FE3E  63                 	db	99	;'c'
  3037  00FE3F  20                 	db	32
  3038  00FE40  20                 	db	32
  3039  00FE41  20                 	db	32
  3040  00FE42  20                 	db	32
  3041  00FE43  20                 	db	32
  3042  00FE44  20                 	db	32
  3043  00FE45  20                 	db	32
  3044  00FE46  20                 	db	32
  3045  00FE47  20                 	db	32
  3046  00FE48  00                 	db	0
  3047  00FE49                     STR_48:
  3048  00FE49  20                 	db	32
  3049  00FE4A  53                 	db	83	;'S'
  3050  00FE4B  74                 	db	116	;'t'
  3051  00FE4C  6F                 	db	111	;'o'
  3052  00FE4D  72                 	db	114	;'r'
  3053  00FE4E  65                 	db	101	;'e'
  3054  00FE4F  64                 	db	100	;'d'
  3055  00FE50  20                 	db	32
  3056  00FE51  23                 	db	35
  3057  00FE52  25                 	db	37
  3058  00FE53  64                 	db	100	;'d'
  3059  00FE54  20                 	db	32
  3060  00FE55  20                 	db	32
  3061  00FE56  20                 	db	32
  3062  00FE57  20                 	db	32
  3063  00FE58  20                 	db	32
  3064  00FE59  20                 	db	32
  3065  00FE5A  20                 	db	32
  3066  00FE5B  20                 	db	32
  3067  00FE5C  00                 	db	0
  3068  00FE5D                     STR_33:
  3069  00FE5D  20                 	db	32
  3070  00FE5E  54                 	db	84	;'T'
  3071  00FE5F  65                 	db	101	;'e'
  3072  00FE60  72                 	db	114	;'r'
  3073  00FE61  6D                 	db	109	;'m'
  3074  00FE62  69                 	db	105	;'i'
  3075  00FE63  6E                 	db	110	;'n'
  3076  00FE64  61                 	db	97	;'a'
  3077  00FE65  6C                 	db	108	;'l'
  3078  00FE66  20                 	db	32
  3079  00FE67  20                 	db	32
  3080  00FE68  20                 	db	32
  3081  00FE69  20                 	db	32
  3082  00FE6A  20                 	db	32
  3083  00FE6B  20                 	db	32
  3084  00FE6C  20                 	db	32
  3085  00FE6D  20                 	db	32
  3086  00FE6E  20                 	db	32
  3087  00FE6F  20                 	db	32
  3088  00FE70  00                 	db	0
  3089  00FE71                     STR_18:
  3090  00FE71  50                 	db	80	;'P'
  3091  00FE72  69                 	db	105	;'i'
  3092  00FE73  6E                 	db	110	;'n'
  3093  00FE74  67                 	db	103	;'g'
  3094  00FE75  20                 	db	32
  3095  00FE76  50                 	db	80	;'P'
  3096  00FE77  25                 	db	37
  3097  00FE78  64                 	db	100	;'d'
  3098  00FE79  20                 	db	32
  3099  00FE7A  52                 	db	82	;'R'
  3100  00FE7B  54                 	db	84	;'T'
  3101  00FE7C  4F                 	db	79	;'O'
  3102  00FE7D  20                 	db	32
  3103  00FE7E  25                 	db	37
  3104  00FE7F  64                 	db	100	;'d'
  3105  00FE80  20                 	db	32
  3106  00FE81  20                 	db	32
  3107  00FE82  20                 	db	32
  3108  00FE83  20                 	db	32
  3109  00FE84  00                 	db	0
  3110  00FE85                     STR_63:
  3111  00FE85  20                 	db	32
  3112  00FE86  20                 	db	32
  3113  00FE87  20                 	db	32
  3114  00FE88  20                 	db	32
  3115  00FE89  20                 	db	32
  3116  00FE8A  20                 	db	32
  3117  00FE8B  20                 	db	32
  3118  00FE8C  20                 	db	32
  3119  00FE8D  20                 	db	32
  3120  00FE8E  20                 	db	32
  3121  00FE8F  20                 	db	32
  3122  00FE90  20                 	db	32
  3123  00FE91  20                 	db	32
  3124  00FE92  20                 	db	32
  3125  00FE93  20                 	db	32
  3126  00FE94  20                 	db	32
  3127  00FE95  20                 	db	32
  3128  00FE96  20                 	db	32
  3129  00FE97  00                 	db	0
  3130  00FE98                     STR_39:
  3131  00FE98  48                 	db	72	;'H'
  3132  00FE99  45                 	db	69	;'E'
  3133  00FE9A  4C                 	db	76	;'L'
  3134  00FE9B  50                 	db	80	;'P'
  3135  00FE9C  20                 	db	32
  3136  00FE9D  25                 	db	37
  3137  00FE9E  73                 	db	115	;'s'
  3138  00FE9F  20                 	db	32
  3139  00FEA0  20                 	db	32
  3140  00FEA1  20                 	db	32
  3141  00FEA2  20                 	db	32
  3142  00FEA3  20                 	db	32
  3143  00FEA4  20                 	db	32
  3144  00FEA5  20                 	db	32
  3145  00FEA6  20                 	db	32
  3146  00FEA7  20                 	db	32
  3147  00FEA8  20                 	db	32
  3148  00FEA9  20                 	db	32
  3149  00FEAA  00                 	db	0
  3150  00FEAB                     STR_56:
  3151  00FEAB  44                 	db	68	;'D'
  3152  00FEAC  49                 	db	73	;'I'
  3153  00FEAD  53                 	db	83	;'S'
  3154  00FEAE  50                 	db	80	;'P'
  3155  00FEAF  4C                 	db	76	;'L'
  3156  00FEB0  41                 	db	65	;'A'
  3157  00FEB1  59                 	db	89	;'Y'
  3158  00FEB2  20                 	db	32
  3159  00FEB3  25                 	db	37
  3160  00FEB4  73                 	db	115	;'s'
  3161  00FEB5  20                 	db	32
  3162  00FEB6  20                 	db	32
  3163  00FEB7  20                 	db	32
  3164  00FEB8  20                 	db	32
  3165  00FEB9  20                 	db	32
  3166  00FEBA  20                 	db	32
  3167  00FEBB  20                 	db	32
  3168  00FEBC  20                 	db	32
  3169  00FEBD  00                 	db	0
  3170  00FEBE                     STR_21:
  3171  00FEBE  53                 	db	83	;'S'
  3172  00FEBF  25                 	db	37
  3173  00FEC0  64                 	db	100	;'d'
  3174  00FEC1  46                 	db	70	;'F'
  3175  00FEC2  25                 	db	37
  3176  00FEC3  64                 	db	100	;'d'
  3177  00FEC4  20                 	db	32
  3178  00FEC5  23                 	db	35
  3179  00FEC6  25                 	db	37
  3180  00FEC7  6C                 	db	108	;'l'
  3181  00FEC8  64                 	db	100	;'d'
  3182  00FEC9  20                 	db	32
  3183  00FECA  20                 	db	32
  3184  00FECB  20                 	db	32
  3185  00FECC  20                 	db	32
  3186  00FECD  20                 	db	32
  3187  00FECE  20                 	db	32
  3188  00FECF  20                 	db	32
  3189  00FED0  00                 	db	0
  3190  00FED1                     STR_53:
  3191  00FED1  20                 	db	32
  3192  00FED2  4F                 	db	79	;'O'
  3193  00FED3  70                 	db	112	;'p'
  3194  00FED4  65                 	db	101	;'e'
  3195  00FED5  6E                 	db	110	;'n'
  3196  00FED6  20                 	db	32
  3197  00FED7  4C                 	db	76	;'L'
  3198  00FED8  4C                 	db	76	;'L'
  3199  00FED9  20                 	db	32
  3200  00FEDA  20                 	db	32
  3201  00FEDB  20                 	db	32
  3202  00FEDC  20                 	db	32
  3203  00FEDD  20                 	db	32
  3204  00FEDE  20                 	db	32
  3205  00FEDF  20                 	db	32
  3206  00FEE0  20                 	db	32
  3207  00FEE1  20                 	db	32
  3208  00FEE2  00                 	db	0
  3209  00FEE3                     STR_51:
  3210  00FEE3  20                 	db	32
  3211  00FEE4  50                 	db	80	;'P'
  3212  00FEE5  75                 	db	117	;'u'
  3213  00FEE6  6D                 	db	109	;'m'
  3214  00FEE7  70                 	db	112	;'p'
  3215  00FEE8  20                 	db	32
  3216  00FEE9  4C                 	db	76	;'L'
  3217  00FEEA  4C                 	db	76	;'L'
  3218  00FEEB  20                 	db	32
  3219  00FEEC  20                 	db	32
  3220  00FEED  20                 	db	32
  3221  00FEEE  20                 	db	32
  3222  00FEEF  20                 	db	32
  3223  00FEF0  20                 	db	32
  3224  00FEF1  20                 	db	32
  3225  00FEF2  20                 	db	32
  3226  00FEF3  20                 	db	32
  3227  00FEF4  00                 	db	0
  3228  00FEF5                     STR_49:
  3229  00FEF5  20                 	db	32
  3230  00FEF6  52                 	db	82	;'R'
  3231  00FEF7  65                 	db	101	;'e'
  3232  00FEF8  61                 	db	97	;'a'
  3233  00FEF9  64                 	db	100	;'d'
  3234  00FEFA  79                 	db	121	;'y'
  3235  00FEFB  20                 	db	32
  3236  00FEFC  4C                 	db	76	;'L'
  3237  00FEFD  4C                 	db	76	;'L'
  3238  00FEFE  20                 	db	32
  3239  00FEFF  20                 	db	32
  3240  00FF00  20                 	db	32
  3241  00FF01  20                 	db	32
  3242  00FF02  20                 	db	32
  3243  00FF03  20                 	db	32
  3244  00FF04  20                 	db	32
  3245  00FF05  20                 	db	32
  3246  00FF06  00                 	db	0
  3247  00FF07                     STR_15:
  3248  00FF07  45                 	db	69	;'E'
  3249  00FF08  25                 	db	37
  3250  00FF09  64                 	db	100	;'d'
  3251  00FF0A  20                 	db	32
  3252  00FF0B  41                 	db	65	;'A'
  3253  00FF0C  25                 	db	37
  3254  00FF0D  64                 	db	100	;'d'
  3255  00FF0E  20                 	db	32
  3256  00FF0F  54                 	db	84	;'T'
  3257  00FF10  25                 	db	37
  3258  00FF11  64                 	db	100	;'d'
  3259  00FF12  20                 	db	32
  3260  00FF13  47                 	db	71	;'G'
  3261  00FF14  25                 	db	37
  3262  00FF15  64                 	db	100	;'d'
  3263  00FF16  20                 	db	32
  3264  00FF17  23                 	db	35
  3265  00FF18  00                 	db	0
  3266  00FF19                     STR_8:
  3267  00FF19  20                 	db	32
  3268  00FF1A  56                 	db	86	;'V'
  3269  00FF1B  54                 	db	84	;'T'
  3270  00FF1C  45                 	db	69	;'E'
  3271  00FF1D  52                 	db	82	;'R'
  3272  00FF1E  4D                 	db	77	;'M'
  3273  00FF1F  20                 	db	32
  3274  00FF20  23                 	db	35
  3275  00FF21  32                 	db	50	;'2'
  3276  00FF22  20                 	db	32
  3277  00FF23  20                 	db	32
  3278  00FF24  20                 	db	32
  3279  00FF25  20                 	db	32
  3280  00FF26  20                 	db	32
  3281  00FF27  20                 	db	32
  3282  00FF28  20                 	db	32
  3283  00FF29  00                 	db	0
  3284  00FF2A                     STR_4:
  3285  00FF2A  20                 	db	32
  3286  00FF2B  4E                 	db	78	;'N'
  3287  00FF2C  53                 	db	83	;'S'
  3288  00FF2D  41                 	db	65	;'A'
  3289  00FF2E  53                 	db	83	;'S'
  3290  00FF2F  50                 	db	80	;'P'
  3291  00FF30  4F                 	db	79	;'O'
  3292  00FF31  4F                 	db	79	;'O'
  3293  00FF32  4B                 	db	75	;'K'
  3294  00FF33  20                 	db	32
  3295  00FF34  20                 	db	32
  3296  00FF35  20                 	db	32
  3297  00FF36  20                 	db	32
  3298  00FF37  20                 	db	32
  3299  00FF38  20                 	db	32
  3300  00FF39  20                 	db	32
  3301  00FF3A  00                 	db	0
  3302  00FF3B                     STR_1:
  3303  00FF3B  20                 	db	32
  3304  00FF3C  4D                 	db	77	;'M'
  3305  00FF3D  42                 	db	66	;'B'
  3306  00FF3E  4D                 	db	77	;'M'
  3307  00FF3F  43                 	db	67	;'C'
  3308  00FF40  20                 	db	32
  3309  00FF41  53                 	db	83	;'S'
  3310  00FF42  4F                 	db	79	;'O'
  3311  00FF43  4C                 	db	76	;'L'
  3312  00FF44  41                 	db	65	;'A'
  3313  00FF45  52                 	db	82	;'R'
  3314  00FF46  4D                 	db	77	;'M'
  3315  00FF47  4F                 	db	79	;'O'
  3316  00FF48  4E                 	db	78	;'N'
  3317  00FF49  20                 	db	32
  3318  00FF4A  20                 	db	32
  3319  00FF4B  00                 	db	0
  3320  00FF4C                     STR_5:
  3321  00FF4C  20                 	db	32
  3322  00FF4D  53                 	db	83	;'S'
  3323  00FF4E  45                 	db	69	;'E'
  3324  00FF4F  51                 	db	81	;'Q'
  3325  00FF50  55                 	db	85	;'U'
  3326  00FF51  45                 	db	69	;'E'
  3327  00FF52  4E                 	db	78	;'N'
  3328  00FF53  43                 	db	67	;'C'
  3329  00FF54  45                 	db	69	;'E'
  3330  00FF55  20                 	db	32
  3331  00FF56  54                 	db	84	;'T'
  3332  00FF57  45                 	db	69	;'E'
  3333  00FF58  53                 	db	83	;'S'
  3334  00FF59  54                 	db	84	;'T'
  3335  00FF5A  20                 	db	32
  3336  00FF5B  20                 	db	32
  3337  00FF5C  00                 	db	0
  3338  00FF5D                     STR_9:
  3339  00FF5D  48                 	db	72	;'H'
  3340  00FF5E  32                 	db	50	;'2'
  3341  00FF5F  35                 	db	53	;'5'
  3342  00FF60  34                 	db	52	;'4'
  3343  00FF61  20                 	db	32
  3344  00FF62  25                 	db	37
  3345  00FF63  64                 	db	100	;'d'
  3346  00FF64  2C                 	db	44
  3347  00FF65  20                 	db	32
  3348  00FF66  54                 	db	84	;'T'
  3349  00FF67  25                 	db	37
  3350  00FF68  6C                 	db	108	;'l'
  3351  00FF69  64                 	db	100	;'d'
  3352  00FF6A  20                 	db	32
  3353  00FF6B  20                 	db	32
  3354  00FF6C  00                 	db	0
  3355  00FF6D                     STR_43:
  3356  00FF6D  76                 	db	118	;'v'
  3357  00FF6E  74                 	db	116	;'t'
  3358  00FF6F  65                 	db	101	;'e'
  3359  00FF70  72                 	db	114	;'r'
  3360  00FF71  6D                 	db	109	;'m'
  3361  00FF72  20                 	db	32
  3362  00FF73  25                 	db	37
  3363  00FF74  78                 	db	120	;'x'
  3364  00FF75  3A                 	db	58	;':'
  3365  00FF76  25                 	db	37
  3366  00FF77  78                 	db	120	;'x'
  3367  00FF78  20                 	db	32
  3368  00FF79  20                 	db	32
  3369  00FF7A  20                 	db	32
  3370  00FF7B  00                 	db	0
  3371  00FF7C                     STR_2:
  3372  00FF7C  20                 	db	32
  3373  00FF7D  56                 	db	86	;'V'
  3374  00FF7E  65                 	db	101	;'e'
  3375  00FF7F  72                 	db	114	;'r'
  3376  00FF80  73                 	db	115	;'s'
  3377  00FF81  69                 	db	105	;'i'
  3378  00FF82  6F                 	db	111	;'o'
  3379  00FF83  6E                 	db	110	;'n'
  3380  00FF84  20                 	db	32
  3381  00FF85  25                 	db	37
  3382  00FF86  73                 	db	115	;'s'
  3383  00FF87  20                 	db	32
  3384  00FF88  20                 	db	32
  3385  00FF89  20                 	db	32
  3386  00FF8A  00                 	db	0
  3387  00FF8B                     STR_37:
  3388  00FF8B  4F                 	db	79	;'O'
  3389  00FF8C  63                 	db	99	;'c'
  3390  00FF8D  74                 	db	116	;'t'
  3391  00FF8E  20                 	db	32
  3392  00FF8F  32                 	db	50	;'2'
  3393  00FF90  33                 	db	51	;'3'
  3394  00FF91  20                 	db	32
  3395  00FF92  32                 	db	50	;'2'
  3396  00FF93  30                 	db	48	;'0'
  3397  00FF94  31                 	db	49	;'1'
  3398  00FF95  39                 	db	57	;'9'
  3399  00FF96  00                 	db	0
  3400  00FF97                     STR_41:
  3401  00FF97  25                 	db	37
  3402  00FF98  73                 	db	115	;'s'
  3403  00FF99  20                 	db	32
  3404  00FF9A  20                 	db	32
  3405  00FF9B  20                 	db	32
  3406  00FF9C  20                 	db	32
  3407  00FF9D  20                 	db	32
  3408  00FF9E  20                 	db	32
  3409  00FF9F  20                 	db	32
  3410  00FFA0  00                 	db	0
  3411  00FFA1                     STR_38:
  3412  00FFA1  30                 	db	48	;'0'
  3413  00FFA2  38                 	db	56	;'8'
  3414  00FFA3  3A                 	db	58	;':'
  3415  00FFA4  31                 	db	49	;'1'
  3416  00FFA5  36                 	db	54	;'6'
  3417  00FFA6  3A                 	db	58	;':'
  3418  00FFA7  31                 	db	49	;'1'
  3419  00FFA8  39                 	db	57	;'9'
  3420  00FFA9  00                 	db	0
  3421  00FFAA                     STR_169:
  3422  00FFAA  68                 	db	104	;'h'
  3423  00FFAB  68                 	db	104	;'h'
  3424  00FFAC  58                 	db	88	;'X'
  3425  00FFAD  00                 	db	0
  3426  00FFAE                     STR_69:
  3427  00FFAE  68                 	db	104	;'h'
  3428  00FFAF  68                 	db	104	;'h'
  3429  00FFB0  64                 	db	100	;'d'
  3430  00FFB1  00                 	db	0
  3431  00FFB2                     STR_73:
  3432  00FFB2  68                 	db	104	;'h'
  3433  00FFB3  68                 	db	104	;'h'
  3434  00FFB4  69                 	db	105	;'i'
  3435  00FFB5  00                 	db	0
  3436  00FFB6                     STR_125:
  3437  00FFB6  68                 	db	104	;'h'
  3438  00FFB7  68                 	db	104	;'h'
  3439  00FFB8  6E                 	db	110	;'n'
  3440  00FFB9  00                 	db	0
  3441  00FFBA                     STR_105:
  3442  00FFBA  68                 	db	104	;'h'
  3443  00FFBB  68                 	db	104	;'h'
  3444  00FFBC  6F                 	db	111	;'o'
  3445  00FFBD  00                 	db	0
  3446  00FFBE                     STR_145:
  3447  00FFBE  68                 	db	104	;'h'
  3448  00FFBF  68                 	db	104	;'h'
  3449  00FFC0  75                 	db	117	;'u'
  3450  00FFC1  00                 	db	0
  3451  00FFC2                     STR_165:
  3452  00FFC2  68                 	db	104	;'h'
  3453  00FFC3  68                 	db	104	;'h'
  3454  00FFC4  78                 	db	120	;'x'
  3455  00FFC5  00                 	db	0
  3456  00FFC6                     STR_22:
  3457  00FFC6  4F                 	db	79	;'O'
  3458  00FFC7  4B                 	db	75	;'K'
  3459  00FFC8  20                 	db	32
  3460  00FFC9  00                 	db	0
  3461  00FFCA                     STR_3:
  3462  00FFCA  30                 	db	48	;'0'
  3463  00FFCB  2E                 	db	46
  3464  00FFCC  33                 	db	51	;'3'
  3465  00FFCD  00                 	db	0
  3466  00FFCE                     STR_187:
  3467  00FFCE  6C                 	db	108	;'l'
  3468  00FFCF  58                 	db	88	;'X'
  3469  00FFD0  00                 	db	0
  3470  00FFD1                     STR_196:
  3471  00FFD1  7A                 	db	122	;'z'
  3472  00FFD2  58                 	db	88	;'X'
  3473  00FFD3  00                 	db	0
  3474  00FFD4                     STR_87:
  3475  00FFD4  6C                 	db	108	;'l'
  3476  00FFD5  64                 	db	100	;'d'
  3477  00FFD6  00                 	db	0
  3478  00FFD7                     STR_96:
  3479  00FFD7  7A                 	db	122	;'z'
  3480  00FFD8  64                 	db	100	;'d'
  3481  00FFD9  00                 	db	0
  3482  00FFDA                     STR_91:
  3483  00FFDA  6C                 	db	108	;'l'
  3484  00FFDB  69                 	db	105	;'i'
  3485  00FFDC  00                 	db	0
  3486  00FFDD                     STR_100:
  3487  00FFDD  7A                 	db	122	;'z'
  3488  00FFDE  69                 	db	105	;'i'
  3489  00FFDF  00                 	db	0
  3490  00FFE0                     STR_135:
  3491  00FFE0  6C                 	db	108	;'l'
  3492  00FFE1  6E                 	db	110	;'n'
  3493  00FFE2  00                 	db	0
  3494  00FFE3                     STR_140:
  3495  00FFE3  7A                 	db	122	;'z'
  3496  00FFE4  6E                 	db	110	;'n'
  3497  00FFE5  00                 	db	0
  3498  00FFE6                     STR_115:
  3499  00FFE6  6C                 	db	108	;'l'
  3500  00FFE7  6F                 	db	111	;'o'
  3501  00FFE8  00                 	db	0
  3502  00FFE9                     STR_120:
  3503  00FFE9  7A                 	db	122	;'z'
  3504  00FFEA  6F                 	db	111	;'o'
  3505  00FFEB  00                 	db	0
  3506  00FFEC                     STR_155:
  3507  00FFEC  6C                 	db	108	;'l'
  3508  00FFED  75                 	db	117	;'u'
  3509  00FFEE  00                 	db	0
  3510  00FFEF                     STR_160:
  3511  00FFEF  7A                 	db	122	;'z'
  3512  00FFF0  75                 	db	117	;'u'
  3513  00FFF1  00                 	db	0
  3514  00FFF2                     STR_183:
  3515  00FFF2  6C                 	db	108	;'l'
  3516  00FFF3  78                 	db	120	;'x'
  3517  00FFF4  00                 	db	0
  3518  00FFF5                     STR_192:
  3519  00FFF5  7A                 	db	122	;'z'
  3520  00FFF6  78                 	db	120	;'x'
  3521  00FFF7  00                 	db	0
  3522  00FFF8                     STR_27:
  3523  00FFF8  25                 	db	37
  3524  00FFF9  63                 	db	99	;'c'
  3525  00FFFA  00                 	db	0
  3526  00FFFB                     STR_26:
  3527  00FFFB  25                 	db	37
  3528  00FFFC  73                 	db	115	;'s'
  3529  00FFFD  00                 	db	0
  3530  0000                     
  3531                           ; #config settings
  3532  00FFFE  00                 	db	0	; dummy byte at the end
  3533  0000                     
  3534                           	psect	cinit
  3535  017614                     __pcinit:
  3536                           	opt callstack 0
  3537  017614                     start_initialization:
  3538                           	opt callstack 0
  3539  017614                     __initialization:
  3540                           	opt callstack 0
  3541                           
  3542                           ; Initialize objects allocated to BIGRAM (956 bytes)
  3543                           ; load TBLPTR registers with __pidataBIGRAM
  3544  017614  0E0A               	movlw	low __pidataBIGRAM
  3545  017616  6EF6               	movwf	tblptrl,c
  3546  017618  0E43               	movlw	high __pidataBIGRAM
  3547  01761A  6EF7               	movwf	tblptrh,c
  3548  01761C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3549  01761E  6EF8               	movwf	tblptru,c
  3550  017620  EE03  F01A         	lfsr	0,__pdataBIGRAM
  3551  017624  EE20 F3BC          	lfsr	2,956
  3552  017628                     copy_data0:
  3553  017628  0009               	tblrd		*+
  3554  01762A  006F FFD7 FFEE     	movff	tablat,postinc0
  3555  017630  50DD               	movf	postdec2,w,c
  3556  017632  50D9               	movf	fsr2l,w,c
  3557  017634  E1F9               	bnz	copy_data0
  3558  017636  50DA               	movf	fsr2h,w,c
  3559  017638  E1F7               	bnz	copy_data0
  3560                           
  3561                           ; Initialize objects allocated to BANK6 (256 bytes)
  3562                           ; load TBLPTR registers with __pidataBANK6
  3563  01763A  0E3C               	movlw	low __pidataBANK6
  3564  01763C  6EF6               	movwf	tblptrl,c
  3565  01763E  0E7F               	movlw	high __pidataBANK6
  3566  017640  6EF7               	movwf	tblptrh,c
  3567  017642  0E01               	movlw	low (__pidataBANK6 shr (0+16))
  3568  017644  6EF8               	movwf	tblptru,c
  3569  017646  EE01  F200         	lfsr	0,__pdataBANK6
  3570  01764A  EE20 F100          	lfsr	2,256
  3571  01764E                     copy_data1:
  3572  01764E  0009               	tblrd		*+
  3573  017650  006F FFD7 FFEE     	movff	tablat,postinc0
  3574  017656  50DD               	movf	postdec2,w,c
  3575  017658  50D9               	movf	fsr2l,w,c
  3576  01765A  E1F9               	bnz	copy_data1
  3577  01765C  50DA               	movf	fsr2h,w,c
  3578  01765E  E1F7               	bnz	copy_data1
  3579                           
  3580                           ; Initialize objects allocated to BANK2 (29 bytes)
  3581                           ; load TBLPTR registers with __pidataBANK2
  3582  017660  0E0A               	movlw	low __pidataBANK2
  3583  017662  6EF6               	movwf	tblptrl,c
  3584  017664  0E99               	movlw	high __pidataBANK2
  3585  017666  6EF7               	movwf	tblptrh,c
  3586  017668  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3587  01766A  6EF8               	movwf	tblptru,c
  3588  01766C  EE00  F2C3         	lfsr	0,__pdataBANK2
  3589  017670  EE20 F01D          	lfsr	2,29
  3590  017674                     copy_data2:
  3591  017674  0009               	tblrd		*+
  3592  017676  006F FFD7 FFEE     	movff	tablat,postinc0
  3593  01767C  50DD               	movf	postdec2,w,c
  3594  01767E  50D9               	movf	fsr2l,w,c
  3595  017680  E1F9               	bnz	copy_data2
  3596                           
  3597                           ; Initialize objects allocated to BANK1 (238 bytes)
  3598                           ; load TBLPTR registers with __pidataBANK1
  3599  017682  0E32               	movlw	low __pidataBANK1
  3600  017684  6EF6               	movwf	tblptrl,c
  3601  017686  0E81               	movlw	high __pidataBANK1
  3602  017688  6EF7               	movwf	tblptrh,c
  3603  01768A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3604  01768C  6EF8               	movwf	tblptru,c
  3605  01768E  EE00  F100         	lfsr	0,__pdataBANK1
  3606  017692  EE20 F0EE          	lfsr	2,238
  3607  017696                     copy_data3:
  3608  017696  0009               	tblrd		*+
  3609  017698  006F FFD7 FFEE     	movff	tablat,postinc0
  3610  01769E  50DD               	movf	postdec2,w,c
  3611  0176A0  50D9               	movf	fsr2l,w,c
  3612  0176A2  E1F9               	bnz	copy_data3
  3613                           
  3614                           ; Initialize objects allocated to BANK0 (43 bytes)
  3615                           ; load TBLPTR registers with __pidataBANK0
  3616  0176A4  0E78               	movlw	low __pidataBANK0
  3617  0176A6  6EF6               	movwf	tblptrl,c
  3618  0176A8  0E94               	movlw	high __pidataBANK0
  3619  0176AA  6EF7               	movwf	tblptrh,c
  3620  0176AC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3621  0176AE  6EF8               	movwf	tblptru,c
  3622  0176B0  EE00  F0D5         	lfsr	0,__pdataBANK0
  3623  0176B4  EE20 F02B          	lfsr	2,43
  3624  0176B8                     copy_data4:
  3625  0176B8  0009               	tblrd		*+
  3626  0176BA  006F FFD7 FFEE     	movff	tablat,postinc0
  3627  0176C0  50DD               	movf	postdec2,w,c
  3628  0176C2  50D9               	movf	fsr2l,w,c
  3629  0176C4  E1F9               	bnz	copy_data4
  3630                           
  3631                           ; Initialize objects allocated to COMRAM (5 bytes)
  3632                           ; load TBLPTR registers with __pidataCOMRAM
  3633  0176C6  0EE6               	movlw	low __pidataCOMRAM
  3634  0176C8  6EF6               	movwf	tblptrl,c
  3635  0176CA  0E9A               	movlw	high __pidataCOMRAM
  3636  0176CC  6EF7               	movwf	tblptrh,c
  3637  0176CE  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  3638  0176D0  6EF8               	movwf	tblptru,c
  3639  0176D2  EE00  F057         	lfsr	0,__pdataCOMRAM
  3640  0176D6  EE20 F005          	lfsr	2,5
  3641  0176DA                     copy_data5:
  3642  0176DA  0009               	tblrd		*+
  3643  0176DC  006F FFD7 FFEE     	movff	tablat,postinc0
  3644  0176E2  50DD               	movf	postdec2,w,c
  3645  0176E4  50D9               	movf	fsr2l,w,c
  3646  0176E6  E1F9               	bnz	copy_data5
  3647                           
  3648                           ; Clear objects allocated to BIGRAM (1306 bytes)
  3649  0176E8  EE01  F300         	lfsr	0,__pbssBIGRAM
  3650  0176EC  EE21 F11A          	lfsr	2,1306
  3651  0176F0                     clear_0:
  3652  0176F0  6AEE               	clrf	postinc0,c
  3653  0176F2  50DD               	movf	postdec2,w,c
  3654  0176F4  50D9               	movf	fsr2l,w,c
  3655  0176F6  E1FC               	bnz	clear_0
  3656  0176F8  50DA               	movf	fsr2h,w,c
  3657  0176FA  E1FA               	bnz	clear_0
  3658                           
  3659                           ; Clear objects allocated to BANK5 (255 bytes)
  3660  0176FC  EE01  F100         	lfsr	0,__pbssBANK5
  3661  017700  EE20 F0FF          	lfsr	2,255
  3662  017704                     clear_1:
  3663  017704  6AEE               	clrf	postinc0,c
  3664  017706  50DD               	movf	postdec2,w,c
  3665  017708  50D9               	movf	fsr2l,w,c
  3666  01770A  E1FC               	bnz	clear_1
  3667  01770C  50DA               	movf	fsr2h,w,c
  3668  01770E  E1FA               	bnz	clear_1
  3669                           
  3670                           ; Clear objects allocated to BANK4 (255 bytes)
  3671  017710  EE01  F000         	lfsr	0,__pbssBANK4
  3672  017714  EE20 F0FF          	lfsr	2,255
  3673  017718                     clear_2:
  3674  017718  6AEE               	clrf	postinc0,c
  3675  01771A  50DD               	movf	postdec2,w,c
  3676  01771C  50D9               	movf	fsr2l,w,c
  3677  01771E  E1FC               	bnz	clear_2
  3678  017720  50DA               	movf	fsr2h,w,c
  3679  017722  E1FA               	bnz	clear_2
  3680                           
  3681                           ; Clear objects allocated to BANK3 (67 bytes)
  3682  017724  EE00  F300         	lfsr	0,__pbssBANK3
  3683  017728  0E43               	movlw	67
  3684  01772A                     clear_3:
  3685  01772A  6AEE               	clrf	postinc0,c
  3686  01772C  06E8               	decf	wreg,f,c
  3687  01772E  E1FD               	bnz	clear_3
  3688                           
  3689                           ; Clear objects allocated to BANK2 (195 bytes)
  3690  017730  EE00  F200         	lfsr	0,__pbssBANK2
  3691  017734  0EC3               	movlw	195
  3692  017736                     clear_4:
  3693  017736  6AEE               	clrf	postinc0,c
  3694  017738  06E8               	decf	wreg,f,c
  3695  01773A  E1FD               	bnz	clear_4
  3696                           
  3697                           ; Clear objects allocated to BANK0 (117 bytes)
  3698  01773C  EE00  F060         	lfsr	0,__pbssBANK0
  3699  017740  0E75               	movlw	117
  3700  017742                     clear_5:
  3701  017742  6AEE               	clrf	postinc0,c
  3702  017744  06E8               	decf	wreg,f,c
  3703  017746  E1FD               	bnz	clear_5
  3704                           
  3705                           ; Clear objects allocated to COMRAM (54 bytes)
  3706  017748  EE00  F001         	lfsr	0,__pbssCOMRAM
  3707  01774C  0E36               	movlw	54
  3708  01774E                     clear_6:
  3709  01774E  6AEE               	clrf	postinc0,c
  3710  017750  06E8               	decf	wreg,f,c
  3711  017752  E1FD               	bnz	clear_6
  3712                           
  3713                           ;
  3714                           ; Setup IVTBASE
  3715                           ;
  3716  017754  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3717  017756  6ED5               	movwf	213,c
  3718  017758  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3719  01775A  6ED6               	movwf	214,c
  3720  01775C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3721  01775E  6ED7               	movwf	215,c
  3722  017760                     end_of_initialization:
  3723                           	opt callstack 0
  3724  017760                     __end_of__initialization:
  3725                           	opt callstack 0
  3726  017760  0100               	movlb	0
  3727  017762  EF0C  F08E         	goto	_main	;jump to C main() function
  3728                           
  3729                           	psect	bssCOMRAM
  3730  000001                     __pbssCOMRAM:
  3731                           	opt callstack 0
  3732  000001                     _UART2_TxInterruptHandler:
  3733                           	opt callstack 0
  3734  000001                     	ds	3
  3735  000004                     _UART2_RxInterruptHandler:
  3736                           	opt callstack 0
  3737  000004                     	ds	3
  3738  000007                     _INT1_InterruptHandler:
  3739                           	opt callstack 0
  3740  000007                     	ds	3
  3741  00000A                     _INT0_InterruptHandler:
  3742                           	opt callstack 0
  3743  00000A                     	ds	3
  3744  00000D                     _nout:
  3745                           	opt callstack 0
  3746  00000D                     	ds	2
  3747  00000F                     _width:
  3748                           	opt callstack 0
  3749  00000F                     	ds	2
  3750  000011                     _prec:
  3751                           	opt callstack 0
  3752  000011                     	ds	2
  3753  000013                     _flags:
  3754                           	opt callstack 0
  3755  000013                     	ds	2
  3756  000015                     r_protocol@b_block:
  3757                           	opt callstack 0
  3758  000015                     	ds	2
  3759  000017                     run_checksum@sum:
  3760                           	opt callstack 0
  3761  000017                     	ds	2
  3762  000019                     TMR5_ISR@CountCallBack:
  3763                           	opt callstack 0
  3764  000019                     	ds	2
  3765  00001B                     _timer5ReloadVal:
  3766                           	opt callstack 0
  3767  00001B                     	ds	2
  3768  00001D                     secs_gem_state@equipment:
  3769                           	opt callstack 0
  3770  00001D                     	ds	1
  3771  00001E                     secs_gem_state@block:
  3772                           	opt callstack 0
  3773  00001E                     	ds	1
  3774  00001F                     t_protocol@requeue:
  3775                           	opt callstack 0
  3776  00001F                     	ds	1
  3777  000020                     t_protocol@retry:
  3778                           	opt callstack 0
  3779  000020                     	ds	1
  3780  000021                     r_protocol@rxData_l:
  3781                           	opt callstack 0
  3782  000021                     	ds	1
  3783  000022                     m_protocol@rxData_l:
  3784                           	opt callstack 0
  3785  000022                     	ds	1
  3786  000023                     _mode_sw:
  3787                           	opt callstack 0
  3788  000023                     	ds	1
  3789  000024                     _uart2RxCount:
  3790                           	opt callstack 0
  3791  000024                     	ds	1
  3792  000025                     _uart2RxTail:
  3793                           	opt callstack 0
  3794  000025                     	ds	1
  3795  000026                     _uart2RxHead:
  3796                           	opt callstack 0
  3797  000026                     	ds	1
  3798  000027                     _uart2TxBufferRemaining:
  3799                           	opt callstack 0
  3800  000027                     	ds	1
  3801  000028                     _uart2TxTail:
  3802                           	opt callstack 0
  3803  000028                     	ds	1
  3804  000029                     _uart2TxHead:
  3805                           	opt callstack 0
  3806  000029                     	ds	1
  3807  00002A                     _uart1RxCount:
  3808                           	opt callstack 0
  3809  00002A                     	ds	1
  3810  00002B                     _uart1RxTail:
  3811                           	opt callstack 0
  3812  00002B                     	ds	1
  3813  00002C                     _uart1RxHead:
  3814                           	opt callstack 0
  3815  00002C                     	ds	1
  3816  00002D                     _uart1TxBufferRemaining:
  3817                           	opt callstack 0
  3818  00002D                     	ds	1
  3819  00002E                     _uart1TxTail:
  3820                           	opt callstack 0
  3821  00002E                     	ds	1
  3822  00002F                     _uart1TxHead:
  3823                           	opt callstack 0
  3824  00002F                     	ds	1
  3825  000030                     secs_II_message@block:
  3826                           	opt callstack 0
  3827  000030                     	ds	7
  3828                           
  3829                           	psect	dataCOMRAM
  3830  000057                     __pdataCOMRAM:
  3831                           	opt callstack 0
  3832  000057                     secs_II_monitor_message@store6_11:
  3833                           	opt callstack 0
  3834  000057                     	ds	1
  3835  000058                     secs_II_monitor_message@store1_13:
  3836                           	opt callstack 0
  3837  000058                     	ds	1
  3838  000059                     secs_II_monitor_message@store1_1:
  3839                           	opt callstack 0
  3840  000059                     	ds	1
  3841  00005A                     r_protocol@d:
  3842                           	opt callstack 0
  3843  00005A                     	ds	1
  3844  00005B                     r_protocol@retry:
  3845                           	opt callstack 0
  3846  00005B                     	ds	1
  3847                           
  3848                           	psect	bssBANK0
  3849  000060                     __pbssBANK0:
  3850                           	opt callstack 0
  3851  000060                     _tickCount:
  3852                           	opt callstack 0
  3853  000060                     	ds	26
  3854  00007A                     _r_block:
  3855                           	opt callstack 0
  3856  00007A                     	ds	13
  3857  000087                     _spi_link:
  3858                           	opt callstack 0
  3859  000087                     	ds	12
  3860  000093                     t_protocol@block:
  3861                           	opt callstack 0
  3862  000093                     	ds	7
  3863  00009A                     wdtdelay@dcount:
  3864                           	opt callstack 0
  3865  00009A                     	ds	4
  3866  00009E                     _TMR5_InterruptHandler:
  3867                           	opt callstack 0
  3868  00009E                     	ds	3
  3869  0000A1                     _TMR6_InterruptHandler:
  3870                           	opt callstack 0
  3871  0000A1                     	ds	3
  3872  0000A4                     _ADCC_ADI_InterruptHandler:
  3873                           	opt callstack 0
  3874  0000A4                     	ds	3
  3875  0000A7                     _UART1_TxInterruptHandler:
  3876                           	opt callstack 0
  3877  0000A7                     	ds	3
  3878  0000AA                     _UART1_RxInterruptHandler:
  3879                           	opt callstack 0
  3880  0000AA                     	ds	3
  3881  0000AD                     _dbuf:
  3882                           	opt callstack 0
  3883  0000AD                     	ds	32
  3884  0000CD                     _seed:
  3885                           	opt callstack 0
  3886  0000CD                     	ds	8
  3887                           
  3888                           	psect	dataBANK0
  3889  0000D5                     __pdataBANK0:
  3890                           	opt callstack 0
  3891  0000D5                     stoa@F1152:
  3892                           	opt callstack 0
  3893  0000D5                     	ds	7
  3894  0000DC                     _H33:
  3895                           	opt callstack 0
  3896  0000DC                     	ds	36
  3897                           
  3898                           	psect	dataBANK1
  3899  000100                     __pdataBANK1:
  3900                           	opt callstack 0
  3901  000100                     _H10:
  3902                           	opt callstack 0
  3903  000100                     	ds	91
  3904  00015B                     _H13:
  3905                           	opt callstack 0
  3906  00015B                     	ds	64
  3907  00019B                     _H12:
  3908                           	opt callstack 0
  3909  00019B                     	ds	30
  3910  0001B9                     _H17:
  3911                           	opt callstack 0
  3912  0001B9                     	ds	20
  3913  0001CD                     _H14:
  3914                           	opt callstack 0
  3915  0001CD                     	ds	17
  3916  0001DE                     _port_data:
  3917                           	opt callstack 0
  3918  0001DE                     	ds	16
  3919                           
  3920                           	psect	bssBANK2
  3921  000200                     __pbssBANK2:
  3922                           	opt callstack 0
  3923  000200                     _uart2TxBuffer:
  3924                           	opt callstack 0
  3925  000200                     	ds	64
  3926  000240                     _uart1TxBuffer:
  3927                           	opt callstack 0
  3928  000240                     	ds	64
  3929  000280                     _ring_buf1:
  3930                           	opt callstack 0
  3931  000280                     	ds	67
  3932                           
  3933                           	psect	dataBANK2
  3934  0002C3                     __pdataBANK2:
  3935                           	opt callstack 0
  3936  0002C3                     _H26:
  3937                           	opt callstack 0
  3938  0002C3                     	ds	29
  3939                           
  3940                           	psect	bssBANK3
  3941  000300                     __pbssBANK3:
  3942                           	opt callstack 0
  3943  000300                     _ring_buf2:
  3944                           	opt callstack 0
  3945  000300                     	ds	67
  3946                           
  3947                           	psect	bssBANK4
  3948  000400                     __pbssBANK4:
  3949                           	opt callstack 0
  3950  000400                     _uart1RxBuffer:
  3951                           	opt callstack 0
  3952  000400                     	ds	255
  3953                           
  3954                           	psect	bssBANK5
  3955  000500                     __pbssBANK5:
  3956                           	opt callstack 0
  3957  000500                     _uart2RxBuffer:
  3958                           	opt callstack 0
  3959  000500                     	ds	255
  3960                           
  3961                           	psect	dataBANK6
  3962  000600                     __pdataBANK6:
  3963                           	opt callstack 0
  3964  000600                     _T:
  3965                           	opt callstack 0
  3966  000600                     	ds	256
  3967                           
  3968                           	psect	bssBIGRAM
  3969  000700                     __pbssBIGRAM:
  3970                           	opt callstack 0
  3971  000700                     mconfig@D:
  3972                           	opt callstack 0
  3973  000700                     	ds	514
  3974  000902                     _S:
  3975                           	opt callstack 0
  3976  000902                     	ds	460
  3977  000ACE                     _D:
  3978                           	opt callstack 0
  3979  000ACE                     	ds	332
  3980                           
  3981                           	psect	dataBIGRAM
  3982  000C1A                     __pdataBIGRAM:
  3983                           	opt callstack 0
  3984  000C1A                     _V:
  3985                           	opt callstack 0
  3986  000C1A                     	ds	387
  3987  000D9D                     _H153:
  3988                           	opt callstack 0
  3989  000D9D                     	ds	312
  3990  000ED5                     _H254:
  3991                           	opt callstack 0
  3992  000ED5                     	ds	257
  3993                           
  3994                           	psect	cstackBANK1
  3995  0001EE                     __pcstackBANK1:
  3996                           	opt callstack 0
  3997  0001EE                     ??_TMR5_ISR:
  3998                           
  3999                           ; 1 bytes @ 0x0
  4000  0001EE                     	ds	3
  4001                           
  4002                           	psect	cstackCOMRAM
  4003  00005C                     __pcstackCOMRAM:
  4004                           	opt callstack 0
  4005  00005C                     ??_TMR6_ISR:
  4006  00005C                     
  4007                           ; 1 bytes @ 0x0
  4008  00005C                     	ds	1
  4009  00005D                     
  4010                           ; 1 bytes @ 0x1
  4011 ;;
  4012 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
  4013 ;;
  4014 ;; *************** function _main *****************
  4015 ;; Defined at:
  4016 ;;		line 633 in file "main.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  s               2  [STACK] PTR unsigned char 
  4021 ;;		 -> D.lcd(512), mconfig@D(514), 
  4022 ;;  mode            1  [STACK] enum E17031
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1  [STACK] void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp
      ++7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23
      +, tblptrl, tblptrh, tblptru, prodl, prodh
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels required when called:   16
  4038 ;; This function calls:
  4039 ;;		_MyeaDogM_WriteStringAtPos
  4040 ;;		_SYSTEM_Initialize
  4041 ;;		_StartTimer
  4042 ;;		_TimerDone
  4043 ;;		_WaitMs
  4044 ;;		_check_help
  4045 ;;		_eaDogM_WriteCommand
  4046 ;;		_get_vterm_ptr
  4047 ;;		_hb_message
  4048 ;;		_init_display
  4049 ;;		_m_protocol
  4050 ;;		_mode_lamp_dim
  4051 ;;		_r_protocol
  4052 ;;		_set_display_info
  4053 ;;		_set_vterm
  4054 ;;		_sprintf
  4055 ;;		_srand
  4056 ;;		_t_protocol
  4057 ;;		_update_lcd
  4058 ;; This function is called by:
  4059 ;;		Startup code after reset
  4060 ;; This function uses a reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text0
  4064  011C18                     __ptext0:
  4065                           	opt callstack 0
  4066  011C18                     _main:
  4067                           	opt callstack 0
  4068                           
  4069                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4070  011C18  52E6               	movf	postinc1,f,c
  4071  011C1A  52E6               	movf	postinc1,f,c
  4072  011C1C  52E6               	movf	postinc1,f,c
  4073                           
  4074                           ;main.c: 635:  UI_STATES mode;;main.c: 636:  char * s;;main.c: 639:  SYSTEM_Initialize()
      +                          ;
  4075                           
  4076                           ;incstack = 0
  4077  011C1E  EC38  F0C8         	call	_SYSTEM_Initialize	;wreg free
  4078                           
  4079                           ; BSR set to: 60
  4080                           ;main.c: 642:  (INTCON0bits.GIEH = 1);
  4081  011C22  8ED2               	bsf	210,7,c	;volatile
  4082                           
  4083                           ; BSR set to: 60
  4084                           ;main.c: 645:  (INTCON0bits.GIEL = 1);
  4085  011C24  8CD2               	bsf	210,6,c	;volatile
  4086                           
  4087                           ; BSR set to: 60
  4088                           ;main.c: 647:  V.ui_state = UI_STATE_INIT;
  4089  011C26  0E00               	movlw	0
  4090  011C28  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
  4091                           
  4092                           ; BSR set to: 60
  4093                           ;main.c: 652:  WaitMs(300);
  4094  011C2E  0E2C               	movlw	44
  4095  011C30  6EE6               	movwf	postinc1,c
  4096  011C32  0E01               	movlw	1
  4097  011C34  6EE6               	movwf	postinc1,c
  4098  011C36  EC30  F0C9         	call	_WaitMs	;wreg free
  4099                           
  4100                           ;main.c: 653:  if (PORTBbits.RB0) {
  4101  011C3A  A0CB               	btfss	203,0,c	;volatile
  4102  011C3C  D004               	goto	l15467
  4103                           
  4104                           ;main.c: 654:   mode = UI_STATE_HOST;
  4105                           ;stkvar	_mode @ sp[(-3)+2]
  4106  011C3E  0EFF               	movlw	-1
  4107  011C40  6AE3               	clrf	plusw1,c
  4108  011C42  2AE3               	incf	plusw1,f,c
  4109                           
  4110                           ;main.c: 655:  } else {
  4111  011C44  D004               	goto	l15469
  4112  011C46                     l15467:
  4113                           
  4114                           ;main.c: 656:   mode = UI_STATE_LOG;
  4115                           ;stkvar	_mode @ sp[(-3)+2]
  4116  011C46  0EFF               	movlw	-1
  4117  011C48  6AE3               	clrf	plusw1,c
  4118  011C4A  80E3               	bsf	plusw1,0,c
  4119  011C4C  82E3               	bsf	plusw1,1,c	;indir
  4120  011C4E                     l15469:
  4121                           
  4122                           ;main.c: 659:  if (mode == UI_STATE_HOST) {
  4123                           ;stkvar	_mode @ sp[(-3)+2]
  4124  011C4E  0EFF               	movlw	-1
  4125  011C50  04E3               	decf	plusw1,w,c
  4126  011C52  A4D8               	btfss	status,2,c
  4127  011C54  D003               	goto	l1257
  4128                           
  4129                           ;main.c: 660:   do { LATDbits.LATD0 = 1; } while(0);
  4130  011C56  80BD               	bsf	189,0,c	;volatile
  4131                           
  4132                           ;main.c: 661:   V.mode_pwm = 70;
  4133  011C58  0E46               	movlw	70
  4134  011C5A  D002               	goto	L1
  4135  011C5C                     l1257:
  4136  011C5C  90BD               	bcf	189,0,c	;volatile
  4137                           
  4138                           ;main.c: 664:   V.mode_pwm = 0;
  4139  011C5E  0E00               	movlw	0
  4140  011C60                     L1:
  4141  011C60  006F FFA0  FD5F    	movff	wreg,_V+325	;volatile
  4142  011C66  0E00               	movlw	0
  4143  011C68  006F FFA0  FD60    	movff	wreg,_V+326	;volatile
  4144                           
  4145                           ;main.c: 666:  mode_lamp_dim(V.mode_pwm);
  4146  011C6E  EE23  F15F         	lfsr	2,_V+325	;volatile
  4147  011C72  006F FF78  F041    	movff	postinc2,btemp+10
  4148  011C78  006F FF74  F042    	movff	postdec2,btemp+11
  4149  011C7E  0060  F107  FFE6   	movff	btemp+10,postinc1
  4150  011C84  0060  F10B  FFE6   	movff	btemp+11,postinc1
  4151  011C8A  ECD6  F0CC         	call	_mode_lamp_dim	;wreg free
  4152  011C8E  EF6A  F093         	goto	l15671
  4153  011C92                     l15473:
  4154                           
  4155                           ;main.c: 677:    init_display();
  4156  011C92  EC10  F0C1         	call	_init_display	;wreg free
  4157                           
  4158                           ; BSR set to: 61
  4159                           ;main.c: 678:    eaDogM_WriteCommand(0b00001100);
  4160  011C96  0E0C               	movlw	12
  4161  011C98  6EE6               	movwf	postinc1,c
  4162  011C9A  EC1E  F0CD         	call	_eaDogM_WriteCommand	;wreg free
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;main.c: 680:    V.ui_state = mode;
  4166                           ;stkvar	_mode @ sp[(-3)+2]
  4167  011C9E  0EFF               	movlw	-1
  4168  011CA0  006F FF8C  F042    	movff	plusw1,btemp+11
  4169  011CA6  0060  F108  FC1B   	movff	btemp+11,_V+1	;volatile
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;main.c: 681:    V.s_state = SEQ_STATE_INIT;
  4173  011CAC  0E00               	movlw	0
  4174  011CAE  006F FFA0  FC1A    	movff	wreg,_V
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;main.c: 682:    srand(1957);
  4178  011CB4  0EA5               	movlw	165
  4179  011CB6  6EE6               	movwf	postinc1,c
  4180  011CB8  0E07               	movlw	7
  4181  011CBA  6EE6               	movwf	postinc1,c
  4182  011CBC  EC66  F0C9         	call	_srand	;wreg free
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;main.c: 683:    set_vterm(0);
  4186  011CC0  0E00               	movlw	0
  4187  011CC2  6EE6               	movwf	postinc1,c
  4188  011CC4  EC58  F0CC         	call	_set_vterm	;wreg free
  4189                           
  4190                           ;main.c: 684:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  4191  011CC8  0E3B               	movlw	low STR_1
  4192  011CCA  6EE6               	movwf	postinc1,c
  4193  011CCC  0EFF               	movlw	high STR_1
  4194  011CCE  6EE6               	movwf	postinc1,c
  4195  011CD0  0E00               	movlw	0
  4196  011CD2  6EE6               	movwf	postinc1,c
  4197  011CD4  0E00               	movlw	0
  4198  011CD6  6EE6               	movwf	postinc1,c
  4199  011CD8  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4200  011CDC  0060  F0DF  FFE6   	movff	btemp,postinc1
  4201  011CE2  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4202  011CE8  0E04               	movlw	4
  4203  011CEA  6EE6               	movwf	postinc1,c
  4204  011CEC  EC95  F0BE         	call	_sprintf	;wreg free
  4205                           
  4206                           ;main.c: 685:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.3");
  4207  011CF0  0ECA               	movlw	low STR_3
  4208  011CF2  6EE6               	movwf	postinc1,c
  4209  011CF4  0EFF               	movlw	high STR_3
  4210  011CF6  6EE6               	movwf	postinc1,c
  4211  011CF8  0E7C               	movlw	low STR_2
  4212  011CFA  6EE6               	movwf	postinc1,c
  4213  011CFC  0EFF               	movlw	high STR_2
  4214  011CFE  6EE6               	movwf	postinc1,c
  4215  011D00  0E00               	movlw	0
  4216  011D02  6EE6               	movwf	postinc1,c
  4217  011D04  0E01               	movlw	1
  4218  011D06  6EE6               	movwf	postinc1,c
  4219  011D08  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4220  011D0C  0060  F0DF  FFE6   	movff	btemp,postinc1
  4221  011D12  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4222  011D18  0E06               	movlw	6
  4223  011D1A  6EE6               	movwf	postinc1,c
  4224  011D1C  EC95  F0BE         	call	_sprintf	;wreg free
  4225                           
  4226                           ;main.c: 686:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4227  011D20  0E2A               	movlw	low STR_4
  4228  011D22  6EE6               	movwf	postinc1,c
  4229  011D24  0EFF               	movlw	high STR_4
  4230  011D26  6EE6               	movwf	postinc1,c
  4231  011D28  0E00               	movlw	0
  4232  011D2A  6EE6               	movwf	postinc1,c
  4233  011D2C  0E02               	movlw	2
  4234  011D2E  6EE6               	movwf	postinc1,c
  4235  011D30  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4236  011D34  0060  F0DF  FFE6   	movff	btemp,postinc1
  4237  011D3A  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4238  011D40  0E04               	movlw	4
  4239  011D42  6EE6               	movwf	postinc1,c
  4240  011D44  EC95  F0BE         	call	_sprintf	;wreg free
  4241                           
  4242                           ;main.c: 687:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  4243  011D48  0E4C               	movlw	low STR_5
  4244  011D4A  6EE6               	movwf	postinc1,c
  4245  011D4C  0EFF               	movlw	high STR_5
  4246  011D4E  6EE6               	movwf	postinc1,c
  4247  011D50  0E02               	movlw	2
  4248  011D52  6EE6               	movwf	postinc1,c
  4249  011D54  0E00               	movlw	0
  4250  011D56  6EE6               	movwf	postinc1,c
  4251  011D58  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4252  011D5C  0060  F0DF  FFE6   	movff	btemp,postinc1
  4253  011D62  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4254  011D68  0E04               	movlw	4
  4255  011D6A  6EE6               	movwf	postinc1,c
  4256  011D6C  EC95  F0BE         	call	_sprintf	;wreg free
  4257                           
  4258                           ;main.c: 688:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.3");
  4259  011D70  0ECA               	movlw	low STR_3
  4260  011D72  6EE6               	movwf	postinc1,c
  4261  011D74  0EFF               	movlw	high STR_3
  4262  011D76  6EE6               	movwf	postinc1,c
  4263  011D78  0E7C               	movlw	low STR_2
  4264  011D7A  6EE6               	movwf	postinc1,c
  4265  011D7C  0EFF               	movlw	high STR_2
  4266  011D7E  6EE6               	movwf	postinc1,c
  4267  011D80  0E02               	movlw	2
  4268  011D82  6EE6               	movwf	postinc1,c
  4269  011D84  0E01               	movlw	1
  4270  011D86  6EE6               	movwf	postinc1,c
  4271  011D88  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4272  011D8C  0060  F0DF  FFE6   	movff	btemp,postinc1
  4273  011D92  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4274  011D98  0E06               	movlw	6
  4275  011D9A  6EE6               	movwf	postinc1,c
  4276  011D9C  EC95  F0BE         	call	_sprintf	;wreg free
  4277                           
  4278                           ;main.c: 689:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  4279  011DA0  0E19               	movlw	low STR_8
  4280  011DA2  6EE6               	movwf	postinc1,c
  4281  011DA4  0EFF               	movlw	high STR_8
  4282  011DA6  6EE6               	movwf	postinc1,c
  4283  011DA8  0E02               	movlw	2
  4284  011DAA  6EE6               	movwf	postinc1,c
  4285  011DAC  0E02               	movlw	2
  4286  011DAE  6EE6               	movwf	postinc1,c
  4287  011DB0  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4288  011DB4  0060  F0DF  FFE6   	movff	btemp,postinc1
  4289  011DBA  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4290  011DC0  0E04               	movlw	4
  4291  011DC2  6EE6               	movwf	postinc1,c
  4292  011DC4  EC95  F0BE         	call	_sprintf	;wreg free
  4293                           
  4294                           ;main.c: 690:    update_lcd(0);
  4295  011DC8  0E00               	movlw	0
  4296  011DCA  6EE6               	movwf	postinc1,c
  4297  011DCC  EC0D  F0BE         	call	_update_lcd	;wreg free
  4298                           
  4299                           ;main.c: 691:    WaitMs(3000);
  4300  011DD0  0EB8               	movlw	184
  4301  011DD2  6EE6               	movwf	postinc1,c
  4302  011DD4  0E0B               	movlw	11
  4303  011DD6  6EE6               	movwf	postinc1,c
  4304  011DD8  EC30  F0C9         	call	_WaitMs	;wreg free
  4305                           
  4306                           ;main.c: 692:    StartTimer(TMR_DISPLAY, 100);
  4307  011DDC  0E64               	movlw	100
  4308  011DDE  6EE6               	movwf	postinc1,c
  4309  011DE0  0E00               	movlw	0
  4310  011DE2  6EE6               	movwf	postinc1,c
  4311  011DE4  0E0A               	movlw	10
  4312  011DE6  6EE6               	movwf	postinc1,c
  4313  011DE8  EC12  F0C9         	call	_StartTimer	;wreg free
  4314                           
  4315                           ;main.c: 693:    StartTimer(TMR_SEQ, 10000);
  4316  011DEC  0E10               	movlw	16
  4317  011DEE  6EE6               	movwf	postinc1,c
  4318  011DF0  0E27               	movlw	39
  4319  011DF2  6EE6               	movwf	postinc1,c
  4320  011DF4  0E0B               	movlw	11
  4321  011DF6  6EE6               	movwf	postinc1,c
  4322  011DF8  EC12  F0C9         	call	_StartTimer	;wreg free
  4323                           
  4324                           ;main.c: 694:    StartTimer(TMR_INFO, 3000);
  4325  011DFC  0EB8               	movlw	184
  4326  011DFE  6EE6               	movwf	postinc1,c
  4327  011E00  0E0B               	movlw	11
  4328  011E02  6EE6               	movwf	postinc1,c
  4329  011E04  0E07               	movlw	7
  4330  011E06  6EE6               	movwf	postinc1,c
  4331  011E08  EC12  F0C9         	call	_StartTimer	;wreg free
  4332                           
  4333                           ;main.c: 695:    StartTimer(TMR_FLIPPER, 1500);
  4334  011E0C  0EDC               	movlw	220
  4335  011E0E  6EE6               	movwf	postinc1,c
  4336  011E10  0E05               	movlw	5
  4337  011E12  6EE6               	movwf	postinc1,c
  4338  011E14  0E0C               	movlw	12
  4339  011E16  6EE6               	movwf	postinc1,c
  4340  011E18  EC12  F0C9         	call	_StartTimer	;wreg free
  4341                           
  4342                           ;main.c: 696:    StartTimer(TMR_HELPDIS, 3000);
  4343  011E1C  0EB8               	movlw	184
  4344  011E1E  6EE6               	movwf	postinc1,c
  4345  011E20  0E0B               	movlw	11
  4346  011E22  6EE6               	movwf	postinc1,c
  4347  011E24  0E09               	movlw	9
  4348  011E26  6EE6               	movwf	postinc1,c
  4349  011E28  EC12  F0C9         	call	_StartTimer	;wreg free
  4350                           
  4351                           ;main.c: 697:    break;
  4352  011E2C  EF80  F093         	goto	l15673
  4353  011E30                     l1265:
  4354                           
  4355                           ;main.c: 701:     V.r_l_state = LINK_STATE_IDLE;
  4356  011E30  0E00               	movlw	0
  4357  011E32  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
  4358                           
  4359                           ;main.c: 702:     V.t_l_state = LINK_STATE_IDLE;
  4360  011E38  0E00               	movlw	0
  4361  011E3A  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
  4362                           
  4363                           ;main.c: 703:     V.s_state = SEQ_STATE_RX;
  4364  011E40  0E01               	movlw	1
  4365  011E42  006F FFA0  FC1A    	movff	wreg,_V
  4366                           
  4367                           ;main.c: 704:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  4368  011E48  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
  4369  011E4E  0A0A               	xorlw	10
  4370  011E50  A4D8               	btfss	status,2,c
  4371  011E52  D1EF               	goto	l15583
  4372  011E54  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
  4373  011E5A  0A0A               	xorlw	10
  4374  011E5C  A4D8               	btfss	status,2,c
  4375  011E5E  D1E9               	goto	l15583
  4376                           
  4377                           ;main.c: 705:      if (V.debug)
  4378  011E60  EE23  F168         	lfsr	2,_V+334	;volatile
  4379  011E64  AADF               	btfss	indf2,5,c
  4380  011E66  D027               	goto	l15519
  4381                           
  4382                           ;main.c: 706:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld  ", sizeof(header254), V
      +                          .testing);
  4383  011E68  EE23  F149         	lfsr	2,_V+303	;volatile
  4384  011E6C  006F FF7B FFE6     	movff	postinc2,postinc1
  4385  011E72  006F FF7B FFE6     	movff	postinc2,postinc1
  4386  011E78  006F FF7B FFE6     	movff	postinc2,postinc1
  4387  011E7E  006F FF7B FFE6     	movff	postinc2,postinc1
  4388  011E84  0E01               	movlw	1
  4389  011E86  6EE6               	movwf	postinc1,c
  4390  011E88  0E01               	movlw	1
  4391  011E8A  6EE6               	movwf	postinc1,c
  4392  011E8C  0E5D               	movlw	low STR_9
  4393  011E8E  6EE6               	movwf	postinc1,c
  4394  011E90  0EFF               	movlw	high STR_9
  4395  011E92  6EE6               	movwf	postinc1,c
  4396  011E94  0E00               	movlw	0
  4397  011E96  6EE6               	movwf	postinc1,c
  4398  011E98  0E02               	movlw	2
  4399  011E9A  6EE6               	movwf	postinc1,c
  4400  011E9C  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4401  011EA0  0060  F0DF  FFE6   	movff	btemp,postinc1
  4402  011EA6  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4403  011EAC  0E0A               	movlw	10
  4404  011EAE  6EE6               	movwf	postinc1,c
  4405  011EB0  EC95  F0BE         	call	_sprintf	;wreg free
  4406  011EB4  D1BE               	goto	l15583
  4407  011EB6                     l15519:
  4408                           
  4409                           ;main.c: 708:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
  4410  011EB6  EE23  F01C         	lfsr	2,_V+2	;volatile
  4411  011EBA  50DF               	movf	indf2,w,c
  4412  011EBC  6EE6               	movwf	postinc1,c
  4413  011EBE  0E00               	movlw	0
  4414  011EC0  6EE6               	movwf	postinc1,c
  4415  011EC2  EE23  F141         	lfsr	2,_V+295	;volatile
  4416  011EC6  006F FF7B FFE6     	movff	postinc2,postinc1
  4417  011ECC  006F FF7B FFE6     	movff	postinc2,postinc1
  4418  011ED2  006F FF7B FFE6     	movff	postinc2,postinc1
  4419  011ED8  006F FF7B FFE6     	movff	postinc2,postinc1
  4420  011EDE  0E20               	movlw	low STR_10
  4421  011EE0  6EE6               	movwf	postinc1,c
  4422  011EE2  0EFE               	movlw	high STR_10
  4423  011EE4  6EE6               	movwf	postinc1,c
  4424  011EE6  0E00               	movlw	0
  4425  011EE8  6EE6               	movwf	postinc1,c
  4426  011EEA  0E02               	movlw	2
  4427  011EEC  6EE6               	movwf	postinc1,c
  4428  011EEE  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4429  011EF2  0060  F0DF  FFE6   	movff	btemp,postinc1
  4430  011EF8  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4431  011EFE  0E0A               	movlw	10
  4432  011F00  6EE6               	movwf	postinc1,c
  4433  011F02  EC95  F0BE         	call	_sprintf	;wreg free
  4434  011F06  D195               	goto	l15583
  4435  011F08                     l15521:
  4436                           
  4437                           ;main.c: 719:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  4438  011F08  0E1F               	movlw	low (_V+5)
  4439  011F0A  6EE6               	movwf	postinc1,c
  4440  011F0C  0E0C               	movlw	high (_V+5)
  4441  011F0E  6EE6               	movwf	postinc1,c
  4442  011F10  EC1E  F09D         	call	_r_protocol	;wreg free
  4443  011F14  0E04               	movlw	4
  4444  011F16  1837               	xorwf	btemp^0,w,c
  4445  011F18  A4D8               	btfss	status,2,c
  4446  011F1A  D087               	goto	l15547
  4447                           
  4448                           ;main.c: 720:      set_display_info(DIS_STR);
  4449  011F1C  0E00               	movlw	0
  4450  011F1E  6EE6               	movwf	postinc1,c
  4451  011F20  EC39  F0CC         	call	_set_display_info	;wreg free
  4452                           
  4453                           ;main.c: 721:      s = get_vterm_ptr(0, 0);
  4454  011F24  0E00               	movlw	0
  4455  011F26  6EE6               	movwf	postinc1,c
  4456  011F28  0E00               	movlw	0
  4457  011F2A  6EE6               	movwf	postinc1,c
  4458  011F2C  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4459                           
  4460                           ;stkvar	_s @ sp[(-3)+0]
  4461  011F30  0EFE               	movlw	-2
  4462  011F32  0060  F0E3  FFE3   	movff	btemp+1,plusw1
  4463  011F38  0EFD               	movlw	-3
  4464  011F3A  0060  F0DF  FFE3   	movff	btemp,plusw1
  4465                           
  4466                           ;main.c: 722:      if (V.stream == 9) {
  4467  011F40  0063  F537  FFE8   	movff	_V+307,wreg	;volatile
  4468  011F46  0A09               	xorlw	9
  4469  011F48  A4D8               	btfss	status,2,c
  4470  011F4A  D01E               	goto	l1272
  4471                           
  4472                           ;main.c: 723:       V.msg_error = V.function;
  4473  011F4C  CD4E  FD51         	movff	_V+308,_V+311	;volatile
  4474                           
  4475                           ;main.c: 724:       sprintf(s, " S%dF%d Err         ", V.stream, V.function);
  4476  011F50  EE23  F14E         	lfsr	2,_V+308	;volatile
  4477  011F54  50DF               	movf	indf2,w,c
  4478  011F56  6EE6               	movwf	postinc1,c
  4479  011F58  0E00               	movlw	0
  4480  011F5A  6EE6               	movwf	postinc1,c
  4481  011F5C  EE23  F14D         	lfsr	2,_V+307	;volatile
  4482  011F60  50DF               	movf	indf2,w,c
  4483  011F62  6EE6               	movwf	postinc1,c
  4484  011F64  0E00               	movlw	0
  4485  011F66  6EE6               	movwf	postinc1,c
  4486  011F68  0EE1               	movlw	low STR_11
  4487  011F6A  6EE6               	movwf	postinc1,c
  4488  011F6C  0EFD               	movlw	high STR_11
  4489  011F6E  6EE6               	movwf	postinc1,c
  4490                           
  4491                           ;stkvar	_s @ sp[(-9)+0]
  4492  011F70  0EF7               	movlw	-9
  4493  011F72  006F FF8F FFE6     	movff	plusw1,postinc1
  4494  011F78  006F FF8F FFE6     	movff	plusw1,postinc1
  4495  011F7E  0E08               	movlw	8
  4496  011F80  6EE6               	movwf	postinc1,c
  4497  011F82  EC95  F0BE         	call	_sprintf	;wreg free
  4498                           
  4499                           ;main.c: 725:      } else {
  4500  011F86  D01F               	goto	l15535
  4501  011F88                     l1272:
  4502                           
  4503                           ;main.c: 726:       V.msg_error = MSG_ERROR_NONE;
  4504  011F88  0E00               	movlw	0
  4505  011F8A  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
  4506                           
  4507                           ;main.c: 727:       sprintf(s, " S%dF%d #           ", V.stream, V.function);
  4508  011F90  EE23  F14E         	lfsr	2,_V+308	;volatile
  4509  011F94  50DF               	movf	indf2,w,c
  4510  011F96  6EE6               	movwf	postinc1,c
  4511  011F98  0E00               	movlw	0
  4512  011F9A  6EE6               	movwf	postinc1,c
  4513  011F9C  EE23  F14D         	lfsr	2,_V+307	;volatile
  4514  011FA0  50DF               	movf	indf2,w,c
  4515  011FA2  6EE6               	movwf	postinc1,c
  4516  011FA4  0E00               	movlw	0
  4517  011FA6  6EE6               	movwf	postinc1,c
  4518  011FA8  0ECC               	movlw	low STR_12
  4519  011FAA  6EE6               	movwf	postinc1,c
  4520  011FAC  0EFD               	movlw	high STR_12
  4521  011FAE  6EE6               	movwf	postinc1,c
  4522                           
  4523                           ;stkvar	_s @ sp[(-9)+0]
  4524  011FB0  0EF7               	movlw	-9
  4525  011FB2  006F FF8F FFE6     	movff	plusw1,postinc1
  4526  011FB8  006F FF8F FFE6     	movff	plusw1,postinc1
  4527  011FBE  0E08               	movlw	8
  4528  011FC0  6EE6               	movwf	postinc1,c
  4529  011FC2  EC95  F0BE         	call	_sprintf	;wreg free
  4530  011FC6                     l15535:
  4531                           
  4532                           ;main.c: 729:      s[16] = 0;
  4533                           ;stkvar	_s @ sp[(-3)+0]
  4534  011FC6  0EFD               	movlw	-3
  4535  011FC8  006F FF8C  F041    	movff	plusw1,btemp+10
  4536  011FCE  0EFE               	movlw	-2
  4537  011FD0  006F FF8C  F042    	movff	plusw1,btemp+11
  4538  011FD6  0E10               	movlw	16
  4539  011FD8  2441               	addwf	(btemp+10)^0,w,c
  4540  011FDA  6ED9               	movwf	fsr2l,c
  4541  011FDC  0E00               	movlw	0
  4542  011FDE  2042               	addwfc	(btemp+11)^0,w,c
  4543  011FE0  6EDA               	movwf	fsr2h,c
  4544  011FE2  0E00               	movlw	0
  4545  011FE4  6EDF               	movwf	indf2,c
  4546                           
  4547                           ;main.c: 730:      MyeaDogM_WriteStringAtPos(0, 0, s);
  4548                           ;stkvar	_s @ sp[(-3)+0]
  4549  011FE6  0EFD               	movlw	-3
  4550  011FE8  006F FF8F FFE6     	movff	plusw1,postinc1
  4551  011FEE  006F FF8F FFE6     	movff	plusw1,postinc1
  4552  011FF4  0E00               	movlw	0
  4553  011FF6  6EE6               	movwf	postinc1,c
  4554  011FF8  0E00               	movlw	0
  4555  011FFA  6EE6               	movwf	postinc1,c
  4556  011FFC  EC1E  F0C0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  4557                           
  4558                           ;main.c: 734:      if (V.wbit) {
  4559  012000  EE23  F167         	lfsr	2,_V+333	;volatile
  4560  012004  A2DF               	btfss	indf2,1,c
  4561  012006  D00D               	goto	l1274
  4562                           
  4563                           ;main.c: 735:       V.s_state = SEQ_STATE_TX;
  4564  012008  0E02               	movlw	2
  4565  01200A  006F FFA0  FC1A    	movff	wreg,_V
  4566                           
  4567                           ;main.c: 736:       V.failed_send = 0;
  4568  012010  EE23  F167         	lfsr	2,_V+333	;volatile
  4569  012014  0E0F               	movlw	-241
  4570  012016  16DF               	andwf	223,f,c
  4571                           
  4572                           ;main.c: 737:       V.t_l_state = LINK_STATE_IDLE;
  4573  012018  0E00               	movlw	0
  4574  01201A  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
  4575                           
  4576                           ;main.c: 738:      } else {
  4577  012020  D004               	goto	l15547
  4578  012022                     l1274:
  4579                           
  4580                           ;main.c: 739:       V.s_state = SEQ_STATE_TRIGGER;
  4581  012022  0E03               	movlw	3
  4582  012024  006F FFA0  FC1A    	movff	wreg,_V
  4583  01202A                     l15547:
  4584                           
  4585                           ;main.c: 742:     if (V.r_l_state == LINK_STATE_ERROR)
  4586  01202A  0063  F07F  FFE8   	movff	_V+5,wreg	;volatile
  4587  012030  D011               	goto	L54
  4588  012032                     l15551:
  4589                           
  4590                           ;main.c: 749:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  4591  012032  0E20               	movlw	low (_V+6)
  4592  012034  6EE6               	movwf	postinc1,c
  4593  012036  0E0C               	movlw	high (_V+6)
  4594  012038  6EE6               	movwf	postinc1,c
  4595  01203A  EC25  F0A5         	call	_t_protocol	;wreg free
  4596  01203E  0E04               	movlw	4
  4597  012040  1837               	xorwf	btemp^0,w,c
  4598  012042  A4D8               	btfss	status,2,c
  4599  012044  D004               	goto	l15555
  4600                           
  4601                           ;main.c: 750:      V.s_state = SEQ_STATE_TRIGGER;
  4602  012046  0E03               	movlw	3
  4603  012048  006F FFA0  FC1A    	movff	wreg,_V
  4604  01204E                     l15555:
  4605                           
  4606                           ;main.c: 752:     if (V.t_l_state == LINK_STATE_ERROR)
  4607  01204E  0063  F083  FFE8   	movff	_V+6,wreg	;volatile
  4608  012054                     L54:
  4609  012054  0A06               	xorlw	6
  4610  012056  A4D8               	btfss	status,2,c
  4611  012058  D0EC               	goto	l15583
  4612                           
  4613                           ;main.c: 753:      V.s_state = SEQ_STATE_ERROR;
  4614  01205A  0E06               	movlw	6
  4615  01205C  D088               	goto	L2
  4616  01205E                     l15559:
  4617                           
  4618                           ;main.c: 756:     set_display_info(DIS_STR);
  4619  01205E  0E00               	movlw	0
  4620  012060  6EE6               	movwf	postinc1,c
  4621  012062  EC39  F0CC         	call	_set_display_info	;wreg free
  4622                           
  4623                           ;main.c: 757:     s = get_vterm_ptr(0, 0);
  4624  012066  0E00               	movlw	0
  4625  012068  6EE6               	movwf	postinc1,c
  4626  01206A  0E00               	movlw	0
  4627  01206C  6EE6               	movwf	postinc1,c
  4628  01206E  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4629                           
  4630                           ;stkvar	_s @ sp[(-3)+0]
  4631  012072  0EFE               	movlw	-2
  4632  012074  0060  F0E3  FFE3   	movff	btemp+1,plusw1
  4633  01207A  0EFD               	movlw	-3
  4634  01207C  0060  F0DF  FFE3   	movff	btemp,plusw1
  4635                           
  4636                           ;main.c: 758:     if (V.queue) {
  4637  012082  EE23  F168         	lfsr	2,_V+334	;volatile
  4638  012086  A8DF               	btfss	indf2,4,c
  4639  012088  D02E               	goto	l1281
  4640                           
  4641                           ;main.c: 759:      V.r_l_state = LINK_STATE_IDLE;
  4642  01208A  0E00               	movlw	0
  4643  01208C  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
  4644                           
  4645                           ;main.c: 760:      V.t_l_state = LINK_STATE_IDLE;
  4646  012092  0E00               	movlw	0
  4647  012094  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
  4648                           
  4649                           ;main.c: 761:      V.s_state = SEQ_STATE_TX;
  4650  01209A  0E02               	movlw	2
  4651  01209C  006F FFA0  FC1A    	movff	wreg,_V
  4652                           
  4653                           ;main.c: 762:      sprintf(s, " S%dF%d # OKQ%d        ", V.stream, V.function, V.e_types
      +                          );
  4654  0120A2  EE23  F01D         	lfsr	2,_V+3	;volatile
  4655  0120A6  50DF               	movf	indf2,w,c
  4656  0120A8  6EE6               	movwf	postinc1,c
  4657  0120AA  0E00               	movlw	0
  4658  0120AC  6EE6               	movwf	postinc1,c
  4659  0120AE  EE23  F14E         	lfsr	2,_V+308	;volatile
  4660  0120B2  50DF               	movf	indf2,w,c
  4661  0120B4  6EE6               	movwf	postinc1,c
  4662  0120B6  0E00               	movlw	0
  4663  0120B8  6EE6               	movwf	postinc1,c
  4664  0120BA  EE23  F14D         	lfsr	2,_V+307	;volatile
  4665  0120BE  50DF               	movf	indf2,w,c
  4666  0120C0  6EE6               	movwf	postinc1,c
  4667  0120C2  0E00               	movlw	0
  4668  0120C4  6EE6               	movwf	postinc1,c
  4669  0120C6  0E5E               	movlw	low STR_13
  4670  0120C8  6EE6               	movwf	postinc1,c
  4671  0120CA  0EFD               	movlw	high STR_13
  4672  0120CC  6EE6               	movwf	postinc1,c
  4673                           
  4674                           ;stkvar	_s @ sp[(-11)+0]
  4675  0120CE  0EF5               	movlw	-11
  4676  0120D0  006F FF8F FFE6     	movff	plusw1,postinc1
  4677  0120D6  006F FF8F FFE6     	movff	plusw1,postinc1
  4678  0120DC  0E0A               	movlw	10
  4679  0120DE  6EE6               	movwf	postinc1,c
  4680  0120E0  EC95  F0BE         	call	_sprintf	;wreg free
  4681                           
  4682                           ;main.c: 763:     } else {
  4683  0120E4  D025               	goto	l15571
  4684  0120E6                     l1281:
  4685                           
  4686                           ;main.c: 764:      V.s_state = SEQ_STATE_DONE;
  4687  0120E6  0E05               	movlw	5
  4688  0120E8  006F FFA0  FC1A    	movff	wreg,_V
  4689                           
  4690                           ;main.c: 765:      sprintf(s, " S%dF%d # OK %d        ", V.stream, V.function, V.e_types
      +                          );
  4691  0120EE  EE23  F01D         	lfsr	2,_V+3	;volatile
  4692  0120F2  50DF               	movf	indf2,w,c
  4693  0120F4  6EE6               	movwf	postinc1,c
  4694  0120F6  0E00               	movlw	0
  4695  0120F8  6EE6               	movwf	postinc1,c
  4696  0120FA  EE23  F14E         	lfsr	2,_V+308	;volatile
  4697  0120FE  50DF               	movf	indf2,w,c
  4698  012100  6EE6               	movwf	postinc1,c
  4699  012102  0E00               	movlw	0
  4700  012104  6EE6               	movwf	postinc1,c
  4701  012106  EE23  F14D         	lfsr	2,_V+307	;volatile
  4702  01210A  50DF               	movf	indf2,w,c
  4703  01210C  6EE6               	movwf	postinc1,c
  4704  01210E  0E00               	movlw	0
  4705  012110  6EE6               	movwf	postinc1,c
  4706  012112  0E46               	movlw	low STR_14
  4707  012114  6EE6               	movwf	postinc1,c
  4708  012116  0EFD               	movlw	high STR_14
  4709  012118  6EE6               	movwf	postinc1,c
  4710                           
  4711                           ;stkvar	_s @ sp[(-11)+0]
  4712  01211A  0EF5               	movlw	-11
  4713  01211C  006F FF8F FFE6     	movff	plusw1,postinc1
  4714  012122  006F FF8F FFE6     	movff	plusw1,postinc1
  4715  012128  0E0A               	movlw	10
  4716  01212A  6EE6               	movwf	postinc1,c
  4717  01212C  EC95  F0BE         	call	_sprintf	;wreg free
  4718  012130                     l15571:
  4719                           
  4720                           ;main.c: 768:     s[16] = 0;
  4721                           ;stkvar	_s @ sp[(-3)+0]
  4722  012130  0EFD               	movlw	-3
  4723  012132  006F FF8C  F041    	movff	plusw1,btemp+10
  4724  012138  0EFE               	movlw	-2
  4725  01213A  006F FF8C  F042    	movff	plusw1,btemp+11
  4726  012140  0E10               	movlw	16
  4727  012142  2441               	addwf	(btemp+10)^0,w,c
  4728  012144  6ED9               	movwf	fsr2l,c
  4729  012146  0E00               	movlw	0
  4730  012148  2042               	addwfc	(btemp+11)^0,w,c
  4731  01214A  6EDA               	movwf	fsr2h,c
  4732  01214C  0E00               	movlw	0
  4733  01214E  6EDF               	movwf	indf2,c
  4734                           
  4735                           ;main.c: 769:     MyeaDogM_WriteStringAtPos(0, 0, s);
  4736                           ;stkvar	_s @ sp[(-3)+0]
  4737  012150  0EFD               	movlw	-3
  4738  012152  006F FF8F FFE6     	movff	plusw1,postinc1
  4739  012158  006F FF8F FFE6     	movff	plusw1,postinc1
  4740  01215E  0E00               	movlw	0
  4741  012160  6EE6               	movwf	postinc1,c
  4742  012162  0E00               	movlw	0
  4743  012164  6EE6               	movwf	postinc1,c
  4744  012166  EC1E  F0C0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  4745                           
  4746                           ;main.c: 770:     break;
  4747  01216A  D063               	goto	l15583
  4748  01216C                     l1283:
  4749                           
  4750                           ;main.c: 772:     V.s_state = SEQ_STATE_INIT;
  4751  01216C  0E00               	movlw	0
  4752  01216E                     L2:
  4753  01216E  006F FFA0  FC1A    	movff	wreg,_V
  4754                           
  4755                           ;main.c: 773:     break;
  4756  012174  D05E               	goto	l15583
  4757  012176                     l1285:
  4758                           
  4759                           ;main.c: 776:     V.s_state = SEQ_STATE_INIT;
  4760  012176  0E00               	movlw	0
  4761  012178  006F FFA0  FC1A    	movff	wreg,_V
  4762                           
  4763                           ;main.c: 777:     sprintf(get_vterm_ptr(2, 0), "E%d A%d T%d G%d #", V.error, V.abort, V.
      +                          timer_error, V.g_state);
  4764  01217E  EE23  F01C         	lfsr	2,_V+2	;volatile
  4765  012182  50DF               	movf	indf2,w,c
  4766  012184  6EE6               	movwf	postinc1,c
  4767  012186  0E00               	movlw	0
  4768  012188  6EE6               	movwf	postinc1,c
  4769  01218A  EE23  F15B         	lfsr	2,_V+321	;volatile
  4770  01218E  006F FF78  F041    	movff	postinc2,btemp+10
  4771  012194  006F FF74  F042    	movff	postdec2,btemp+11
  4772  01219A  0060  F107  FFE6   	movff	btemp+10,postinc1
  4773  0121A0  0060  F10B  FFE6   	movff	btemp+11,postinc1
  4774  0121A6  EE23  F150         	lfsr	2,_V+310	;volatile
  4775  0121AA  50DF               	movf	indf2,w,c
  4776  0121AC  6EE6               	movwf	postinc1,c
  4777  0121AE  0E00               	movlw	0
  4778  0121B0  6EE6               	movwf	postinc1,c
  4779  0121B2  EE23  F14F         	lfsr	2,_V+309	;volatile
  4780  0121B6  50DF               	movf	indf2,w,c
  4781  0121B8  6EE6               	movwf	postinc1,c
  4782  0121BA  0E00               	movlw	0
  4783  0121BC  6EE6               	movwf	postinc1,c
  4784  0121BE  0E07               	movlw	low STR_15
  4785  0121C0  6EE6               	movwf	postinc1,c
  4786  0121C2  0EFF               	movlw	high STR_15
  4787  0121C4  6EE6               	movwf	postinc1,c
  4788  0121C6  0E00               	movlw	0
  4789  0121C8  6EE6               	movwf	postinc1,c
  4790  0121CA  0E02               	movlw	2
  4791  0121CC  6EE6               	movwf	postinc1,c
  4792  0121CE  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4793  0121D2  0060  F0DF  FFE6   	movff	btemp,postinc1
  4794  0121D8  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4795  0121DE  0E0C               	movlw	12
  4796  0121E0  6EE6               	movwf	postinc1,c
  4797  0121E2  EC95  F0BE         	call	_sprintf	;wreg free
  4798                           
  4799                           ;main.c: 778:     update_lcd(0);
  4800  0121E6  0E00               	movlw	0
  4801  0121E8  6EE6               	movwf	postinc1,c
  4802  0121EA  EC0D  F0BE         	call	_update_lcd	;wreg free
  4803                           
  4804                           ;main.c: 779:     WaitMs(2000);
  4805  0121EE  0ED0               	movlw	208
  4806  0121F0  6EE6               	movwf	postinc1,c
  4807  0121F2  0E07               	movlw	7
  4808  0121F4  6EE6               	movwf	postinc1,c
  4809  0121F6  EC30  F0C9         	call	_WaitMs	;wreg free
  4810                           
  4811                           ;main.c: 780:     break;
  4812  0121FA  D01B               	goto	l15583
  4813  0121FC                     l15581:
  4814  0121FC  EE23  F01A         	lfsr	2,_V
  4815  012200  50DF               	movf	indf2,w,c
  4816  012202  6E41               	movwf	(btemp+10)^0,c
  4817  012204  6A42               	clrf	(btemp+11)^0,c
  4818                           
  4819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4820                           ; Switch size 1, requested type "simple"
  4821                           ; Number of cases is 1, Range of values is 0 to 0
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte            4     3 (average)
  4825                           ;	Chosen strategy is simple_byte
  4826  012206  5042               	movf	(btemp+11)^0,w,c
  4827  012208  0A00               	xorlw	0	; case 0
  4828  01220A  A4D8               	btfss	status,2,c
  4829  01220C  D7B4               	goto	l1285
  4830                           
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 6, Range of values is 0 to 6
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte           19    10 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  01220E  5041               	movf	(btemp+10)^0,w,c
  4838  012210  0A00               	xorlw	0	; case 0
  4839  012212  B4D8               	btfsc	status,2,c
  4840  012214  D60D               	goto	l1265
  4841  012216  0A01               	xorlw	1	; case 1
  4842  012218  B4D8               	btfsc	status,2,c
  4843  01221A  D676               	goto	l15521
  4844  01221C  0A03               	xorlw	3	; case 2
  4845  01221E  B4D8               	btfsc	status,2,c
  4846  012220  D708               	goto	l15551
  4847  012222  0A01               	xorlw	1	; case 3
  4848  012224  B4D8               	btfsc	status,2,c
  4849  012226  D71B               	goto	l15559
  4850  012228  0A06               	xorlw	6	; case 5
  4851  01222A  B4D8               	btfsc	status,2,c
  4852  01222C  D79F               	goto	l1283
  4853  01222E  0A03               	xorlw	3	; case 6
  4854  012230  D7A2               	goto	l1285
  4855  012232                     l15583:
  4856                           
  4857                           ;main.c: 782:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  4858  012232  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
  4859  012238  0A0A               	xorlw	10
  4860  01223A  A4D8               	btfss	status,2,c
  4861  01223C  D261               	goto	l15673
  4862  01223E  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
  4863  012244  0A0A               	xorlw	10
  4864  012246  A4D8               	btfss	status,2,c
  4865  012248  D25B               	goto	l15673
  4866                           
  4867                           ;main.c: 783:     if (TimerDone(TMR_DISPLAY)) {
  4868  01224A  0E0A               	movlw	10
  4869  01224C  6EE6               	movwf	postinc1,c
  4870  01224E  ECE1  F0CB         	call	_TimerDone	;wreg free
  4871  012252  5037               	movf	btemp^0,w,c
  4872  012254  B4D8               	btfsc	status,2,c
  4873  012256  D053               	goto	l15595
  4874                           
  4875                           ;main.c: 784:      if (V.debug)
  4876  012258  EE23  F168         	lfsr	2,_V+334	;volatile
  4877  01225C  AADF               	btfss	indf2,5,c
  4878  01225E  D027               	goto	l15593
  4879                           
  4880                           ;main.c: 785:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header25
      +                          4), V.testing);
  4881  012260  EE23  F149         	lfsr	2,_V+303	;volatile
  4882  012264  006F FF7B FFE6     	movff	postinc2,postinc1
  4883  01226A  006F FF7B FFE6     	movff	postinc2,postinc1
  4884  012270  006F FF7B FFE6     	movff	postinc2,postinc1
  4885  012276  006F FF7B FFE6     	movff	postinc2,postinc1
  4886  01227C  0E01               	movlw	1
  4887  01227E  6EE6               	movwf	postinc1,c
  4888  012280  0E01               	movlw	1
  4889  012282  6EE6               	movwf	postinc1,c
  4890  012284  0E0B               	movlw	low STR_16
  4891  012286  6EE6               	movwf	postinc1,c
  4892  012288  0EFE               	movlw	high STR_16
  4893  01228A  6EE6               	movwf	postinc1,c
  4894  01228C  0E00               	movlw	0
  4895  01228E  6EE6               	movwf	postinc1,c
  4896  012290  0E02               	movlw	2
  4897  012292  6EE6               	movwf	postinc1,c
  4898  012294  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4899  012298  0060  F0DF  FFE6   	movff	btemp,postinc1
  4900  01229E  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4901  0122A4  0E0A               	movlw	10
  4902  0122A6  6EE6               	movwf	postinc1,c
  4903  0122A8  EC95  F0BE         	call	_sprintf	;wreg free
  4904  0122AC  D028               	goto	l15595
  4905  0122AE                     l15593:
  4906                           
  4907                           ;main.c: 787:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
  4908  0122AE  EE23  F01C         	lfsr	2,_V+2	;volatile
  4909  0122B2  50DF               	movf	indf2,w,c
  4910  0122B4  6EE6               	movwf	postinc1,c
  4911  0122B6  0E00               	movlw	0
  4912  0122B8  6EE6               	movwf	postinc1,c
  4913  0122BA  EE23  F141         	lfsr	2,_V+295	;volatile
  4914  0122BE  006F FF7B FFE6     	movff	postinc2,postinc1
  4915  0122C4  006F FF7B FFE6     	movff	postinc2,postinc1
  4916  0122CA  006F FF7B FFE6     	movff	postinc2,postinc1
  4917  0122D0  006F FF7B FFE6     	movff	postinc2,postinc1
  4918  0122D6  0E20               	movlw	low STR_10
  4919  0122D8  6EE6               	movwf	postinc1,c
  4920  0122DA  0EFE               	movlw	high STR_10
  4921  0122DC  6EE6               	movwf	postinc1,c
  4922  0122DE  0E00               	movlw	0
  4923  0122E0  6EE6               	movwf	postinc1,c
  4924  0122E2  0E02               	movlw	2
  4925  0122E4  6EE6               	movwf	postinc1,c
  4926  0122E6  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  4927  0122EA  0060  F0DF  FFE6   	movff	btemp,postinc1
  4928  0122F0  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4929  0122F6  0E0A               	movlw	10
  4930  0122F8  6EE6               	movwf	postinc1,c
  4931  0122FA  EC95  F0BE         	call	_sprintf	;wreg free
  4932  0122FE                     l15595:
  4933                           
  4934                           ;main.c: 793:     if (((V.g_state == GEM_STATE_REMOTE) && (V.s_state == SEQ_STATE_RX) &&
      +                           !V.queue)) {
  4935  0122FE  0063  F073  FFE8   	movff	_V+2,wreg	;volatile
  4936  012304  0A04               	xorlw	4
  4937  012306  A4D8               	btfss	status,2,c
  4938  012308  D1FB               	goto	l15673
  4939  01230A  0063  F06B  FFE8   	movff	_V,wreg
  4940  012310  0A01               	xorlw	1
  4941  012312  A4D8               	btfss	status,2,c
  4942  012314  D1F5               	goto	l15673
  4943  012316  EE23  F168         	lfsr	2,_V+334	;volatile
  4944  01231A  B8DF               	btfsc	indf2,4,c
  4945  01231C  D1F1               	goto	l15673
  4946                           
  4947                           ;main.c: 794:      if ((V.r_l_state == LINK_STATE_IDLE) && (V.t_l_state == LINK_STATE_ID
      +                          LE)) {
  4948  01231E  EE23  F01F         	lfsr	2,_V+5	;volatile
  4949  012322  50DF               	movf	indf2,w,c
  4950  012324  A4D8               	btfss	status,2,c
  4951  012326  D1EC               	goto	l15673
  4952  012328  EE23  F020         	lfsr	2,_V+6	;volatile
  4953  01232C  50DF               	movf	indf2,w,c
  4954  01232E  A4D8               	btfss	status,2,c
  4955  012330  D1E7               	goto	l15673
  4956                           
  4957                           ;main.c: 795:       if (TimerDone(TMR_HBIO)) {
  4958  012332  0E06               	movlw	6
  4959  012334  6EE6               	movwf	postinc1,c
  4960  012336  ECE1  F0CB         	call	_TimerDone	;wreg free
  4961  01233A  5037               	movf	btemp^0,w,c
  4962  01233C  B4D8               	btfsc	status,2,c
  4963  01233E  D1E0               	goto	l15673
  4964                           
  4965                           ;main.c: 796:        set_display_info(DIS_STR);
  4966  012340  0E00               	movlw	0
  4967  012342  6EE6               	movwf	postinc1,c
  4968  012344  EC39  F0CC         	call	_set_display_info	;wreg free
  4969                           
  4970                           ;main.c: 798:        if (V.stack) {
  4971  012348  EE23  F169         	lfsr	2,_V+335	;volatile
  4972  01234C  50DF               	movf	223,w,c
  4973  01234E  0B07               	andlw	7
  4974  012350  0900               	iorlw	0
  4975  012352  B4D8               	btfsc	status,2,c
  4976  012354  D013               	goto	l15621
  4977                           
  4978                           ;main.c: 799:         hb_message();
  4979  012356  EC3F  F0C7         	call	_hb_message	;wreg free
  4980                           
  4981                           ;main.c: 800:         V.msg_error = MSG_ERROR_NONE;
  4982  01235A  0E00               	movlw	0
  4983  01235C  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
  4984                           
  4985                           ;main.c: 801:         V.ping_count = 0;
  4986  012362  0E00               	movlw	0
  4987  012364  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
  4988                           
  4989                           ;main.c: 802:         V.error = LINK_ERROR_NONE;
  4990  01236A  0E0A               	movlw	10
  4991  01236C  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
  4992                           
  4993                           ;main.c: 803:         V.abort = LINK_ERROR_NONE;
  4994  012372  0E0A               	movlw	10
  4995  012374  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
  4996                           
  4997                           ;main.c: 804:        } else {
  4998  01237A  D1C2               	goto	l15673
  4999  01237C                     l15621:
  5000                           
  5001                           ;main.c: 805:         StartTimer(TMR_HBIO, 30000);
  5002  01237C  0E30               	movlw	48
  5003  01237E  6EE6               	movwf	postinc1,c
  5004  012380  0E75               	movlw	117
  5005  012382  6EE6               	movwf	postinc1,c
  5006  012384  0E06               	movlw	6
  5007  012386  6EE6               	movwf	postinc1,c
  5008  012388  EC12  F0C9         	call	_StartTimer	;wreg free
  5009                           
  5010                           ;main.c: 806:         if (V.ping_count++ > 4) {
  5011  01238C  EE23  F19A         	lfsr	2,_V+384	;volatile
  5012  012390  006F FF7C  F042    	movff	indf2,btemp+11
  5013  012396  0E01               	movlw	1
  5014  012398  26DF               	addwf	indf2,f,c
  5015  01239A  0E04               	movlw	4
  5016  01239C  6442               	cpfsgt	(btemp+11)^0,c
  5017  01239E  D03C               	goto	l15637
  5018                           
  5019                           ;main.c: 807:          set_display_info(DIS_STR);
  5020  0123A0  0E00               	movlw	0
  5021  0123A2  6EE6               	movwf	postinc1,c
  5022  0123A4  EC39  F0CC         	call	_set_display_info	;wreg free
  5023                           
  5024                           ;main.c: 808:          hb_message();
  5025  0123A8  EC3F  F0C7         	call	_hb_message	;wreg free
  5026                           
  5027                           ;main.c: 809:          sprintf(get_vterm_ptr(0, 0), "Ping P%d RTO %d    ", V.g_state, V.
      +                          equip_timeout);
  5028  0123AC  EE23  F161         	lfsr	2,_V+327	;volatile
  5029  0123B0  006F FF78  F041    	movff	postinc2,btemp+10
  5030  0123B6  006F FF74  F042    	movff	postdec2,btemp+11
  5031  0123BC  0060  F107  FFE6   	movff	btemp+10,postinc1
  5032  0123C2  0060  F10B  FFE6   	movff	btemp+11,postinc1
  5033  0123C8  EE23  F01C         	lfsr	2,_V+2	;volatile
  5034  0123CC  50DF               	movf	indf2,w,c
  5035  0123CE  6EE6               	movwf	postinc1,c
  5036  0123D0  0E00               	movlw	0
  5037  0123D2  6EE6               	movwf	postinc1,c
  5038  0123D4  0E71               	movlw	low STR_18
  5039  0123D6  6EE6               	movwf	postinc1,c
  5040  0123D8  0EFE               	movlw	high STR_18
  5041  0123DA  6EE6               	movwf	postinc1,c
  5042  0123DC  0E00               	movlw	0
  5043  0123DE  6EE6               	movwf	postinc1,c
  5044  0123E0  0E00               	movlw	0
  5045  0123E2  6EE6               	movwf	postinc1,c
  5046  0123E4  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  5047  0123E8  0060  F0DF  FFE6   	movff	btemp,postinc1
  5048  0123EE  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  5049  0123F4  0E08               	movlw	8
  5050  0123F6  6EE6               	movwf	postinc1,c
  5051  0123F8  EC95  F0BE         	call	_sprintf	;wreg free
  5052                           
  5053                           ;main.c: 810:          update_lcd(0);
  5054  0123FC  0E00               	movlw	0
  5055  0123FE  6EE6               	movwf	postinc1,c
  5056  012400  EC0D  F0BE         	call	_update_lcd	;wreg free
  5057                           
  5058                           ;main.c: 811:          WaitMs(250);
  5059  012404  0EFA               	movlw	250
  5060  012406  6EE6               	movwf	postinc1,c
  5061  012408  0E00               	movlw	0
  5062  01240A  6EE6               	movwf	postinc1,c
  5063  01240C  EC30  F0C9         	call	_WaitMs	;wreg free
  5064                           
  5065                           ;main.c: 812:          V.ping_count = 0;
  5066  012410  0E00               	movlw	0
  5067  012412  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
  5068  012418                     l15637:
  5069                           
  5070                           ;main.c: 814:         set_display_info(DIS_STR);
  5071  012418  0E00               	movlw	0
  5072  01241A  6EE6               	movwf	postinc1,c
  5073  01241C  EC39  F0CC         	call	_set_display_info	;wreg free
  5074  012420  D16F               	goto	l15673
  5075  012422                     l1298:
  5076                           
  5077                           ;main.c: 824:     V.m_l_state = LINK_STATE_IDLE;
  5078  012422  0E00               	movlw	0
  5079  012424  006F FFA0  FC1E    	movff	wreg,_V+4	;volatile
  5080                           
  5081                           ;main.c: 825:     V.s_state = SEQ_STATE_RX;
  5082  01242A  0E01               	movlw	1
  5083  01242C  006F FFA0  FC1A    	movff	wreg,_V
  5084                           
  5085                           ;main.c: 826:     if (V.debug)
  5086  012432  EE23  F168         	lfsr	2,_V+334	;volatile
  5087  012436  AADF               	btfss	indf2,5,c
  5088  012438  D027               	goto	l15643
  5089                           
  5090                           ;main.c: 827:      sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header254
      +                          ), V.testing);
  5091  01243A  EE23  F149         	lfsr	2,_V+303	;volatile
  5092  01243E  006F FF7B FFE6     	movff	postinc2,postinc1
  5093  012444  006F FF7B FFE6     	movff	postinc2,postinc1
  5094  01244A  006F FF7B FFE6     	movff	postinc2,postinc1
  5095  012450  006F FF7B FFE6     	movff	postinc2,postinc1
  5096  012456  0E01               	movlw	1
  5097  012458  6EE6               	movwf	postinc1,c
  5098  01245A  0E01               	movlw	1
  5099  01245C  6EE6               	movwf	postinc1,c
  5100  01245E  0E0B               	movlw	low STR_16
  5101  012460  6EE6               	movwf	postinc1,c
  5102  012462  0EFE               	movlw	high STR_16
  5103  012464  6EE6               	movwf	postinc1,c
  5104  012466  0E00               	movlw	0
  5105  012468  6EE6               	movwf	postinc1,c
  5106  01246A  0E02               	movlw	2
  5107  01246C  6EE6               	movwf	postinc1,c
  5108  01246E  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  5109  012472  0060  F0DF  FFE6   	movff	btemp,postinc1
  5110  012478  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  5111  01247E  0E0A               	movlw	10
  5112  012480  6EE6               	movwf	postinc1,c
  5113  012482  EC95  F0BE         	call	_sprintf	;wreg free
  5114  012486  D0C5               	goto	l15663
  5115  012488                     l15643:
  5116                           
  5117                           ;main.c: 829:      sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g
      +                          _state, V.timer_error, V.checksum_error);
  5118  012488  EE23  F159         	lfsr	2,_V+319	;volatile
  5119  01248C  006F FF78  F041    	movff	postinc2,btemp+10
  5120  012492  006F FF74  F042    	movff	postdec2,btemp+11
  5121  012498  0060  F107  FFE6   	movff	btemp+10,postinc1
  5122  01249E  0060  F10B  FFE6   	movff	btemp+11,postinc1
  5123  0124A4  EE23  F15B         	lfsr	2,_V+321	;volatile
  5124  0124A8  006F FF78  F041    	movff	postinc2,btemp+10
  5125  0124AE  006F FF74  F042    	movff	postdec2,btemp+11
  5126  0124B4  0060  F107  FFE6   	movff	btemp+10,postinc1
  5127  0124BA  0060  F10B  FFE6   	movff	btemp+11,postinc1
  5128  0124C0  EE23  F01C         	lfsr	2,_V+2	;volatile
  5129  0124C4  50DF               	movf	indf2,w,c
  5130  0124C6  6EE6               	movwf	postinc1,c
  5131  0124C8  0E00               	movlw	0
  5132  0124CA  6EE6               	movwf	postinc1,c
  5133  0124CC  EE23  F197         	lfsr	2,_V+381	;volatile
  5134  0124D0  50DF               	movf	indf2,w,c
  5135  0124D2  6EE6               	movwf	postinc1,c
  5136  0124D4  0E00               	movlw	0
  5137  0124D6  6EE6               	movwf	postinc1,c
  5138  0124D8  0EE3               	movlw	low STR_20
  5139  0124DA  6EE6               	movwf	postinc1,c
  5140  0124DC  0EFC               	movlw	high STR_20
  5141  0124DE  6EE6               	movwf	postinc1,c
  5142  0124E0  0E00               	movlw	0
  5143  0124E2  6EE6               	movwf	postinc1,c
  5144  0124E4  0E02               	movlw	2
  5145  0124E6  6EE6               	movwf	postinc1,c
  5146  0124E8  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  5147  0124EC  0060  F0DF  FFE6   	movff	btemp,postinc1
  5148  0124F2  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  5149  0124F8  0E0C               	movlw	12
  5150  0124FA  6EE6               	movwf	postinc1,c
  5151  0124FC  EC95  F0BE         	call	_sprintf	;wreg free
  5152  012500  D088               	goto	l15663
  5153  012502                     l15645:
  5154                           
  5155                           ;main.c: 843:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  5156  012502  0E1E               	movlw	low (_V+4)
  5157  012504  6EE6               	movwf	postinc1,c
  5158  012506  0E0C               	movlw	high (_V+4)
  5159  012508  6EE6               	movwf	postinc1,c
  5160  01250A  EC6A  F097         	call	_m_protocol	;wreg free
  5161  01250E  0E04               	movlw	4
  5162  012510  1837               	xorwf	btemp^0,w,c
  5163  012512  A4D8               	btfss	status,2,c
  5164  012514  D03B               	goto	l15653
  5165                           
  5166                           ;main.c: 844:      sprintf(V.buf, "S%dF%d #%ld       ", V.stream, V.function, V.ticks);
  5167  012516  EE23  F141         	lfsr	2,_V+295	;volatile
  5168  01251A  006F FF7B FFE6     	movff	postinc2,postinc1
  5169  012520  006F FF7B FFE6     	movff	postinc2,postinc1
  5170  012526  006F FF7B FFE6     	movff	postinc2,postinc1
  5171  01252C  006F FF7B FFE6     	movff	postinc2,postinc1
  5172  012532  EE23  F14E         	lfsr	2,_V+308	;volatile
  5173  012536  50DF               	movf	indf2,w,c
  5174  012538  6EE6               	movwf	postinc1,c
  5175  01253A  0E00               	movlw	0
  5176  01253C  6EE6               	movwf	postinc1,c
  5177  01253E  EE23  F14D         	lfsr	2,_V+307	;volatile
  5178  012542  50DF               	movf	indf2,w,c
  5179  012544  6EE6               	movwf	postinc1,c
  5180  012546  0E00               	movlw	0
  5181  012548  6EE6               	movwf	postinc1,c
  5182  01254A  0EBE               	movlw	low STR_21
  5183  01254C  6EE6               	movwf	postinc1,c
  5184  01254E  0EFE               	movlw	high STR_21
  5185  012550  6EE6               	movwf	postinc1,c
  5186  012552  0E21               	movlw	low (_V+7)
  5187  012554  6EE6               	movwf	postinc1,c
  5188  012556  0E0C               	movlw	high (_V+7)
  5189  012558  6EE6               	movwf	postinc1,c
  5190  01255A  0E0C               	movlw	12
  5191  01255C  6EE6               	movwf	postinc1,c
  5192  01255E  EC95  F0BE         	call	_sprintf	;wreg free
  5193                           
  5194                           ;main.c: 845:      V.buf[13] = 0;
  5195  012562  0E00               	movlw	0
  5196  012564  006F FFA0  FC2E    	movff	wreg,_V+20	;volatile
  5197                           
  5198                           ;main.c: 846:      MyeaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  5199  01256A  0E21               	movlw	low (_V+7)
  5200  01256C  6EE6               	movwf	postinc1,c
  5201  01256E  0E0C               	movlw	high (_V+7)
  5202  012570  6EE6               	movwf	postinc1,c
  5203  012572  0E00               	movlw	0
  5204  012574  6EE6               	movwf	postinc1,c
  5205  012576  0063  F65C  F042   	movff	_V+381,btemp+11	;volatile
  5206  01257C  0442               	decf	(btemp+11)^0,w,c
  5207  01257E  6EE6               	movwf	postinc1,c
  5208  012580  EC1E  F0C0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  5209                           
  5210                           ;main.c: 847:      V.s_state = SEQ_STATE_TRIGGER;
  5211  012584  0E03               	movlw	3
  5212  012586  006F FFA0  FC1A    	movff	wreg,_V
  5213  01258C                     l15653:
  5214                           
  5215                           ;main.c: 849:     if (V.m_l_state == LINK_STATE_ERROR)
  5216  01258C  0063  F07B  FFE8   	movff	_V+4,wreg	;volatile
  5217  012592  0A06               	xorlw	6
  5218  012594  A4D8               	btfss	status,2,c
  5219  012596  D03D               	goto	l15663
  5220                           
  5221                           ;main.c: 850:      V.s_state = SEQ_STATE_ERROR;
  5222  012598  0E06               	movlw	6
  5223  01259A  D01F               	goto	L3
  5224  01259C                     l1305:
  5225                           
  5226                           ;main.c: 853:     V.s_state = SEQ_STATE_DONE;
  5227  01259C  0E05               	movlw	5
  5228  01259E  006F FFA0  FC1A    	movff	wreg,_V
  5229                           
  5230                           ;main.c: 854:     sprintf(V.buf, "OK ");
  5231  0125A4  0EC6               	movlw	low STR_22
  5232  0125A6  6EE6               	movwf	postinc1,c
  5233  0125A8  0EFF               	movlw	high STR_22
  5234  0125AA  6EE6               	movwf	postinc1,c
  5235  0125AC  0E21               	movlw	low (_V+7)
  5236  0125AE  6EE6               	movwf	postinc1,c
  5237  0125B0  0E0C               	movlw	high (_V+7)
  5238  0125B2  6EE6               	movwf	postinc1,c
  5239  0125B4  0E04               	movlw	4
  5240  0125B6  6EE6               	movwf	postinc1,c
  5241  0125B8  EC95  F0BE         	call	_sprintf	;wreg free
  5242                           
  5243                           ;main.c: 855:     MyeaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  5244  0125BC  0E21               	movlw	low (_V+7)
  5245  0125BE  6EE6               	movwf	postinc1,c
  5246  0125C0  0E0C               	movlw	high (_V+7)
  5247  0125C2  6EE6               	movwf	postinc1,c
  5248  0125C4  0E0D               	movlw	13
  5249  0125C6  6EE6               	movwf	postinc1,c
  5250  0125C8  0063  F65C  F042   	movff	_V+381,btemp+11	;volatile
  5251  0125CE  0442               	decf	(btemp+11)^0,w,c
  5252  0125D0  6EE6               	movwf	postinc1,c
  5253  0125D2  EC1E  F0C0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
  5254                           
  5255                           ;main.c: 856:     break;
  5256  0125D6  D01D               	goto	l15663
  5257  0125D8                     l1308:
  5258                           
  5259                           ;main.c: 860:     V.s_state = SEQ_STATE_INIT;
  5260  0125D8  0E00               	movlw	0
  5261  0125DA                     L3:
  5262  0125DA  006F FFA0  FC1A    	movff	wreg,_V
  5263                           
  5264                           ;main.c: 861:     break;
  5265  0125E0  D018               	goto	l15663
  5266  0125E2                     l15661:
  5267  0125E2  EE23  F01A         	lfsr	2,_V
  5268  0125E6  50DF               	movf	indf2,w,c
  5269  0125E8  6E41               	movwf	(btemp+10)^0,c
  5270  0125EA  6A42               	clrf	(btemp+11)^0,c
  5271                           
  5272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5273                           ; Switch size 1, requested type "simple"
  5274                           ; Number of cases is 1, Range of values is 0 to 0
  5275                           ; switch strategies available:
  5276                           ; Name         Instructions Cycles
  5277                           ; simple_byte            4     3 (average)
  5278                           ;	Chosen strategy is simple_byte
  5279  0125EC  5042               	movf	(btemp+11)^0,w,c
  5280  0125EE  0A00               	xorlw	0	; case 0
  5281  0125F0  A4D8               	btfss	status,2,c
  5282  0125F2  D7F2               	goto	l1308
  5283                           
  5284                           ; Switch size 1, requested type "simple"
  5285                           ; Number of cases is 5, Range of values is 0 to 6
  5286                           ; switch strategies available:
  5287                           ; Name         Instructions Cycles
  5288                           ; simple_byte           16     9 (average)
  5289                           ;	Chosen strategy is simple_byte
  5290  0125F4  5041               	movf	(btemp+10)^0,w,c
  5291  0125F6  0A00               	xorlw	0	; case 0
  5292  0125F8  B4D8               	btfsc	status,2,c
  5293  0125FA  D713               	goto	l1298
  5294  0125FC  0A01               	xorlw	1	; case 1
  5295  0125FE  B4D8               	btfsc	status,2,c
  5296  012600  D780               	goto	l15645
  5297  012602  0A02               	xorlw	2	; case 3
  5298  012604  B4D8               	btfsc	status,2,c
  5299  012606  D7CA               	goto	l1305
  5300  012608  0A06               	xorlw	6	; case 5
  5301  01260A  B4D8               	btfsc	status,2,c
  5302  01260C  D7E5               	goto	l1308
  5303  01260E  0A03               	xorlw	3	; case 6
  5304  012610  D7E3               	goto	l1308
  5305  012612                     l15663:
  5306                           
  5307                           ;main.c: 863:    if (V.debug)
  5308  012612  EE23  F168         	lfsr	2,_V+334	;volatile
  5309  012616  AADF               	btfss	indf2,5,c
  5310  012618  D01B               	goto	l15667
  5311                           
  5312                           ;main.c: 864:     sprintf(get_vterm_ptr(2, 0), "Equip type %d       ", V.e_types);
  5313  01261A  EE23  F01D         	lfsr	2,_V+3	;volatile
  5314  01261E  50DF               	movf	indf2,w,c
  5315  012620  6EE6               	movwf	postinc1,c
  5316  012622  0E00               	movlw	0
  5317  012624  6EE6               	movwf	postinc1,c
  5318  012626  0EF6               	movlw	low STR_23
  5319  012628  6EE6               	movwf	postinc1,c
  5320  01262A  0EFD               	movlw	high STR_23
  5321  01262C  6EE6               	movwf	postinc1,c
  5322  01262E  0E00               	movlw	0
  5323  012630  6EE6               	movwf	postinc1,c
  5324  012632  0E02               	movlw	2
  5325  012634  6EE6               	movwf	postinc1,c
  5326  012636  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  5327  01263A  0060  F0DF  FFE6   	movff	btemp,postinc1
  5328  012640  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  5329  012646  0E06               	movlw	6
  5330  012648  6EE6               	movwf	postinc1,c
  5331  01264A  EC95  F0BE         	call	_sprintf	;wreg free
  5332  01264E  D058               	goto	l15673
  5333  012650                     l15667:
  5334                           
  5335                           ;main.c: 866:     sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g_
      +                          state, V.timer_error, V.checksum_error);
  5336  012650  EE23  F159         	lfsr	2,_V+319	;volatile
  5337  012654  006F FF78  F041    	movff	postinc2,btemp+10
  5338  01265A  006F FF74  F042    	movff	postdec2,btemp+11
  5339  012660  0060  F107  FFE6   	movff	btemp+10,postinc1
  5340  012666  0060  F10B  FFE6   	movff	btemp+11,postinc1
  5341  01266C  EE23  F15B         	lfsr	2,_V+321	;volatile
  5342  012670  006F FF78  F041    	movff	postinc2,btemp+10
  5343  012676  006F FF74  F042    	movff	postdec2,btemp+11
  5344  01267C  0060  F107  FFE6   	movff	btemp+10,postinc1
  5345  012682  0060  F10B  FFE6   	movff	btemp+11,postinc1
  5346  012688  EE23  F01C         	lfsr	2,_V+2	;volatile
  5347  01268C  50DF               	movf	indf2,w,c
  5348  01268E  6EE6               	movwf	postinc1,c
  5349  012690  0E00               	movlw	0
  5350  012692  6EE6               	movwf	postinc1,c
  5351  012694  EE23  F197         	lfsr	2,_V+381	;volatile
  5352  012698  50DF               	movf	indf2,w,c
  5353  01269A  6EE6               	movwf	postinc1,c
  5354  01269C  0E00               	movlw	0
  5355  01269E  6EE6               	movwf	postinc1,c
  5356  0126A0  0EE3               	movlw	low STR_20
  5357  0126A2  6EE6               	movwf	postinc1,c
  5358  0126A4  0EFC               	movlw	high STR_20
  5359  0126A6  6EE6               	movwf	postinc1,c
  5360  0126A8  0E00               	movlw	0
  5361  0126AA  6EE6               	movwf	postinc1,c
  5362  0126AC  0E02               	movlw	2
  5363  0126AE  6EE6               	movwf	postinc1,c
  5364  0126B0  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  5365  0126B4  0060  F0DF  FFE6   	movff	btemp,postinc1
  5366  0126BA  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  5367  0126C0  0E0C               	movlw	12
  5368  0126C2  6EE6               	movwf	postinc1,c
  5369  0126C4  EC95  F0BE         	call	_sprintf	;wreg free
  5370  0126C8  D01B               	goto	l15673
  5371  0126CA                     l1312:
  5372                           
  5373                           ;main.c: 870:    V.ui_state = UI_STATE_INIT;
  5374  0126CA  0E00               	movlw	0
  5375  0126CC  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
  5376                           
  5377                           ;main.c: 871:    break;
  5378  0126D2  D016               	goto	l15673
  5379  0126D4                     l15671:
  5380  0126D4  EE23  F01B         	lfsr	2,_V+1	;volatile
  5381  0126D8  50DF               	movf	indf2,w,c
  5382  0126DA  6E41               	movwf	(btemp+10)^0,c
  5383  0126DC  6A42               	clrf	(btemp+11)^0,c
  5384                           
  5385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5386                           ; Switch size 1, requested type "simple"
  5387                           ; Number of cases is 1, Range of values is 0 to 0
  5388                           ; switch strategies available:
  5389                           ; Name         Instructions Cycles
  5390                           ; simple_byte            4     3 (average)
  5391                           ;	Chosen strategy is simple_byte
  5392  0126DE  5042               	movf	(btemp+11)^0,w,c
  5393  0126E0  0A00               	xorlw	0	; case 0
  5394  0126E2  A4D8               	btfss	status,2,c
  5395  0126E4  D7F2               	goto	l1312
  5396                           
  5397                           ; Switch size 1, requested type "simple"
  5398                           ; Number of cases is 4, Range of values is 0 to 4
  5399                           ; switch strategies available:
  5400                           ; Name         Instructions Cycles
  5401                           ; simple_byte           13     7 (average)
  5402                           ;	Chosen strategy is simple_byte
  5403  0126E6  5041               	movf	(btemp+10)^0,w,c
  5404  0126E8  0A00               	xorlw	0	; case 0
  5405  0126EA  B4D8               	btfsc	status,2,c
  5406  0126EC  EF49  F08E         	goto	l15473
  5407  0126F0  0A01               	xorlw	1	; case 1
  5408  0126F2  B4D8               	btfsc	status,2,c
  5409  0126F4  D583               	goto	l15581
  5410  0126F6  0A02               	xorlw	2	; case 3
  5411  0126F8  B4D8               	btfsc	status,2,c
  5412  0126FA  D773               	goto	l15661
  5413  0126FC  0A07               	xorlw	7	; case 4
  5414  0126FE  D7E5               	goto	l1312
  5415  012700                     l15673:
  5416                           
  5417                           ;main.c: 877:   if (mode != UI_STATE_LOG)
  5418                           ;stkvar	_mode @ sp[(-3)+2]
  5419                           
  5420                           ;main.c: 873:   if (V.ticks) {
  5421  012700  0EFF               	movlw	-1
  5422  012702  006F FF8C  F037    	movff	plusw1,btemp
  5423  012708  0E03               	movlw	3
  5424  01270A  1837               	xorwf	btemp^0,w,c
  5425  01270C  B4D8               	btfsc	status,2,c
  5426  01270E  D061               	goto	l15689
  5427                           
  5428                           ;main.c: 878:    if (TimerDone(TMR_DISPLAY)) {
  5429  012710  0E0A               	movlw	10
  5430  012712  6EE6               	movwf	postinc1,c
  5431  012714  ECE1  F0CB         	call	_TimerDone	;wreg free
  5432  012718  5037               	movf	btemp^0,w,c
  5433  01271A  B4D8               	btfsc	status,2,c
  5434  01271C  D05A               	goto	l15689
  5435                           
  5436                           ;main.c: 879:     if (TimerDone(TMR_HELPDIS)) {
  5437  01271E  0E09               	movlw	9
  5438  012720  6EE6               	movwf	postinc1,c
  5439  012722  ECE1  F0CB         	call	_TimerDone	;wreg free
  5440  012726  5037               	movf	btemp^0,w,c
  5441  012728  B4D8               	btfsc	status,2,c
  5442  01272A  D004               	goto	l15683
  5443                           
  5444                           ;main.c: 880:      set_display_info(DIS_STR);
  5445  01272C  0E00               	movlw	0
  5446  01272E  6EE6               	movwf	postinc1,c
  5447  012730  EC39  F0CC         	call	_set_display_info	;wreg free
  5448  012734                     l15683:
  5449                           
  5450                           ;main.c: 882:     sprintf(get_vterm_ptr(1, 0), "R%d %d, T%d %d C%d %d      #", V.r_l_sta
      +                          te, V.failed_receive, V.t_l_state, V.failed_send, V.checksum_error, V.stack);
  5451  012734  EE23  F169         	lfsr	2,_V+335	;volatile
  5452  012738  50DF               	movf	223,w,c
  5453  01273A  0B07               	andlw	7
  5454  01273C  6EE6               	movwf	postinc1,c
  5455  01273E  0E00               	movlw	0
  5456  012740  6EE6               	movwf	postinc1,c
  5457  012742  EE23  F159         	lfsr	2,_V+319	;volatile
  5458  012746  006F FF78  F041    	movff	postinc2,btemp+10
  5459  01274C  006F FF74  F042    	movff	postdec2,btemp+11
  5460  012752  0060  F107  FFE6   	movff	btemp+10,postinc1
  5461  012758  0060  F10B  FFE6   	movff	btemp+11,postinc1
  5462  01275E  EE23  F167         	lfsr	2,_V+333	;volatile
  5463  012762  38DF               	swapf	223,w,c
  5464  012764  0B0F               	andlw	15
  5465  012766  6EE6               	movwf	postinc1,c
  5466  012768  0E00               	movlw	0
  5467  01276A  6EE6               	movwf	postinc1,c
  5468  01276C  EE23  F020         	lfsr	2,_V+6	;volatile
  5469  012770  50DF               	movf	indf2,w,c
  5470  012772  6EE6               	movwf	postinc1,c
  5471  012774  0E00               	movlw	0
  5472  012776  6EE6               	movwf	postinc1,c
  5473  012778  EE23  F168         	lfsr	2,_V+334	;volatile
  5474  01277C  50DF               	movf	223,w,c
  5475  01277E  0B0F               	andlw	15
  5476  012780  6EE6               	movwf	postinc1,c
  5477  012782  0E00               	movlw	0
  5478  012784  6EE6               	movwf	postinc1,c
  5479  012786  EE23  F01F         	lfsr	2,_V+5	;volatile
  5480  01278A  50DF               	movf	indf2,w,c
  5481  01278C  6EE6               	movwf	postinc1,c
  5482  01278E  0E00               	movlw	0
  5483  012790  6EE6               	movwf	postinc1,c
  5484  012792  0E78               	movlw	low STR_25
  5485  012794  6EE6               	movwf	postinc1,c
  5486  012796  0EFC               	movlw	high STR_25
  5487  012798  6EE6               	movwf	postinc1,c
  5488  01279A  0E00               	movlw	0
  5489  01279C  6EE6               	movwf	postinc1,c
  5490  01279E  0E01               	movlw	1
  5491  0127A0  6EE6               	movwf	postinc1,c
  5492  0127A2  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  5493  0127A6  0060  F0DF  FFE6   	movff	btemp,postinc1
  5494  0127AC  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  5495  0127B2  0E10               	movlw	16
  5496  0127B4  6EE6               	movwf	postinc1,c
  5497  0127B6  EC95  F0BE         	call	_sprintf	;wreg free
  5498                           
  5499                           ;main.c: 883:     StartTimer(TMR_DISPLAY, 100);
  5500  0127BA  0E64               	movlw	100
  5501  0127BC  6EE6               	movwf	postinc1,c
  5502  0127BE  0E00               	movlw	0
  5503  0127C0  6EE6               	movwf	postinc1,c
  5504  0127C2  0E0A               	movlw	10
  5505  0127C4  6EE6               	movwf	postinc1,c
  5506  0127C6  EC12  F0C9         	call	_StartTimer	;wreg free
  5507                           
  5508                           ;main.c: 884:     update_lcd(0);
  5509  0127CA  0E00               	movlw	0
  5510  0127CC  6EE6               	movwf	postinc1,c
  5511  0127CE  EC0D  F0BE         	call	_update_lcd	;wreg free
  5512  0127D2                     l15689:
  5513                           
  5514                           ;main.c: 890:   check_help(V.flipper);
  5515  0127D2  EE23  F19C         	lfsr	2,_V+386	;volatile
  5516  0127D6  50DF               	movf	indf2,w,c
  5517  0127D8  6EE6               	movwf	postinc1,c
  5518  0127DA  EC0F  F0B5         	call	_check_help	;wreg free
  5519                           
  5520                           ;main.c: 895:   if (V.set_sequ) {
  5521  0127DE  EE23  F167         	lfsr	2,_V+333	;volatile
  5522  0127E2  A6DF               	btfss	indf2,3,c
  5523  0127E4  D777               	goto	l15671
  5524                           
  5525                           ;main.c: 896:    if (TimerDone(TMR_INFO)) {
  5526  0127E6  0E07               	movlw	7
  5527  0127E8  6EE6               	movwf	postinc1,c
  5528  0127EA  ECE1  F0CB         	call	_TimerDone	;wreg free
  5529  0127EE  5037               	movf	btemp^0,w,c
  5530  0127F0  B4D8               	btfsc	status,2,c
  5531  0127F2  D00C               	goto	l15701
  5532                           
  5533                           ;main.c: 897:     V.set_sequ = 0;
  5534  0127F4  EE23  F167         	lfsr	2,_V+333	;volatile
  5535  0127F8  96DF               	bcf	indf2,3,c
  5536                           
  5537                           ;main.c: 898:     set_vterm(0);
  5538  0127FA  0E00               	movlw	0
  5539  0127FC  6EE6               	movwf	postinc1,c
  5540  0127FE  EC58  F0CC         	call	_set_vterm	;wreg free
  5541                           
  5542                           ;main.c: 899:     update_lcd(0);
  5543  012802  0E00               	movlw	0
  5544  012804  6EE6               	movwf	postinc1,c
  5545  012806  EC0D  F0BE         	call	_update_lcd	;wreg free
  5546                           
  5547                           ;main.c: 900:    } else {
  5548  01280A  D764               	goto	l15671
  5549  01280C                     l15701:
  5550                           
  5551                           ;main.c: 901:     set_vterm(2);
  5552  01280C  0E02               	movlw	2
  5553  01280E  6EE6               	movwf	postinc1,c
  5554  012810  EC58  F0CC         	call	_set_vterm	;wreg free
  5555                           
  5556                           ;main.c: 902:     update_lcd(2);
  5557  012814  0E02               	movlw	2
  5558  012816  6EE6               	movwf	postinc1,c
  5559  012818  EC0D  F0BE         	call	_update_lcd	;wreg free
  5560  01281C  D75B               	goto	l15671
  5561  01281E                     __end_of_main:
  5562                           	opt callstack 0
  5563                           
  5564 ;; *************** function _t_protocol *****************
  5565 ;; Defined at:
  5566 ;;		line 394 in file "gemsecs.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  t_link          2  [STACK] PTR enum E16792
  5569 ;;		 -> V(387), 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  rxData          1  [STACK] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1  [STACK] enum E17052
  5574 ;; Registers used:
  5575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp
      ++7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23
      +, tblptrl, tblptrh, tblptru, prodl, prodh
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/3C
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:   14
  5588 ;; This function calls:
  5589 ;;		_StartTimer
  5590 ;;		_TimerDone
  5591 ;;		_UART1_Read
  5592 ;;		_UART1_Write
  5593 ;;		_UART1_is_rx_ready
  5594 ;;		_UART1_put_buffer
  5595 ;;		_secs_II_message
  5596 ;;		_secs_send
  5597 ;; This function is called by:
  5598 ;;		_main
  5599 ;; This function uses a reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text1
  5603  014A4A                     __ptext1:
  5604                           	opt callstack 0
  5605  014A4A                     _t_protocol:
  5606                           	opt callstack 0
  5607                           
  5608                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5609  014A4A  52E6               	movf	postinc1,f,c
  5610                           
  5611                           ;gemsecs.c: 394: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 395: {;gemsecs.
      +                          c: 396:  uint8_t rxData;;gemsecs.c: 397:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          398:  static response_type block;;gemsecs.c: 400:  switch (*t_link) {
  5612                           
  5613                           ;incstack = 0
  5614  014A4C  D178               	goto	l15143
  5615  014A4E                     l1767:
  5616                           
  5617                           ;gemsecs.c: 403:   V.error = LINK_ERROR_NONE;
  5618  014A4E  0E0A               	movlw	10
  5619  014A50  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
  5620                           
  5621                           ;gemsecs.c: 404:   retry = 3;
  5622  014A56  0E03               	movlw	3
  5623  014A58  6E20               	movwf	t_protocol@retry^0,c
  5624                           
  5625                           ;gemsecs.c: 405:   UART1_Write(0x05);
  5626  014A5A  0E05               	movlw	5
  5627  014A5C  6EE6               	movwf	postinc1,c
  5628  014A5E  EC59  F0C8         	call	_UART1_Write	;wreg free
  5629                           
  5630                           ; BSR set to: 57
  5631                           ;gemsecs.c: 406:   StartTimer(TMR_T2, 3000);
  5632  014A62  0EB8               	movlw	184
  5633  014A64  6EE6               	movwf	postinc1,c
  5634  014A66  0E0B               	movlw	11
  5635  014A68  6EE6               	movwf	postinc1,c
  5636  014A6A  0E02               	movlw	2
  5637  014A6C  6EE6               	movwf	postinc1,c
  5638  014A6E  EC12  F0C9         	call	_StartTimer	;wreg free
  5639                           
  5640                           ;gemsecs.c: 407:   *t_link = LINK_STATE_ENQ;
  5641                           ;stkvar	_t_link @ sp[(-1)+-2]
  5642  014A72  0EFD               	movlw	-3
  5643  014A74  006F FF8F FFD9     	movff	plusw1,fsr2l
  5644  014A7A  0EFE               	movlw	-2
  5645  014A7C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5646  014A82  0E01               	movlw	1
  5647  014A84  D15A               	goto	L7
  5648  014A86                     l15037:
  5649                           
  5650                           ;gemsecs.c: 414:   if (TimerDone(TMR_T2)) {
  5651  014A86  0E02               	movlw	2
  5652  014A88  6EE6               	movwf	postinc1,c
  5653  014A8A  ECE1  F0CB         	call	_TimerDone	;wreg free
  5654  014A8E  5037               	movf	btemp^0,w,c
  5655  014A90  B4D8               	btfsc	status,2,c
  5656  014A92  D030               	goto	l15053
  5657                           
  5658                           ;gemsecs.c: 415:    V.timer_error++;
  5659  014A94  EE23  F15B         	lfsr	2,_V+321	;volatile
  5660  014A98  2ADE               	incf	postinc2,f,c
  5661  014A9A  0E00               	movlw	0
  5662  014A9C  22DD               	addwfc	postdec2,f,c
  5663                           
  5664                           ;gemsecs.c: 416:    V.all_errors++;
  5665  014A9E  EE23  F165         	lfsr	2,_V+331	;volatile
  5666  014AA2  2ADE               	incf	postinc2,f,c
  5667  014AA4  0E00               	movlw	0
  5668  014AA6  22DD               	addwfc	postdec2,f,c
  5669                           
  5670                           ;gemsecs.c: 417:    if (!retry--) {
  5671  014AA8  0620               	decf	t_protocol@retry^0,f,c
  5672  014AAA  2820               	incf	t_protocol@retry^0,w,c
  5673  014AAC  A4D8               	btfss	status,2,c
  5674  014AAE  D019               	goto	l15051
  5675                           
  5676                           ;gemsecs.c: 418:     V.error = LINK_ERROR_T2;
  5677  014AB0  0E0C               	movlw	12
  5678  014AB2  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
  5679                           
  5680                           ;gemsecs.c: 419:     V.all_errors++;
  5681  014AB8  EE23  F165         	lfsr	2,_V+331	;volatile
  5682  014ABC  2ADE               	incf	postinc2,f,c
  5683  014ABE  0E00               	movlw	0
  5684  014AC0  22DD               	addwfc	postdec2,f,c
  5685                           
  5686                           ;gemsecs.c: 420:     V.failed_send = 1;
  5687  014AC2  EE23  F167         	lfsr	2,_V+333	;volatile
  5688  014AC6  50DF               	movf	223,w,c
  5689  014AC8  0B0F               	andlw	-241
  5690  014ACA  0910               	iorlw	16
  5691  014ACC  6EDF               	movwf	223,c
  5692                           
  5693                           ;gemsecs.c: 421:     *t_link = LINK_STATE_NAK;
  5694                           ;stkvar	_t_link @ sp[(-1)+-2]
  5695  014ACE  0EFD               	movlw	-3
  5696  014AD0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5697  014AD6  0EFE               	movlw	-2
  5698  014AD8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5699  014ADE  0E05               	movlw	5
  5700  014AE0  D12C               	goto	L7
  5701  014AE2                     l15051:
  5702                           
  5703                           ;gemsecs.c: 423:     StartTimer(TMR_T2, 3000);
  5704  014AE2  0EB8               	movlw	184
  5705  014AE4  6EE6               	movwf	postinc1,c
  5706  014AE6  0E0B               	movlw	11
  5707  014AE8  6EE6               	movwf	postinc1,c
  5708  014AEA  0E02               	movlw	2
  5709  014AEC  6EE6               	movwf	postinc1,c
  5710  014AEE  EC12  F0C9         	call	_StartTimer	;wreg free
  5711  014AF2  D14A               	goto	l15145
  5712  014AF4                     l15053:
  5713                           
  5714                           ;gemsecs.c: 426:    if (UART1_is_rx_ready()) {
  5715  014AF4  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
  5716  014AF8  5037               	movf	btemp^0,w,c
  5717  014AFA  B4D8               	btfsc	status,2,c
  5718  014AFC  D145               	goto	l15145
  5719                           
  5720                           ;gemsecs.c: 427:     rxData = UART1_Read();
  5721  014AFE  ECD6  F0C8         	call	_UART1_Read	;wreg free
  5722                           
  5723                           ;stkvar	_rxData @ sp[(-1)+0]
  5724  014B02  0EFF               	movlw	-1
  5725  014B04  0060  F0DF  FFE3   	movff	btemp,plusw1
  5726                           
  5727                           ; BSR set to: 57
  5728                           ;gemsecs.c: 428:     if (rxData == 0x04) {
  5729                           ;stkvar	_rxData @ sp[(-1)+0]
  5730  014B0A  0EFF               	movlw	-1
  5731  014B0C  006F FF8C  F037    	movff	plusw1,btemp
  5732  014B12  0E04               	movlw	4
  5733  014B14  1837               	xorwf	btemp^0,w,c
  5734  014B16  A4D8               	btfss	status,2,c
  5735  014B18  D012               	goto	l15063
  5736                           
  5737                           ; BSR set to: 57
  5738                           ;gemsecs.c: 429:      StartTimer(TMR_T3, 5000);
  5739  014B1A  0E88               	movlw	136
  5740  014B1C  6EE6               	movwf	postinc1,c
  5741  014B1E  0E13               	movlw	19
  5742  014B20  6EE6               	movwf	postinc1,c
  5743  014B22  0E03               	movlw	3
  5744  014B24  6EE6               	movwf	postinc1,c
  5745  014B26  EC12  F0C9         	call	_StartTimer	;wreg free
  5746                           
  5747                           ;gemsecs.c: 430:      *t_link = LINK_STATE_EOT;
  5748                           ;stkvar	_t_link @ sp[(-1)+-2]
  5749  014B2A  0EFD               	movlw	-3
  5750  014B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5751  014B32  0EFE               	movlw	-2
  5752  014B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  5753  014B3A  0E02               	movlw	2
  5754  014B3C  6EDF               	movwf	indf2,c
  5755  014B3E                     l15063:
  5756                           
  5757                           ;gemsecs.c: 432:     if (rxData == 0x05) {
  5758                           ;stkvar	_rxData @ sp[(-1)+0]
  5759  014B3E  0EFF               	movlw	-1
  5760  014B40  006F FF8C  F037    	movff	plusw1,btemp
  5761  014B46  0E05               	movlw	5
  5762  014B48  1837               	xorwf	btemp^0,w,c
  5763  014B4A  A4D8               	btfss	status,2,c
  5764  014B4C  D11D               	goto	l15145
  5765                           
  5766                           ;gemsecs.c: 433:      UART1_put_buffer(0x04);
  5767  014B4E  0E04               	movlw	4
  5768  014B50  6EE6               	movwf	postinc1,c
  5769  014B52  EC66  F0CA         	call	_UART1_put_buffer	;wreg free
  5770                           
  5771                           ; BSR set to: 57
  5772                           ;gemsecs.c: 434:      *t_link = LINK_STATE_DONE;
  5773                           ;stkvar	_t_link @ sp[(-1)+-2]
  5774  014B56  0EFD               	movlw	-3
  5775  014B58  006F FF8F FFD9     	movff	plusw1,fsr2l
  5776  014B5E  0EFE               	movlw	-2
  5777  014B60  006F FF8F FFDA     	movff	plusw1,fsr2h
  5778  014B66  0E04               	movlw	4
  5779  014B68  D0E8               	goto	L7
  5780  014B6A                     l15069:
  5781                           
  5782                           ;gemsecs.c: 440:   if (!requeue)
  5783  014B6A  501F               	movf	t_protocol@requeue^0,w,c
  5784  014B6C  A4D8               	btfss	status,2,c
  5785  014B6E  D013               	goto	l15073
  5786                           
  5787                           ;gemsecs.c: 441:    block = secs_II_message(V.stream, V.function);
  5788  014B70  EE23  F14E         	lfsr	2,_V+308	;volatile
  5789  014B74  50DF               	movf	indf2,w,c
  5790  014B76  6EE6               	movwf	postinc1,c
  5791  014B78  EE23  F14D         	lfsr	2,_V+307	;volatile
  5792  014B7C  50DF               	movf	indf2,w,c
  5793  014B7E  6EE6               	movwf	postinc1,c
  5794  014B80  EC0F  F094         	call	_secs_II_message	;wreg free
  5795  014B84  EE20  F093         	lfsr	2,t_protocol@block
  5796  014B88  0E06               	movlw	6
  5797  014B8A                     u11111:
  5798  014B8A  52E5               	movf	postdec1,f,c
  5799  014B8C  006F FF9F FFDB     	movff	indf1,plusw2
  5800  014B92  06E8               	decf	wreg,f,c
  5801  014B94  E2FA               	bc	u11111
  5802  014B96                     l15073:
  5803                           
  5804                           ;gemsecs.c: 443:   if (V.abort == LINK_ERROR_ABORT) {
  5805  014B96  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
  5806  014B9C  0A11               	xorlw	17
  5807  014B9E  A4D8               	btfss	status,2,c
  5808  014BA0  D025               	goto	l15083
  5809                           
  5810                           ;gemsecs.c: 444:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  5811  014BA2  0E01               	movlw	1
  5812  014BA4  6EE6               	movwf	postinc1,c
  5813  014BA6  0E00               	movlw	0
  5814  014BA8  6EE6               	movwf	postinc1,c
  5815  014BAA  0100               	movlb	0	; () banked
  5816  014BAC  5195               	movf	(t_protocol@block+2)& (0+255),w,b
  5817  014BAE  6EE6               	movwf	postinc1,c
  5818  014BB0  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
  5819  014BB6  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
  5820  014BBC  ECB6  F0AC         	call	_secs_send	;wreg free
  5821                           
  5822                           ;gemsecs.c: 445:    V.failed_send = 2;
  5823  014BC0  EE23  F167         	lfsr	2,_V+333	;volatile
  5824  014BC4  50DF               	movf	223,w,c
  5825  014BC6  0B0F               	andlw	-241
  5826  014BC8  0920               	iorlw	32
  5827  014BCA  6EDF               	movwf	223,c
  5828                           
  5829                           ;gemsecs.c: 446:    *t_link = LINK_STATE_ERROR;
  5830                           ;stkvar	_t_link @ sp[(-1)+-2]
  5831  014BCC  0EFD               	movlw	-3
  5832  014BCE  006F FF8F FFD9     	movff	plusw1,fsr2l
  5833  014BD4  0EFE               	movlw	-2
  5834  014BD6  006F FF8F FFDA     	movff	plusw1,fsr2h
  5835  014BDC  0E06               	movlw	6
  5836  014BDE  6EDF               	movwf	indf2,c
  5837                           
  5838                           ;gemsecs.c: 447:    V.all_errors++;
  5839  014BE0  EE23  F165         	lfsr	2,_V+331	;volatile
  5840  014BE4  2ADE               	incf	postinc2,f,c
  5841  014BE6  0E00               	movlw	0
  5842  014BE8  22DD               	addwfc	postdec2,f,c
  5843                           
  5844                           ;gemsecs.c: 448:   } else {
  5845  014BEA  D0CE               	goto	l15145
  5846  014BEC                     l15083:
  5847                           
  5848                           ;gemsecs.c: 449:    if (!requeue) {
  5849  014BEC  501F               	movf	t_protocol@requeue^0,w,c
  5850  014BEE  A4D8               	btfss	status,2,c
  5851  014BF0  D016               	goto	l1781
  5852                           
  5853                           ;gemsecs.c: 450:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  5854  014BF2  0E01               	movlw	1
  5855  014BF4  6EE6               	movwf	postinc1,c
  5856  014BF6  0E00               	movlw	0
  5857  014BF8  6EE6               	movwf	postinc1,c
  5858  014BFA  0100               	movlb	0	; () banked
  5859  014BFC  5195               	movf	(t_protocol@block+2)& (0+255),w,b
  5860  014BFE  6EE6               	movwf	postinc1,c
  5861  014C00  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
  5862  014C06  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
  5863  014C0C  ECB6  F0AC         	call	_secs_send	;wreg free
  5864                           
  5865                           ;gemsecs.c: 451:     if (V.queue)
  5866  014C10  EE23  F168         	lfsr	2,_V+334	;volatile
  5867  014C14  A8DF               	btfss	indf2,4,c
  5868  014C16  D016               	goto	l15095
  5869                           
  5870                           ;gemsecs.c: 452:      requeue = 1;
  5871  014C18  0E01               	movlw	1
  5872  014C1A  6E1F               	movwf	t_protocol@requeue^0,c
  5873  014C1C  D013               	goto	l15095
  5874  014C1E                     l1781:
  5875                           
  5876                           ;gemsecs.c: 454:     requeue = 0;
  5877  014C1E  6A1F               	clrf	t_protocol@requeue^0,c
  5878                           
  5879                           ;gemsecs.c: 455:     V.queue = 0;
  5880  014C20  EE23  F168         	lfsr	2,_V+334	;volatile
  5881  014C24  98DF               	bcf	indf2,4,c
  5882                           
  5883                           ;gemsecs.c: 456:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  5884  014C26  0E01               	movlw	1
  5885  014C28  6EE6               	movwf	postinc1,c
  5886  014C2A  0E00               	movlw	0
  5887  014C2C  6EE6               	movwf	postinc1,c
  5888  014C2E  0100               	movlb	0	; () banked
  5889  014C30  5198               	movf	(t_protocol@block+5)& (0+255),w,b
  5890  014C32  6EE6               	movwf	postinc1,c
  5891  014C34  0060  F25B  FFE6   	movff	t_protocol@block+3,postinc1
  5892  014C3A  0060  F25F  FFE6   	movff	t_protocol@block+4,postinc1
  5893  014C40  ECB6  F0AC         	call	_secs_send	;wreg free
  5894  014C44                     l15095:
  5895                           
  5896                           ;gemsecs.c: 458:    if (V.error == LINK_ERROR_NONE) {
  5897  014C44  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
  5898  014C4A  0A0A               	xorlw	10
  5899  014C4C  A4D8               	btfss	status,2,c
  5900  014C4E  D00A               	goto	l15099
  5901                           
  5902                           ;gemsecs.c: 459:     *t_link = LINK_STATE_ACK;
  5903                           ;stkvar	_t_link @ sp[(-1)+-2]
  5904  014C50  0EFD               	movlw	-3
  5905  014C52  006F FF8F FFD9     	movff	plusw1,fsr2l
  5906  014C58  0EFE               	movlw	-2
  5907  014C5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5908  014C60  0E03               	movlw	3
  5909  014C62  D06B               	goto	L7
  5910  014C64                     l15099:
  5911                           
  5912                           ;gemsecs.c: 461:     V.failed_send = 3;
  5913  014C64  EE23  F167         	lfsr	2,_V+333	;volatile
  5914  014C68  50DF               	movf	223,w,c
  5915  014C6A  0B0F               	andlw	-241
  5916  014C6C  0930               	iorlw	48
  5917  014C6E  D7AD               	goto	L8
  5918  014C70                     l15105:
  5919                           
  5920                           ;gemsecs.c: 475:   if (TimerDone(TMR_T3)) {
  5921  014C70  0E03               	movlw	3
  5922  014C72  6EE6               	movwf	postinc1,c
  5923  014C74  ECE1  F0CB         	call	_TimerDone	;wreg free
  5924  014C78  5037               	movf	btemp^0,w,c
  5925  014C7A  B4D8               	btfsc	status,2,c
  5926  014C7C  D014               	goto	l15115
  5927                           
  5928                           ;gemsecs.c: 476:    V.timer_error++;
  5929  014C7E  EE23  F15B         	lfsr	2,_V+321	;volatile
  5930  014C82  2ADE               	incf	postinc2,f,c
  5931  014C84  0E00               	movlw	0
  5932  014C86  22DD               	addwfc	postdec2,f,c
  5933                           
  5934                           ;gemsecs.c: 477:    V.error = LINK_ERROR_T3;
  5935  014C88  0E0D               	movlw	13
  5936  014C8A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
  5937                           
  5938                           ;gemsecs.c: 478:    V.all_errors++;
  5939  014C90  EE23  F165         	lfsr	2,_V+331	;volatile
  5940  014C94  2ADE               	incf	postinc2,f,c
  5941  014C96  0E00               	movlw	0
  5942  014C98  22DD               	addwfc	postdec2,f,c
  5943                           
  5944                           ;gemsecs.c: 479:    V.failed_send = 4;
  5945  014C9A  EE23  F167         	lfsr	2,_V+333	;volatile
  5946  014C9E  50DF               	movf	223,w,c
  5947  014CA0  0B0F               	andlw	-241
  5948  014CA2  0940               	iorlw	64
  5949  014CA4  D713               	goto	L9
  5950  014CA6                     l15115:
  5951                           
  5952                           ;gemsecs.c: 482:    if (UART1_is_rx_ready()) {
  5953  014CA6  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
  5954  014CAA  5037               	movf	btemp^0,w,c
  5955  014CAC  B4D8               	btfsc	status,2,c
  5956  014CAE  D06C               	goto	l15145
  5957                           
  5958                           ;gemsecs.c: 483:     rxData = UART1_Read();
  5959  014CB0  ECD6  F0C8         	call	_UART1_Read	;wreg free
  5960                           
  5961                           ;stkvar	_rxData @ sp[(-1)+0]
  5962  014CB4  0EFF               	movlw	-1
  5963  014CB6  0060  F0DF  FFE3   	movff	btemp,plusw1
  5964                           
  5965                           ; BSR set to: 57
  5966                           ;gemsecs.c: 484:     if (rxData == 0x06) {
  5967                           ;stkvar	_rxData @ sp[(-1)+0]
  5968  014CBC  0EFF               	movlw	-1
  5969  014CBE  006F FF8C  F037    	movff	plusw1,btemp
  5970  014CC4  0E06               	movlw	6
  5971  014CC6  1837               	xorwf	btemp^0,w,c
  5972  014CC8  A4D8               	btfss	status,2,c
  5973  014CCA  D05E               	goto	l15145
  5974                           
  5975                           ; BSR set to: 57
  5976                           ;gemsecs.c: 485:      V.failed_send = 0;
  5977  014CCC  EE23  F167         	lfsr	2,_V+333	;volatile
  5978  014CD0  0E0F               	movlw	-241
  5979  014CD2  16DF               	andwf	223,f,c
  5980                           
  5981                           ; BSR set to: 57
  5982                           ;gemsecs.c: 486:      *t_link = LINK_STATE_DONE;
  5983                           ;stkvar	_t_link @ sp[(-1)+-2]
  5984  014CD4  0EFD               	movlw	-3
  5985  014CD6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5986  014CDC  0EFE               	movlw	-2
  5987  014CDE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5988  014CE4  0E04               	movlw	4
  5989  014CE6  6EDF               	movwf	indf2,c
  5990  014CE8                     l15125:
  5991                           
  5992                           ;gemsecs.c: 487:      V.abort = LINK_ERROR_NONE;
  5993  014CE8  0E0A               	movlw	10
  5994  014CEA  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
  5995  014CF0  D04B               	goto	l15145
  5996  014CF2                     l15127:
  5997                           
  5998                           ;gemsecs.c: 493:   *t_link = LINK_STATE_ERROR;
  5999                           ;stkvar	_t_link @ sp[(-1)+-2]
  6000  014CF2  0EFD               	movlw	-3
  6001  014CF4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6002  014CFA  0EFE               	movlw	-2
  6003  014CFC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6004  014D02  0E06               	movlw	6
  6005  014D04  6EDF               	movwf	indf2,c
  6006                           
  6007                           ;gemsecs.c: 494:   V.all_errors++;
  6008  014D06  EE23  F165         	lfsr	2,_V+331	;volatile
  6009  014D0A  2ADE               	incf	postinc2,f,c
  6010  014D0C  0E00               	movlw	0
  6011  014D0E  22DD               	addwfc	postdec2,f,c
  6012                           
  6013                           ;gemsecs.c: 495:   while ((uart1RxCount)) {
  6014  014D10  D002               	goto	l15133
  6015  014D12                     l15131:
  6016                           
  6017                           ;gemsecs.c: 496:    UART1_Read();
  6018  014D12  ECD6  F0C8         	call	_UART1_Read	;wreg free
  6019  014D16                     l15133:
  6020                           
  6021                           ;gemsecs.c: 495:   while ((uart1RxCount)) {
  6022  014D16  502A               	movf	_uart1RxCount^0,w,c	;volatile
  6023  014D18  B4D8               	btfsc	status,2,c
  6024  014D1A  D036               	goto	l15145
  6025  014D1C  D7FA               	goto	l15131
  6026  014D1E                     l15135:
  6027                           
  6028                           ;gemsecs.c: 502:   V.failed_send = 0;
  6029  014D1E  EE23  F167         	lfsr	2,_V+333	;volatile
  6030  014D22  0E0F               	movlw	-241
  6031  014D24  16DF               	andwf	223,f,c
  6032  014D26  D7E0               	goto	l15125
  6033  014D28                     l15139:
  6034                           
  6035                           ;gemsecs.c: 506:   *t_link = LINK_STATE_IDLE;
  6036                           ;stkvar	_t_link @ sp[(-1)+-2]
  6037  014D28  0EFD               	movlw	-3
  6038  014D2A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6039  014D30  0EFE               	movlw	-2
  6040  014D32  006F FF8F FFDA     	movff	plusw1,fsr2h
  6041  014D38  0E00               	movlw	0
  6042  014D3A                     L7:
  6043  014D3A  6EDF               	movwf	indf2,c
  6044                           
  6045                           ;gemsecs.c: 507:   break;
  6046  014D3C  D025               	goto	l15145
  6047  014D3E                     l15143:
  6048                           
  6049                           ;stkvar	_t_link @ sp[(-1)+-2]
  6050  014D3E  0EFD               	movlw	-3
  6051  014D40  006F FF8F FFD9     	movff	plusw1,fsr2l
  6052  014D46  0EFE               	movlw	-2
  6053  014D48  006F FF8F FFDA     	movff	plusw1,fsr2h
  6054  014D4E  50DF               	movf	indf2,w,c
  6055  014D50  6E41               	movwf	(btemp+10)^0,c
  6056  014D52  6A42               	clrf	(btemp+11)^0,c
  6057                           
  6058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6059                           ; Switch size 1, requested type "simple"
  6060                           ; Number of cases is 1, Range of values is 0 to 0
  6061                           ; switch strategies available:
  6062                           ; Name         Instructions Cycles
  6063                           ; simple_byte            4     3 (average)
  6064                           ;	Chosen strategy is simple_byte
  6065  014D54  5042               	movf	(btemp+11)^0,w,c
  6066  014D56  0A00               	xorlw	0	; case 0
  6067  014D58  A4D8               	btfss	status,2,c
  6068  014D5A  D7E6               	goto	l15139
  6069                           
  6070                           ; Switch size 1, requested type "simple"
  6071                           ; Number of cases is 7, Range of values is 0 to 6
  6072                           ; switch strategies available:
  6073                           ; Name         Instructions Cycles
  6074                           ; simple_byte           22    12 (average)
  6075                           ;	Chosen strategy is simple_byte
  6076  014D5C  5041               	movf	(btemp+10)^0,w,c
  6077  014D5E  0A00               	xorlw	0	; case 0
  6078  014D60  B4D8               	btfsc	status,2,c
  6079  014D62  D675               	goto	l1767
  6080  014D64  0A01               	xorlw	1	; case 1
  6081  014D66  B4D8               	btfsc	status,2,c
  6082  014D68  D68E               	goto	l15037
  6083  014D6A  0A03               	xorlw	3	; case 2
  6084  014D6C  B4D8               	btfsc	status,2,c
  6085  014D6E  D6FD               	goto	l15069
  6086  014D70  0A01               	xorlw	1	; case 3
  6087  014D72  B4D8               	btfsc	status,2,c
  6088  014D74  D77D               	goto	l15105
  6089  014D76  0A07               	xorlw	7	; case 4
  6090  014D78  B4D8               	btfsc	status,2,c
  6091  014D7A  D7D1               	goto	l15135
  6092  014D7C  0A01               	xorlw	1	; case 5
  6093  014D7E  B4D8               	btfsc	status,2,c
  6094  014D80  D7B8               	goto	l15127
  6095  014D82  0A03               	xorlw	3	; case 6
  6096  014D84  A4D8               	btfss	status,2,c
  6097  014D86  D7D0               	goto	l15139
  6098  014D88                     l15145:
  6099                           
  6100                           ;gemsecs.c: 510:  return *t_link;
  6101                           ;stkvar	_t_link @ sp[(-1)+-2]
  6102  014D88  0EFD               	movlw	-3
  6103  014D8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6104  014D90  0EFE               	movlw	-2
  6105  014D92  006F FF8F FFDA     	movff	plusw1,fsr2h
  6106  014D98  50DF               	movf	indf2,w,c
  6107  014D9A  6E37               	movwf	btemp^0,c
  6108                           
  6109                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  6110  014D9C  52E5               	movf	postdec1,f,c
  6111  014D9E  52E5               	movf	postdec1,f,c
  6112  014DA0  52E5               	movf	postdec1,f,c
  6113  014DA2  0012               	return		;funcret
  6114  014DA4                     __end_of_t_protocol:
  6115                           	opt callstack 0
  6116                           
  6117 ;; *************** function _secs_send *****************
  6118 ;; Defined at:
  6119 ;;		line 514 in file "gemsecs.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  byte_block      2  [STACK] PTR unsigned char 
  6122 ;;		 -> D(332), S(460), H153(312), H33(36), 
  6123 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
  6124 ;;		 -> H12(30), H10(91), 
  6125 ;;  length          1  [STACK] const unsigned char 
  6126 ;;  fake            1  [STACK] const _Bool 
  6127 ;;  s_uart          1  [STACK] const unsigned char 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  k               2  [STACK] PTR unsigned char 
  6130 ;;		 -> D(332), S(460), H153(312), H33(36), 
  6131 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
  6132 ;;		 -> H12(30), H10(91), 
  6133 ;;  checksum        2  [STACK] unsigned short 
  6134 ;;  i               1  [STACK] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1  [STACK] _Bool 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
  6139 ;; Tracked objects:
  6140 ;;		On entry : 3F/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    4
  6151 ;; This function calls:
  6152 ;;		_UART1_Write
  6153 ;;		_UART1_is_tx_ready
  6154 ;;		_UART1_put_buffer
  6155 ;;		_UART2_Write
  6156 ;;		_UART2_is_tx_ready
  6157 ;;		_UART2_put_buffer
  6158 ;;		_block_checksum
  6159 ;; This function is called by:
  6160 ;;		_t_protocol
  6161 ;; This function uses a reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text2
  6165  01596C                     __ptext2:
  6166                           	opt callstack 0
  6167  01596C                     _secs_send:
  6168                           	opt callstack 0
  6169                           
  6170                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6171  01596C  0E05               	movlw	5
  6172  01596E  26E1               	addwf	fsr1l,f,c
  6173  015970  0E00               	movlw	0
  6174  015972  22E2               	addwfc	fsr1h,f,c
  6175                           
  6176                           ;gemsecs.c: 514: static _Bool secs_send(uint8_t *byte_block, const uint8_t length, const
      +                           _Bool fake, const uint8_t s_uart);gemsecs.c: 515: {;gemsecs.c: 516:  uint8_t i, *k;;gem
      +                          secs.c: 517:  uint16_t checksum;;gemsecs.c: 519:  k = (uint8_t *) byte_block;
  6177                           ;stkvar	_byte_block @ sp[(-5)+-2]
  6178                           
  6179                           ;incstack = 0
  6180  015974  0EF9               	movlw	-7
  6181  015976  006F FF8C  F041    	movff	plusw1,btemp+10
  6182  01597C  0EFA               	movlw	-6
  6183  01597E  006F FF8C  F042    	movff	plusw1,btemp+11
  6184                           
  6185                           ;stkvar	_k @ sp[(-5)+0]
  6186  015984  0EFC               	movlw	-4
  6187  015986  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6188  01598C  0EFB               	movlw	-5
  6189  01598E  0060  F107  FFE3   	movff	btemp+10,plusw1
  6190                           
  6191                           ;gemsecs.c: 521:  ++V.ticks;
  6192  015994  EE23  F141         	lfsr	2,_V+295	;volatile
  6193  015998  2ADE               	incf	postinc2,f,c
  6194  01599A  0E00               	movlw	0
  6195  01599C  22DE               	addwfc	postinc2,f,c
  6196  01599E  22DE               	addwfc	postinc2,f,c
  6197  0159A0  22DE               	addwfc	postinc2,f,c
  6198                           
  6199                           ;gemsecs.c: 522:  V.error = LINK_ERROR_NONE;
  6200  0159A2  0E0A               	movlw	10
  6201  0159A4  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
  6202                           
  6203                           ;gemsecs.c: 523:  if ((length - 3) != k[length - 1]) {
  6204                           ;stkvar	_length @ sp[(-5)+-3]
  6205  0159AA  0EF8               	movlw	-8
  6206  0159AC  50E3               	movf	plusw1,w,c
  6207  0159AE  6E41               	movwf	(btemp+10)^0,c
  6208  0159B0  6A42               	clrf	(btemp+11)^0,c
  6209                           
  6210                           ;stkvar	_k @ sp[(-5)+0]
  6211  0159B2  0EFB               	movlw	-5
  6212  0159B4  50E3               	movf	plusw1,w,c
  6213  0159B6  2641               	addwf	(btemp+10)^0,f,c
  6214  0159B8  0EFC               	movlw	-4
  6215  0159BA  50E3               	movf	plusw1,w,c
  6216  0159BC  2242               	addwfc	(btemp+11)^0,f,c
  6217  0159BE  0EFF               	movlw	255
  6218  0159C0  2441               	addwf	(btemp+10)^0,w,c
  6219  0159C2  6ED9               	movwf	fsr2l,c
  6220  0159C4  0EFF               	movlw	255
  6221  0159C6  2042               	addwfc	(btemp+11)^0,w,c
  6222  0159C8  6EDA               	movwf	fsr2h,c
  6223  0159CA  50DF               	movf	indf2,w,c
  6224  0159CC  6E41               	movwf	(btemp+10)^0,c
  6225  0159CE  6A42               	clrf	(btemp+11)^0,c
  6226  0159D0  0EFD               	movlw	253
  6227  0159D2  6E3F               	movwf	(btemp+8)^0,c
  6228  0159D4  0EFF               	movlw	255
  6229  0159D6  6E40               	movwf	(btemp+9)^0,c
  6230                           
  6231                           ;stkvar	_length @ sp[(-5)+-3]
  6232  0159D8  0EF8               	movlw	-8
  6233  0159DA  50E3               	movf	plusw1,w,c
  6234  0159DC  6E3D               	movwf	(btemp+6)^0,c
  6235  0159DE  6A3E               	clrf	(btemp+7)^0,c
  6236  0159E0  503F               	movf	(btemp+8)^0,w,c
  6237  0159E2  263D               	addwf	(btemp+6)^0,f,c
  6238  0159E4  5040               	movf	(btemp+9)^0,w,c
  6239  0159E6  223E               	addwfc	(btemp+7)^0,f,c
  6240  0159E8  5041               	movf	(btemp+10)^0,w,c
  6241  0159EA  183D               	xorwf	(btemp+6)^0,w,c
  6242  0159EC  E104               	bnz	u7430
  6243  0159EE  5042               	movf	(btemp+11)^0,w,c
  6244  0159F0  183E               	xorwf	(btemp+7)^0,w,c
  6245  0159F2  B4D8               	btfsc	status,2,c
  6246  0159F4  D010               	goto	l10973
  6247  0159F6                     u7430:
  6248                           
  6249                           ;gemsecs.c: 524:   V.error = LINK_ERROR_SEND;
  6250  0159F6  0E12               	movlw	18
  6251  0159F8  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
  6252                           
  6253                           ;gemsecs.c: 525:   V.all_errors++;
  6254  0159FE  EE23  F165         	lfsr	2,_V+331	;volatile
  6255  015A02  2ADE               	incf	postinc2,f,c
  6256  015A04  0E00               	movlw	0
  6257  015A06  22DD               	addwfc	postdec2,f,c
  6258                           
  6259                           ;gemsecs.c: 526:   V.failed_send = 1;
  6260  015A08  EE23  F167         	lfsr	2,_V+333	;volatile
  6261  015A0C  50DF               	movf	223,w,c
  6262  015A0E  0B0F               	andlw	-241
  6263  015A10  0910               	iorlw	16
  6264  015A12  6EDF               	movwf	223,c
  6265  015A14  D0EF               	goto	l1802
  6266  015A16                     l10973:
  6267                           
  6268                           ;gemsecs.c: 535:  checksum = block_checksum(&k[2], length - 3);
  6269  015A16  0EFD               	movlw	253
  6270  015A18  6E41               	movwf	(btemp+10)^0,c
  6271  015A1A  0EFF               	movlw	255
  6272  015A1C  6E42               	movwf	(btemp+11)^0,c
  6273                           
  6274                           ;stkvar	_length @ sp[(-5)+-3]
  6275  015A1E  0EF8               	movlw	-8
  6276  015A20  50E3               	movf	plusw1,w,c
  6277  015A22  6E3F               	movwf	(btemp+8)^0,c
  6278  015A24  6A40               	clrf	(btemp+9)^0,c
  6279  015A26  5041               	movf	(btemp+10)^0,w,c
  6280  015A28  263F               	addwf	(btemp+8)^0,f,c
  6281  015A2A  5042               	movf	(btemp+11)^0,w,c
  6282  015A2C  2240               	addwfc	(btemp+9)^0,f,c
  6283  015A2E  0060  F0FF  FFE6   	movff	btemp+8,postinc1
  6284  015A34  0060  F103  FFE6   	movff	btemp+9,postinc1
  6285                           
  6286                           ;stkvar	_k @ sp[(-7)+0]
  6287  015A3A  0EF9               	movlw	-7
  6288  015A3C  50E3               	movf	plusw1,w,c
  6289  015A3E  0F02               	addlw	2
  6290  015A40  6E41               	movwf	(btemp+10)^0,c
  6291  015A42  0EFA               	movlw	-6
  6292  015A44  006F FF8C  F042    	movff	plusw1,btemp+11
  6293  015A4A  0E00               	movlw	0
  6294  015A4C  2242               	addwfc	(btemp+11)^0,f,c
  6295  015A4E  0060  F107  FFE6   	movff	btemp+10,postinc1
  6296  015A54  0060  F10B  FFE6   	movff	btemp+11,postinc1
  6297  015A5A  EC85  F0C1         	call	_block_checksum	;wreg free
  6298                           
  6299                           ;stkvar	_checksum @ sp[(-5)+2]
  6300  015A5E  0EFD               	movlw	-3
  6301  015A60  0060  F0DF  FFE3   	movff	btemp,plusw1
  6302  015A66  0EFE               	movlw	-2
  6303  015A68  0060  F0E3  FFE3   	movff	btemp+1,plusw1
  6304                           
  6305                           ;gemsecs.c: 536:  k[0] = checksum & 0xff;
  6306                           ;stkvar	_checksum @ sp[(-5)+2]
  6307                           ;stkvar	_k @ sp[(-5)+0]
  6308  015A6E  0EFB               	movlw	-5
  6309  015A70  006F FF8F FFD9     	movff	plusw1,fsr2l
  6310  015A76  0EFC               	movlw	-4
  6311  015A78  006F FF8F FFDA     	movff	plusw1,fsr2h
  6312  015A7E  0EFD               	movlw	-3
  6313  015A80  006F FF8F FFDF     	movff	plusw1,indf2
  6314                           
  6315                           ;gemsecs.c: 537:  k[1] = (checksum >> 8)&0xff;
  6316                           ;stkvar	_checksum @ sp[(-5)+2]
  6317  015A86  0EFE               	movlw	254
  6318  015A88  24E1               	addwf	fsr1l,w,c
  6319  015A8A  6ED9               	movwf	fsr2l,c
  6320  015A8C  0EFF               	movlw	255
  6321  015A8E  20E2               	addwfc	fsr1h,w,c
  6322  015A90  6EDA               	movwf	fsr2h,c
  6323                           
  6324                           ;stkvar	_k @ sp[(-5)+0]
  6325  015A92  0EFB               	movlw	-5
  6326  015A94  006F FF8C  F041    	movff	plusw1,btemp+10
  6327  015A9A  0EFC               	movlw	-4
  6328  015A9C  006F FF8C  F042    	movff	plusw1,btemp+11
  6329  015AA2  0E01               	movlw	1
  6330  015AA4  2441               	addwf	(btemp+10)^0,w,c
  6331  015AA6  6EE9               	movwf	fsr0l,c
  6332  015AA8  0E00               	movlw	0
  6333  015AAA  2042               	addwfc	(btemp+11)^0,w,c
  6334  015AAC  6EEA               	movwf	fsr0h,c
  6335  015AAE  006F FF7F FFEF     	movff	indf2,indf0
  6336                           
  6337                           ;gemsecs.c: 538:  V.t_checksum = checksum;
  6338                           ;stkvar	_checksum @ sp[(-5)+2]
  6339  015AB4  50E1               	movf	fsr1l,w,c
  6340  015AB6  0FFD               	addlw	-3
  6341  015AB8  6ED9               	movwf	fsr2l,c
  6342  015ABA  50E2               	movf	fsr1h,w,c
  6343  015ABC  6EDA               	movwf	fsr2h,c
  6344  015ABE  0EFF               	movlw	255
  6345  015AC0  22DA               	addwfc	fsr2h,f,c
  6346  015AC2  006F FF78  FD57    	movff	postinc2,_V+317	;volatile
  6347  015AC8  006F FF74  FD58    	movff	postdec2,_V+318	;volatile
  6348                           
  6349                           ;gemsecs.c: 540:  switch (s_uart) {
  6350  015ACE  D082               	goto	l11019
  6351  015AD0                     l10981:
  6352  015AD0  EC51  F0CD         	call	_UART2_is_tx_ready	;wreg free
  6353  015AD4  0E3F               	movlw	63
  6354  015AD6  6437               	cpfsgt	btemp^0,c
  6355  015AD8  D7FB               	goto	l10981
  6356                           
  6357                           ;gemsecs.c: 543:   for (i = length; i > 0; i--) {
  6358                           ;stkvar	_length @ sp[(-5)+-3]
  6359                           ;stkvar	_i @ sp[(-5)+4]
  6360  015ADA  0EF8               	movlw	-8
  6361  015ADC  006F FF8C  F037    	movff	plusw1,btemp
  6362  015AE2  0EFF               	movlw	-1
  6363  015AE4  0060  F0DF  FFE3   	movff	btemp,plusw1
  6364  015AEA                     l10985:
  6365                           
  6366                           ;stkvar	_i @ sp[(-5)+4]
  6367  015AEA  0EFF               	movlw	-1
  6368  015AEC  50E3               	movf	plusw1,w,c
  6369  015AEE  B4D8               	btfsc	status,2,c
  6370  015AF0  D081               	goto	l1802
  6371                           
  6372                           ;gemsecs.c: 544:    if (fake) {
  6373                           ;stkvar	_fake @ sp[(-5)+-4]
  6374  015AF2  0EF7               	movlw	-9
  6375  015AF4  50E3               	movf	plusw1,w,c
  6376  015AF6  B4D8               	btfsc	status,2,c
  6377  015AF8  D015               	goto	l10993
  6378                           
  6379                           ;gemsecs.c: 545:     UART2_put_buffer(k[i - 1]);
  6380                           ;stkvar	_i @ sp[(-5)+4]
  6381  015AFA  0EFF               	movlw	-1
  6382  015AFC  50E3               	movf	plusw1,w,c
  6383  015AFE  6E41               	movwf	(btemp+10)^0,c
  6384  015B00  6A42               	clrf	(btemp+11)^0,c
  6385                           
  6386                           ;stkvar	_k @ sp[(-5)+0]
  6387  015B02  0EFB               	movlw	-5
  6388  015B04  50E3               	movf	plusw1,w,c
  6389  015B06  2641               	addwf	(btemp+10)^0,f,c
  6390  015B08  0EFC               	movlw	-4
  6391  015B0A  50E3               	movf	plusw1,w,c
  6392  015B0C  2242               	addwfc	(btemp+11)^0,f,c
  6393  015B0E  0EFF               	movlw	255
  6394  015B10  2441               	addwf	(btemp+10)^0,w,c
  6395  015B12  6ED9               	movwf	fsr2l,c
  6396  015B14  0EFF               	movlw	255
  6397  015B16  2042               	addwfc	(btemp+11)^0,w,c
  6398  015B18  6EDA               	movwf	fsr2h,c
  6399  015B1A  50DF               	movf	indf2,w,c
  6400  015B1C  6EE6               	movwf	postinc1,c
  6401  015B1E  EC52  F0CA         	call	_UART2_put_buffer	;wreg free
  6402                           
  6403                           ;gemsecs.c: 546:    } else {
  6404  015B22  D014               	goto	l10995
  6405  015B24                     l10993:
  6406                           
  6407                           ;gemsecs.c: 548:     UART2_Write(k[i - 1]);
  6408                           ;stkvar	_i @ sp[(-5)+4]
  6409  015B24  0EFF               	movlw	-1
  6410  015B26  50E3               	movf	plusw1,w,c
  6411  015B28  6E41               	movwf	(btemp+10)^0,c
  6412  015B2A  6A42               	clrf	(btemp+11)^0,c
  6413                           
  6414                           ;stkvar	_k @ sp[(-5)+0]
  6415  015B2C  0EFB               	movlw	-5
  6416  015B2E  50E3               	movf	plusw1,w,c
  6417  015B30  2641               	addwf	(btemp+10)^0,f,c
  6418  015B32  0EFC               	movlw	-4
  6419  015B34  50E3               	movf	plusw1,w,c
  6420  015B36  2242               	addwfc	(btemp+11)^0,f,c
  6421  015B38  0EFF               	movlw	255
  6422  015B3A  2441               	addwf	(btemp+10)^0,w,c
  6423  015B3C  6ED9               	movwf	fsr2l,c
  6424  015B3E  0EFF               	movlw	255
  6425  015B40  2042               	addwfc	(btemp+11)^0,w,c
  6426  015B42  6EDA               	movwf	fsr2h,c
  6427  015B44  50DF               	movf	indf2,w,c
  6428  015B46  6EE6               	movwf	postinc1,c
  6429  015B48  EC99  F0C8         	call	_UART2_Write	;wreg free
  6430  015B4C                     l10995:
  6431                           
  6432                           ; BSR set to: 57
  6433                           ;gemsecs.c: 550:   }
  6434                           ;stkvar	_i @ sp[(-5)+4]
  6435  015B4C  0EFF               	movlw	-1
  6436  015B4E  06E3               	decf	plusw1,f,c
  6437  015B50  D7CC               	goto	l10985
  6438  015B52                     l10999:
  6439  015B52  EC55  F0CD         	call	_UART1_is_tx_ready	;wreg free
  6440  015B56  0E3F               	movlw	63
  6441  015B58  6437               	cpfsgt	btemp^0,c
  6442  015B5A  D7FB               	goto	l10999
  6443                           
  6444                           ;gemsecs.c: 555:   for (i = length; i > 0; i--) {
  6445                           ;stkvar	_length @ sp[(-5)+-3]
  6446                           ;stkvar	_i @ sp[(-5)+4]
  6447  015B5C  0EF8               	movlw	-8
  6448  015B5E  006F FF8C  F037    	movff	plusw1,btemp
  6449  015B64  0EFF               	movlw	-1
  6450  015B66  0060  F0DF  FFE3   	movff	btemp,plusw1
  6451  015B6C                     l11003:
  6452                           
  6453                           ;stkvar	_i @ sp[(-5)+4]
  6454  015B6C  0EFF               	movlw	-1
  6455  015B6E  50E3               	movf	plusw1,w,c
  6456  015B70  B4D8               	btfsc	status,2,c
  6457  015B72  D040               	goto	l1802
  6458                           
  6459                           ;gemsecs.c: 556:    if (fake) {
  6460                           ;stkvar	_fake @ sp[(-5)+-4]
  6461  015B74  0EF7               	movlw	-9
  6462  015B76  50E3               	movf	plusw1,w,c
  6463  015B78  B4D8               	btfsc	status,2,c
  6464  015B7A  D015               	goto	l11011
  6465                           
  6466                           ;gemsecs.c: 557:     UART1_put_buffer(k[i - 1]);
  6467                           ;stkvar	_i @ sp[(-5)+4]
  6468  015B7C  0EFF               	movlw	-1
  6469  015B7E  50E3               	movf	plusw1,w,c
  6470  015B80  6E41               	movwf	(btemp+10)^0,c
  6471  015B82  6A42               	clrf	(btemp+11)^0,c
  6472                           
  6473                           ;stkvar	_k @ sp[(-5)+0]
  6474  015B84  0EFB               	movlw	-5
  6475  015B86  50E3               	movf	plusw1,w,c
  6476  015B88  2641               	addwf	(btemp+10)^0,f,c
  6477  015B8A  0EFC               	movlw	-4
  6478  015B8C  50E3               	movf	plusw1,w,c
  6479  015B8E  2242               	addwfc	(btemp+11)^0,f,c
  6480  015B90  0EFF               	movlw	255
  6481  015B92  2441               	addwf	(btemp+10)^0,w,c
  6482  015B94  6ED9               	movwf	fsr2l,c
  6483  015B96  0EFF               	movlw	255
  6484  015B98  2042               	addwfc	(btemp+11)^0,w,c
  6485  015B9A  6EDA               	movwf	fsr2h,c
  6486  015B9C  50DF               	movf	indf2,w,c
  6487  015B9E  6EE6               	movwf	postinc1,c
  6488  015BA0  EC66  F0CA         	call	_UART1_put_buffer	;wreg free
  6489                           
  6490                           ;gemsecs.c: 558:    } else {
  6491  015BA4  D014               	goto	l11013
  6492  015BA6                     l11011:
  6493                           
  6494                           ;gemsecs.c: 560:     UART1_Write(k[i - 1]);
  6495                           ;stkvar	_i @ sp[(-5)+4]
  6496  015BA6  0EFF               	movlw	-1
  6497  015BA8  50E3               	movf	plusw1,w,c
  6498  015BAA  6E41               	movwf	(btemp+10)^0,c
  6499  015BAC  6A42               	clrf	(btemp+11)^0,c
  6500                           
  6501                           ;stkvar	_k @ sp[(-5)+0]
  6502  015BAE  0EFB               	movlw	-5
  6503  015BB0  50E3               	movf	plusw1,w,c
  6504  015BB2  2641               	addwf	(btemp+10)^0,f,c
  6505  015BB4  0EFC               	movlw	-4
  6506  015BB6  50E3               	movf	plusw1,w,c
  6507  015BB8  2242               	addwfc	(btemp+11)^0,f,c
  6508  015BBA  0EFF               	movlw	255
  6509  015BBC  2441               	addwf	(btemp+10)^0,w,c
  6510  015BBE  6ED9               	movwf	fsr2l,c
  6511  015BC0  0EFF               	movlw	255
  6512  015BC2  2042               	addwfc	(btemp+11)^0,w,c
  6513  015BC4  6EDA               	movwf	fsr2h,c
  6514  015BC6  50DF               	movf	indf2,w,c
  6515  015BC8  6EE6               	movwf	postinc1,c
  6516  015BCA  EC59  F0C8         	call	_UART1_Write	;wreg free
  6517  015BCE                     l11013:
  6518                           
  6519                           ; BSR set to: 57
  6520                           ;gemsecs.c: 562:   }
  6521                           ;stkvar	_i @ sp[(-5)+4]
  6522  015BCE  0EFF               	movlw	-1
  6523  015BD0  06E3               	decf	plusw1,f,c
  6524  015BD2  D7CC               	goto	l11003
  6525  015BD4                     l11019:
  6526                           
  6527                           ;stkvar	_s_uart @ sp[(-5)+-5]
  6528  015BD4  0EF6               	movlw	-10
  6529  015BD6  50E3               	movf	plusw1,w,c
  6530  015BD8  6E41               	movwf	(btemp+10)^0,c
  6531  015BDA  6A42               	clrf	(btemp+11)^0,c
  6532                           
  6533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6534                           ; Switch size 1, requested type "simple"
  6535                           ; Number of cases is 1, Range of values is 0 to 0
  6536                           ; switch strategies available:
  6537                           ; Name         Instructions Cycles
  6538                           ; simple_byte            4     3 (average)
  6539                           ;	Chosen strategy is simple_byte
  6540  015BDC  5042               	movf	(btemp+11)^0,w,c
  6541  015BDE  0A00               	xorlw	0	; case 0
  6542  015BE0  A4D8               	btfss	status,2,c
  6543  015BE2  D7B7               	goto	l10999
  6544                           
  6545                           ; Switch size 1, requested type "simple"
  6546                           ; Number of cases is 2, Range of values is 1 to 2
  6547                           ; switch strategies available:
  6548                           ; Name         Instructions Cycles
  6549                           ; simple_byte            7     4 (average)
  6550                           ;	Chosen strategy is simple_byte
  6551  015BE4  5041               	movf	(btemp+10)^0,w,c
  6552  015BE6  0A01               	xorlw	1	; case 1
  6553  015BE8  B4D8               	btfsc	status,2,c
  6554  015BEA  D7B3               	goto	l10999
  6555  015BEC  0A03               	xorlw	3	; case 2
  6556  015BEE  B4D8               	btfsc	status,2,c
  6557  015BF0  D76F               	goto	l10981
  6558  015BF2  D7AF               	goto	l10999
  6559  015BF4                     l1802:
  6560                           
  6561                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  6562  015BF4  0EF6               	movlw	246
  6563  015BF6  26E1               	addwf	fsr1l,f,c
  6564  015BF8  0EFF               	movlw	255
  6565  015BFA  22E2               	addwfc	fsr1h,f,c
  6566  015BFC  0012               	return		;funcret
  6567  015BFE                     __end_of_secs_send:
  6568                           	opt callstack 0
  6569                           
  6570 ;; *************** function _block_checksum *****************
  6571 ;; Defined at:
  6572 ;;		line 26 in file "gemsecs.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  byte_block      2  [STACK] PTR unsigned char 
  6575 ;;		 -> D(332), S(460), H153(312), H33(36), 
  6576 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
  6577 ;;		 -> H12(30), H10(91), 
  6578 ;;  byte_count      2  [STACK] const unsigned short 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  i               2  [STACK] unsigned short 
  6581 ;;  sum             2  [STACK] unsigned short 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  2  [STACK] unsigned short 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    3
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_secs_send
  6602 ;; This function uses a reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text3
  6606  01830A                     __ptext3:
  6607                           	opt callstack 0
  6608  01830A                     _block_checksum:
  6609                           	opt callstack 0
  6610                           
  6611                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6612  01830A  52E6               	movf	postinc1,f,c
  6613  01830C  52E6               	movf	postinc1,f,c
  6614  01830E  52E6               	movf	postinc1,f,c
  6615  018310  52E6               	movf	postinc1,f,c
  6616                           
  6617                           ;gemsecs.c: 26: uint16_t block_checksum(uint8_t *byte_block, const uint16_t byte_count);
      +                          gemsecs.c: 27: {;gemsecs.c: 28:  uint16_t sum = 0, i;
  6618                           ;stkvar	_sum @ sp[(-4)+2]
  6619                           
  6620                           ;incstack = 0
  6621  018312  0EFE               	movlw	-2
  6622  018314  6AE3               	clrf	plusw1,c
  6623  018316  0EFF               	movlw	-1
  6624  018318  6AE3               	clrf	plusw1,c
  6625                           
  6626                           ;gemsecs.c: 30:  for (i = 0; i < byte_count; i++) {
  6627                           ;stkvar	_i @ sp[(-4)+0]
  6628  01831A  0EFC               	movlw	-4
  6629  01831C  6AE3               	clrf	plusw1,c
  6630  01831E  0EFD               	movlw	-3
  6631  018320  6AE3               	clrf	plusw1,c
  6632                           
  6633                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6634  018322  0EF8               	movlw	-8
  6635  018324  006F FF8C  F037    	movff	plusw1,btemp
  6636  01832A  0EF9               	movlw	-7
  6637  01832C  50E3               	movf	plusw1,w,c
  6638  01832E  1037               	iorwf	btemp^0,w,c
  6639  018330  B4D8               	btfsc	status,2,c
  6640  018332  D04F               	goto	u6720
  6641  018334                     l9529:
  6642                           
  6643                           ;gemsecs.c: 31:   sum += byte_block[i];
  6644                           ;stkvar	_i @ sp[(-4)+0]
  6645  018334  0EFC               	movlw	-4
  6646  018336  006F FF8C  F041    	movff	plusw1,btemp+10
  6647  01833C  0EFD               	movlw	-3
  6648  01833E  006F FF8C  F042    	movff	plusw1,btemp+11
  6649                           
  6650                           ;stkvar	_byte_block @ sp[(-4)+-2]
  6651  018344  0EFA               	movlw	-6
  6652  018346  006F FF8C  F03F    	movff	plusw1,btemp+8
  6653  01834C  0EFB               	movlw	-5
  6654  01834E  006F FF8C  F040    	movff	plusw1,btemp+9
  6655  018354  5041               	movf	(btemp+10)^0,w,c
  6656  018356  243F               	addwf	(btemp+8)^0,w,c
  6657  018358  6ED9               	movwf	fsr2l,c
  6658  01835A  5042               	movf	(btemp+11)^0,w,c
  6659  01835C  2040               	addwfc	(btemp+9)^0,w,c
  6660  01835E  6EDA               	movwf	fsr2h,c
  6661  018360  50DF               	movf	indf2,w,c
  6662  018362  6E42               	movwf	(btemp+11)^0,c
  6663                           
  6664                           ;stkvar	_sum @ sp[(-4)+2]
  6665  018364  0EFE               	movlw	-2
  6666  018366  50E3               	movf	plusw1,w,c
  6667  018368  2442               	addwf	(btemp+11)^0,w,c
  6668  01836A  6E37               	movwf	btemp^0,c
  6669  01836C  0EFE               	movlw	-2
  6670  01836E  0060  F0DF  FFE3   	movff	btemp,plusw1
  6671  018374  6A37               	clrf	btemp^0,c
  6672  018376  0EFF               	movlw	-1
  6673  018378  50E3               	movf	plusw1,w,c
  6674  01837A  2237               	addwfc	btemp^0,f,c
  6675  01837C  0EFF               	movlw	-1
  6676  01837E  0060  F0DF  FFE3   	movff	btemp,plusw1
  6677                           
  6678                           ;gemsecs.c: 32:  }
  6679                           ;stkvar	_i @ sp[(-4)+0]
  6680  018384  0EFC               	movlw	-4
  6681  018386  50E3               	movf	plusw1,w,c
  6682  018388  0F01               	addlw	1
  6683  01838A  6E37               	movwf	btemp^0,c
  6684  01838C  0EFC               	movlw	-4
  6685  01838E  0060  F0DF  FFE3   	movff	btemp,plusw1
  6686  018394  6A37               	clrf	btemp^0,c
  6687  018396  0EFD               	movlw	-3
  6688  018398  50E3               	movf	plusw1,w,c
  6689  01839A  2037               	addwfc	btemp^0,w,c
  6690  01839C  6E37               	movwf	btemp^0,c
  6691  01839E  0EFD               	movlw	-3
  6692  0183A0  0060  F0DF  FFE3   	movff	btemp,plusw1
  6693                           
  6694                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6695  0183A6  0EF8               	movlw	-8
  6696  0183A8  006F FF8C  F041    	movff	plusw1,btemp+10
  6697  0183AE  0EF9               	movlw	-7
  6698  0183B0  006F FF8C  F042    	movff	plusw1,btemp+11
  6699                           
  6700                           ;stkvar	_i @ sp[(-4)+0]
  6701  0183B6  0EFC               	movlw	-4
  6702  0183B8  006F FF8C  F03F    	movff	plusw1,btemp+8
  6703  0183BE  0EFD               	movlw	-3
  6704  0183C0  006F FF8C  F040    	movff	plusw1,btemp+9
  6705  0183C6  5041               	movf	(btemp+10)^0,w,c
  6706  0183C8  5C3F               	subwf	(btemp+8)^0,w,c
  6707  0183CA  5042               	movf	(btemp+11)^0,w,c
  6708  0183CC  5840               	subwfb	(btemp+9)^0,w,c
  6709  0183CE  A0D8               	btfss	status,0,c
  6710  0183D0  D7B1               	goto	l9529
  6711  0183D2                     u6720:
  6712                           
  6713                           ;gemsecs.c: 37:  return sum;
  6714                           ;stkvar	_sum @ sp[(-4)+2]
  6715  0183D2  0EFE               	movlw	-2
  6716  0183D4  006F FF8C  F037    	movff	plusw1,btemp
  6717  0183DA  0EFF               	movlw	-1
  6718  0183DC  006F FF8C  F038    	movff	plusw1,btemp+1
  6719                           
  6720                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6721  0183E2  0EF8               	movlw	248
  6722  0183E4  26E1               	addwf	fsr1l,f,c
  6723  0183E6  0EFF               	movlw	255
  6724  0183E8  22E2               	addwfc	fsr1h,f,c
  6725  0183EA  0012               	return		;funcret
  6726  0183EC                     __end_of_block_checksum:
  6727                           	opt callstack 0
  6728                           
  6729 ;; *************** function _UART2_put_buffer *****************
  6730 ;; Defined at:
  6731 ;;		line 257 in file "mcc_generated_files/uart2.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  bufData         1  [STACK] unsigned char 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1  [STACK] void 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 3F/39
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    3
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_secs_send
  6756 ;; This function uses a reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text4
  6760  0194A4                     __ptext4:
  6761                           	opt callstack 0
  6762  0194A4                     _UART2_put_buffer:
  6763                           	opt callstack 25
  6764                           
  6765                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  6766                           
  6767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6768                           ;incstack = 0
  6769  0194A4  0139               	movlb	57	; () banked
  6770  0194A6  9596               	bcf	150,2,b	;volatile
  6771                           
  6772                           ; BSR set to: 57
  6773                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  6774                           ;stkvar	_bufData @ sp[(0)+-1]
  6775  0194A8  0E00               	movlw	low _uart2RxBuffer
  6776  0194AA  2426               	addwf	_uart2RxHead^0,w,c	;volatile
  6777  0194AC  6ED9               	movwf	fsr2l,c
  6778  0194AE  6ADA               	clrf	fsr2h,c
  6779  0194B0  0E05               	movlw	high _uart2RxBuffer
  6780  0194B2  22DA               	addwfc	fsr2h,f,c
  6781  0194B4  0EFF               	movlw	-1
  6782  0194B6  006F FF8F FFDF     	movff	plusw1,indf2
  6783                           
  6784                           ; BSR set to: 57
  6785  0194BC  2A26               	incf	_uart2RxHead^0,f,c	;volatile
  6786                           
  6787                           ; BSR set to: 57
  6788                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  6789  0194BE  2826               	incf	_uart2RxHead^0,w,c
  6790  0194C0  B4D8               	btfsc	status,2,c
  6791                           
  6792                           ; BSR set to: 57
  6793                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  6794  0194C2  6A26               	clrf	_uart2RxHead^0,c	;volatile
  6795                           
  6796                           ; BSR set to: 57
  6797                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  6798  0194C4  2A24               	incf	_uart2RxCount^0,f,c	;volatile
  6799                           
  6800                           ; BSR set to: 57
  6801                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  6802  0194C6  8596               	bsf	150,2,b	;volatile
  6803                           
  6804                           ; BSR set to: 57
  6805                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6806  0194C8  52E5               	movf	postdec1,f,c
  6807  0194CA  0012               	return		;funcret
  6808  0194CC                     __end_of_UART2_put_buffer:
  6809                           	opt callstack 0
  6810                           
  6811 ;; *************** function _UART2_is_tx_ready *****************
  6812 ;; Defined at:
  6813 ;;		line 142 in file "mcc_generated_files/uart2.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1  [STACK] unsigned char 
  6820 ;; Registers used:
  6821 ;;		btemp
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    3
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_secs_send
  6838 ;; This function uses a reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text5
  6842  019AA2                     __ptext5:
  6843                           	opt callstack 0
  6844  019AA2                     _UART2_is_tx_ready:
  6845                           	opt callstack 25
  6846                           
  6847                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  6848                           
  6849                           ; BSR set to: 57
  6850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6851                           ;incstack = 0
  6852  019AA2  0060  F09C  F037   	movff	_uart2TxBufferRemaining,btemp	;volatile
  6853                           
  6854                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6855  019AA8  0012               	return		;funcret
  6856  019AAA                     __end_of_UART2_is_tx_ready:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function _UART2_Write *****************
  6860 ;; Defined at:
  6861 ;;		line 172 in file "mcc_generated_files/uart2.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  txData          1  [STACK] unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1  [STACK] void 
  6868 ;; Registers used:
  6869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 3F/39
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;Total ram usage:        0 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    3
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_secs_send
  6886 ;; This function uses a reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text6
  6890  019132                     __ptext6:
  6891                           	opt callstack 0
  6892  019132                     _UART2_Write:
  6893                           	opt callstack 25
  6894                           
  6895                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6896                           
  6897                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6898                           
  6899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6900                           ;incstack = 0
  6901  019132  5027               	movf	_uart2TxBufferRemaining^0,w,c	;volatile
  6902  019134  B4D8               	btfsc	status,2,c
  6903  019136  D7FD               	goto	_UART2_Write
  6904                           
  6905                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  6906  019138  0139               	movlb	57	; () banked
  6907  01913A  B796               	btfsc	150,3,b	;volatile
  6908  01913C  D005               	goto	l672
  6909                           
  6910                           ; BSR set to: 57
  6911                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  6912                           ;stkvar	_txData @ sp[(0)+-1]
  6913  01913E  0EFF               	movlw	-1
  6914  019140  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  6915                           
  6916                           ;mcc_generated_files/uart2.c: 181:     }
  6917  019146  D011               	goto	l9477
  6918  019148                     l672:
  6919                           
  6920                           ; BSR set to: 57
  6921                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  6922  019148  9796               	bcf	150,3,b	;volatile
  6923                           
  6924                           ; BSR set to: 57
  6925                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  6926                           ;stkvar	_txData @ sp[(0)+-1]
  6927  01914A  0E00               	movlw	low _uart2TxBuffer
  6928  01914C  2429               	addwf	_uart2TxHead^0,w,c	;volatile
  6929  01914E  6ED9               	movwf	fsr2l,c
  6930  019150  6ADA               	clrf	fsr2h,c
  6931  019152  0E02               	movlw	high _uart2TxBuffer
  6932  019154  22DA               	addwfc	fsr2h,f,c
  6933  019156  0EFF               	movlw	-1
  6934  019158  006F FF8F FFDF     	movff	plusw1,indf2
  6935                           
  6936                           ; BSR set to: 57
  6937  01915E  2A29               	incf	_uart2TxHead^0,f,c	;volatile
  6938                           
  6939                           ; BSR set to: 57
  6940                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  6941  019160  0E3F               	movlw	63
  6942  019162  6429               	cpfsgt	_uart2TxHead^0,c
  6943  019164  D001               	goto	l9475
  6944                           
  6945                           ; BSR set to: 57
  6946                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  6947  019166  6A29               	clrf	_uart2TxHead^0,c	;volatile
  6948  019168                     l9475:
  6949                           
  6950                           ; BSR set to: 57
  6951                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  6952  019168  0627               	decf	_uart2TxBufferRemaining^0,f,c	;volatile
  6953  01916A                     l9477:
  6954                           
  6955                           ; BSR set to: 57
  6956                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  6957  01916A  8796               	bsf	150,3,b	;volatile
  6958                           
  6959                           ; BSR set to: 57
  6960                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6961  01916C  52E5               	movf	postdec1,f,c
  6962  01916E  0012               	return		;funcret
  6963  019170                     __end_of_UART2_Write:
  6964                           	opt callstack 0
  6965                           
  6966 ;; *************** function _UART1_put_buffer *****************
  6967 ;; Defined at:
  6968 ;;		line 253 in file "mcc_generated_files/uart1.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  bufData         1  [STACK] unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1  [STACK] void 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/39
  6979 ;;		On exit  : 3F/39
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    3
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_t_protocol
  6993 ;;		_secs_send
  6994 ;; This function uses a reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text7
  6998  0194CC                     __ptext7:
  6999                           	opt callstack 0
  7000  0194CC                     _UART1_put_buffer:
  7001                           	opt callstack 25
  7002                           
  7003                           ;mcc_generated_files/uart1.c: 253: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 254: {;mcc_generated_files/uart1.c: 255:  PIE3bits.U1RXIE = 0;
  7004                           
  7005                           ; BSR set to: 57
  7006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7007                           ;incstack = 0
  7008  0194CC  0139               	movlb	57	; () banked
  7009  0194CE  9793               	bcf	147,3,b	;volatile
  7010                           
  7011                           ; BSR set to: 57
  7012                           ;mcc_generated_files/uart1.c: 256:  uart1RxBuffer[uart1RxHead++] = bufData;
  7013                           ;stkvar	_bufData @ sp[(0)+-1]
  7014  0194D0  0E00               	movlw	low _uart1RxBuffer
  7015  0194D2  242C               	addwf	_uart1RxHead^0,w,c	;volatile
  7016  0194D4  6ED9               	movwf	fsr2l,c
  7017  0194D6  6ADA               	clrf	fsr2h,c
  7018  0194D8  0E04               	movlw	high _uart1RxBuffer
  7019  0194DA  22DA               	addwfc	fsr2h,f,c
  7020  0194DC  0EFF               	movlw	-1
  7021  0194DE  006F FF8F FFDF     	movff	plusw1,indf2
  7022                           
  7023                           ; BSR set to: 57
  7024  0194E4  2A2C               	incf	_uart1RxHead^0,f,c	;volatile
  7025                           
  7026                           ; BSR set to: 57
  7027                           ;mcc_generated_files/uart1.c: 257:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  7028  0194E6  282C               	incf	_uart1RxHead^0,w,c
  7029  0194E8  B4D8               	btfsc	status,2,c
  7030                           
  7031                           ; BSR set to: 57
  7032                           ;mcc_generated_files/uart1.c: 258:   uart1RxHead = 0;
  7033  0194EA  6A2C               	clrf	_uart1RxHead^0,c	;volatile
  7034                           
  7035                           ; BSR set to: 57
  7036                           ;mcc_generated_files/uart1.c: 261:  uart1RxCount++;
  7037  0194EC  2A2A               	incf	_uart1RxCount^0,f,c	;volatile
  7038                           
  7039                           ; BSR set to: 57
  7040                           ;mcc_generated_files/uart1.c: 262:  PIE3bits.U1RXIE = 1;
  7041  0194EE  8793               	bsf	147,3,b	;volatile
  7042                           
  7043                           ; BSR set to: 57
  7044                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7045  0194F0  52E5               	movf	postdec1,f,c
  7046  0194F2  0012               	return		;funcret
  7047  0194F4                     __end_of_UART1_put_buffer:
  7048                           	opt callstack 0
  7049                           
  7050 ;; *************** function _UART1_is_tx_ready *****************
  7051 ;; Defined at:
  7052 ;;		line 152 in file "mcc_generated_files/uart1.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1  [STACK] unsigned char 
  7059 ;; Registers used:
  7060 ;;		btemp
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    3
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_secs_send
  7077 ;; This function uses a reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text8
  7081  019AAA                     __ptext8:
  7082                           	opt callstack 0
  7083  019AAA                     _UART1_is_tx_ready:
  7084                           	opt callstack 25
  7085                           
  7086                           ;mcc_generated_files/uart1.c: 154:  return uart1TxBufferRemaining;
  7087                           
  7088                           ; BSR set to: 57
  7089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7090                           ;incstack = 0
  7091  019AAA  0060  F0B4  F037   	movff	_uart1TxBufferRemaining,btemp	;volatile
  7092                           
  7093                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7094  019AB0  0012               	return		;funcret
  7095  019AB2                     __end_of_UART1_is_tx_ready:
  7096                           	opt callstack 0
  7097                           
  7098 ;; *************** function _secs_II_message *****************
  7099 ;; Defined at:
  7100 ;;		line 921 in file "gemsecs.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  stream          1  [STACK] const unsigned char 
  7103 ;;  function        1  [STACK] const unsigned char 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  ceid            4  [STACK] unsigned long 
  7106 ;;  i               2  [STACK] unsigned short 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  7  [STACK] struct response_type
  7109 ;; Registers used:
  7110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp
      ++7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23
      +, tblptrl, tblptrh, tblptru, prodl, prodh
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/3C
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7120 ;;Total ram usage:        0 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:   13
  7123 ;; This function calls:
  7124 ;;		_DATAEE_WriteByte
  7125 ;;		_StartTimer
  7126 ;;		_TimerDone
  7127 ;;		_display_info
  7128 ;;		_format_display_text
  7129 ;;		_gem_messages
  7130 ;;		_parse_sid
  7131 ;;		_s10f1_opcmd
  7132 ;;		_s6f11_opcmd
  7133 ;;		_sequence_messages
  7134 ;;		_set_display_info
  7135 ;;		_set_temp_display_help
  7136 ;;		_terminal_format
  7137 ;;		_vterm_sequence
  7138 ;; This function is called by:
  7139 ;;		_t_protocol
  7140 ;; This function uses a reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text9
  7144  01281E                     __ptext9:
  7145                           	opt callstack 0
  7146  01281E                     _secs_II_message:
  7147                           	opt callstack 0
  7148                           
  7149                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  7150  01281E  0E0B               	movlw	11
  7151  012820  26E1               	addwf	fsr1l,f,c
  7152  012822  0E00               	movlw	0
  7153  012824  22E2               	addwfc	fsr1h,f,c
  7154                           
  7155                           ;gemsecs.c: 921: response_type secs_II_message(const uint8_t stream, const uint8_t funct
      +                          ion);gemsecs.c: 922: {;gemsecs.c: 923:  static response_type block;;gemsecs.c: 924:  uin
      +                          t16_t i = 0;
  7156                           ;stkvar	_i @ sp[(-6)+4]
  7157                           
  7158                           ;incstack = 0
  7159  012826  0EFE               	movlw	-2
  7160  012828  6AE3               	clrf	plusw1,c
  7161  01282A  0EFF               	movlw	-1
  7162  01282C  6AE3               	clrf	plusw1,c
  7163                           
  7164                           ;gemsecs.c: 926:  V.abort = LINK_ERROR_NONE;
  7165  01282E  0E0A               	movlw	10
  7166  012830  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
  7167                           
  7168                           ;gemsecs.c: 927:  V.queue = 0;
  7169  012836  EE23  F168         	lfsr	2,_V+334	;volatile
  7170  01283A  98DF               	bcf	indf2,4,c
  7171                           
  7172                           ;gemsecs.c: 928:  block.respond = 0;
  7173  01283C  9036               	bcf	(secs_II_message@block+6)^0,0,c
  7174                           
  7175                           ;gemsecs.c: 930:  if (TimerDone(TMR_HBIO)) {
  7176  01283E  0E06               	movlw	6
  7177  012840  6EE6               	movwf	postinc1,c
  7178  012842  ECE1  F0CB         	call	_TimerDone	;wreg free
  7179  012846  5037               	movf	btemp^0,w,c
  7180  012848  B4D8               	btfsc	status,2,c
  7181  01284A  D323               	goto	l14721
  7182                           
  7183                           ;gemsecs.c: 931:   if (V.stack) {
  7184  01284C  EE23  F169         	lfsr	2,_V+335	;volatile
  7185  012850  50DF               	movf	223,w,c
  7186  012852  0B07               	andlw	7
  7187  012854  0900               	iorlw	0
  7188  012856  B4D8               	btfsc	status,2,c
  7189  012858  D02F               	goto	l14415
  7190                           
  7191                           ;gemsecs.c: 932:    gem_messages(&block, V.sid);
  7192  01285A  EE23  F199         	lfsr	2,_V+383	;volatile
  7193  01285E  50DF               	movf	indf2,w,c
  7194  012860  6EE6               	movwf	postinc1,c
  7195  012862  0E30               	movlw	secs_II_message@block& (0+255)
  7196  012864  6EE6               	movwf	postinc1,c
  7197  012866  EC25  F0B8         	call	_gem_messages	;wreg free
  7198                           
  7199                           ;gemsecs.c: 933:    if (V.sid >= 10) {
  7200  01286A  EE23  F199         	lfsr	2,_V+383	;volatile
  7201  01286E  0E09               	movlw	9
  7202  012870  64DF               	cpfsgt	indf2,c
  7203  012872  D005               	goto	l14403
  7204                           
  7205                           ;gemsecs.c: 934:     set_display_info(DIS_SEQUENCE_M);
  7206  012874  0E08               	movlw	8
  7207  012876  6EE6               	movwf	postinc1,c
  7208  012878  EC39  F0CC         	call	_set_display_info	;wreg free
  7209                           
  7210                           ;gemsecs.c: 935:    } else {
  7211  01287C  D004               	goto	l14405
  7212  01287E                     l14403:
  7213                           
  7214                           ;gemsecs.c: 936:     set_display_info(DIS_SEQUENCE);
  7215  01287E  0E07               	movlw	7
  7216  012880  6EE6               	movwf	postinc1,c
  7217  012882  EC39  F0CC         	call	_set_display_info	;wreg free
  7218  012886                     l14405:
  7219                           
  7220                           ;gemsecs.c: 938:    vterm_sequence();
  7221  012886  ECC5  F09A         	call	_vterm_sequence	;wreg free
  7222                           
  7223                           ;gemsecs.c: 939:    StartTimer(TMR_INFO, 3000);
  7224  01288A  0EB8               	movlw	184
  7225  01288C  6EE6               	movwf	postinc1,c
  7226  01288E  0E0B               	movlw	11
  7227  012890  6EE6               	movwf	postinc1,c
  7228  012892  0E07               	movlw	7
  7229  012894  6EE6               	movwf	postinc1,c
  7230  012896  EC12  F0C9         	call	_StartTimer	;wreg free
  7231                           
  7232                           ;gemsecs.c: 940:    V.set_sequ = 1;
  7233  01289A  EE23  F167         	lfsr	2,_V+333	;volatile
  7234  01289E  86DF               	bsf	indf2,3,c
  7235  0128A0                     l14411:
  7236                           
  7237                           ;gemsecs.c: 941:    return(block);
  7238  0128A0  EE20  F030         	lfsr	2,secs_II_message@block
  7239                           
  7240                           ;stkvar	?_secs_II_message @ sp[(-6)+-7]
  7241  0128A4  0E07               	movlw	7
  7242  0128A6  6E37               	movwf	btemp^0,c
  7243  0128A8  0EF3               	movlw	-13
  7244  0128AA                     us1070999:
  7245  0128AA  006F FF7B FFE3     	movff	postinc2,plusw1
  7246  0128B0  28E8               	incf	wreg,w,c
  7247  0128B2  2E37               	decfsz	btemp^0,f,c
  7248  0128B4  D7FA               	bra	us1070999
  7249  0128B6  D309               	goto	l1961
  7250  0128B8                     l14415:
  7251                           
  7252                           ;gemsecs.c: 943:   StartTimer(TMR_HBIO, 5000);
  7253  0128B8  0E88               	movlw	136
  7254  0128BA  6EE6               	movwf	postinc1,c
  7255  0128BC  0E13               	movlw	19
  7256  0128BE  6EE6               	movwf	postinc1,c
  7257  0128C0  0E06               	movlw	6
  7258  0128C2  6EE6               	movwf	postinc1,c
  7259  0128C4  EC12  F0C9         	call	_StartTimer	;wreg free
  7260  0128C8  D2E4               	goto	l14721
  7261  0128CA                     l14417:
  7262                           
  7263                           ;gemsecs.c: 950:    block.header = (uint8_t*) & H12[0];
  7264  0128CA  0E9B               	movlw	low _H12
  7265  0128CC  6E30               	movwf	secs_II_message@block^0,c
  7266  0128CE  0E01               	movlw	high _H12
  7267  0128D0  6E31               	movwf	(secs_II_message@block+1)^0,c
  7268                           
  7269                           ;gemsecs.c: 951:    block.length = sizeof(header12);
  7270  0128D2  0E0F               	movlw	15
  7271  0128D4  6E32               	movwf	(secs_II_message@block+2)^0,c
  7272                           
  7273                           ;gemsecs.c: 952:    H12[0].block.block.systemb = V.systemb;
  7274  0128D6  CD45  F19F         	movff	_V+299,_H12+4	;volatile
  7275  0128DA  CD46  F1A0         	movff	_V+300,_H12+5	;volatile
  7276  0128DE  CD47  F1A1         	movff	_V+301,_H12+6	;volatile
  7277  0128E2  CD48  F1A2         	movff	_V+302,_H12+7	;volatile
  7278                           
  7279                           ;gemsecs.c: 953:    H10[0].block.block.systemb = V.ticks;
  7280  0128E6  CD41  F102         	movff	_V+295,_H10+2	;volatile
  7281  0128EA  CD42  F103         	movff	_V+296,_H10+3	;volatile
  7282  0128EE  CD43  F104         	movff	_V+297,_H10+4	;volatile
  7283  0128F2  CD44  F105         	movff	_V+298,_H10+5	;volatile
  7284                           
  7285                           ;gemsecs.c: 954:    block.respond = 1;
  7286  0128F6  8036               	bsf	(secs_II_message@block+6)^0,0,c
  7287                           
  7288                           ;gemsecs.c: 955:    block.reply = (uint8_t*) & H10[0];
  7289  0128F8  0E00               	movlw	low _H10
  7290  0128FA  6E33               	movwf	(secs_II_message@block+3)^0,c
  7291  0128FC  0E01               	movlw	high _H10
  7292  0128FE  6E34               	movwf	(secs_II_message@block+4)^0,c
  7293                           
  7294                           ;gemsecs.c: 956:    block.reply_length = sizeof(header10);
  7295  012900  0E0D               	movlw	13
  7296  012902  6E35               	movwf	(secs_II_message@block+5)^0,c
  7297                           
  7298                           ;gemsecs.c: 957:    V.queue = 1;
  7299  012904  EE23  F168         	lfsr	2,_V+334	;volatile
  7300  012908  88DF               	bsf	indf2,4,c
  7301                           
  7302                           ;gemsecs.c: 958:    break;
  7303  01290A  D7CA               	goto	l14411
  7304  01290C                     l14431:
  7305                           
  7306                           ;gemsecs.c: 960:    block.header = (uint8_t*) & H10[0];
  7307  01290C  0E00               	movlw	low _H10
  7308  01290E  6E30               	movwf	secs_II_message@block^0,c
  7309  012910  0E01               	movlw	high _H10
  7310  012912  6E31               	movwf	(secs_II_message@block+1)^0,c
  7311                           
  7312                           ;gemsecs.c: 961:    block.length = sizeof(header10);
  7313  012914  0E0D               	movlw	13
  7314  012916  6E32               	movwf	(secs_II_message@block+2)^0,c
  7315                           
  7316                           ;gemsecs.c: 962:    H10[0].block.block.systemb = V.systemb;
  7317  012918  CD45  F102         	movff	_V+299,_H10+2	;volatile
  7318  01291C  CD46  F103         	movff	_V+300,_H10+3	;volatile
  7319  012920  CD47  F104         	movff	_V+301,_H10+4	;volatile
  7320  012924  CD48  F105         	movff	_V+302,_H10+5	;volatile
  7321                           
  7322                           ;gemsecs.c: 963:    break;
  7323  012928  D7BB               	goto	l14411
  7324  01292A                     l14437:
  7325                           
  7326                           ;gemsecs.c: 965:    block.header = (uint8_t*) & H14[0];
  7327  01292A  0ECD               	movlw	low _H14
  7328  01292C  6E30               	movwf	secs_II_message@block^0,c
  7329  01292E  0E01               	movlw	high _H14
  7330  012930  6E31               	movwf	(secs_II_message@block+1)^0,c
  7331                           
  7332                           ;gemsecs.c: 966:    block.length = sizeof(header14);
  7333  012932  0E11               	movlw	17
  7334  012934  6E32               	movwf	(secs_II_message@block+2)^0,c
  7335                           
  7336                           ;gemsecs.c: 967:    H14[0].block.block.systemb = V.systemb;
  7337  012936  CD45  F1D3         	movff	_V+299,_H14+6	;volatile
  7338  01293A  CD46  F1D4         	movff	_V+300,_H14+7	;volatile
  7339  01293E  CD47  F1D5         	movff	_V+301,_H14+8	;volatile
  7340  012942  CD48  F1D6         	movff	_V+302,_H14+9	;volatile
  7341                           
  7342                           ;gemsecs.c: 968:    break;
  7343  012946  D7AC               	goto	l14411
  7344  012948                     l14443:
  7345                           
  7346                           ;gemsecs.c: 970:    block.header = (uint8_t*) & H17[0];
  7347  012948  0EB9               	movlw	low _H17
  7348  01294A  6E30               	movwf	secs_II_message@block^0,c
  7349  01294C  0E01               	movlw	high _H17
  7350  01294E  6E31               	movwf	(secs_II_message@block+1)^0,c
  7351                           
  7352                           ;gemsecs.c: 971:    block.length = sizeof(header17);
  7353  012950  0E14               	movlw	20
  7354  012952  6E32               	movwf	(secs_II_message@block+2)^0,c
  7355                           
  7356                           ;gemsecs.c: 972:    H17[0].block.block.systemb = V.systemb;
  7357  012954  CD45  F1C2         	movff	_V+299,_H17+9	;volatile
  7358  012958  CD46  F1C3         	movff	_V+300,_H17+10	;volatile
  7359  01295C  CD47  F1C4         	movff	_V+301,_H17+11	;volatile
  7360  012960  CD48  F1C5         	movff	_V+302,_H17+12	;volatile
  7361                           
  7362                           ;gemsecs.c: 973:    H12[1].block.block.systemb = V.ticks;
  7363  012964  CD41  F1AE         	movff	_V+295,_H12+19	;volatile
  7364  012968  CD42  F1AF         	movff	_V+296,_H12+20	;volatile
  7365  01296C  CD43  F1B0         	movff	_V+297,_H12+21	;volatile
  7366  012970  CD44  F1B1         	movff	_V+298,_H12+22	;volatile
  7367                           
  7368                           ;gemsecs.c: 974:    block.respond = 1;
  7369  012974  8036               	bsf	(secs_II_message@block+6)^0,0,c
  7370                           
  7371                           ;gemsecs.c: 975:    block.reply = (uint8_t*) & H12[1];
  7372  012976  0EAA               	movlw	low (_H12+15)
  7373  012978  6E33               	movwf	(secs_II_message@block+3)^0,c
  7374  01297A  0E01               	movlw	high (_H12+15)
  7375  01297C  6E34               	movwf	(secs_II_message@block+4)^0,c
  7376                           
  7377                           ;gemsecs.c: 976:    block.reply_length = sizeof(header12);
  7378  01297E  0E0F               	movlw	15
  7379  012980  D7C0               	goto	L10
  7380  012982                     l14457:
  7381                           
  7382                           ;gemsecs.c: 985:    H10[2].block.block.stream = stream;
  7383                           ;stkvar	_stream @ sp[(-6)+-6]
  7384  012982  0EF4               	movlw	-12
  7385  012984  006F FF8C  F042    	movff	plusw1,btemp+11
  7386  01298A  0101               	movlb	1	; () banked
  7387  01298C  5123               	movf	(_H10+35)& (0+255),w,b
  7388  01298E  1842               	xorwf	(btemp+11)^0,w,c
  7389  012990  0B80               	andlw	-128
  7390  012992  1842               	xorwf	(btemp+11)^0,w,c
  7391  012994  6F23               	movwf	(_H10+35)& (0+255),b
  7392                           
  7393                           ; BSR set to: 1
  7394                           ;gemsecs.c: 986:    block.header = (uint8_t*) & H10[2];
  7395  012996  0E1A               	movlw	low (_H10+26)
  7396  012998  6E30               	movwf	secs_II_message@block^0,c
  7397  01299A  0E01               	movlw	high (_H10+26)
  7398  01299C  6E31               	movwf	(secs_II_message@block+1)^0,c
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;gemsecs.c: 987:    block.length = sizeof(header10);
  7402  01299E  0E0D               	movlw	13
  7403  0129A0  6E32               	movwf	(secs_II_message@block+2)^0,c
  7404                           
  7405                           ; BSR set to: 1
  7406                           ;gemsecs.c: 988:    H10[2].block.block.systemb = V.systemb;
  7407  0129A2  CD45  F11C         	movff	_V+299,_H10+28	;volatile
  7408  0129A6  CD46  F11D         	movff	_V+300,_H10+29	;volatile
  7409  0129AA  CD47  F11E         	movff	_V+301,_H10+30	;volatile
  7410  0129AE  CD48  F11F         	movff	_V+302,_H10+31	;volatile
  7411                           
  7412                           ; BSR set to: 1
  7413                           ;gemsecs.c: 989:    V.abort = LINK_ERROR_ABORT;
  7414  0129B2  0E11               	movlw	17
  7415  0129B4  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
  7416                           
  7417                           ; BSR set to: 1
  7418                           ;gemsecs.c: 990:    V.all_errors++;
  7419  0129BA  EE23  F165         	lfsr	2,_V+331	;volatile
  7420  0129BE  D137               	goto	L11
  7421  0129C0                     l14471:
  7422                           
  7423                           ;stkvar	_function @ sp[(-6)+-7]
  7424  0129C0  0EF3               	movlw	-13
  7425  0129C2  50E3               	movf	plusw1,w,c
  7426  0129C4  6E41               	movwf	(btemp+10)^0,c
  7427  0129C6  6A42               	clrf	(btemp+11)^0,c
  7428                           
  7429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7430                           ; Switch size 1, requested type "simple"
  7431                           ; Number of cases is 1, Range of values is 0 to 0
  7432                           ; switch strategies available:
  7433                           ; Name         Instructions Cycles
  7434                           ; simple_byte            4     3 (average)
  7435                           ;	Chosen strategy is simple_byte
  7436  0129C8  5042               	movf	(btemp+11)^0,w,c
  7437  0129CA  0A00               	xorlw	0	; case 0
  7438  0129CC  A4D8               	btfss	status,2,c
  7439  0129CE  D7D9               	goto	l14457
  7440                           
  7441                           ; Switch size 1, requested type "simple"
  7442                           ; Number of cases is 4, Range of values is 1 to 13
  7443                           ; switch strategies available:
  7444                           ; Name         Instructions Cycles
  7445                           ; simple_byte           13     7 (average)
  7446                           ;	Chosen strategy is simple_byte
  7447  0129D0  5041               	movf	(btemp+10)^0,w,c
  7448  0129D2  0A01               	xorlw	1	; case 1
  7449  0129D4  B4D8               	btfsc	status,2,c
  7450  0129D6  D779               	goto	l14417
  7451  0129D8  0A03               	xorlw	3	; case 2
  7452  0129DA  B4D8               	btfsc	status,2,c
  7453  0129DC  D797               	goto	l14431
  7454  0129DE  0A01               	xorlw	1	; case 3
  7455  0129E0  B4D8               	btfsc	status,2,c
  7456  0129E2  D7A3               	goto	l14437
  7457  0129E4  0A0E               	xorlw	14	; case 13
  7458  0129E6  B4D8               	btfsc	status,2,c
  7459  0129E8  D7AF               	goto	l14443
  7460  0129EA  D7CB               	goto	l14457
  7461  0129EC                     l14473:
  7462                           
  7463                           ;gemsecs.c: 998:    block.header = (uint8_t*) & H26[0];
  7464  0129EC  0EC3               	movlw	low _H26
  7465  0129EE  6E30               	movwf	secs_II_message@block^0,c
  7466  0129F0  0E02               	movlw	high _H26
  7467  0129F2  6E31               	movwf	(secs_II_message@block+1)^0,c
  7468                           
  7469                           ;gemsecs.c: 999:    block.length = sizeof(header26);
  7470  0129F4  0E1D               	movlw	29
  7471  0129F6  6E32               	movwf	(secs_II_message@block+2)^0,c
  7472                           
  7473                           ;gemsecs.c: 1000:    H26[0].block.block.systemb = V.systemb;
  7474  0129F8  CD45  F2D5         	movff	_V+299,_H26+18	;volatile
  7475  0129FC  CD46  F2D6         	movff	_V+300,_H26+19	;volatile
  7476  012A00  CD47  F2D7         	movff	_V+301,_H26+20	;volatile
  7477  012A04  CD48  F2D8         	movff	_V+302,_H26+21	;volatile
  7478                           
  7479                           ;gemsecs.c: 1006:    break;
  7480  012A08  D74B               	goto	l14411
  7481  012A0A                     l14479:
  7482                           
  7483                           ;gemsecs.c: 1008:    block.header = (uint8_t*) & H13[3];
  7484  012A0A  0E8B               	movlw	low (_H13+48)
  7485  012A0C  6E30               	movwf	secs_II_message@block^0,c
  7486  012A0E  0E01               	movlw	high (_H13+48)
  7487  012A10  6E31               	movwf	(secs_II_message@block+1)^0,c
  7488                           
  7489                           ;gemsecs.c: 1009:    block.length = sizeof(header13);
  7490  012A12  0E10               	movlw	16
  7491  012A14  6E32               	movwf	(secs_II_message@block+2)^0,c
  7492                           
  7493                           ;gemsecs.c: 1010:    H13[3].block.block.systemb = V.systemb;
  7494  012A16  CD45  F190         	movff	_V+299,_H13+53	;volatile
  7495  012A1A  CD46  F191         	movff	_V+300,_H13+54	;volatile
  7496  012A1E  CD47  F192         	movff	_V+301,_H13+55	;volatile
  7497  012A22  CD48  F193         	movff	_V+302,_H13+56	;volatile
  7498                           
  7499                           ;gemsecs.c: 1011:    break;
  7500  012A26  D73C               	goto	l14411
  7501  012A28                     l14499:
  7502                           
  7503                           ;stkvar	_function @ sp[(-6)+-7]
  7504  012A28  0EF3               	movlw	-13
  7505  012A2A  50E3               	movf	plusw1,w,c
  7506  012A2C  6E41               	movwf	(btemp+10)^0,c
  7507  012A2E  6A42               	clrf	(btemp+11)^0,c
  7508                           
  7509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7510                           ; Switch size 1, requested type "simple"
  7511                           ; Number of cases is 1, Range of values is 0 to 0
  7512                           ; switch strategies available:
  7513                           ; Name         Instructions Cycles
  7514                           ; simple_byte            4     3 (average)
  7515                           ;	Chosen strategy is simple_byte
  7516  012A30  5042               	movf	(btemp+11)^0,w,c
  7517  012A32  0A00               	xorlw	0	; case 0
  7518  012A34  A4D8               	btfss	status,2,c
  7519  012A36  D7A5               	goto	l14457
  7520                           
  7521                           ; Switch size 1, requested type "simple"
  7522                           ; Number of cases is 2, Range of values is 17 to 25
  7523                           ; switch strategies available:
  7524                           ; Name         Instructions Cycles
  7525                           ; simple_byte            7     4 (average)
  7526                           ;	Chosen strategy is simple_byte
  7527  012A38  5041               	movf	(btemp+10)^0,w,c
  7528  012A3A  0A11               	xorlw	17	; case 17
  7529  012A3C  B4D8               	btfsc	status,2,c
  7530  012A3E  D7D6               	goto	l14473
  7531  012A40  0A08               	xorlw	8	; case 25
  7532  012A42  B4D8               	btfsc	status,2,c
  7533  012A44  D7E2               	goto	l14479
  7534  012A46  D79D               	goto	l14457
  7535  012A48                     l14501:
  7536                           
  7537                           ;gemsecs.c: 1025:    block.header = (uint8_t*) & H13[2];
  7538  012A48  0E7B               	movlw	low (_H13+32)
  7539  012A4A  6E30               	movwf	secs_II_message@block^0,c
  7540  012A4C  0E01               	movlw	high (_H13+32)
  7541  012A4E  6E31               	movwf	(secs_II_message@block+1)^0,c
  7542                           
  7543                           ;gemsecs.c: 1026:    block.length = sizeof(header13);
  7544  012A50  0E10               	movlw	16
  7545  012A52  6E32               	movwf	(secs_II_message@block+2)^0,c
  7546                           
  7547                           ;gemsecs.c: 1027:    H13[2].block.block.systemb = V.systemb;
  7548  012A54  CD45  F180         	movff	_V+299,_H13+37	;volatile
  7549  012A58  CD46  F181         	movff	_V+300,_H13+38	;volatile
  7550  012A5C  CD47  F182         	movff	_V+301,_H13+39	;volatile
  7551  012A60  CD48  F183         	movff	_V+302,_H13+40	;volatile
  7552                           
  7553                           ;gemsecs.c: 1028:    break;
  7554  012A64  D71D               	goto	l14411
  7555  012A66                     l14521:
  7556                           
  7557                           ;stkvar	_function @ sp[(-6)+-7]
  7558  012A66  0EF3               	movlw	-13
  7559  012A68  50E3               	movf	plusw1,w,c
  7560  012A6A  6E41               	movwf	(btemp+10)^0,c
  7561  012A6C  6A42               	clrf	(btemp+11)^0,c
  7562                           
  7563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7564                           ; Switch size 1, requested type "simple"
  7565                           ; Number of cases is 1, Range of values is 0 to 0
  7566                           ; switch strategies available:
  7567                           ; Name         Instructions Cycles
  7568                           ; simple_byte            4     3 (average)
  7569                           ;	Chosen strategy is simple_byte
  7570  012A6E  5042               	movf	(btemp+11)^0,w,c
  7571  012A70  0A00               	xorlw	0	; case 0
  7572  012A72  A4D8               	btfss	status,2,c
  7573  012A74  D786               	goto	l14457
  7574                           
  7575                           ; Switch size 1, requested type "simple"
  7576                           ; Number of cases is 1, Range of values is 1 to 1
  7577                           ; switch strategies available:
  7578                           ; Name         Instructions Cycles
  7579                           ; simple_byte            4     3 (average)
  7580                           ;	Chosen strategy is simple_byte
  7581  012A76  5041               	movf	(btemp+10)^0,w,c
  7582  012A78  0A01               	xorlw	1	; case 1
  7583  012A7A  B4D8               	btfsc	status,2,c
  7584  012A7C  D7E5               	goto	l14501
  7585  012A7E  D781               	goto	l14457
  7586  012A80                     l14525:
  7587                           
  7588                           ;gemsecs.c: 1043:    ceid = s6f11_opcmd();
  7589  012A80  EC0A  F0C6         	call	_s6f11_opcmd	;wreg free
  7590  012A84  0060  F0DC  F041   	movff	btemp,btemp+10
  7591  012A8A  0060  F0E0  F042   	movff	btemp+1,btemp+11
  7592  012A90  5041               	movf	(btemp+10)^0,w,c
  7593  012A92  6E3B               	movwf	(btemp+4)^0,c
  7594  012A94  5042               	movf	(btemp+11)^0,w,c
  7595  012A96  6E3C               	movwf	(btemp+5)^0,c
  7596  012A98  6A3D               	clrf	(btemp+6)^0,c
  7597  012A9A  6A3E               	clrf	(btemp+7)^0,c
  7598                           
  7599                           ;stkvar	_ceid @ sp[(-6)+0]
  7600  012A9C  0EFA               	movlw	-6
  7601  012A9E  0060  F0EF  FFE3   	movff	btemp+4,plusw1
  7602  012AA4  0EFB               	movlw	-5
  7603  012AA6  0060  F0F3  FFE3   	movff	btemp+5,plusw1
  7604  012AAC  0EFC               	movlw	-4
  7605  012AAE  0060  F0F7  FFE3   	movff	btemp+6,plusw1
  7606  012AB4  0EFD               	movlw	-3
  7607  012AB6  0060  F0FB  FFE3   	movff	btemp+7,plusw1
  7608                           
  7609                           ;gemsecs.c: 1044:    switch (V.e_types) {
  7610  012ABC  D03C               	goto	l14543
  7611  012ABE                     l14527:
  7612                           
  7613                           ;gemsecs.c: 1046:     if (ceid == 93 || ceid == 94) {
  7614                           ;stkvar	_ceid @ sp[(-6)+0]
  7615  012ABE  0EFA               	movlw	-6
  7616  012AC0  006F FF8C  F037    	movff	plusw1,btemp
  7617  012AC6  0E5D               	movlw	93
  7618  012AC8  1837               	xorwf	btemp^0,w,c
  7619  012ACA  E10A               	bnz	u10710
  7620  012ACC  0EFB               	movlw	-5
  7621  012ACE  50E3               	movf	plusw1,w,c
  7622  012AD0  E107               	bnz	u10710
  7623  012AD2  0EFC               	movlw	-4
  7624  012AD4  50E3               	movf	plusw1,w,c
  7625  012AD6  E104               	bnz	u10710
  7626  012AD8  0EFD               	movlw	-3
  7627  012ADA  50E3               	movf	plusw1,w,c
  7628  012ADC  B4D8               	btfsc	status,2,c
  7629  012ADE  D011               	goto	u10720
  7630  012AE0                     u10710:
  7631                           
  7632                           ;stkvar	_ceid @ sp[(-6)+0]
  7633  012AE0  0EFA               	movlw	-6
  7634  012AE2  006F FF8C  F037    	movff	plusw1,btemp
  7635  012AE8  0E5E               	movlw	94
  7636  012AEA  1837               	xorwf	btemp^0,w,c
  7637  012AEC  E134               	bnz	l14545
  7638  012AEE  0EFB               	movlw	-5
  7639  012AF0  50E3               	movf	plusw1,w,c
  7640  012AF2  E131               	bnz	l14545
  7641  012AF4  0EFC               	movlw	-4
  7642  012AF6  50E3               	movf	plusw1,w,c
  7643  012AF8  E12E               	bnz	l14545
  7644  012AFA  0EFD               	movlw	-3
  7645  012AFC  50E3               	movf	plusw1,w,c
  7646  012AFE  A4D8               	btfss	status,2,c
  7647  012B00  D02A               	goto	l14545
  7648  012B02                     u10720:
  7649                           
  7650                           ;gemsecs.c: 1047:      V.response.host_display_ack = 1;
  7651  012B02  EE23  F190         	lfsr	2,_V+374	;volatile
  7652  012B06  80DF               	bsf	indf2,0,c
  7653                           
  7654                           ;gemsecs.c: 1048:      V.sid = 10;
  7655  012B08  0E0A               	movlw	10
  7656  012B0A  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
  7657  012B10  D022               	goto	l14545
  7658  012B12                     l14535:
  7659                           
  7660                           ;gemsecs.c: 1052:     if (ceid == 81) {
  7661                           ;stkvar	_ceid @ sp[(-6)+0]
  7662  012B12  0EFA               	movlw	-6
  7663  012B14  006F FF8C  F037    	movff	plusw1,btemp
  7664  012B1A  0E51               	movlw	81
  7665  012B1C  1837               	xorwf	btemp^0,w,c
  7666  012B1E  E11B               	bnz	l14545
  7667  012B20  0EFB               	movlw	-5
  7668  012B22  50E3               	movf	plusw1,w,c
  7669  012B24  E118               	bnz	l14545
  7670  012B26  0EFC               	movlw	-4
  7671  012B28  50E3               	movf	plusw1,w,c
  7672  012B2A  E115               	bnz	l14545
  7673  012B2C  0EFD               	movlw	-3
  7674  012B2E  50E3               	movf	plusw1,w,c
  7675  012B30  B4D8               	btfsc	status,2,c
  7676  012B32  D7E7               	goto	u10720
  7677  012B34  D010               	goto	l14545
  7678  012B36                     l14543:
  7679  012B36  EE23  F01D         	lfsr	2,_V+3	;volatile
  7680  012B3A  50DF               	movf	indf2,w,c
  7681  012B3C  6E41               	movwf	(btemp+10)^0,c
  7682  012B3E  6A42               	clrf	(btemp+11)^0,c
  7683                           
  7684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7685                           ; Switch size 1, requested type "simple"
  7686                           ; Number of cases is 1, Range of values is 0 to 0
  7687                           ; switch strategies available:
  7688                           ; Name         Instructions Cycles
  7689                           ; simple_byte            4     3 (average)
  7690                           ;	Chosen strategy is simple_byte
  7691  012B40  5042               	movf	(btemp+11)^0,w,c
  7692  012B42  0A00               	xorlw	0	; case 0
  7693  012B44  A4D8               	btfss	status,2,c
  7694  012B46  D007               	goto	l14545
  7695                           
  7696                           ; Switch size 1, requested type "simple"
  7697                           ; Number of cases is 2, Range of values is 1 to 2
  7698                           ; switch strategies available:
  7699                           ; Name         Instructions Cycles
  7700                           ; simple_byte            7     4 (average)
  7701                           ;	Chosen strategy is simple_byte
  7702  012B48  5041               	movf	(btemp+10)^0,w,c
  7703  012B4A  0A01               	xorlw	1	; case 1
  7704  012B4C  B4D8               	btfsc	status,2,c
  7705  012B4E  D7B7               	goto	l14527
  7706  012B50  0A03               	xorlw	3	; case 2
  7707  012B52  B4D8               	btfsc	status,2,c
  7708  012B54  D7DE               	goto	l14535
  7709  012B56                     l14545:
  7710                           
  7711                           ;gemsecs.c: 1060:    if (ceid == 93 || ceid == 94) {
  7712                           ;stkvar	_ceid @ sp[(-6)+0]
  7713  012B56  0EFA               	movlw	-6
  7714  012B58  006F FF8C  F037    	movff	plusw1,btemp
  7715  012B5E  0E5D               	movlw	93
  7716  012B60  1837               	xorwf	btemp^0,w,c
  7717  012B62  E10A               	bnz	u10740
  7718  012B64  0EFB               	movlw	-5
  7719  012B66  50E3               	movf	plusw1,w,c
  7720  012B68  E107               	bnz	u10740
  7721  012B6A  0EFC               	movlw	-4
  7722  012B6C  50E3               	movf	plusw1,w,c
  7723  012B6E  E104               	bnz	u10740
  7724  012B70  0EFD               	movlw	-3
  7725  012B72  50E3               	movf	plusw1,w,c
  7726  012B74  B4D8               	btfsc	status,2,c
  7727  012B76  D011               	goto	u10750
  7728  012B78                     u10740:
  7729                           
  7730                           ;stkvar	_ceid @ sp[(-6)+0]
  7731  012B78  0EFA               	movlw	-6
  7732  012B7A  006F FF8C  F037    	movff	plusw1,btemp
  7733  012B80  0E5E               	movlw	94
  7734  012B82  1837               	xorwf	btemp^0,w,c
  7735  012B84  E10D               	bnz	l14551
  7736  012B86  0EFB               	movlw	-5
  7737  012B88  50E3               	movf	plusw1,w,c
  7738  012B8A  E10A               	bnz	l14551
  7739  012B8C  0EFC               	movlw	-4
  7740  012B8E  50E3               	movf	plusw1,w,c
  7741  012B90  E107               	bnz	l14551
  7742  012B92  0EFD               	movlw	-3
  7743  012B94  50E3               	movf	plusw1,w,c
  7744  012B96  A4D8               	btfss	status,2,c
  7745  012B98  D003               	goto	l14551
  7746  012B9A                     u10750:
  7747                           
  7748                           ;gemsecs.c: 1061:     V.response.host_display_ack = 1;
  7749  012B9A  EE23  F190         	lfsr	2,_V+374	;volatile
  7750  012B9E  80DF               	bsf	indf2,0,c
  7751  012BA0                     l14551:
  7752                           
  7753                           ;gemsecs.c: 1063:    block.header = (uint8_t*) & H13[0];
  7754  012BA0  0E5B               	movlw	low _H13
  7755  012BA2  6E30               	movwf	secs_II_message@block^0,c
  7756  012BA4  0E01               	movlw	high _H13
  7757  012BA6  6E31               	movwf	(secs_II_message@block+1)^0,c
  7758                           
  7759                           ;gemsecs.c: 1064:    block.length = sizeof(header13);
  7760  012BA8  0E10               	movlw	16
  7761  012BAA  6E32               	movwf	(secs_II_message@block+2)^0,c
  7762                           
  7763                           ;gemsecs.c: 1065:    H13[0].block.block.systemb = V.systemb;
  7764  012BAC  CD45  F160         	movff	_V+299,_H13+5	;volatile
  7765  012BB0  CD46  F161         	movff	_V+300,_H13+6	;volatile
  7766  012BB4  CD47  F162         	movff	_V+301,_H13+7	;volatile
  7767  012BB8  CD48  F163         	movff	_V+302,_H13+8	;volatile
  7768                           
  7769                           ;gemsecs.c: 1066:    H13[0].block.block.function = 12;
  7770  012BBC  0E0C               	movlw	12
  7771  012BBE  D01F               	goto	L13
  7772  012BC0                     l14559:
  7773                           
  7774                           ;gemsecs.c: 1069:    block.header = (uint8_t*) & H13[0];
  7775  012BC0  0E5B               	movlw	low _H13
  7776  012BC2  6E30               	movwf	secs_II_message@block^0,c
  7777  012BC4  0E01               	movlw	high _H13
  7778  012BC6  6E31               	movwf	(secs_II_message@block+1)^0,c
  7779                           
  7780                           ;gemsecs.c: 1070:    block.length = sizeof(header13);
  7781  012BC8  0E10               	movlw	16
  7782  012BCA  6E32               	movwf	(secs_II_message@block+2)^0,c
  7783                           
  7784                           ;gemsecs.c: 1071:    H13[0].block.block.systemb = V.systemb;
  7785  012BCC  CD45  F160         	movff	_V+299,_H13+5	;volatile
  7786  012BD0  CD46  F161         	movff	_V+300,_H13+6	;volatile
  7787  012BD4  CD47  F162         	movff	_V+301,_H13+7	;volatile
  7788  012BD8  CD48  F163         	movff	_V+302,_H13+8	;volatile
  7789                           
  7790                           ;gemsecs.c: 1072:    H13[0].block.block.function = 14;
  7791  012BDC  0E0E               	movlw	14
  7792  012BDE  D00F               	goto	L13
  7793  012BE0                     l14567:
  7794                           
  7795                           ;gemsecs.c: 1075:    block.header = (uint8_t*) & H13[0];
  7796  012BE0  0E5B               	movlw	low _H13
  7797  012BE2  6E30               	movwf	secs_II_message@block^0,c
  7798  012BE4  0E01               	movlw	high _H13
  7799  012BE6  6E31               	movwf	(secs_II_message@block+1)^0,c
  7800                           
  7801                           ;gemsecs.c: 1076:    block.length = sizeof(header13);
  7802  012BE8  0E10               	movlw	16
  7803  012BEA  6E32               	movwf	(secs_II_message@block+2)^0,c
  7804                           
  7805                           ;gemsecs.c: 1077:    H13[0].block.block.systemb = V.systemb;
  7806  012BEC  CD45  F160         	movff	_V+299,_H13+5	;volatile
  7807  012BF0  CD46  F161         	movff	_V+300,_H13+6	;volatile
  7808  012BF4  CD47  F162         	movff	_V+301,_H13+7	;volatile
  7809  012BF8  CD48  F163         	movff	_V+302,_H13+8	;volatile
  7810                           
  7811                           ;gemsecs.c: 1078:    H13[0].block.block.function = 26;
  7812  012BFC  0E1A               	movlw	26
  7813  012BFE                     L13:
  7814  012BFE  0101               	movlb	1	; () banked
  7815  012C00  6F66               	movwf	(_H13+11)& (0+255),b
  7816                           
  7817                           ;gemsecs.c: 1079:    break;
  7818  012C02  D64E               	goto	l14411
  7819  012C04                     l14589:
  7820                           
  7821                           ;stkvar	_function @ sp[(-6)+-7]
  7822  012C04  0EF3               	movlw	-13
  7823  012C06  50E3               	movf	plusw1,w,c
  7824  012C08  6E41               	movwf	(btemp+10)^0,c
  7825  012C0A  6A42               	clrf	(btemp+11)^0,c
  7826                           
  7827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7828                           ; Switch size 1, requested type "simple"
  7829                           ; Number of cases is 1, Range of values is 0 to 0
  7830                           ; switch strategies available:
  7831                           ; Name         Instructions Cycles
  7832                           ; simple_byte            4     3 (average)
  7833                           ;	Chosen strategy is simple_byte
  7834  012C0C  5042               	movf	(btemp+11)^0,w,c
  7835  012C0E  0A00               	xorlw	0	; case 0
  7836  012C10  A4D8               	btfss	status,2,c
  7837  012C12  D6B7               	goto	l14457
  7838                           
  7839                           ; Switch size 1, requested type "simple"
  7840                           ; Number of cases is 3, Range of values is 11 to 25
  7841                           ; switch strategies available:
  7842                           ; Name         Instructions Cycles
  7843                           ; simple_byte           10     6 (average)
  7844                           ;	Chosen strategy is simple_byte
  7845  012C14  5041               	movf	(btemp+10)^0,w,c
  7846  012C16  0A0B               	xorlw	11	; case 11
  7847  012C18  B4D8               	btfsc	status,2,c
  7848  012C1A  D732               	goto	l14525
  7849  012C1C  0A06               	xorlw	6	; case 13
  7850  012C1E  B4D8               	btfsc	status,2,c
  7851  012C20  D7CF               	goto	l14559
  7852  012C22  0A14               	xorlw	20	; case 25
  7853  012C24  B4D8               	btfsc	status,2,c
  7854  012C26  D7DC               	goto	l14567
  7855  012C28  D6AC               	goto	l14457
  7856  012C2A                     l14591:
  7857                           
  7858                           ;gemsecs.c: 1101:    V.equip_timeout++;
  7859  012C2A  EE23  F161         	lfsr	2,_V+327	;volatile
  7860  012C2E                     L11:
  7861  012C2E  2ADE               	incf	postinc2,f,c
  7862  012C30  0E00               	movlw	0
  7863  012C32  22DD               	addwfc	postdec2,f,c
  7864                           
  7865                           ;gemsecs.c: 1102:    break;
  7866  012C34  D635               	goto	l14411
  7867  012C36                     l14607:
  7868                           
  7869                           ;stkvar	_function @ sp[(-6)+-7]
  7870  012C36  0EF3               	movlw	-13
  7871  012C38  50E3               	movf	plusw1,w,c
  7872  012C3A  6E41               	movwf	(btemp+10)^0,c
  7873  012C3C  6A42               	clrf	(btemp+11)^0,c
  7874                           
  7875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7876                           ; Switch size 1, requested type "simple"
  7877                           ; Number of cases is 1, Range of values is 0 to 0
  7878                           ; switch strategies available:
  7879                           ; Name         Instructions Cycles
  7880                           ; simple_byte            4     3 (average)
  7881                           ;	Chosen strategy is simple_byte
  7882  012C3E  5042               	movf	(btemp+11)^0,w,c
  7883  012C40  0A00               	xorlw	0	; case 0
  7884  012C42  A4D8               	btfss	status,2,c
  7885  012C44  D69E               	goto	l14457
  7886                           
  7887                           ; Switch size 1, requested type "simple"
  7888                           ; Number of cases is 7, Range of values is 1 to 13
  7889                           ; switch strategies available:
  7890                           ; Name         Instructions Cycles
  7891                           ; simple_byte           22    12 (average)
  7892                           ;	Chosen strategy is simple_byte
  7893  012C46  5041               	movf	(btemp+10)^0,w,c
  7894  012C48  0A01               	xorlw	1	; case 1
  7895  012C4A  B4D8               	btfsc	status,2,c
  7896  012C4C  D629               	goto	l14411
  7897  012C4E  0A02               	xorlw	2	; case 3
  7898  012C50  B4D8               	btfsc	status,2,c
  7899  012C52  D626               	goto	l14411
  7900  012C54  0A06               	xorlw	6	; case 5
  7901  012C56  B4D8               	btfsc	status,2,c
  7902  012C58  D623               	goto	l14411
  7903  012C5A  0A02               	xorlw	2	; case 7
  7904  012C5C  B4D8               	btfsc	status,2,c
  7905  012C5E  D620               	goto	l14411
  7906  012C60  0A0E               	xorlw	14	; case 9
  7907  012C62  B4D8               	btfsc	status,2,c
  7908  012C64  D7E2               	goto	l14591
  7909  012C66  0A02               	xorlw	2	; case 11
  7910  012C68  B4D8               	btfsc	status,2,c
  7911  012C6A  D61A               	goto	l14411
  7912  012C6C  0A06               	xorlw	6	; case 13
  7913  012C6E  B4D8               	btfsc	status,2,c
  7914  012C70  D617               	goto	l14411
  7915  012C72  D687               	goto	l14457
  7916  012C74                     l14609:
  7917                           
  7918                           ;gemsecs.c: 1118:   V.set_sequ = 1;
  7919  012C74  EE23  F167         	lfsr	2,_V+333	;volatile
  7920  012C78  86DF               	bsf	indf2,3,c
  7921                           
  7922                           ;gemsecs.c: 1119:   switch (function) {
  7923  012C7A  D0FE               	goto	l14705
  7924  012C7C                     l14611:
  7925                           
  7926                           ;gemsecs.c: 1121:    block.header = (uint8_t*) & H13[1];
  7927  012C7C  0E6B               	movlw	low (_H13+16)
  7928  012C7E  6E30               	movwf	secs_II_message@block^0,c
  7929  012C80  0E01               	movlw	high (_H13+16)
  7930  012C82  6E31               	movwf	(secs_II_message@block+1)^0,c
  7931                           
  7932                           ;gemsecs.c: 1122:    block.length = sizeof(header13);
  7933  012C84  0E10               	movlw	16
  7934  012C86  6E32               	movwf	(secs_II_message@block+2)^0,c
  7935                           
  7936                           ;gemsecs.c: 1123:    H13[1].block.block.systemb = V.systemb;
  7937  012C88  CD45  F170         	movff	_V+299,_H13+21	;volatile
  7938  012C8C  CD46  F171         	movff	_V+300,_H13+22	;volatile
  7939  012C90  CD47  F172         	movff	_V+301,_H13+23	;volatile
  7940  012C94  CD48  F173         	movff	_V+302,_H13+24	;volatile
  7941                           
  7942                           ;gemsecs.c: 1124:    H153[0].block.block.systemb = V.ticks;
  7943  012C98  EE23  F141         	lfsr	2,_V+295	;volatile
  7944  012C9C  006F FF78  FE2E    	movff	postinc2,_H153+145
  7945  012CA2  006F FF78  FE2F    	movff	postinc2,_H153+146
  7946  012CA8  006F FF78  FE30    	movff	postinc2,_H153+147
  7947  012CAE  006F FF74  FE31    	movff	postdec2,_H153+148
  7948                           
  7949                           ;gemsecs.c: 1125:    set_display_info(DIS_TERM);
  7950  012CB4  0E01               	movlw	1
  7951  012CB6  6EE6               	movwf	postinc1,c
  7952  012CB8  EC39  F0CC         	call	_set_display_info	;wreg free
  7953                           
  7954                           ;gemsecs.c: 1127:    switch (s10f1_opcmd()) {
  7955  012CBC  D0AA               	goto	l14683
  7956  012CBE                     l2017:
  7957                           
  7958                           ;gemsecs.c: 1129:     block.respond = 1;
  7959  012CBE  8036               	bsf	(secs_II_message@block+6)^0,0,c
  7960                           
  7961                           ;gemsecs.c: 1130:     block.reply = (uint8_t*) & H153[1];
  7962  012CC0  0E39               	movlw	low (_H153+156)
  7963  012CC2  6E33               	movwf	(secs_II_message@block+3)^0,c
  7964  012CC4  0E0E               	movlw	high (_H153+156)
  7965  012CC6  6E34               	movwf	(secs_II_message@block+4)^0,c
  7966                           
  7967                           ;gemsecs.c: 1131:     block.reply_length = sizeof(header153);
  7968  012CC8  0E9C               	movlw	156
  7969  012CCA  6E35               	movwf	(secs_II_message@block+5)^0,c
  7970                           
  7971                           ;gemsecs.c: 1132:     H153[1].data[138] = V.response.TID;
  7972  012CCC  CD8B  FEC5         	movff	_V+369,_H153+296	;volatile
  7973  012CD0                     l14627:
  7974                           
  7975                           ;gemsecs.c: 1133:     V.queue = 1;
  7976  012CD0  EE23  F168         	lfsr	2,_V+334	;volatile
  7977  012CD4  88DF               	bsf	indf2,4,c
  7978                           
  7979                           ;gemsecs.c: 1134:     break;
  7980  012CD6  D0BF               	goto	l14685
  7981  012CD8                     l2019:
  7982                           
  7983                           ;gemsecs.c: 1136:     block.respond = 1;
  7984  012CD8  8036               	bsf	(secs_II_message@block+6)^0,0,c
  7985                           
  7986                           ;gemsecs.c: 1137:     block.reply = (uint8_t*) & H33[0];
  7987  012CDA  0EDC               	movlw	low _H33
  7988  012CDC  6E33               	movwf	(secs_II_message@block+3)^0,c
  7989  012CDE  6A34               	clrf	(secs_II_message@block+4)^0,c
  7990                           
  7991                           ;gemsecs.c: 1138:     block.reply_length = sizeof(header33);
  7992  012CE0  0E24               	movlw	36
  7993  012CE2  6E35               	movwf	(secs_II_message@block+5)^0,c
  7994                           
  7995                           ;gemsecs.c: 1139:     V.queue = 1;
  7996  012CE4  EE23  F168         	lfsr	2,_V+334	;volatile
  7997  012CE8  88DF               	bsf	indf2,4,c
  7998                           
  7999                           ;gemsecs.c: 1140:     set_display_info(DIS_LOAD);
  8000  012CEA  0E03               	movlw	3
  8001  012CEC  6EE6               	movwf	postinc1,c
  8002  012CEE  EC39  F0CC         	call	_set_display_info	;wreg free
  8003                           
  8004                           ;gemsecs.c: 1141:     break;
  8005  012CF2  D0B1               	goto	l14685
  8006  012CF4                     l2020:
  8007                           
  8008                           ;gemsecs.c: 1143:     block.respond = 1;
  8009  012CF4  8036               	bsf	(secs_II_message@block+6)^0,0,c
  8010                           
  8011                           ;gemsecs.c: 1144:     block.reply = (uint8_t*) & H33[0];
  8012  012CF6  0EDC               	movlw	low _H33
  8013  012CF8  6E33               	movwf	(secs_II_message@block+3)^0,c
  8014  012CFA  6A34               	clrf	(secs_II_message@block+4)^0,c
  8015                           
  8016                           ;gemsecs.c: 1145:     block.reply_length = sizeof(header33);
  8017  012CFC  0E24               	movlw	36
  8018  012CFE  6E35               	movwf	(secs_II_message@block+5)^0,c
  8019                           
  8020                           ;gemsecs.c: 1146:     V.queue = 1;
  8021  012D00  EE23  F168         	lfsr	2,_V+334	;volatile
  8022  012D04  88DF               	bsf	indf2,4,c
  8023                           
  8024                           ;gemsecs.c: 1147:     set_display_info(DIS_UNLOAD);
  8025  012D06  0E04               	movlw	4
  8026  012D08  6EE6               	movwf	postinc1,c
  8027  012D0A  EC39  F0CC         	call	_set_display_info	;wreg free
  8028                           
  8029                           ;gemsecs.c: 1148:     break;
  8030  012D0E  D0A3               	goto	l14685
  8031  012D10                     l2021:
  8032                           
  8033                           ;gemsecs.c: 1150:     block.respond = 1;
  8034  012D10  8036               	bsf	(secs_II_message@block+6)^0,0,c
  8035                           
  8036                           ;gemsecs.c: 1151:     block.reply = (uint8_t*) & H33[0];
  8037  012D12  0EDC               	movlw	low _H33
  8038  012D14  6E33               	movwf	(secs_II_message@block+3)^0,c
  8039  012D16  6A34               	clrf	(secs_II_message@block+4)^0,c
  8040                           
  8041                           ;gemsecs.c: 1152:     block.reply_length = sizeof(header33);
  8042  012D18  0E24               	movlw	36
  8043  012D1A  6E35               	movwf	(secs_II_message@block+5)^0,c
  8044                           
  8045                           ;gemsecs.c: 1153:     V.queue = 1;
  8046  012D1C  EE23  F168         	lfsr	2,_V+334	;volatile
  8047  012D20  88DF               	bsf	indf2,4,c
  8048                           
  8049                           ;gemsecs.c: 1154:     set_display_info(DIS_PUMP);
  8050  012D22  0E05               	movlw	5
  8051  012D24  6EE6               	movwf	postinc1,c
  8052  012D26  EC39  F0CC         	call	_set_display_info	;wreg free
  8053                           
  8054                           ;gemsecs.c: 1155:     break;
  8055  012D2A  D095               	goto	l14685
  8056  012D2C                     l14653:
  8057                           
  8058                           ;gemsecs.c: 1157:     parse_sid();
  8059  012D2C  ECD2  F0C4         	call	_parse_sid	;wreg free
  8060                           
  8061                           ;gemsecs.c: 1158:     sequence_messages(V.sid);
  8062  012D30  EE23  F199         	lfsr	2,_V+383	;volatile
  8063  012D34  50DF               	movf	indf2,w,c
  8064  012D36  6EE6               	movwf	postinc1,c
  8065  012D38  EC63  F0A8         	call	_sequence_messages	;wreg free
  8066                           
  8067                           ;gemsecs.c: 1159:     set_display_info(DIS_SEQUENCE);
  8068  012D3C  0E07               	movlw	7
  8069  012D3E  6EE6               	movwf	postinc1,c
  8070  012D40  EC39  F0CC         	call	_set_display_info	;wreg free
  8071                           
  8072                           ;gemsecs.c: 1160:     V.sequences++;
  8073  012D44  EE23  F163         	lfsr	2,_V+329	;volatile
  8074  012D48  2ADE               	incf	postinc2,f,c
  8075  012D4A  0E00               	movlw	0
  8076  012D4C  22DD               	addwfc	postdec2,f,c
  8077                           
  8078                           ;gemsecs.c: 1161:     break;
  8079  012D4E  D083               	goto	l14685
  8080  012D50                     l2023:
  8081                           
  8082                           ;gemsecs.c: 1163:     block.respond = 1;
  8083  012D50  8036               	bsf	(secs_II_message@block+6)^0,0,c
  8084                           
  8085                           ;gemsecs.c: 1164:     block.reply = (uint8_t*) & H153[0];
  8086  012D52  0E9D               	movlw	low _H153
  8087  012D54  6E33               	movwf	(secs_II_message@block+3)^0,c
  8088  012D56  0E0D               	movlw	high _H153
  8089  012D58  6E34               	movwf	(secs_II_message@block+4)^0,c
  8090                           
  8091                           ;gemsecs.c: 1165:     block.reply_length = sizeof(header153);
  8092  012D5A  0E9C               	movlw	156
  8093  012D5C  6E35               	movwf	(secs_II_message@block+5)^0,c
  8094                           
  8095                           ;gemsecs.c: 1166:     H153[0].data[138] = V.response.TID;
  8096  012D5E  CD8B  FE29         	movff	_V+369,_H153+140	;volatile
  8097                           
  8098                           ;gemsecs.c: 1167:     terminal_format(display_message);
  8099  012D62  0E00               	movlw	0
  8100  012D64  6EE6               	movwf	postinc1,c
  8101  012D66  EC79  F0B0         	call	_terminal_format	;wreg free
  8102                           
  8103                           ;gemsecs.c: 1168:     format_display_text(V.terminal);
  8104  012D6A  0E61               	movlw	low (_V+71)
  8105  012D6C  6EE6               	movwf	postinc1,c
  8106  012D6E  0E0C               	movlw	high (_V+71)
  8107  012D70  6EE6               	movwf	postinc1,c
  8108  012D72  ECAF  F0B9         	call	_format_display_text	;wreg free
  8109  012D76  D7AC               	goto	l14627
  8110  012D78                     l14673:
  8111                           
  8112                           ;gemsecs.c: 1173:      DATAEE_WriteByte(i, 0xff);
  8113  012D78  0EFF               	movlw	255
  8114  012D7A  6EE6               	movwf	postinc1,c
  8115                           
  8116                           ;stkvar	_i @ sp[(-7)+4]
  8117  012D7C  0EFD               	movlw	-3
  8118  012D7E  006F FF8F FFE6     	movff	plusw1,postinc1
  8119  012D84  006F FF8F FFE6     	movff	plusw1,postinc1
  8120  012D8A  EC41  F0C5         	call	_DATAEE_WriteByte	;wreg free
  8121                           
  8122                           ;gemsecs.c: 1174:     } while (++i <= 764);
  8123                           ;stkvar	_i @ sp[(-6)+4]
  8124  012D8E  0EFE               	movlw	-2
  8125  012D90  50E3               	movf	plusw1,w,c
  8126  012D92  0F01               	addlw	1
  8127  012D94  6E37               	movwf	btemp^0,c
  8128  012D96  0EFE               	movlw	-2
  8129  012D98  0060  F0DF  FFE3   	movff	btemp,plusw1
  8130  012D9E  6A37               	clrf	btemp^0,c
  8131  012DA0  0EFF               	movlw	-1
  8132  012DA2  50E3               	movf	plusw1,w,c
  8133  012DA4  2037               	addwfc	btemp^0,w,c
  8134  012DA6  6E37               	movwf	btemp^0,c
  8135  012DA8  0EFF               	movlw	-1
  8136  012DAA  0060  F0DF  FFE3   	movff	btemp,plusw1
  8137  012DB0  0EFE               	movlw	-2
  8138  012DB2  006F FF8C  F037    	movff	plusw1,btemp
  8139  012DB8  0EFD               	movlw	253
  8140  012DBA  5E37               	subwf	btemp^0,f,c
  8141  012DBC  0EFF               	movlw	-1
  8142  012DBE  006F FF8C  F037    	movff	plusw1,btemp
  8143  012DC4  0E02               	movlw	2
  8144  012DC6  5A37               	subwfb	btemp^0,f,c
  8145  012DC8  A0D8               	btfss	status,0,c
  8146  012DCA  D7D6               	goto	l14673
  8147                           
  8148                           ;gemsecs.c: 1175:     V.response.log_num = 0;
  8149  012DCC  0E00               	movlw	0
  8150  012DCE  006F FFA0  FD95    	movff	wreg,_V+379	;volatile
  8151  012DD4  0E00               	movlw	0
  8152  012DD6  006F FFA0  FD96    	movff	wreg,_V+380	;volatile
  8153                           
  8154                           ;gemsecs.c: 1176:     V.response.log_seq = 0;
  8155  012DDC  0E00               	movlw	0
  8156  012DDE  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
  8157                           
  8158                           ;gemsecs.c: 1177:     set_display_info(DIS_LOG);
  8159  012DE4  0E02               	movlw	2
  8160  012DE6  6EE6               	movwf	postinc1,c
  8161  012DE8  EC39  F0CC         	call	_set_display_info	;wreg free
  8162                           
  8163                           ;gemsecs.c: 1178:     break;
  8164  012DEC  D034               	goto	l14685
  8165  012DEE                     l14679:
  8166                           
  8167                           ;gemsecs.c: 1180:     V.debug = !V.debug;
  8168  012DEE  EE23  F168         	lfsr	2,_V+334	;volatile
  8169  012DF2  BADF               	btfsc	indf2,5,c
  8170  012DF4  D003               	goto	u10770
  8171  012DF6  6A42               	clrf	(btemp+11)^0,c
  8172  012DF8  2A42               	incf	(btemp+11)^0,f,c
  8173  012DFA  D001               	goto	u10788
  8174  012DFC                     u10770:
  8175  012DFC  6A42               	clrf	(btemp+11)^0,c
  8176  012DFE                     u10788:
  8177  012DFE  EE23  F168         	lfsr	2,_V+334	;volatile
  8178  012E02  3A42               	swapf	(btemp+11)^0,f,c
  8179  012E04  4642               	rlncf	(btemp+11)^0,f,c
  8180  012E06  50DF               	movf	223,w,c
  8181  012E08  1842               	xorwf	(btemp+11)^0,w,c
  8182  012E0A  0BDF               	andlw	-33
  8183  012E0C  1842               	xorwf	(btemp+11)^0,w,c
  8184  012E0E  6EDF               	movwf	223,c
  8185  012E10  D022               	goto	l14685
  8186  012E12                     l14683:
  8187  012E12  ECF0  F0B3         	call	_s10f1_opcmd	;wreg free
  8188  012E16  5037               	movf	btemp^0,w,c
  8189  012E18  6E41               	movwf	(btemp+10)^0,c
  8190  012E1A  6A42               	clrf	(btemp+11)^0,c
  8191                           
  8192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8193                           ; Switch size 1, requested type "simple"
  8194                           ; Number of cases is 1, Range of values is 0 to 0
  8195                           ; switch strategies available:
  8196                           ; Name         Instructions Cycles
  8197                           ; simple_byte            4     3 (average)
  8198                           ;	Chosen strategy is simple_byte
  8199  012E1C  5042               	movf	(btemp+11)^0,w,c
  8200  012E1E  0A00               	xorlw	0	; case 0
  8201  012E20  A4D8               	btfss	status,2,c
  8202  012E22  D019               	goto	l14685
  8203                           
  8204                           ; Switch size 1, requested type "simple"
  8205                           ; Number of cases is 8, Range of values is 0 to 11
  8206                           ; switch strategies available:
  8207                           ; Name         Instructions Cycles
  8208                           ; simple_byte           25    13 (average)
  8209                           ;	Chosen strategy is simple_byte
  8210  012E24  5041               	movf	(btemp+10)^0,w,c
  8211  012E26  0A00               	xorlw	0	; case 0
  8212  012E28  B4D8               	btfsc	status,2,c
  8213  012E2A  D792               	goto	l2023
  8214  012E2C  0A01               	xorlw	1	; case 1
  8215  012E2E  B4D8               	btfsc	status,2,c
  8216  012E30  D746               	goto	l2017
  8217  012E32  0A04               	xorlw	4	; case 5
  8218  012E34  B4D8               	btfsc	status,2,c
  8219  012E36  D7DB               	goto	l14679
  8220  012E38  0A03               	xorlw	3	; case 6
  8221  012E3A  B4D8               	btfsc	status,2,c
  8222  012E3C  D79D               	goto	l14673
  8223  012E3E  0A01               	xorlw	1	; case 7
  8224  012E40  B4D8               	btfsc	status,2,c
  8225  012E42  D74A               	goto	l2019
  8226  012E44  0A0F               	xorlw	15	; case 8
  8227  012E46  B4D8               	btfsc	status,2,c
  8228  012E48  D755               	goto	l2020
  8229  012E4A  0A01               	xorlw	1	; case 9
  8230  012E4C  B4D8               	btfsc	status,2,c
  8231  012E4E  D760               	goto	l2021
  8232  012E50  0A02               	xorlw	2	; case 11
  8233  012E52  B4D8               	btfsc	status,2,c
  8234  012E54  D76B               	goto	l14653
  8235  012E56                     l14685:
  8236                           
  8237                           ;gemsecs.c: 1184:    set_temp_display_help(display_info());
  8238  012E56  EC61  F0CD         	call	_display_info	;wreg free
  8239  012E5A  5037               	movf	btemp^0,w,c
  8240  012E5C  6EE6               	movwf	postinc1,c
  8241  012E5E  EC0D  F0CD         	call	_set_temp_display_help	;wreg free
  8242                           
  8243                           ;gemsecs.c: 1185:    vterm_sequence();
  8244  012E62  ECC5  F09A         	call	_vterm_sequence	;wreg free
  8245                           
  8246                           ;gemsecs.c: 1186:    StartTimer(TMR_INFO, 3000);
  8247  012E66  0EB8               	movlw	184
  8248  012E68  6EE6               	movwf	postinc1,c
  8249  012E6A  0E0B               	movlw	11
  8250  012E6C  6EE6               	movwf	postinc1,c
  8251  012E6E  0E07               	movlw	7
  8252  012E70  6EE6               	movwf	postinc1,c
  8253  012E72  EC12  F0C9         	call	_StartTimer	;wreg free
  8254                           
  8255                           ;gemsecs.c: 1187:    break;
  8256  012E76  D514               	goto	l14411
  8257  012E78                     l14705:
  8258                           
  8259                           ;stkvar	_function @ sp[(-6)+-7]
  8260  012E78  0EF3               	movlw	-13
  8261  012E7A  50E3               	movf	plusw1,w,c
  8262  012E7C  6E41               	movwf	(btemp+10)^0,c
  8263  012E7E  6A42               	clrf	(btemp+11)^0,c
  8264                           
  8265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8266                           ; Switch size 1, requested type "simple"
  8267                           ; Number of cases is 1, Range of values is 0 to 0
  8268                           ; switch strategies available:
  8269                           ; Name         Instructions Cycles
  8270                           ; simple_byte            4     3 (average)
  8271                           ;	Chosen strategy is simple_byte
  8272  012E80  5042               	movf	(btemp+11)^0,w,c
  8273  012E82  0A00               	xorlw	0	; case 0
  8274  012E84  A4D8               	btfss	status,2,c
  8275  012E86  D57D               	goto	l14457
  8276                           
  8277                           ; Switch size 1, requested type "simple"
  8278                           ; Number of cases is 1, Range of values is 1 to 1
  8279                           ; switch strategies available:
  8280                           ; Name         Instructions Cycles
  8281                           ; simple_byte            4     3 (average)
  8282                           ;	Chosen strategy is simple_byte
  8283  012E88  5041               	movf	(btemp+10)^0,w,c
  8284  012E8A  0A01               	xorlw	1	; case 1
  8285  012E8C  B4D8               	btfsc	status,2,c
  8286  012E8E  D6F6               	goto	l14611
  8287  012E90  D578               	goto	l14457
  8288  012E92                     l14721:
  8289                           
  8290                           ;stkvar	_stream @ sp[(-6)+-6]
  8291  012E92  0EF4               	movlw	-12
  8292  012E94  50E3               	movf	plusw1,w,c
  8293  012E96  6E41               	movwf	(btemp+10)^0,c
  8294  012E98  6A42               	clrf	(btemp+11)^0,c
  8295                           
  8296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8297                           ; Switch size 1, requested type "simple"
  8298                           ; Number of cases is 1, Range of values is 0 to 0
  8299                           ; switch strategies available:
  8300                           ; Name         Instructions Cycles
  8301                           ; simple_byte            4     3 (average)
  8302                           ;	Chosen strategy is simple_byte
  8303  012E9A  5042               	movf	(btemp+11)^0,w,c
  8304  012E9C  0A00               	xorlw	0	; case 0
  8305  012E9E  A4D8               	btfss	status,2,c
  8306  012EA0  D570               	goto	l14457
  8307                           
  8308                           ; Switch size 1, requested type "simple"
  8309                           ; Number of cases is 6, Range of values is 1 to 10
  8310                           ; switch strategies available:
  8311                           ; Name         Instructions Cycles
  8312                           ; simple_byte           19    10 (average)
  8313                           ;	Chosen strategy is simple_byte
  8314  012EA2  5041               	movf	(btemp+10)^0,w,c
  8315  012EA4  0A01               	xorlw	1	; case 1
  8316  012EA6  B4D8               	btfsc	status,2,c
  8317  012EA8  D58B               	goto	l14471
  8318  012EAA  0A03               	xorlw	3	; case 2
  8319  012EAC  B4D8               	btfsc	status,2,c
  8320  012EAE  D5BC               	goto	l14499
  8321  012EB0  0A07               	xorlw	7	; case 5
  8322  012EB2  B4D8               	btfsc	status,2,c
  8323  012EB4  D5D8               	goto	l14521
  8324  012EB6  0A03               	xorlw	3	; case 6
  8325  012EB8  B4D8               	btfsc	status,2,c
  8326  012EBA  D6A4               	goto	l14589
  8327  012EBC  0A0F               	xorlw	15	; case 9
  8328  012EBE  B4D8               	btfsc	status,2,c
  8329  012EC0  D6BA               	goto	l14607
  8330  012EC2  0A03               	xorlw	3	; case 10
  8331  012EC4  B4D8               	btfsc	status,2,c
  8332  012EC6  D6D6               	goto	l14609
  8333  012EC8  D55C               	goto	l14457
  8334  012ECA                     l1961:
  8335                           
  8336                           ; _secs_II_message: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  8337  012ECA  0EFA               	movlw	250
  8338  012ECC  26E1               	addwf	fsr1l,f,c
  8339  012ECE  0EFF               	movlw	255
  8340  012ED0  22E2               	addwfc	fsr1h,f,c
  8341  012ED2  0012               	return		;funcret
  8342  012ED4                     __end_of_secs_II_message:
  8343                           	opt callstack 0
  8344                           
  8345 ;; *************** function _vterm_sequence *****************
  8346 ;; Defined at:
  8347 ;;		line 132 in file "mconfig.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1  [STACK] void 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/3C
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   12
  8368 ;; This function calls:
  8369 ;;		_get_vterm_ptr
  8370 ;;		_sprintf
  8371 ;; This function is called by:
  8372 ;;		_secs_II_message
  8373 ;; This function uses a reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text10
  8377  01358A                     __ptext10:
  8378                           	opt callstack 0
  8379  01358A                     _vterm_sequence:
  8380                           	opt callstack 16
  8381                           
  8382                           ;mconfig.c: 134:  sprintf(get_vterm_ptr(2, 2), " Mesg %d Stack %d      ", V.msg_error, V
      +                          .stack);
  8383                           
  8384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8385                           ;incstack = 0
  8386  01358A  EE23  F169         	lfsr	2,_V+335	;volatile
  8387  01358E  50DF               	movf	223,w,c
  8388  013590  0B07               	andlw	7
  8389  013592  6EE6               	movwf	postinc1,c
  8390  013594  0E00               	movlw	0
  8391  013596  6EE6               	movwf	postinc1,c
  8392  013598  EE23  F151         	lfsr	2,_V+311	;volatile
  8393  01359C  50DF               	movf	indf2,w,c
  8394  01359E  6EE6               	movwf	postinc1,c
  8395  0135A0  0E00               	movlw	0
  8396  0135A2  6EE6               	movwf	postinc1,c
  8397  0135A4  0E16               	movlw	low STR_46
  8398  0135A6  6EE6               	movwf	postinc1,c
  8399  0135A8  0EFD               	movlw	high STR_46
  8400  0135AA  6EE6               	movwf	postinc1,c
  8401  0135AC  0E02               	movlw	2
  8402  0135AE  6EE6               	movwf	postinc1,c
  8403  0135B0  0E02               	movlw	2
  8404  0135B2  6EE6               	movwf	postinc1,c
  8405  0135B4  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8406  0135B8  0060  F0DF  FFE6   	movff	btemp,postinc1
  8407  0135BE  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8408  0135C4  0E08               	movlw	8
  8409  0135C6  6EE6               	movwf	postinc1,c
  8410  0135C8  EC95  F0BE         	call	_sprintf	;wreg free
  8411                           
  8412                           ;mconfig.c: 135:  switch (V.response.info) {
  8413  0135CC  D213               	goto	l14139
  8414  0135CE                     l14119:
  8415                           
  8416                           ;mconfig.c: 137:   sprintf(get_vterm_ptr(0, 2), " S%dF%d log    %d    ", V.stream, V.fun
      +                          ction, V.response.log_seq & 0x03);
  8417                           ; multi bank
  8418  0135CE  010D               	movlb	(_V+373) shr (0+8)	;volatile
  8419  0135D0  518F               	movf	(_V+373)& (0+255),w,b	;volatile
  8420  0135D2  0B03               	andlw	3
  8421  0135D4  6EE6               	movwf	postinc1,c
  8422  0135D6  0E00               	movlw	0
  8423  0135D8  6EE6               	movwf	postinc1,c
  8424  0135DA  EE23  F14E         	lfsr	2,_V+308	;volatile
  8425  0135DE  50DF               	movf	indf2,w,c
  8426  0135E0  6EE6               	movwf	postinc1,c
  8427  0135E2  0E00               	movlw	0
  8428  0135E4  6EE6               	movwf	postinc1,c
  8429  0135E6  EE23  F14D         	lfsr	2,_V+307	;volatile
  8430  0135EA  50DF               	movf	indf2,w,c
  8431  0135EC  6EE6               	movwf	postinc1,c
  8432  0135EE  0E00               	movlw	0
  8433  0135F0  6EE6               	movwf	postinc1,c
  8434  0135F2  0E8C               	movlw	low STR_47
  8435  0135F4  6EE6               	movwf	postinc1,c
  8436  0135F6  0EFD               	movlw	high STR_47
  8437  0135F8  6EE6               	movwf	postinc1,c
  8438  0135FA  0E02               	movlw	2
  8439  0135FC  6EE6               	movwf	postinc1,c
  8440  0135FE  0E00               	movlw	0
  8441  013600  6EE6               	movwf	postinc1,c
  8442  013602  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8443  013606  0060  F0DF  FFE6   	movff	btemp,postinc1
  8444  01360C  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8445  013612  0E0A               	movlw	10
  8446  013614  6EE6               	movwf	postinc1,c
  8447  013616  EC95  F0BE         	call	_sprintf	;wreg free
  8448                           
  8449                           ;mconfig.c: 138:   sprintf(get_vterm_ptr(1, 2), " Stored #%d        ", V.response.log_nu
      +                          m);
  8450  01361A  EE23  F195         	lfsr	2,_V+379	;volatile
  8451  01361E  006F FF78  F041    	movff	postinc2,btemp+10
  8452  013624  006F FF74  F042    	movff	postdec2,btemp+11
  8453  01362A  0060  F107  FFE6   	movff	btemp+10,postinc1
  8454  013630  0060  F10B  FFE6   	movff	btemp+11,postinc1
  8455  013636  0E49               	movlw	low STR_48
  8456  013638  6EE6               	movwf	postinc1,c
  8457  01363A  0EFE               	movlw	high STR_48
  8458  01363C  6EE6               	movwf	postinc1,c
  8459  01363E  0E02               	movlw	2
  8460  013640  6EE6               	movwf	postinc1,c
  8461  013642  0E01               	movlw	1
  8462  013644  6EE6               	movwf	postinc1,c
  8463  013646  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8464  01364A  0060  F0DF  FFE6   	movff	btemp,postinc1
  8465  013650  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8466  013656  0E06               	movlw	6
  8467  013658  6EE6               	movwf	postinc1,c
  8468  01365A  EC95  F0BE         	call	_sprintf	;wreg free
  8469                           
  8470                           ;mconfig.c: 139:   break;
  8471  01365E  0012               	return	
  8472  013660                     l14121:
  8473                           
  8474                           ;mconfig.c: 141:   sprintf(get_vterm_ptr(0, 2), " Ready LL        ");
  8475  013660  0EF5               	movlw	low STR_49
  8476  013662  6EE6               	movwf	postinc1,c
  8477  013664  0EFE               	movlw	high STR_49
  8478  013666  6EE6               	movwf	postinc1,c
  8479  013668  0E02               	movlw	2
  8480  01366A  6EE6               	movwf	postinc1,c
  8481  01366C  0E00               	movlw	0
  8482  01366E  6EE6               	movwf	postinc1,c
  8483  013670  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8484  013674  0060  F0DF  FFE6   	movff	btemp,postinc1
  8485  01367A  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8486  013680  0E04               	movlw	4
  8487  013682  6EE6               	movwf	postinc1,c
  8488  013684  EC95  F0BE         	call	_sprintf	;wreg free
  8489                           
  8490                           ;mconfig.c: 142:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
  8491  013688  EE23  F18C         	lfsr	2,_V+370	;volatile
  8492  01368C  50DF               	movf	indf2,w,c
  8493  01368E  6EE6               	movwf	postinc1,c
  8494  013690  0E00               	movlw	0
  8495  013692  6EE6               	movwf	postinc1,c
  8496  013694  0E35               	movlw	low STR_50
  8497  013696  6EE6               	movwf	postinc1,c
  8498  013698  0EFE               	movlw	high STR_50
  8499  01369A  6EE6               	movwf	postinc1,c
  8500  01369C  0E02               	movlw	2
  8501  01369E  6EE6               	movwf	postinc1,c
  8502  0136A0  0E01               	movlw	1
  8503  0136A2  6EE6               	movwf	postinc1,c
  8504  0136A4  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8505  0136A8  0060  F0DF  FFE6   	movff	btemp,postinc1
  8506  0136AE  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8507  0136B4  0E06               	movlw	6
  8508  0136B6  6EE6               	movwf	postinc1,c
  8509  0136B8  EC95  F0BE         	call	_sprintf	;wreg free
  8510                           
  8511                           ;mconfig.c: 143:   break;
  8512  0136BC  0012               	return	
  8513  0136BE                     l14123:
  8514                           
  8515                           ;mconfig.c: 145:   sprintf(get_vterm_ptr(0, 2), " Pump LL         ");
  8516  0136BE  0EE3               	movlw	low STR_51
  8517  0136C0  6EE6               	movwf	postinc1,c
  8518  0136C2  0EFE               	movlw	high STR_51
  8519  0136C4  6EE6               	movwf	postinc1,c
  8520  0136C6  0E02               	movlw	2
  8521  0136C8  6EE6               	movwf	postinc1,c
  8522  0136CA  0E00               	movlw	0
  8523  0136CC  6EE6               	movwf	postinc1,c
  8524  0136CE  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8525  0136D2  0060  F0DF  FFE6   	movff	btemp,postinc1
  8526  0136D8  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8527  0136DE  0E04               	movlw	4
  8528  0136E0  6EE6               	movwf	postinc1,c
  8529  0136E2  EC95  F0BE         	call	_sprintf	;wreg free
  8530                           
  8531                           ;mconfig.c: 146:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
  8532  0136E6  EE23  F18C         	lfsr	2,_V+370	;volatile
  8533  0136EA  50DF               	movf	indf2,w,c
  8534  0136EC  6EE6               	movwf	postinc1,c
  8535  0136EE  0E00               	movlw	0
  8536  0136F0  6EE6               	movwf	postinc1,c
  8537  0136F2  0E35               	movlw	low STR_50
  8538  0136F4  6EE6               	movwf	postinc1,c
  8539  0136F6  0EFE               	movlw	high STR_50
  8540  0136F8  6EE6               	movwf	postinc1,c
  8541  0136FA  0E02               	movlw	2
  8542  0136FC  6EE6               	movwf	postinc1,c
  8543  0136FE  0E01               	movlw	1
  8544  013700  6EE6               	movwf	postinc1,c
  8545  013702  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8546  013706  0060  F0DF  FFE6   	movff	btemp,postinc1
  8547  01370C  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8548  013712  0E06               	movlw	6
  8549  013714  6EE6               	movwf	postinc1,c
  8550  013716  EC95  F0BE         	call	_sprintf	;wreg free
  8551                           
  8552                           ;mconfig.c: 147:   break;
  8553  01371A  0012               	return	
  8554  01371C                     l14125:
  8555                           
  8556                           ;mconfig.c: 149:   sprintf(get_vterm_ptr(0, 2), " Open LL         ");
  8557  01371C  0ED1               	movlw	low STR_53
  8558  01371E  6EE6               	movwf	postinc1,c
  8559  013720  0EFE               	movlw	high STR_53
  8560  013722  6EE6               	movwf	postinc1,c
  8561  013724  0E02               	movlw	2
  8562  013726  6EE6               	movwf	postinc1,c
  8563  013728  0E00               	movlw	0
  8564  01372A  6EE6               	movwf	postinc1,c
  8565  01372C  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8566  013730  0060  F0DF  FFE6   	movff	btemp,postinc1
  8567  013736  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8568  01373C  0E04               	movlw	4
  8569  01373E  6EE6               	movwf	postinc1,c
  8570  013740  EC95  F0BE         	call	_sprintf	;wreg free
  8571                           
  8572                           ;mconfig.c: 150:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
  8573  013744  EE23  F18C         	lfsr	2,_V+370	;volatile
  8574  013748  50DF               	movf	indf2,w,c
  8575  01374A  6EE6               	movwf	postinc1,c
  8576  01374C  0E00               	movlw	0
  8577  01374E  6EE6               	movwf	postinc1,c
  8578  013750  0E35               	movlw	low STR_50
  8579  013752  6EE6               	movwf	postinc1,c
  8580  013754  0EFE               	movlw	high STR_50
  8581  013756  6EE6               	movwf	postinc1,c
  8582  013758  0E02               	movlw	2
  8583  01375A  6EE6               	movwf	postinc1,c
  8584  01375C  0E01               	movlw	1
  8585  01375E  6EE6               	movwf	postinc1,c
  8586  013760  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8587  013764  0060  F0DF  FFE6   	movff	btemp,postinc1
  8588  01376A  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8589  013770  0E06               	movlw	6
  8590  013772  6EE6               	movwf	postinc1,c
  8591  013774  EC95  F0BE         	call	_sprintf	;wreg free
  8592                           
  8593                           ;mconfig.c: 151:   break;
  8594  013778  0012               	return	
  8595  01377A                     l14127:
  8596                           
  8597                           ;mconfig.c: 153:   sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8598  01377A  0E8B               	movlw	low STR_37
  8599  01377C  6EE6               	movwf	postinc1,c
  8600  01377E  0EFF               	movlw	high STR_37
  8601  013780  6EE6               	movwf	postinc1,c
  8602  013782  0E98               	movlw	low STR_39
  8603  013784  6EE6               	movwf	postinc1,c
  8604  013786  0EFE               	movlw	high STR_39
  8605  013788  6EE6               	movwf	postinc1,c
  8606  01378A  0E01               	movlw	1
  8607  01378C  6EE6               	movwf	postinc1,c
  8608  01378E  0E00               	movlw	0
  8609  013790  6EE6               	movwf	postinc1,c
  8610  013792  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8611  013796  0060  F0DF  FFE6   	movff	btemp,postinc1
  8612  01379C  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8613  0137A2  0E06               	movlw	6
  8614  0137A4  6EE6               	movwf	postinc1,c
  8615  0137A6  EC95  F0BE         	call	_sprintf	;wreg free
  8616                           
  8617                           ;mconfig.c: 154:   sprintf(get_vterm_ptr(1, 1), "DISPLAY %s        ", build_time);
  8618  0137AA  0EA1               	movlw	low STR_38
  8619  0137AC  6EE6               	movwf	postinc1,c
  8620  0137AE  0EFF               	movlw	high STR_38
  8621  0137B0  6EE6               	movwf	postinc1,c
  8622  0137B2  0EAB               	movlw	low STR_56
  8623  0137B4  6EE6               	movwf	postinc1,c
  8624  0137B6  0EFE               	movlw	high STR_56
  8625  0137B8  6EE6               	movwf	postinc1,c
  8626  0137BA  0E01               	movlw	1
  8627  0137BC  6EE6               	movwf	postinc1,c
  8628  0137BE  0E01               	movlw	1
  8629  0137C0  6EE6               	movwf	postinc1,c
  8630  0137C2  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8631  0137C6  0060  F0DF  FFE6   	movff	btemp,postinc1
  8632  0137CC  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8633  0137D2  0E06               	movlw	6
  8634  0137D4  6EE6               	movwf	postinc1,c
  8635  0137D6  EC95  F0BE         	call	_sprintf	;wreg free
  8636                           
  8637                           ;mconfig.c: 155:   break;
  8638  0137DA  0012               	return	
  8639  0137DC                     l14129:
  8640                           
  8641                           ;mconfig.c: 157:   sprintf(get_vterm_ptr(0, 2), " Load-lock num %d      ", V.llid);
  8642  0137DC  EE23  F198         	lfsr	2,_V+382	;volatile
  8643  0137E0  50DF               	movf	indf2,w,c
  8644  0137E2  6EE6               	movwf	postinc1,c
  8645  0137E4  0E00               	movlw	0
  8646  0137E6  6EE6               	movwf	postinc1,c
  8647  0137E8  0E2E               	movlw	low STR_57
  8648  0137EA  6EE6               	movwf	postinc1,c
  8649  0137EC  0EFD               	movlw	high STR_57
  8650  0137EE  6EE6               	movwf	postinc1,c
  8651  0137F0  0E02               	movlw	2
  8652  0137F2  6EE6               	movwf	postinc1,c
  8653  0137F4  0E00               	movlw	0
  8654  0137F6  6EE6               	movwf	postinc1,c
  8655  0137F8  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8656  0137FC  0060  F0DF  FFE6   	movff	btemp,postinc1
  8657  013802  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8658  013808  0E06               	movlw	6
  8659  01380A  6EE6               	movwf	postinc1,c
  8660  01380C  EC95  F0BE         	call	_sprintf	;wreg free
  8661                           
  8662                           ;mconfig.c: 158:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
  8663  013810  EE23  F163         	lfsr	2,_V+329	;volatile
  8664  013814  006F FF78  F041    	movff	postinc2,btemp+10
  8665  01381A  006F FF74  F042    	movff	postdec2,btemp+11
  8666  013820  0060  F107  FFE6   	movff	btemp+10,postinc1
  8667  013826  0060  F10B  FFE6   	movff	btemp+11,postinc1
  8668  01382C  0EA2               	movlw	low STR_58
  8669  01382E  6EE6               	movwf	postinc1,c
  8670  013830  0EFD               	movlw	high STR_58
  8671  013832  6EE6               	movwf	postinc1,c
  8672  013834  0E02               	movlw	2
  8673  013836  6EE6               	movwf	postinc1,c
  8674  013838  0E01               	movlw	1
  8675  01383A  6EE6               	movwf	postinc1,c
  8676  01383C  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8677  013840  0060  F0DF  FFE6   	movff	btemp,postinc1
  8678  013846  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8679  01384C  0E06               	movlw	6
  8680  01384E  6EE6               	movwf	postinc1,c
  8681  013850  EC95  F0BE         	call	_sprintf	;wreg free
  8682                           
  8683                           ;mconfig.c: 159:   break;
  8684  013854  0012               	return	
  8685  013856                     l14131:
  8686                           
  8687                           ;mconfig.c: 161:   sprintf(get_vterm_ptr(0, 2), " Display num %d      ", V.response.mesg
      +                          id);
  8688  013856  EE23  F18A         	lfsr	2,_V+368	;volatile
  8689  01385A  50DF               	movf	indf2,w,c
  8690  01385C  6EE6               	movwf	postinc1,c
  8691  01385E  0E00               	movlw	0
  8692  013860  6EE6               	movwf	postinc1,c
  8693  013862  0E76               	movlw	low STR_59
  8694  013864  6EE6               	movwf	postinc1,c
  8695  013866  0EFD               	movlw	high STR_59
  8696  013868  6EE6               	movwf	postinc1,c
  8697  01386A  0E02               	movlw	2
  8698  01386C  6EE6               	movwf	postinc1,c
  8699  01386E  0E00               	movlw	0
  8700  013870  6EE6               	movwf	postinc1,c
  8701  013872  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8702  013876  0060  F0DF  FFE6   	movff	btemp,postinc1
  8703  01387C  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8704  013882  0E06               	movlw	6
  8705  013884  6EE6               	movwf	postinc1,c
  8706  013886  EC95  F0BE         	call	_sprintf	;wreg free
  8707                           
  8708                           ;mconfig.c: 162:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
  8709  01388A  EE23  F163         	lfsr	2,_V+329	;volatile
  8710  01388E  006F FF78  F041    	movff	postinc2,btemp+10
  8711  013894  006F FF74  F042    	movff	postdec2,btemp+11
  8712  01389A  0060  F107  FFE6   	movff	btemp+10,postinc1
  8713  0138A0  0060  F10B  FFE6   	movff	btemp+11,postinc1
  8714  0138A6  0EA2               	movlw	low STR_58
  8715  0138A8  6EE6               	movwf	postinc1,c
  8716  0138AA  0EFD               	movlw	high STR_58
  8717  0138AC  6EE6               	movwf	postinc1,c
  8718  0138AE  0E02               	movlw	2
  8719  0138B0  6EE6               	movwf	postinc1,c
  8720  0138B2  0E01               	movlw	1
  8721  0138B4  6EE6               	movwf	postinc1,c
  8722  0138B6  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8723  0138BA  0060  F0DF  FFE6   	movff	btemp,postinc1
  8724  0138C0  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8725  0138C6  0E06               	movlw	6
  8726  0138C8  6EE6               	movwf	postinc1,c
  8727  0138CA  EC95  F0BE         	call	_sprintf	;wreg free
  8728                           
  8729                           ;mconfig.c: 163:   break;
  8730  0138CE  0012               	return	
  8731  0138D0                     l14133:
  8732                           
  8733                           ;mconfig.c: 165:   sprintf(get_vterm_ptr(0, 2), " Terminal %d             ", V.response.
      +                          TID);
  8734  0138D0  EE23  F18B         	lfsr	2,_V+369	;volatile
  8735  0138D4  50DF               	movf	indf2,w,c
  8736  0138D6  6EE6               	movwf	postinc1,c
  8737  0138D8  0E00               	movlw	0
  8738  0138DA  6EE6               	movwf	postinc1,c
  8739  0138DC  0E95               	movlw	low STR_61
  8740  0138DE  6EE6               	movwf	postinc1,c
  8741  0138E0  0EFC               	movlw	high STR_61
  8742  0138E2  6EE6               	movwf	postinc1,c
  8743  0138E4  0E02               	movlw	2
  8744  0138E6  6EE6               	movwf	postinc1,c
  8745  0138E8  0E00               	movlw	0
  8746  0138EA  6EE6               	movwf	postinc1,c
  8747  0138EC  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8748  0138F0  0060  F0DF  FFE6   	movff	btemp,postinc1
  8749  0138F6  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8750  0138FC  0E06               	movlw	6
  8751  0138FE  6EE6               	movwf	postinc1,c
  8752  013900  EC95  F0BE         	call	_sprintf	;wreg free
  8753                           
  8754                           ;mconfig.c: 166:   sprintf(get_vterm_ptr(1, 2), " CMD %c %c Len %d       ", V.response.m
      +                          code, V.response.mparm, V.response.cmdlen);
  8755  013904  EE23  F18E         	lfsr	2,_V+372	;volatile
  8756  013908  50DF               	movf	indf2,w,c
  8757  01390A  6EE6               	movwf	postinc1,c
  8758  01390C  0E00               	movlw	0
  8759  01390E  6EE6               	movwf	postinc1,c
  8760  013910  EE23  F18D         	lfsr	2,_V+371	;volatile
  8761  013914  50DF               	movf	indf2,w,c
  8762  013916  6EE6               	movwf	postinc1,c
  8763  013918  0E00               	movlw	0
  8764  01391A  6EE6               	movwf	postinc1,c
  8765  01391C  EE23  F18C         	lfsr	2,_V+370	;volatile
  8766  013920  50DF               	movf	indf2,w,c
  8767  013922  6EE6               	movwf	postinc1,c
  8768  013924  0E00               	movlw	0
  8769  013926  6EE6               	movwf	postinc1,c
  8770  013928  0EFD               	movlw	low STR_62
  8771  01392A  6EE6               	movwf	postinc1,c
  8772  01392C  0EFC               	movlw	high STR_62
  8773  01392E  6EE6               	movwf	postinc1,c
  8774  013930  0E02               	movlw	2
  8775  013932  6EE6               	movwf	postinc1,c
  8776  013934  0E01               	movlw	1
  8777  013936  6EE6               	movwf	postinc1,c
  8778  013938  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8779  01393C  0060  F0DF  FFE6   	movff	btemp,postinc1
  8780  013942  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8781  013948  0E0A               	movlw	10
  8782  01394A  6EE6               	movwf	postinc1,c
  8783  01394C  EC95  F0BE         	call	_sprintf	;wreg free
  8784                           
  8785                           ;mconfig.c: 167:   break;
  8786  013950  0012               	return	
  8787  013952                     l14135:
  8788                           
  8789                           ;mconfig.c: 170:   sprintf(get_vterm_ptr(0, 0), "                  ");
  8790  013952  0E85               	movlw	low STR_63
  8791  013954  6EE6               	movwf	postinc1,c
  8792  013956  0EFE               	movlw	high STR_63
  8793  013958  6EE6               	movwf	postinc1,c
  8794  01395A  0E00               	movlw	0
  8795  01395C  6EE6               	movwf	postinc1,c
  8796  01395E  0E00               	movlw	0
  8797  013960  6EE6               	movwf	postinc1,c
  8798  013962  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8799  013966  0060  F0DF  FFE6   	movff	btemp,postinc1
  8800  01396C  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8801  013972  0E04               	movlw	4
  8802  013974  6EE6               	movwf	postinc1,c
  8803  013976  EC95  F0BE         	call	_sprintf	;wreg free
  8804                           
  8805                           ;mconfig.c: 171:   sprintf(get_vterm_ptr(1, 0), "                  ");
  8806  01397A  0E85               	movlw	low STR_63
  8807  01397C  6EE6               	movwf	postinc1,c
  8808  01397E  0EFE               	movlw	high STR_63
  8809  013980  6EE6               	movwf	postinc1,c
  8810  013982  0E00               	movlw	0
  8811  013984  6EE6               	movwf	postinc1,c
  8812  013986  0E01               	movlw	1
  8813  013988  6EE6               	movwf	postinc1,c
  8814  01398A  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8815  01398E  0060  F0DF  FFE6   	movff	btemp,postinc1
  8816  013994  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8817  01399A  0E04               	movlw	4
  8818  01399C  6EE6               	movwf	postinc1,c
  8819  01399E  EC95  F0BE         	call	_sprintf	;wreg free
  8820                           
  8821                           ;mconfig.c: 172:   sprintf(get_vterm_ptr(0, 2), "                  ");
  8822  0139A2  0E85               	movlw	low STR_63
  8823  0139A4  6EE6               	movwf	postinc1,c
  8824  0139A6  0EFE               	movlw	high STR_63
  8825  0139A8  6EE6               	movwf	postinc1,c
  8826  0139AA  0E02               	movlw	2
  8827  0139AC  6EE6               	movwf	postinc1,c
  8828  0139AE  0E00               	movlw	0
  8829  0139B0  6EE6               	movwf	postinc1,c
  8830  0139B2  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8831  0139B6  0060  F0DF  FFE6   	movff	btemp,postinc1
  8832  0139BC  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8833  0139C2  0E04               	movlw	4
  8834  0139C4  6EE6               	movwf	postinc1,c
  8835  0139C6  EC95  F0BE         	call	_sprintf	;wreg free
  8836                           
  8837                           ;mconfig.c: 173:   sprintf(get_vterm_ptr(1, 2), "                  ");
  8838  0139CA  0E85               	movlw	low STR_63
  8839  0139CC  6EE6               	movwf	postinc1,c
  8840  0139CE  0EFE               	movlw	high STR_63
  8841  0139D0  6EE6               	movwf	postinc1,c
  8842  0139D2  0E02               	movlw	2
  8843  0139D4  6EE6               	movwf	postinc1,c
  8844  0139D6  0E01               	movlw	1
  8845  0139D8  6EE6               	movwf	postinc1,c
  8846  0139DA  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
  8847  0139DE  0060  F0DF  FFE6   	movff	btemp,postinc1
  8848  0139E4  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  8849  0139EA  0E04               	movlw	4
  8850  0139EC  6EE6               	movwf	postinc1,c
  8851  0139EE  EC95  F0BE         	call	_sprintf	;wreg free
  8852                           
  8853                           ;mconfig.c: 174:   break;
  8854  0139F2  0012               	return	
  8855  0139F4                     l14139:
  8856  0139F4  EE23  F191         	lfsr	2,_V+375	;volatile
  8857  0139F8  50DF               	movf	indf2,w,c
  8858  0139FA  6E41               	movwf	(btemp+10)^0,c
  8859  0139FC  6A42               	clrf	(btemp+11)^0,c
  8860                           
  8861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8862                           ; Switch size 1, requested type "simple"
  8863                           ; Number of cases is 1, Range of values is 0 to 0
  8864                           ; switch strategies available:
  8865                           ; Name         Instructions Cycles
  8866                           ; simple_byte            4     3 (average)
  8867                           ;	Chosen strategy is simple_byte
  8868  0139FE  5042               	movf	(btemp+11)^0,w,c
  8869  013A00  0A00               	xorlw	0	; case 0
  8870  013A02  A4D8               	btfss	status,2,c
  8871  013A04  D7A6               	goto	l14135
  8872                           
  8873                           ; Switch size 1, requested type "simple"
  8874                           ; Number of cases is 9, Range of values is 1 to 10
  8875                           ; switch strategies available:
  8876                           ; Name         Instructions Cycles
  8877                           ; simple_byte           28    15 (average)
  8878                           ;	Chosen strategy is simple_byte
  8879  013A06  5041               	movf	(btemp+10)^0,w,c
  8880  013A08  0A01               	xorlw	1	; case 1
  8881  013A0A  B4D8               	btfsc	status,2,c
  8882  013A0C  D761               	goto	l14133
  8883  013A0E  0A03               	xorlw	3	; case 2
  8884  013A10  B4D8               	btfsc	status,2,c
  8885  013A12  D5DD               	goto	l14119
  8886  013A14  0A01               	xorlw	1	; case 3
  8887  013A16  B4D8               	btfsc	status,2,c
  8888  013A18  D623               	goto	l14121
  8889  013A1A  0A07               	xorlw	7	; case 4
  8890  013A1C  B4D8               	btfsc	status,2,c
  8891  013A1E  D67E               	goto	l14125
  8892  013A20  0A01               	xorlw	1	; case 5
  8893  013A22  B4D8               	btfsc	status,2,c
  8894  013A24  D64C               	goto	l14123
  8895  013A26  0A03               	xorlw	3	; case 6
  8896  013A28  B4D8               	btfsc	status,2,c
  8897  013A2A  D6A7               	goto	l14127
  8898  013A2C  0A01               	xorlw	1	; case 7
  8899  013A2E  B4D8               	btfsc	status,2,c
  8900  013A30  D6D5               	goto	l14129
  8901  013A32  0A0F               	xorlw	15	; case 8
  8902  013A34  B4D8               	btfsc	status,2,c
  8903  013A36  D70F               	goto	l14131
  8904  013A38  0A02               	xorlw	2	; case 10
  8905  013A3A  D78B               	goto	l14135
  8906  013A3C                     __end_of_vterm_sequence:
  8907                           	opt callstack 0
  8908                           
  8909 ;; *************** function _s6f11_opcmd *****************
  8910 ;; Defined at:
  8911 ;;		line 876 in file "gemsecs.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  2  [STACK] unsigned short 
  8918 ;; Registers used:
  8919 ;;		wreg, fsr2l, fsr2h, status,2, btemp, btemp+1, btemp+10, btemp+11
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/3C
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8929 ;;Total ram usage:        0 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    3
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_secs_II_message
  8936 ;; This function uses a reentrant model
  8937 ;;
  8938                           
  8939                           	psect	text11
  8940  018C14                     __ptext11:
  8941                           	opt callstack 0
  8942  018C14                     _s6f11_opcmd:
  8943                           	opt callstack 25
  8944                           
  8945                           ;gemsecs.c: 878:  V.response.ceid = V.response.ack[9];
  8946                           
  8947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8948                           ;incstack = 0
  8949  018C14  EE23  F173         	lfsr	2,_V+345	;volatile
  8950  018C18  50DF               	movf	indf2,w,c
  8951  018C1A  6E41               	movwf	(btemp+10)^0,c
  8952  018C1C  6A42               	clrf	(btemp+11)^0,c
  8953  018C1E  0060  F104  FD93   	movff	btemp+10,_V+377	;volatile
  8954  018C24  0060  F108  FD94   	movff	btemp+11,_V+378	;volatile
  8955                           
  8956                           ;gemsecs.c: 879:  V.response.ceid = H254[0].data[(sizeof(H254[0].data) - 1) - 9];
  8957  018C2A  EE23  F3C1         	lfsr	2,_H254+236
  8958  018C2E  50DF               	movf	indf2,w,c
  8959  018C30  6E41               	movwf	(btemp+10)^0,c
  8960  018C32  6A42               	clrf	(btemp+11)^0,c
  8961  018C34  0060  F104  FD93   	movff	btemp+10,_V+377	;volatile
  8962  018C3A  0060  F108  FD94   	movff	btemp+11,_V+378	;volatile
  8963                           
  8964                           ;gemsecs.c: 881:  V.testing = (sizeof(H254[0].data) - 1) - 9;
  8965  018C40  0EEA               	movlw	234
  8966  018C42  006F FFA0  FD49    	movff	wreg,_V+303	;volatile
  8967  018C48  0E00               	movlw	0
  8968  018C4A  006F FFA0  FD4A    	movff	wreg,_V+304	;volatile
  8969  018C50  0E00               	movlw	0
  8970  018C52  006F FFA0  FD4B    	movff	wreg,_V+305	;volatile
  8971  018C58  0E00               	movlw	0
  8972  018C5A  006F FFA0  FD4C    	movff	wreg,_V+306	;volatile
  8973                           
  8974                           ;gemsecs.c: 883:  return V.response.ceid;
  8975  018C60  EE23  F193         	lfsr	2,_V+377	;volatile
  8976  018C64  006F FF78  F037    	movff	postinc2,btemp
  8977  018C6A  006F FF74  F038    	movff	postdec2,btemp+1
  8978                           
  8979                           ; _s6f11_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  8980  018C70  0012               	return		;funcret
  8981  018C72                     __end_of_s6f11_opcmd:
  8982                           	opt callstack 0
  8983                           
  8984 ;; *************** function _s10f1_opcmd *****************
  8985 ;; Defined at:
  8986 ;;		line 758 in file "gemsecs.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;		None
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1  [STACK] enum E16720
  8993 ;; Registers used:
  8994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/3C
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;Total ram usage:        0 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:   12
  9007 ;; This function calls:
  9008 ;;		_parse_ll
  9009 ;;		_sprintf
  9010 ;; This function is called by:
  9011 ;;		_secs_II_message
  9012 ;; This function uses a reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text12
  9016  0167E0                     __ptext12:
  9017                           	opt callstack 0
  9018  0167E0                     _s10f1_opcmd:
  9019                           	opt callstack 16
  9020                           
  9021                           ;gemsecs.c: 760:  sprintf(V.info, " Terminal          ");
  9022                           
  9023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9024                           ;incstack = 0
  9025  0167E0  0E5D               	movlw	low STR_33
  9026  0167E2  6EE6               	movwf	postinc1,c
  9027  0167E4  0EFE               	movlw	high STR_33
  9028  0167E6  6EE6               	movwf	postinc1,c
  9029  0167E8  0E01               	movlw	low (_V+231)
  9030  0167EA  6EE6               	movwf	postinc1,c
  9031  0167EC  0E0D               	movlw	high (_V+231)
  9032  0167EE  6EE6               	movwf	postinc1,c
  9033  0167F0  0E04               	movlw	4
  9034  0167F2  6EE6               	movwf	postinc1,c
  9035  0167F4  EC95  F0BE         	call	_sprintf	;wreg free
  9036                           
  9037                           ;gemsecs.c: 761:  V.response.cmdlen = V.response.ack[6];
  9038  0167F8  CD70  FD8E         	movff	_V+342,_V+372	;volatile
  9039                           
  9040                           ;gemsecs.c: 762:  V.response.TID = V.response.ack[4];
  9041  0167FC  CD6E  FD8B         	movff	_V+340,_V+369	;volatile
  9042                           
  9043                           ;gemsecs.c: 763:  V.response.mcode = V.response.ack[7];
  9044  016800  CD71  FD8C         	movff	_V+343,_V+370	;volatile
  9045                           
  9046                           ;gemsecs.c: 764:  V.response.mparm = V.response.ack[8];
  9047  016804  CD72  FD8D         	movff	_V+344,_V+371	;volatile
  9048                           
  9049                           ;gemsecs.c: 766:  if (V.response.cmdlen == 0)
  9050  016808  EE23  F18E         	lfsr	2,_V+372	;volatile
  9051  01680C  50DF               	movf	indf2,w,c
  9052  01680E  A4D8               	btfss	status,2,c
  9053  016810  D003               	goto	l13971
  9054                           
  9055                           ;gemsecs.c: 767:   return CODE_ERR;
  9056  016812  0E0C               	movlw	12
  9057  016814  6E37               	movwf	btemp^0,c
  9058  016816  0012               	return	
  9059  016818                     l13971:
  9060                           
  9061                           ;gemsecs.c: 769:  if (V.response.mcode == 'M' || V.response.mcode == 'm')
  9062  016818  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9063  01681E  0A4D               	xorlw	77
  9064  016820  B4D8               	btfsc	status,2,c
  9065  016822  D006               	goto	u10370
  9066  016824  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9067  01682A  0A6D               	xorlw	109
  9068  01682C  A4D8               	btfss	status,2,c
  9069  01682E  D003               	goto	l13979
  9070  016830                     u10370:
  9071                           
  9072                           ;gemsecs.c: 770:   return CODE_TS;
  9073  016830  0E00               	movlw	0
  9074  016832  6E37               	movwf	btemp^0,c
  9075  016834  0012               	return	
  9076  016836                     l13979:
  9077                           
  9078                           ;gemsecs.c: 772:  if (V.response.mcode == 'C' || V.response.mcode == 'c') {
  9079  016836  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9080  01683C  0A43               	xorlw	67
  9081  01683E  B4D8               	btfsc	status,2,c
  9082  016840  D006               	goto	u10390
  9083  016842  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9084  016848  0A63               	xorlw	99
  9085  01684A  A4D8               	btfss	status,2,c
  9086  01684C  D01E               	goto	l13997
  9087  01684E                     u10390:
  9088                           
  9089                           ;gemsecs.c: 773:   parse_ll();
  9090  01684E  EC98  F0C4         	call	_parse_ll	;wreg free
  9091                           
  9092                           ;gemsecs.c: 775:   switch (V.e_types) {
  9093  016852  D008               	goto	l13991
  9094  016854                     l13985:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;gemsecs.c: 777:    H33[0].data[18] = '1';
  9098  016854  0E31               	movlw	49
  9099  016856  6FF0               	movwf	(_H33+20)& (0+255),b
  9100                           
  9101                           ;gemsecs.c: 778:    H33[0].data[17] = '6';
  9102  016858  0E36               	movlw	54
  9103  01685A  D029               	goto	L15
  9104  01685C                     l13987:
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;gemsecs.c: 781:    H33[0].data[18] = '1';
  9108  01685C  0E31               	movlw	49
  9109  01685E  6FF0               	movwf	(_H33+20)& (0+255),b
  9110                           
  9111                           ;gemsecs.c: 782:    H33[0].data[17] = '0';
  9112  016860  0E30               	movlw	48
  9113  016862  D025               	goto	L15
  9114  016864                     l13991:
  9115                           
  9116                           ; BSR set to: 0
  9117  016864  EE23  F01D         	lfsr	2,_V+3	;volatile
  9118  016868  50DF               	movf	indf2,w,c
  9119  01686A  6E41               	movwf	(btemp+10)^0,c
  9120  01686C  6A42               	clrf	(btemp+11)^0,c
  9121                           
  9122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9123                           ; Switch size 1, requested type "simple"
  9124                           ; Number of cases is 1, Range of values is 0 to 0
  9125                           ; switch strategies available:
  9126                           ; Name         Instructions Cycles
  9127                           ; simple_byte            4     3 (average)
  9128                           ;	Chosen strategy is simple_byte
  9129  01686E  5042               	movf	(btemp+11)^0,w,c
  9130  016870  0A00               	xorlw	0	; case 0
  9131  016872  A4D8               	btfss	status,2,c
  9132  016874  D007               	goto	l13993
  9133                           
  9134                           ; BSR set to: 0
  9135                           ; Switch size 1, requested type "simple"
  9136                           ; Number of cases is 2, Range of values is 1 to 2
  9137                           ; switch strategies available:
  9138                           ; Name         Instructions Cycles
  9139                           ; simple_byte            7     4 (average)
  9140                           ;	Chosen strategy is simple_byte
  9141  016876  5041               	movf	(btemp+10)^0,w,c
  9142  016878  0A01               	xorlw	1	; case 1
  9143  01687A  B4D8               	btfsc	status,2,c
  9144  01687C  D7EB               	goto	l13985
  9145  01687E  0A03               	xorlw	3	; case 2
  9146  016880  B4D8               	btfsc	status,2,c
  9147  016882  D7EC               	goto	l13987
  9148  016884                     l13993:
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;gemsecs.c: 788:   return CODE_LOAD;
  9152  016884  0E07               	movlw	7
  9153  016886  6E37               	movwf	btemp^0,c
  9154  016888  0012               	return	
  9155  01688A                     l13997:
  9156                           
  9157                           ;gemsecs.c: 791:  if (V.response.mcode == 'R' || V.response.mcode == 'r') {
  9158  01688A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9159  016890  0A52               	xorlw	82
  9160  016892  B4D8               	btfsc	status,2,c
  9161  016894  D006               	goto	u10410
  9162  016896  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9163  01689C  0A72               	xorlw	114
  9164  01689E  A4D8               	btfss	status,2,c
  9165  0168A0  D016               	goto	l14015
  9166  0168A2                     u10410:
  9167                           
  9168                           ;gemsecs.c: 792:   parse_ll();
  9169  0168A2  EC98  F0C4         	call	_parse_ll	;wreg free
  9170                           
  9171                           ;gemsecs.c: 794:   switch (V.e_types) {
  9172  0168A6  D005               	goto	l14009
  9173  0168A8                     l14003:
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;gemsecs.c: 796:    H33[0].data[18] = '1';
  9177  0168A8  0E31               	movlw	49
  9178  0168AA  6FF0               	movwf	(_H33+20)& (0+255),b
  9179                           
  9180                           ;gemsecs.c: 797:    H33[0].data[17] = '7';
  9181  0168AC  0E37               	movlw	55
  9182  0168AE                     L15:
  9183  0168AE  6FEF               	movwf	(_H33+19)& (0+255),b
  9184                           
  9185                           ;gemsecs.c: 798:    break;
  9186  0168B0  D7E9               	goto	l13993
  9187  0168B2                     l14009:
  9188                           
  9189                           ; BSR set to: 0
  9190  0168B2  EE23  F01D         	lfsr	2,_V+3	;volatile
  9191  0168B6  50DF               	movf	indf2,w,c
  9192  0168B8  6E41               	movwf	(btemp+10)^0,c
  9193  0168BA  6A42               	clrf	(btemp+11)^0,c
  9194                           
  9195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9196                           ; Switch size 1, requested type "simple"
  9197                           ; Number of cases is 1, Range of values is 0 to 0
  9198                           ; switch strategies available:
  9199                           ; Name         Instructions Cycles
  9200                           ; simple_byte            4     3 (average)
  9201                           ;	Chosen strategy is simple_byte
  9202  0168BC  5042               	movf	(btemp+11)^0,w,c
  9203  0168BE  0A00               	xorlw	0	; case 0
  9204  0168C0  A4D8               	btfss	status,2,c
  9205  0168C2  D7E0               	goto	l13993
  9206                           
  9207                           ; BSR set to: 0
  9208                           ; Switch size 1, requested type "simple"
  9209                           ; Number of cases is 2, Range of values is 1 to 2
  9210                           ; switch strategies available:
  9211                           ; Name         Instructions Cycles
  9212                           ; simple_byte            7     4 (average)
  9213                           ;	Chosen strategy is simple_byte
  9214  0168C4  5041               	movf	(btemp+10)^0,w,c
  9215  0168C6  0A01               	xorlw	1	; case 1
  9216  0168C8  B4D8               	btfsc	status,2,c
  9217  0168CA  D7EE               	goto	l14003
  9218  0168CC  D7D8               	goto	L16
  9219  0168CE                     l14015:
  9220                           
  9221                           ;gemsecs.c: 810:  if (V.response.mcode == 'P' || V.response.mcode == 'p') {
  9222  0168CE  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9223  0168D4  0A50               	xorlw	80
  9224  0168D6  B4D8               	btfsc	status,2,c
  9225  0168D8  D006               	goto	u10430
  9226  0168DA  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9227  0168E0  0A70               	xorlw	112
  9228  0168E2  A4D8               	btfss	status,2,c
  9229  0168E4  D01F               	goto	l14033
  9230  0168E6                     u10430:
  9231                           
  9232                           ;gemsecs.c: 811:   parse_ll();
  9233  0168E6  EC98  F0C4         	call	_parse_ll	;wreg free
  9234                           
  9235                           ;gemsecs.c: 813:   switch (V.e_types) {
  9236  0168EA  D009               	goto	l14027
  9237  0168EC                     l14021:
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;gemsecs.c: 815:    H33[0].data[18] = '1';
  9241  0168EC  0E31               	movlw	49
  9242  0168EE  6FF0               	movwf	(_H33+20)& (0+255),b
  9243                           
  9244                           ;gemsecs.c: 816:    H33[0].data[17] = '8';
  9245  0168F0  0E38               	movlw	56
  9246  0168F2  D003               	goto	L17
  9247  0168F4                     l14023:
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;gemsecs.c: 819:    H33[0].data[18] = '1';
  9251  0168F4  0E31               	movlw	49
  9252  0168F6  6FF0               	movwf	(_H33+20)& (0+255),b
  9253                           
  9254                           ;gemsecs.c: 820:    H33[0].data[17] = '0';
  9255  0168F8  0E30               	movlw	48
  9256  0168FA                     L17:
  9257  0168FA  6FEF               	movwf	(_H33+19)& (0+255),b
  9258                           
  9259                           ;gemsecs.c: 821:    break;
  9260  0168FC  D010               	goto	l14029
  9261  0168FE                     l14027:
  9262                           
  9263                           ; BSR set to: 0
  9264  0168FE  EE23  F01D         	lfsr	2,_V+3	;volatile
  9265  016902  50DF               	movf	indf2,w,c
  9266  016904  6E41               	movwf	(btemp+10)^0,c
  9267  016906  6A42               	clrf	(btemp+11)^0,c
  9268                           
  9269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9270                           ; Switch size 1, requested type "simple"
  9271                           ; Number of cases is 1, Range of values is 0 to 0
  9272                           ; switch strategies available:
  9273                           ; Name         Instructions Cycles
  9274                           ; simple_byte            4     3 (average)
  9275                           ;	Chosen strategy is simple_byte
  9276  016908  5042               	movf	(btemp+11)^0,w,c
  9277  01690A  0A00               	xorlw	0	; case 0
  9278  01690C  A4D8               	btfss	status,2,c
  9279  01690E  D007               	goto	l14029
  9280                           
  9281                           ; BSR set to: 0
  9282                           ; Switch size 1, requested type "simple"
  9283                           ; Number of cases is 2, Range of values is 1 to 2
  9284                           ; switch strategies available:
  9285                           ; Name         Instructions Cycles
  9286                           ; simple_byte            7     4 (average)
  9287                           ;	Chosen strategy is simple_byte
  9288  016910  5041               	movf	(btemp+10)^0,w,c
  9289  016912  0A01               	xorlw	1	; case 1
  9290  016914  B4D8               	btfsc	status,2,c
  9291  016916  D7EA               	goto	l14021
  9292  016918  0A03               	xorlw	3	; case 2
  9293  01691A  B4D8               	btfsc	status,2,c
  9294  01691C  D7EB               	goto	l14023
  9295  01691E                     l14029:
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;gemsecs.c: 826:   return CODE_PUMP;
  9299  01691E  0E09               	movlw	9
  9300  016920  6E37               	movwf	btemp^0,c
  9301  016922  0012               	return	
  9302  016924                     l14033:
  9303                           
  9304                           ;gemsecs.c: 829:  if (V.response.mcode == 'O' || V.response.mcode == 'o') {
  9305  016924  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9306  01692A  0A4F               	xorlw	79
  9307  01692C  B4D8               	btfsc	status,2,c
  9308  01692E  D006               	goto	u10450
  9309  016930  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9310  016936  0A6F               	xorlw	111
  9311  016938  A4D8               	btfss	status,2,c
  9312  01693A  D01F               	goto	l14051
  9313  01693C                     u10450:
  9314                           
  9315                           ;gemsecs.c: 830:   parse_ll();
  9316  01693C  EC98  F0C4         	call	_parse_ll	;wreg free
  9317                           
  9318                           ;gemsecs.c: 832:   switch (V.e_types) {
  9319  016940  D009               	goto	l14045
  9320  016942                     l14039:
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;gemsecs.c: 834:    H33[0].data[18] = '1';
  9324  016942  0E31               	movlw	49
  9325  016944  6FF0               	movwf	(_H33+20)& (0+255),b
  9326                           
  9327                           ;gemsecs.c: 835:    H33[0].data[17] = '2';
  9328  016946  0E32               	movlw	50
  9329  016948  D003               	goto	L18
  9330  01694A                     l14041:
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;gemsecs.c: 838:    H33[0].data[18] = '1';
  9334  01694A  0E31               	movlw	49
  9335  01694C  6FF0               	movwf	(_H33+20)& (0+255),b
  9336                           
  9337                           ;gemsecs.c: 839:    H33[0].data[17] = '0';
  9338  01694E  0E30               	movlw	48
  9339  016950                     L18:
  9340  016950  6FEF               	movwf	(_H33+19)& (0+255),b
  9341                           
  9342                           ;gemsecs.c: 840:    break;
  9343  016952  D010               	goto	l14047
  9344  016954                     l14045:
  9345                           
  9346                           ; BSR set to: 0
  9347  016954  EE23  F01D         	lfsr	2,_V+3	;volatile
  9348  016958  50DF               	movf	indf2,w,c
  9349  01695A  6E41               	movwf	(btemp+10)^0,c
  9350  01695C  6A42               	clrf	(btemp+11)^0,c
  9351                           
  9352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9353                           ; Switch size 1, requested type "simple"
  9354                           ; Number of cases is 1, Range of values is 0 to 0
  9355                           ; switch strategies available:
  9356                           ; Name         Instructions Cycles
  9357                           ; simple_byte            4     3 (average)
  9358                           ;	Chosen strategy is simple_byte
  9359  01695E  5042               	movf	(btemp+11)^0,w,c
  9360  016960  0A00               	xorlw	0	; case 0
  9361  016962  A4D8               	btfss	status,2,c
  9362  016964  D007               	goto	l14047
  9363                           
  9364                           ; BSR set to: 0
  9365                           ; Switch size 1, requested type "simple"
  9366                           ; Number of cases is 2, Range of values is 1 to 2
  9367                           ; switch strategies available:
  9368                           ; Name         Instructions Cycles
  9369                           ; simple_byte            7     4 (average)
  9370                           ;	Chosen strategy is simple_byte
  9371  016966  5041               	movf	(btemp+10)^0,w,c
  9372  016968  0A01               	xorlw	1	; case 1
  9373  01696A  B4D8               	btfsc	status,2,c
  9374  01696C  D7EA               	goto	l14039
  9375  01696E  0A03               	xorlw	3	; case 2
  9376  016970  B4D8               	btfsc	status,2,c
  9377  016972  D7EB               	goto	l14041
  9378  016974                     l14047:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;gemsecs.c: 845:   return CODE_UNLOAD;
  9382  016974  0E08               	movlw	8
  9383  016976  6E37               	movwf	btemp^0,c
  9384  016978  0012               	return	
  9385  01697A                     l14051:
  9386                           
  9387                           ;gemsecs.c: 848:  if (V.response.mcode == 'L' || V.response.mcode == 'l') {
  9388  01697A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9389  016980  0A4C               	xorlw	76
  9390  016982  B4D8               	btfsc	status,2,c
  9391  016984  D006               	goto	u10470
  9392  016986  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9393  01698C  0A6C               	xorlw	108
  9394  01698E  A4D8               	btfss	status,2,c
  9395  016990  D00F               	goto	l14061
  9396  016992                     u10470:
  9397                           
  9398                           ;gemsecs.c: 849:   sprintf(V.info, " Log file reset          ");
  9399  016992  0EC9               	movlw	low STR_34
  9400  016994  6EE6               	movwf	postinc1,c
  9401  016996  0EFC               	movlw	high STR_34
  9402  016998  6EE6               	movwf	postinc1,c
  9403  01699A  0E01               	movlw	low (_V+231)
  9404  01699C  6EE6               	movwf	postinc1,c
  9405  01699E  0E0D               	movlw	high (_V+231)
  9406  0169A0  6EE6               	movwf	postinc1,c
  9407  0169A2  0E04               	movlw	4
  9408  0169A4  6EE6               	movwf	postinc1,c
  9409  0169A6  EC95  F0BE         	call	_sprintf	;wreg free
  9410                           
  9411                           ;gemsecs.c: 850:   return CODE_LOG;
  9412  0169AA  0E06               	movlw	6
  9413  0169AC  6E37               	movwf	btemp^0,c
  9414  0169AE  0012               	return	
  9415  0169B0                     l14061:
  9416                           
  9417                           ;gemsecs.c: 853:  if (V.response.mcode == 'S' || V.response.mcode == 's') {
  9418  0169B0  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9419  0169B6  0A53               	xorlw	83
  9420  0169B8  B4D8               	btfsc	status,2,c
  9421  0169BA  D006               	goto	u10490
  9422  0169BC  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9423  0169C2  0A73               	xorlw	115
  9424  0169C4  A4D8               	btfss	status,2,c
  9425  0169C6  D010               	goto	l14073
  9426  0169C8                     u10490:
  9427  0169C8  EE23  F01D         	lfsr	2,_V+3	;volatile
  9428  0169CC  50DF               	movf	indf2,w,c
  9429  0169CE  6E41               	movwf	(btemp+10)^0,c
  9430  0169D0  6A42               	clrf	(btemp+11)^0,c
  9431                           
  9432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9433                           ; Switch size 1, requested type "simple"
  9434                           ; Number of cases is 1, Range of values is 0 to 0
  9435                           ; switch strategies available:
  9436                           ; Name         Instructions Cycles
  9437                           ; simple_byte            4     3 (average)
  9438                           ;	Chosen strategy is simple_byte
  9439  0169D2  5042               	movf	(btemp+11)^0,w,c
  9440  0169D4  0A00               	xorlw	0	; case 0
  9441  0169D6  A4D8               	btfss	status,2,c
  9442  0169D8  D004               	goto	l14069
  9443                           
  9444                           ; Switch size 1, requested type "simple"
  9445                           ; Number of cases is 2, Range of values is 1 to 2
  9446                           ; switch strategies available:
  9447                           ; Name         Instructions Cycles
  9448                           ; simple_byte            7     4 (average)
  9449                           ;	Chosen strategy is simple_byte
  9450  0169DA  5041               	movf	(btemp+10)^0,w,c
  9451  0169DC  0A01               	xorlw	1	; case 1
  9452  0169DE  A4D8               	btfss	status,2,c
  9453  0169E0  0A03               	xorlw	3	; case 2
  9454  0169E2                     l14069:
  9455                           
  9456                           ;gemsecs.c: 862:   return CODE_SEQUENCE;
  9457  0169E2  0E0B               	movlw	11
  9458  0169E4  6E37               	movwf	btemp^0,c
  9459  0169E6  0012               	return	
  9460  0169E8                     l14073:
  9461                           
  9462                           ;gemsecs.c: 865:  if (V.response.mcode == 'D' || V.response.mcode == 'd') {
  9463  0169E8  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9464  0169EE  0A44               	xorlw	68
  9465  0169F0  B4D8               	btfsc	status,2,c
  9466  0169F2  D006               	goto	u10510
  9467  0169F4  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
  9468  0169FA  0A64               	xorlw	100
  9469  0169FC  A4D8               	btfss	status,2,c
  9470  0169FE  D718               	goto	u10370
  9471  016A00                     u10510:
  9472                           
  9473                           ;gemsecs.c: 866:   sprintf(V.info, " Debug Toggle            ");
  9474  016A00  0EAF               	movlw	low STR_35
  9475  016A02  6EE6               	movwf	postinc1,c
  9476  016A04  0EFC               	movlw	high STR_35
  9477  016A06  6EE6               	movwf	postinc1,c
  9478  016A08  0E01               	movlw	low (_V+231)
  9479  016A0A  6EE6               	movwf	postinc1,c
  9480  016A0C  0E0D               	movlw	high (_V+231)
  9481  016A0E  6EE6               	movwf	postinc1,c
  9482  016A10  0E04               	movlw	4
  9483  016A12  6EE6               	movwf	postinc1,c
  9484  016A14  EC95  F0BE         	call	_sprintf	;wreg free
  9485                           
  9486                           ;gemsecs.c: 867:   return CODE_DEBUG;
  9487  016A18  0E05               	movlw	5
  9488  016A1A  6E37               	movwf	btemp^0,c
  9489                           
  9490                           ; _s10f1_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  9491  016A1C  0012               	return		;funcret
  9492  016A1E                     __end_of_s10f1_opcmd:
  9493                           	opt callstack 0
  9494                           
  9495 ;; *************** function _parse_ll *****************
  9496 ;; Defined at:
  9497 ;;		line 703 in file "gemsecs.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;		None
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1  [STACK] void 
  9504 ;; Registers used:
  9505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/3C
  9508 ;;		On exit  : 3F/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9515 ;;Total ram usage:        0 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:    3
  9518 ;; This function calls:
  9519 ;;		Nothing
  9520 ;; This function is called by:
  9521 ;;		_s10f1_opcmd
  9522 ;; This function uses a reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text13
  9526  018930                     __ptext13:
  9527                           	opt callstack 0
  9528  018930                     _parse_ll:
  9529                           	opt callstack 24
  9530                           
  9531                           ;gemsecs.c: 705:  if (V.response.cmdlen > 1) {
  9532                           
  9533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9534                           ;incstack = 0
  9535  018930  EE23  F18E         	lfsr	2,_V+372	;volatile
  9536  018934  0E01               	movlw	1
  9537  018936  64DF               	cpfsgt	indf2,c
  9538  018938  D005               	goto	l9391
  9539  01893A  D008               	goto	l9395
  9540  01893C                     l1861:
  9541                           
  9542                           ;gemsecs.c: 716:    H33[0].data[0] = V.response.mparm & 0x03;
  9543                           ; multi bank
  9544  01893C  010D               	movlb	(_V+371) shr (0+8)	;volatile
  9545  01893E  518D               	movf	(_V+371)& (0+255),w,b	;volatile
  9546  018940  0B03               	andlw	3
  9547  018942  D001               	goto	L19
  9548  018944                     l9391:
  9549                           
  9550                           ;gemsecs.c: 719:    H33[0].data[0] = 0x01;
  9551  018944  0E01               	movlw	1
  9552  018946                     L19:
  9553  018946  0100               	movlb	0	; () banked
  9554  018948  6FDE               	movwf	(_H33+2)& (0+255),b
  9555                           
  9556                           ;gemsecs.c: 720:    break;
  9557  01894A  D026               	goto	l9399
  9558  01894C                     l9395:
  9559  01894C  EE23  F18D         	lfsr	2,_V+371	;volatile
  9560  018950  50DF               	movf	indf2,w,c
  9561  018952  6E41               	movwf	(btemp+10)^0,c
  9562  018954  6A42               	clrf	(btemp+11)^0,c
  9563                           
  9564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9565                           ; Switch size 1, requested type "simple"
  9566                           ; Number of cases is 1, Range of values is 0 to 0
  9567                           ; switch strategies available:
  9568                           ; Name         Instructions Cycles
  9569                           ; simple_byte            4     3 (average)
  9570                           ;	Chosen strategy is simple_byte
  9571  018956  5042               	movf	(btemp+11)^0,w,c
  9572  018958  0A00               	xorlw	0	; case 0
  9573  01895A  A4D8               	btfss	status,2,c
  9574  01895C  D7F3               	goto	l9391
  9575                           
  9576                           ; Switch size 1, requested type "simple"
  9577                           ; Number of cases is 9, Range of values is 49 to 99
  9578                           ; switch strategies available:
  9579                           ; Name         Instructions Cycles
  9580                           ; simple_byte           28    15 (average)
  9581                           ;	Chosen strategy is simple_byte
  9582  01895E  5041               	movf	(btemp+10)^0,w,c
  9583  018960  0A31               	xorlw	49	; case 49
  9584  018962  B4D8               	btfsc	status,2,c
  9585  018964  D7EB               	goto	l1861
  9586  018966  0A03               	xorlw	3	; case 50
  9587  018968  B4D8               	btfsc	status,2,c
  9588  01896A  D7E8               	goto	l1861
  9589  01896C  0A01               	xorlw	1	; case 51
  9590  01896E  B4D8               	btfsc	status,2,c
  9591  018970  D7E5               	goto	l1861
  9592  018972  0A72               	xorlw	114	; case 65
  9593  018974  B4D8               	btfsc	status,2,c
  9594  018976  D7E2               	goto	l1861
  9595  018978  0A03               	xorlw	3	; case 66
  9596  01897A  B4D8               	btfsc	status,2,c
  9597  01897C  D7DF               	goto	l1861
  9598  01897E  0A01               	xorlw	1	; case 67
  9599  018980  B4D8               	btfsc	status,2,c
  9600  018982  D7DC               	goto	l1861
  9601  018984  0A22               	xorlw	34	; case 97
  9602  018986  B4D8               	btfsc	status,2,c
  9603  018988  D7D9               	goto	l1861
  9604  01898A  0A03               	xorlw	3	; case 98
  9605  01898C  B4D8               	btfsc	status,2,c
  9606  01898E  D7D6               	goto	l1861
  9607  018990  0A01               	xorlw	1	; case 99
  9608  018992  B4D8               	btfsc	status,2,c
  9609  018994  D7D3               	goto	l1861
  9610  018996  D7D6               	goto	l9391
  9611  018998                     l9399:
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;gemsecs.c: 725:  V.llid = H33[0].data[0];
  9615  018998  EE23  F198         	lfsr	2,_V+382	;volatile
  9616  01899C  0060  F37B  FFDF   	movff	_H33+2,indf2
  9617                           
  9618                           ; BSR set to: 0
  9619                           ; _parse_ll: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  9620  0189A2  0012               	return		;funcret
  9621  0189A4                     __end_of_parse_ll:
  9622                           	opt callstack 0
  9623                           
  9624 ;; *************** function _parse_sid *****************
  9625 ;; Defined at:
  9626 ;;		line 731 in file "gemsecs.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;		None
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1  [STACK] void 
  9633 ;; Registers used:
  9634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/3C
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9644 ;;Total ram usage:        0 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:    3
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_secs_II_message
  9651 ;; This function uses a reentrant model
  9652 ;;
  9653                           
  9654                           	psect	text14
  9655  0189A4                     __ptext14:
  9656                           	opt callstack 0
  9657  0189A4                     _parse_sid:
  9658                           	opt callstack 25
  9659                           
  9660                           ;gemsecs.c: 733:  if (V.response.cmdlen > 1) {
  9661                           
  9662                           ; BSR set to: 0
  9663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9664                           ;incstack = 0
  9665  0189A4  EE23  F18E         	lfsr	2,_V+372	;volatile
  9666  0189A8  0E01               	movlw	1
  9667  0189AA  64DF               	cpfsgt	indf2,c
  9668  0189AC  D00A               	goto	l1885
  9669  0189AE  D00E               	goto	l9669
  9670  0189B0                     l1878:
  9671                           
  9672                           ;gemsecs.c: 744:    V.sid = V.response.mparm & 0x03;
  9673  0189B0  0063  F634  F042   	movff	_V+371,btemp+11	;volatile
  9674  0189B6  0E03               	movlw	3
  9675  0189B8  1642               	andwf	(btemp+11)^0,f,c
  9676  0189BA  0060  F108  FD99   	movff	btemp+11,_V+383	;volatile
  9677                           
  9678                           ;gemsecs.c: 745:    break;
  9679  0189C0  0012               	return	
  9680  0189C2                     l1885:
  9681                           
  9682                           ;gemsecs.c: 747:    V.sid = 0x01;
  9683  0189C2  0E01               	movlw	1
  9684  0189C4  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
  9685                           
  9686                           ;gemsecs.c: 748:    break;
  9687  0189CA  0012               	return	
  9688  0189CC                     l9669:
  9689  0189CC  EE23  F18D         	lfsr	2,_V+371	;volatile
  9690  0189D0  50DF               	movf	indf2,w,c
  9691  0189D2  6E41               	movwf	(btemp+10)^0,c
  9692  0189D4  6A42               	clrf	(btemp+11)^0,c
  9693                           
  9694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9695                           ; Switch size 1, requested type "simple"
  9696                           ; Number of cases is 1, Range of values is 0 to 0
  9697                           ; switch strategies available:
  9698                           ; Name         Instructions Cycles
  9699                           ; simple_byte            4     3 (average)
  9700                           ;	Chosen strategy is simple_byte
  9701  0189D6  5042               	movf	(btemp+11)^0,w,c
  9702  0189D8  0A00               	xorlw	0	; case 0
  9703  0189DA  A4D8               	btfss	status,2,c
  9704  0189DC  D7F2               	goto	l1885
  9705                           
  9706                           ; Switch size 1, requested type "simple"
  9707                           ; Number of cases is 9, Range of values is 49 to 99
  9708                           ; switch strategies available:
  9709                           ; Name         Instructions Cycles
  9710                           ; simple_byte           28    15 (average)
  9711                           ;	Chosen strategy is simple_byte
  9712  0189DE  5041               	movf	(btemp+10)^0,w,c
  9713  0189E0  0A31               	xorlw	49	; case 49
  9714  0189E2  B4D8               	btfsc	status,2,c
  9715  0189E4  D7E5               	goto	l1878
  9716  0189E6  0A03               	xorlw	3	; case 50
  9717  0189E8  B4D8               	btfsc	status,2,c
  9718  0189EA  D7E2               	goto	l1878
  9719  0189EC  0A01               	xorlw	1	; case 51
  9720  0189EE  B4D8               	btfsc	status,2,c
  9721  0189F0  D7DF               	goto	l1878
  9722  0189F2  0A72               	xorlw	114	; case 65
  9723  0189F4  B4D8               	btfsc	status,2,c
  9724  0189F6  D7DC               	goto	l1878
  9725  0189F8  0A03               	xorlw	3	; case 66
  9726  0189FA  B4D8               	btfsc	status,2,c
  9727  0189FC  D7D9               	goto	l1878
  9728  0189FE  0A01               	xorlw	1	; case 67
  9729  018A00  B4D8               	btfsc	status,2,c
  9730  018A02  D7D6               	goto	l1878
  9731  018A04  0A22               	xorlw	34	; case 97
  9732  018A06  B4D8               	btfsc	status,2,c
  9733  018A08  D7D3               	goto	l1878
  9734  018A0A  0A03               	xorlw	3	; case 98
  9735  018A0C  B4D8               	btfsc	status,2,c
  9736  018A0E  D7D0               	goto	l1878
  9737  018A10  0A01               	xorlw	1	; case 99
  9738  018A12  B4D8               	btfsc	status,2,c
  9739  018A14  D7CD               	goto	l1878
  9740  018A16  D7D5               	goto	l1885
  9741  018A18                     __end_of_parse_sid:
  9742                           	opt callstack 0
  9743                           
  9744 ;; *************** function _gem_messages *****************
  9745 ;; Defined at:
  9746 ;;		line 889 in file "gemsecs.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;  block           1  [STACK] PTR struct response_type
  9749 ;;		 -> secs_II_message@block(7), 
  9750 ;;  sid             1  [STACK] const unsigned char 
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1  [STACK] _Bool 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/3C
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9766 ;;Total ram usage:        0 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:    4
  9769 ;; This function calls:
  9770 ;;		_StartTimer
  9771 ;; This function is called by:
  9772 ;;		_secs_II_message
  9773 ;; This function uses a reentrant model
  9774 ;;
  9775                           
  9776                           	psect	text15
  9777  01704A                     __ptext15:
  9778                           	opt callstack 0
  9779  01704A                     _gem_messages:
  9780                           	opt callstack 24
  9781                           
  9782                           ;gemsecs.c: 889: _Bool gem_messages(response_type *block, const uint8_t sid);gemsecs.c: 
      +                          890: {;gemsecs.c: 891:  if (!V.stack)
  9783                           
  9784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9785                           ;incstack = 0
  9786  01704A  EE23  F169         	lfsr	2,_V+335	;volatile
  9787  01704E  50DF               	movf	223,w,c
  9788  017050  0B07               	andlw	7
  9789  017052  0900               	iorlw	0
  9790  017054  B4D8               	btfsc	status,2,c
  9791  017056  D0C0               	goto	l1947
  9792  017058  D0A4               	goto	l9873
  9793  01705A                     l9849:
  9794                           
  9795                           ;gemsecs.c: 896:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
  9796  01705A  EE23  F169         	lfsr	2,_V+335	;volatile
  9797  01705E  50DF               	movf	223,w,c
  9798  017060  0B07               	andlw	7
  9799  017062  0D2E               	mullw	46
  9800  017064  0EFF               	movlw	low (_S+65533)
  9801  017066  24F3               	addwf	243,w,c
  9802  017068  6ED9               	movwf	fsr2l,c
  9803  01706A  0E08               	movlw	high (_S+65533)
  9804  01706C  20F4               	addwfc	prodh,w,c
  9805  01706E  6EDA               	movwf	fsr2h,c
  9806  017070  006F FF78  F041    	movff	postinc2,btemp+10
  9807  017076  006F FF74  F042    	movff	postdec2,btemp+11
  9808  01707C  0060  F107  FFE6   	movff	btemp+10,postinc1
  9809  017082  0060  F10B  FFE6   	movff	btemp+11,postinc1
  9810  017088  0E06               	movlw	6
  9811  01708A  6EE6               	movwf	postinc1,c
  9812  01708C  EC12  F0C9         	call	_StartTimer	;wreg free
  9813                           
  9814                           ;gemsecs.c: 897:   *block = S[V.stack - 1].block;
  9815  017090  EE23  F169         	lfsr	2,_V+335	;volatile
  9816  017094  50DF               	movf	223,w,c
  9817  017096  0B07               	andlw	7
  9818  017098  0D2E               	mullw	46
  9819  01709A  0EF8               	movlw	low (_S+65526)
  9820  01709C  24F3               	addwf	243,w,c
  9821  01709E  6ED9               	movwf	fsr2l,c
  9822  0170A0  0E08               	movlw	high (_S+65526)
  9823  0170A2  20F4               	addwfc	prodh,w,c
  9824  0170A4  6EDA               	movwf	fsr2h,c
  9825                           
  9826                           ;stkvar	_block @ sp[(0)+-1]
  9827  0170A6  0EFF               	movlw	-1
  9828  0170A8  50E3               	movf	plusw1,w,c
  9829  0170AA  6EE9               	movwf	fsr0l,c
  9830  0170AC  6AEA               	clrf	fsr0h,c
  9831  0170AE  0E06               	movlw	6
  9832  0170B0                     u7021:
  9833  0170B0  006F FF6F FFEB     	movff	plusw2,plusw0
  9834  0170B6  06E8               	decf	wreg,f,c
  9835  0170B8  E2FB               	bc	u7021
  9836                           
  9837                           ;gemsecs.c: 898:   S[V.stack - 1].message.block.block.systemb = V.ticks;
  9838  0170BA  EE23  F141         	lfsr	2,_V+295	;volatile
  9839  0170BE  EE03  F169         	lfsr	0,_V+335	;volatile
  9840  0170C2  50EF               	movf	239,w,c
  9841  0170C4  0B07               	andlw	7
  9842  0170C6  0D2E               	mullw	46
  9843  0170C8  0EED               	movlw	low (_S+65515)
  9844  0170CA  24F3               	addwf	243,w,c
  9845  0170CC  6EE9               	movwf	fsr0l,c
  9846  0170CE  0E08               	movlw	high (_S+65515)
  9847  0170D0  20F4               	addwfc	prodh,w,c
  9848  0170D2  6EEA               	movwf	fsr0h,c
  9849  0170D4  006F FF7B FFEE     	movff	postinc2,postinc0
  9850  0170DA  006F FF7B FFEE     	movff	postinc2,postinc0
  9851  0170E0  006F FF7B FFEE     	movff	postinc2,postinc0
  9852  0170E6  006F FF7B FFEE     	movff	postinc2,postinc0
  9853                           
  9854                           ;gemsecs.c: 899:   V.llid = S[V.stack - 1].message.data[0];
  9855  0170EC  EE23  F169         	lfsr	2,_V+335	;volatile
  9856  0170F0  50DF               	movf	223,w,c
  9857  0170F2  0B07               	andlw	7
  9858  0170F4  0D2E               	mullw	46
  9859  0170F6  0ED6               	movlw	low (_S+65492)
  9860  0170F8  24F3               	addwf	243,w,c
  9861  0170FA  6ED9               	movwf	fsr2l,c
  9862  0170FC  0E08               	movlw	high (_S+65492)
  9863  0170FE  20F4               	addwfc	prodh,w,c
  9864  017100  6EDA               	movwf	fsr2h,c
  9865  017102  50DF               	movf	indf2,w,c
  9866  017104  6E42               	movwf	(btemp+11)^0,c
  9867  017106  0060  F108  FD98   	movff	btemp+11,_V+382	;volatile
  9868                           
  9869                           ;gemsecs.c: 900:   break;
  9870  01710C  D05A               	goto	l9875
  9871  01710E                     l9857:
  9872                           
  9873                           ;gemsecs.c: 902:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
  9874  01710E  EE23  F169         	lfsr	2,_V+335	;volatile
  9875  017112  50DF               	movf	223,w,c
  9876  017114  0B07               	andlw	7
  9877  017116  0DA6               	mullw	166
  9878  017118  0ECB               	movlw	low (_D+65533)
  9879  01711A  24F3               	addwf	243,w,c
  9880  01711C  6ED9               	movwf	fsr2l,c
  9881  01711E  0E0A               	movlw	high (_D+65533)
  9882  017120  20F4               	addwfc	prodh,w,c
  9883  017122  6EDA               	movwf	fsr2h,c
  9884  017124  006F FF78  F041    	movff	postinc2,btemp+10
  9885  01712A  006F FF74  F042    	movff	postdec2,btemp+11
  9886  017130  0060  F107  FFE6   	movff	btemp+10,postinc1
  9887  017136  0060  F10B  FFE6   	movff	btemp+11,postinc1
  9888  01713C  0E06               	movlw	6
  9889  01713E  6EE6               	movwf	postinc1,c
  9890  017140  EC12  F0C9         	call	_StartTimer	;wreg free
  9891                           
  9892                           ;gemsecs.c: 903:   *block = D[V.stack - 1].block;
  9893  017144  EE23  F169         	lfsr	2,_V+335	;volatile
  9894  017148  50DF               	movf	223,w,c
  9895  01714A  0B07               	andlw	7
  9896  01714C  0DA6               	mullw	166
  9897  01714E  0EC4               	movlw	low (_D+65526)
  9898  017150  24F3               	addwf	243,w,c
  9899  017152  6ED9               	movwf	fsr2l,c
  9900  017154  0E0A               	movlw	high (_D+65526)
  9901  017156  20F4               	addwfc	prodh,w,c
  9902  017158  6EDA               	movwf	fsr2h,c
  9903                           
  9904                           ;stkvar	_block @ sp[(0)+-1]
  9905  01715A  0EFF               	movlw	-1
  9906  01715C  50E3               	movf	plusw1,w,c
  9907  01715E  6EE9               	movwf	fsr0l,c
  9908  017160  6AEA               	clrf	fsr0h,c
  9909  017162  0E06               	movlw	6
  9910  017164                     u7031:
  9911  017164  006F FF6F FFEB     	movff	plusw2,plusw0
  9912  01716A  06E8               	decf	wreg,f,c
  9913  01716C  E2FB               	bc	u7031
  9914                           
  9915                           ;gemsecs.c: 904:   D[V.stack - 1].message.block.block.systemb = V.ticks;
  9916  01716E  EE23  F141         	lfsr	2,_V+295	;volatile
  9917  017172  EE03  F169         	lfsr	0,_V+335	;volatile
  9918  017176  50EF               	movf	239,w,c
  9919  017178  0B07               	andlw	7
  9920  01717A  0DA6               	mullw	166
  9921  01717C  0EB9               	movlw	low (_D+65515)
  9922  01717E  24F3               	addwf	243,w,c
  9923  017180  6EE9               	movwf	fsr0l,c
  9924  017182  0E0A               	movlw	high (_D+65515)
  9925  017184  20F4               	addwfc	prodh,w,c
  9926  017186  6EEA               	movwf	fsr0h,c
  9927  017188  006F FF7B FFEE     	movff	postinc2,postinc0
  9928  01718E  006F FF7B FFEE     	movff	postinc2,postinc0
  9929  017194  006F FF7B FFEE     	movff	postinc2,postinc0
  9930  01719A  006F FF7B FFEE     	movff	postinc2,postinc0
  9931                           
  9932                           ;gemsecs.c: 905:   break;
  9933  0171A0  D010               	goto	l9875
  9934  0171A2                     l9873:
  9935                           
  9936                           ;stkvar	_sid @ sp[(0)+-2]
  9937  0171A2  0EFE               	movlw	-2
  9938  0171A4  50E3               	movf	plusw1,w,c
  9939  0171A6  6E41               	movwf	(btemp+10)^0,c
  9940  0171A8  6A42               	clrf	(btemp+11)^0,c
  9941                           
  9942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9943                           ; Switch size 1, requested type "simple"
  9944                           ; Number of cases is 1, Range of values is 0 to 0
  9945                           ; switch strategies available:
  9946                           ; Name         Instructions Cycles
  9947                           ; simple_byte            4     3 (average)
  9948                           ;	Chosen strategy is simple_byte
  9949  0171AA  5042               	movf	(btemp+11)^0,w,c
  9950  0171AC  0A00               	xorlw	0	; case 0
  9951  0171AE  A4D8               	btfss	status,2,c
  9952  0171B0  D754               	goto	l9849
  9953                           
  9954                           ; Switch size 1, requested type "simple"
  9955                           ; Number of cases is 2, Range of values is 1 to 10
  9956                           ; switch strategies available:
  9957                           ; Name         Instructions Cycles
  9958                           ; simple_byte            7     4 (average)
  9959                           ;	Chosen strategy is simple_byte
  9960  0171B2  5041               	movf	(btemp+10)^0,w,c
  9961  0171B4  0A01               	xorlw	1	; case 1
  9962  0171B6  B4D8               	btfsc	status,2,c
  9963  0171B8  D750               	goto	l9849
  9964  0171BA  0A0B               	xorlw	11	; case 10
  9965  0171BC  B4D8               	btfsc	status,2,c
  9966  0171BE  D7A7               	goto	l9857
  9967  0171C0  D74C               	goto	l9849
  9968  0171C2                     l9875:
  9969                           
  9970                           ;gemsecs.c: 914:  V.stack--;
  9971  0171C2  EE23  F169         	lfsr	2,_V+335	;volatile
  9972  0171C6  50DF               	movf	223,w,c
  9973  0171C8  0B07               	andlw	7
  9974  0171CA  6E42               	movwf	(btemp+11)^0,c
  9975  0171CC  0642               	decf	(btemp+11)^0,f,c
  9976  0171CE  50DF               	movf	223,w,c
  9977  0171D0  1842               	xorwf	(btemp+11)^0,w,c
  9978  0171D2  0BF8               	andlw	-8
  9979  0171D4  1842               	xorwf	(btemp+11)^0,w,c
  9980  0171D6  6EDF               	movwf	223,c
  9981  0171D8                     l1947:
  9982                           
  9983                           ; _gem_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  9984  0171D8  52E5               	movf	postdec1,f,c
  9985  0171DA  52E5               	movf	postdec1,f,c
  9986  0171DC  0012               	return		;funcret
  9987  0171DE                     __end_of_gem_messages:
  9988                           	opt callstack 0
  9989                           
  9990 ;; *************** function _srand *****************
  9991 ;; Defined at:
  9992 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  s               2  [STACK] unsigned int 
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;		None
  9997 ;; Return value:  Size  Location     Type
  9998 ;;                  1  [STACK] void 
  9999 ;; Registers used:
 10000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
 10001 ;; Tracked objects:
 10002 ;;		On entry : 3F/0
 10003 ;;		On exit  : 3F/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10010 ;;Total ram usage:        0 bytes
 10011 ;; Hardware stack levels used:    1
 10012 ;; Hardware stack levels required when called:    3
 10013 ;; This function calls:
 10014 ;;		Nothing
 10015 ;; This function is called by:
 10016 ;;		_main
 10017 ;; This function uses a reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text16
 10021  0192CC                     __ptext16:
 10022                           	opt callstack 0
 10023  0192CC                     _srand:
 10024                           	opt callstack 27
 10025                           
 10026                           ;stkvar	_s @ sp[(0)+-2]
 10027                           
 10028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10029                           ;incstack = 0
 10030  0192CC  0EFE               	movlw	-2
 10031  0192CE  50E3               	movf	plusw1,w,c
 10032  0192D0  0FFF               	addlw	255
 10033  0192D2  6E41               	movwf	(btemp+10)^0,c
 10034  0192D4  0EFF               	movlw	-1
 10035  0192D6  006F FF8C  F042    	movff	plusw1,btemp+11
 10036  0192DC  0EFF               	movlw	255
 10037  0192DE  2242               	addwfc	(btemp+11)^0,f,c
 10038  0192E0  0060  F104  F0CD   	movff	btemp+10,_seed
 10039  0192E6  0060  F108  F0CE   	movff	btemp+11,_seed+1
 10040  0192EC  0100               	movlb	0	; () banked
 10041  0192EE  6BCF               	clrf	(_seed+2)& (0+255),b
 10042  0192F0  6BD0               	clrf	(_seed+3)& (0+255),b
 10043  0192F2  6BD1               	clrf	(_seed+4)& (0+255),b
 10044  0192F4  6BD2               	clrf	(_seed+5)& (0+255),b
 10045  0192F6  6BD3               	clrf	(_seed+6)& (0+255),b
 10046  0192F8  6BD4               	clrf	(_seed+7)& (0+255),b
 10047                           
 10048                           ; BSR set to: 0
 10049                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
 10050  0192FA  52E5               	movf	postdec1,f,c
 10051  0192FC  52E5               	movf	postdec1,f,c
 10052  0192FE  0012               	return		;funcret
 10053  019300                     __end_of_srand:
 10054                           	opt callstack 0
 10055                           
 10056 ;; *************** function _r_protocol *****************
 10057 ;; Defined at:
 10058 ;;		line 259 in file "gemsecs.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  r_link          2  [STACK] PTR enum E16792
 10061 ;;		 -> V(387), 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  rxData          1  [STACK] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  1  [STACK] enum E17052
 10066 ;; Registers used:
 10067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/3C
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10077 ;;Total ram usage:        0 bytes
 10078 ;; Hardware stack levels used:    1
 10079 ;; Hardware stack levels required when called:   14
 10080 ;; This function calls:
 10081 ;;		_StartTimer
 10082 ;;		_TimerDone
 10083 ;;		_UART1_Read
 10084 ;;		_UART1_Write
 10085 ;;		_UART1_is_rx_ready
 10086 ;;		_WaitMs
 10087 ;;		_run_checksum
 10088 ;;		_secs_II_monitor_message
 10089 ;;		_secs_gem_state
 10090 ;; This function is called by:
 10091 ;;		_main
 10092 ;; This function uses a reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text17
 10096  013A3C                     __ptext17:
 10097                           	opt callstack 0
 10098  013A3C                     _r_protocol:
 10099                           	opt callstack 0
 10100                           
 10101                           ; BSR set to: 0
 10102                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10103  013A3C  52E6               	movf	postinc1,f,c
 10104                           
 10105                           ;gemsecs.c: 259: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 260: {;gemsecs.
      +                          c: 261:  uint8_t rxData;;gemsecs.c: 262:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck, d = 1;;gemsecs.c: 264:  switch (*r_link) {
 10106                           
 10107                           ;incstack = 0
 10108  013A3E  D207               	goto	l14991
 10109  013A40                     l14843:
 10110                           
 10111                           ;gemsecs.c: 266:   if (UART1_is_rx_ready()) {
 10112  013A40  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
 10113  013A44  5037               	movf	btemp^0,w,c
 10114  013A46  B4D8               	btfsc	status,2,c
 10115  013A48  D227               	goto	l14993
 10116                           
 10117                           ;gemsecs.c: 267:    rxData = UART1_Read();
 10118  013A4A  ECD6  F0C8         	call	_UART1_Read	;wreg free
 10119                           
 10120                           ;stkvar	_rxData @ sp[(-1)+0]
 10121  013A4E  0EFF               	movlw	-1
 10122  013A50  0060  F0DF  FFE3   	movff	btemp,plusw1
 10123                           
 10124                           ; BSR set to: 57
 10125                           ;gemsecs.c: 268:    if (rxData == 0x05) {
 10126                           ;stkvar	_rxData @ sp[(-1)+0]
 10127  013A56  0EFF               	movlw	-1
 10128  013A58  006F FF8C  F037    	movff	plusw1,btemp
 10129  013A5E  0E05               	movlw	5
 10130  013A60  1837               	xorwf	btemp^0,w,c
 10131  013A62  A4D8               	btfss	status,2,c
 10132  013A64  D219               	goto	l14993
 10133                           
 10134                           ; BSR set to: 57
 10135                           
 10136                           ;gemsecs.c: 270:     do { LATEbits.LATE1 = 1; } while(0);
 10137  013A66  82BE               	bsf	190,1,c	;volatile
 10138                           
 10139                           ; BSR set to: 57
 10140                           ;gemsecs.c: 271:     V.error = LINK_ERROR_NONE;
 10141  013A68  0E0A               	movlw	10
 10142  013A6A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 10143                           
 10144                           ; BSR set to: 57
 10145                           ;gemsecs.c: 272:     *r_link = LINK_STATE_ENQ;
 10146                           ;stkvar	_r_link @ sp[(-1)+-2]
 10147  013A70  0EFD               	movlw	-3
 10148  013A72  006F FF8F FFD9     	movff	plusw1,fsr2l
 10149  013A78  0EFE               	movlw	-2
 10150  013A7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10151  013A80  0E01               	movlw	1
 10152  013A82  6EDF               	movwf	indf2,c
 10153                           
 10154                           ; BSR set to: 57
 10155                           ;gemsecs.c: 273:     if (TimerDone(TMR_HBIO))
 10156  013A84  0E06               	movlw	6
 10157  013A86  6EE6               	movwf	postinc1,c
 10158  013A88  ECE1  F0CB         	call	_TimerDone	;wreg free
 10159  013A8C  5037               	movf	btemp^0,w,c
 10160  013A8E  B4D8               	btfsc	status,2,c
 10161  013A90  D203               	goto	l14993
 10162                           
 10163                           ;gemsecs.c: 274:      StartTimer(TMR_HBIO, 5000);
 10164  013A92  0E88               	movlw	136
 10165  013A94  6EE6               	movwf	postinc1,c
 10166  013A96  0E13               	movlw	19
 10167  013A98  6EE6               	movwf	postinc1,c
 10168  013A9A  0E06               	movlw	6
 10169  013A9C  6EE6               	movwf	postinc1,c
 10170  013A9E  EC12  F0C9         	call	_StartTimer	;wreg free
 10171                           
 10172                           ;gemsecs.c: 275:    }
 10173  013AA2  D1FA               	goto	l14993
 10174  013AA4                     l1726:
 10175                           
 10176                           ;gemsecs.c: 279:   rxData_l = 0;
 10177  013AA4  6A21               	clrf	r_protocol@rxData_l^0,c
 10178                           
 10179                           ;gemsecs.c: 280:   d = 1;
 10180  013AA6  0E01               	movlw	1
 10181  013AA8  6E5A               	movwf	r_protocol@d^0,c
 10182                           
 10183                           ;gemsecs.c: 281:   b_block = (uint8_t*) & H254[0];
 10184  013AAA  0ED5               	movlw	low _H254
 10185  013AAC  6E15               	movwf	r_protocol@b_block^0,c
 10186  013AAE  0E0E               	movlw	high _H254
 10187  013AB0  6E16               	movwf	(r_protocol@b_block+1)^0,c
 10188                           
 10189                           ;gemsecs.c: 282:   UART1_Write(0x04);
 10190  013AB2  0E04               	movlw	4
 10191  013AB4  6EE6               	movwf	postinc1,c
 10192  013AB6  EC59  F0C8         	call	_UART1_Write	;wreg free
 10193                           
 10194                           ; BSR set to: 57
 10195                           ;gemsecs.c: 283:   StartTimer(TMR_T2, 3000);
 10196  013ABA  0EB8               	movlw	184
 10197  013ABC  6EE6               	movwf	postinc1,c
 10198  013ABE  0E0B               	movlw	11
 10199  013AC0  6EE6               	movwf	postinc1,c
 10200  013AC2  0E02               	movlw	2
 10201  013AC4  6EE6               	movwf	postinc1,c
 10202  013AC6  EC12  F0C9         	call	_StartTimer	;wreg free
 10203                           
 10204                           ;gemsecs.c: 284:   *r_link = LINK_STATE_EOT;
 10205                           ;stkvar	_r_link @ sp[(-1)+-2]
 10206  013ACA  0EFD               	movlw	-3
 10207  013ACC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10208  013AD2  0EFE               	movlw	-2
 10209  013AD4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10210  013ADA  0E02               	movlw	2
 10211  013ADC  D037               	goto	L21
 10212  013ADE                     l14865:
 10213                           
 10214                           ;gemsecs.c: 294:   if (TimerDone(TMR_T2)) {
 10215  013ADE  0E02               	movlw	2
 10216  013AE0  6EE6               	movwf	postinc1,c
 10217  013AE2  ECE1  F0CB         	call	_TimerDone	;wreg free
 10218  013AE6  5037               	movf	btemp^0,w,c
 10219  013AE8  B4D8               	btfsc	status,2,c
 10220  013AEA  D032               	goto	l14881
 10221                           
 10222                           ;gemsecs.c: 295:    V.timer_error++;
 10223  013AEC  EE23  F15B         	lfsr	2,_V+321	;volatile
 10224  013AF0  2ADE               	incf	postinc2,f,c
 10225  013AF2  0E00               	movlw	0
 10226  013AF4  22DD               	addwfc	postdec2,f,c
 10227                           
 10228                           ;gemsecs.c: 296:    V.all_errors++;
 10229  013AF6  EE23  F165         	lfsr	2,_V+331	;volatile
 10230  013AFA  2ADE               	incf	postinc2,f,c
 10231  013AFC  0E00               	movlw	0
 10232  013AFE  22DD               	addwfc	postdec2,f,c
 10233                           
 10234                           ;gemsecs.c: 297:    if (!retry--) {
 10235  013B00  065B               	decf	r_protocol@retry^0,f,c
 10236  013B02  285B               	incf	r_protocol@retry^0,w,c
 10237  013B04  A4D8               	btfss	status,2,c
 10238  013B06  D019               	goto	l14879
 10239                           
 10240                           ;gemsecs.c: 298:     V.error = LINK_ERROR_T2;
 10241  013B08  0E0C               	movlw	12
 10242  013B0A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 10243                           
 10244                           ;gemsecs.c: 299:     V.failed_receive = 1;
 10245  013B10  EE23  F168         	lfsr	2,_V+334	;volatile
 10246  013B14  50DF               	movf	223,w,c
 10247  013B16  0BF0               	andlw	-16
 10248  013B18  0901               	iorlw	1
 10249  013B1A  6EDF               	movwf	223,c
 10250                           
 10251                           ;gemsecs.c: 300:     V.all_errors++;
 10252  013B1C  EE23  F165         	lfsr	2,_V+331	;volatile
 10253  013B20  2ADE               	incf	postinc2,f,c
 10254  013B22  0E00               	movlw	0
 10255  013B24  22DD               	addwfc	postdec2,f,c
 10256  013B26                     l14877:
 10257                           
 10258                           ;gemsecs.c: 301:     *r_link = LINK_STATE_NAK;
 10259                           ;stkvar	_r_link @ sp[(-1)+-2]
 10260  013B26  0EFD               	movlw	-3
 10261  013B28  006F FF8F FFD9     	movff	plusw1,fsr2l
 10262  013B2E  0EFE               	movlw	-2
 10263  013B30  006F FF8F FFDA     	movff	plusw1,fsr2h
 10264  013B36  0E05               	movlw	5
 10265  013B38  D009               	goto	L21
 10266  013B3A                     l14879:
 10267                           
 10268                           ;gemsecs.c: 303:     *r_link = LINK_STATE_IDLE;
 10269                           ;stkvar	_r_link @ sp[(-1)+-2]
 10270  013B3A  0EFD               	movlw	-3
 10271  013B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10272  013B42  0EFE               	movlw	-2
 10273  013B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 10274  013B4A  0E00               	movlw	0
 10275  013B4C                     L21:
 10276  013B4C  6EDF               	movwf	indf2,c
 10277  013B4E  D1A4               	goto	l14993
 10278  013B50                     l14881:
 10279                           
 10280                           ;gemsecs.c: 306:    if (UART1_is_rx_ready()) {
 10281  013B50  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
 10282  013B54  5037               	movf	btemp^0,w,c
 10283  013B56  B4D8               	btfsc	status,2,c
 10284  013B58  D19F               	goto	l14993
 10285                           
 10286                           ;gemsecs.c: 307:     rxData = UART1_Read();
 10287  013B5A  ECD6  F0C8         	call	_UART1_Read	;wreg free
 10288                           
 10289                           ;stkvar	_rxData @ sp[(-1)+0]
 10290  013B5E  0EFF               	movlw	-1
 10291  013B60  0060  F0DF  FFE3   	movff	btemp,plusw1
 10292                           
 10293                           ; BSR set to: 57
 10294                           ;gemsecs.c: 308:     if (rxData_l == 0) {
 10295  013B66  5021               	movf	r_protocol@rxData_l^0,w,c
 10296  013B68  A4D8               	btfss	status,2,c
 10297  013B6A  D01C               	goto	l14895
 10298                           
 10299                           ; BSR set to: 57
 10300                           ;gemsecs.c: 309:      r_block.length = rxData;
 10301                           ;stkvar	_rxData @ sp[(-1)+0]
 10302  013B6C  0EFF               	movlw	-1
 10303  013B6E  006F FF8C  F086    	movff	plusw1,_r_block+12
 10304                           
 10305                           ; BSR set to: 57
 10306                           ;gemsecs.c: 310:      run_checksum(0, 1);
 10307  013B74  0E01               	movlw	1
 10308  013B76  6EE6               	movwf	postinc1,c
 10309  013B78  0E00               	movlw	0
 10310  013B7A  6EE6               	movwf	postinc1,c
 10311  013B7C  EC7A  F0CA         	call	_run_checksum	;wreg free
 10312                           
 10313                           ;gemsecs.c: 311:      rxData_l++;
 10314  013B80  2A21               	incf	r_protocol@rxData_l^0,f,c
 10315                           
 10316                           ;gemsecs.c: 312:      b_block[sizeof(header254) - rxData_l] = rxData;
 10317                           ;stkvar	_rxData @ sp[(-1)+0]
 10318  013B82  5021               	movf	r_protocol@rxData_l^0,w,c
 10319  013B84  5C15               	subwf	r_protocol@b_block^0,w,c
 10320  013B86  6E41               	movwf	(btemp+10)^0,c
 10321  013B88  0E00               	movlw	0
 10322  013B8A  5816               	subwfb	(r_protocol@b_block+1)^0,w,c
 10323  013B8C  6E42               	movwf	(btemp+11)^0,c
 10324  013B8E  0E01               	movlw	1
 10325  013B90  2441               	addwf	(btemp+10)^0,w,c
 10326  013B92  6ED9               	movwf	fsr2l,c
 10327  013B94  0E01               	movlw	1
 10328  013B96  2042               	addwfc	(btemp+11)^0,w,c
 10329  013B98  6EDA               	movwf	fsr2h,c
 10330  013B9A  0EFF               	movlw	-1
 10331  013B9C  006F FF8F FFDF     	movff	plusw1,indf2
 10332                           
 10333                           ;gemsecs.c: 313:     } else {
 10334  013BA2  D17A               	goto	l14993
 10335  013BA4                     l14895:
 10336                           
 10337                           ; BSR set to: 57
 10338                           ;gemsecs.c: 317:      if (rxData_l <= sizeof(block10))
 10339  013BA4  0E0B               	movlw	11
 10340  013BA6  6021               	cpfslt	r_protocol@rxData_l^0,c
 10341  013BA8  D00C               	goto	l14899
 10342                           
 10343                           ; BSR set to: 57
 10344                           ;gemsecs.c: 318:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 10345                           ;stkvar	_rxData @ sp[(-1)+0]
 10346  013BAA  5021               	movf	r_protocol@rxData_l^0,w,c
 10347  013BAC  0819               	sublw	low (_H10+25)
 10348  013BAE  6ED9               	movwf	fsr2l,c
 10349  013BB0  0E00               	movlw	0
 10350  013BB2  A0D8               	btfss	status,0,c
 10351  013BB4  2AE8               	incf	wreg,f,c
 10352  013BB6  0801               	sublw	high (_H10+25)
 10353  013BB8  6EDA               	movwf	fsr2h,c
 10354  013BBA  0EFF               	movlw	-1
 10355  013BBC  006F FF8F FFDF     	movff	plusw1,indf2
 10356  013BC2                     l14899:
 10357                           
 10358                           ; BSR set to: 57
 10359                           ;gemsecs.c: 320:      if (d <= 16) {
 10360  013BC2  0E11               	movlw	17
 10361  013BC4  605A               	cpfslt	r_protocol@d^0,c
 10362  013BC6  D01C               	goto	l14907
 10363                           
 10364                           ; BSR set to: 57
 10365                           ;gemsecs.c: 321:       if (rxData_l == sizeof(block10) + d) {
 10366  013BC8  5021               	movf	r_protocol@rxData_l^0,w,c
 10367  013BCA  6E41               	movwf	(btemp+10)^0,c
 10368  013BCC  6A42               	clrf	(btemp+11)^0,c
 10369  013BCE  505A               	movf	r_protocol@d^0,w,c
 10370  013BD0  6E3F               	movwf	(btemp+8)^0,c
 10371  013BD2  6A40               	clrf	(btemp+9)^0,c
 10372  013BD4  0E0A               	movlw	10
 10373  013BD6  263F               	addwf	(btemp+8)^0,f,c
 10374  013BD8  0E00               	movlw	0
 10375  013BDA  2240               	addwfc	(btemp+9)^0,f,c
 10376  013BDC  5041               	movf	(btemp+10)^0,w,c
 10377  013BDE  183F               	xorwf	(btemp+8)^0,w,c
 10378  013BE0  E10F               	bnz	l14907
 10379  013BE2  5042               	movf	(btemp+11)^0,w,c
 10380  013BE4  1840               	xorwf	(btemp+9)^0,w,c
 10381  013BE6  A4D8               	btfss	status,2,c
 10382  013BE8  D00B               	goto	l14907
 10383                           
 10384                           ; BSR set to: 57
 10385                           ;gemsecs.c: 322:        V.response.ack[d - 1] = rxData;
 10386                           ;stkvar	_rxData @ sp[(-1)+0]
 10387  013BEA  0E69               	movlw	low (_V+335)
 10388  013BEC  245A               	addwf	r_protocol@d^0,w,c
 10389  013BEE  6ED9               	movwf	fsr2l,c
 10390  013BF0  6ADA               	clrf	fsr2h,c
 10391  013BF2  0E0D               	movlw	high (_V+335)
 10392  013BF4  22DA               	addwfc	fsr2h,f,c
 10393  013BF6  0EFF               	movlw	-1
 10394  013BF8  006F FF8F FFDF     	movff	plusw1,indf2
 10395                           
 10396                           ; BSR set to: 57
 10397                           ;gemsecs.c: 323:        d++;
 10398  013BFE  2A5A               	incf	r_protocol@d^0,f,c
 10399  013C00                     l14907:
 10400                           
 10401                           ; BSR set to: 57
 10402                           ;gemsecs.c: 327:      if (rxData_l <= r_block.length)
 10403  013C00  5021               	movf	r_protocol@rxData_l^0,w,c
 10404  013C02  0100               	movlb	0	; () banked
 10405  013C04  5D86               	subwf	(_r_block+12)& (0+255),w,b
 10406  013C06  A0D8               	btfss	status,0,c
 10407  013C08  D00D               	goto	l14911
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;gemsecs.c: 328:       V.r_checksum = run_checksum(rxData, 0);
 10411  013C0A  0E00               	movlw	0
 10412  013C0C  6EE6               	movwf	postinc1,c
 10413                           
 10414                           ;stkvar	_rxData @ sp[(-2)+0]
 10415  013C0E  0EFE               	movlw	-2
 10416  013C10  50E3               	movf	plusw1,w,c
 10417  013C12  6EE6               	movwf	postinc1,c
 10418  013C14  EC7A  F0CA         	call	_run_checksum	;wreg free
 10419  013C18  0060  F0DC  FD55   	movff	btemp,_V+315	;volatile
 10420  013C1E  0060  F0E0  FD56   	movff	btemp+1,_V+316	;volatile
 10421  013C24                     l14911:
 10422                           
 10423                           ;gemsecs.c: 330:      if (rxData_l == r_block.length + 1)
 10424  013C24  5021               	movf	r_protocol@rxData_l^0,w,c
 10425  013C26  6E41               	movwf	(btemp+10)^0,c
 10426  013C28  6A42               	clrf	(btemp+11)^0,c
 10427  013C2A  0100               	movlb	0	; () banked
 10428  013C2C  5186               	movf	(_r_block+12)& (0+255),w,b
 10429  013C2E  6E3F               	movwf	(btemp+8)^0,c
 10430  013C30  6A40               	clrf	(btemp+9)^0,c
 10431  013C32  0E01               	movlw	1
 10432  013C34  263F               	addwf	(btemp+8)^0,f,c
 10433  013C36  0E00               	movlw	0
 10434  013C38  2240               	addwfc	(btemp+9)^0,f,c
 10435  013C3A  5041               	movf	(btemp+10)^0,w,c
 10436  013C3C  183F               	xorwf	(btemp+8)^0,w,c
 10437  013C3E  E109               	bnz	l14915
 10438  013C40  5042               	movf	(btemp+11)^0,w,c
 10439  013C42  1840               	xorwf	(btemp+9)^0,w,c
 10440  013C44  A4D8               	btfss	status,2,c
 10441  013C46  D005               	goto	l14915
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;gemsecs.c: 331:       H10[1].checksum = (uint16_t) rxData << 8;
 10445                           ;stkvar	_rxData @ sp[(-1)+0]
 10446  013C48  0EFF               	movlw	-1
 10447  013C4A  50E3               	movf	plusw1,w,c
 10448  013C4C  0101               	movlb	1	; () banked
 10449  013C4E  6F0E               	movwf	(_H10+14)& (0+255),b
 10450  013C50  6B0D               	clrf	(_H10+13)& (0+255),b
 10451  013C52                     l14915:
 10452                           
 10453                           ;gemsecs.c: 332:      if (rxData_l == r_block.length + 2)
 10454  013C52  5021               	movf	r_protocol@rxData_l^0,w,c
 10455  013C54  6E41               	movwf	(btemp+10)^0,c
 10456  013C56  6A42               	clrf	(btemp+11)^0,c
 10457  013C58  0100               	movlb	0	; () banked
 10458  013C5A  5186               	movf	(_r_block+12)& (0+255),w,b
 10459  013C5C  6E3F               	movwf	(btemp+8)^0,c
 10460  013C5E  6A40               	clrf	(btemp+9)^0,c
 10461  013C60  0E02               	movlw	2
 10462  013C62  263F               	addwf	(btemp+8)^0,f,c
 10463  013C64  0E00               	movlw	0
 10464  013C66  2240               	addwfc	(btemp+9)^0,f,c
 10465  013C68  5041               	movf	(btemp+10)^0,w,c
 10466  013C6A  183F               	xorwf	(btemp+8)^0,w,c
 10467  013C6C  E10A               	bnz	l14919
 10468  013C6E  5042               	movf	(btemp+11)^0,w,c
 10469  013C70  1840               	xorwf	(btemp+9)^0,w,c
 10470  013C72  A4D8               	btfss	status,2,c
 10471  013C74  D006               	goto	l14919
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;gemsecs.c: 333:       H10[1].checksum += rxData;
 10475                           ;stkvar	_rxData @ sp[(-1)+0]
 10476  013C76  0EFF               	movlw	-1
 10477  013C78  50E3               	movf	plusw1,w,c
 10478  013C7A  0101               	movlb	1	; () banked
 10479  013C7C  270D               	addwf	(_H10+13)& (0+255),f,b
 10480  013C7E  0E00               	movlw	0
 10481  013C80  230E               	addwfc	(_H10+14)& (0+255),f,b
 10482  013C82                     l14919:
 10483                           
 10484                           ;gemsecs.c: 335:      rxData_l++;
 10485  013C82  2A21               	incf	r_protocol@rxData_l^0,f,c
 10486                           
 10487                           ;gemsecs.c: 336:      b_block[sizeof(header254) - rxData_l] = rxData;
 10488                           ;stkvar	_rxData @ sp[(-1)+0]
 10489  013C84  5021               	movf	r_protocol@rxData_l^0,w,c
 10490  013C86  5C15               	subwf	r_protocol@b_block^0,w,c
 10491  013C88  6E41               	movwf	(btemp+10)^0,c
 10492  013C8A  0E00               	movlw	0
 10493  013C8C  5816               	subwfb	(r_protocol@b_block+1)^0,w,c
 10494  013C8E  6E42               	movwf	(btemp+11)^0,c
 10495  013C90  0E01               	movlw	1
 10496  013C92  2441               	addwf	(btemp+10)^0,w,c
 10497  013C94  6ED9               	movwf	fsr2l,c
 10498  013C96  0E01               	movlw	1
 10499  013C98  2042               	addwfc	(btemp+11)^0,w,c
 10500  013C9A  6EDA               	movwf	fsr2h,c
 10501  013C9C  0EFF               	movlw	-1
 10502  013C9E  006F FF8F FFDF     	movff	plusw1,indf2
 10503                           
 10504                           ;gemsecs.c: 337:      if (rxData_l > (r_block.length + 2)) {
 10505  013CA4  5021               	movf	r_protocol@rxData_l^0,w,c
 10506  013CA6  6E41               	movwf	(btemp+10)^0,c
 10507  013CA8  6A42               	clrf	(btemp+11)^0,c
 10508  013CAA  0100               	movlb	0	; () banked
 10509  013CAC  5186               	movf	(_r_block+12)& (0+255),w,b
 10510  013CAE  6E3F               	movwf	(btemp+8)^0,c
 10511  013CB0  6A40               	clrf	(btemp+9)^0,c
 10512  013CB2  0E02               	movlw	2
 10513  013CB4  263F               	addwf	(btemp+8)^0,f,c
 10514  013CB6  0E00               	movlw	0
 10515  013CB8  2240               	addwfc	(btemp+9)^0,f,c
 10516  013CBA  5041               	movf	(btemp+10)^0,w,c
 10517  013CBC  5C3F               	subwf	(btemp+8)^0,w,c
 10518  013CBE  5040               	movf	(btemp+9)^0,w,c
 10519  013CC0  0A80               	xorlw	128
 10520  013CC2  6E37               	movwf	btemp^0,c
 10521  013CC4  5042               	movf	(btemp+11)^0,w,c
 10522  013CC6  0A80               	xorlw	128
 10523  013CC8  5837               	subwfb	btemp^0,w,c
 10524  013CCA  B0D8               	btfsc	status,0,c
 10525  013CCC  D0E5               	goto	l14993
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;gemsecs.c: 338:       if (V.r_checksum == H10[1].checksum) {
 10529  013CCE  EE23  F155         	lfsr	2,_V+315	;volatile
 10530  013CD2  0101               	movlb	1	; () banked
 10531  013CD4  510D               	movf	(_H10+13)& (0+255),w,b
 10532  013CD6  18DE               	xorwf	postinc2,w,c
 10533  013CD8  E112               	bnz	l14933
 10534  013CDA  510E               	movf	(_H10+14)& (0+255),w,b
 10535  013CDC  18DE               	xorwf	postinc2,w,c
 10536  013CDE  A4D8               	btfss	status,2,c
 10537  013CE0  D00E               	goto	l14933
 10538                           
 10539                           ; BSR set to: 1
 10540                           ;gemsecs.c: 339:        *r_link = LINK_STATE_ACK;
 10541                           ;stkvar	_r_link @ sp[(-1)+-2]
 10542  013CE2  0EFD               	movlw	-3
 10543  013CE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10544  013CEA  0EFE               	movlw	-2
 10545  013CEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10546  013CF2  0E03               	movlw	3
 10547  013CF4  6EDF               	movwf	indf2,c
 10548                           
 10549                           ; BSR set to: 1
 10550  013CF6  82BE               	bsf	190,1,c	;volatile
 10551  013CF8  D0CF               	goto	l14993
 10552  013CFA                     l14931:
 10553  013CFA  ECD6  F0C8         	call	_UART1_Read	;wreg free
 10554  013CFE                     l14933:
 10555                           
 10556                           ;gemsecs.c: 342:        while (UART1_is_rx_ready())
 10557  013CFE  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
 10558  013D02  5037               	movf	btemp^0,w,c
 10559  013D04  A4D8               	btfss	status,2,c
 10560  013D06  D7F9               	goto	l14931
 10561                           
 10562                           ;gemsecs.c: 344:        WaitMs(500);
 10563  013D08  0EF4               	movlw	244
 10564  013D0A  6EE6               	movwf	postinc1,c
 10565  013D0C  0E01               	movlw	1
 10566  013D0E  6EE6               	movwf	postinc1,c
 10567  013D10  EC30  F0C9         	call	_WaitMs	;wreg free
 10568                           
 10569                           ;gemsecs.c: 345:        V.error = LINK_ERROR_CHECKSUM;
 10570  013D14  0E0F               	movlw	15
 10571  013D16  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 10572                           
 10573                           ;gemsecs.c: 346:        V.checksum_error++;
 10574  013D1C  EE23  F159         	lfsr	2,_V+319	;volatile
 10575  013D20  2ADE               	incf	postinc2,f,c
 10576  013D22  0E00               	movlw	0
 10577  013D24  22DD               	addwfc	postdec2,f,c
 10578                           
 10579                           ;gemsecs.c: 347:        V.all_errors++;
 10580  013D26  EE23  F165         	lfsr	2,_V+331	;volatile
 10581  013D2A  2ADE               	incf	postinc2,f,c
 10582  013D2C  0E00               	movlw	0
 10583  013D2E  22DD               	addwfc	postdec2,f,c
 10584                           
 10585                           ;gemsecs.c: 348:        V.failed_receive = 2;
 10586  013D30  EE23  F168         	lfsr	2,_V+334	;volatile
 10587  013D34  50DF               	movf	223,w,c
 10588  013D36  0BF0               	andlw	-16
 10589  013D38  0902               	iorlw	2
 10590  013D3A  6EDF               	movwf	223,c
 10591  013D3C  D6F4               	goto	l14877
 10592  013D3E                     l14947:
 10593                           
 10594                           ;gemsecs.c: 357:   UART1_Write(0x06);
 10595  013D3E  0E06               	movlw	6
 10596  013D40  6EE6               	movwf	postinc1,c
 10597  013D42  EC59  F0C8         	call	_UART1_Write	;wreg free
 10598                           
 10599                           ; BSR set to: 57
 10600                           ;gemsecs.c: 358:   V.stream = H10[1].block.block.stream;
 10601  013D46  0101               	movlb	1	; () banked
 10602  013D48  5116               	movf	(_H10+22)& (0+255),w,b
 10603  013D4A  0B7F               	andlw	127
 10604  013D4C  6E42               	movwf	(btemp+11)^0,c
 10605  013D4E  0060  F108  FD4D   	movff	btemp+11,_V+307	;volatile
 10606                           
 10607                           ; BSR set to: 1
 10608                           ;gemsecs.c: 359:   V.function = H10[1].block.block.function;
 10609  013D54  EE23  F14E         	lfsr	2,_V+308	;volatile
 10610  013D58  0060  F457  FFDF   	movff	_H10+21,indf2
 10611                           
 10612                           ; BSR set to: 1
 10613                           ;gemsecs.c: 360:   V.systemb = H10[1].block.block.systemb;
 10614  013D5E  EE20  F10F         	lfsr	2,_H10+15
 10615  013D62  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 10616  013D68  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 10617  013D6E  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 10618  013D74  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 10619                           
 10620                           ; BSR set to: 1
 10621                           ;gemsecs.c: 361:   V.rbit = H10[1].block.block.rbit;
 10622  013D7A  EE23  F167         	lfsr	2,_V+333	;volatile
 10623  013D7E  BF18               	btfsc	(_H10+24)& (0+255),7,b
 10624  013D80  D002               	bra	u10955
 10625  013D82  90DF               	bcf	indf2,0,c
 10626  013D84  D001               	bra	u10956
 10627  013D86                     u10955:
 10628  013D86  80DF               	bsf	indf2,0,c
 10629  013D88                     u10956:
 10630                           
 10631                           ;gemsecs.c: 362:   V.wbit = H10[1].block.block.wbit;
 10632  013D88  EE23  F167         	lfsr	2,_V+333	;volatile
 10633  013D8C  0101               	movlb	1	; () banked
 10634  013D8E  BF16               	btfsc	(_H10+22)& (0+255),7,b
 10635  013D90  D002               	bra	u10965
 10636  013D92  92DF               	bcf	indf2,1,c
 10637  013D94  D001               	bra	u10966
 10638  013D96                     u10965:
 10639  013D96  82DF               	bsf	indf2,1,c
 10640  013D98                     u10966:
 10641                           
 10642                           ;gemsecs.c: 363:   V.ebit = H10[1].block.block.ebit;
 10643  013D98  EE23  F167         	lfsr	2,_V+333	;volatile
 10644  013D9C  0101               	movlb	1	; () banked
 10645  013D9E  BF14               	btfsc	(_H10+20)& (0+255),7,b
 10646  013DA0  D002               	bra	u10975
 10647  013DA2  94DF               	bcf	indf2,2,c
 10648  013DA4  D001               	bra	u10976
 10649  013DA6                     u10975:
 10650  013DA6  84DF               	bsf	indf2,2,c
 10651  013DA8                     u10976:
 10652                           
 10653                           ;gemsecs.c: 364:   secs_II_monitor_message(V.stream, V.function, 500);
 10654  013DA8  0EF4               	movlw	244
 10655  013DAA  6EE6               	movwf	postinc1,c
 10656  013DAC  0E01               	movlw	1
 10657  013DAE  6EE6               	movwf	postinc1,c
 10658  013DB0  EE23  F14E         	lfsr	2,_V+308	;volatile
 10659  013DB4  50DF               	movf	indf2,w,c
 10660  013DB6  6EE6               	movwf	postinc1,c
 10661  013DB8  EE23  F14D         	lfsr	2,_V+307	;volatile
 10662  013DBC  50DF               	movf	indf2,w,c
 10663  013DBE  6EE6               	movwf	postinc1,c
 10664  013DC0  EC60  F0BA         	call	_secs_II_monitor_message	;wreg free
 10665                           
 10666                           ;gemsecs.c: 365:   V.g_state = secs_gem_state(V.stream, V.function);
 10667  013DC4  EE23  F14E         	lfsr	2,_V+308	;volatile
 10668  013DC8  50DF               	movf	indf2,w,c
 10669  013DCA  6EE6               	movwf	postinc1,c
 10670  013DCC  EE23  F14D         	lfsr	2,_V+307	;volatile
 10671  013DD0  50DF               	movf	indf2,w,c
 10672  013DD2  6EE6               	movwf	postinc1,c
 10673  013DD4  EC29  F0B6         	call	_secs_gem_state	;wreg free
 10674  013DD8  0060  F0DC  FC1C   	movff	btemp,_V+2	;volatile
 10675                           
 10676                           ;gemsecs.c: 366:   V.failed_receive = 0;
 10677  013DDE  EE23  F168         	lfsr	2,_V+334	;volatile
 10678  013DE2  0EF0               	movlw	-16
 10679  013DE4  16DF               	andwf	223,f,c
 10680                           
 10681                           ;gemsecs.c: 367:   *r_link = LINK_STATE_DONE;
 10682                           ;stkvar	_r_link @ sp[(-1)+-2]
 10683  013DE6  0EFD               	movlw	-3
 10684  013DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10685  013DEE  0EFE               	movlw	-2
 10686  013DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10687  013DF6  0E04               	movlw	4
 10688  013DF8  6EDF               	movwf	indf2,c
 10689                           
 10690                           ;gemsecs.c: 368:   V.abort = LINK_ERROR_NONE;
 10691  013DFA  0E0A               	movlw	10
 10692  013DFC  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 10693                           
 10694                           ;gemsecs.c: 370:   break;
 10695  013E02  D04A               	goto	l14993
 10696  013E04                     l14971:
 10697                           
 10698                           ;gemsecs.c: 372:   UART1_Write(0x15);
 10699  013E04  0E15               	movlw	21
 10700  013E06  6EE6               	movwf	postinc1,c
 10701  013E08  EC59  F0C8         	call	_UART1_Write	;wreg free
 10702                           
 10703                           ; BSR set to: 57
 10704                           ;gemsecs.c: 373:   *r_link = LINK_STATE_ERROR;
 10705                           ;stkvar	_r_link @ sp[(-1)+-2]
 10706  013E0C  0EFD               	movlw	-3
 10707  013E0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10708  013E14  0EFE               	movlw	-2
 10709  013E16  006F FF8F FFDA     	movff	plusw1,fsr2h
 10710  013E1C  0E06               	movlw	6
 10711  013E1E  6EDF               	movwf	indf2,c
 10712                           
 10713                           ; BSR set to: 57
 10714                           ;gemsecs.c: 374:   V.all_errors++;
 10715  013E20  EE23  F165         	lfsr	2,_V+331	;volatile
 10716  013E24  2ADE               	incf	postinc2,f,c
 10717  013E26  0E00               	movlw	0
 10718  013E28  22DD               	addwfc	postdec2,f,c
 10719                           
 10720                           ;gemsecs.c: 375:   while ((uart1RxCount)) {
 10721  013E2A  D002               	goto	l14979
 10722  013E2C                     l14977:
 10723                           
 10724                           ; BSR set to: 57
 10725                           ;gemsecs.c: 376:    UART1_Read();
 10726  013E2C  ECD6  F0C8         	call	_UART1_Read	;wreg free
 10727  013E30                     l14979:
 10728                           
 10729                           ; BSR set to: 57
 10730                           ;gemsecs.c: 375:   while ((uart1RxCount)) {
 10731  013E30  502A               	movf	_uart1RxCount^0,w,c	;volatile
 10732  013E32  A4D8               	btfss	status,2,c
 10733  013E34  D7FB               	goto	l14977
 10734                           
 10735                           ; BSR set to: 57
 10736                           ;gemsecs.c: 378:   retry = 3;
 10737  013E36  0E03               	movlw	3
 10738  013E38  6E5B               	movwf	r_protocol@retry^0,c
 10739                           
 10740                           ;gemsecs.c: 379:   break;
 10741  013E3A  D02E               	goto	l14993
 10742  013E3C                     l14983:
 10743                           
 10744                           ;gemsecs.c: 383:   V.failed_receive = 0;
 10745  013E3C  EE23  F168         	lfsr	2,_V+334	;volatile
 10746  013E40  0EF0               	movlw	-16
 10747  013E42  16DF               	andwf	223,f,c
 10748                           
 10749                           ;gemsecs.c: 384:   V.abort = LINK_ERROR_NONE;
 10750  013E44  0E0A               	movlw	10
 10751  013E46  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 10752  013E4C  D676               	goto	l14879
 10753  013E4E                     l14991:
 10754                           
 10755                           ;stkvar	_r_link @ sp[(-1)+-2]
 10756  013E4E  0EFD               	movlw	-3
 10757  013E50  006F FF8F FFD9     	movff	plusw1,fsr2l
 10758  013E56  0EFE               	movlw	-2
 10759  013E58  006F FF8F FFDA     	movff	plusw1,fsr2h
 10760  013E5E  50DF               	movf	indf2,w,c
 10761  013E60  6E41               	movwf	(btemp+10)^0,c
 10762  013E62  6A42               	clrf	(btemp+11)^0,c
 10763                           
 10764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10765                           ; Switch size 1, requested type "simple"
 10766                           ; Number of cases is 1, Range of values is 0 to 0
 10767                           ; switch strategies available:
 10768                           ; Name         Instructions Cycles
 10769                           ; simple_byte            4     3 (average)
 10770                           ;	Chosen strategy is simple_byte
 10771  013E64  5042               	movf	(btemp+11)^0,w,c
 10772  013E66  0A00               	xorlw	0	; case 0
 10773  013E68  A4D8               	btfss	status,2,c
 10774  013E6A  D667               	goto	l14879
 10775                           
 10776                           ; Switch size 1, requested type "simple"
 10777                           ; Number of cases is 7, Range of values is 0 to 6
 10778                           ; switch strategies available:
 10779                           ; Name         Instructions Cycles
 10780                           ; simple_byte           22    12 (average)
 10781                           ;	Chosen strategy is simple_byte
 10782  013E6C  5041               	movf	(btemp+10)^0,w,c
 10783  013E6E  0A00               	xorlw	0	; case 0
 10784  013E70  B4D8               	btfsc	status,2,c
 10785  013E72  D5E6               	goto	l14843
 10786  013E74  0A01               	xorlw	1	; case 1
 10787  013E76  B4D8               	btfsc	status,2,c
 10788  013E78  D615               	goto	l1726
 10789  013E7A  0A03               	xorlw	3	; case 2
 10790  013E7C  B4D8               	btfsc	status,2,c
 10791  013E7E  D62F               	goto	l14865
 10792  013E80  0A01               	xorlw	1	; case 3
 10793  013E82  B4D8               	btfsc	status,2,c
 10794  013E84  D75C               	goto	l14947
 10795  013E86  0A07               	xorlw	7	; case 4
 10796  013E88  B4D8               	btfsc	status,2,c
 10797  013E8A  D7D8               	goto	l14983
 10798  013E8C  0A01               	xorlw	1	; case 5
 10799  013E8E  B4D8               	btfsc	status,2,c
 10800  013E90  D7B9               	goto	l14971
 10801  013E92  0A03               	xorlw	3	; case 6
 10802  013E94  A4D8               	btfss	status,2,c
 10803  013E96  D651               	goto	l14879
 10804  013E98                     l14993:
 10805                           
 10806                           ;gemsecs.c: 391:  return *r_link;
 10807                           ;stkvar	_r_link @ sp[(-1)+-2]
 10808  013E98  0EFD               	movlw	-3
 10809  013E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10810  013EA0  0EFE               	movlw	-2
 10811  013EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10812  013EA8  50DF               	movf	indf2,w,c
 10813  013EAA  6E37               	movwf	btemp^0,c
 10814                           
 10815                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 10816  013EAC  52E5               	movf	postdec1,f,c
 10817  013EAE  52E5               	movf	postdec1,f,c
 10818  013EB0  52E5               	movf	postdec1,f,c
 10819  013EB2  0012               	return		;funcret
 10820  013EB4                     __end_of_r_protocol:
 10821                           	opt callstack 0
 10822                           
 10823 ;; *************** function _UART1_Write *****************
 10824 ;; Defined at:
 10825 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  txData          1  [STACK] unsigned char 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1  [STACK] void 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/3C
 10836 ;;		On exit  : 3F/39
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10843 ;;Total ram usage:        0 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    3
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_r_protocol
 10850 ;;		_t_protocol
 10851 ;;		_secs_send
 10852 ;; This function uses a reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text18
 10856  0190B2                     __ptext18:
 10857                           	opt callstack 0
 10858  0190B2                     _UART1_Write:
 10859                           	opt callstack 25
 10860                           
 10861                           ;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 10862                           
 10863                           ;mcc_generated_files/uart1.c: 180: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 181: {;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 10864                           
 10865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10866                           ;incstack = 0
 10867  0190B2  502D               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 10868  0190B4  B4D8               	btfsc	status,2,c
 10869  0190B6  D7FD               	goto	_UART1_Write
 10870                           
 10871                           ;mcc_generated_files/uart1.c: 185:  if (0 == PIE3bits.U1TXIE) {
 10872  0190B8  0139               	movlb	57	; () banked
 10873  0190BA  B993               	btfsc	147,4,b	;volatile
 10874  0190BC  D005               	goto	l550
 10875                           
 10876                           ; BSR set to: 57
 10877                           ;mcc_generated_files/uart1.c: 186:   U1TXB = txData;
 10878                           ;stkvar	_txData @ sp[(0)+-1]
 10879  0190BE  0EFF               	movlw	-1
 10880  0190C0  006F FF8F FDEA     	movff	plusw1,15850	;volatile
 10881                           
 10882                           ;mcc_generated_files/uart1.c: 187:  } else {
 10883  0190C6  D011               	goto	l9435
 10884  0190C8                     l550:
 10885                           
 10886                           ; BSR set to: 57
 10887                           ;mcc_generated_files/uart1.c: 188:   PIE3bits.U1TXIE = 0;
 10888  0190C8  9993               	bcf	147,4,b	;volatile
 10889                           
 10890                           ; BSR set to: 57
 10891                           ;mcc_generated_files/uart1.c: 189:   uart1TxBuffer[uart1TxHead++] = txData;
 10892                           ;stkvar	_txData @ sp[(0)+-1]
 10893  0190CA  0E40               	movlw	low _uart1TxBuffer
 10894  0190CC  242F               	addwf	_uart1TxHead^0,w,c	;volatile
 10895  0190CE  6ED9               	movwf	fsr2l,c
 10896  0190D0  6ADA               	clrf	fsr2h,c
 10897  0190D2  0E02               	movlw	high _uart1TxBuffer
 10898  0190D4  22DA               	addwfc	fsr2h,f,c
 10899  0190D6  0EFF               	movlw	-1
 10900  0190D8  006F FF8F FFDF     	movff	plusw1,indf2
 10901                           
 10902                           ; BSR set to: 57
 10903  0190DE  2A2F               	incf	_uart1TxHead^0,f,c	;volatile
 10904                           
 10905                           ; BSR set to: 57
 10906                           ;mcc_generated_files/uart1.c: 190:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
 10907  0190E0  0E3F               	movlw	63
 10908  0190E2  642F               	cpfsgt	_uart1TxHead^0,c
 10909  0190E4  D001               	goto	l9433
 10910                           
 10911                           ; BSR set to: 57
 10912                           ;mcc_generated_files/uart1.c: 191:    uart1TxHead = 0;
 10913  0190E6  6A2F               	clrf	_uart1TxHead^0,c	;volatile
 10914  0190E8                     l9433:
 10915                           
 10916                           ; BSR set to: 57
 10917                           ;mcc_generated_files/uart1.c: 193:   uart1TxBufferRemaining--;
 10918  0190E8  062D               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 10919  0190EA                     l9435:
 10920                           
 10921                           ; BSR set to: 57
 10922                           ;mcc_generated_files/uart1.c: 195:  PIE3bits.U1TXIE = 1;
 10923  0190EA  8993               	bsf	147,4,b	;volatile
 10924                           
 10925                           ; BSR set to: 57
 10926  0190EC  92BE               	bcf	190,1,c	;volatile
 10927                           
 10928                           ; BSR set to: 57
 10929                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 10930  0190EE  52E5               	movf	postdec1,f,c
 10931  0190F0  0012               	return		;funcret
 10932  0190F2                     __end_of_UART1_Write:
 10933                           	opt callstack 0
 10934                           
 10935 ;; *************** function _m_protocol *****************
 10936 ;; Defined at:
 10937 ;;		line 54 in file "gemsecs.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  m_link          2  [STACK] PTR enum E16792
 10940 ;;		 -> V(387), 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;  rxData          1  [STACK] unsigned char 
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1  [STACK] enum E17052
 10945 ;; Registers used:
 10946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/3C
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10956 ;;Total ram usage:        0 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:   14
 10959 ;; This function calls:
 10960 ;;		_StartTimer
 10961 ;;		_TimerDone
 10962 ;;		_UART1_Read
 10963 ;;		_UART1_is_rx_ready
 10964 ;;		_UART2_Read
 10965 ;;		_UART2_is_rx_ready
 10966 ;;		_WaitMs
 10967 ;;		_run_checksum
 10968 ;;		_secs_II_monitor_message
 10969 ;;		_secs_gem_state
 10970 ;; This function is called by:
 10971 ;;		_main
 10972 ;; This function uses a reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text19
 10976  012ED4                     __ptext19:
 10977                           	opt callstack 0
 10978  012ED4                     _m_protocol:
 10979                           	opt callstack 0
 10980                           
 10981                           ; BSR set to: 57
 10982                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10983  012ED4  52E6               	movf	postinc1,f,c
 10984                           
 10985                           ;gemsecs.c: 54: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 55: {;gemsecs.c: 
      +                          56:  uint8_t rxData;;gemsecs.c: 57:  static uint8_t rxData_l = 0, *b_block = (uint8_t*) 
      +                          & H254[0];;gemsecs.c: 59:  switch (*m_link) {
 10986                           
 10987                           ;incstack = 0
 10988  012ED6  D326               	goto	l15385
 10989  012ED8                     l15155:
 10990                           
 10991                           ;gemsecs.c: 64:   if (UART1_is_rx_ready()) {
 10992  012ED8  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
 10993  012EDC  5037               	movf	btemp^0,w,c
 10994  012EDE  B4D8               	btfsc	status,2,c
 10995  012EE0  D028               	goto	l15169
 10996                           
 10997                           ;gemsecs.c: 65:    rxData = UART1_Read();
 10998  012EE2  ECD6  F0C8         	call	_UART1_Read	;wreg free
 10999                           
 11000                           ;stkvar	_rxData @ sp[(-1)+0]
 11001  012EE6  0EFF               	movlw	-1
 11002  012EE8  0060  F0DF  FFE3   	movff	btemp,plusw1
 11003                           
 11004                           ; BSR set to: 57
 11005                           ;gemsecs.c: 66:    if (rxData == 0x05) {
 11006                           ;stkvar	_rxData @ sp[(-1)+0]
 11007  012EEE  0EFF               	movlw	-1
 11008  012EF0  006F FF8C  F037    	movff	plusw1,btemp
 11009  012EF6  0E05               	movlw	5
 11010  012EF8  1837               	xorwf	btemp^0,w,c
 11011  012EFA  A4D8               	btfss	status,2,c
 11012  012EFC  D01A               	goto	l15169
 11013                           
 11014                           ; BSR set to: 57
 11015                           ;gemsecs.c: 68:     V.uart = 1;
 11016  012EFE  0E01               	movlw	1
 11017  012F00  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 11018                           
 11019                           ; BSR set to: 57
 11020                           ;gemsecs.c: 69:     StartTimer(TMR_T2, 3000);
 11021  012F06  0EB8               	movlw	184
 11022  012F08  6EE6               	movwf	postinc1,c
 11023  012F0A  0E0B               	movlw	11
 11024  012F0C  6EE6               	movwf	postinc1,c
 11025  012F0E  0E02               	movlw	2
 11026  012F10  6EE6               	movwf	postinc1,c
 11027  012F12  EC12  F0C9         	call	_StartTimer	;wreg free
 11028                           
 11029                           ;gemsecs.c: 70:     V.error = LINK_ERROR_NONE;
 11030  012F16  0E0A               	movlw	10
 11031  012F18  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11032                           
 11033                           ;gemsecs.c: 71:     *m_link = LINK_STATE_ENQ;
 11034                           ;stkvar	_m_link @ sp[(-1)+-2]
 11035  012F1E  0EFD               	movlw	-3
 11036  012F20  006F FF8F FFD9     	movff	plusw1,fsr2l
 11037  012F26  0EFE               	movlw	-2
 11038  012F28  006F FF8F FFDA     	movff	plusw1,fsr2h
 11039  012F2E  0E01               	movlw	1
 11040  012F30  6EDF               	movwf	indf2,c
 11041  012F32                     l15169:
 11042                           
 11043                           ;gemsecs.c: 74:   if (UART2_is_rx_ready()) {
 11044  012F32  EC59  F0CD         	call	_UART2_is_rx_ready	;wreg free
 11045  012F36  5037               	movf	btemp^0,w,c
 11046  012F38  B4D8               	btfsc	status,2,c
 11047  012F3A  D319               	goto	l15387
 11048                           
 11049                           ;gemsecs.c: 75:    rxData = UART2_Read();
 11050  012F3C  ECB8  F0C8         	call	_UART2_Read	;wreg free
 11051                           
 11052                           ;stkvar	_rxData @ sp[(-1)+0]
 11053  012F40  0EFF               	movlw	-1
 11054  012F42  0060  F0DF  FFE3   	movff	btemp,plusw1
 11055                           
 11056                           ; BSR set to: 57
 11057                           ;gemsecs.c: 76:    if (rxData == 0x05) {
 11058                           ;stkvar	_rxData @ sp[(-1)+0]
 11059  012F48  0EFF               	movlw	-1
 11060  012F4A  006F FF8C  F037    	movff	plusw1,btemp
 11061  012F50  0E05               	movlw	5
 11062  012F52  1837               	xorwf	btemp^0,w,c
 11063  012F54  A4D8               	btfss	status,2,c
 11064  012F56  D30B               	goto	l15387
 11065                           
 11066                           ; BSR set to: 57
 11067                           ;gemsecs.c: 78:     V.uart = 2;
 11068  012F58  0E02               	movlw	2
 11069  012F5A  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 11070                           
 11071                           ; BSR set to: 57
 11072                           ;gemsecs.c: 79:     StartTimer(TMR_T2, 3000);
 11073  012F60  0EB8               	movlw	184
 11074  012F62  6EE6               	movwf	postinc1,c
 11075  012F64  0E0B               	movlw	11
 11076  012F66  6EE6               	movwf	postinc1,c
 11077  012F68  0E02               	movlw	2
 11078  012F6A  6EE6               	movwf	postinc1,c
 11079  012F6C  EC12  F0C9         	call	_StartTimer	;wreg free
 11080                           
 11081                           ;gemsecs.c: 80:     V.error = LINK_ERROR_NONE;
 11082  012F70  0E0A               	movlw	10
 11083  012F72  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11084                           
 11085                           ;gemsecs.c: 81:     *m_link = LINK_STATE_ENQ;
 11086                           ;stkvar	_m_link @ sp[(-1)+-2]
 11087  012F78  0EFD               	movlw	-3
 11088  012F7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11089  012F80  0EFE               	movlw	-2
 11090  012F82  006F FF8F FFDA     	movff	plusw1,fsr2h
 11091  012F88  0E01               	movlw	1
 11092  012F8A  D2CA               	goto	L29
 11093  012F8C                     l1660:
 11094                           
 11095                           ;gemsecs.c: 86:   rxData_l = 0;
 11096  012F8C  6A22               	clrf	m_protocol@rxData_l^0,c
 11097                           
 11098                           ;gemsecs.c: 87:   if (TimerDone(TMR_T2)) {
 11099  012F8E  0E02               	movlw	2
 11100  012F90  6EE6               	movwf	postinc1,c
 11101  012F92  ECE1  F0CB         	call	_TimerDone	;wreg free
 11102  012F96  5037               	movf	btemp^0,w,c
 11103  012F98  B4D8               	btfsc	status,2,c
 11104  012F9A  D01E               	goto	l15193
 11105                           
 11106                           ;gemsecs.c: 88:    V.error = LINK_ERROR_T2;
 11107  012F9C  0E0C               	movlw	12
 11108  012F9E  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11109                           
 11110                           ;gemsecs.c: 89:    V.all_errors++;
 11111  012FA4  EE23  F165         	lfsr	2,_V+331	;volatile
 11112  012FA8  2ADE               	incf	postinc2,f,c
 11113  012FAA  0E00               	movlw	0
 11114  012FAC  22DD               	addwfc	postdec2,f,c
 11115                           
 11116                           ;gemsecs.c: 90:    V.timer_error++;
 11117  012FAE  EE23  F15B         	lfsr	2,_V+321	;volatile
 11118  012FB2  2ADE               	incf	postinc2,f,c
 11119  012FB4  0E00               	movlw	0
 11120  012FB6  22DD               	addwfc	postdec2,f,c
 11121                           
 11122                           ;gemsecs.c: 91:    V.failed_receive = 2;
 11123  012FB8  EE23  F168         	lfsr	2,_V+334	;volatile
 11124  012FBC  50DF               	movf	223,w,c
 11125  012FBE  0BF0               	andlw	-16
 11126  012FC0  0902               	iorlw	2
 11127  012FC2  6EDF               	movwf	223,c
 11128                           
 11129                           ;gemsecs.c: 92:    *m_link = LINK_STATE_NAK;
 11130                           ;stkvar	_m_link @ sp[(-1)+-2]
 11131  012FC4  0EFD               	movlw	-3
 11132  012FC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11133  012FCC  0EFE               	movlw	-2
 11134  012FCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11135  012FD4  0E05               	movlw	5
 11136  012FD6  D2A4               	goto	L29
 11137  012FD8                     l15193:
 11138                           
 11139                           ;gemsecs.c: 110:    if (V.uart == 2 && UART1_is_rx_ready()) {
 11140  012FD8  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 11141  012FDE  0A02               	xorlw	2
 11142  012FE0  A4D8               	btfss	status,2,c
 11143  012FE2  D029               	goto	l15207
 11144  012FE4  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
 11145  012FE8  5037               	movf	btemp^0,w,c
 11146  012FEA  B4D8               	btfsc	status,2,c
 11147  012FEC  D024               	goto	l15207
 11148                           
 11149                           ;gemsecs.c: 111:     rxData = UART1_Read();
 11150  012FEE  ECD6  F0C8         	call	_UART1_Read	;wreg free
 11151                           
 11152                           ;stkvar	_rxData @ sp[(-1)+0]
 11153  012FF2  0EFF               	movlw	-1
 11154  012FF4  0060  F0DF  FFE3   	movff	btemp,plusw1
 11155                           
 11156                           ; BSR set to: 57
 11157                           ;gemsecs.c: 112:     if (rxData == 0x04) {
 11158                           ;stkvar	_rxData @ sp[(-1)+0]
 11159  012FFA  0EFF               	movlw	-1
 11160  012FFC  006F FF8C  F037    	movff	plusw1,btemp
 11161  013002  0E04               	movlw	4
 11162  013004  1837               	xorwf	btemp^0,w,c
 11163  013006  A4D8               	btfss	status,2,c
 11164  013008  D016               	goto	l15207
 11165                           
 11166                           ; BSR set to: 57
 11167                           ;gemsecs.c: 113:      StartTimer(TMR_T2, 3000);
 11168  01300A  0EB8               	movlw	184
 11169  01300C  6EE6               	movwf	postinc1,c
 11170  01300E  0E0B               	movlw	11
 11171  013010  6EE6               	movwf	postinc1,c
 11172  013012  0E02               	movlw	2
 11173  013014  6EE6               	movwf	postinc1,c
 11174  013016  EC12  F0C9         	call	_StartTimer	;wreg free
 11175                           
 11176                           ;gemsecs.c: 114:      V.error = LINK_ERROR_NONE;
 11177  01301A  0E0A               	movlw	10
 11178  01301C  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11179                           
 11180                           ;gemsecs.c: 115:      *m_link = LINK_STATE_EOT;
 11181                           ;stkvar	_m_link @ sp[(-1)+-2]
 11182  013022  0EFD               	movlw	-3
 11183  013024  006F FF8F FFD9     	movff	plusw1,fsr2l
 11184  01302A  0EFE               	movlw	-2
 11185  01302C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11186  013032  0E02               	movlw	2
 11187  013034  6EDF               	movwf	indf2,c
 11188  013036                     l15207:
 11189                           
 11190                           ;gemsecs.c: 118:    if (V.uart == 1 && UART2_is_rx_ready()) {
 11191  013036  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 11192  01303C  0A01               	xorlw	1
 11193  01303E  A4D8               	btfss	status,2,c
 11194  013040  D296               	goto	l15387
 11195  013042  EC59  F0CD         	call	_UART2_is_rx_ready	;wreg free
 11196  013046  5037               	movf	btemp^0,w,c
 11197  013048  B4D8               	btfsc	status,2,c
 11198  01304A  D291               	goto	l15387
 11199                           
 11200                           ;gemsecs.c: 119:     rxData = UART2_Read();
 11201  01304C  ECB8  F0C8         	call	_UART2_Read	;wreg free
 11202                           
 11203                           ;stkvar	_rxData @ sp[(-1)+0]
 11204  013050  0EFF               	movlw	-1
 11205  013052  0060  F0DF  FFE3   	movff	btemp,plusw1
 11206                           
 11207                           ; BSR set to: 57
 11208                           ;gemsecs.c: 120:     if (rxData == 0x04) {
 11209                           ;stkvar	_rxData @ sp[(-1)+0]
 11210  013058  0EFF               	movlw	-1
 11211  01305A  006F FF8C  F037    	movff	plusw1,btemp
 11212  013060  0E04               	movlw	4
 11213  013062  1837               	xorwf	btemp^0,w,c
 11214  013064  A4D8               	btfss	status,2,c
 11215  013066  D283               	goto	l15387
 11216                           
 11217                           ; BSR set to: 57
 11218                           ;gemsecs.c: 121:      StartTimer(TMR_T2, 3000);
 11219  013068  0EB8               	movlw	184
 11220  01306A  6EE6               	movwf	postinc1,c
 11221  01306C  0E0B               	movlw	11
 11222  01306E  6EE6               	movwf	postinc1,c
 11223  013070  0E02               	movlw	2
 11224  013072  6EE6               	movwf	postinc1,c
 11225  013074  EC12  F0C9         	call	_StartTimer	;wreg free
 11226                           
 11227                           ;gemsecs.c: 122:      V.error = LINK_ERROR_NONE;
 11228  013078  0E0A               	movlw	10
 11229  01307A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11230                           
 11231                           ;gemsecs.c: 123:      *m_link = LINK_STATE_EOT;
 11232                           ;stkvar	_m_link @ sp[(-1)+-2]
 11233  013080  0EFD               	movlw	-3
 11234  013082  006F FF8F FFD9     	movff	plusw1,fsr2l
 11235  013088  0EFE               	movlw	-2
 11236  01308A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11237  013090  0E02               	movlw	2
 11238  013092  D246               	goto	L29
 11239  013094                     l15221:
 11240                           
 11241                           ;gemsecs.c: 130:   if (TimerDone(TMR_T2)) {
 11242  013094  0E02               	movlw	2
 11243  013096  6EE6               	movwf	postinc1,c
 11244  013098  ECE1  F0CB         	call	_TimerDone	;wreg free
 11245  01309C  5037               	movf	btemp^0,w,c
 11246  01309E  B4D8               	btfsc	status,2,c
 11247  0130A0  D00C               	goto	l15231
 11248                           
 11249                           ;gemsecs.c: 131:    V.error = LINK_ERROR_T2;
 11250  0130A2  0E0C               	movlw	12
 11251  0130A4  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11252                           
 11253                           ;gemsecs.c: 132:    V.timer_error++;
 11254  0130AA  EE23  F15B         	lfsr	2,_V+321	;volatile
 11255  0130AE  2ADE               	incf	postinc2,f,c
 11256  0130B0  0E00               	movlw	0
 11257  0130B2  22DD               	addwfc	postdec2,f,c
 11258                           
 11259                           ;gemsecs.c: 133:    V.all_errors++;
 11260  0130B4  EE23  F165         	lfsr	2,_V+331	;volatile
 11261  0130B8  D77C               	goto	L25
 11262  0130BA                     l15231:
 11263                           
 11264                           ;gemsecs.c: 137:    if (V.uart == 1 && UART1_is_rx_ready()) {
 11265  0130BA  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 11266  0130C0  0A01               	xorlw	1
 11267  0130C2  A4D8               	btfss	status,2,c
 11268  0130C4  D0D7               	goto	l15289
 11269  0130C6  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
 11270  0130CA  5037               	movf	btemp^0,w,c
 11271  0130CC  B4D8               	btfsc	status,2,c
 11272  0130CE  D0D2               	goto	l15289
 11273                           
 11274                           ;gemsecs.c: 138:     rxData = UART1_Read();
 11275  0130D0  ECD6  F0C8         	call	_UART1_Read	;wreg free
 11276                           
 11277                           ;stkvar	_rxData @ sp[(-1)+0]
 11278  0130D4  0EFF               	movlw	-1
 11279  0130D6  0060  F0DF  FFE3   	movff	btemp,plusw1
 11280                           
 11281                           ; BSR set to: 57
 11282                           ;gemsecs.c: 139:     if (rxData_l == 0) {
 11283  0130DC  5022               	movf	m_protocol@rxData_l^0,w,c
 11284  0130DE  A4D8               	btfss	status,2,c
 11285  0130E0  D018               	goto	l15247
 11286                           
 11287                           ; BSR set to: 57
 11288                           ;gemsecs.c: 140:      r_block.length = rxData;
 11289                           ;stkvar	_rxData @ sp[(-1)+0]
 11290  0130E2  0EFF               	movlw	-1
 11291  0130E4  006F FF8C  F086    	movff	plusw1,_r_block+12
 11292                           
 11293                           ; BSR set to: 57
 11294                           ;gemsecs.c: 141:      run_checksum(0, 1);
 11295  0130EA  0E01               	movlw	1
 11296  0130EC  6EE6               	movwf	postinc1,c
 11297  0130EE  0E00               	movlw	0
 11298  0130F0  6EE6               	movwf	postinc1,c
 11299  0130F2  EC7A  F0CA         	call	_run_checksum	;wreg free
 11300                           
 11301                           ;gemsecs.c: 142:      rxData_l++;
 11302  0130F6  2A22               	incf	m_protocol@rxData_l^0,f,c
 11303                           
 11304                           ;gemsecs.c: 143:      b_block[sizeof(header254) - rxData_l] = rxData;
 11305                           ;stkvar	_rxData @ sp[(-1)+0]
 11306  0130F8  5022               	movf	m_protocol@rxData_l^0,w,c
 11307  0130FA  08D6               	sublw	low (_H254+257)
 11308  0130FC  6ED9               	movwf	fsr2l,c
 11309  0130FE  0E00               	movlw	0
 11310  013100  A0D8               	btfss	status,0,c
 11311  013102  2AE8               	incf	wreg,f,c
 11312  013104  080F               	sublw	high (_H254+257)
 11313  013106  6EDA               	movwf	fsr2h,c
 11314  013108  0EFF               	movlw	-1
 11315  01310A  006F FF8F FFDF     	movff	plusw1,indf2
 11316                           
 11317                           ;gemsecs.c: 144:     } else {
 11318  013110  D0B1               	goto	l15289
 11319  013112                     l15247:
 11320                           
 11321                           ; BSR set to: 57
 11322                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
 11323  013112  0E0B               	movlw	11
 11324  013114  6022               	cpfslt	m_protocol@rxData_l^0,c
 11325  013116  D00C               	goto	l15251
 11326                           
 11327                           ; BSR set to: 57
 11328                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 11329                           ;stkvar	_rxData @ sp[(-1)+0]
 11330  013118  5022               	movf	m_protocol@rxData_l^0,w,c
 11331  01311A  0819               	sublw	low (_H10+25)
 11332  01311C  6ED9               	movwf	fsr2l,c
 11333  01311E  0E00               	movlw	0
 11334  013120  A0D8               	btfss	status,0,c
 11335  013122  2AE8               	incf	wreg,f,c
 11336  013124  0801               	sublw	high (_H10+25)
 11337  013126  6EDA               	movwf	fsr2h,c
 11338  013128  0EFF               	movlw	-1
 11339  01312A  006F FF8F FFDF     	movff	plusw1,indf2
 11340  013130                     l15251:
 11341                           
 11342                           ; BSR set to: 57
 11343                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
 11344  013130  5022               	movf	m_protocol@rxData_l^0,w,c
 11345  013132  0100               	movlb	0	; () banked
 11346  013134  5D86               	subwf	(_r_block+12)& (0+255),w,b
 11347  013136  A0D8               	btfss	status,0,c
 11348  013138  D00D               	goto	l15255
 11349                           
 11350                           ; BSR set to: 0
 11351                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
 11352  01313A  0E00               	movlw	0
 11353  01313C  6EE6               	movwf	postinc1,c
 11354                           
 11355                           ;stkvar	_rxData @ sp[(-2)+0]
 11356  01313E  0EFE               	movlw	-2
 11357  013140  50E3               	movf	plusw1,w,c
 11358  013142  6EE6               	movwf	postinc1,c
 11359  013144  EC7A  F0CA         	call	_run_checksum	;wreg free
 11360  013148  0060  F0DC  FD55   	movff	btemp,_V+315	;volatile
 11361  01314E  0060  F0E0  FD56   	movff	btemp+1,_V+316	;volatile
 11362  013154                     l15255:
 11363                           
 11364                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
 11365  013154  5022               	movf	m_protocol@rxData_l^0,w,c
 11366  013156  6E41               	movwf	(btemp+10)^0,c
 11367  013158  6A42               	clrf	(btemp+11)^0,c
 11368  01315A  0100               	movlb	0	; () banked
 11369  01315C  5186               	movf	(_r_block+12)& (0+255),w,b
 11370  01315E  6E3F               	movwf	(btemp+8)^0,c
 11371  013160  6A40               	clrf	(btemp+9)^0,c
 11372  013162  0E01               	movlw	1
 11373  013164  263F               	addwf	(btemp+8)^0,f,c
 11374  013166  0E00               	movlw	0
 11375  013168  2240               	addwfc	(btemp+9)^0,f,c
 11376  01316A  5041               	movf	(btemp+10)^0,w,c
 11377  01316C  183F               	xorwf	(btemp+8)^0,w,c
 11378  01316E  E109               	bnz	l15259
 11379  013170  5042               	movf	(btemp+11)^0,w,c
 11380  013172  1840               	xorwf	(btemp+9)^0,w,c
 11381  013174  A4D8               	btfss	status,2,c
 11382  013176  D005               	goto	l15259
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
 11386                           ;stkvar	_rxData @ sp[(-1)+0]
 11387  013178  0EFF               	movlw	-1
 11388  01317A  50E3               	movf	plusw1,w,c
 11389  01317C  0101               	movlb	1	; () banked
 11390  01317E  6F0E               	movwf	(_H10+14)& (0+255),b
 11391  013180  6B0D               	clrf	(_H10+13)& (0+255),b
 11392  013182                     l15259:
 11393                           
 11394                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
 11395  013182  5022               	movf	m_protocol@rxData_l^0,w,c
 11396  013184  6E41               	movwf	(btemp+10)^0,c
 11397  013186  6A42               	clrf	(btemp+11)^0,c
 11398  013188  0100               	movlb	0	; () banked
 11399  01318A  5186               	movf	(_r_block+12)& (0+255),w,b
 11400  01318C  6E3F               	movwf	(btemp+8)^0,c
 11401  01318E  6A40               	clrf	(btemp+9)^0,c
 11402  013190  0E02               	movlw	2
 11403  013192  263F               	addwf	(btemp+8)^0,f,c
 11404  013194  0E00               	movlw	0
 11405  013196  2240               	addwfc	(btemp+9)^0,f,c
 11406  013198  5041               	movf	(btemp+10)^0,w,c
 11407  01319A  183F               	xorwf	(btemp+8)^0,w,c
 11408  01319C  E10A               	bnz	l15263
 11409  01319E  5042               	movf	(btemp+11)^0,w,c
 11410  0131A0  1840               	xorwf	(btemp+9)^0,w,c
 11411  0131A2  A4D8               	btfss	status,2,c
 11412  0131A4  D006               	goto	l15263
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
 11416                           ;stkvar	_rxData @ sp[(-1)+0]
 11417  0131A6  0EFF               	movlw	-1
 11418  0131A8  50E3               	movf	plusw1,w,c
 11419  0131AA  0101               	movlb	1	; () banked
 11420  0131AC  270D               	addwf	(_H10+13)& (0+255),f,b
 11421  0131AE  0E00               	movlw	0
 11422  0131B0  230E               	addwfc	(_H10+14)& (0+255),f,b
 11423  0131B2                     l15263:
 11424                           
 11425                           ;gemsecs.c: 158:      rxData_l++;
 11426  0131B2  2A22               	incf	m_protocol@rxData_l^0,f,c
 11427                           
 11428                           ;gemsecs.c: 159:      b_block[sizeof(header254) - rxData_l] = rxData;
 11429                           ;stkvar	_rxData @ sp[(-1)+0]
 11430  0131B4  5022               	movf	m_protocol@rxData_l^0,w,c
 11431  0131B6  08D6               	sublw	low (_H254+257)
 11432  0131B8  6ED9               	movwf	fsr2l,c
 11433  0131BA  0E00               	movlw	0
 11434  0131BC  A0D8               	btfss	status,0,c
 11435  0131BE  2AE8               	incf	wreg,f,c
 11436  0131C0  080F               	sublw	high (_H254+257)
 11437  0131C2  6EDA               	movwf	fsr2h,c
 11438  0131C4  0EFF               	movlw	-1
 11439  0131C6  006F FF8F FFDF     	movff	plusw1,indf2
 11440                           
 11441                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
 11442  0131CC  5022               	movf	m_protocol@rxData_l^0,w,c
 11443  0131CE  6E41               	movwf	(btemp+10)^0,c
 11444  0131D0  6A42               	clrf	(btemp+11)^0,c
 11445  0131D2  0100               	movlb	0	; () banked
 11446  0131D4  5186               	movf	(_r_block+12)& (0+255),w,b
 11447  0131D6  6E3F               	movwf	(btemp+8)^0,c
 11448  0131D8  6A40               	clrf	(btemp+9)^0,c
 11449  0131DA  0E02               	movlw	2
 11450  0131DC  263F               	addwf	(btemp+8)^0,f,c
 11451  0131DE  0E00               	movlw	0
 11452  0131E0  2240               	addwfc	(btemp+9)^0,f,c
 11453  0131E2  5041               	movf	(btemp+10)^0,w,c
 11454  0131E4  5C3F               	subwf	(btemp+8)^0,w,c
 11455  0131E6  5040               	movf	(btemp+9)^0,w,c
 11456  0131E8  0A80               	xorlw	128
 11457  0131EA  6E37               	movwf	btemp^0,c
 11458  0131EC  5042               	movf	(btemp+11)^0,w,c
 11459  0131EE  0A80               	xorlw	128
 11460  0131F0  5837               	subwfb	btemp^0,w,c
 11461  0131F2  B0D8               	btfsc	status,0,c
 11462  0131F4  D03F               	goto	l15289
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
 11466  0131F6  EE23  F155         	lfsr	2,_V+315	;volatile
 11467  0131FA  0101               	movlb	1	; () banked
 11468  0131FC  510D               	movf	(_H10+13)& (0+255),w,b
 11469  0131FE  18DE               	xorwf	postinc2,w,c
 11470  013200  E110               	bnz	l15275
 11471  013202  510E               	movf	(_H10+14)& (0+255),w,b
 11472  013204  18DE               	xorwf	postinc2,w,c
 11473  013206  A4D8               	btfss	status,2,c
 11474  013208  D00C               	goto	l15275
 11475                           
 11476                           ; BSR set to: 1
 11477                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
 11478                           ;stkvar	_m_link @ sp[(-1)+-2]
 11479  01320A  0EFD               	movlw	-3
 11480  01320C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11481  013212  0EFE               	movlw	-2
 11482  013214  006F FF8F FFDA     	movff	plusw1,fsr2h
 11483  01321A  0E03               	movlw	3
 11484  01321C  D02A               	goto	L26
 11485  01321E                     l15273:
 11486  01321E  ECD6  F0C8         	call	_UART1_Read	;wreg free
 11487  013222                     l15275:
 11488                           
 11489                           ;gemsecs.c: 164:        while (UART1_is_rx_ready())
 11490  013222  EC5D  F0CD         	call	_UART1_is_rx_ready	;wreg free
 11491  013226  5037               	movf	btemp^0,w,c
 11492  013228  A4D8               	btfss	status,2,c
 11493  01322A  D7F9               	goto	l15273
 11494                           
 11495                           ;gemsecs.c: 166:        WaitMs(500);
 11496  01322C  0EF4               	movlw	244
 11497  01322E  6EE6               	movwf	postinc1,c
 11498  013230  0E01               	movlw	1
 11499  013232  6EE6               	movwf	postinc1,c
 11500  013234  EC30  F0C9         	call	_WaitMs	;wreg free
 11501                           
 11502                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
 11503  013238  0E0F               	movlw	15
 11504  01323A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11505                           
 11506                           ;gemsecs.c: 168:        V.checksum_error++;
 11507  013240  EE23  F159         	lfsr	2,_V+319	;volatile
 11508  013244  2ADE               	incf	postinc2,f,c
 11509  013246  0E00               	movlw	0
 11510  013248  22DD               	addwfc	postdec2,f,c
 11511                           
 11512                           ;gemsecs.c: 169:        V.all_errors++;
 11513  01324A  EE23  F165         	lfsr	2,_V+331	;volatile
 11514  01324E  2ADE               	incf	postinc2,f,c
 11515  013250  0E00               	movlw	0
 11516  013252  22DD               	addwfc	postdec2,f,c
 11517                           
 11518                           ;gemsecs.c: 170:        V.failed_receive = 3;
 11519  013254  EE23  F168         	lfsr	2,_V+334	;volatile
 11520  013258  50DF               	movf	223,w,c
 11521  01325A  0BF0               	andlw	-16
 11522  01325C  0903               	iorlw	3
 11523  01325E  6EDF               	movwf	223,c
 11524                           
 11525                           ;gemsecs.c: 171:        *m_link = LINK_STATE_NAK;
 11526                           ;stkvar	_m_link @ sp[(-1)+-2]
 11527  013260  0EFD               	movlw	-3
 11528  013262  006F FF8F FFD9     	movff	plusw1,fsr2l
 11529  013268  0EFE               	movlw	-2
 11530  01326A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11531  013270  0E05               	movlw	5
 11532  013272                     L26:
 11533  013272  6EDF               	movwf	indf2,c
 11534  013274                     l15289:
 11535                           
 11536                           ;gemsecs.c: 177:    if (V.uart == 2 && UART2_is_rx_ready()) {
 11537  013274  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 11538  01327A  0A02               	xorlw	2
 11539  01327C  A4D8               	btfss	status,2,c
 11540  01327E  D177               	goto	l15387
 11541  013280  EC59  F0CD         	call	_UART2_is_rx_ready	;wreg free
 11542  013284  5037               	movf	btemp^0,w,c
 11543  013286  B4D8               	btfsc	status,2,c
 11544  013288  D172               	goto	l15387
 11545                           
 11546                           ;gemsecs.c: 178:     rxData = UART2_Read();
 11547  01328A  ECB8  F0C8         	call	_UART2_Read	;wreg free
 11548                           
 11549                           ;stkvar	_rxData @ sp[(-1)+0]
 11550  01328E  0EFF               	movlw	-1
 11551  013290  0060  F0DF  FFE3   	movff	btemp,plusw1
 11552                           
 11553                           ; BSR set to: 57
 11554                           ;gemsecs.c: 179:     if (rxData_l == 0) {
 11555  013296  5022               	movf	m_protocol@rxData_l^0,w,c
 11556  013298  A4D8               	btfss	status,2,c
 11557  01329A  D018               	goto	l15305
 11558                           
 11559                           ; BSR set to: 57
 11560                           ;gemsecs.c: 180:      r_block.length = rxData;
 11561                           ;stkvar	_rxData @ sp[(-1)+0]
 11562  01329C  0EFF               	movlw	-1
 11563  01329E  006F FF8C  F086    	movff	plusw1,_r_block+12
 11564                           
 11565                           ; BSR set to: 57
 11566                           ;gemsecs.c: 181:      run_checksum(0, 1);
 11567  0132A4  0E01               	movlw	1
 11568  0132A6  6EE6               	movwf	postinc1,c
 11569  0132A8  0E00               	movlw	0
 11570  0132AA  6EE6               	movwf	postinc1,c
 11571  0132AC  EC7A  F0CA         	call	_run_checksum	;wreg free
 11572                           
 11573                           ;gemsecs.c: 182:      rxData_l++;
 11574  0132B0  2A22               	incf	m_protocol@rxData_l^0,f,c
 11575                           
 11576                           ;gemsecs.c: 183:      b_block[sizeof(header254) - rxData_l] = rxData;
 11577                           ;stkvar	_rxData @ sp[(-1)+0]
 11578  0132B2  5022               	movf	m_protocol@rxData_l^0,w,c
 11579  0132B4  08D6               	sublw	low (_H254+257)
 11580  0132B6  6ED9               	movwf	fsr2l,c
 11581  0132B8  0E00               	movlw	0
 11582  0132BA  A0D8               	btfss	status,0,c
 11583  0132BC  2AE8               	incf	wreg,f,c
 11584  0132BE  080F               	sublw	high (_H254+257)
 11585  0132C0  6EDA               	movwf	fsr2h,c
 11586  0132C2  0EFF               	movlw	-1
 11587  0132C4  006F FF8F FFDF     	movff	plusw1,indf2
 11588                           
 11589                           ;gemsecs.c: 184:     } else {
 11590  0132CA  D151               	goto	l15387
 11591  0132CC                     l15305:
 11592                           
 11593                           ; BSR set to: 57
 11594                           ;gemsecs.c: 188:      if (rxData_l <= sizeof(block10))
 11595  0132CC  0E0B               	movlw	11
 11596  0132CE  6022               	cpfslt	m_protocol@rxData_l^0,c
 11597  0132D0  D00C               	goto	l15309
 11598                           
 11599                           ; BSR set to: 57
 11600                           ;gemsecs.c: 189:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 11601                           ;stkvar	_rxData @ sp[(-1)+0]
 11602  0132D2  5022               	movf	m_protocol@rxData_l^0,w,c
 11603  0132D4  0819               	sublw	low (_H10+25)
 11604  0132D6  6ED9               	movwf	fsr2l,c
 11605  0132D8  0E00               	movlw	0
 11606  0132DA  A0D8               	btfss	status,0,c
 11607  0132DC  2AE8               	incf	wreg,f,c
 11608  0132DE  0801               	sublw	high (_H10+25)
 11609  0132E0  6EDA               	movwf	fsr2h,c
 11610  0132E2  0EFF               	movlw	-1
 11611  0132E4  006F FF8F FFDF     	movff	plusw1,indf2
 11612  0132EA                     l15309:
 11613                           
 11614                           ; BSR set to: 57
 11615                           ;gemsecs.c: 190:      if (rxData_l <= r_block.length)
 11616  0132EA  5022               	movf	m_protocol@rxData_l^0,w,c
 11617  0132EC  0100               	movlb	0	; () banked
 11618  0132EE  5D86               	subwf	(_r_block+12)& (0+255),w,b
 11619  0132F0  A0D8               	btfss	status,0,c
 11620  0132F2  D00D               	goto	l15313
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;gemsecs.c: 191:       V.r_checksum = run_checksum(rxData, 0);
 11624  0132F4  0E00               	movlw	0
 11625  0132F6  6EE6               	movwf	postinc1,c
 11626                           
 11627                           ;stkvar	_rxData @ sp[(-2)+0]
 11628  0132F8  0EFE               	movlw	-2
 11629  0132FA  50E3               	movf	plusw1,w,c
 11630  0132FC  6EE6               	movwf	postinc1,c
 11631  0132FE  EC7A  F0CA         	call	_run_checksum	;wreg free
 11632  013302  0060  F0DC  FD55   	movff	btemp,_V+315	;volatile
 11633  013308  0060  F0E0  FD56   	movff	btemp+1,_V+316	;volatile
 11634  01330E                     l15313:
 11635                           
 11636                           ;gemsecs.c: 193:      if (rxData_l == r_block.length + 1)
 11637  01330E  5022               	movf	m_protocol@rxData_l^0,w,c
 11638  013310  6E41               	movwf	(btemp+10)^0,c
 11639  013312  6A42               	clrf	(btemp+11)^0,c
 11640  013314  0100               	movlb	0	; () banked
 11641  013316  5186               	movf	(_r_block+12)& (0+255),w,b
 11642  013318  6E3F               	movwf	(btemp+8)^0,c
 11643  01331A  6A40               	clrf	(btemp+9)^0,c
 11644  01331C  0E01               	movlw	1
 11645  01331E  263F               	addwf	(btemp+8)^0,f,c
 11646  013320  0E00               	movlw	0
 11647  013322  2240               	addwfc	(btemp+9)^0,f,c
 11648  013324  5041               	movf	(btemp+10)^0,w,c
 11649  013326  183F               	xorwf	(btemp+8)^0,w,c
 11650  013328  E109               	bnz	l15317
 11651  01332A  5042               	movf	(btemp+11)^0,w,c
 11652  01332C  1840               	xorwf	(btemp+9)^0,w,c
 11653  01332E  A4D8               	btfss	status,2,c
 11654  013330  D005               	goto	l15317
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;gemsecs.c: 194:       H10[1].checksum = (uint16_t) rxData << 8;
 11658                           ;stkvar	_rxData @ sp[(-1)+0]
 11659  013332  0EFF               	movlw	-1
 11660  013334  50E3               	movf	plusw1,w,c
 11661  013336  0101               	movlb	1	; () banked
 11662  013338  6F0E               	movwf	(_H10+14)& (0+255),b
 11663  01333A  6B0D               	clrf	(_H10+13)& (0+255),b
 11664  01333C                     l15317:
 11665                           
 11666                           ;gemsecs.c: 195:      if (rxData_l == r_block.length + 2)
 11667  01333C  5022               	movf	m_protocol@rxData_l^0,w,c
 11668  01333E  6E41               	movwf	(btemp+10)^0,c
 11669  013340  6A42               	clrf	(btemp+11)^0,c
 11670  013342  0100               	movlb	0	; () banked
 11671  013344  5186               	movf	(_r_block+12)& (0+255),w,b
 11672  013346  6E3F               	movwf	(btemp+8)^0,c
 11673  013348  6A40               	clrf	(btemp+9)^0,c
 11674  01334A  0E02               	movlw	2
 11675  01334C  263F               	addwf	(btemp+8)^0,f,c
 11676  01334E  0E00               	movlw	0
 11677  013350  2240               	addwfc	(btemp+9)^0,f,c
 11678  013352  5041               	movf	(btemp+10)^0,w,c
 11679  013354  183F               	xorwf	(btemp+8)^0,w,c
 11680  013356  E10A               	bnz	l15321
 11681  013358  5042               	movf	(btemp+11)^0,w,c
 11682  01335A  1840               	xorwf	(btemp+9)^0,w,c
 11683  01335C  A4D8               	btfss	status,2,c
 11684  01335E  D006               	goto	l15321
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;gemsecs.c: 196:       H10[1].checksum += rxData;
 11688                           ;stkvar	_rxData @ sp[(-1)+0]
 11689  013360  0EFF               	movlw	-1
 11690  013362  50E3               	movf	plusw1,w,c
 11691  013364  0101               	movlb	1	; () banked
 11692  013366  270D               	addwf	(_H10+13)& (0+255),f,b
 11693  013368  0E00               	movlw	0
 11694  01336A  230E               	addwfc	(_H10+14)& (0+255),f,b
 11695  01336C                     l15321:
 11696                           
 11697                           ;gemsecs.c: 198:      rxData_l++;
 11698  01336C  2A22               	incf	m_protocol@rxData_l^0,f,c
 11699                           
 11700                           ;gemsecs.c: 199:      b_block[sizeof(header254) - rxData_l] = rxData;
 11701                           ;stkvar	_rxData @ sp[(-1)+0]
 11702  01336E  5022               	movf	m_protocol@rxData_l^0,w,c
 11703  013370  08D6               	sublw	low (_H254+257)
 11704  013372  6ED9               	movwf	fsr2l,c
 11705  013374  0E00               	movlw	0
 11706  013376  A0D8               	btfss	status,0,c
 11707  013378  2AE8               	incf	wreg,f,c
 11708  01337A  080F               	sublw	high (_H254+257)
 11709  01337C  6EDA               	movwf	fsr2h,c
 11710  01337E  0EFF               	movlw	-1
 11711  013380  006F FF8F FFDF     	movff	plusw1,indf2
 11712                           
 11713                           ;gemsecs.c: 200:      if (rxData_l > (r_block.length + 2)) {
 11714  013386  5022               	movf	m_protocol@rxData_l^0,w,c
 11715  013388  6E41               	movwf	(btemp+10)^0,c
 11716  01338A  6A42               	clrf	(btemp+11)^0,c
 11717  01338C  0100               	movlb	0	; () banked
 11718  01338E  5186               	movf	(_r_block+12)& (0+255),w,b
 11719  013390  6E3F               	movwf	(btemp+8)^0,c
 11720  013392  6A40               	clrf	(btemp+9)^0,c
 11721  013394  0E02               	movlw	2
 11722  013396  263F               	addwf	(btemp+8)^0,f,c
 11723  013398  0E00               	movlw	0
 11724  01339A  2240               	addwfc	(btemp+9)^0,f,c
 11725  01339C  5041               	movf	(btemp+10)^0,w,c
 11726  01339E  5C3F               	subwf	(btemp+8)^0,w,c
 11727  0133A0  5040               	movf	(btemp+9)^0,w,c
 11728  0133A2  0A80               	xorlw	128
 11729  0133A4  6E37               	movwf	btemp^0,c
 11730  0133A6  5042               	movf	(btemp+11)^0,w,c
 11731  0133A8  0A80               	xorlw	128
 11732  0133AA  5837               	subwfb	btemp^0,w,c
 11733  0133AC  B0D8               	btfsc	status,0,c
 11734  0133AE  D0DF               	goto	l15387
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;gemsecs.c: 201:       if (V.r_checksum == H10[1].checksum) {
 11738  0133B0  EE23  F155         	lfsr	2,_V+315	;volatile
 11739  0133B4  0101               	movlb	1	; () banked
 11740  0133B6  510D               	movf	(_H10+13)& (0+255),w,b
 11741  0133B8  18DE               	xorwf	postinc2,w,c
 11742  0133BA  E110               	bnz	l15333
 11743  0133BC  510E               	movf	(_H10+14)& (0+255),w,b
 11744  0133BE  18DE               	xorwf	postinc2,w,c
 11745  0133C0  A4D8               	btfss	status,2,c
 11746  0133C2  D00C               	goto	l15333
 11747                           
 11748                           ; BSR set to: 1
 11749                           ;gemsecs.c: 202:        *m_link = LINK_STATE_ACK;
 11750                           ;stkvar	_m_link @ sp[(-1)+-2]
 11751  0133C4  0EFD               	movlw	-3
 11752  0133C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11753  0133CC  0EFE               	movlw	-2
 11754  0133CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11755  0133D4  0E03               	movlw	3
 11756  0133D6  D0A4               	goto	L29
 11757  0133D8                     l15331:
 11758  0133D8  ECB8  F0C8         	call	_UART2_Read	;wreg free
 11759  0133DC                     l15333:
 11760                           
 11761                           ;gemsecs.c: 204:        while (UART2_is_rx_ready())
 11762  0133DC  EC59  F0CD         	call	_UART2_is_rx_ready	;wreg free
 11763  0133E0  5037               	movf	btemp^0,w,c
 11764  0133E2  A4D8               	btfss	status,2,c
 11765  0133E4  D7F9               	goto	l15331
 11766                           
 11767                           ;gemsecs.c: 206:        WaitMs(500);
 11768  0133E6  0EF4               	movlw	244
 11769  0133E8  6EE6               	movwf	postinc1,c
 11770  0133EA  0E01               	movlw	1
 11771  0133EC  6EE6               	movwf	postinc1,c
 11772  0133EE  EC30  F0C9         	call	_WaitMs	;wreg free
 11773                           
 11774                           ;gemsecs.c: 207:        V.error = LINK_ERROR_CHECKSUM;
 11775  0133F2  0E0F               	movlw	15
 11776  0133F4  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 11777                           
 11778                           ;gemsecs.c: 208:        V.checksum_error++;
 11779  0133FA  EE23  F159         	lfsr	2,_V+319	;volatile
 11780  0133FE  2ADE               	incf	postinc2,f,c
 11781  013400  0E00               	movlw	0
 11782  013402  22DD               	addwfc	postdec2,f,c
 11783                           
 11784                           ;gemsecs.c: 209:        V.all_errors++;
 11785  013404  EE23  F165         	lfsr	2,_V+331	;volatile
 11786  013408  2ADE               	incf	postinc2,f,c
 11787  01340A  0E00               	movlw	0
 11788  01340C  22DD               	addwfc	postdec2,f,c
 11789                           
 11790                           ;gemsecs.c: 210:        V.failed_receive = 4;
 11791  01340E  EE23  F168         	lfsr	2,_V+334	;volatile
 11792  013412  50DF               	movf	223,w,c
 11793  013414  0BF0               	andlw	-16
 11794  013416  0904               	iorlw	4
 11795  013418  D5D4               	goto	L28
 11796  01341A                     l15347:
 11797                           
 11798                           ;gemsecs.c: 222:   V.stream = H10[1].block.block.stream;
 11799  01341A  0101               	movlb	1	; () banked
 11800  01341C  5116               	movf	(_H10+22)& (0+255),w,b
 11801  01341E  0B7F               	andlw	127
 11802  013420  6E42               	movwf	(btemp+11)^0,c
 11803  013422  0060  F108  FD4D   	movff	btemp+11,_V+307	;volatile
 11804                           
 11805                           ; BSR set to: 1
 11806                           ;gemsecs.c: 223:   V.function = H10[1].block.block.function;
 11807  013428  EE23  F14E         	lfsr	2,_V+308	;volatile
 11808  01342C  0060  F457  FFDF   	movff	_H10+21,indf2
 11809                           
 11810                           ; BSR set to: 1
 11811                           ;gemsecs.c: 224:   V.systemb = H10[1].block.block.systemb;
 11812  013432  EE20  F10F         	lfsr	2,_H10+15
 11813  013436  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 11814  01343C  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 11815  013442  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 11816  013448  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 11817                           
 11818                           ; BSR set to: 1
 11819                           ;gemsecs.c: 225:   V.rbit = H10[1].block.block.rbit;
 11820  01344E  EE23  F167         	lfsr	2,_V+333	;volatile
 11821  013452  BF18               	btfsc	(_H10+24)& (0+255),7,b
 11822  013454  D002               	bra	u11525
 11823  013456  90DF               	bcf	indf2,0,c
 11824  013458  D001               	bra	u11526
 11825  01345A                     u11525:
 11826  01345A  80DF               	bsf	indf2,0,c
 11827  01345C                     u11526:
 11828                           
 11829                           ;gemsecs.c: 226:   V.wbit = H10[1].block.block.wbit;
 11830  01345C  EE23  F167         	lfsr	2,_V+333	;volatile
 11831  013460  0101               	movlb	1	; () banked
 11832  013462  BF16               	btfsc	(_H10+22)& (0+255),7,b
 11833  013464  D002               	bra	u11535
 11834  013466  92DF               	bcf	indf2,1,c
 11835  013468  D001               	bra	u11536
 11836  01346A                     u11535:
 11837  01346A  82DF               	bsf	indf2,1,c
 11838  01346C                     u11536:
 11839                           
 11840                           ;gemsecs.c: 227:   V.ebit = H10[1].block.block.ebit;
 11841  01346C  EE23  F167         	lfsr	2,_V+333	;volatile
 11842  013470  0101               	movlb	1	; () banked
 11843  013472  BF14               	btfsc	(_H10+20)& (0+255),7,b
 11844  013474  D002               	bra	u11545
 11845  013476  94DF               	bcf	indf2,2,c
 11846  013478  D001               	bra	u11546
 11847  01347A                     u11545:
 11848  01347A  84DF               	bsf	indf2,2,c
 11849  01347C                     u11546:
 11850                           
 11851                           ;gemsecs.c: 228:   V.failed_receive = 0;
 11852  01347C  EE23  F168         	lfsr	2,_V+334	;volatile
 11853  013480  0EF0               	movlw	-16
 11854  013482  16DF               	andwf	223,f,c
 11855                           
 11856                           ;gemsecs.c: 229:   secs_II_monitor_message(V.stream, V.function, 1000);
 11857  013484  0EE8               	movlw	232
 11858  013486  6EE6               	movwf	postinc1,c
 11859  013488  0E03               	movlw	3
 11860  01348A  6EE6               	movwf	postinc1,c
 11861  01348C  EE23  F14E         	lfsr	2,_V+308	;volatile
 11862  013490  50DF               	movf	indf2,w,c
 11863  013492  6EE6               	movwf	postinc1,c
 11864  013494  EE23  F14D         	lfsr	2,_V+307	;volatile
 11865  013498  50DF               	movf	indf2,w,c
 11866  01349A  6EE6               	movwf	postinc1,c
 11867  01349C  EC60  F0BA         	call	_secs_II_monitor_message	;wreg free
 11868                           
 11869                           ;gemsecs.c: 230:   V.g_state = secs_gem_state(V.stream, V.function);
 11870  0134A0  EE23  F14E         	lfsr	2,_V+308	;volatile
 11871  0134A4  50DF               	movf	indf2,w,c
 11872  0134A6  6EE6               	movwf	postinc1,c
 11873  0134A8  EE23  F14D         	lfsr	2,_V+307	;volatile
 11874  0134AC  50DF               	movf	indf2,w,c
 11875  0134AE  6EE6               	movwf	postinc1,c
 11876  0134B0  EC29  F0B6         	call	_secs_gem_state	;wreg free
 11877  0134B4  0060  F0DC  FC1C   	movff	btemp,_V+2	;volatile
 11878                           
 11879                           ;gemsecs.c: 231:   *m_link = LINK_STATE_DONE;
 11880                           ;stkvar	_m_link @ sp[(-1)+-2]
 11881  0134BA  0EFD               	movlw	-3
 11882  0134BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11883  0134C2  0EFE               	movlw	-2
 11884  0134C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11885  0134CA  0E04               	movlw	4
 11886  0134CC  D029               	goto	L29
 11887  0134CE                     l15367:
 11888                           
 11889                           ;gemsecs.c: 236:   *m_link = LINK_STATE_ERROR;
 11890                           ;stkvar	_m_link @ sp[(-1)+-2]
 11891  0134CE  0EFD               	movlw	-3
 11892  0134D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11893  0134D6  0EFE               	movlw	-2
 11894  0134D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11895  0134DE  0E06               	movlw	6
 11896  0134E0  6EDF               	movwf	indf2,c
 11897                           
 11898                           ;gemsecs.c: 237:   V.all_errors++;
 11899  0134E2  EE23  F165         	lfsr	2,_V+331	;volatile
 11900  0134E6  2ADE               	incf	postinc2,f,c
 11901  0134E8  0E00               	movlw	0
 11902  0134EA  22DD               	addwfc	postdec2,f,c
 11903                           
 11904                           ;gemsecs.c: 238:   while ((uart1RxCount)) {
 11905  0134EC  D002               	goto	l15373
 11906  0134EE                     l15371:
 11907                           
 11908                           ;gemsecs.c: 239:    UART1_Read();
 11909  0134EE  ECD6  F0C8         	call	_UART1_Read	;wreg free
 11910  0134F2                     l15373:
 11911                           
 11912                           ;gemsecs.c: 238:   while ((uart1RxCount)) {
 11913  0134F2  502A               	movf	_uart1RxCount^0,w,c	;volatile
 11914  0134F4  B4D8               	btfsc	status,2,c
 11915  0134F6  D003               	goto	l15377
 11916  0134F8  D7FA               	goto	l15371
 11917  0134FA                     l15375:
 11918                           
 11919                           ;gemsecs.c: 242:    UART2_Read();
 11920  0134FA  ECB8  F0C8         	call	_UART2_Read	;wreg free
 11921  0134FE                     l15377:
 11922                           
 11923                           ;gemsecs.c: 241:   while ((uart2RxCount)) {
 11924  0134FE  5024               	movf	_uart2RxCount^0,w,c	;volatile
 11925  013500  B4D8               	btfsc	status,2,c
 11926  013502  D035               	goto	l15387
 11927  013504  D7FA               	goto	l15375
 11928  013506                     l15379:
 11929                           
 11930                           ;gemsecs.c: 248:   V.failed_receive = 0;
 11931  013506  EE23  F168         	lfsr	2,_V+334	;volatile
 11932  01350A  0EF0               	movlw	-16
 11933  01350C  16DF               	andwf	223,f,c
 11934  01350E                     l15381:
 11935                           
 11936                           ;gemsecs.c: 252:   *m_link = LINK_STATE_IDLE;
 11937                           ;stkvar	_m_link @ sp[(-1)+-2]
 11938  01350E  0EFD               	movlw	-3
 11939  013510  006F FF8F FFD9     	movff	plusw1,fsr2l
 11940  013516  0EFE               	movlw	-2
 11941  013518  006F FF8F FFDA     	movff	plusw1,fsr2h
 11942  01351E  0E00               	movlw	0
 11943  013520                     L29:
 11944  013520  6EDF               	movwf	indf2,c
 11945                           
 11946                           ;gemsecs.c: 253:   break;
 11947  013522  D025               	goto	l15387
 11948  013524                     l15385:
 11949                           
 11950                           ;stkvar	_m_link @ sp[(-1)+-2]
 11951  013524  0EFD               	movlw	-3
 11952  013526  006F FF8F FFD9     	movff	plusw1,fsr2l
 11953  01352C  0EFE               	movlw	-2
 11954  01352E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11955  013534  50DF               	movf	indf2,w,c
 11956  013536  6E41               	movwf	(btemp+10)^0,c
 11957  013538  6A42               	clrf	(btemp+11)^0,c
 11958                           
 11959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11960                           ; Switch size 1, requested type "simple"
 11961                           ; Number of cases is 1, Range of values is 0 to 0
 11962                           ; switch strategies available:
 11963                           ; Name         Instructions Cycles
 11964                           ; simple_byte            4     3 (average)
 11965                           ;	Chosen strategy is simple_byte
 11966  01353A  5042               	movf	(btemp+11)^0,w,c
 11967  01353C  0A00               	xorlw	0	; case 0
 11968  01353E  A4D8               	btfss	status,2,c
 11969  013540  D7E6               	goto	l15381
 11970                           
 11971                           ; Switch size 1, requested type "simple"
 11972                           ; Number of cases is 7, Range of values is 0 to 6
 11973                           ; switch strategies available:
 11974                           ; Name         Instructions Cycles
 11975                           ; simple_byte           22    12 (average)
 11976                           ;	Chosen strategy is simple_byte
 11977  013542  5041               	movf	(btemp+10)^0,w,c
 11978  013544  0A00               	xorlw	0	; case 0
 11979  013546  B4D8               	btfsc	status,2,c
 11980  013548  D4C7               	goto	l15155
 11981  01354A  0A01               	xorlw	1	; case 1
 11982  01354C  B4D8               	btfsc	status,2,c
 11983  01354E  D51E               	goto	l1660
 11984  013550  0A03               	xorlw	3	; case 2
 11985  013552  B4D8               	btfsc	status,2,c
 11986  013554  D59F               	goto	l15221
 11987  013556  0A01               	xorlw	1	; case 3
 11988  013558  B4D8               	btfsc	status,2,c
 11989  01355A  D75F               	goto	l15347
 11990  01355C  0A07               	xorlw	7	; case 4
 11991  01355E  B4D8               	btfsc	status,2,c
 11992  013560  D7D2               	goto	l15379
 11993  013562  0A01               	xorlw	1	; case 5
 11994  013564  B4D8               	btfsc	status,2,c
 11995  013566  D7B3               	goto	l15367
 11996  013568  0A03               	xorlw	3	; case 6
 11997  01356A  A4D8               	btfss	status,2,c
 11998  01356C  D7D0               	goto	l15381
 11999  01356E                     l15387:
 12000                           
 12001                           ;gemsecs.c: 256:  return *m_link;
 12002                           ;stkvar	_m_link @ sp[(-1)+-2]
 12003  01356E  0EFD               	movlw	-3
 12004  013570  006F FF8F FFD9     	movff	plusw1,fsr2l
 12005  013576  0EFE               	movlw	-2
 12006  013578  006F FF8F FFDA     	movff	plusw1,fsr2h
 12007  01357E  50DF               	movf	indf2,w,c
 12008  013580  6E37               	movwf	btemp^0,c
 12009                           
 12010                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 12011  013582  52E5               	movf	postdec1,f,c
 12012  013584  52E5               	movf	postdec1,f,c
 12013  013586  52E5               	movf	postdec1,f,c
 12014  013588  0012               	return		;funcret
 12015  01358A                     __end_of_m_protocol:
 12016                           	opt callstack 0
 12017                           
 12018 ;; *************** function _secs_gem_state *****************
 12019 ;; Defined at:
 12020 ;;		line 1306 in file "gemsecs.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;  stream          1  [STACK] const unsigned char 
 12023 ;;  function        1  [STACK] const unsigned char 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1  [STACK] enum E16778
 12028 ;; Registers used:
 12029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/1
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12039 ;;Total ram usage:        0 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; Hardware stack levels required when called:   13
 12042 ;; This function calls:
 12043 ;;		_StartTimer
 12044 ;;		_TimerDone
 12045 ;;		_format_display_text
 12046 ;;		_sequence_messages
 12047 ;;		_set_display_info
 12048 ;;		_terminal_format
 12049 ;; This function is called by:
 12050 ;;		_m_protocol
 12051 ;;		_r_protocol
 12052 ;; This function uses a reentrant model
 12053 ;;
 12054                           
 12055                           	psect	text20
 12056  016C52                     __ptext20:
 12057                           	opt callstack 0
 12058  016C52                     _secs_gem_state:
 12059                           	opt callstack 16
 12060                           
 12061                           ;gemsecs.c: 1306: GEM_STATES secs_gem_state(const uint8_t stream, const uint8_t function
      +                          );gemsecs.c: 1307: {;gemsecs.c: 1308:  static GEM_STATES block = GEM_STATE_DISABLE;;gems
      +                          ecs.c: 1309:  static GEM_EQUIP equipment = GEM_GENERIC;;gemsecs.c: 1311:  switch (stream
      +                          ) {
 12062                           
 12063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12064                           ;incstack = 0
 12065  016C52  D0DF               	goto	l14357
 12066  016C54                     l14253:
 12067                           
 12068                           ;gemsecs.c: 1318:    if (block != GEM_STATE_REMOTE) {
 12069  016C54  0E04               	movlw	4
 12070  016C56  181E               	xorwf	secs_gem_state@block^0,w,c
 12071  016C58  B4D8               	btfsc	status,2,c
 12072  016C5A  D030               	goto	l14273
 12073                           
 12074                           ;gemsecs.c: 1319:     if (TimerDone(TMR_HBIO)) {
 12075  016C5C  0E06               	movlw	6
 12076  016C5E  6EE6               	movwf	postinc1,c
 12077  016C60  ECE1  F0CB         	call	_TimerDone	;wreg free
 12078  016C64  5037               	movf	btemp^0,w,c
 12079  016C66  B4D8               	btfsc	status,2,c
 12080  016C68  D008               	goto	l14259
 12081                           
 12082                           ;gemsecs.c: 1320:      StartTimer(TMR_HBIO, 30000);
 12083  016C6A  0E30               	movlw	48
 12084  016C6C  6EE6               	movwf	postinc1,c
 12085  016C6E  0E75               	movlw	117
 12086  016C70  6EE6               	movwf	postinc1,c
 12087  016C72  0E06               	movlw	6
 12088  016C74  6EE6               	movwf	postinc1,c
 12089  016C76  EC12  F0C9         	call	_StartTimer	;wreg free
 12090  016C7A                     l14259:
 12091                           
 12092                           ;gemsecs.c: 1322:     terminal_format(display_online);
 12093  016C7A  0E01               	movlw	1
 12094  016C7C  6EE6               	movwf	postinc1,c
 12095  016C7E  EC79  F0B0         	call	_terminal_format	;wreg free
 12096                           
 12097                           ;gemsecs.c: 1323:     format_display_text(V.terminal);
 12098  016C82  0E61               	movlw	low (_V+71)
 12099  016C84  6EE6               	movwf	postinc1,c
 12100  016C86  0E0C               	movlw	high (_V+71)
 12101  016C88  6EE6               	movwf	postinc1,c
 12102  016C8A  ECAF  F0B9         	call	_format_display_text	;wreg free
 12103                           
 12104                           ;gemsecs.c: 1324:     V.response.mesgid = 1;
 12105  016C8E  0E01               	movlw	1
 12106  016C90  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 12107                           
 12108                           ;gemsecs.c: 1325:     V.sequences++;
 12109  016C96  EE23  F163         	lfsr	2,_V+329	;volatile
 12110  016C9A  2ADE               	incf	postinc2,f,c
 12111  016C9C  0E00               	movlw	0
 12112  016C9E  22DD               	addwfc	postdec2,f,c
 12113                           
 12114                           ;gemsecs.c: 1326:     V.sid = 10;
 12115  016CA0  0E0A               	movlw	10
 12116  016CA2  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 12117                           
 12118                           ;gemsecs.c: 1327:     sequence_messages(V.sid);
 12119  016CA8  EE23  F199         	lfsr	2,_V+383	;volatile
 12120  016CAC  50DF               	movf	indf2,w,c
 12121  016CAE  6EE6               	movwf	postinc1,c
 12122  016CB0  EC63  F0A8         	call	_sequence_messages	;wreg free
 12123                           
 12124                           ;gemsecs.c: 1328:     set_display_info(DIS_SEQUENCE_M);
 12125  016CB4  0E08               	movlw	8
 12126  016CB6  6EE6               	movwf	postinc1,c
 12127  016CB8  EC39  F0CC         	call	_set_display_info	;wreg free
 12128  016CBC                     l14273:
 12129                           
 12130                           ;gemsecs.c: 1331:    block = GEM_STATE_REMOTE;
 12131  016CBC  0E04               	movlw	4
 12132  016CBE                     L32:
 12133  016CBE  6E1E               	movwf	secs_gem_state@block^0,c
 12134  016CC0                     l14275:
 12135                           
 12136                           ;gemsecs.c: 1332:    V.ticker = 0;
 12137  016CC0  0E00               	movlw	0
 12138  016CC2  D0A3               	goto	L33
 12139  016CC4                     l14277:
 12140                           
 12141                           ;gemsecs.c: 1340:      equipment = GEM_VII80;
 12142  016CC4  0E01               	movlw	1
 12143  016CC6  D011               	goto	L31
 12144  016CC8                     l2090:
 12145                           
 12146                           ;gemsecs.c: 1343:      equipment = GEM_GENERIC;
 12147  016CC8  6A1D               	clrf	secs_gem_state@equipment^0,c
 12148                           
 12149                           ;gemsecs.c: 1344:      break;
 12150  016CCA  D033               	goto	l14293
 12151  016CCC                     l14281:
 12152  016CCC  EE23  F16F         	lfsr	2,_V+341	;volatile
 12153  016CD0  50DF               	movf	indf2,w,c
 12154  016CD2  6E41               	movwf	(btemp+10)^0,c
 12155  016CD4  6A42               	clrf	(btemp+11)^0,c
 12156                           
 12157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12158                           ; Switch size 1, requested type "simple"
 12159                           ; Number of cases is 1, Range of values is 0 to 0
 12160                           ; switch strategies available:
 12161                           ; Name         Instructions Cycles
 12162                           ; simple_byte            4     3 (average)
 12163                           ;	Chosen strategy is simple_byte
 12164  016CD6  5042               	movf	(btemp+11)^0,w,c
 12165  016CD8  0A00               	xorlw	0	; case 0
 12166  016CDA  A4D8               	btfss	status,2,c
 12167  016CDC  D7F5               	goto	l2090
 12168                           
 12169                           ; Switch size 1, requested type "simple"
 12170                           ; Number of cases is 1, Range of values is 73 to 73
 12171                           ; switch strategies available:
 12172                           ; Name         Instructions Cycles
 12173                           ; simple_byte            4     3 (average)
 12174                           ;	Chosen strategy is simple_byte
 12175  016CDE  5041               	movf	(btemp+10)^0,w,c
 12176  016CE0  0A49               	xorlw	73	; case 73
 12177  016CE2  B4D8               	btfsc	status,2,c
 12178  016CE4  D7EF               	goto	l14277
 12179  016CE6  D7F0               	goto	l2090
 12180  016CE8                     l14283:
 12181                           
 12182                           ;gemsecs.c: 1351:      equipment = GEM_E220;
 12183  016CE8  0E02               	movlw	2
 12184  016CEA                     L31:
 12185  016CEA  6E1D               	movwf	secs_gem_state@equipment^0,c
 12186                           
 12187                           ;gemsecs.c: 1352:      break;
 12188  016CEC  D022               	goto	l14293
 12189  016CEE                     l14287:
 12190  016CEE  EE23  F16F         	lfsr	2,_V+341	;volatile
 12191  016CF2  50DF               	movf	indf2,w,c
 12192  016CF4  6E41               	movwf	(btemp+10)^0,c
 12193  016CF6  6A42               	clrf	(btemp+11)^0,c
 12194                           
 12195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12196                           ; Switch size 1, requested type "simple"
 12197                           ; Number of cases is 1, Range of values is 0 to 0
 12198                           ; switch strategies available:
 12199                           ; Name         Instructions Cycles
 12200                           ; simple_byte            4     3 (average)
 12201                           ;	Chosen strategy is simple_byte
 12202  016CF8  5042               	movf	(btemp+11)^0,w,c
 12203  016CFA  0A00               	xorlw	0	; case 0
 12204  016CFC  A4D8               	btfss	status,2,c
 12205  016CFE  D7E4               	goto	l2090
 12206                           
 12207                           ; Switch size 1, requested type "simple"
 12208                           ; Number of cases is 2, Range of values is 50 to 53
 12209                           ; switch strategies available:
 12210                           ; Name         Instructions Cycles
 12211                           ; simple_byte            7     4 (average)
 12212                           ;	Chosen strategy is simple_byte
 12213  016D00  5041               	movf	(btemp+10)^0,w,c
 12214  016D02  0A32               	xorlw	50	; case 50
 12215  016D04  B4D8               	btfsc	status,2,c
 12216  016D06  D7F0               	goto	l14283
 12217  016D08  0A07               	xorlw	7	; case 53
 12218  016D0A  B4D8               	btfsc	status,2,c
 12219  016D0C  D7ED               	goto	l14283
 12220  016D0E  D7DC               	goto	l2090
 12221  016D10                     l14291:
 12222  016D10  EE23  F16E         	lfsr	2,_V+340	;volatile
 12223  016D14  50DF               	movf	indf2,w,c
 12224  016D16  6E41               	movwf	(btemp+10)^0,c
 12225  016D18  6A42               	clrf	(btemp+11)^0,c
 12226                           
 12227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12228                           ; Switch size 1, requested type "simple"
 12229                           ; Number of cases is 1, Range of values is 0 to 0
 12230                           ; switch strategies available:
 12231                           ; Name         Instructions Cycles
 12232                           ; simple_byte            4     3 (average)
 12233                           ;	Chosen strategy is simple_byte
 12234  016D1A  5042               	movf	(btemp+11)^0,w,c
 12235  016D1C  0A00               	xorlw	0	; case 0
 12236  016D1E  A4D8               	btfss	status,2,c
 12237  016D20  D7D3               	goto	l2090
 12238                           
 12239                           ; Switch size 1, requested type "simple"
 12240                           ; Number of cases is 2, Range of values is 69 to 86
 12241                           ; switch strategies available:
 12242                           ; Name         Instructions Cycles
 12243                           ; simple_byte            7     4 (average)
 12244                           ;	Chosen strategy is simple_byte
 12245  016D22  5041               	movf	(btemp+10)^0,w,c
 12246  016D24  0A45               	xorlw	69	; case 69
 12247  016D26  B4D8               	btfsc	status,2,c
 12248  016D28  D7E2               	goto	l14287
 12249  016D2A  0A13               	xorlw	19	; case 86
 12250  016D2C  B4D8               	btfsc	status,2,c
 12251  016D2E  D7CE               	goto	l14281
 12252  016D30  D7CB               	goto	l2090
 12253  016D32                     l14293:
 12254                           
 12255                           ;gemsecs.c: 1363:    if (block != GEM_STATE_REMOTE) {
 12256  016D32  0E04               	movlw	4
 12257  016D34  181E               	xorwf	secs_gem_state@block^0,w,c
 12258  016D36  B4D8               	btfsc	status,2,c
 12259  016D38  D7C3               	goto	l14275
 12260                           
 12261                           ;gemsecs.c: 1364:     terminal_format(display_online);
 12262  016D3A  0E01               	movlw	1
 12263  016D3C  6EE6               	movwf	postinc1,c
 12264  016D3E  EC79  F0B0         	call	_terminal_format	;wreg free
 12265                           
 12266                           ;gemsecs.c: 1365:     format_display_text(V.terminal);
 12267  016D42  0E61               	movlw	low (_V+71)
 12268  016D44  6EE6               	movwf	postinc1,c
 12269  016D46  0E0C               	movlw	high (_V+71)
 12270  016D48  6EE6               	movwf	postinc1,c
 12271  016D4A  ECAF  F0B9         	call	_format_display_text	;wreg free
 12272                           
 12273                           ;gemsecs.c: 1366:     V.response.mesgid = 1;
 12274  016D4E  0E01               	movlw	1
 12275  016D50  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 12276                           
 12277                           ;gemsecs.c: 1367:     V.sequences++;
 12278  016D56  EE23  F163         	lfsr	2,_V+329	;volatile
 12279  016D5A  2ADE               	incf	postinc2,f,c
 12280  016D5C  0E00               	movlw	0
 12281  016D5E  22DD               	addwfc	postdec2,f,c
 12282                           
 12283                           ;gemsecs.c: 1368:     V.sid = 11;
 12284  016D60  0E0B               	movlw	11
 12285  016D62  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 12286                           
 12287                           ;gemsecs.c: 1369:     sequence_messages(V.sid);
 12288  016D68  EE23  F199         	lfsr	2,_V+383	;volatile
 12289  016D6C  50DF               	movf	indf2,w,c
 12290  016D6E  6EE6               	movwf	postinc1,c
 12291  016D70  EC63  F0A8         	call	_sequence_messages	;wreg free
 12292                           
 12293                           ;gemsecs.c: 1370:     set_display_info(DIS_SEQUENCE_M);
 12294  016D74  0E08               	movlw	8
 12295  016D76  6EE6               	movwf	postinc1,c
 12296  016D78  EC39  F0CC         	call	_set_display_info	;wreg free
 12297                           
 12298                           ;gemsecs.c: 1371:     block = GEM_STATE_COMM;
 12299  016D7C  0E01               	movlw	1
 12300  016D7E  D79F               	goto	L32
 12301  016D80                     l14313:
 12302                           
 12303                           ;gemsecs.c: 1376:    if (block != GEM_STATE_REMOTE)
 12304  016D80  0E04               	movlw	4
 12305  016D82  181E               	xorwf	secs_gem_state@block^0,w,c
 12306  016D84  B4D8               	btfsc	status,2,c
 12307  016D86  D002               	goto	l14317
 12308  016D88                     u10630:
 12309                           
 12310                           ;gemsecs.c: 1377:     block = GEM_STATE_COMM;
 12311  016D88  0E01               	movlw	1
 12312  016D8A  6E1E               	movwf	secs_gem_state@block^0,c
 12313  016D8C                     l14317:
 12314                           
 12315                           ;gemsecs.c: 1378:    V.ticker = 15;
 12316  016D8C  0E0F               	movlw	15
 12317  016D8E  D03D               	goto	L33
 12318  016D90                     l14319:
 12319                           
 12320                           ;gemsecs.c: 1384:    block = GEM_STATE_OFFLINE;
 12321  016D90  0E02               	movlw	2
 12322  016D92  D795               	goto	L32
 12323  016D94                     l14323:
 12324                           
 12325                           ;gemsecs.c: 1391:    block = GEM_STATE_ONLINE;
 12326  016D94  0E03               	movlw	3
 12327  016D96  D793               	goto	L32
 12328  016D98                     l14327:
 12329                           
 12330                           ;gemsecs.c: 1395:    if (block == GEM_STATE_DISABLE) {
 12331  016D98  501E               	movf	secs_gem_state@block^0,w,c
 12332  016D9A  B4D8               	btfsc	status,2,c
 12333  016D9C  D7F5               	goto	u10630
 12334  016D9E  D04C               	goto	l14359
 12335  016DA0                     l14335:
 12336                           
 12337                           ;stkvar	_function @ sp[(0)+-2]
 12338  016DA0  0EFE               	movlw	-2
 12339  016DA2  50E3               	movf	plusw1,w,c
 12340  016DA4  6E41               	movwf	(btemp+10)^0,c
 12341  016DA6  6A42               	clrf	(btemp+11)^0,c
 12342                           
 12343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12344                           ; Switch size 1, requested type "simple"
 12345                           ; Number of cases is 1, Range of values is 0 to 0
 12346                           ; switch strategies available:
 12347                           ; Name         Instructions Cycles
 12348                           ; simple_byte            4     3 (average)
 12349                           ;	Chosen strategy is simple_byte
 12350  016DA8  5042               	movf	(btemp+11)^0,w,c
 12351  016DAA  0A00               	xorlw	0	; case 0
 12352  016DAC  A4D8               	btfss	status,2,c
 12353  016DAE  D7F4               	goto	l14327
 12354                           
 12355                           ; Switch size 1, requested type "simple"
 12356                           ; Number of cases is 5, Range of values is 2 to 18
 12357                           ; switch strategies available:
 12358                           ; Name         Instructions Cycles
 12359                           ; simple_byte           16     9 (average)
 12360                           ;	Chosen strategy is simple_byte
 12361  016DB0  5041               	movf	(btemp+10)^0,w,c
 12362  016DB2  0A02               	xorlw	2	; case 2
 12363  016DB4  B4D8               	btfsc	status,2,c
 12364  016DB6  D74E               	goto	l14253
 12365  016DB8  0A0F               	xorlw	15	; case 13
 12366  016DBA  B4D8               	btfsc	status,2,c
 12367  016DBC  D7A9               	goto	l14291
 12368  016DBE  0A03               	xorlw	3	; case 14
 12369  016DC0  B4D8               	btfsc	status,2,c
 12370  016DC2  D7DE               	goto	l14313
 12371  016DC4  0A1E               	xorlw	30	; case 16
 12372  016DC6  B4D8               	btfsc	status,2,c
 12373  016DC8  D7E3               	goto	l14319
 12374  016DCA  0A02               	xorlw	2	; case 18
 12375  016DCC  B4D8               	btfsc	status,2,c
 12376  016DCE  D7E2               	goto	l14323
 12377  016DD0  D7E3               	goto	l14327
 12378  016DD2                     l14337:
 12379                           
 12380                           ;gemsecs.c: 1405:    V.alarm = function;
 12381                           ;stkvar	_function @ sp[(0)+-2]
 12382  016DD2  0EFE               	movlw	-2
 12383  016DD4  006F FF8C  F042    	movff	plusw1,btemp+11
 12384  016DDA  0060  F108  FD53   	movff	btemp+11,_V+313	;volatile
 12385                           
 12386                           ;gemsecs.c: 1406:    break;
 12387  016DE0  D02B               	goto	l14359
 12388  016DE2                     l14341:
 12389                           
 12390                           ;gemsecs.c: 1412:    V.alarm = function;
 12391                           ;stkvar	_function @ sp[(0)+-2]
 12392  016DE2  0EFE               	movlw	-2
 12393  016DE4  006F FF8C  F042    	movff	plusw1,btemp+11
 12394  016DEA  0060  F108  FD53   	movff	btemp+11,_V+313	;volatile
 12395                           
 12396                           ;gemsecs.c: 1413:    if (V.ticker != 45)
 12397  016DF0  0063  F66F  FFE8   	movff	_V+385,wreg	;volatile
 12398  016DF6  0A2D               	xorlw	45
 12399  016DF8  A4D8               	btfss	status,2,c
 12400  016DFA  D7C8               	goto	l14317
 12401  016DFC  D01D               	goto	l14359
 12402  016DFE                     l14349:
 12403                           
 12404                           ;gemsecs.c: 1419:   if (block == GEM_STATE_DISABLE) {
 12405  016DFE  501E               	movf	secs_gem_state@block^0,w,c
 12406  016E00  A4D8               	btfss	status,2,c
 12407  016E02  D01A               	goto	l14359
 12408                           
 12409                           ;gemsecs.c: 1420:    block = GEM_STATE_COMM;
 12410  016E04  0E01               	movlw	1
 12411  016E06  6E1E               	movwf	secs_gem_state@block^0,c
 12412                           
 12413                           ;gemsecs.c: 1421:    V.ticker = 45;
 12414  016E08  0E2D               	movlw	45
 12415  016E0A                     L33:
 12416  016E0A  006F FFA0  FD9B    	movff	wreg,_V+385	;volatile
 12417  016E10  D013               	goto	l14359
 12418  016E12                     l14357:
 12419                           
 12420                           ;stkvar	_stream @ sp[(0)+-1]
 12421  016E12  0EFF               	movlw	-1
 12422  016E14  50E3               	movf	plusw1,w,c
 12423  016E16  6E41               	movwf	(btemp+10)^0,c
 12424  016E18  6A42               	clrf	(btemp+11)^0,c
 12425                           
 12426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12427                           ; Switch size 1, requested type "simple"
 12428                           ; Number of cases is 1, Range of values is 0 to 0
 12429                           ; switch strategies available:
 12430                           ; Name         Instructions Cycles
 12431                           ; simple_byte            4     3 (average)
 12432                           ;	Chosen strategy is simple_byte
 12433  016E1A  5042               	movf	(btemp+11)^0,w,c
 12434  016E1C  0A00               	xorlw	0	; case 0
 12435  016E1E  A4D8               	btfss	status,2,c
 12436  016E20  D7EE               	goto	l14349
 12437                           
 12438                           ; Switch size 1, requested type "simple"
 12439                           ; Number of cases is 3, Range of values is 1 to 9
 12440                           ; switch strategies available:
 12441                           ; Name         Instructions Cycles
 12442                           ; simple_byte           10     6 (average)
 12443                           ;	Chosen strategy is simple_byte
 12444  016E22  5041               	movf	(btemp+10)^0,w,c
 12445  016E24  0A01               	xorlw	1	; case 1
 12446  016E26  B4D8               	btfsc	status,2,c
 12447  016E28  D7BB               	goto	l14335
 12448  016E2A  0A04               	xorlw	4	; case 5
 12449  016E2C  B4D8               	btfsc	status,2,c
 12450  016E2E  D7D1               	goto	l14337
 12451  016E30  0A0C               	xorlw	12	; case 9
 12452  016E32  B4D8               	btfsc	status,2,c
 12453  016E34  D7D6               	goto	l14341
 12454  016E36  D7E3               	goto	l14349
 12455  016E38                     l14359:
 12456                           
 12457                           ;gemsecs.c: 1426:  V.e_types = equipment;
 12458  016E38  EE23  F01D         	lfsr	2,_V+3	;volatile
 12459  016E3C  0060  F077  FFDF   	movff	secs_gem_state@equipment,indf2
 12460                           
 12461                           ;gemsecs.c: 1427:  return(block);
 12462  016E42  0060  F078  F037   	movff	secs_gem_state@block,btemp
 12463                           
 12464                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
 12465  016E48  52E5               	movf	postdec1,f,c
 12466  016E4A  52E5               	movf	postdec1,f,c
 12467  016E4C  0012               	return		;funcret
 12468  016E4E                     __end_of_secs_gem_state:
 12469                           	opt callstack 0
 12470                           
 12471 ;; *************** function _terminal_format *****************
 12472 ;; Defined at:
 12473 ;;		line 651 in file "gemsecs.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  t_format        1  [STACK] enum E17229
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;		None
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1  [STACK] void 
 12480 ;; Registers used:
 12481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/3C
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12491 ;;Total ram usage:        0 bytes
 12492 ;; Hardware stack levels used:    1
 12493 ;; Hardware stack levels required when called:   12
 12494 ;; This function calls:
 12495 ;;		_sprintf
 12496 ;; This function is called by:
 12497 ;;		_secs_II_message
 12498 ;;		_secs_gem_state
 12499 ;; This function uses a reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text21
 12503  0160F2                     __ptext21:
 12504                           	opt callstack 0
 12505  0160F2                     _terminal_format:
 12506                           	opt callstack 16
 12507                           
 12508                           ;gemsecs.c: 651: void terminal_format(DISPLAY_TYPES t_format);gemsecs.c: 652: {;gemsecs.
      +                          c: 653:  switch (t_format) {
 12509                           
 12510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12511                           ;incstack = 0
 12512  0160F2  D11C               	goto	l13949
 12513  0160F4                     l13939:
 12514                           
 12515                           ;gemsecs.c: 655:   sprintf(V.terminal, msg0,
 12516  0160F4  0ECA               	movlw	low STR_3
 12517  0160F6  6EE6               	movwf	postinc1,c
 12518  0160F8  0EFF               	movlw	high STR_3
 12519  0160FA  6EE6               	movwf	postinc1,c
 12520  0160FC  EE23  F159         	lfsr	2,_V+319	;volatile
 12521  016100  006F FF78  F041    	movff	postinc2,btemp+10
 12522  016106  006F FF74  F042    	movff	postdec2,btemp+11
 12523  01610C  0060  F107  FFE6   	movff	btemp+10,postinc1
 12524  016112  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12525  016118  EE23  F167         	lfsr	2,_V+333	;volatile
 12526  01611C  38DF               	swapf	223,w,c
 12527  01611E  0B0F               	andlw	15
 12528  016120  6EE6               	movwf	postinc1,c
 12529  016122  0E00               	movlw	0
 12530  016124  6EE6               	movwf	postinc1,c
 12531  016126  EE23  F020         	lfsr	2,_V+6	;volatile
 12532  01612A  50DF               	movf	indf2,w,c
 12533  01612C  6EE6               	movwf	postinc1,c
 12534  01612E  0E00               	movlw	0
 12535  016130  6EE6               	movwf	postinc1,c
 12536  016132  EE23  F168         	lfsr	2,_V+334	;volatile
 12537  016136  50DF               	movf	223,w,c
 12538  016138  0B0F               	andlw	15
 12539  01613A  6EE6               	movwf	postinc1,c
 12540  01613C  0E00               	movlw	0
 12541  01613E  6EE6               	movwf	postinc1,c
 12542  016140  EE23  F01F         	lfsr	2,_V+5	;volatile
 12543  016144  50DF               	movf	indf2,w,c
 12544  016146  6EE6               	movwf	postinc1,c
 12545  016148  0E00               	movlw	0
 12546  01614A  6EE6               	movwf	postinc1,c
 12547  01614C  EE23  F165         	lfsr	2,_V+331	;volatile
 12548  016150  006F FF78  F041    	movff	postinc2,btemp+10
 12549  016156  006F FF74  F042    	movff	postdec2,btemp+11
 12550  01615C  0060  F107  FFE6   	movff	btemp+10,postinc1
 12551  016162  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12552  016168  0E39               	movlw	low _msg0
 12553  01616A  6EE6               	movwf	postinc1,c
 12554  01616C  0EFB               	movlw	high _msg0
 12555  01616E  6EE6               	movwf	postinc1,c
 12556  016170  0E61               	movlw	low (_V+71)
 12557  016172  6EE6               	movwf	postinc1,c
 12558  016174  0E0C               	movlw	high (_V+71)
 12559  016176  6EE6               	movwf	postinc1,c
 12560  016178  0E12               	movlw	18
 12561  01617A  6EE6               	movwf	postinc1,c
 12562  01617C  EC95  F0BE         	call	_sprintf	;wreg free
 12563                           
 12564                           ;gemsecs.c: 657:   break;
 12565  016180  D0E8               	goto	l1844
 12566  016182                     l13941:
 12567                           
 12568                           ;gemsecs.c: 659:   sprintf(V.terminal, msg1,
 12569  016182  0ECA               	movlw	low STR_3
 12570  016184  6EE6               	movwf	postinc1,c
 12571  016186  0EFF               	movlw	high STR_3
 12572  016188  6EE6               	movwf	postinc1,c
 12573  01618A  EE23  F159         	lfsr	2,_V+319	;volatile
 12574  01618E  006F FF78  F041    	movff	postinc2,btemp+10
 12575  016194  006F FF74  F042    	movff	postdec2,btemp+11
 12576  01619A  0060  F107  FFE6   	movff	btemp+10,postinc1
 12577  0161A0  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12578  0161A6  EE23  F167         	lfsr	2,_V+333	;volatile
 12579  0161AA  38DF               	swapf	223,w,c
 12580  0161AC  0B0F               	andlw	15
 12581  0161AE  6EE6               	movwf	postinc1,c
 12582  0161B0  0E00               	movlw	0
 12583  0161B2  6EE6               	movwf	postinc1,c
 12584  0161B4  EE23  F020         	lfsr	2,_V+6	;volatile
 12585  0161B8  50DF               	movf	indf2,w,c
 12586  0161BA  6EE6               	movwf	postinc1,c
 12587  0161BC  0E00               	movlw	0
 12588  0161BE  6EE6               	movwf	postinc1,c
 12589  0161C0  EE23  F168         	lfsr	2,_V+334	;volatile
 12590  0161C4  50DF               	movf	223,w,c
 12591  0161C6  0B0F               	andlw	15
 12592  0161C8  6EE6               	movwf	postinc1,c
 12593  0161CA  0E00               	movlw	0
 12594  0161CC  6EE6               	movwf	postinc1,c
 12595  0161CE  EE23  F01F         	lfsr	2,_V+5	;volatile
 12596  0161D2  50DF               	movf	indf2,w,c
 12597  0161D4  6EE6               	movwf	postinc1,c
 12598  0161D6  0E00               	movlw	0
 12599  0161D8  6EE6               	movwf	postinc1,c
 12600  0161DA  EE23  F165         	lfsr	2,_V+331	;volatile
 12601  0161DE  006F FF78  F041    	movff	postinc2,btemp+10
 12602  0161E4  006F FF74  F042    	movff	postdec2,btemp+11
 12603  0161EA  0060  F107  FFE6   	movff	btemp+10,postinc1
 12604  0161F0  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12605  0161F6  0E92               	movlw	low _msg1
 12606  0161F8  6EE6               	movwf	postinc1,c
 12607  0161FA  0EFB               	movlw	high _msg1
 12608  0161FC  6EE6               	movwf	postinc1,c
 12609  0161FE  0E61               	movlw	low (_V+71)
 12610  016200  6EE6               	movwf	postinc1,c
 12611  016202  0E0C               	movlw	high (_V+71)
 12612  016204  6EE6               	movwf	postinc1,c
 12613  016206  0E12               	movlw	18
 12614  016208  6EE6               	movwf	postinc1,c
 12615  01620A  EC95  F0BE         	call	_sprintf	;wreg free
 12616                           
 12617                           ;gemsecs.c: 661:   break;
 12618  01620E  D0A1               	goto	l1844
 12619  016210                     l13943:
 12620                           
 12621                           ;gemsecs.c: 663:   sprintf(V.terminal, msg2,
 12622  016210  0ECA               	movlw	low STR_3
 12623  016212  6EE6               	movwf	postinc1,c
 12624  016214  0EFF               	movlw	high STR_3
 12625  016216  6EE6               	movwf	postinc1,c
 12626  016218  EE23  F159         	lfsr	2,_V+319	;volatile
 12627  01621C  006F FF78  F041    	movff	postinc2,btemp+10
 12628  016222  006F FF74  F042    	movff	postdec2,btemp+11
 12629  016228  0060  F107  FFE6   	movff	btemp+10,postinc1
 12630  01622E  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12631  016234  EE23  F167         	lfsr	2,_V+333	;volatile
 12632  016238  38DF               	swapf	223,w,c
 12633  01623A  0B0F               	andlw	15
 12634  01623C  6EE6               	movwf	postinc1,c
 12635  01623E  0E00               	movlw	0
 12636  016240  6EE6               	movwf	postinc1,c
 12637  016242  EE23  F020         	lfsr	2,_V+6	;volatile
 12638  016246  50DF               	movf	indf2,w,c
 12639  016248  6EE6               	movwf	postinc1,c
 12640  01624A  0E00               	movlw	0
 12641  01624C  6EE6               	movwf	postinc1,c
 12642  01624E  EE23  F168         	lfsr	2,_V+334	;volatile
 12643  016252  50DF               	movf	223,w,c
 12644  016254  0B0F               	andlw	15
 12645  016256  6EE6               	movwf	postinc1,c
 12646  016258  0E00               	movlw	0
 12647  01625A  6EE6               	movwf	postinc1,c
 12648  01625C  EE23  F01F         	lfsr	2,_V+5	;volatile
 12649  016260  50DF               	movf	indf2,w,c
 12650  016262  6EE6               	movwf	postinc1,c
 12651  016264  0E00               	movlw	0
 12652  016266  6EE6               	movwf	postinc1,c
 12653  016268  EE23  F165         	lfsr	2,_V+331	;volatile
 12654  01626C  006F FF78  F041    	movff	postinc2,btemp+10
 12655  016272  006F FF74  F042    	movff	postdec2,btemp+11
 12656  016278  0060  F107  FFE6   	movff	btemp+10,postinc1
 12657  01627E  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12658  016284  0EEA               	movlw	low _msg2
 12659  016286  6EE6               	movwf	postinc1,c
 12660  016288  0EFB               	movlw	high _msg2
 12661  01628A  6EE6               	movwf	postinc1,c
 12662  01628C  0E61               	movlw	low (_V+71)
 12663  01628E  6EE6               	movwf	postinc1,c
 12664  016290  0E0C               	movlw	high (_V+71)
 12665  016292  6EE6               	movwf	postinc1,c
 12666  016294  0E12               	movlw	18
 12667  016296  6EE6               	movwf	postinc1,c
 12668  016298  EC95  F0BE         	call	_sprintf	;wreg free
 12669                           
 12670                           ;gemsecs.c: 665:   break;
 12671  01629C  D05A               	goto	l1844
 12672  01629E                     l13945:
 12673                           
 12674                           ;gemsecs.c: 667:   sprintf(V.terminal, msg99,
 12675  01629E  0ECA               	movlw	low STR_3
 12676  0162A0  6EE6               	movwf	postinc1,c
 12677  0162A2  0EFF               	movlw	high STR_3
 12678  0162A4  6EE6               	movwf	postinc1,c
 12679  0162A6  EE23  F159         	lfsr	2,_V+319	;volatile
 12680  0162AA  006F FF78  F041    	movff	postinc2,btemp+10
 12681  0162B0  006F FF74  F042    	movff	postdec2,btemp+11
 12682  0162B6  0060  F107  FFE6   	movff	btemp+10,postinc1
 12683  0162BC  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12684  0162C2  EE23  F167         	lfsr	2,_V+333	;volatile
 12685  0162C6  38DF               	swapf	223,w,c
 12686  0162C8  0B0F               	andlw	15
 12687  0162CA  6EE6               	movwf	postinc1,c
 12688  0162CC  0E00               	movlw	0
 12689  0162CE  6EE6               	movwf	postinc1,c
 12690  0162D0  EE23  F020         	lfsr	2,_V+6	;volatile
 12691  0162D4  50DF               	movf	indf2,w,c
 12692  0162D6  6EE6               	movwf	postinc1,c
 12693  0162D8  0E00               	movlw	0
 12694  0162DA  6EE6               	movwf	postinc1,c
 12695  0162DC  EE23  F168         	lfsr	2,_V+334	;volatile
 12696  0162E0  50DF               	movf	223,w,c
 12697  0162E2  0B0F               	andlw	15
 12698  0162E4  6EE6               	movwf	postinc1,c
 12699  0162E6  0E00               	movlw	0
 12700  0162E8  6EE6               	movwf	postinc1,c
 12701  0162EA  EE23  F01F         	lfsr	2,_V+5	;volatile
 12702  0162EE  50DF               	movf	indf2,w,c
 12703  0162F0  6EE6               	movwf	postinc1,c
 12704  0162F2  0E00               	movlw	0
 12705  0162F4  6EE6               	movwf	postinc1,c
 12706  0162F6  EE23  F165         	lfsr	2,_V+331	;volatile
 12707  0162FA  006F FF78  F041    	movff	postinc2,btemp+10
 12708  016300  006F FF74  F042    	movff	postdec2,btemp+11
 12709  016306  0060  F107  FFE6   	movff	btemp+10,postinc1
 12710  01630C  0060  F10B  FFE6   	movff	btemp+11,postinc1
 12711  016312  0E40               	movlw	low _msg99
 12712  016314  6EE6               	movwf	postinc1,c
 12713  016316  0EFC               	movlw	high _msg99
 12714  016318  6EE6               	movwf	postinc1,c
 12715  01631A  0E61               	movlw	low (_V+71)
 12716  01631C  6EE6               	movwf	postinc1,c
 12717  01631E  0E0C               	movlw	high (_V+71)
 12718  016320  6EE6               	movwf	postinc1,c
 12719  016322  0E12               	movlw	18
 12720  016324  6EE6               	movwf	postinc1,c
 12721  016326  EC95  F0BE         	call	_sprintf	;wreg free
 12722                           
 12723                           ;gemsecs.c: 669:   break;
 12724  01632A  D013               	goto	l1844
 12725  01632C                     l13949:
 12726                           
 12727                           ;stkvar	_t_format @ sp[(0)+-1]
 12728  01632C  0EFF               	movlw	-1
 12729  01632E  50E3               	movf	plusw1,w,c
 12730  016330  6E41               	movwf	(btemp+10)^0,c
 12731  016332  6A42               	clrf	(btemp+11)^0,c
 12732                           
 12733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12734                           ; Switch size 1, requested type "simple"
 12735                           ; Number of cases is 1, Range of values is 0 to 0
 12736                           ; switch strategies available:
 12737                           ; Name         Instructions Cycles
 12738                           ; simple_byte            4     3 (average)
 12739                           ;	Chosen strategy is simple_byte
 12740  016334  5042               	movf	(btemp+11)^0,w,c
 12741  016336  0A00               	xorlw	0	; case 0
 12742  016338  A4D8               	btfss	status,2,c
 12743  01633A  D7B1               	goto	l13945
 12744                           
 12745                           ; Switch size 1, requested type "simple"
 12746                           ; Number of cases is 3, Range of values is 0 to 2
 12747                           ; switch strategies available:
 12748                           ; Name         Instructions Cycles
 12749                           ; simple_byte           10     6 (average)
 12750                           ;	Chosen strategy is simple_byte
 12751  01633C  5041               	movf	(btemp+10)^0,w,c
 12752  01633E  0A00               	xorlw	0	; case 0
 12753  016340  B4D8               	btfsc	status,2,c
 12754  016342  D6D8               	goto	l13939
 12755  016344  0A01               	xorlw	1	; case 1
 12756  016346  B4D8               	btfsc	status,2,c
 12757  016348  D71C               	goto	l13941
 12758  01634A  0A03               	xorlw	3	; case 2
 12759  01634C  B4D8               	btfsc	status,2,c
 12760  01634E  D760               	goto	l13943
 12761  016350  D7A6               	goto	l13945
 12762  016352                     l1844:
 12763                           
 12764                           ; _terminal_format: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
 12765  016352  52E5               	movf	postdec1,f,c
 12766  016354  0012               	return		;funcret
 12767  016356                     __end_of_terminal_format:
 12768                           	opt callstack 0
 12769                           
 12770 ;; *************** function _sequence_messages *****************
 12771 ;; Defined at:
 12772 ;;		line 587 in file "gemsecs.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  sid             1  [STACK] const unsigned char 
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;		None
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1  [STACK] _Bool 
 12779 ;; Registers used:
 12780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/3C
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12790 ;;Total ram usage:        0 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:    4
 12793 ;; This function calls:
 12794 ;;		_StartTimer
 12795 ;; This function is called by:
 12796 ;;		_secs_II_message
 12797 ;;		_secs_gem_state
 12798 ;; This function uses a reentrant model
 12799 ;;
 12800                           
 12801                           	psect	text22
 12802  0150C6                     __ptext22:
 12803                           	opt callstack 0
 12804  0150C6                     _sequence_messages:
 12805                           	opt callstack 24
 12806                           
 12807                           ;gemsecs.c: 587: _Bool sequence_messages(const uint8_t sid);gemsecs.c: 588: {;gemsecs.c:
      +                           589:  V.msg_error = MSG_ERROR_NONE;
 12808                           
 12809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12810                           ;incstack = 0
 12811  0150C6  0E00               	movlw	0
 12812  0150C8  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 12813                           
 12814                           ;gemsecs.c: 590:  switch (sid) {
 12815  0150CE  D164               	goto	l9615
 12816  0150D0                     l1830:
 12817                           
 12818                           ;gemsecs.c: 592:   S[0].stack = 6;
 12819  0150D0  0E06               	movlw	6
 12820  0150D2  006F FFA0  F92F    	movff	wreg,_S+45
 12821                           
 12822                           ;gemsecs.c: 593:   S[0].message = HC33[1];
 12823  0150D8  0E15               	movlw	low (_HC33+36)
 12824  0150DA  6EF6               	movwf	tblptrl,c
 12825  0150DC  0EFB               	movlw	high (_HC33+36)
 12826  0150DE  6EF7               	movwf	tblptrh,c
 12827  0150E0                     	if	0	;tblptru may be non-zero
 12828  0150E0                     	endif
 12829  0150E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12830  0150E0  0E00               	movlw	low (__mediumconst shr (0+16))
 12831  0150E2  6EF8               	movwf	tblptru,c
 12832  0150E4                     	endif
 12833  0150E4  EE22  F102         	lfsr	2,_S
 12834  0150E8  0E23               	movlw	35
 12835  0150EA                     u6730:
 12836  0150EA  0009               	tblrd		*+
 12837  0150EC  006F FFD7 FFDE     	movff	tablat,postinc2
 12838  0150F2  06E8               	decf	wreg,f,c
 12839  0150F4  E2FA               	bc	u6730
 12840                           
 12841                           ;gemsecs.c: 594:   S[1].message = HC33[1];
 12842  0150F6  0E15               	movlw	low (_HC33+36)
 12843  0150F8  6EF6               	movwf	tblptrl,c
 12844  0150FA  0EFB               	movlw	high (_HC33+36)
 12845  0150FC  6EF7               	movwf	tblptrh,c
 12846  0150FE                     	if	0	;tblptru may be non-zero
 12847  0150FE                     	endif
 12848  0150FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12849  0150FE  0E00               	movlw	low (__mediumconst shr (0+16))
 12850  015100  6EF8               	movwf	tblptru,c
 12851  015102                     	endif
 12852  015102  EE22  F130         	lfsr	2,_S+46
 12853  015106  0E23               	movlw	35
 12854  015108                     u6740:
 12855  015108  0009               	tblrd		*+
 12856  01510A  006F FFD7 FFDE     	movff	tablat,postinc2
 12857  015110  06E8               	decf	wreg,f,c
 12858  015112  E2FA               	bc	u6740
 12859                           
 12860                           ;gemsecs.c: 595:   S[2].message = HC33[1];
 12861  015114  0E15               	movlw	low (_HC33+36)
 12862  015116  6EF6               	movwf	tblptrl,c
 12863  015118  0EFB               	movlw	high (_HC33+36)
 12864  01511A  6EF7               	movwf	tblptrh,c
 12865  01511C                     	if	0	;tblptru may be non-zero
 12866  01511C                     	endif
 12867  01511C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12868  01511C  0E00               	movlw	low (__mediumconst shr (0+16))
 12869  01511E  6EF8               	movwf	tblptru,c
 12870  015120                     	endif
 12871  015120  EE22  F15E         	lfsr	2,_S+92
 12872  015124  0E23               	movlw	35
 12873  015126                     u6750:
 12874  015126  0009               	tblrd		*+
 12875  015128  006F FFD7 FFDE     	movff	tablat,postinc2
 12876  01512E  06E8               	decf	wreg,f,c
 12877  015130  E2FA               	bc	u6750
 12878                           
 12879                           ;gemsecs.c: 596:   S[3].message = HC33[0];
 12880  015132  0EF1               	movlw	low _HC33
 12881  015134  6EF6               	movwf	tblptrl,c
 12882  015136                     	if	1	;There is more than 1 active tblptr byte
 12883  015136  0EFA               	movlw	high _HC33
 12884  015138  6EF7               	movwf	tblptrh,c
 12885  01513A                     	endif
 12886  01513A                     	if	1	;There are 3 active tblptr bytes
 12887  01513A  0E00               	movlw	low (_HC33 shr (0+16))
 12888  01513C  6EF8               	movwf	tblptru,c
 12889  01513E                     	endif
 12890  01513E  EE22  F18C         	lfsr	2,_S+138
 12891  015142  0E23               	movlw	35
 12892  015144                     u6760:
 12893  015144  0009               	tblrd		*+
 12894  015146  006F FFD7 FFDE     	movff	tablat,postinc2
 12895  01514C  06E8               	decf	wreg,f,c
 12896  01514E  E2FA               	bc	u6760
 12897                           
 12898                           ;gemsecs.c: 597:   S[4].message = HC33[0];
 12899  015150  0EF1               	movlw	low _HC33
 12900  015152  6EF6               	movwf	tblptrl,c
 12901  015154                     	if	1	;There is more than 1 active tblptr byte
 12902  015154  0EFA               	movlw	high _HC33
 12903  015156  6EF7               	movwf	tblptrh,c
 12904  015158                     	endif
 12905  015158                     	if	1	;There are 3 active tblptr bytes
 12906  015158  0E00               	movlw	low (_HC33 shr (0+16))
 12907  01515A  6EF8               	movwf	tblptru,c
 12908  01515C                     	endif
 12909  01515C  EE22  F1BA         	lfsr	2,_S+184
 12910  015160  0E23               	movlw	35
 12911  015162                     u6770:
 12912  015162  0009               	tblrd		*+
 12913  015164  006F FFD7 FFDE     	movff	tablat,postinc2
 12914  01516A  06E8               	decf	wreg,f,c
 12915  01516C  E2FA               	bc	u6770
 12916                           
 12917                           ;gemsecs.c: 598:   S[5].message = HC33[0];
 12918  01516E  0EF1               	movlw	low _HC33
 12919  015170  6EF6               	movwf	tblptrl,c
 12920  015172                     	if	1	;There is more than 1 active tblptr byte
 12921  015172  0EFA               	movlw	high _HC33
 12922  015174  6EF7               	movwf	tblptrh,c
 12923  015176                     	endif
 12924  015176                     	if	1	;There are 3 active tblptr bytes
 12925  015176  0E00               	movlw	low (_HC33 shr (0+16))
 12926  015178  6EF8               	movwf	tblptru,c
 12927  01517A                     	endif
 12928  01517A  EE22  F1E8         	lfsr	2,_S+230
 12929  01517E  0E23               	movlw	35
 12930  015180                     u6780:
 12931  015180  0009               	tblrd		*+
 12932  015182  006F FFD7 FFDE     	movff	tablat,postinc2
 12933  015188  06E8               	decf	wreg,f,c
 12934  01518A  E2FA               	bc	u6780
 12935                           
 12936                           ;gemsecs.c: 600:   S[0].message.data[0] = 0x01;
 12937  01518C  0E01               	movlw	1
 12938  01518E  006F FFA0  F904    	movff	wreg,_S+2
 12939                           
 12940                           ;gemsecs.c: 601:   S[1].message.data[0] = 0x02;
 12941  015194  0E02               	movlw	2
 12942  015196  006F FFA0  F932    	movff	wreg,_S+48
 12943                           
 12944                           ;gemsecs.c: 602:   S[2].message.data[0] = 0x03;
 12945  01519C  0E03               	movlw	3
 12946  01519E  006F FFA0  F960    	movff	wreg,_S+94
 12947                           
 12948                           ;gemsecs.c: 603:   S[3].message.data[0] = 0x01;
 12949  0151A4  0E01               	movlw	1
 12950  0151A6  006F FFA0  F98E    	movff	wreg,_S+140
 12951                           
 12952                           ;gemsecs.c: 604:   S[4].message.data[0] = 0x02;
 12953  0151AC  0E02               	movlw	2
 12954  0151AE  006F FFA0  F9BC    	movff	wreg,_S+186
 12955                           
 12956                           ;gemsecs.c: 605:   S[5].message.data[0] = 0x03;
 12957  0151B4  0E03               	movlw	3
 12958  0151B6  006F FFA0  F9EA    	movff	wreg,_S+232
 12959                           
 12960                           ;gemsecs.c: 607:   S[0].delay = 10000;
 12961  0151BC  0E10               	movlw	16
 12962  0151BE  006F FFA0  F92D    	movff	wreg,_S+43
 12963  0151C4  0E27               	movlw	39
 12964  0151C6  006F FFA0  F92E    	movff	wreg,_S+44
 12965                           
 12966                           ;gemsecs.c: 608:   S[1].delay = 10000;
 12967  0151CC  0E10               	movlw	16
 12968  0151CE  006F FFA0  F95B    	movff	wreg,_S+89
 12969  0151D4  0E27               	movlw	39
 12970  0151D6  006F FFA0  F95C    	movff	wreg,_S+90
 12971                           
 12972                           ;gemsecs.c: 609:   S[2].delay = 10000;
 12973  0151DC  0E10               	movlw	16
 12974  0151DE  006F FFA0  F989    	movff	wreg,_S+135
 12975  0151E4  0E27               	movlw	39
 12976  0151E6  006F FFA0  F98A    	movff	wreg,_S+136
 12977                           
 12978                           ;gemsecs.c: 610:   S[3].delay = 10000;
 12979  0151EC  0E10               	movlw	16
 12980  0151EE  006F FFA0  F9B7    	movff	wreg,_S+181
 12981  0151F4  0E27               	movlw	39
 12982  0151F6  006F FFA0  F9B8    	movff	wreg,_S+182
 12983                           
 12984                           ;gemsecs.c: 611:   S[4].delay = 10000;
 12985  0151FC  0E10               	movlw	16
 12986  0151FE  006F FFA0  F9E5    	movff	wreg,_S+227
 12987  015204  0E27               	movlw	39
 12988  015206  006F FFA0  F9E6    	movff	wreg,_S+228
 12989                           
 12990                           ;gemsecs.c: 612:   S[5].delay = 10000;
 12991  01520C  0E10               	movlw	16
 12992  01520E  006F FFA0  FA13    	movff	wreg,_S+273
 12993  015214  0E27               	movlw	39
 12994  015216  006F FFA0  FA14    	movff	wreg,_S+274
 12995                           
 12996                           ;gemsecs.c: 614:   S[0].block.header = (uint8_t*) & S[0].message;
 12997  01521C  0E02               	movlw	low _S
 12998  01521E  006F FFA0  F926    	movff	wreg,_S+36
 12999  015224  0E09               	movlw	high _S
 13000  015226  006F FFA0  F927    	movff	wreg,_S+37
 13001                           
 13002                           ;gemsecs.c: 615:   S[0].block.length = sizeof(header33);
 13003  01522C  0E24               	movlw	36
 13004  01522E  006F FFA0  F928    	movff	wreg,_S+38
 13005                           
 13006                           ;gemsecs.c: 616:   S[1].block.header = (uint8_t*) & S[1].message;
 13007  015234  0E30               	movlw	low (_S+46)
 13008  015236  006F FFA0  F954    	movff	wreg,_S+82
 13009  01523C  0E09               	movlw	high (_S+46)
 13010  01523E  006F FFA0  F955    	movff	wreg,_S+83
 13011                           
 13012                           ;gemsecs.c: 617:   S[1].block.length = sizeof(header33);
 13013  015244  0E24               	movlw	36
 13014  015246  006F FFA0  F956    	movff	wreg,_S+84
 13015                           
 13016                           ;gemsecs.c: 618:   S[2].block.header = (uint8_t*) & S[2].message;
 13017  01524C  0E5E               	movlw	low (_S+92)
 13018  01524E  006F FFA0  F982    	movff	wreg,_S+128
 13019  015254  0E09               	movlw	high (_S+92)
 13020  015256  006F FFA0  F983    	movff	wreg,_S+129
 13021                           
 13022                           ;gemsecs.c: 619:   S[2].block.length = sizeof(header33);
 13023  01525C  0E24               	movlw	36
 13024  01525E  006F FFA0  F984    	movff	wreg,_S+130
 13025                           
 13026                           ;gemsecs.c: 620:   S[3].block.header = (uint8_t*) & S[3].message;
 13027  015264  0E8C               	movlw	low (_S+138)
 13028  015266  006F FFA0  F9B0    	movff	wreg,_S+174
 13029  01526C  0E09               	movlw	high (_S+138)
 13030  01526E  006F FFA0  F9B1    	movff	wreg,_S+175
 13031                           
 13032                           ;gemsecs.c: 621:   S[3].block.length = sizeof(header33);
 13033  015274  0E24               	movlw	36
 13034  015276  006F FFA0  F9B2    	movff	wreg,_S+176
 13035                           
 13036                           ;gemsecs.c: 622:   S[4].block.header = (uint8_t*) & S[4].message;
 13037  01527C  0EBA               	movlw	low (_S+184)
 13038  01527E  006F FFA0  F9DE    	movff	wreg,_S+220
 13039  015284  0E09               	movlw	high (_S+184)
 13040  015286  006F FFA0  F9DF    	movff	wreg,_S+221
 13041                           
 13042                           ;gemsecs.c: 623:   S[4].block.length = sizeof(header33);
 13043  01528C  0E24               	movlw	36
 13044  01528E  006F FFA0  F9E0    	movff	wreg,_S+222
 13045                           
 13046                           ;gemsecs.c: 624:   S[5].block.header = (uint8_t*) & S[5].message;
 13047  015294  0EE8               	movlw	low (_S+230)
 13048  015296  006F FFA0  FA0C    	movff	wreg,_S+266
 13049  01529C  0E09               	movlw	high (_S+230)
 13050  01529E  006F FFA0  FA0D    	movff	wreg,_S+267
 13051                           
 13052                           ;gemsecs.c: 625:   S[5].block.length = sizeof(header33);
 13053  0152A4  0E24               	movlw	36
 13054  0152A6  006F FFA0  FA0E    	movff	wreg,_S+268
 13055                           
 13056                           ;gemsecs.c: 626:   V.stack = S[0].stack;
 13057  0152AC  0062  F4BC  F042   	movff	_S+45,btemp+11
 13058  0152B2  EE23  F169         	lfsr	2,_V+335	;volatile
 13059  0152B6  50DF               	movf	223,w,c
 13060  0152B8  1842               	xorwf	(btemp+11)^0,w,c
 13061  0152BA  0BF8               	andlw	-8
 13062  0152BC  1842               	xorwf	(btemp+11)^0,w,c
 13063  0152BE  6EDF               	movwf	223,c
 13064                           
 13065                           ;gemsecs.c: 627:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
 13066  0152C0  EE23  F169         	lfsr	2,_V+335	;volatile
 13067  0152C4  50DF               	movf	223,w,c
 13068  0152C6  0B07               	andlw	7
 13069  0152C8  0D2E               	mullw	46
 13070  0152CA  0EFF               	movlw	low (_S+65533)
 13071  0152CC  24F3               	addwf	243,w,c
 13072  0152CE  6ED9               	movwf	fsr2l,c
 13073  0152D0  0E08               	movlw	high (_S+65533)
 13074  0152D2  20F4               	addwfc	prodh,w,c
 13075  0152D4  6EDA               	movwf	fsr2h,c
 13076  0152D6  006F FF78  F041    	movff	postinc2,btemp+10
 13077  0152DC  006F FF74  F042    	movff	postdec2,btemp+11
 13078  0152E2  0060  F107  FFE6   	movff	btemp+10,postinc1
 13079  0152E8  0060  F10B  FFE6   	movff	btemp+11,postinc1
 13080  0152EE  0E06               	movlw	6
 13081  0152F0  6EE6               	movwf	postinc1,c
 13082  0152F2  EC12  F0C9         	call	_StartTimer	;wreg free
 13083                           
 13084                           ;gemsecs.c: 628:   break;
 13085  0152F6  D063               	goto	l1835
 13086  0152F8                     l1833:
 13087                           
 13088                           ;gemsecs.c: 631:   D[0].stack = 1;
 13089  0152F8  0E01               	movlw	1
 13090  0152FA  006F FFA0  FB73    	movff	wreg,_D+165
 13091                           
 13092                           ;gemsecs.c: 632:   D[0].message = H153[0];
 13093  015300  EE23  F19D         	lfsr	2,_H153
 13094  015304  EE02  F2CE         	lfsr	0,_D
 13095  015308  0E9B               	movlw	155
 13096  01530A                     u6791:
 13097  01530A  006F FF7B FFEE     	movff	postinc2,postinc0
 13098  015310  06E8               	decf	wreg,f,c
 13099  015312  E2FB               	bc	u6791
 13100  015314  0E9C               	movlw	156
 13101  015316  5ED9               	subwf	fsr2l,f,c
 13102  015318  5EE9               	subwf	fsr0l,f,c
 13103                           
 13104                           ;gemsecs.c: 633:   D[0].delay = 5000;
 13105  01531A  0E88               	movlw	136
 13106  01531C  006F FFA0  FB71    	movff	wreg,_D+163
 13107  015322  0E13               	movlw	19
 13108  015324  006F FFA0  FB72    	movff	wreg,_D+164
 13109                           
 13110                           ;gemsecs.c: 634:   D[0].block.header = (uint8_t*) & D[0].message;
 13111  01532A  0ECE               	movlw	low _D
 13112  01532C  006F FFA0  FB6A    	movff	wreg,_D+156
 13113  015332  0E0A               	movlw	high _D
 13114  015334  006F FFA0  FB6B    	movff	wreg,_D+157
 13115                           
 13116                           ;gemsecs.c: 635:   D[0].block.length = sizeof(header153);
 13117  01533A  0E9C               	movlw	156
 13118  01533C  006F FFA0  FB6C    	movff	wreg,_D+158
 13119                           
 13120                           ;gemsecs.c: 636:   V.stack = D[0].stack;
 13121  015342  0062  FDCC  F042   	movff	_D+165,btemp+11
 13122  015348  EE23  F169         	lfsr	2,_V+335	;volatile
 13123  01534C  50DF               	movf	223,w,c
 13124  01534E  1842               	xorwf	(btemp+11)^0,w,c
 13125  015350  0BF8               	andlw	-8
 13126  015352  1842               	xorwf	(btemp+11)^0,w,c
 13127  015354  6EDF               	movwf	223,c
 13128                           
 13129                           ;gemsecs.c: 637:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
 13130  015356  EE23  F169         	lfsr	2,_V+335	;volatile
 13131  01535A  50DF               	movf	223,w,c
 13132  01535C  0B07               	andlw	7
 13133  01535E  0DA6               	mullw	166
 13134  015360  0ECB               	movlw	low (_D+65533)
 13135  015362  24F3               	addwf	243,w,c
 13136  015364  6ED9               	movwf	fsr2l,c
 13137  015366  0E0A               	movlw	high (_D+65533)
 13138  015368  20F4               	addwfc	prodh,w,c
 13139  01536A  6EDA               	movwf	fsr2h,c
 13140  01536C  006F FF78  F041    	movff	postinc2,btemp+10
 13141  015372  006F FF74  F042    	movff	postdec2,btemp+11
 13142  015378  0060  F107  FFE6   	movff	btemp+10,postinc1
 13143  01537E  0060  F10B  FFE6   	movff	btemp+11,postinc1
 13144  015384  0E06               	movlw	6
 13145  015386  6EE6               	movwf	postinc1,c
 13146  015388  EC12  F0C9         	call	_StartTimer	;wreg free
 13147                           
 13148                           ;gemsecs.c: 638:   break;
 13149  01538C  D018               	goto	l1835
 13150  01538E                     l9607:
 13151                           
 13152                           ;gemsecs.c: 640:   V.stack = 0;
 13153  01538E  EE23  F169         	lfsr	2,_V+335	;volatile
 13154  015392  0EF8               	movlw	-8
 13155  015394  16DF               	andwf	223,f,c
 13156  015396  D013               	goto	l1835
 13157  015398                     l9615:
 13158                           
 13159                           ;stkvar	_sid @ sp[(0)+-1]
 13160  015398  0EFF               	movlw	-1
 13161  01539A  50E3               	movf	plusw1,w,c
 13162  01539C  6E41               	movwf	(btemp+10)^0,c
 13163  01539E  6A42               	clrf	(btemp+11)^0,c
 13164                           
 13165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13166                           ; Switch size 1, requested type "simple"
 13167                           ; Number of cases is 1, Range of values is 0 to 0
 13168                           ; switch strategies available:
 13169                           ; Name         Instructions Cycles
 13170                           ; simple_byte            4     3 (average)
 13171                           ;	Chosen strategy is simple_byte
 13172  0153A0  5042               	movf	(btemp+11)^0,w,c
 13173  0153A2  0A00               	xorlw	0	; case 0
 13174  0153A4  A4D8               	btfss	status,2,c
 13175  0153A6  D7F3               	goto	l9607
 13176                           
 13177                           ; Switch size 1, requested type "simple"
 13178                           ; Number of cases is 3, Range of values is 1 to 11
 13179                           ; switch strategies available:
 13180                           ; Name         Instructions Cycles
 13181                           ; simple_byte           10     6 (average)
 13182                           ;	Chosen strategy is simple_byte
 13183  0153A8  5041               	movf	(btemp+10)^0,w,c
 13184  0153AA  0A01               	xorlw	1	; case 1
 13185  0153AC  B4D8               	btfsc	status,2,c
 13186  0153AE  D690               	goto	l1830
 13187  0153B0  0A0B               	xorlw	11	; case 10
 13188  0153B2  B4D8               	btfsc	status,2,c
 13189  0153B4  D7A1               	goto	l1833
 13190  0153B6  0A01               	xorlw	1	; case 11
 13191  0153B8  B4D8               	btfsc	status,2,c
 13192  0153BA  D79E               	goto	l1833
 13193  0153BC  D7E8               	goto	l9607
 13194  0153BE                     l1835:
 13195                           
 13196                           ; _sequence_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 13197  0153BE  52E5               	movf	postdec1,f,c
 13198  0153C0  0012               	return		;funcret
 13199  0153C2                     __end_of_sequence_messages:
 13200                           	opt callstack 0
 13201                           
 13202 ;; *************** function _format_display_text *****************
 13203 ;; Defined at:
 13204 ;;		line 677 in file "gemsecs.c"
 13205 ;; Parameters:    Size  Location     Type
 13206 ;;  data            2  [STACK] PTR const unsigned char 
 13207 ;;		 -> V.terminal(160), V(387), 
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;  j               2  [STACK] short 
 13210 ;;  k               2  [STACK] short 
 13211 ;;  i               2  [STACK] short 
 13212 ;;  z               2  [STACK] short 
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  2  [STACK] unsigned short 
 13215 ;; Registers used:
 13216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/3C
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13226 ;;Total ram usage:        0 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; Hardware stack levels required when called:    4
 13229 ;; This function calls:
 13230 ;;		_strlen
 13231 ;; This function is called by:
 13232 ;;		_secs_II_message
 13233 ;;		_secs_gem_state
 13234 ;; This function uses a reentrant model
 13235 ;;
 13236                           
 13237                           	psect	text23
 13238  01735E                     __ptext23:
 13239                           	opt callstack 0
 13240  01735E                     _format_display_text:
 13241                           	opt callstack 0
 13242                           
 13243                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13244  01735E  0E08               	movlw	8
 13245  017360  26E1               	addwf	fsr1l,f,c
 13246  017362  0E00               	movlw	0
 13247  017364  22E2               	addwfc	fsr1h,f,c
 13248                           
 13249                           ;gemsecs.c: 677: uint16_t format_display_text(const char *data);gemsecs.c: 678: {;gemsec
      +                          s.c: 679:  int16_t j, i = 0, k, z = 0;
 13250                           ;stkvar	_i @ sp[(-8)+4]
 13251                           
 13252                           ;incstack = 0
 13253  017366  0EFC               	movlw	-4
 13254  017368  6AE3               	clrf	plusw1,c
 13255  01736A  0EFD               	movlw	-3
 13256  01736C  6AE3               	clrf	plusw1,c
 13257                           
 13258                           ;stkvar	_z @ sp[(-8)+6]
 13259  01736E  0EFE               	movlw	-2
 13260  017370  6AE3               	clrf	plusw1,c
 13261  017372  0EFF               	movlw	-1
 13262  017374  6AE3               	clrf	plusw1,c
 13263                           
 13264                           ;gemsecs.c: 681:  k = strlen(data);
 13265                           ;stkvar	_data @ sp[(-8)+-2]
 13266  017376  0EF6               	movlw	-10
 13267  017378  006F FF8F FFE6     	movff	plusw1,postinc1
 13268  01737E  006F FF8F FFE6     	movff	plusw1,postinc1
 13269  017384  ECF3  F0C2         	call	_strlen	;wreg free
 13270                           
 13271                           ;stkvar	_k @ sp[(-8)+2]
 13272  017388  0EFA               	movlw	-6
 13273  01738A  0060  F0DF  FFE3   	movff	btemp,plusw1
 13274  017390  0EFB               	movlw	-5
 13275  017392  0060  F0E3  FFE3   	movff	btemp+1,plusw1
 13276                           
 13277                           ;gemsecs.c: 683:  if (!k)
 13278                           ;stkvar	_k @ sp[(-8)+2]
 13279  017398  0EFA               	movlw	-6
 13280  01739A  006F FF8C  F037    	movff	plusw1,btemp
 13281  0173A0  0EFB               	movlw	-5
 13282  0173A2  50E3               	movf	plusw1,w,c
 13283  0173A4  1037               	iorwf	btemp^0,w,c
 13284  0173A6  B4D8               	btfsc	status,2,c
 13285  0173A8  D086               	goto	u6820
 13286                           
 13287                           ;gemsecs.c: 689:  for (j = 135; j >= z; j--) {
 13288  0173AA  0E87               	movlw	135
 13289  0173AC  6E41               	movwf	(btemp+10)^0,c
 13290  0173AE  0E00               	movlw	0
 13291  0173B0  6E42               	movwf	(btemp+11)^0,c
 13292                           
 13293                           ;stkvar	_j @ sp[(-8)+0]
 13294  0173B2  0EF8               	movlw	-8
 13295  0173B4  0060  F107  FFE3   	movff	btemp+10,plusw1
 13296  0173BA  0EF9               	movlw	-7
 13297  0173BC  0060  F10B  FFE3   	movff	btemp+11,plusw1
 13298  0173C2  D066               	goto	l9659
 13299  0173C4                     l9649:
 13300                           
 13301                           ;gemsecs.c: 690:   if (i < k) {
 13302                           ;stkvar	_k @ sp[(-8)+2]
 13303                           ;stkvar	_i @ sp[(-8)+4]
 13304  0173C4  50E1               	movf	fsr1l,w,c
 13305  0173C6  0FFC               	addlw	-4
 13306  0173C8  6ED9               	movwf	fsr2l,c
 13307  0173CA  50E2               	movf	fsr1h,w,c
 13308  0173CC  6EDA               	movwf	fsr2h,c
 13309  0173CE  0EFF               	movlw	255
 13310  0173D0  22DA               	addwfc	fsr2h,f,c
 13311  0173D2  0EFA               	movlw	-6
 13312  0173D4  50E3               	movf	plusw1,w,c
 13313  0173D6  5CDE               	subwf	postinc2,w,c
 13314  0173D8  50DE               	movf	postinc2,w,c
 13315  0173DA  0A80               	xorlw	128
 13316  0173DC  6E37               	movwf	btemp^0,c
 13317  0173DE  0EFB               	movlw	-5
 13318  0173E0  50E3               	movf	plusw1,w,c
 13319  0173E2  0A80               	xorlw	128
 13320  0173E4  5837               	subwfb	btemp^0,w,c
 13321  0173E6  B0D8               	btfsc	status,0,c
 13322  0173E8  D039               	goto	l9655
 13323                           
 13324                           ;gemsecs.c: 691:    H153[0].data[j] = data[i++];
 13325                           ;stkvar	_i @ sp[(-8)+4]
 13326  0173EA  0EFC               	movlw	-4
 13327  0173EC  006F FF8C  F041    	movff	plusw1,btemp+10
 13328  0173F2  0EFD               	movlw	-3
 13329  0173F4  006F FF8C  F042    	movff	plusw1,btemp+11
 13330                           
 13331                           ;stkvar	_data @ sp[(-8)+-2]
 13332  0173FA  0EF6               	movlw	-10
 13333  0173FC  006F FF8C  F03F    	movff	plusw1,btemp+8
 13334  017402  0EF7               	movlw	-9
 13335  017404  006F FF8C  F040    	movff	plusw1,btemp+9
 13336  01740A  5041               	movf	(btemp+10)^0,w,c
 13337  01740C  243F               	addwf	(btemp+8)^0,w,c
 13338  01740E  6ED9               	movwf	fsr2l,c
 13339  017410  5042               	movf	(btemp+11)^0,w,c
 13340  017412  2040               	addwfc	(btemp+9)^0,w,c
 13341  017414  6EDA               	movwf	fsr2h,c
 13342                           
 13343                           ;stkvar	_j @ sp[(-8)+0]
 13344  017416  0EF8               	movlw	-8
 13345  017418  006F FF8C  F041    	movff	plusw1,btemp+10
 13346  01741E  0EF9               	movlw	-7
 13347  017420  006F FF8C  F042    	movff	plusw1,btemp+11
 13348  017426  0E9F               	movlw	low (_H153+2)
 13349  017428  2441               	addwf	(btemp+10)^0,w,c
 13350  01742A  6EE9               	movwf	fsr0l,c
 13351  01742C  0E0D               	movlw	high (_H153+2)
 13352  01742E  2042               	addwfc	(btemp+11)^0,w,c
 13353  017430  6EEA               	movwf	fsr0h,c
 13354  017432  006F FF7F FFEF     	movff	indf2,indf0
 13355                           
 13356                           ;stkvar	_i @ sp[(-8)+4]
 13357  017438  0EFC               	movlw	-4
 13358  01743A  50E3               	movf	plusw1,w,c
 13359  01743C  0F01               	addlw	1
 13360  01743E  6E37               	movwf	btemp^0,c
 13361  017440  0EFC               	movlw	-4
 13362  017442  0060  F0DF  FFE3   	movff	btemp,plusw1
 13363  017448  6A37               	clrf	btemp^0,c
 13364  01744A  0EFD               	movlw	-3
 13365  01744C  50E3               	movf	plusw1,w,c
 13366  01744E  2037               	addwfc	btemp^0,w,c
 13367  017450  6E37               	movwf	btemp^0,c
 13368  017452  0EFD               	movlw	-3
 13369  017454  0060  F0DF  FFE3   	movff	btemp,plusw1
 13370                           
 13371                           ;gemsecs.c: 692:   } else {
 13372  01745A  D010               	goto	l9657
 13373  01745C                     l9655:
 13374                           
 13375                           ;gemsecs.c: 693:    H153[0].data[j] = ' ';
 13376                           ;stkvar	_j @ sp[(-8)+0]
 13377  01745C  0EF8               	movlw	-8
 13378  01745E  006F FF8C  F041    	movff	plusw1,btemp+10
 13379  017464  0EF9               	movlw	-7
 13380  017466  006F FF8C  F042    	movff	plusw1,btemp+11
 13381  01746C  0E9F               	movlw	low (_H153+2)
 13382  01746E  2441               	addwf	(btemp+10)^0,w,c
 13383  017470  6ED9               	movwf	fsr2l,c
 13384  017472  0E0D               	movlw	high (_H153+2)
 13385  017474  2042               	addwfc	(btemp+11)^0,w,c
 13386  017476  6EDA               	movwf	fsr2h,c
 13387  017478  0E20               	movlw	32
 13388  01747A  6EDF               	movwf	indf2,c
 13389  01747C                     l9657:
 13390                           
 13391                           ;gemsecs.c: 696:  }
 13392                           ;stkvar	_j @ sp[(-8)+0]
 13393  01747C  50E1               	movf	fsr1l,w,c
 13394  01747E  0FF8               	addlw	-8
 13395  017480  6ED9               	movwf	fsr2l,c
 13396  017482  50E2               	movf	fsr1h,w,c
 13397  017484  6EDA               	movwf	fsr2h,c
 13398  017486  0EFF               	movlw	255
 13399  017488  22DA               	addwfc	fsr2h,f,c
 13400  01748A  06DE               	decf	postinc2,f,c
 13401  01748C  0E00               	movlw	0
 13402  01748E  5ADD               	subwfb	postdec2,f,c
 13403  017490                     l9659:
 13404                           
 13405                           ;stkvar	_z @ sp[(-8)+6]
 13406                           ;stkvar	_j @ sp[(-8)+0]
 13407  017490  50E1               	movf	fsr1l,w,c
 13408  017492  0FF8               	addlw	-8
 13409  017494  6ED9               	movwf	fsr2l,c
 13410  017496  50E2               	movf	fsr1h,w,c
 13411  017498  6EDA               	movwf	fsr2h,c
 13412  01749A  0EFF               	movlw	255
 13413  01749C  22DA               	addwfc	fsr2h,f,c
 13414  01749E  0EFE               	movlw	-2
 13415  0174A0  50E3               	movf	plusw1,w,c
 13416  0174A2  5CDE               	subwf	postinc2,w,c
 13417  0174A4  50DE               	movf	postinc2,w,c
 13418  0174A6  0A80               	xorlw	128
 13419  0174A8  6E37               	movwf	btemp^0,c
 13420  0174AA  0EFF               	movlw	-1
 13421  0174AC  50E3               	movf	plusw1,w,c
 13422  0174AE  0A80               	xorlw	128
 13423  0174B0  5837               	subwfb	btemp^0,w,c
 13424  0174B2  B0D8               	btfsc	status,0,c
 13425  0174B4  D787               	goto	l9649
 13426  0174B6                     u6820:
 13427                           
 13428                           ; _format_display_text: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 2, argsize = 2, vargsize = 0
 13429  0174B6  0EF6               	movlw	246
 13430  0174B8  26E1               	addwf	fsr1l,f,c
 13431  0174BA  0EFF               	movlw	255
 13432  0174BC  22E2               	addwfc	fsr1h,f,c
 13433  0174BE  0012               	return		;funcret
 13434  0174C0                     __end_of_format_display_text:
 13435                           	opt callstack 0
 13436                           
 13437 ;; *************** function _secs_II_monitor_message *****************
 13438 ;; Defined at:
 13439 ;;		line 1234 in file "gemsecs.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;  stream          1  [STACK] const unsigned char 
 13442 ;;  function        1  [STACK] const unsigned char 
 13443 ;;  dtime           2  [STACK] const unsigned short 
 13444 ;; Auto vars:     Size  Location     Type
 13445 ;;  msg_data        2  [STACK] PTR unsigned char 
 13446 ;;		 -> H254(257), 
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  1  [STACK] void 
 13449 ;; Registers used:
 13450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/1
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13460 ;;Total ram usage:        0 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:   13
 13463 ;; This function calls:
 13464 ;;		_ee_logger
 13465 ;; This function is called by:
 13466 ;;		_m_protocol
 13467 ;;		_r_protocol
 13468 ;; This function uses a reentrant model
 13469 ;;
 13470                           
 13471                           	psect	text24
 13472  0174C0                     __ptext24:
 13473                           	opt callstack 0
 13474  0174C0                     _secs_II_monitor_message:
 13475                           	opt callstack 0
 13476                           
 13477                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13478  0174C0  52E6               	movf	postinc1,f,c
 13479  0174C2  52E6               	movf	postinc1,f,c
 13480                           
 13481                           ;gemsecs.c: 1234: void secs_II_monitor_message(const uint8_t stream, const uint8_t funct
      +                          ion, const uint16_t dtime);gemsecs.c: 1235: {;gemsecs.c: 1236:  uint8_t * msg_data = (ui
      +                          nt8_t*) & H254[0];
 13482                           ;stkvar	_msg_data @ sp[(-2)+0]
 13483                           
 13484                           ;incstack = 0
 13485  0174C4  0E0E               	movlw	high _H254
 13486  0174C6  6E37               	movwf	btemp^0,c
 13487  0174C8  0EFF               	movlw	-1
 13488  0174CA  0060  F0DF  FFE3   	movff	btemp,plusw1
 13489  0174D0  0ED5               	movlw	low _H254
 13490  0174D2  6E37               	movwf	btemp^0,c
 13491  0174D4  0EFE               	movlw	-2
 13492  0174D6  0060  F0DF  FFE3   	movff	btemp,plusw1
 13493                           
 13494                           ;gemsecs.c: 1237:  static uint8_t store1_1 = 1, store1_13 = 1, store6_11 = 1;;gemsecs.c:
      +                           1240:  ++V.ticks;
 13495  0174DC  EE23  F141         	lfsr	2,_V+295	;volatile
 13496  0174E0  2ADE               	incf	postinc2,f,c
 13497  0174E2  0E00               	movlw	0
 13498  0174E4  22DE               	addwfc	postinc2,f,c
 13499  0174E6  22DE               	addwfc	postinc2,f,c
 13500  0174E8  22DE               	addwfc	postinc2,f,c
 13501                           
 13502                           ;gemsecs.c: 1241:  switch (stream) {
 13503  0174EA  D07D               	goto	l14233
 13504  0174EC                     l14195:
 13505                           
 13506                           ;gemsecs.c: 1245:    if (!store1_1)
 13507  0174EC  5059               	movf	secs_II_monitor_message@store1_1^0,w,c
 13508  0174EE  B4D8               	btfsc	status,2,c
 13509  0174F0  D08C               	goto	l2070
 13510                           
 13511                           ;gemsecs.c: 1247:    store1_1 = 0;
 13512  0174F2  6A59               	clrf	secs_II_monitor_message@store1_1^0,c
 13513  0174F4                     l14199:
 13514                           
 13515                           ;gemsecs.c: 1249:    ee_logger(stream, function, dtime, msg_data);
 13516                           ;stkvar	_msg_data @ sp[(-2)+0]
 13517  0174F4  0EFE               	movlw	-2
 13518  0174F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13519  0174FC  006F FF8F FFE6     	movff	plusw1,postinc1
 13520                           
 13521                           ;stkvar	_dtime @ sp[(-4)+-4]
 13522  017502  0EF8               	movlw	-8
 13523  017504  006F FF8F FFE6     	movff	plusw1,postinc1
 13524  01750A  006F FF8F FFE6     	movff	plusw1,postinc1
 13525                           
 13526                           ;stkvar	_function @ sp[(-6)+-2]
 13527  017510  0EF8               	movlw	-8
 13528  017512  50E3               	movf	plusw1,w,c
 13529  017514  6EE6               	movwf	postinc1,c
 13530                           
 13531                           ;stkvar	_stream @ sp[(-7)+-1]
 13532  017516  0EF8               	movlw	-8
 13533  017518  50E3               	movf	plusw1,w,c
 13534  01751A  6EE6               	movwf	postinc1,c
 13535  01751C  EC7C  F0BD         	call	_ee_logger	;wreg free
 13536                           
 13537                           ;gemsecs.c: 1250:    break;
 13538  017520  D074               	goto	l2070
 13539  017522                     l14201:
 13540                           
 13541                           ;gemsecs.c: 1252:    if (!store1_13)
 13542  017522  5058               	movf	secs_II_monitor_message@store1_13^0,w,c
 13543  017524  B4D8               	btfsc	status,2,c
 13544  017526  D071               	goto	l2070
 13545                           
 13546                           ;gemsecs.c: 1254:    store1_13 = 0;
 13547  017528  6A58               	clrf	secs_II_monitor_message@store1_13^0,c
 13548  01752A  D7E4               	goto	l14199
 13549  01752C                     l14209:
 13550                           
 13551                           ;stkvar	_function @ sp[(-2)+-2]
 13552  01752C  0EFC               	movlw	-4
 13553  01752E  50E3               	movf	plusw1,w,c
 13554  017530  6E41               	movwf	(btemp+10)^0,c
 13555  017532  6A42               	clrf	(btemp+11)^0,c
 13556                           
 13557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13558                           ; Switch size 1, requested type "simple"
 13559                           ; Number of cases is 1, Range of values is 0 to 0
 13560                           ; switch strategies available:
 13561                           ; Name         Instructions Cycles
 13562                           ; simple_byte            4     3 (average)
 13563                           ;	Chosen strategy is simple_byte
 13564  017534  5042               	movf	(btemp+11)^0,w,c
 13565  017536  0A00               	xorlw	0	; case 0
 13566  017538  A4D8               	btfss	status,2,c
 13567  01753A  D067               	goto	l2070
 13568                           
 13569                           ; Switch size 1, requested type "simple"
 13570                           ; Number of cases is 2, Range of values is 1 to 13
 13571                           ; switch strategies available:
 13572                           ; Name         Instructions Cycles
 13573                           ; simple_byte            7     4 (average)
 13574                           ;	Chosen strategy is simple_byte
 13575  01753C  5041               	movf	(btemp+10)^0,w,c
 13576  01753E  0A01               	xorlw	1	; case 1
 13577  017540  B4D8               	btfsc	status,2,c
 13578  017542  D7D4               	goto	l14195
 13579  017544  0A0C               	xorlw	12	; case 13
 13580  017546  B4D8               	btfsc	status,2,c
 13581  017548  D7EC               	goto	l14201
 13582  01754A  D05F               	goto	l2070
 13583  01754C                     l14211:
 13584                           
 13585                           ;gemsecs.c: 1267:    ee_logger(stream, function, dtime, msg_data);
 13586                           ;stkvar	_msg_data @ sp[(-2)+0]
 13587  01754C  0EFE               	movlw	-2
 13588  01754E  006F FF8F FFE6     	movff	plusw1,postinc1
 13589  017554  006F FF8F FFE6     	movff	plusw1,postinc1
 13590                           
 13591                           ;stkvar	_dtime @ sp[(-4)+-4]
 13592  01755A  0EF8               	movlw	-8
 13593  01755C  006F FF8F FFE6     	movff	plusw1,postinc1
 13594  017562  006F FF8F FFE6     	movff	plusw1,postinc1
 13595                           
 13596                           ;stkvar	_function @ sp[(-6)+-2]
 13597  017568  0EF8               	movlw	-8
 13598  01756A  50E3               	movf	plusw1,w,c
 13599  01756C  6EE6               	movwf	postinc1,c
 13600                           
 13601                           ;stkvar	_stream @ sp[(-7)+-1]
 13602  01756E  0EF8               	movlw	-8
 13603  017570  50E3               	movf	plusw1,w,c
 13604  017572  6EE6               	movwf	postinc1,c
 13605  017574  EC7C  F0BD         	call	_ee_logger	;wreg free
 13606                           
 13607                           ;gemsecs.c: 1268:    if (function == 42) {
 13608                           ;stkvar	_function @ sp[(-2)+-2]
 13609  017578  0EFC               	movlw	-4
 13610  01757A  006F FF8C  F037    	movff	plusw1,btemp
 13611  017580  0E2A               	movlw	42
 13612  017582  1837               	xorwf	btemp^0,w,c
 13613  017584  A4D8               	btfss	status,2,c
 13614  017586  D022               	goto	l14229
 13615                           
 13616                           ;gemsecs.c: 1273:     V.msg_ret = 0;
 13617  017588  0E00               	movlw	0
 13618  01758A  006F FFA0  FD52    	movff	wreg,_V+312	;volatile
 13619                           
 13620                           ;gemsecs.c: 1274:     V.msg_error = MSG_ERROR_NONE;
 13621  017590  0E00               	movlw	0
 13622  017592  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 13623                           
 13624                           ;gemsecs.c: 1275:     V.response.info = DIS_STR;
 13625  017598  0E00               	movlw	0
 13626  01759A  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 13627  0175A0  D015               	goto	l14229
 13628  0175A2                     l14219:
 13629                           
 13630                           ;stkvar	_function @ sp[(-2)+-2]
 13631  0175A2  0EFC               	movlw	-4
 13632  0175A4  50E3               	movf	plusw1,w,c
 13633  0175A6  6E41               	movwf	(btemp+10)^0,c
 13634  0175A8  6A42               	clrf	(btemp+11)^0,c
 13635                           
 13636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13637                           ; Switch size 1, requested type "simple"
 13638                           ; Number of cases is 1, Range of values is 0 to 0
 13639                           ; switch strategies available:
 13640                           ; Name         Instructions Cycles
 13641                           ; simple_byte            4     3 (average)
 13642                           ;	Chosen strategy is simple_byte
 13643  0175AA  5042               	movf	(btemp+11)^0,w,c
 13644  0175AC  0A00               	xorlw	0	; case 0
 13645  0175AE  A4D8               	btfss	status,2,c
 13646  0175B0  D00D               	goto	l14229
 13647                           
 13648                           ; Switch size 1, requested type "simple"
 13649                           ; Number of cases is 2, Range of values is 41 to 42
 13650                           ; switch strategies available:
 13651                           ; Name         Instructions Cycles
 13652                           ; simple_byte            7     4 (average)
 13653                           ;	Chosen strategy is simple_byte
 13654  0175B2  5041               	movf	(btemp+10)^0,w,c
 13655  0175B4  0A29               	xorlw	41	; case 41
 13656  0175B6  B4D8               	btfsc	status,2,c
 13657  0175B8  D7C9               	goto	l14211
 13658  0175BA  0A03               	xorlw	3	; case 42
 13659  0175BC  B4D8               	btfsc	status,2,c
 13660  0175BE  D7C6               	goto	l14211
 13661                           
 13662                           ;gemsecs.c: 1283:   switch (function) {
 13663                           
 13664                           ;gemsecs.c: 1282:  case 6:
 13665  0175C0  D005               	goto	l14229
 13666  0175C2                     l14221:
 13667                           
 13668                           ;gemsecs.c: 1285:    if (!store6_11)
 13669  0175C2  5057               	movf	secs_II_monitor_message@store6_11^0,w,c
 13670  0175C4  B4D8               	btfsc	status,2,c
 13671  0175C6  D021               	goto	l2070
 13672                           
 13673                           ;gemsecs.c: 1287:    store6_11 = 0;
 13674  0175C8  6A57               	clrf	secs_II_monitor_message@store6_11^0,c
 13675  0175CA  D794               	goto	l14199
 13676  0175CC                     l14229:
 13677                           
 13678                           ;stkvar	_function @ sp[(-2)+-2]
 13679  0175CC  0EFC               	movlw	-4
 13680  0175CE  50E3               	movf	plusw1,w,c
 13681  0175D0  6E41               	movwf	(btemp+10)^0,c
 13682  0175D2  6A42               	clrf	(btemp+11)^0,c
 13683                           
 13684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13685                           ; Switch size 1, requested type "simple"
 13686                           ; Number of cases is 1, Range of values is 0 to 0
 13687                           ; switch strategies available:
 13688                           ; Name         Instructions Cycles
 13689                           ; simple_byte            4     3 (average)
 13690                           ;	Chosen strategy is simple_byte
 13691  0175D4  5042               	movf	(btemp+11)^0,w,c
 13692  0175D6  0A00               	xorlw	0	; case 0
 13693  0175D8  A4D8               	btfss	status,2,c
 13694  0175DA  D017               	goto	l2070
 13695                           
 13696                           ; Switch size 1, requested type "simple"
 13697                           ; Number of cases is 1, Range of values is 11 to 11
 13698                           ; switch strategies available:
 13699                           ; Name         Instructions Cycles
 13700                           ; simple_byte            4     3 (average)
 13701                           ;	Chosen strategy is simple_byte
 13702  0175DC  5041               	movf	(btemp+10)^0,w,c
 13703  0175DE  0A0B               	xorlw	11	; case 11
 13704  0175E0  B4D8               	btfsc	status,2,c
 13705  0175E2  D7EF               	goto	l14221
 13706  0175E4  D012               	goto	l2070
 13707  0175E6                     l14233:
 13708                           
 13709                           ;stkvar	_stream @ sp[(-2)+-1]
 13710  0175E6  0EFD               	movlw	-3
 13711  0175E8  50E3               	movf	plusw1,w,c
 13712  0175EA  6E41               	movwf	(btemp+10)^0,c
 13713  0175EC  6A42               	clrf	(btemp+11)^0,c
 13714                           
 13715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13716                           ; Switch size 1, requested type "simple"
 13717                           ; Number of cases is 1, Range of values is 0 to 0
 13718                           ; switch strategies available:
 13719                           ; Name         Instructions Cycles
 13720                           ; simple_byte            4     3 (average)
 13721                           ;	Chosen strategy is simple_byte
 13722  0175EE  5042               	movf	(btemp+11)^0,w,c
 13723  0175F0  0A00               	xorlw	0	; case 0
 13724  0175F2  A4D8               	btfss	status,2,c
 13725  0175F4  D00A               	goto	l2070
 13726                           
 13727                           ; Switch size 1, requested type "simple"
 13728                           ; Number of cases is 3, Range of values is 1 to 6
 13729                           ; switch strategies available:
 13730                           ; Name         Instructions Cycles
 13731                           ; simple_byte           10     6 (average)
 13732                           ;	Chosen strategy is simple_byte
 13733  0175F6  5041               	movf	(btemp+10)^0,w,c
 13734  0175F8  0A01               	xorlw	1	; case 1
 13735  0175FA  B4D8               	btfsc	status,2,c
 13736  0175FC  D797               	goto	l14209
 13737  0175FE  0A03               	xorlw	3	; case 2
 13738  017600  B4D8               	btfsc	status,2,c
 13739  017602  D7CF               	goto	l14219
 13740  017604  0A04               	xorlw	4	; case 6
 13741  017606  B4D8               	btfsc	status,2,c
 13742  017608  D7E1               	goto	l14229
 13743  01760A                     l2070:
 13744                           
 13745                           ; _secs_II_monitor_message: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 13746  01760A  0EFA               	movlw	250
 13747  01760C  26E1               	addwf	fsr1l,f,c
 13748  01760E  0EFF               	movlw	255
 13749  017610  22E2               	addwfc	fsr1h,f,c
 13750  017612  0012               	return		;funcret
 13751  017614                     __end_of_secs_II_monitor_message:
 13752                           	opt callstack 0
 13753                           
 13754 ;; *************** function _ee_logger *****************
 13755 ;; Defined at:
 13756 ;;		line 1214 in file "gemsecs.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;  stream          1  [STACK] const unsigned char 
 13759 ;;  function        1  [STACK] const unsigned char 
 13760 ;;  dtime           2  [STACK] const unsigned short 
 13761 ;;  msg_data        2  [STACK] PTR unsigned char 
 13762 ;;		 -> H254(257), 
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;  i               2  [STACK] unsigned short 
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  1  [STACK] void 
 13767 ;; Registers used:
 13768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/1
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13778 ;;Total ram usage:        0 bytes
 13779 ;; Hardware stack levels used:    1
 13780 ;; Hardware stack levels required when called:   12
 13781 ;; This function calls:
 13782 ;;		_DATAEE_WriteByte
 13783 ;;		_StartTimer
 13784 ;;		_sprintf
 13785 ;; This function is called by:
 13786 ;;		_secs_II_monitor_message
 13787 ;; This function uses a reentrant model
 13788 ;;
 13789                           
 13790                           	psect	text25
 13791  017AF8                     __ptext25:
 13792                           	opt callstack 0
 13793  017AF8                     _ee_logger:
 13794                           	opt callstack 0
 13795                           
 13796                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13797  017AF8  52E6               	movf	postinc1,f,c
 13798  017AFA  52E6               	movf	postinc1,f,c
 13799                           
 13800                           ;gemsecs.c: 1214: static void ee_logger(const uint8_t stream, const uint8_t function, co
      +                          nst uint16_t dtime, uint8_t *msg_data);gemsecs.c: 1215: {;gemsecs.c: 1216:  uint16_t i =
      +                           0;
 13801                           ;stkvar	_i @ sp[(-2)+0]
 13802                           
 13803                           ;incstack = 0
 13804  017AFC  0EFE               	movlw	-2
 13805  017AFE  6AE3               	clrf	plusw1,c
 13806  017B00  0EFF               	movlw	-1
 13807  017B02  6AE3               	clrf	plusw1,c
 13808  017B04                     l14147:
 13809                           
 13810                           ;gemsecs.c: 1219:   DATAEE_WriteByte(i + ((V.response.log_seq & 0x03) << 8), msg_data[25
      +                          4 + 2 - i]);
 13811                           ;stkvar	_i @ sp[(-2)+0]
 13812                           ;stkvar	_msg_data @ sp[(-2)+-6]
 13813  017B04  0EF8               	movlw	-8
 13814  017B06  006F FF8C  F041    	movff	plusw1,btemp+10
 13815  017B0C  0EF9               	movlw	-7
 13816  017B0E  006F FF8C  F042    	movff	plusw1,btemp+11
 13817  017B14  0EFE               	movlw	-2
 13818  017B16  50E3               	movf	plusw1,w,c
 13819  017B18  5E41               	subwf	(btemp+10)^0,f,c
 13820  017B1A  0EFF               	movlw	-1
 13821  017B1C  50E3               	movf	plusw1,w,c
 13822  017B1E  5A42               	subwfb	(btemp+11)^0,f,c
 13823  017B20  0E00               	movlw	0
 13824  017B22  2441               	addwf	(btemp+10)^0,w,c
 13825  017B24  6ED9               	movwf	fsr2l,c
 13826  017B26  0E01               	movlw	1
 13827  017B28  2042               	addwfc	(btemp+11)^0,w,c
 13828  017B2A  6EDA               	movwf	fsr2h,c
 13829  017B2C  50DF               	movf	indf2,w,c
 13830  017B2E  6EE6               	movwf	postinc1,c
 13831                           
 13832                           ;stkvar	_i @ sp[(-3)+0]
 13833                           ; multi bank
 13834  017B30  010D               	movlb	(_V+373) shr (0+8)	;volatile
 13835  017B32  518F               	movf	(_V+373)& (0+255),w,b	;volatile
 13836  017B34  0B03               	andlw	3
 13837  017B36  6E42               	movwf	(btemp+11)^0,c
 13838  017B38  6A41               	clrf	(btemp+10)^0,c
 13839  017B3A  0EFD               	movlw	-3
 13840  017B3C  50E3               	movf	plusw1,w,c
 13841  017B3E  2641               	addwf	(btemp+10)^0,f,c
 13842  017B40  0EFE               	movlw	-2
 13843  017B42  50E3               	movf	plusw1,w,c
 13844  017B44  2242               	addwfc	(btemp+11)^0,f,c
 13845  017B46  0060  F107  FFE6   	movff	btemp+10,postinc1
 13846  017B4C  0060  F10B  FFE6   	movff	btemp+11,postinc1
 13847  017B52  EC41  F0C5         	call	_DATAEE_WriteByte	;wreg free
 13848                           
 13849                           ;gemsecs.c: 1220:  } while (++i <= 255);
 13850                           ;stkvar	_i @ sp[(-2)+0]
 13851  017B56  0EFE               	movlw	-2
 13852  017B58  50E3               	movf	plusw1,w,c
 13853  017B5A  0F01               	addlw	1
 13854  017B5C  6E37               	movwf	btemp^0,c
 13855  017B5E  0EFE               	movlw	-2
 13856  017B60  0060  F0DF  FFE3   	movff	btemp,plusw1
 13857  017B66  6A37               	clrf	btemp^0,c
 13858  017B68  0EFF               	movlw	-1
 13859  017B6A  50E3               	movf	plusw1,w,c
 13860  017B6C  2037               	addwfc	btemp^0,w,c
 13861  017B6E  6E37               	movwf	btemp^0,c
 13862  017B70  0EFF               	movlw	-1
 13863  017B72  0060  F0DF  FFE3   	movff	btemp,plusw1
 13864  017B78  0EFF               	movlw	-1
 13865  017B7A  04E3               	decf	plusw1,w,c
 13866  017B7C  A0D8               	btfss	status,0,c
 13867  017B7E  D7C2               	goto	l14147
 13868                           
 13869                           ;gemsecs.c: 1222:  sprintf(V.info, "Saved S%dF%d %d     ", stream, function, V.response.
      +                          log_num);
 13870  017B80  EE23  F195         	lfsr	2,_V+379	;volatile
 13871  017B84  006F FF78  F041    	movff	postinc2,btemp+10
 13872  017B8A  006F FF74  F042    	movff	postdec2,btemp+11
 13873  017B90  0060  F107  FFE6   	movff	btemp+10,postinc1
 13874  017B96  0060  F10B  FFE6   	movff	btemp+11,postinc1
 13875                           
 13876                           ;stkvar	_function @ sp[(-4)+-2]
 13877  017B9C  0EFA               	movlw	-6
 13878  017B9E  50E3               	movf	plusw1,w,c
 13879  017BA0  6EE6               	movwf	postinc1,c
 13880  017BA2  0E00               	movlw	0
 13881  017BA4  6EE6               	movwf	postinc1,c
 13882                           
 13883                           ;stkvar	_stream @ sp[(-6)+-1]
 13884  017BA6  0EF9               	movlw	-7
 13885  017BA8  50E3               	movf	plusw1,w,c
 13886  017BAA  6EE6               	movwf	postinc1,c
 13887  017BAC  0E00               	movlw	0
 13888  017BAE  6EE6               	movwf	postinc1,c
 13889  017BB0  0EB7               	movlw	low STR_36
 13890  017BB2  6EE6               	movwf	postinc1,c
 13891  017BB4  0EFD               	movlw	high STR_36
 13892  017BB6  6EE6               	movwf	postinc1,c
 13893  017BB8  0E01               	movlw	low (_V+231)
 13894  017BBA  6EE6               	movwf	postinc1,c
 13895  017BBC  0E0D               	movlw	high (_V+231)
 13896  017BBE  6EE6               	movwf	postinc1,c
 13897  017BC0  0E0A               	movlw	10
 13898  017BC2  6EE6               	movwf	postinc1,c
 13899  017BC4  EC95  F0BE         	call	_sprintf	;wreg free
 13900                           
 13901                           ;gemsecs.c: 1223:  StartTimer(TMR_INFO, dtime);
 13902                           ;stkvar	_dtime @ sp[(-2)+-4]
 13903  017BC8  0EFA               	movlw	-6
 13904  017BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 13905  017BD0  006F FF8F FFE6     	movff	plusw1,postinc1
 13906  017BD6  0E07               	movlw	7
 13907  017BD8  6EE6               	movwf	postinc1,c
 13908  017BDA  EC12  F0C9         	call	_StartTimer	;wreg free
 13909                           
 13910                           ;gemsecs.c: 1224:  V.response.info = DIS_LOG;
 13911  017BDE  0E02               	movlw	2
 13912  017BE0  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 13913                           
 13914                           ;gemsecs.c: 1225:  V.response.log_num++;
 13915  017BE6  EE23  F195         	lfsr	2,_V+379	;volatile
 13916  017BEA  2ADE               	incf	postinc2,f,c
 13917  017BEC  0E00               	movlw	0
 13918  017BEE  22DD               	addwfc	postdec2,f,c
 13919                           
 13920                           ;gemsecs.c: 1226:  V.response.log_seq++;
 13921  017BF0  0063  F63F  FFE8   	movff	_V+373,wreg	;volatile
 13922  017BF6  0F01               	addlw	1
 13923  017BF8  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 13924                           
 13925                           ;gemsecs.c: 1227:  if (V.response.log_seq >= 3)
 13926  017BFE  EE23  F18F         	lfsr	2,_V+373	;volatile
 13927  017C02  0E02               	movlw	2
 13928  017C04  64DF               	cpfsgt	indf2,c
 13929  017C06  D004               	goto	l2037
 13930                           
 13931                           ;gemsecs.c: 1228:   V.response.log_seq = 0;
 13932  017C08  0E00               	movlw	0
 13933  017C0A  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 13934  017C10                     l2037:
 13935                           
 13936                           ; _ee_logger: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 13937  017C10  0EF8               	movlw	248
 13938  017C12  26E1               	addwf	fsr1l,f,c
 13939  017C14  0EFF               	movlw	255
 13940  017C16  22E2               	addwfc	fsr1h,f,c
 13941  017C18  0012               	return		;funcret
 13942  017C1A                     __end_of_ee_logger:
 13943                           	opt callstack 0
 13944                           
 13945 ;; *************** function _DATAEE_WriteByte *****************
 13946 ;; Defined at:
 13947 ;;		line 172 in file "mcc_generated_files/memory.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  bAdd            2  [STACK] unsigned short 
 13950 ;;  bData           1  [STACK] unsigned char 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  GIEBitValue     1  [STACK] unsigned char 
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1  [STACK] void 
 13955 ;; Registers used:
 13956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/3C
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13966 ;;Total ram usage:        0 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; Hardware stack levels required when called:    3
 13969 ;; This function calls:
 13970 ;;		Nothing
 13971 ;; This function is called by:
 13972 ;;		_secs_II_message
 13973 ;;		_ee_logger
 13974 ;; This function uses a reentrant model
 13975 ;;
 13976                           
 13977                           	psect	text26
 13978  018A82                     __ptext26:
 13979                           	opt callstack 0
 13980  018A82                     _DATAEE_WriteByte:
 13981                           	opt callstack 0
 13982                           
 13983                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13984  018A82  52E6               	movf	postinc1,f,c
 13985                           
 13986                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 13987                           
 13988                           ;incstack = 0
 13989  018A84  AED2               	btfss	210,7,c	;volatile
 13990  018A86  D003               	goto	u6530
 13991  018A88  6A42               	clrf	(btemp+11)^0,c
 13992  018A8A  2A42               	incf	(btemp+11)^0,f,c
 13993  018A8C  D001               	goto	u6538
 13994  018A8E                     u6530:
 13995  018A8E  6A42               	clrf	(btemp+11)^0,c
 13996  018A90                     u6538:
 13997                           
 13998                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 13999  018A90  0EFF               	movlw	-1
 14000  018A92  0060  F10B  FFE3   	movff	btemp+11,plusw1
 14001                           
 14002                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 14003                           ;stkvar	_bAdd @ sp[(-1)+-2]
 14004  018A98  0EFE               	movlw	254
 14005  018A9A  24E1               	addwf	fsr1l,w,c
 14006  018A9C  6ED9               	movwf	fsr2l,c
 14007  018A9E  0EFF               	movlw	255
 14008  018AA0  20E2               	addwfc	fsr1h,w,c
 14009  018AA2  6EDA               	movwf	fsr2h,c
 14010  018AA4  50DF               	movf	indf2,w,c
 14011  018AA6  0B03               	andlw	3
 14012  018AA8  0139               	movlb	57	; () banked
 14013  018AAA  6FE1               	movwf	225,b	;volatile
 14014                           
 14015                           ; BSR set to: 57
 14016                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 14017                           ;stkvar	_bAdd @ sp[(-1)+-2]
 14018  018AAC  0EFD               	movlw	-3
 14019  018AAE  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 14020                           
 14021                           ; BSR set to: 57
 14022                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 14023                           ;stkvar	_bData @ sp[(-1)+-3]
 14024  018AB4  0EFC               	movlw	-4
 14025  018AB6  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 14026                           
 14027                           ; BSR set to: 57
 14028                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 14029  018ABC  0E3F               	movlw	-193
 14030  018ABE  17E5               	andwf	229,f,b	;volsfr
 14031                           
 14032                           ; BSR set to: 57
 14033                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 14034  018AC0  85E5               	bsf	229,2,b	;volsfr
 14035                           
 14036                           ; BSR set to: 57
 14037                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 14038  018AC2  9ED2               	bcf	210,7,c	;volatile
 14039                           
 14040                           ; BSR set to: 57
 14041                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 14042  018AC4  0E55               	movlw	85
 14043  018AC6  6FE6               	movwf	230,b	;volsfr
 14044                           
 14045                           ; BSR set to: 57
 14046                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 14047  018AC8  0EAA               	movlw	170
 14048  018ACA  6FE6               	movwf	230,b	;volsfr
 14049                           
 14050                           ; BSR set to: 57
 14051                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 14052  018ACC  83E5               	bsf	229,1,b	;volsfr
 14053  018ACE                     l961:
 14054                           
 14055                           ; BSR set to: 57
 14056                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 14057  018ACE  B3E5               	btfsc	229,1,b	;volsfr
 14058  018AD0  D7FE               	goto	l961
 14059                           
 14060                           ; BSR set to: 57
 14061                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 14062  018AD2  95E5               	bcf	229,2,b	;volsfr
 14063                           
 14064                           ; BSR set to: 57
 14065                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 14066                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 14067  018AD4  0EFF               	movlw	-1
 14068  018AD6  B0E3               	btfsc	plusw1,0,c
 14069  018AD8  D002               	bra	u6555
 14070  018ADA  9ED2               	bcf	210,7,c	;volatile
 14071  018ADC  D001               	bra	u6556
 14072  018ADE                     u6555:
 14073  018ADE  8ED2               	bsf	210,7,c	;volatile
 14074  018AE0                     u6556:
 14075                           
 14076                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 14077  018AE0  52E5               	movf	postdec1,f,c
 14078  018AE2  52E5               	movf	postdec1,f,c
 14079  018AE4  52E5               	movf	postdec1,f,c
 14080  018AE6  52E5               	movf	postdec1,f,c
 14081  018AE8  0012               	return		;funcret
 14082  018AEA                     __end_of_DATAEE_WriteByte:
 14083                           	opt callstack 0
 14084                           
 14085 ;; *************** function _run_checksum *****************
 14086 ;; Defined at:
 14087 ;;		line 43 in file "gemsecs.c"
 14088 ;; Parameters:    Size  Location     Type
 14089 ;;  byte_block      1  [STACK] const unsigned char 
 14090 ;;  clear           1  [STACK] const _Bool 
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;		None
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  2  [STACK] unsigned short 
 14095 ;; Registers used:
 14096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 14097 ;; Tracked objects:
 14098 ;;		On entry : 6/39
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;Total ram usage:        0 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; Hardware stack levels required when called:    3
 14109 ;; This function calls:
 14110 ;;		Nothing
 14111 ;; This function is called by:
 14112 ;;		_m_protocol
 14113 ;;		_r_protocol
 14114 ;; This function uses a reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text27
 14118  0194F4                     __ptext27:
 14119                           	opt callstack 0
 14120  0194F4                     _run_checksum:
 14121                           	opt callstack 26
 14122                           
 14123                           ;gemsecs.c: 43: uint16_t run_checksum(const uint8_t byte_block, const _Bool clear);gemse
      +                          cs.c: 44: {;gemsecs.c: 45:  static uint16_t sum = 0;;gemsecs.c: 47:  if (clear)
 14124                           ;stkvar	_clear @ sp[(0)+-2]
 14125                           
 14126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14127                           ;incstack = 0
 14128  0194F4  0EFE               	movlw	-2
 14129  0194F6  50E3               	movf	plusw1,w,c
 14130  0194F8  B4D8               	btfsc	status,2,c
 14131  0194FA  D002               	goto	l10379
 14132                           
 14133                           ;gemsecs.c: 48:   sum = 0;
 14134  0194FC  6A17               	clrf	run_checksum@sum^0,c
 14135  0194FE  6A18               	clrf	(run_checksum@sum+1)^0,c
 14136  019500                     l10379:
 14137                           
 14138                           ;gemsecs.c: 50:  sum += byte_block;
 14139                           ;stkvar	_byte_block @ sp[(0)+-1]
 14140  019500  0EFF               	movlw	-1
 14141  019502  50E3               	movf	plusw1,w,c
 14142  019504  2617               	addwf	run_checksum@sum^0,f,c
 14143  019506  0E00               	movlw	0
 14144  019508  2218               	addwfc	(run_checksum@sum+1)^0,f,c
 14145                           
 14146                           ;gemsecs.c: 51:  return sum;
 14147  01950A  0060  F05C  F037   	movff	run_checksum@sum,btemp
 14148  019510  0060  F060  F038   	movff	run_checksum@sum+1,btemp+1
 14149                           
 14150                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 14151  019516  52E5               	movf	postdec1,f,c
 14152  019518  52E5               	movf	postdec1,f,c
 14153  01951A  0012               	return		;funcret
 14154  01951C                     __end_of_run_checksum:
 14155                           	opt callstack 0
 14156                           
 14157 ;; *************** function _UART2_is_rx_ready *****************
 14158 ;; Defined at:
 14159 ;;		line 137 in file "mcc_generated_files/uart2.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;		None
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;		None
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  1  [STACK] unsigned char 
 14166 ;; Registers used:
 14167 ;;		btemp
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/3C
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14177 ;;Total ram usage:        0 bytes
 14178 ;; Hardware stack levels used:    1
 14179 ;; Hardware stack levels required when called:    3
 14180 ;; This function calls:
 14181 ;;		Nothing
 14182 ;; This function is called by:
 14183 ;;		_m_protocol
 14184 ;; This function uses a reentrant model
 14185 ;;
 14186                           
 14187                           	psect	text28
 14188  019AB2                     __ptext28:
 14189                           	opt callstack 0
 14190  019AB2                     _UART2_is_rx_ready:
 14191                           	opt callstack 26
 14192                           
 14193                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
 14194                           
 14195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14196                           ;incstack = 0
 14197  019AB2  0060  F090  F037   	movff	_uart2RxCount,btemp	;volatile
 14198                           
 14199                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14200  019AB8  0012               	return		;funcret
 14201  019ABA                     __end_of_UART2_is_rx_ready:
 14202                           	opt callstack 0
 14203                           
 14204 ;; *************** function _UART2_Read *****************
 14205 ;; Defined at:
 14206 ;;		line 152 in file "mcc_generated_files/uart2.c"
 14207 ;; Parameters:    Size  Location     Type
 14208 ;;		None
 14209 ;; Auto vars:     Size  Location     Type
 14210 ;;  readValue       1  [STACK] unsigned char 
 14211 ;; Return value:  Size  Location     Type
 14212 ;;                  1  [STACK] unsigned char 
 14213 ;; Registers used:
 14214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 14215 ;; Tracked objects:
 14216 ;;		On entry : 0/3C
 14217 ;;		On exit  : 3F/39
 14218 ;;		Unchanged: 0/0
 14219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;Total ram usage:        0 bytes
 14225 ;; Hardware stack levels used:    1
 14226 ;; Hardware stack levels required when called:    3
 14227 ;; This function calls:
 14228 ;;		Nothing
 14229 ;; This function is called by:
 14230 ;;		_m_protocol
 14231 ;; This function uses a reentrant model
 14232 ;;
 14233                           
 14234                           	psect	text29
 14235  019170                     __ptext29:
 14236                           	opt callstack 0
 14237  019170                     _UART2_Read:
 14238                           	opt callstack 0
 14239                           
 14240                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14241  019170  52E6               	movf	postinc1,f,c
 14242  019172                     
 14243                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 14244                           
 14245                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 14246  019172  5024               	movf	_uart2RxCount^0,w,c	;volatile
 14247  019174  B4D8               	btfsc	status,2,c
 14248  019176  D7FD               	goto	l10295
 14249                           
 14250                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
 14251  019178  0E00               	movlw	low _uart2RxBuffer
 14252  01917A  2425               	addwf	_uart2RxTail^0,w,c	;volatile
 14253  01917C  6ED9               	movwf	fsr2l,c
 14254  01917E  6ADA               	clrf	fsr2h,c
 14255  019180  0E05               	movlw	high _uart2RxBuffer
 14256  019182  22DA               	addwfc	fsr2h,f,c
 14257  019184  50DF               	movf	indf2,w,c
 14258  019186  6E42               	movwf	(btemp+11)^0,c
 14259                           
 14260                           ;stkvar	_readValue @ sp[(-1)+0]
 14261  019188  0EFF               	movlw	-1
 14262  01918A  0060  F10B  FFE3   	movff	btemp+11,plusw1
 14263  019190  2A25               	incf	_uart2RxTail^0,f,c	;volatile
 14264                           
 14265                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 14266  019192  2825               	incf	_uart2RxTail^0,w,c
 14267  019194  B4D8               	btfsc	status,2,c
 14268                           
 14269                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
 14270  019196  6A25               	clrf	_uart2RxTail^0,c	;volatile
 14271                           
 14272                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
 14273                           
 14274                           ;mcc_generated_files/uart2.c: 164:     }
 14275  019198  0139               	movlb	57	; () banked
 14276  01919A  9596               	bcf	150,2,b	;volatile
 14277                           
 14278                           ; BSR set to: 57
 14279                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
 14280  01919C  0624               	decf	_uart2RxCount^0,f,c	;volatile
 14281                           
 14282                           ; BSR set to: 57
 14283                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
 14284  01919E  8596               	bsf	150,2,b	;volatile
 14285                           
 14286                           ; BSR set to: 57
 14287                           ;mcc_generated_files/uart2.c: 169:     return readValue;
 14288                           ;stkvar	_readValue @ sp[(-1)+0]
 14289  0191A0  0EFF               	movlw	-1
 14290  0191A2  006F FF8C  F037    	movff	plusw1,btemp
 14291                           
 14292                           ; BSR set to: 57
 14293                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 14294  0191A8  52E5               	movf	postdec1,f,c
 14295  0191AA  0012               	return		;funcret
 14296  0191AC                     __end_of_UART2_Read:
 14297                           	opt callstack 0
 14298                           
 14299 ;; *************** function _UART1_is_rx_ready *****************
 14300 ;; Defined at:
 14301 ;;		line 147 in file "mcc_generated_files/uart1.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;		None
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;		None
 14306 ;; Return value:  Size  Location     Type
 14307 ;;                  1  [STACK] unsigned char 
 14308 ;; Registers used:
 14309 ;;		btemp
 14310 ;; Tracked objects:
 14311 ;;		On entry : 0/3C
 14312 ;;		On exit  : 0/0
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14319 ;;Total ram usage:        0 bytes
 14320 ;; Hardware stack levels used:    1
 14321 ;; Hardware stack levels required when called:    3
 14322 ;; This function calls:
 14323 ;;		Nothing
 14324 ;; This function is called by:
 14325 ;;		_m_protocol
 14326 ;;		_r_protocol
 14327 ;;		_t_protocol
 14328 ;; This function uses a reentrant model
 14329 ;;
 14330                           
 14331                           	psect	text30
 14332  019ABA                     __ptext30:
 14333                           	opt callstack 0
 14334  019ABA                     _UART1_is_rx_ready:
 14335                           	opt callstack 26
 14336                           
 14337                           ;mcc_generated_files/uart1.c: 149:  return uart1RxCount;
 14338                           
 14339                           ; BSR set to: 57
 14340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14341                           ;incstack = 0
 14342  019ABA  0060  F0A8  F037   	movff	_uart1RxCount,btemp	;volatile
 14343                           
 14344                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14345  019AC0  0012               	return		;funcret
 14346  019AC2                     __end_of_UART1_is_rx_ready:
 14347                           	opt callstack 0
 14348                           
 14349 ;; *************** function _UART1_Read *****************
 14350 ;; Defined at:
 14351 ;;		line 162 in file "mcc_generated_files/uart1.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;		None
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;  readValue       1  [STACK] unsigned char 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  1  [STACK] unsigned char 
 14358 ;; Registers used:
 14359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/3C
 14362 ;;		On exit  : 3F/39
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14369 ;;Total ram usage:        0 bytes
 14370 ;; Hardware stack levels used:    1
 14371 ;; Hardware stack levels required when called:    3
 14372 ;; This function calls:
 14373 ;;		Nothing
 14374 ;; This function is called by:
 14375 ;;		_m_protocol
 14376 ;;		_r_protocol
 14377 ;;		_t_protocol
 14378 ;; This function uses a reentrant model
 14379 ;;
 14380                           
 14381                           	psect	text31
 14382  0191AC                     __ptext31:
 14383                           	opt callstack 0
 14384  0191AC                     _UART1_Read:
 14385                           	opt callstack 0
 14386                           
 14387                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14388  0191AC  52E6               	movf	postinc1,f,c
 14389  0191AE                     
 14390                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 14391                           
 14392                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 14393  0191AE  502A               	movf	_uart1RxCount^0,w,c	;volatile
 14394  0191B0  B4D8               	btfsc	status,2,c
 14395  0191B2  D7FD               	goto	l10271
 14396                           
 14397                           ;mcc_generated_files/uart1.c: 169:  readValue = uart1RxBuffer[uart1RxTail++];
 14398  0191B4  0E00               	movlw	low _uart1RxBuffer
 14399  0191B6  242B               	addwf	_uart1RxTail^0,w,c	;volatile
 14400  0191B8  6ED9               	movwf	fsr2l,c
 14401  0191BA  6ADA               	clrf	fsr2h,c
 14402  0191BC  0E04               	movlw	high _uart1RxBuffer
 14403  0191BE  22DA               	addwfc	fsr2h,f,c
 14404  0191C0  50DF               	movf	indf2,w,c
 14405  0191C2  6E42               	movwf	(btemp+11)^0,c
 14406                           
 14407                           ;stkvar	_readValue @ sp[(-1)+0]
 14408  0191C4  0EFF               	movlw	-1
 14409  0191C6  0060  F10B  FFE3   	movff	btemp+11,plusw1
 14410  0191CC  2A2B               	incf	_uart1RxTail^0,f,c	;volatile
 14411                           
 14412                           ;mcc_generated_files/uart1.c: 170:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
 14413  0191CE  282B               	incf	_uart1RxTail^0,w,c
 14414  0191D0  B4D8               	btfsc	status,2,c
 14415                           
 14416                           ;mcc_generated_files/uart1.c: 171:   uart1RxTail = 0;
 14417  0191D2  6A2B               	clrf	_uart1RxTail^0,c	;volatile
 14418                           
 14419                           ;mcc_generated_files/uart1.c: 173:  PIE3bits.U1RXIE = 0;
 14420                           
 14421                           ;mcc_generated_files/uart1.c: 172:  }
 14422  0191D4  0139               	movlb	57	; () banked
 14423  0191D6  9793               	bcf	147,3,b	;volatile
 14424                           
 14425                           ; BSR set to: 57
 14426                           ;mcc_generated_files/uart1.c: 174:  uart1RxCount--;
 14427  0191D8  062A               	decf	_uart1RxCount^0,f,c	;volatile
 14428                           
 14429                           ; BSR set to: 57
 14430                           ;mcc_generated_files/uart1.c: 175:  PIE3bits.U1RXIE = 1;
 14431  0191DA  8793               	bsf	147,3,b	;volatile
 14432                           
 14433                           ; BSR set to: 57
 14434                           ;mcc_generated_files/uart1.c: 177:  return readValue;
 14435                           ;stkvar	_readValue @ sp[(-1)+0]
 14436  0191DC  0EFF               	movlw	-1
 14437  0191DE  006F FF8C  F037    	movff	plusw1,btemp
 14438                           
 14439                           ; BSR set to: 57
 14440                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 14441  0191E4  52E5               	movf	postdec1,f,c
 14442  0191E6  0012               	return		;funcret
 14443  0191E8                     __end_of_UART1_Read:
 14444                           	opt callstack 0
 14445                           
 14446 ;; *************** function _init_display *****************
 14447 ;; Defined at:
 14448 ;;		line 37 in file "eadog.c"
 14449 ;; Parameters:    Size  Location     Type
 14450 ;;		None
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;		None
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1  [STACK] void 
 14455 ;; Registers used:
 14456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/3C
 14459 ;;		On exit  : 3F/3D
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14466 ;;Total ram usage:        0 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    5
 14469 ;; This function calls:
 14470 ;;		_ringBufS_init
 14471 ;;		_send_lcd_cmd
 14472 ;;		_send_lcd_cmd_long
 14473 ;;		_wdtdelay
 14474 ;; This function is called by:
 14475 ;;		_main
 14476 ;; This function uses a reentrant model
 14477 ;;
 14478                           
 14479                           	psect	text32
 14480  018220                     __ptext32:
 14481                           	opt callstack 0
 14482  018220                     _init_display:
 14483                           	opt callstack 25
 14484                           
 14485                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
 14486                           
 14487                           ; BSR set to: 57
 14488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14489                           ;incstack = 0
 14490  018220  0E80               	movlw	low _ring_buf1
 14491  018222  0100               	movlb	0	; () banked
 14492  018224  6F8D               	movwf	(_spi_link+6)& (0+255),b	;volatile
 14493  018226  0E02               	movlw	high _ring_buf1
 14494  018228  6F8E               	movwf	(_spi_link+7)& (0+255),b	;volatile
 14495                           
 14496                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
 14497  01822A  0E00               	movlw	low _ring_buf2
 14498  01822C  6F8B               	movwf	(_spi_link+4)& (0+255),b	;volatile
 14499  01822E  0E03               	movlw	high _ring_buf2
 14500  018230  6F8C               	movwf	(_spi_link+5)& (0+255),b	;volatile
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
 14504  018232  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 14505  018238  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 14506  01823E  ECB6  F0CA         	call	_ringBufS_init	;wreg free
 14507                           
 14508                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
 14509  018242  0060  F22F  FFE6   	movff	_spi_link+4,postinc1
 14510  018248  0060  F233  FFE6   	movff	_spi_link+5,postinc1
 14511  01824E  ECB6  F0CA         	call	_ringBufS_init	;wreg free
 14512                           
 14513                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
 14514  018252  84BE               	bsf	190,2,c	;volatile
 14515  018254  84BC               	bsf	188,2,c	;volatile
 14516                           
 14517                           ;eadog.c: 46:  wdtdelay(350000);
 14518  018256  0E30               	movlw	48
 14519  018258  6EE6               	movwf	postinc1,c
 14520  01825A  0E57               	movlw	87
 14521  01825C  6EE6               	movwf	postinc1,c
 14522  01825E  0E05               	movlw	5
 14523  018260  6EE6               	movwf	postinc1,c
 14524  018262  0E00               	movlw	0
 14525  018264  6EE6               	movwf	postinc1,c
 14526  018266  EC95  F0C6         	call	_wdtdelay	;wreg free
 14527                           
 14528                           ; BSR set to: 0
 14529                           ;eadog.c: 47:  send_lcd_cmd(0x39);
 14530  01826A  0E39               	movlw	57
 14531  01826C  6EE6               	movwf	postinc1,c
 14532  01826E  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
 14536  018272  0E1D               	movlw	29
 14537  018274  6EE6               	movwf	postinc1,c
 14538  018276  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;eadog.c: 49:  send_lcd_cmd(0x50);
 14542  01827A  0E50               	movlw	80
 14543  01827C  6EE6               	movwf	postinc1,c
 14544  01827E  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14545                           
 14546                           ; BSR set to: 0
 14547                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
 14548  018282  0E6C               	movlw	108
 14549  018284  6EE6               	movwf	postinc1,c
 14550  018286  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;eadog.c: 51:  send_lcd_cmd(0x76);
 14554  01828A  0E76               	movlw	118
 14555  01828C  6EE6               	movwf	postinc1,c
 14556  01828E  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
 14560  018292  0E38               	movlw	56
 14561  018294  6EE6               	movwf	postinc1,c
 14562  018296  EC8E  F0CA         	call	_send_lcd_cmd_long	;wreg free
 14563                           
 14564                           ; BSR set to: 0
 14565                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
 14566  01829A  0E0F               	movlw	15
 14567  01829C  6EE6               	movwf	postinc1,c
 14568  01829E  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
 14572  0182A2  0E01               	movlw	1
 14573  0182A4  6EE6               	movwf	postinc1,c
 14574  0182A6  EC8E  F0CA         	call	_send_lcd_cmd_long	;wreg free
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;eadog.c: 55:  send_lcd_cmd(0x02);
 14578  0182AA  0E02               	movlw	2
 14579  0182AC  6EE6               	movwf	postinc1,c
 14580  0182AE  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14581                           
 14582                           ; BSR set to: 0
 14583                           ;eadog.c: 56:  send_lcd_cmd(0x06);
 14584  0182B2  0E06               	movlw	6
 14585  0182B4  6EE6               	movwf	postinc1,c
 14586  0182B6  ECA2  F0CA         	call	_send_lcd_cmd	;wreg free
 14587                           
 14588                           ; BSR set to: 0
 14589                           ;eadog.c: 57:  wdtdelay(30);
 14590  0182BA  0E1E               	movlw	30
 14591  0182BC  6EE6               	movwf	postinc1,c
 14592  0182BE  0E00               	movlw	0
 14593  0182C0  6EE6               	movwf	postinc1,c
 14594  0182C2  0E00               	movlw	0
 14595  0182C4  6EE6               	movwf	postinc1,c
 14596  0182C6  0E00               	movlw	0
 14597  0182C8  6EE6               	movwf	postinc1,c
 14598  0182CA  EC95  F0C6         	call	_wdtdelay	;wreg free
 14599                           
 14600                           ; BSR set to: 0
 14601                           ;eadog.c: 58:  SPI1CON2 = 0x02;
 14602  0182CE  0E02               	movlw	2
 14603  0182D0  013D               	movlb	61	; () banked
 14604  0182D2  6F16               	movwf	22,b	;volatile
 14605                           
 14606                           ; BSR set to: 61
 14607                           ;eadog.c: 59:  SPI1CON1 = 0x40;
 14608  0182D4  0E40               	movlw	64
 14609  0182D6  6F15               	movwf	21,b	;volatile
 14610                           
 14611                           ; BSR set to: 61
 14612                           ;eadog.c: 60:  SPI1CON0 = 0x83;
 14613  0182D8  0E83               	movlw	131
 14614  0182DA  6F14               	movwf	20,b	;volatile
 14615                           
 14616                           ; BSR set to: 61
 14617                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
 14618  0182DC  931A               	bcf	26,1,b	;volatile
 14619                           
 14620                           ; BSR set to: 61
 14621                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
 14622  0182DE  0E3F               	movlw	-193
 14623  0182E0  013B               	movlb	59	; () banked
 14624  0182E2  17FD               	andwf	253,f,b	;volatile
 14625                           
 14626                           ; BSR set to: 59
 14627                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
 14628  0182E4  9BFD               	bcf	253,5,b	;volatile
 14629                           
 14630                           ; BSR set to: 59
 14631                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
 14632  0182E6  51FD               	movf	253,w,b	;volatile
 14633  0182E8  0BF9               	andlw	-7
 14634  0182EA  0902               	iorlw	2
 14635  0182EC  6FFD               	movwf	253,b	;volatile
 14636                           
 14637                           ; BSR set to: 59
 14638                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
 14639  0182EE  0EE7               	movlw	-25
 14640  0182F0  17FD               	andwf	253,f,b	;volatile
 14641                           
 14642                           ; BSR set to: 59
 14643                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
 14644  0182F2  81FD               	bsf	253,0,b	;volatile
 14645                           
 14646                           ; BSR set to: 59
 14647                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
 14648  0182F4  0E80               	movlw	low _ring_buf1
 14649  0182F6  6FF9               	movwf	249,b	;volatile
 14650  0182F8  0E02               	movlw	high _ring_buf1
 14651  0182FA  6FFA               	movwf	250,b	;volatile
 14652  0182FC  0E00               	movlw	low (_ring_buf1 shr (0+16))
 14653  0182FE  6FFB               	movwf	251,b	;volatile
 14654                           
 14655                           ; BSR set to: 59
 14656                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
 14657  018300  9BFC               	bcf	252,5,b	;volatile
 14658                           
 14659                           ; BSR set to: 59
 14660                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
 14661  018302  013D               	movlb	61	; () banked
 14662  018304  831A               	bsf	26,1,b	;volatile
 14663                           
 14664                           ; BSR set to: 61
 14665                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
 14666  018306  94BE               	bcf	190,2,c	;volatile
 14667                           
 14668                           ; BSR set to: 61
 14669                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14670  018308  0012               	return		;funcret
 14671  01830A                     __end_of_init_display:
 14672                           	opt callstack 0
 14673                           
 14674 ;; *************** function _send_lcd_cmd_long *****************
 14675 ;; Defined at:
 14676 ;;		line 114 in file "eadog.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;  cmd             1  [STACK] const unsigned char 
 14679 ;; Auto vars:     Size  Location     Type
 14680 ;;		None
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  1  [STACK] void 
 14683 ;; Registers used:
 14684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14685 ;; Tracked objects:
 14686 ;;		On entry : 3F/0
 14687 ;;		On exit  : 3F/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14694 ;;Total ram usage:        0 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:    4
 14697 ;; This function calls:
 14698 ;;		_SPI1_Exchange8bit
 14699 ;;		_wdtdelay
 14700 ;; This function is called by:
 14701 ;;		_init_display
 14702 ;; This function uses a reentrant model
 14703 ;;
 14704                           
 14705                           	psect	text33
 14706  01951C                     __ptext33:
 14707                           	opt callstack 0
 14708  01951C                     _send_lcd_cmd_long:
 14709                           	opt callstack 25
 14710                           
 14711                           ; BSR set to: 61
 14712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14713                           ;incstack = 0
 14714                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
 14715  01951C  92BC               	bcf	188,1,c	;volatile
 14716                           
 14717                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
 14718  01951E  94BC               	bcf	188,2,c	;volatile
 14719                           
 14720                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
 14721                           ;stkvar	_cmd @ sp[(0)+-1]
 14722  019520  0EFF               	movlw	-1
 14723  019522  50E3               	movf	plusw1,w,c
 14724  019524  6EE6               	movwf	postinc1,c
 14725  019526  EC49  F0CC         	call	_SPI1_Exchange8bit	;wreg free
 14726                           
 14727                           ; BSR set to: 57
 14728                           ;eadog.c: 119:  wdtdelay(800);
 14729  01952A  0E20               	movlw	32
 14730  01952C  6EE6               	movwf	postinc1,c
 14731  01952E  0E03               	movlw	3
 14732  019530  6EE6               	movwf	postinc1,c
 14733  019532  0E00               	movlw	0
 14734  019534  6EE6               	movwf	postinc1,c
 14735  019536  0E00               	movlw	0
 14736  019538  6EE6               	movwf	postinc1,c
 14737  01953A  EC95  F0C6         	call	_wdtdelay	;wreg free
 14738                           
 14739                           ; BSR set to: 0
 14740  01953E  82BC               	bsf	188,1,c	;volatile
 14741                           
 14742                           ; BSR set to: 0
 14743                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 14744  019540  52E5               	movf	postdec1,f,c
 14745  019542  0012               	return		;funcret
 14746  019544                     __end_of_send_lcd_cmd_long:
 14747                           	opt callstack 0
 14748                           
 14749 ;; *************** function _send_lcd_cmd *****************
 14750 ;; Defined at:
 14751 ;;		line 102 in file "eadog.c"
 14752 ;; Parameters:    Size  Location     Type
 14753 ;;  cmd             1  [STACK] const unsigned char 
 14754 ;; Auto vars:     Size  Location     Type
 14755 ;;		None
 14756 ;; Return value:  Size  Location     Type
 14757 ;;                  1  [STACK] void 
 14758 ;; Registers used:
 14759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14760 ;; Tracked objects:
 14761 ;;		On entry : 3F/0
 14762 ;;		On exit  : 3F/0
 14763 ;;		Unchanged: 0/0
 14764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14769 ;;Total ram usage:        0 bytes
 14770 ;; Hardware stack levels used:    1
 14771 ;; Hardware stack levels required when called:    4
 14772 ;; This function calls:
 14773 ;;		_SPI1_Exchange8bit
 14774 ;;		_wdtdelay
 14775 ;; This function is called by:
 14776 ;;		_init_display
 14777 ;; This function uses a reentrant model
 14778 ;;
 14779                           
 14780                           	psect	text34
 14781  019544                     __ptext34:
 14782                           	opt callstack 0
 14783  019544                     _send_lcd_cmd:
 14784                           	opt callstack 25
 14785                           
 14786                           ; BSR set to: 0
 14787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14788                           ;incstack = 0
 14789                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
 14790  019544  92BC               	bcf	188,1,c	;volatile
 14791                           
 14792                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
 14793  019546  94BC               	bcf	188,2,c	;volatile
 14794                           
 14795                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
 14796                           ;stkvar	_cmd @ sp[(0)+-1]
 14797  019548  0EFF               	movlw	-1
 14798  01954A  50E3               	movf	plusw1,w,c
 14799  01954C  6EE6               	movwf	postinc1,c
 14800  01954E  EC49  F0CC         	call	_SPI1_Exchange8bit	;wreg free
 14801                           
 14802                           ; BSR set to: 57
 14803                           ;eadog.c: 107:  wdtdelay(30);
 14804  019552  0E1E               	movlw	30
 14805  019554  6EE6               	movwf	postinc1,c
 14806  019556  0E00               	movlw	0
 14807  019558  6EE6               	movwf	postinc1,c
 14808  01955A  0E00               	movlw	0
 14809  01955C  6EE6               	movwf	postinc1,c
 14810  01955E  0E00               	movlw	0
 14811  019560  6EE6               	movwf	postinc1,c
 14812  019562  EC95  F0C6         	call	_wdtdelay	;wreg free
 14813                           
 14814                           ; BSR set to: 0
 14815  019566  82BC               	bsf	188,1,c	;volatile
 14816                           
 14817                           ; BSR set to: 0
 14818                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 14819  019568  52E5               	movf	postdec1,f,c
 14820  01956A  0012               	return		;funcret
 14821  01956C                     __end_of_send_lcd_cmd:
 14822                           	opt callstack 0
 14823                           
 14824 ;; *************** function _SPI1_Exchange8bit *****************
 14825 ;; Defined at:
 14826 ;;		line 79 in file "mcc_generated_files/spi1.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;  data            1  [STACK] unsigned char 
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1  [STACK] unsigned char 
 14833 ;; Registers used:
 14834 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 3F/39
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14844 ;;Total ram usage:        0 bytes
 14845 ;; Hardware stack levels used:    1
 14846 ;; Hardware stack levels required when called:    3
 14847 ;; This function calls:
 14848 ;;		Nothing
 14849 ;; This function is called by:
 14850 ;;		_send_lcd_cmd
 14851 ;;		_send_lcd_cmd_long
 14852 ;; This function uses a reentrant model
 14853 ;;
 14854                           
 14855                           	psect	text35
 14856  019892                     __ptext35:
 14857                           	opt callstack 0
 14858  019892                     _SPI1_Exchange8bit:
 14859                           	opt callstack 25
 14860                           
 14861                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 14862                           
 14863                           ; BSR set to: 0
 14864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14865                           ;incstack = 0
 14866  019892  0E01               	movlw	1
 14867  019894  013D               	movlb	61	; () banked
 14868  019896  6F12               	movwf	18,b	;volatile
 14869                           
 14870                           ; BSR set to: 61
 14871                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 14872                           ;stkvar	_data @ sp[(0)+-1]
 14873  019898  0EFF               	movlw	-1
 14874  01989A  006F FF8F FD11     	movff	plusw1,15633	;volatile
 14875  0198A0                     l824:
 14876                           
 14877                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 14878  0198A0  0139               	movlb	57	; () banked
 14879  0198A2  A9A2               	btfss	162,4,b	;volatile
 14880  0198A4  D7FD               	goto	l824
 14881                           
 14882                           ; BSR set to: 57
 14883                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 14884  0198A6  006F F440  F037    	movff	15632,btemp	;volatile
 14885                           
 14886                           ; BSR set to: 57
 14887                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 14888  0198AC  52E5               	movf	postdec1,f,c
 14889  0198AE  0012               	return		;funcret
 14890  0198B0                     __end_of_SPI1_Exchange8bit:
 14891                           	opt callstack 0
 14892                           
 14893 ;; *************** function _ringBufS_init *****************
 14894 ;; Defined at:
 14895 ;;		line 22 in file "ringbufs.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  _this           2  [STACK] PTR volatile struct ring
 14898 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;		None
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1  [STACK] void 
 14903 ;; Registers used:
 14904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14914 ;;Total ram usage:        0 bytes
 14915 ;; Hardware stack levels used:    1
 14916 ;; Hardware stack levels required when called:    4
 14917 ;; This function calls:
 14918 ;;		_memset
 14919 ;; This function is called by:
 14920 ;;		_init_display
 14921 ;; This function uses a reentrant model
 14922 ;;
 14923                           
 14924                           	psect	text36
 14925  01956C                     __ptext36:
 14926                           	opt callstack 0
 14927  01956C                     _ringBufS_init:
 14928                           	opt callstack 25
 14929                           
 14930                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 14931                           
 14932                           ; BSR set to: 57
 14933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14934                           ;incstack = 0
 14935  01956C  0E43               	movlw	67
 14936  01956E  6EE6               	movwf	postinc1,c
 14937  019570  0E00               	movlw	0
 14938  019572  6EE6               	movwf	postinc1,c
 14939  019574  0E00               	movlw	0
 14940  019576  6EE6               	movwf	postinc1,c
 14941  019578  0E00               	movlw	0
 14942  01957A  6EE6               	movwf	postinc1,c
 14943                           
 14944                           ;stkvar	__this @ sp[(-4)+-2]
 14945  01957C  0EFA               	movlw	-6
 14946  01957E  006F FF8F FFE6     	movff	plusw1,postinc1
 14947  019584  006F FF8F FFE6     	movff	plusw1,postinc1
 14948  01958A  ECE1  F0A9         	call	_memset	;wreg free
 14949                           
 14950                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 14951  01958E  52E5               	movf	postdec1,f,c
 14952  019590  52E5               	movf	postdec1,f,c
 14953  019592  0012               	return		;funcret
 14954  019594                     __end_of_ringBufS_init:
 14955                           	opt callstack 0
 14956                           
 14957 ;; *************** function _hb_message *****************
 14958 ;; Defined at:
 14959 ;;		line 572 in file "gemsecs.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;		None
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;		None
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  1  [STACK] void 
 14966 ;; Registers used:
 14967 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14968 ;; Tracked objects:
 14969 ;;		On entry : 0/3C
 14970 ;;		On exit  : 0/0
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14977 ;;Total ram usage:        0 bytes
 14978 ;; Hardware stack levels used:    1
 14979 ;; Hardware stack levels required when called:    3
 14980 ;; This function calls:
 14981 ;;		Nothing
 14982 ;; This function is called by:
 14983 ;;		_main
 14984 ;; This function uses a reentrant model
 14985 ;;
 14986                           
 14987                           	psect	text37
 14988  018E7E                     __ptext37:
 14989                           	opt callstack 0
 14990  018E7E                     _hb_message:
 14991                           	opt callstack 27
 14992                           
 14993                           ;gemsecs.c: 574:  V.ping++;
 14994                           
 14995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14996                           ;incstack = 0
 14997  018E7E  EE23  F15D         	lfsr	2,_V+323	;volatile
 14998  018E82  2ADE               	incf	postinc2,f,c
 14999  018E84  0E00               	movlw	0
 15000  018E86  22DD               	addwfc	postdec2,f,c
 15001                           
 15002                           ;gemsecs.c: 575:  V.s_state = SEQ_STATE_TX;
 15003  018E88  0E02               	movlw	2
 15004  018E8A  006F FFA0  FC1A    	movff	wreg,_V
 15005                           
 15006                           ;gemsecs.c: 576:  V.failed_send = 0;
 15007  018E90  EE23  F167         	lfsr	2,_V+333	;volatile
 15008  018E94  0E0F               	movlw	-241
 15009  018E96  16DF               	andwf	223,f,c
 15010                           
 15011                           ;gemsecs.c: 577:  V.t_l_state = LINK_STATE_IDLE;
 15012  018E98  0E00               	movlw	0
 15013  018E9A  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 15014                           
 15015                           ;gemsecs.c: 578:  if (V.msg_error == MSG_ERROR_NONE) {
 15016  018EA0  EE23  F151         	lfsr	2,_V+311	;volatile
 15017  018EA4  50DF               	movf	indf2,w,c
 15018  018EA6  A4D8               	btfss	status,2,c
 15019  018EA8  D009               	goto	l1824
 15020                           
 15021                           ;gemsecs.c: 579:   V.stream = 1;
 15022  018EAA  0E01               	movlw	1
 15023  018EAC  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 15024                           
 15025                           ;gemsecs.c: 580:   V.function = 2;
 15026  018EB2  0E02               	movlw	2
 15027  018EB4  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 15028                           
 15029                           ;gemsecs.c: 581:  } else {
 15030  018EBA  0012               	return	
 15031  018EBC                     l1824:
 15032                           
 15033                           ;gemsecs.c: 582:   V.stream = 1;
 15034  018EBC  0E01               	movlw	1
 15035  018EBE  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 15036                           
 15037                           ;gemsecs.c: 583:   V.function = 14;
 15038  018EC4  0E0E               	movlw	14
 15039  018EC6  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 15040                           
 15041                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 15042  018ECC  0012               	return		;funcret
 15043  018ECE                     __end_of_hb_message:
 15044                           	opt callstack 0
 15045                           
 15046 ;; *************** function _eaDogM_WriteCommand *****************
 15047 ;; Defined at:
 15048 ;;		line 160 in file "eadog.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;  cmd             1  [STACK] const unsigned char 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;		None
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  1  [STACK] void 
 15055 ;; Registers used:
 15056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 15057 ;; Tracked objects:
 15058 ;;		On entry : 3F/3D
 15059 ;;		On exit  : 3F/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15066 ;;Total ram usage:        0 bytes
 15067 ;; Hardware stack levels used:    1
 15068 ;; Hardware stack levels required when called:   13
 15069 ;; This function calls:
 15070 ;;		_send_lcd_cmd_dma
 15071 ;; This function is called by:
 15072 ;;		_main
 15073 ;; This function uses a reentrant model
 15074 ;;
 15075                           
 15076                           	psect	text38
 15077  019A3C                     __ptext38:
 15078                           	opt callstack 0
 15079  019A3C                     _eaDogM_WriteCommand:
 15080                           	opt callstack 17
 15081                           
 15082                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
 15083                           ;stkvar	_cmd @ sp[(0)+-1]
 15084                           
 15085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15086                           ;incstack = 0
 15087  019A3C  0EFF               	movlw	-1
 15088  019A3E  50E3               	movf	plusw1,w,c
 15089  019A40  6EE6               	movwf	postinc1,c
 15090  019A42  ECC2  F0C6         	call	_send_lcd_cmd_dma	;wreg free
 15091                           
 15092                           ; BSR set to: 0
 15093                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 15094  019A46  52E5               	movf	postdec1,f,c
 15095  019A48  0012               	return		;funcret
 15096  019A4A                     __end_of_eaDogM_WriteCommand:
 15097                           	opt callstack 0
 15098                           
 15099 ;; *************** function _check_help *****************
 15100 ;; Defined at:
 15101 ;;		line 40 in file "mconfig.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  flipper         1  [STACK] _Bool 
 15104 ;; Auto vars:     Size  Location     Type
 15105 ;;		None
 15106 ;; Return value:  Size  Location     Type
 15107 ;;                  1  [STACK] void 
 15108 ;; Registers used:
 15109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 15110 ;; Tracked objects:
 15111 ;;		On entry : 0/0
 15112 ;;		On exit  : 0/0
 15113 ;;		Unchanged: 0/0
 15114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15119 ;;Total ram usage:        0 bytes
 15120 ;; Hardware stack levels used:    1
 15121 ;; Hardware stack levels required when called:   15
 15122 ;; This function calls:
 15123 ;;		_StartTimer
 15124 ;;		_TimerDone
 15125 ;;		_display_help
 15126 ;;		_display_info
 15127 ;;		_get_vterm_ptr
 15128 ;;		_help_button
 15129 ;;		_mode_lamp_bright
 15130 ;;		_mode_lamp_dim
 15131 ;;		_set_display_info
 15132 ;;		_set_temp_display_help
 15133 ;;		_set_vterm
 15134 ;;		_sprintf
 15135 ;;		_update_lcd
 15136 ;;		_vterm_dump
 15137 ;; This function is called by:
 15138 ;;		_main
 15139 ;; This function uses a reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text39
 15143  016A1E                     __ptext39:
 15144                           	opt callstack 0
 15145  016A1E                     _check_help:
 15146                           	opt callstack 15
 15147                           
 15148                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
 15149                           
 15150                           ; BSR set to: 0
 15151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15152                           ;incstack = 0
 15153  016A1E  ECF4  F0C8         	call	_help_button	;wreg free
 15154  016A22  5037               	movf	btemp^0,w,c
 15155  016A24  B4D8               	btfsc	status,2,c
 15156  016A26  D0D4               	goto	l15427
 15157  016A28  EC61  F0CD         	call	_display_info	;wreg free
 15158  016A2C  0E06               	movlw	6
 15159  016A2E  1837               	xorwf	btemp^0,w,c
 15160  016A30  B4D8               	btfsc	status,2,c
 15161  016A32  D0CE               	goto	l15427
 15162                           
 15163                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
 15164  016A34  0EDC               	movlw	220
 15165  016A36  6EE6               	movwf	postinc1,c
 15166  016A38  0E05               	movlw	5
 15167  016A3A  6EE6               	movwf	postinc1,c
 15168  016A3C  0E0C               	movlw	12
 15169  016A3E  6EE6               	movwf	postinc1,c
 15170  016A40  EC12  F0C9         	call	_StartTimer	;wreg free
 15171                           
 15172                           ;mconfig.c: 47:   if (V.debug)
 15173  016A44  EE23  F168         	lfsr	2,_V+334	;volatile
 15174  016A48  BADF               	btfsc	indf2,5,c
 15175                           
 15176                           ;mconfig.c: 48:    vterm_dump();
 15177  016A4A  EC53  F0BC         	call	_vterm_dump	;wreg free
 15178                           
 15179                           ;mconfig.c: 50:   set_vterm(1);
 15180  016A4E  0E01               	movlw	1
 15181  016A50  6EE6               	movwf	postinc1,c
 15182  016A52  EC58  F0CC         	call	_set_vterm	;wreg free
 15183                           
 15184                           ;mconfig.c: 51:   set_temp_display_help(display_info());
 15185  016A56  EC61  F0CD         	call	_display_info	;wreg free
 15186  016A5A  5037               	movf	btemp^0,w,c
 15187  016A5C  6EE6               	movwf	postinc1,c
 15188  016A5E  EC0D  F0CD         	call	_set_temp_display_help	;wreg free
 15189                           
 15190                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
 15191  016A62  0E06               	movlw	6
 15192  016A64  6EE6               	movwf	postinc1,c
 15193  016A66  EC39  F0CC         	call	_set_display_info	;wreg free
 15194                           
 15195                           ;mconfig.c: 53:   if (flipper) {
 15196                           ;stkvar	_flipper @ sp[(0)+-1]
 15197  016A6A  0EFF               	movlw	-1
 15198  016A6C  50E3               	movf	plusw1,w,c
 15199  016A6E  B4D8               	btfsc	status,2,c
 15200  016A70  D019               	goto	l15415
 15201                           
 15202                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 15203  016A72  0E8B               	movlw	low STR_37
 15204  016A74  6EE6               	movwf	postinc1,c
 15205  016A76  0EFF               	movlw	high STR_37
 15206  016A78  6EE6               	movwf	postinc1,c
 15207  016A7A  0E98               	movlw	low STR_39
 15208  016A7C  6EE6               	movwf	postinc1,c
 15209  016A7E  0EFE               	movlw	high STR_39
 15210  016A80  6EE6               	movwf	postinc1,c
 15211  016A82  0E01               	movlw	1
 15212  016A84  6EE6               	movwf	postinc1,c
 15213  016A86  0E00               	movlw	0
 15214  016A88  6EE6               	movwf	postinc1,c
 15215  016A8A  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15216  016A8E  0060  F0DF  FFE6   	movff	btemp,postinc1
 15217  016A94  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15218  016A9A  0E06               	movlw	6
 15219  016A9C  6EE6               	movwf	postinc1,c
 15220  016A9E  EC95  F0BE         	call	_sprintf	;wreg free
 15221                           
 15222                           ;mconfig.c: 55:   } else {
 15223  016AA2  D018               	goto	l2211
 15224  016AA4                     l15415:
 15225                           
 15226                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 15227  016AA4  0EA1               	movlw	low STR_38
 15228  016AA6  6EE6               	movwf	postinc1,c
 15229  016AA8  0EFF               	movlw	high STR_38
 15230  016AAA  6EE6               	movwf	postinc1,c
 15231  016AAC  0E98               	movlw	low STR_39
 15232  016AAE  6EE6               	movwf	postinc1,c
 15233  016AB0  0EFE               	movlw	high STR_39
 15234  016AB2  6EE6               	movwf	postinc1,c
 15235  016AB4  0E01               	movlw	1
 15236  016AB6  6EE6               	movwf	postinc1,c
 15237  016AB8  0E00               	movlw	0
 15238  016ABA  6EE6               	movwf	postinc1,c
 15239  016ABC  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15240  016AC0  0060  F0DF  FFE6   	movff	btemp,postinc1
 15241  016AC6  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15242  016ACC  0E06               	movlw	6
 15243  016ACE  6EE6               	movwf	postinc1,c
 15244  016AD0  EC95  F0BE         	call	_sprintf	;wreg free
 15245  016AD4                     l2211:
 15246                           
 15247                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 15248  016AD4  EE23  F169         	lfsr	2,_V+335	;volatile
 15249  016AD8  30DF               	rrcf	223,w,c
 15250  016ADA  32E8               	rrcf	wreg,f,c
 15251  016ADC  32E8               	rrcf	wreg,f,c
 15252  016ADE  0B03               	andlw	3
 15253  016AE0  0D40               	mullw	64
 15254  016AE2  0E00               	movlw	low _T
 15255  016AE4  6E41               	movwf	(btemp+10)^0,c
 15256  016AE6  0E06               	movlw	high _T
 15257  016AE8  6E42               	movwf	(btemp+11)^0,c
 15258  016AEA  0E20               	movlw	32
 15259  016AEC  2641               	addwf	(btemp+10)^0,f,c
 15260  016AEE  0E00               	movlw	0
 15261  016AF0  2242               	addwfc	(btemp+11)^0,f,c
 15262  016AF2  50F3               	movf	243,w,c
 15263  016AF4  2641               	addwf	(btemp+10)^0,f,c
 15264  016AF6  50F4               	movf	244,w,c
 15265  016AF8  2242               	addwfc	(btemp+11)^0,f,c
 15266  016AFA  0060  F107  FFE6   	movff	btemp+10,postinc1
 15267  016B00  0060  F10B  FFE6   	movff	btemp+11,postinc1
 15268  016B06  0E97               	movlw	low STR_41
 15269  016B08  6EE6               	movwf	postinc1,c
 15270  016B0A  0EFF               	movlw	high STR_41
 15271  016B0C  6EE6               	movwf	postinc1,c
 15272  016B0E  0E01               	movlw	1
 15273  016B10  6EE6               	movwf	postinc1,c
 15274  016B12  0E01               	movlw	1
 15275  016B14  6EE6               	movwf	postinc1,c
 15276  016B16  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15277  016B1A  0060  F0DF  FFE6   	movff	btemp,postinc1
 15278  016B20  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15279  016B26  0E06               	movlw	6
 15280  016B28  6EE6               	movwf	postinc1,c
 15281  016B2A  EC95  F0BE         	call	_sprintf	;wreg free
 15282                           
 15283                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 15284  016B2E  EE23  F169         	lfsr	2,_V+335	;volatile
 15285  016B32  30DF               	rrcf	223,w,c
 15286  016B34  32E8               	rrcf	wreg,f,c
 15287  016B36  32E8               	rrcf	wreg,f,c
 15288  016B38  0B03               	andlw	3
 15289  016B3A  0D40               	mullw	64
 15290  016B3C  0E00               	movlw	low _T
 15291  016B3E  6E41               	movwf	(btemp+10)^0,c
 15292  016B40  0E06               	movlw	high _T
 15293  016B42  6E42               	movwf	(btemp+11)^0,c
 15294  016B44  50F3               	movf	243,w,c
 15295  016B46  2641               	addwf	(btemp+10)^0,f,c
 15296  016B48  50F4               	movf	244,w,c
 15297  016B4A  2242               	addwfc	(btemp+11)^0,f,c
 15298  016B4C  0060  F107  FFE6   	movff	btemp+10,postinc1
 15299  016B52  0060  F10B  FFE6   	movff	btemp+11,postinc1
 15300  016B58  0E97               	movlw	low STR_41
 15301  016B5A  6EE6               	movwf	postinc1,c
 15302  016B5C  0EFF               	movlw	high STR_41
 15303  016B5E  6EE6               	movwf	postinc1,c
 15304  016B60  0E01               	movlw	1
 15305  016B62  6EE6               	movwf	postinc1,c
 15306  016B64  0E02               	movlw	2
 15307  016B66  6EE6               	movwf	postinc1,c
 15308  016B68  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15309  016B6C  0060  F0DF  FFE6   	movff	btemp,postinc1
 15310  016B72  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15311  016B78  0E06               	movlw	6
 15312  016B7A  6EE6               	movwf	postinc1,c
 15313  016B7C  EC95  F0BE         	call	_sprintf	;wreg free
 15314                           
 15315                           ;mconfig.c: 60:   V.help_id++;
 15316  016B80  EE23  F169         	lfsr	2,_V+335	;volatile
 15317  016B84  30DF               	rrcf	223,w,c
 15318  016B86  6E42               	movwf	(btemp+11)^0,c
 15319  016B88  3242               	rrcf	(btemp+11)^0,f,c
 15320  016B8A  3042               	rrcf	(btemp+11)^0,w,c
 15321  016B8C  0B03               	andlw	3
 15322  016B8E  6E42               	movwf	(btemp+11)^0,c
 15323  016B90  2A42               	incf	(btemp+11)^0,f,c
 15324  016B92  3642               	rlcf	(btemp+11)^0,f,c
 15325  016B94  3642               	rlcf	(btemp+11)^0,f,c
 15326  016B96  3642               	rlcf	(btemp+11)^0,f,c
 15327  016B98  50DF               	movf	223,w,c
 15328  016B9A  1842               	xorwf	(btemp+11)^0,w,c
 15329  016B9C  0BE7               	andlw	-25
 15330  016B9E  1842               	xorwf	(btemp+11)^0,w,c
 15331  016BA0  6EDF               	movwf	223,c
 15332                           
 15333                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
 15334  016BA2  0EB8               	movlw	184
 15335  016BA4  6EE6               	movwf	postinc1,c
 15336  016BA6  0E0B               	movlw	11
 15337  016BA8  6EE6               	movwf	postinc1,c
 15338  016BAA  0E09               	movlw	9
 15339  016BAC  6EE6               	movwf	postinc1,c
 15340  016BAE  EC12  F0C9         	call	_StartTimer	;wreg free
 15341                           
 15342                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
 15343  016BB2  0EB8               	movlw	184
 15344  016BB4  6EE6               	movwf	postinc1,c
 15345  016BB6  0E0B               	movlw	11
 15346  016BB8  6EE6               	movwf	postinc1,c
 15347  016BBA  0E07               	movlw	7
 15348  016BBC  6EE6               	movwf	postinc1,c
 15349  016BBE  EC12  F0C9         	call	_StartTimer	;wreg free
 15350                           
 15351                           ;mconfig.c: 63:   mode_lamp_bright();
 15352  016BC2  EC25  F0CD         	call	_mode_lamp_bright	;wreg free
 15353                           
 15354                           ;mconfig.c: 64:   update_lcd(1);
 15355  016BC6  0E01               	movlw	1
 15356  016BC8  6EE6               	movwf	postinc1,c
 15357  016BCA  EC0D  F0BE         	call	_update_lcd	;wreg free
 15358                           
 15359                           ;mconfig.c: 65:  } else {
 15360  016BCE  D03F               	goto	l2215
 15361  016BD0                     l15427:
 15362                           
 15363                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
 15364  016BD0  0E09               	movlw	9
 15365  016BD2  6EE6               	movwf	postinc1,c
 15366  016BD4  ECE1  F0CB         	call	_TimerDone	;wreg free
 15367  016BD8  5037               	movf	btemp^0,w,c
 15368  016BDA  B4D8               	btfsc	status,2,c
 15369  016BDC  D038               	goto	l2215
 15370                           
 15371                           ;mconfig.c: 67:    set_vterm(0);
 15372  016BDE  0E00               	movlw	0
 15373  016BE0  6EE6               	movwf	postinc1,c
 15374  016BE2  EC58  F0CC         	call	_set_vterm	;wreg free
 15375                           
 15376                           ;mconfig.c: 68:    V.help = 0;
 15377  016BE6  EE23  F168         	lfsr	2,_V+334	;volatile
 15378  016BEA  9CDF               	bcf	indf2,6,c
 15379                           
 15380                           ;mconfig.c: 69:    set_display_info(display_help());
 15381  016BEC  EC65  F0CD         	call	_display_help	;wreg free
 15382  016BF0  5037               	movf	btemp^0,w,c
 15383  016BF2  6EE6               	movwf	postinc1,c
 15384  016BF4  EC39  F0CC         	call	_set_display_info	;wreg free
 15385                           
 15386                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
 15387  016BF8  EE23  F15F         	lfsr	2,_V+325	;volatile
 15388  016BFC  006F FF78  F041    	movff	postinc2,btemp+10
 15389  016C02  006F FF74  F042    	movff	postdec2,btemp+11
 15390  016C08  0060  F107  FFE6   	movff	btemp+10,postinc1
 15391  016C0E  0060  F10B  FFE6   	movff	btemp+11,postinc1
 15392  016C14  ECD6  F0CC         	call	_mode_lamp_dim	;wreg free
 15393                           
 15394                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
 15395  016C18  0E0C               	movlw	12
 15396  016C1A  6EE6               	movwf	postinc1,c
 15397  016C1C  ECE1  F0CB         	call	_TimerDone	;wreg free
 15398  016C20  5037               	movf	btemp^0,w,c
 15399  016C22  B4D8               	btfsc	status,2,c
 15400  016C24  D014               	goto	l2215
 15401                           
 15402                           ;mconfig.c: 72:     V.flipper = !V.flipper;
 15403  016C26  EE23  F19C         	lfsr	2,_V+386	;volatile
 15404  016C2A  50DF               	movf	indf2,w,c
 15405  016C2C  A4D8               	btfss	status,2,c
 15406  016C2E  D003               	goto	u11630
 15407  016C30  6A42               	clrf	(btemp+11)^0,c
 15408  016C32  2A42               	incf	(btemp+11)^0,f,c
 15409  016C34  D001               	goto	u11648
 15410  016C36                     u11630:
 15411  016C36  6A42               	clrf	(btemp+11)^0,c
 15412  016C38                     u11648:
 15413  016C38  0060  F108  FD9C   	movff	btemp+11,_V+386	;volatile
 15414                           
 15415                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
 15416  016C3E  0EDC               	movlw	220
 15417  016C40  6EE6               	movwf	postinc1,c
 15418  016C42  0E05               	movlw	5
 15419  016C44  6EE6               	movwf	postinc1,c
 15420  016C46  0E0C               	movlw	12
 15421  016C48  6EE6               	movwf	postinc1,c
 15422  016C4A  EC12  F0C9         	call	_StartTimer	;wreg free
 15423  016C4E                     l2215:
 15424                           
 15425                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 15426  016C4E  52E5               	movf	postdec1,f,c
 15427  016C50  0012               	return		;funcret
 15428  016C52                     __end_of_check_help:
 15429                           	opt callstack 0
 15430                           
 15431 ;; *************** function _vterm_dump *****************
 15432 ;; Defined at:
 15433 ;;		line 118 in file "mconfig.c"
 15434 ;; Parameters:    Size  Location     Type
 15435 ;;		None
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;		None
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  1  [STACK] void 
 15440 ;; Registers used:
 15441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 15442 ;; Tracked objects:
 15443 ;;		On entry : 0/0
 15444 ;;		On exit  : 0/0
 15445 ;;		Unchanged: 0/0
 15446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15451 ;;Total ram usage:        0 bytes
 15452 ;; Hardware stack levels used:    1
 15453 ;; Hardware stack levels required when called:   14
 15454 ;; This function calls:
 15455 ;;		_WaitMs
 15456 ;;		_eaDogM_WriteStringAtPos
 15457 ;;		_get_vterm_ptr
 15458 ;;		_sprintf
 15459 ;;		_wait_lcd_done
 15460 ;; This function is called by:
 15461 ;;		_check_help
 15462 ;; This function uses a reentrant model
 15463 ;;
 15464                           
 15465                           	psect	text40
 15466  0178A6                     __ptext40:
 15467                           	opt callstack 0
 15468  0178A6                     _vterm_dump:
 15469                           	opt callstack 15
 15470                           
 15471                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 15472                           
 15473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15474                           ;incstack = 0
 15475  0178A6  0E01               	movlw	1
 15476  0178A8  6EE6               	movwf	postinc1,c
 15477  0178AA  0E00               	movlw	0
 15478  0178AC  6EE6               	movwf	postinc1,c
 15479  0178AE  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15480  0178B2  0060  F0DF  FFE6   	movff	btemp,postinc1
 15481  0178B8  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15482  0178BE  0E00               	movlw	0
 15483  0178C0  6EE6               	movwf	postinc1,c
 15484  0178C2  0E00               	movlw	0
 15485  0178C4  6EE6               	movwf	postinc1,c
 15486  0178C6  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15487  0178CA  0060  F0DF  FFE6   	movff	btemp,postinc1
 15488  0178D0  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15489  0178D6  0E6D               	movlw	low STR_43
 15490  0178D8  6EE6               	movwf	postinc1,c
 15491  0178DA  0EFF               	movlw	high STR_43
 15492  0178DC  6EE6               	movwf	postinc1,c
 15493  0178DE  0E21               	movlw	low (_V+7)
 15494  0178E0  6EE6               	movwf	postinc1,c
 15495  0178E2  0E0C               	movlw	high (_V+7)
 15496  0178E4  6EE6               	movwf	postinc1,c
 15497  0178E6  0E08               	movlw	8
 15498  0178E8  6EE6               	movwf	postinc1,c
 15499  0178EA  EC95  F0BE         	call	_sprintf	;wreg free
 15500                           
 15501                           ;mconfig.c: 121:  wait_lcd_done();
 15502  0178EE  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 15503                           
 15504                           ; BSR set to: 0
 15505                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 15506  0178F2  0E21               	movlw	low (_V+7)
 15507  0178F4  6EE6               	movwf	postinc1,c
 15508  0178F6  0E0C               	movlw	high (_V+7)
 15509  0178F8  6EE6               	movwf	postinc1,c
 15510  0178FA  0E00               	movlw	0
 15511  0178FC  6EE6               	movwf	postinc1,c
 15512  0178FE  0E00               	movlw	0
 15513  017900  6EE6               	movwf	postinc1,c
 15514  017902  EC4B  F0C9         	call	_eaDogM_WriteStringAtPos	;wreg free
 15515                           
 15516                           ; BSR set to: 59
 15517                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 15518  017906  0E01               	movlw	1
 15519  017908  6EE6               	movwf	postinc1,c
 15520  01790A  0E01               	movlw	1
 15521  01790C  6EE6               	movwf	postinc1,c
 15522  01790E  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15523  017912  0060  F0DF  FFE6   	movff	btemp,postinc1
 15524  017918  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15525  01791E  0E00               	movlw	0
 15526  017920  6EE6               	movwf	postinc1,c
 15527  017922  0E01               	movlw	1
 15528  017924  6EE6               	movwf	postinc1,c
 15529  017926  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15530  01792A  0060  F0DF  FFE6   	movff	btemp,postinc1
 15531  017930  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15532  017936  0E6D               	movlw	low STR_43
 15533  017938  6EE6               	movwf	postinc1,c
 15534  01793A  0EFF               	movlw	high STR_43
 15535  01793C  6EE6               	movwf	postinc1,c
 15536  01793E  0E21               	movlw	low (_V+7)
 15537  017940  6EE6               	movwf	postinc1,c
 15538  017942  0E0C               	movlw	high (_V+7)
 15539  017944  6EE6               	movwf	postinc1,c
 15540  017946  0E08               	movlw	8
 15541  017948  6EE6               	movwf	postinc1,c
 15542  01794A  EC95  F0BE         	call	_sprintf	;wreg free
 15543                           
 15544                           ;mconfig.c: 124:  wait_lcd_done();
 15545  01794E  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 15546                           
 15547                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 15548  017952  0E21               	movlw	low (_V+7)
 15549  017954  6EE6               	movwf	postinc1,c
 15550  017956  0E0C               	movlw	high (_V+7)
 15551  017958  6EE6               	movwf	postinc1,c
 15552  01795A  0E00               	movlw	0
 15553  01795C  6EE6               	movwf	postinc1,c
 15554  01795E  0E01               	movlw	1
 15555  017960  6EE6               	movwf	postinc1,c
 15556  017962  EC4B  F0C9         	call	_eaDogM_WriteStringAtPos	;wreg free
 15557                           
 15558                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 15559  017966  0E01               	movlw	1
 15560  017968  6EE6               	movwf	postinc1,c
 15561  01796A  0E02               	movlw	2
 15562  01796C  6EE6               	movwf	postinc1,c
 15563  01796E  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15564  017972  0060  F0DF  FFE6   	movff	btemp,postinc1
 15565  017978  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15566  01797E  0E00               	movlw	0
 15567  017980  6EE6               	movwf	postinc1,c
 15568  017982  0E02               	movlw	2
 15569  017984  6EE6               	movwf	postinc1,c
 15570  017986  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 15571  01798A  0060  F0DF  FFE6   	movff	btemp,postinc1
 15572  017990  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 15573  017996  0E6D               	movlw	low STR_43
 15574  017998  6EE6               	movwf	postinc1,c
 15575  01799A  0EFF               	movlw	high STR_43
 15576  01799C  6EE6               	movwf	postinc1,c
 15577  01799E  0E21               	movlw	low (_V+7)
 15578  0179A0  6EE6               	movwf	postinc1,c
 15579  0179A2  0E0C               	movlw	high (_V+7)
 15580  0179A4  6EE6               	movwf	postinc1,c
 15581  0179A6  0E08               	movlw	8
 15582  0179A8  6EE6               	movwf	postinc1,c
 15583  0179AA  EC95  F0BE         	call	_sprintf	;wreg free
 15584                           
 15585                           ;mconfig.c: 127:  wait_lcd_done();
 15586  0179AE  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 15590  0179B2  0E21               	movlw	low (_V+7)
 15591  0179B4  6EE6               	movwf	postinc1,c
 15592  0179B6  0E0C               	movlw	high (_V+7)
 15593  0179B8  6EE6               	movwf	postinc1,c
 15594  0179BA  0E00               	movlw	0
 15595  0179BC  6EE6               	movwf	postinc1,c
 15596  0179BE  0E02               	movlw	2
 15597  0179C0  6EE6               	movwf	postinc1,c
 15598  0179C2  EC4B  F0C9         	call	_eaDogM_WriteStringAtPos	;wreg free
 15599                           
 15600                           ; BSR set to: 59
 15601                           ;mconfig.c: 129:  WaitMs(3000);
 15602  0179C6  0EB8               	movlw	184
 15603  0179C8  6EE6               	movwf	postinc1,c
 15604  0179CA  0E0B               	movlw	11
 15605  0179CC  6EE6               	movwf	postinc1,c
 15606  0179CE  EC30  F0C9         	call	_WaitMs	;wreg free
 15607                           
 15608                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 15609  0179D2  0012               	return		;funcret
 15610  0179D4                     __end_of_vterm_dump:
 15611                           	opt callstack 0
 15612                           
 15613 ;; *************** function _WaitMs *****************
 15614 ;; Defined at:
 15615 ;;		line 32 in file "timers.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;  numMilliseco    2  [STACK] const unsigned short 
 15618 ;; Auto vars:     Size  Location     Type
 15619 ;;		None
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  1  [STACK] void 
 15622 ;; Registers used:
 15623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/3C
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15633 ;;Total ram usage:        0 bytes
 15634 ;; Hardware stack levels used:    1
 15635 ;; Hardware stack levels required when called:    4
 15636 ;; This function calls:
 15637 ;;		_StartTimer
 15638 ;;		_TimerDone
 15639 ;; This function is called by:
 15640 ;;		_main
 15641 ;;		_m_protocol
 15642 ;;		_r_protocol
 15643 ;;		_vterm_dump
 15644 ;; This function uses a reentrant model
 15645 ;;
 15646                           
 15647                           	psect	text41
 15648  019260                     __ptext41:
 15649                           	opt callstack 0
 15650  019260                     _WaitMs:
 15651                           	opt callstack 25
 15652                           
 15653                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 15654                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 15655                           
 15656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15657                           ;incstack = 0
 15658  019260  0EFE               	movlw	-2
 15659  019262  006F FF8F FFE6     	movff	plusw1,postinc1
 15660  019268  006F FF8F FFE6     	movff	plusw1,postinc1
 15661  01926E  0E00               	movlw	0
 15662  019270  6EE6               	movwf	postinc1,c
 15663  019272  EC12  F0C9         	call	_StartTimer	;wreg free
 15664                           
 15665                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 15666  019276  D005               	goto	l9511
 15667  019278                     l2133:
 15668                           
 15669                           ;timers.c: 36:   __nop();
 15670  019278  F000               	nop	
 15671                           
 15672                           ;timers.c: 37:   __nop();
 15673  01927A  F000               	nop	
 15674                           
 15675                           ;timers.c: 38:   __nop();
 15676  01927C  F000               	nop	
 15677                           
 15678                           ;timers.c: 39:   __nop();
 15679  01927E  F000               	nop	
 15680  019280  0004               	clrwdt		;# 
 15681  019282                     l9511:
 15682                           
 15683                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 15684  019282  0E00               	movlw	0
 15685  019284  6EE6               	movwf	postinc1,c
 15686  019286  ECE1  F0CB         	call	_TimerDone	;wreg free
 15687  01928A  5037               	movf	btemp^0,w,c
 15688  01928C  B4D8               	btfsc	status,2,c
 15689  01928E  D7F4               	goto	l2133
 15690                           
 15691                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 15692  019290  52E5               	movf	postdec1,f,c
 15693  019292  52E5               	movf	postdec1,f,c
 15694  019294  0012               	return		;funcret
 15695  019296                     __end_of_WaitMs:
 15696                           	opt callstack 0
 15697                           
 15698 ;; *************** function _set_vterm *****************
 15699 ;; Defined at:
 15700 ;;		line 104 in file "mconfig.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;  vterm           1  [STACK] unsigned char 
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1  [STACK] unsigned char 
 15707 ;; Registers used:
 15708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; Hardware stack levels required when called:    3
 15721 ;; This function calls:
 15722 ;;		Nothing
 15723 ;; This function is called by:
 15724 ;;		_main
 15725 ;;		_check_help
 15726 ;; This function uses a reentrant model
 15727 ;;
 15728                           
 15729                           	psect	text42
 15730  0198B0                     __ptext42:
 15731                           	opt callstack 0
 15732  0198B0                     _set_vterm:
 15733                           	opt callstack 27
 15734                           
 15735                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 15736                           ;stkvar	_vterm @ sp[(0)+-1]
 15737                           
 15738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15739                           ;incstack = 0
 15740  0198B0  0EFF               	movlw	-1
 15741  0198B2  006F FF8C  F042    	movff	plusw1,btemp+11
 15742  0198B8  0E03               	movlw	3
 15743  0198BA  1642               	andwf	(btemp+11)^0,f,c
 15744  0198BC  EE22  F100         	lfsr	2,mconfig@D+512
 15745  0198C0  50DF               	movf	223,w,c
 15746  0198C2  1842               	xorwf	(btemp+11)^0,w,c
 15747  0198C4  0BFE               	andlw	-2
 15748  0198C6  1842               	xorwf	(btemp+11)^0,w,c
 15749  0198C8  6EDF               	movwf	223,c
 15750                           
 15751                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 15752  0198CA  52E5               	movf	postdec1,f,c
 15753  0198CC  0012               	return		;funcret
 15754  0198CE                     __end_of_set_vterm:
 15755                           	opt callstack 0
 15756                           
 15757 ;; *************** function _set_temp_display_help *****************
 15758 ;; Defined at:
 15759 ;;		line 236 in file "mconfig.c"
 15760 ;; Parameters:    Size  Location     Type
 15761 ;;  new_response    1  [STACK] const enum E16510
 15762 ;; Auto vars:     Size  Location     Type
 15763 ;;		None
 15764 ;; Return value:  Size  Location     Type
 15765 ;;                  1  [STACK] enum E16735
 15766 ;; Registers used:
 15767 ;;		wreg, fsr1l, fsr1h, btemp+11
 15768 ;; Tracked objects:
 15769 ;;		On entry : 0/3C
 15770 ;;		On exit  : 0/0
 15771 ;;		Unchanged: 0/0
 15772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15777 ;;Total ram usage:        0 bytes
 15778 ;; Hardware stack levels used:    1
 15779 ;; Hardware stack levels required when called:    3
 15780 ;; This function calls:
 15781 ;;		Nothing
 15782 ;; This function is called by:
 15783 ;;		_secs_II_message
 15784 ;;		_check_help
 15785 ;; This function uses a reentrant model
 15786 ;;
 15787                           
 15788                           	psect	text43
 15789  019A1A                     __ptext43:
 15790                           	opt callstack 0
 15791  019A1A                     _set_temp_display_help:
 15792                           	opt callstack 25
 15793                           
 15794                           ;mconfig.c: 241:  V.response.help_temp = new_response_info;
 15795                           ;stkvar	_new_response_info @ sp[(0)+-1]
 15796                           
 15797                           ;mconfig.c: 236: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 237: {;mconfig.c: 238:  static D_CODES old_info;;mconfig.c: 240:  old_info = V.respon
      +                          se.help_temp;
 15798                           
 15799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15800                           ;incstack = 0
 15801  019A1A  0EFF               	movlw	-1
 15802  019A1C  006F FF8C  F042    	movff	plusw1,btemp+11
 15803  019A22  0060  F108  FD92   	movff	btemp+11,_V+376	;volatile
 15804                           
 15805                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 15806  019A28  52E5               	movf	postdec1,f,c
 15807  019A2A  0012               	return		;funcret
 15808  019A2C                     __end_of_set_temp_display_help:
 15809                           	opt callstack 0
 15810                           
 15811 ;; *************** function _set_display_info *****************
 15812 ;; Defined at:
 15813 ;;		line 225 in file "mconfig.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;  new_response    1  [STACK] const enum E16510
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1  [STACK] enum E16995
 15820 ;; Registers used:
 15821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/3C
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15831 ;;Total ram usage:        0 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; Hardware stack levels required when called:    4
 15834 ;; This function calls:
 15835 ;;		_TimerDone
 15836 ;; This function is called by:
 15837 ;;		_main
 15838 ;;		_secs_II_message
 15839 ;;		_secs_gem_state
 15840 ;;		_check_help
 15841 ;; This function uses a reentrant model
 15842 ;;
 15843                           
 15844                           	psect	text44
 15845  019872                     __ptext44:
 15846                           	opt callstack 0
 15847  019872                     _set_display_info:
 15848                           	opt callstack 24
 15849                           
 15850                           ;mconfig.c: 225: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 22
      +                          6: {;mconfig.c: 227:  static D_CODES old_info = DIS_STR;;mconfig.c: 229:  if (TimerDone(
      +                          TMR_INFO)) {
 15851                           
 15852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15853                           ;incstack = 0
 15854  019872  0E07               	movlw	7
 15855  019874  6EE6               	movwf	postinc1,c
 15856  019876  ECE1  F0CB         	call	_TimerDone	;wreg free
 15857  01987A  5037               	movf	btemp^0,w,c
 15858  01987C  B4D8               	btfsc	status,2,c
 15859  01987E  D007               	goto	l2266
 15860                           
 15861                           ;mconfig.c: 231:   V.response.info = new_response_info;
 15862                           ;stkvar	_new_response_info @ sp[(0)+-1]
 15863                           
 15864                           ;mconfig.c: 230:   old_info = V.response.info;
 15865  019880  0EFF               	movlw	-1
 15866  019882  006F FF8C  F042    	movff	plusw1,btemp+11
 15867  019888  0060  F108  FD91   	movff	btemp+11,_V+375	;volatile
 15868  01988E                     l2266:
 15869                           
 15870                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 15871  01988E  52E5               	movf	postdec1,f,c
 15872  019890  0012               	return		;funcret
 15873  019892                     __end_of_set_display_info:
 15874                           	opt callstack 0
 15875                           
 15876 ;; *************** function _mode_lamp_dim *****************
 15877 ;; Defined at:
 15878 ;;		line 13 in file "mconfig.c"
 15879 ;; Parameters:    Size  Location     Type
 15880 ;;  level           2  [STACK] const unsigned short 
 15881 ;; Auto vars:     Size  Location     Type
 15882 ;;		None
 15883 ;; Return value:  Size  Location     Type
 15884 ;;                  1  [STACK] void 
 15885 ;; Registers used:
 15886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 15887 ;; Tracked objects:
 15888 ;;		On entry : 0/3C
 15889 ;;		On exit  : 0/0
 15890 ;;		Unchanged: 0/0
 15891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15896 ;;Total ram usage:        0 bytes
 15897 ;; Hardware stack levels used:    1
 15898 ;; Hardware stack levels required when called:    4
 15899 ;; This function calls:
 15900 ;;		_PWM8_LoadDutyValue
 15901 ;; This function is called by:
 15902 ;;		_main
 15903 ;;		_check_help
 15904 ;; This function uses a reentrant model
 15905 ;;
 15906                           
 15907                           	psect	text45
 15908  0199AC                     __ptext45:
 15909                           	opt callstack 0
 15910  0199AC                     _mode_lamp_dim:
 15911                           	opt callstack 26
 15912                           
 15913                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 15914                           ;stkvar	_level @ sp[(0)+-2]
 15915                           
 15916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15917                           ;incstack = 0
 15918  0199AC  0EFE               	movlw	-2
 15919  0199AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15920  0199B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15921  0199BA  EC17  F0C8         	call	_PWM8_LoadDutyValue	;wreg free
 15922                           
 15923                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 15924  0199BE  52E5               	movf	postdec1,f,c
 15925  0199C0  52E5               	movf	postdec1,f,c
 15926  0199C2  0012               	return		;funcret
 15927  0199C4                     __end_of_mode_lamp_dim:
 15928                           	opt callstack 0
 15929                           
 15930 ;; *************** function _mode_lamp_bright *****************
 15931 ;; Defined at:
 15932 ;;		line 18 in file "mconfig.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;		None
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;		None
 15937 ;; Return value:  Size  Location     Type
 15938 ;;                  1  [STACK] void 
 15939 ;; Registers used:
 15940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 15941 ;; Tracked objects:
 15942 ;;		On entry : 0/0
 15943 ;;		On exit  : 0/0
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15950 ;;Total ram usage:        0 bytes
 15951 ;; Hardware stack levels used:    1
 15952 ;; Hardware stack levels required when called:    4
 15953 ;; This function calls:
 15954 ;;		_PWM8_LoadDutyValue
 15955 ;; This function is called by:
 15956 ;;		_check_help
 15957 ;; This function uses a reentrant model
 15958 ;;
 15959                           
 15960                           	psect	text46
 15961  019A4A                     __ptext46:
 15962                           	opt callstack 0
 15963  019A4A                     _mode_lamp_bright:
 15964                           	opt callstack 25
 15965                           
 15966                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 15967                           
 15968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15969                           ;incstack = 0
 15970  019A4A  0E2C               	movlw	44
 15971  019A4C  6EE6               	movwf	postinc1,c
 15972  019A4E  0E01               	movlw	1
 15973  019A50  6EE6               	movwf	postinc1,c
 15974  019A52  EC17  F0C8         	call	_PWM8_LoadDutyValue	;wreg free
 15975                           
 15976                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 15977  019A56  0012               	return		;funcret
 15978  019A58                     __end_of_mode_lamp_bright:
 15979                           	opt callstack 0
 15980                           
 15981 ;; *************** function _PWM8_LoadDutyValue *****************
 15982 ;; Defined at:
 15983 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 15984 ;; Parameters:    Size  Location     Type
 15985 ;;  dutyValue       2  [STACK] unsigned short 
 15986 ;; Auto vars:     Size  Location     Type
 15987 ;;		None
 15988 ;; Return value:  Size  Location     Type
 15989 ;;                  1  [STACK] void 
 15990 ;; Registers used:
 15991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 15992 ;; Tracked objects:
 15993 ;;		On entry : 0/3C
 15994 ;;		On exit  : 0/0
 15995 ;;		Unchanged: 0/0
 15996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16001 ;;Total ram usage:        0 bytes
 16002 ;; Hardware stack levels used:    1
 16003 ;; Hardware stack levels required when called:    3
 16004 ;; This function calls:
 16005 ;;		Nothing
 16006 ;; This function is called by:
 16007 ;;		_mode_lamp_dim
 16008 ;;		_mode_lamp_bright
 16009 ;; This function uses a reentrant model
 16010 ;;
 16011                           
 16012                           	psect	text47
 16013  01902E                     __ptext47:
 16014                           	opt callstack 0
 16015  01902E                     _PWM8_LoadDutyValue:
 16016                           	opt callstack 26
 16017                           
 16018                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 16019                           ;stkvar	_dutyValue @ sp[(0)+-2]
 16020                           
 16021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16022                           ;incstack = 0
 16023  01902E  0EFE               	movlw	-2
 16024  019030  006F FF8C  F041    	movff	plusw1,btemp+10
 16025  019036  0EFF               	movlw	-1
 16026  019038  006F FF8C  F042    	movff	plusw1,btemp+11
 16027  01903E  90D8               	bcf	status,0,c
 16028  019040  3242               	rrcf	(btemp+11)^0,f,c
 16029  019042  3241               	rrcf	(btemp+10)^0,f,c
 16030  019044  90D8               	bcf	status,0,c
 16031  019046  3242               	rrcf	(btemp+11)^0,f,c
 16032  019048  3241               	rrcf	(btemp+10)^0,f,c
 16033  01904A  5041               	movf	(btemp+10)^0,w,c
 16034  01904C  6E61               	movwf	97,c	;volatile
 16035                           
 16036                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 16037                           ;stkvar	_dutyValue @ sp[(0)+-2]
 16038  01904E  0EFE               	movlw	-2
 16039  019050  006F FF8C  F042    	movff	plusw1,btemp+11
 16040  019056  0E03               	movlw	3
 16041  019058  1642               	andwf	(btemp+11)^0,f,c
 16042  01905A  0E06               	movlw	6
 16043  01905C  6E37               	movwf	btemp^0,c
 16044  01905E                     u6685:
 16045  01905E  90D8               	bcf	status,0,c
 16046  019060  3642               	rlcf	(btemp+11)^0,f,c
 16047  019062  2E37               	decfsz	btemp^0,f,c
 16048  019064  D7FC               	goto	u6685
 16049  019066  5042               	movf	(btemp+11)^0,w,c
 16050  019068  6E60               	movwf	96,c	;volatile
 16051                           
 16052                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 16053  01906A  52E5               	movf	postdec1,f,c
 16054  01906C  52E5               	movf	postdec1,f,c
 16055  01906E  0012               	return		;funcret
 16056  019070                     __end_of_PWM8_LoadDutyValue:
 16057                           	opt callstack 0
 16058                           
 16059 ;; *************** function _help_button *****************
 16060 ;; Defined at:
 16061 ;;		line 26 in file "mconfig.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;		None
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1  [STACK] _Bool 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;Total ram usage:        0 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:    4
 16082 ;; This function calls:
 16083 ;;		_StartTimer
 16084 ;;		_TimerDone
 16085 ;; This function is called by:
 16086 ;;		_check_help
 16087 ;; This function uses a reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text48
 16091  0191E8                     __ptext48:
 16092                           	opt callstack 0
 16093  0191E8                     _help_button:
 16094                           	opt callstack 25
 16095                           
 16096                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 16097                           
 16098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16099                           ;incstack = 0
 16100  0191E8  B0CB               	btfsc	203,0,c	;volatile
 16101  0191EA  D00D               	goto	l11037
 16102                           
 16103                           ;mconfig.c: 29:   V.help = 1;
 16104  0191EC  EE23  F168         	lfsr	2,_V+334	;volatile
 16105  0191F0  8CDF               	bsf	indf2,6,c
 16106                           
 16107                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 16108  0191F2  0E08               	movlw	8
 16109  0191F4  6EE6               	movwf	postinc1,c
 16110  0191F6  ECE1  F0CB         	call	_TimerDone	;wreg free
 16111  0191FA  5037               	movf	btemp^0,w,c
 16112  0191FC  B4D8               	btfsc	status,2,c
 16113  0191FE  D003               	goto	l11037
 16114                           
 16115                           ;mconfig.c: 31:    return 1;
 16116  019200  0E01               	movlw	1
 16117  019202  6E37               	movwf	btemp^0,c
 16118  019204  0012               	return	
 16119  019206                     l11037:
 16120                           
 16121                           ;mconfig.c: 34:  if (!V.help)
 16122  019206  EE23  F168         	lfsr	2,_V+334	;volatile
 16123  01920A  BCDF               	btfsc	indf2,6,c
 16124  01920C  D008               	goto	l11041
 16125                           
 16126                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 16127  01920E  0E2C               	movlw	44
 16128  019210  6EE6               	movwf	postinc1,c
 16129  019212  0E01               	movlw	1
 16130  019214  6EE6               	movwf	postinc1,c
 16131  019216  0E08               	movlw	8
 16132  019218  6EE6               	movwf	postinc1,c
 16133  01921A  EC12  F0C9         	call	_StartTimer	;wreg free
 16134  01921E                     l11041:
 16135                           
 16136                           ;mconfig.c: 37:  return 0;
 16137  01921E  0E00               	movlw	0
 16138  019220  6E37               	movwf	btemp^0,c
 16139                           
 16140                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 16141  019222  0012               	return		;funcret
 16142  019224                     __end_of_help_button:
 16143                           	opt callstack 0
 16144                           
 16145 ;; *************** function _StartTimer *****************
 16146 ;; Defined at:
 16147 ;;		line 12 in file "timers.c"
 16148 ;; Parameters:    Size  Location     Type
 16149 ;;  timer           1  [STACK] const unsigned char 
 16150 ;;  count           2  [STACK] const unsigned short 
 16151 ;; Auto vars:     Size  Location     Type
 16152 ;;		None
 16153 ;; Return value:  Size  Location     Type
 16154 ;;                  1  [STACK] void 
 16155 ;; Registers used:
 16156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 16157 ;; Tracked objects:
 16158 ;;		On entry : 0/0
 16159 ;;		On exit  : 0/0
 16160 ;;		Unchanged: 0/0
 16161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16166 ;;Total ram usage:        0 bytes
 16167 ;; Hardware stack levels used:    1
 16168 ;; Hardware stack levels required when called:    3
 16169 ;; This function calls:
 16170 ;;		Nothing
 16171 ;; This function is called by:
 16172 ;;		_main
 16173 ;;		_m_protocol
 16174 ;;		_r_protocol
 16175 ;;		_t_protocol
 16176 ;;		_sequence_messages
 16177 ;;		_gem_messages
 16178 ;;		_secs_II_message
 16179 ;;		_ee_logger
 16180 ;;		_secs_gem_state
 16181 ;;		_WaitMs
 16182 ;;		_help_button
 16183 ;;		_check_help
 16184 ;; This function uses a reentrant model
 16185 ;;
 16186                           
 16187                           	psect	text49
 16188  019224                     __ptext49:
 16189                           	opt callstack 0
 16190  019224                     _StartTimer:
 16191                           	opt callstack 24
 16192                           
 16193                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 16194                           ;stkvar	_count @ sp[(0)+-3]
 16195                           
 16196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16197                           ;incstack = 0
 16198  019224  0EFD               	movlw	-3
 16199  019226  006F FF8C  F041    	movff	plusw1,btemp+10
 16200  01922C  0EFE               	movlw	-2
 16201  01922E  006F FF8C  F042    	movff	plusw1,btemp+11
 16202  019234  90D8               	bcf	status,0,c
 16203  019236  3441               	rlcf	(btemp+10)^0,w,c
 16204  019238  6E3F               	movwf	(btemp+8)^0,c
 16205  01923A  3442               	rlcf	(btemp+11)^0,w,c
 16206  01923C  6E40               	movwf	(btemp+9)^0,c
 16207                           
 16208                           ;stkvar	_timer @ sp[(0)+-1]
 16209  01923E  0EFF               	movlw	-1
 16210  019240  50E3               	movf	plusw1,w,c
 16211  019242  0D02               	mullw	2
 16212  019244  50F3               	movf	243,w,c
 16213  019246  0F60               	addlw	low _tickCount
 16214  019248  6ED9               	movwf	fsr2l,c
 16215  01924A  6ADA               	clrf	fsr2h,c
 16216  01924C  0060  F0FF  FFDE   	movff	btemp+8,postinc2
 16217  019252  0060  F103  FFDD   	movff	btemp+9,postdec2
 16218                           
 16219                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 16220  019258  52E5               	movf	postdec1,f,c
 16221  01925A  52E5               	movf	postdec1,f,c
 16222  01925C  52E5               	movf	postdec1,f,c
 16223  01925E  0012               	return		;funcret
 16224  019260                     __end_of_StartTimer:
 16225                           	opt callstack 0
 16226                           
 16227 ;; *************** function _display_info *****************
 16228 ;; Defined at:
 16229 ;;		line 215 in file "mconfig.c"
 16230 ;; Parameters:    Size  Location     Type
 16231 ;;		None
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  1  [STACK] enum E16735
 16236 ;; Registers used:
 16237 ;;		btemp
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/3C
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16247 ;;Total ram usage:        0 bytes
 16248 ;; Hardware stack levels used:    1
 16249 ;; Hardware stack levels required when called:    3
 16250 ;; This function calls:
 16251 ;;		Nothing
 16252 ;; This function is called by:
 16253 ;;		_secs_II_message
 16254 ;;		_check_help
 16255 ;; This function uses a reentrant model
 16256 ;;
 16257                           
 16258                           	psect	text50
 16259  019AC2                     __ptext50:
 16260                           	opt callstack 0
 16261  019AC2                     _display_info:
 16262                           	opt callstack 25
 16263                           
 16264                           ;mconfig.c: 217:  return V.response.info;
 16265                           
 16266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16267                           ;incstack = 0
 16268  019AC2  0063  F644  F037   	movff	_V+375,btemp	;volatile
 16269                           
 16270                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 16271  019AC8  0012               	return		;funcret
 16272  019ACA                     __end_of_display_info:
 16273                           	opt callstack 0
 16274                           
 16275 ;; *************** function _display_help *****************
 16276 ;; Defined at:
 16277 ;;		line 220 in file "mconfig.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;		None
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;		None
 16282 ;; Return value:  Size  Location     Type
 16283 ;;                  1  [STACK] enum E16510
 16284 ;; Registers used:
 16285 ;;		btemp
 16286 ;; Tracked objects:
 16287 ;;		On entry : 0/0
 16288 ;;		On exit  : 0/0
 16289 ;;		Unchanged: 0/0
 16290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;Total ram usage:        0 bytes
 16296 ;; Hardware stack levels used:    1
 16297 ;; Hardware stack levels required when called:    3
 16298 ;; This function calls:
 16299 ;;		Nothing
 16300 ;; This function is called by:
 16301 ;;		_check_help
 16302 ;; This function uses a reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text51
 16306  019ACA                     __ptext51:
 16307                           	opt callstack 0
 16308  019ACA                     _display_help:
 16309                           	opt callstack 26
 16310                           
 16311                           ;mconfig.c: 222:  return V.response.help_temp;
 16312                           
 16313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16314                           ;incstack = 0
 16315  019ACA  0063  F648  F037   	movff	_V+376,btemp	;volatile
 16316                           
 16317                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 16318  019AD0  0012               	return		;funcret
 16319  019AD2                     __end_of_display_help:
 16320                           	opt callstack 0
 16321                           
 16322 ;; *************** function _SYSTEM_Initialize *****************
 16323 ;; Defined at:
 16324 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;		None
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;		None
 16329 ;; Return value:  Size  Location     Type
 16330 ;;                  1  [STACK] void 
 16331 ;; Registers used:
 16332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 3F/3C
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16342 ;;Total ram usage:        0 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; Hardware stack levels required when called:    5
 16345 ;; This function calls:
 16346 ;;		_ADCC_Initialize
 16347 ;;		_CLKREF_Initialize
 16348 ;;		_DMA1_Initialize
 16349 ;;		_DMA2_Initialize
 16350 ;;		_EXT_INT_Initialize
 16351 ;;		_INTERRUPT_Initialize
 16352 ;;		_OSCILLATOR_Initialize
 16353 ;;		_PIN_MANAGER_Initialize
 16354 ;;		_PMD_Initialize
 16355 ;;		_PWM8_Initialize
 16356 ;;		_SPI1_Initialize
 16357 ;;		_TMR2_Initialize
 16358 ;;		_TMR5_Initialize
 16359 ;;		_TMR6_Initialize
 16360 ;;		_UART1_Initialize
 16361 ;;		_UART2_Initialize
 16362 ;; This function is called by:
 16363 ;;		_main
 16364 ;; This function uses a reentrant model
 16365 ;;
 16366                           
 16367                           	psect	text52
 16368  019070                     __ptext52:
 16369                           	opt callstack 0
 16370  019070                     _SYSTEM_Initialize:
 16371                           	opt callstack 25
 16372                           
 16373                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 16374                           
 16375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16376                           ;incstack = 0
 16377  019070  ECA7  F0C5         	call	_INTERRUPT_Initialize	;wreg free
 16378                           
 16379                           ; BSR set to: 57
 16380                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 16381  019074  EC03  F0CD         	call	_PMD_Initialize	;wreg free
 16382                           
 16383                           ; BSR set to: 57
 16384                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16385  019078  EC8D  F0C3         	call	_PIN_MANAGER_Initialize	;wreg free
 16386                           
 16387                           ; BSR set to: 58
 16388                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16389  01907C  ECF8  F0CC         	call	_OSCILLATOR_Initialize	;wreg free
 16390                           
 16391                           ; BSR set to: 57
 16392                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 16393  019080  EC67  F0C7         	call	_ADCC_Initialize	;wreg free
 16394                           
 16395                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 16396  019084  ECA2  F0CC         	call	_TMR2_Initialize	;wreg free
 16397                           
 16398                           ; BSR set to: 57
 16399                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 16400  019088  ECED  F0CC         	call	_PWM8_Initialize	;wreg free
 16401                           
 16402                           ; BSR set to: 63
 16403                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 16404  01908C  EC80  F0C9         	call	_EXT_INT_Initialize	;wreg free
 16405                           
 16406                           ; BSR set to: 57
 16407                           ;mcc_generated_files/mcc.c: 60:     TMR6_Initialize();
 16408  019090  EC1A  F0CB         	call	_TMR6_Initialize	;wreg free
 16409                           
 16410                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 16411  019094  EC8C  F0C7         	call	_TMR5_Initialize	;wreg free
 16412                           
 16413                           ;mcc_generated_files/mcc.c: 62:     UART1_Initialize();
 16414  019098  EC75  F0C5         	call	_UART1_Initialize	;wreg free
 16415                           
 16416                           ; BSR set to: 57
 16417                           ;mcc_generated_files/mcc.c: 63:     UART2_Initialize();
 16418  01909C  EC39  F0C6         	call	_UART2_Initialize	;wreg free
 16419                           
 16420                           ; BSR set to: 57
 16421                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
 16422  0190A0  ECE2  F0CC         	call	_SPI1_Initialize	;wreg free
 16423                           
 16424                           ; BSR set to: 61
 16425                           ;mcc_generated_files/mcc.c: 65:     DMA2_Initialize();
 16426  0190A4  EC68  F0C6         	call	_DMA2_Initialize	;wreg free
 16427                           
 16428                           ; BSR set to: 59
 16429                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 16430  0190A8  EC0C  F0C5         	call	_DMA1_Initialize	;wreg free
 16431                           
 16432                           ; BSR set to: 59
 16433                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 16434  0190AC  EC3B  F0CD         	call	_CLKREF_Initialize	;wreg free
 16435                           
 16436                           ; BSR set to: 60
 16437                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16438  0190B0  0012               	return		;funcret
 16439  0190B2                     __end_of_SYSTEM_Initialize:
 16440                           	opt callstack 0
 16441                           
 16442 ;; *************** function _UART2_Initialize *****************
 16443 ;; Defined at:
 16444 ;;		line 78 in file "mcc_generated_files/uart2.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;		None
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1  [STACK] void 
 16451 ;; Registers used:
 16452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 16453 ;; Tracked objects:
 16454 ;;		On entry : 3F/39
 16455 ;;		On exit  : 3F/39
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16462 ;;Total ram usage:        0 bytes
 16463 ;; Hardware stack levels used:    1
 16464 ;; Hardware stack levels required when called:    4
 16465 ;; This function calls:
 16466 ;;		_UART2_SetRxInterruptHandler
 16467 ;;		_UART2_SetTxInterruptHandler
 16468 ;; This function is called by:
 16469 ;;		_SYSTEM_Initialize
 16470 ;; This function uses a reentrant model
 16471 ;;
 16472                           
 16473                           	psect	text53
 16474  018C72                     __ptext53:
 16475                           	opt callstack 0
 16476  018C72                     _UART2_Initialize:
 16477                           	opt callstack 25
 16478                           
 16479                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 16480                           
 16481                           ; BSR set to: 60
 16482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16483                           ;incstack = 0
 16484  018C72  0139               	movlb	57	; () banked
 16485  018C74  9596               	bcf	150,2,b	;volatile
 16486                           
 16487                           ; BSR set to: 57
 16488                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 16489  018C76  0EEC               	movlw	low _UART2_Receive_ISR
 16490  018C78  6EE6               	movwf	postinc1,c
 16491  018C7A  0E98               	movlw	high _UART2_Receive_ISR
 16492  018C7C  6EE6               	movwf	postinc1,c
 16493  018C7E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 16494  018C80  6EE6               	movwf	postinc1,c
 16495  018C82  ECDE  F0CA         	call	_UART2_SetRxInterruptHandler	;wreg free
 16496                           
 16497                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 16498  018C86  0139               	movlb	57	; () banked
 16499  018C88  9796               	bcf	150,3,b	;volatile
 16500                           
 16501                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 16502  018C8A  0E4C               	movlw	low _UART2_Transmit_ISR
 16503  018C8C  6EE6               	movwf	postinc1,c
 16504  018C8E  0E94               	movlw	high _UART2_Transmit_ISR
 16505  018C90  6EE6               	movwf	postinc1,c
 16506  018C92  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 16507  018C94  6EE6               	movwf	postinc1,c
 16508  018C96  ECCA  F0CA         	call	_UART2_SetTxInterruptHandler	;wreg free
 16509                           
 16510                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 16511  018C9A  013D               	movlb	61	; () banked
 16512  018C9C  6BD4               	clrf	212,b	;volatile
 16513                           
 16514                           ; BSR set to: 61
 16515                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 16516  018C9E  6BD6               	clrf	214,b	;volatile
 16517                           
 16518                           ; BSR set to: 61
 16519                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 16520  018CA0  6BD8               	clrf	216,b	;volatile
 16521                           
 16522                           ; BSR set to: 61
 16523                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 16524  018CA2  0EB0               	movlw	176
 16525  018CA4  6FDA               	movwf	218,b	;volatile
 16526                           
 16527                           ; BSR set to: 61
 16528                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 16529  018CA6  0E80               	movlw	128
 16530  018CA8  6FDB               	movwf	219,b	;volatile
 16531                           
 16532                           ; BSR set to: 61
 16533                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 16534  018CAA  6BDC               	clrf	220,b	;volatile
 16535                           
 16536                           ; BSR set to: 61
 16537                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 16538  018CAC  0E82               	movlw	130
 16539  018CAE  6FDD               	movwf	221,b	;volatile
 16540                           
 16541                           ; BSR set to: 61
 16542                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 16543  018CB0  0E06               	movlw	6
 16544  018CB2  6FDE               	movwf	222,b	;volatile
 16545                           
 16546                           ; BSR set to: 61
 16547                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 16548  018CB4  6BDF               	clrf	223,b	;volatile
 16549                           
 16550                           ; BSR set to: 61
 16551                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 16552  018CB6  6BE0               	clrf	224,b	;volatile
 16553                           
 16554                           ; BSR set to: 61
 16555                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 16556  018CB8  6BE1               	clrf	225,b	;volatile
 16557                           
 16558                           ; BSR set to: 61
 16559                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 16560  018CBA  6BE2               	clrf	226,b	;volatile
 16561                           
 16562                           ; BSR set to: 61
 16563                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 16564  018CBC  6A29               	clrf	_uart2TxHead^0,c	;volatile
 16565                           
 16566                           ; BSR set to: 61
 16567                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 16568  018CBE  6A28               	clrf	_uart2TxTail^0,c	;volatile
 16569                           
 16570                           ; BSR set to: 61
 16571                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 16572  018CC0  0E40               	movlw	64
 16573  018CC2  6E27               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 16574                           
 16575                           ; BSR set to: 61
 16576                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 16577  018CC4  6A26               	clrf	_uart2RxHead^0,c	;volatile
 16578                           
 16579                           ; BSR set to: 61
 16580                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 16581  018CC6  6A25               	clrf	_uart2RxTail^0,c	;volatile
 16582                           
 16583                           ; BSR set to: 61
 16584                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 16585  018CC8  6A24               	clrf	_uart2RxCount^0,c	;volatile
 16586                           
 16587                           ; BSR set to: 61
 16588                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 16589  018CCA  0139               	movlb	57	; () banked
 16590  018CCC  8596               	bsf	150,2,b	;volatile
 16591                           
 16592                           ; BSR set to: 57
 16593                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 16594  018CCE  0012               	return		;funcret
 16595  018CD0                     __end_of_UART2_Initialize:
 16596                           	opt callstack 0
 16597                           
 16598 ;; *************** function _UART2_SetTxInterruptHandler *****************
 16599 ;; Defined at:
 16600 ;;		line 252 in file "mcc_generated_files/uart2.c"
 16601 ;; Parameters:    Size  Location     Type
 16602 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16603 ;;		 -> UART2_Transmit_ISR(1), 
 16604 ;; Auto vars:     Size  Location     Type
 16605 ;;		None
 16606 ;; Return value:  Size  Location     Type
 16607 ;;                  1  [STACK] void 
 16608 ;; Registers used:
 16609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16610 ;; Tracked objects:
 16611 ;;		On entry : 3F/39
 16612 ;;		On exit  : 0/0
 16613 ;;		Unchanged: 0/0
 16614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16619 ;;Total ram usage:        0 bytes
 16620 ;; Hardware stack levels used:    1
 16621 ;; Hardware stack levels required when called:    3
 16622 ;; This function calls:
 16623 ;;		Nothing
 16624 ;; This function is called by:
 16625 ;;		_UART2_Initialize
 16626 ;; This function uses a reentrant model
 16627 ;;
 16628                           
 16629                           	psect	text54
 16630  019594                     __ptext54:
 16631                           	opt callstack 0
 16632  019594                     _UART2_SetTxInterruptHandler:
 16633                           	opt callstack 25
 16634                           
 16635                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 16636                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16637                           
 16638                           ; BSR set to: 57
 16639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16640                           ;incstack = 0
 16641  019594  50E1               	movf	fsr1l,w,c
 16642  019596  0FFD               	addlw	-3
 16643  019598  6ED9               	movwf	fsr2l,c
 16644  01959A  50E2               	movf	fsr1h,w,c
 16645  01959C  6EDA               	movwf	fsr2h,c
 16646  01959E  0EFF               	movlw	255
 16647  0195A0  22DA               	addwfc	fsr2h,f,c
 16648  0195A2  006F FF78  F001    	movff	postinc2,_UART2_TxInterruptHandler
 16649  0195A8  006F FF78  F002    	movff	postinc2,_UART2_TxInterruptHandler+1
 16650  0195AE  006F FF74  F003    	movff	postdec2,_UART2_TxInterruptHandler+2
 16651                           
 16652                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 16653  0195B4  52E5               	movf	postdec1,f,c
 16654  0195B6  52E5               	movf	postdec1,f,c
 16655  0195B8  52E5               	movf	postdec1,f,c
 16656  0195BA  0012               	return		;funcret
 16657  0195BC                     __end_of_UART2_SetTxInterruptHandler:
 16658                           	opt callstack 0
 16659                           
 16660 ;; *************** function _UART2_SetRxInterruptHandler *****************
 16661 ;; Defined at:
 16662 ;;		line 248 in file "mcc_generated_files/uart2.c"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16665 ;;		 -> UART2_Receive_ISR(1), 
 16666 ;; Auto vars:     Size  Location     Type
 16667 ;;		None
 16668 ;; Return value:  Size  Location     Type
 16669 ;;                  1  [STACK] void 
 16670 ;; Registers used:
 16671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16672 ;; Tracked objects:
 16673 ;;		On entry : 3F/39
 16674 ;;		On exit  : 0/0
 16675 ;;		Unchanged: 0/0
 16676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16681 ;;Total ram usage:        0 bytes
 16682 ;; Hardware stack levels used:    1
 16683 ;; Hardware stack levels required when called:    3
 16684 ;; This function calls:
 16685 ;;		Nothing
 16686 ;; This function is called by:
 16687 ;;		_UART2_Initialize
 16688 ;; This function uses a reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text55
 16692  0195BC                     __ptext55:
 16693                           	opt callstack 0
 16694  0195BC                     _UART2_SetRxInterruptHandler:
 16695                           	opt callstack 25
 16696                           
 16697                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 16698                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16699                           
 16700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16701                           ;incstack = 0
 16702  0195BC  50E1               	movf	fsr1l,w,c
 16703  0195BE  0FFD               	addlw	-3
 16704  0195C0  6ED9               	movwf	fsr2l,c
 16705  0195C2  50E2               	movf	fsr1h,w,c
 16706  0195C4  6EDA               	movwf	fsr2h,c
 16707  0195C6  0EFF               	movlw	255
 16708  0195C8  22DA               	addwfc	fsr2h,f,c
 16709  0195CA  006F FF78  F004    	movff	postinc2,_UART2_RxInterruptHandler
 16710  0195D0  006F FF78  F005    	movff	postinc2,_UART2_RxInterruptHandler+1
 16711  0195D6  006F FF74  F006    	movff	postdec2,_UART2_RxInterruptHandler+2
 16712                           
 16713                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 16714  0195DC  52E5               	movf	postdec1,f,c
 16715  0195DE  52E5               	movf	postdec1,f,c
 16716  0195E0  52E5               	movf	postdec1,f,c
 16717  0195E2  0012               	return		;funcret
 16718  0195E4                     __end_of_UART2_SetRxInterruptHandler:
 16719                           	opt callstack 0
 16720                           
 16721 ;; *************** function _UART1_Initialize *****************
 16722 ;; Defined at:
 16723 ;;		line 79 in file "mcc_generated_files/uart1.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;		None
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  1  [STACK] void 
 16730 ;; Registers used:
 16731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/39
 16734 ;;		On exit  : 3F/39
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16741 ;;Total ram usage:        0 bytes
 16742 ;; Hardware stack levels used:    1
 16743 ;; Hardware stack levels required when called:    4
 16744 ;; This function calls:
 16745 ;;		_UART1_SetRxInterruptHandler
 16746 ;;		_UART1_SetTxInterruptHandler
 16747 ;; This function is called by:
 16748 ;;		_SYSTEM_Initialize
 16749 ;; This function uses a reentrant model
 16750 ;;
 16751                           
 16752                           	psect	text56
 16753  018AEA                     __ptext56:
 16754                           	opt callstack 0
 16755  018AEA                     _UART1_Initialize:
 16756                           	opt callstack 25
 16757                           
 16758                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 16759                           
 16760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16761                           ;incstack = 0
 16762  018AEA  0139               	movlb	57	; () banked
 16763  018AEC  9793               	bcf	147,3,b	;volatile
 16764                           
 16765                           ; BSR set to: 57
 16766                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 16767  018AEE  0ECE               	movlw	low _UART1_Receive_ISR
 16768  018AF0  6EE6               	movwf	postinc1,c
 16769  018AF2  0E98               	movlw	high _UART1_Receive_ISR
 16770  018AF4  6EE6               	movwf	postinc1,c
 16771  018AF6  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 16772  018AF8  6EE6               	movwf	postinc1,c
 16773  018AFA  EC06  F0CB         	call	_UART1_SetRxInterruptHandler	;wreg free
 16774                           
 16775                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 16776  018AFE  0139               	movlb	57	; () banked
 16777  018B00  9993               	bcf	147,4,b	;volatile
 16778                           
 16779                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 16780  018B02  0E20               	movlw	low _UART1_Transmit_ISR
 16781  018B04  6EE6               	movwf	postinc1,c
 16782  018B06  0E94               	movlw	high _UART1_Transmit_ISR
 16783  018B08  6EE6               	movwf	postinc1,c
 16784  018B0A  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 16785  018B0C  6EE6               	movwf	postinc1,c
 16786  018B0E  ECF2  F0CA         	call	_UART1_SetTxInterruptHandler	;wreg free
 16787                           
 16788                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 16789  018B12  013D               	movlb	61	; () banked
 16790  018B14  6BEC               	clrf	236,b	;volatile
 16791                           
 16792                           ; BSR set to: 61
 16793                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 16794  018B16  6BED               	clrf	237,b	;volatile
 16795                           
 16796                           ; BSR set to: 61
 16797                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 16798  018B18  6BEE               	clrf	238,b	;volatile
 16799                           
 16800                           ; BSR set to: 61
 16801                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 16802  018B1A  6BEF               	clrf	239,b	;volatile
 16803                           
 16804                           ; BSR set to: 61
 16805                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 16806  018B1C  6BF0               	clrf	240,b	;volatile
 16807                           
 16808                           ; BSR set to: 61
 16809                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 16810  018B1E  6BF1               	clrf	241,b	;volatile
 16811                           
 16812                           ; BSR set to: 61
 16813                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 16814  018B20  0EB0               	movlw	176
 16815  018B22  6FF2               	movwf	242,b	;volatile
 16816                           
 16817                           ; BSR set to: 61
 16818                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 16819  018B24  0E80               	movlw	128
 16820  018B26  6FF3               	movwf	243,b	;volatile
 16821                           
 16822                           ; BSR set to: 61
 16823                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 16824  018B28  6BF4               	clrf	244,b	;volatile
 16825                           
 16826                           ; BSR set to: 61
 16827                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 16828  018B2A  0E82               	movlw	130
 16829  018B2C  6FF5               	movwf	245,b	;volatile
 16830                           
 16831                           ; BSR set to: 61
 16832                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 16833  018B2E  0E06               	movlw	6
 16834  018B30  6FF6               	movwf	246,b	;volatile
 16835                           
 16836                           ; BSR set to: 61
 16837                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 16838  018B32  6BF7               	clrf	247,b	;volatile
 16839                           
 16840                           ; BSR set to: 61
 16841                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 16842  018B34  6BF8               	clrf	248,b	;volatile
 16843                           
 16844                           ; BSR set to: 61
 16845                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 16846  018B36  6BF9               	clrf	249,b	;volatile
 16847                           
 16848                           ; BSR set to: 61
 16849                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 16850  018B38  6BFA               	clrf	250,b	;volatile
 16851                           
 16852                           ; BSR set to: 61
 16853                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 16854  018B3A  6A2F               	clrf	_uart1TxHead^0,c	;volatile
 16855                           
 16856                           ; BSR set to: 61
 16857                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 16858  018B3C  6A2E               	clrf	_uart1TxTail^0,c	;volatile
 16859                           
 16860                           ; BSR set to: 61
 16861                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 16862  018B3E  0E40               	movlw	64
 16863  018B40  6E2D               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 16864                           
 16865                           ; BSR set to: 61
 16866                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 16867  018B42  6A2C               	clrf	_uart1RxHead^0,c	;volatile
 16868                           
 16869                           ; BSR set to: 61
 16870                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 16871  018B44  6A2B               	clrf	_uart1RxTail^0,c	;volatile
 16872                           
 16873                           ; BSR set to: 61
 16874                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 16875  018B46  6A2A               	clrf	_uart1RxCount^0,c	;volatile
 16876                           
 16877                           ; BSR set to: 61
 16878                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 16879  018B48  0139               	movlb	57	; () banked
 16880  018B4A  8793               	bsf	147,3,b	;volatile
 16881                           
 16882                           ; BSR set to: 57
 16883                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 16884  018B4C  0012               	return		;funcret
 16885  018B4E                     __end_of_UART1_Initialize:
 16886                           	opt callstack 0
 16887                           
 16888 ;; *************** function _UART1_SetTxInterruptHandler *****************
 16889 ;; Defined at:
 16890 ;;		line 247 in file "mcc_generated_files/uart1.c"
 16891 ;; Parameters:    Size  Location     Type
 16892 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16893 ;;		 -> UART1_Transmit_ISR(1), 
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;		None
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  1  [STACK] void 
 16898 ;; Registers used:
 16899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16900 ;; Tracked objects:
 16901 ;;		On entry : 3F/39
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16909 ;;Total ram usage:        0 bytes
 16910 ;; Hardware stack levels used:    1
 16911 ;; Hardware stack levels required when called:    3
 16912 ;; This function calls:
 16913 ;;		Nothing
 16914 ;; This function is called by:
 16915 ;;		_UART1_Initialize
 16916 ;; This function uses a reentrant model
 16917 ;;
 16918                           
 16919                           	psect	text57
 16920  0195E4                     __ptext57:
 16921                           	opt callstack 0
 16922  0195E4                     _UART1_SetTxInterruptHandler:
 16923                           	opt callstack 25
 16924                           
 16925                           ;mcc_generated_files/uart1.c: 247: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 248: {;mcc_generated_files/uart1.c: 249:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 16926                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16927                           
 16928                           ; BSR set to: 57
 16929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16930                           ;incstack = 0
 16931  0195E4  50E1               	movf	fsr1l,w,c
 16932  0195E6  0FFD               	addlw	-3
 16933  0195E8  6ED9               	movwf	fsr2l,c
 16934  0195EA  50E2               	movf	fsr1h,w,c
 16935  0195EC  6EDA               	movwf	fsr2h,c
 16936  0195EE  0EFF               	movlw	255
 16937  0195F0  22DA               	addwfc	fsr2h,f,c
 16938  0195F2  006F FF78  F0A7    	movff	postinc2,_UART1_TxInterruptHandler
 16939  0195F8  006F FF78  F0A8    	movff	postinc2,_UART1_TxInterruptHandler+1
 16940  0195FE  006F FF74  F0A9    	movff	postdec2,_UART1_TxInterruptHandler+2
 16941                           
 16942                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 16943  019604  52E5               	movf	postdec1,f,c
 16944  019606  52E5               	movf	postdec1,f,c
 16945  019608  52E5               	movf	postdec1,f,c
 16946  01960A  0012               	return		;funcret
 16947  01960C                     __end_of_UART1_SetTxInterruptHandler:
 16948                           	opt callstack 0
 16949                           
 16950 ;; *************** function _UART1_SetRxInterruptHandler *****************
 16951 ;; Defined at:
 16952 ;;		line 242 in file "mcc_generated_files/uart1.c"
 16953 ;; Parameters:    Size  Location     Type
 16954 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16955 ;;		 -> UART1_Receive_ISR(1), 
 16956 ;; Auto vars:     Size  Location     Type
 16957 ;;		None
 16958 ;; Return value:  Size  Location     Type
 16959 ;;                  1  [STACK] void 
 16960 ;; Registers used:
 16961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16962 ;; Tracked objects:
 16963 ;;		On entry : 3F/39
 16964 ;;		On exit  : 0/0
 16965 ;;		Unchanged: 0/0
 16966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16971 ;;Total ram usage:        0 bytes
 16972 ;; Hardware stack levels used:    1
 16973 ;; Hardware stack levels required when called:    3
 16974 ;; This function calls:
 16975 ;;		Nothing
 16976 ;; This function is called by:
 16977 ;;		_UART1_Initialize
 16978 ;; This function uses a reentrant model
 16979 ;;
 16980                           
 16981                           	psect	text58
 16982  01960C                     __ptext58:
 16983                           	opt callstack 0
 16984  01960C                     _UART1_SetRxInterruptHandler:
 16985                           	opt callstack 25
 16986                           
 16987                           ;mcc_generated_files/uart1.c: 242: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 243: {;mcc_generated_files/uart1.c: 244:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 16988                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16989                           
 16990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16991                           ;incstack = 0
 16992  01960C  50E1               	movf	fsr1l,w,c
 16993  01960E  0FFD               	addlw	-3
 16994  019610  6ED9               	movwf	fsr2l,c
 16995  019612  50E2               	movf	fsr1h,w,c
 16996  019614  6EDA               	movwf	fsr2h,c
 16997  019616  0EFF               	movlw	255
 16998  019618  22DA               	addwfc	fsr2h,f,c
 16999  01961A  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler
 17000  019620  006F FF78  F0AB    	movff	postinc2,_UART1_RxInterruptHandler+1
 17001  019626  006F FF74  F0AC    	movff	postdec2,_UART1_RxInterruptHandler+2
 17002                           
 17003                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 17004  01962C  52E5               	movf	postdec1,f,c
 17005  01962E  52E5               	movf	postdec1,f,c
 17006  019630  52E5               	movf	postdec1,f,c
 17007  019632  0012               	return		;funcret
 17008  019634                     __end_of_UART1_SetRxInterruptHandler:
 17009                           	opt callstack 0
 17010                           
 17011 ;; *************** function _TMR6_Initialize *****************
 17012 ;; Defined at:
 17013 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 17014 ;; Parameters:    Size  Location     Type
 17015 ;;		None
 17016 ;; Auto vars:     Size  Location     Type
 17017 ;;		None
 17018 ;; Return value:  Size  Location     Type
 17019 ;;                  1  [STACK] void 
 17020 ;; Registers used:
 17021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 17022 ;; Tracked objects:
 17023 ;;		On entry : 3F/39
 17024 ;;		On exit  : 0/0
 17025 ;;		Unchanged: 0/0
 17026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17031 ;;Total ram usage:        0 bytes
 17032 ;; Hardware stack levels used:    1
 17033 ;; Hardware stack levels required when called:    4
 17034 ;; This function calls:
 17035 ;;		_TMR6_SetInterruptHandler
 17036 ;; This function is called by:
 17037 ;;		_SYSTEM_Initialize
 17038 ;; This function uses a reentrant model
 17039 ;;
 17040                           
 17041                           	psect	text59
 17042  019634                     __ptext59:
 17043                           	opt callstack 0
 17044  019634                     _TMR6_Initialize:
 17045                           	opt callstack 25
 17046                           
 17047                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 17048                           
 17049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17050                           ;incstack = 0
 17051  019634  0E01               	movlw	1
 17052  019636  6E96               	movwf	150,c	;volatile
 17053                           
 17054                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 17055  019638  6A95               	clrf	149,c	;volatile
 17056                           
 17057                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 17058  01963A  6A97               	clrf	151,c	;volatile
 17059                           
 17060                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 17061  01963C  0E03               	movlw	3
 17062  01963E  6E93               	movwf	147,c	;volatile
 17063                           
 17064                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 17065  019640  6A92               	clrf	146,c	;volatile
 17066                           
 17067                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 17068  019642  0139               	movlb	57	; () banked
 17069  019644  91A9               	bcf	169,0,b	;volatile
 17070                           
 17071                           ; BSR set to: 57
 17072                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 17073  019646  8199               	bsf	153,0,b	;volatile
 17074                           
 17075                           ; BSR set to: 57
 17076                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 17077  019648  0EA4               	movlw	low _TMR6_DefaultInterruptHandler
 17078  01964A  6EE6               	movwf	postinc1,c
 17079  01964C  0E8F               	movlw	high _TMR6_DefaultInterruptHandler
 17080  01964E  6EE6               	movwf	postinc1,c
 17081  019650  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 17082  019652  6EE6               	movwf	postinc1,c
 17083  019654  EC2E  F0CB         	call	_TMR6_SetInterruptHandler	;wreg free
 17084                           
 17085                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 17086  019658  6894               	setf	148,c	;volatile
 17087                           
 17088                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17089  01965A  0012               	return		;funcret
 17090  01965C                     __end_of_TMR6_Initialize:
 17091                           	opt callstack 0
 17092                           
 17093 ;; *************** function _TMR6_SetInterruptHandler *****************
 17094 ;; Defined at:
 17095 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 17096 ;; Parameters:    Size  Location     Type
 17097 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 17098 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 17099 ;; Auto vars:     Size  Location     Type
 17100 ;;		None
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1  [STACK] void 
 17103 ;; Registers used:
 17104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 17105 ;; Tracked objects:
 17106 ;;		On entry : 3F/39
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17114 ;;Total ram usage:        0 bytes
 17115 ;; Hardware stack levels used:    1
 17116 ;; Hardware stack levels required when called:    3
 17117 ;; This function calls:
 17118 ;;		Nothing
 17119 ;; This function is called by:
 17120 ;;		_TMR6_Initialize
 17121 ;; This function uses a reentrant model
 17122 ;;
 17123                           
 17124                           	psect	text60
 17125  01965C                     __ptext60:
 17126                           	opt callstack 0
 17127  01965C                     _TMR6_SetInterruptHandler:
 17128                           	opt callstack 25
 17129                           
 17130                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 17131                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 17132                           
 17133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17134                           ;incstack = 0
 17135  01965C  50E1               	movf	fsr1l,w,c
 17136  01965E  0FFD               	addlw	-3
 17137  019660  6ED9               	movwf	fsr2l,c
 17138  019662  50E2               	movf	fsr1h,w,c
 17139  019664  6EDA               	movwf	fsr2h,c
 17140  019666  0EFF               	movlw	255
 17141  019668  22DA               	addwfc	fsr2h,f,c
 17142  01966A  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler
 17143  019670  006F FF78  F0A2    	movff	postinc2,_TMR6_InterruptHandler+1
 17144  019676  006F FF74  F0A3    	movff	postdec2,_TMR6_InterruptHandler+2
 17145                           
 17146                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 17147  01967C  52E5               	movf	postdec1,f,c
 17148  01967E  52E5               	movf	postdec1,f,c
 17149  019680  52E5               	movf	postdec1,f,c
 17150  019682  0012               	return		;funcret
 17151  019684                     __end_of_TMR6_SetInterruptHandler:
 17152                           	opt callstack 0
 17153                           
 17154 ;; *************** function _TMR5_Initialize *****************
 17155 ;; Defined at:
 17156 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;		None
 17159 ;; Auto vars:     Size  Location     Type
 17160 ;;		None
 17161 ;; Return value:  Size  Location     Type
 17162 ;;                  1  [STACK] void 
 17163 ;; Registers used:
 17164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 17165 ;; Tracked objects:
 17166 ;;		On entry : 0/39
 17167 ;;		On exit  : 0/0
 17168 ;;		Unchanged: 0/0
 17169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17174 ;;Total ram usage:        0 bytes
 17175 ;; Hardware stack levels used:    1
 17176 ;; Hardware stack levels required when called:    4
 17177 ;; This function calls:
 17178 ;;		_TMR5_SetInterruptHandler
 17179 ;; This function is called by:
 17180 ;;		_SYSTEM_Initialize
 17181 ;; This function uses a reentrant model
 17182 ;;
 17183                           
 17184                           	psect	text61
 17185  018F18                     __ptext61:
 17186                           	opt callstack 0
 17187  018F18                     _TMR5_Initialize:
 17188                           	opt callstack 25
 17189                           
 17190                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 17191                           
 17192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17193                           ;incstack = 0
 17194  018F18  6A9B               	clrf	155,c	;volatile
 17195                           
 17196                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 17197  018F1A  6A9C               	clrf	156,c	;volatile
 17198                           
 17199                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 17200  018F1C  0E01               	movlw	1
 17201  018F1E  6E9D               	movwf	157,c	;volatile
 17202                           
 17203                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 17204  018F20  0E63               	movlw	99
 17205  018F22  6E99               	movwf	153,c	;volatile
 17206                           
 17207                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 17208  018F24  0EC0               	movlw	192
 17209  018F26  6E98               	movwf	152,c	;volatile
 17210                           
 17211                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 17212  018F28  5098               	movf	152,w,c	;volatile
 17213  018F2A  006F FE64  F037    	movff	16281,btemp	;volatile
 17214  018F30  6A38               	clrf	(btemp+1)^0,c
 17215  018F32  0060  F0DC  F038   	movff	btemp,btemp+1
 17216  018F38  6A37               	clrf	btemp^0,c
 17217  018F3A  1037               	iorwf	btemp^0,w,c
 17218  018F3C  6E1B               	movwf	_timer5ReloadVal^0,c	;volatile
 17219  018F3E  5038               	movf	(btemp+1)^0,w,c
 17220  018F40  6E1C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 17221                           
 17222                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 17223  018F42  0139               	movlb	57	; () banked
 17224  018F44  9DA8               	bcf	168,6,b	;volatile
 17225                           
 17226                           ; BSR set to: 57
 17227                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 17228  018F46  8D98               	bsf	152,6,b	;volatile
 17229                           
 17230                           ; BSR set to: 57
 17231                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 17232  018F48  0E92               	movlw	low _TMR5_DefaultInterruptHandler
 17233  018F4A  6EE6               	movwf	postinc1,c
 17234  018F4C  0E99               	movlw	high _TMR5_DefaultInterruptHandler
 17235  018F4E  6EE6               	movwf	postinc1,c
 17236  018F50  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 17237  018F52  6EE6               	movwf	postinc1,c
 17238  018F54  EC42  F0CB         	call	_TMR5_SetInterruptHandler	;wreg free
 17239                           
 17240                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 17241  018F58  0E31               	movlw	49
 17242  018F5A  6E9A               	movwf	154,c	;volatile
 17243                           
 17244                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17245  018F5C  0012               	return		;funcret
 17246  018F5E                     __end_of_TMR5_Initialize:
 17247                           	opt callstack 0
 17248                           
 17249 ;; *************** function _TMR5_SetInterruptHandler *****************
 17250 ;; Defined at:
 17251 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 17254 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;		None
 17257 ;; Return value:  Size  Location     Type
 17258 ;;                  1  [STACK] void 
 17259 ;; Registers used:
 17260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 17261 ;; Tracked objects:
 17262 ;;		On entry : 3F/39
 17263 ;;		On exit  : 0/0
 17264 ;;		Unchanged: 0/0
 17265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17270 ;;Total ram usage:        0 bytes
 17271 ;; Hardware stack levels used:    1
 17272 ;; Hardware stack levels required when called:    3
 17273 ;; This function calls:
 17274 ;;		Nothing
 17275 ;; This function is called by:
 17276 ;;		_TMR5_Initialize
 17277 ;; This function uses a reentrant model
 17278 ;;
 17279                           
 17280                           	psect	text62
 17281  019684                     __ptext62:
 17282                           	opt callstack 0
 17283  019684                     _TMR5_SetInterruptHandler:
 17284                           	opt callstack 25
 17285                           
 17286                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 17287                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 17288                           
 17289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17290                           ;incstack = 0
 17291  019684  50E1               	movf	fsr1l,w,c
 17292  019686  0FFD               	addlw	-3
 17293  019688  6ED9               	movwf	fsr2l,c
 17294  01968A  50E2               	movf	fsr1h,w,c
 17295  01968C  6EDA               	movwf	fsr2h,c
 17296  01968E  0EFF               	movlw	255
 17297  019690  22DA               	addwfc	fsr2h,f,c
 17298  019692  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler
 17299  019698  006F FF78  F09F    	movff	postinc2,_TMR5_InterruptHandler+1
 17300  01969E  006F FF74  F0A0    	movff	postdec2,_TMR5_InterruptHandler+2
 17301                           
 17302                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 17303  0196A4  52E5               	movf	postdec1,f,c
 17304  0196A6  52E5               	movf	postdec1,f,c
 17305  0196A8  52E5               	movf	postdec1,f,c
 17306  0196AA  0012               	return		;funcret
 17307  0196AC                     __end_of_TMR5_SetInterruptHandler:
 17308                           	opt callstack 0
 17309                           
 17310 ;; *************** function _TMR2_Initialize *****************
 17311 ;; Defined at:
 17312 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;		None
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;		None
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1  [STACK] void 
 17319 ;; Registers used:
 17320 ;;		wreg, status,2
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/39
 17323 ;;		On exit  : 3F/39
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17330 ;;Total ram usage:        0 bytes
 17331 ;; Hardware stack levels used:    1
 17332 ;; Hardware stack levels required when called:    3
 17333 ;; This function calls:
 17334 ;;		Nothing
 17335 ;; This function is called by:
 17336 ;;		_SYSTEM_Initialize
 17337 ;; This function uses a reentrant model
 17338 ;;
 17339                           
 17340                           	psect	text63
 17341  019944                     __ptext63:
 17342                           	opt callstack 0
 17343  019944                     _TMR2_Initialize:
 17344                           	opt callstack 26
 17345                           
 17346                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 17347                           
 17348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17349                           ;incstack = 0
 17350  019944  0E01               	movlw	1
 17351  019946  6EAE               	movwf	174,c	;volatile
 17352                           
 17353                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 17354  019948  6AAD               	clrf	173,c	;volatile
 17355                           
 17356                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x11;
 17357  01994A  0E11               	movlw	17
 17358  01994C  6EAF               	movwf	175,c	;volatile
 17359                           
 17360                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 17361  01994E  0E63               	movlw	99
 17362  019950  6EAB               	movwf	171,c	;volatile
 17363                           
 17364                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 17365  019952  6AAA               	clrf	170,c	;volatile
 17366                           
 17367                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 17368  019954  0139               	movlb	57	; () banked
 17369  019956  95A4               	bcf	164,2,b	;volatile
 17370                           
 17371                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 17372  019958  0EC0               	movlw	192
 17373  01995A  6EAC               	movwf	172,c	;volatile
 17374                           
 17375                           ; BSR set to: 57
 17376                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17377  01995C  0012               	return		;funcret
 17378  01995E                     __end_of_TMR2_Initialize:
 17379                           	opt callstack 0
 17380                           
 17381 ;; *************** function _SPI1_Initialize *****************
 17382 ;; Defined at:
 17383 ;;		line 64 in file "mcc_generated_files/spi1.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;		None
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;		None
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  1  [STACK] void 
 17390 ;; Registers used:
 17391 ;;		wreg, status,2
 17392 ;; Tracked objects:
 17393 ;;		On entry : 3F/39
 17394 ;;		On exit  : 3F/3D
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17401 ;;Total ram usage:        0 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; Hardware stack levels required when called:    3
 17404 ;; This function calls:
 17405 ;;		Nothing
 17406 ;; This function is called by:
 17407 ;;		_SYSTEM_Initialize
 17408 ;; This function uses a reentrant model
 17409 ;;
 17410                           
 17411                           	psect	text64
 17412  0199C4                     __ptext64:
 17413                           	opt callstack 0
 17414  0199C4                     _SPI1_Initialize:
 17415                           	opt callstack 26
 17416                           
 17417                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 17418                           
 17419                           ; BSR set to: 57
 17420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17421                           ;incstack = 0
 17422  0199C4  0E40               	movlw	64
 17423  0199C6  013D               	movlb	61	; () banked
 17424  0199C8  6F15               	movwf	21,b	;volatile
 17425                           
 17426                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 17427  0199CA  0E03               	movlw	3
 17428  0199CC  6F16               	movwf	22,b	;volatile
 17429                           
 17430                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 17431  0199CE  0E4F               	movlw	79
 17432  0199D0  6F19               	movwf	25,b	;volatile
 17433                           
 17434                           ; BSR set to: 61
 17435                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 17436  0199D2  6B1C               	clrf	28,b	;volatile
 17437                           
 17438                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 17439  0199D4  0E83               	movlw	131
 17440  0199D6  6F14               	movwf	20,b	;volatile
 17441                           
 17442                           ; BSR set to: 61
 17443                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17444  0199D8  0012               	return		;funcret
 17445  0199DA                     __end_of_SPI1_Initialize:
 17446                           	opt callstack 0
 17447                           
 17448 ;; *************** function _PWM8_Initialize *****************
 17449 ;; Defined at:
 17450 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;		None
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;		None
 17455 ;; Return value:  Size  Location     Type
 17456 ;;                  1  [STACK] void 
 17457 ;; Registers used:
 17458 ;;		wreg, status,2
 17459 ;; Tracked objects:
 17460 ;;		On entry : 3F/39
 17461 ;;		On exit  : 3F/3F
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17468 ;;Total ram usage:        0 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:    3
 17471 ;; This function calls:
 17472 ;;		Nothing
 17473 ;; This function is called by:
 17474 ;;		_SYSTEM_Initialize
 17475 ;; This function uses a reentrant model
 17476 ;;
 17477                           
 17478                           	psect	text65
 17479  0199DA                     __ptext65:
 17480                           	opt callstack 0
 17481  0199DA                     _PWM8_Initialize:
 17482                           	opt callstack 26
 17483                           
 17484                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 17485                           
 17486                           ; BSR set to: 61
 17487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17488                           ;incstack = 0
 17489  0199DA  0E80               	movlw	128
 17490  0199DC  6E62               	movwf	98,c	;volatile
 17491                           
 17492                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 17493  0199DE  6A61               	clrf	97,c	;volatile
 17494                           
 17495                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 17496  0199E0  0E40               	movlw	64
 17497  0199E2  6E60               	movwf	96,c	;volatile
 17498                           
 17499                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 17500  0199E4  013F               	movlb	63	; () banked
 17501  0199E6  515F               	movf	95,w,b	;volatile
 17502  0199E8  0B3F               	andlw	-193
 17503  0199EA  0940               	iorlw	64
 17504  0199EC  6F5F               	movwf	95,b	;volatile
 17505                           
 17506                           ; BSR set to: 63
 17507                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17508  0199EE  0012               	return		;funcret
 17509  0199F0                     __end_of_PWM8_Initialize:
 17510                           	opt callstack 0
 17511                           
 17512 ;; *************** function _PMD_Initialize *****************
 17513 ;; Defined at:
 17514 ;;		line 88 in file "mcc_generated_files/mcc.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;		None
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;		None
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  1  [STACK] void 
 17521 ;; Registers used:
 17522 ;;		None
 17523 ;; Tracked objects:
 17524 ;;		On entry : 3F/39
 17525 ;;		On exit  : 3F/39
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17532 ;;Total ram usage:        0 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:    3
 17535 ;; This function calls:
 17536 ;;		Nothing
 17537 ;; This function is called by:
 17538 ;;		_SYSTEM_Initialize
 17539 ;; This function uses a reentrant model
 17540 ;;
 17541                           
 17542                           	psect	text66
 17543  019A06                     __ptext66:
 17544                           	opt callstack 0
 17545  019A06                     _PMD_Initialize:
 17546                           	opt callstack 26
 17547                           
 17548                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 17549                           
 17550                           ; BSR set to: 63
 17551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17552                           ;incstack = 0
 17553  019A06  0139               	movlb	57	; () banked
 17554  019A08  6BC0               	clrf	192,b	;volatile
 17555                           
 17556                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 17557  019A0A  6BC1               	clrf	193,b	;volatile
 17558                           
 17559                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 17560  019A0C  6BC2               	clrf	194,b	;volatile
 17561                           
 17562                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 17563  019A0E  6BC3               	clrf	195,b	;volatile
 17564                           
 17565                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 17566  019A10  6BC4               	clrf	196,b	;volatile
 17567                           
 17568                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 17569  019A12  6BC5               	clrf	197,b	;volatile
 17570                           
 17571                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 17572  019A14  6BC6               	clrf	198,b	;volatile
 17573                           
 17574                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 17575  019A16  6BC7               	clrf	199,b	;volatile
 17576                           
 17577                           ; BSR set to: 57
 17578                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 17579  019A18  0012               	return		;funcret
 17580  019A1A                     __end_of_PMD_Initialize:
 17581                           	opt callstack 0
 17582                           
 17583 ;; *************** function _PIN_MANAGER_Initialize *****************
 17584 ;; Defined at:
 17585 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;		None
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;		None
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  1  [STACK] void 
 17592 ;; Registers used:
 17593 ;;		wreg, status,2
 17594 ;; Tracked objects:
 17595 ;;		On entry : 3F/39
 17596 ;;		On exit  : 3F/3A
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17603 ;;Total ram usage:        0 bytes
 17604 ;; Hardware stack levels used:    1
 17605 ;; Hardware stack levels required when called:    3
 17606 ;; This function calls:
 17607 ;;		Nothing
 17608 ;; This function is called by:
 17609 ;;		_SYSTEM_Initialize
 17610 ;; This function uses a reentrant model
 17611 ;;
 17612                           
 17613                           	psect	text67
 17614  01871A                     __ptext67:
 17615                           	opt callstack 0
 17616  01871A                     _PIN_MANAGER_Initialize:
 17617                           	opt callstack 26
 17618                           
 17619                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 17620                           
 17621                           ; BSR set to: 57
 17622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17623                           ;incstack = 0
 17624  01871A  0E07               	movlw	7
 17625  01871C  6EBE               	movwf	190,c	;volatile
 17626                           
 17627                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17628  01871E  6ABD               	clrf	189,c	;volatile
 17629                           
 17630                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17631  018720  6ABA               	clrf	186,c	;volatile
 17632                           
 17633                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 17634  018722  6ABF               	clrf	191,c	;volatile
 17635                           
 17636                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 17637  018724  6ABB               	clrf	187,c	;volatile
 17638                           
 17639                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 17640  018726  0E07               	movlw	7
 17641  018728  6EBC               	movwf	188,c	;volatile
 17642                           
 17643                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 17644  01872A  6AC6               	clrf	198,c	;volatile
 17645                           
 17646                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 17647  01872C  0E0F               	movlw	15
 17648  01872E  6EC7               	movwf	199,c	;volatile
 17649                           
 17650                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 17651  018730  68C2               	setf	194,c	;volatile
 17652                           
 17653                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 17654  018732  0EBF               	movlw	191
 17655  018734  6EC3               	movwf	195,c	;volatile
 17656                           
 17657                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 17658  018736  0E90               	movlw	144
 17659  018738  6EC4               	movwf	196,c	;volatile
 17660                           
 17661                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 17662  01873A  0E0C               	movlw	12
 17663  01873C  6EC5               	movwf	197,c	;volatile
 17664                           
 17665                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 17666  01873E  013A               	movlb	58	; () banked
 17667  018740  6B70               	clrf	112,b	;volatile
 17668                           
 17669                           ; BSR set to: 58
 17670                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 17671  018742  6B60               	clrf	96,b	;volatile
 17672                           
 17673                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 17674  018744  0E3C               	movlw	60
 17675  018746  6F50               	movwf	80,b	;volatile
 17676                           
 17677                           ; BSR set to: 58
 17678                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 17679  018748  6B80               	clrf	128,b	;volatile
 17680                           
 17681                           ; BSR set to: 58
 17682                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 17683  01874A  6B90               	clrf	144,b	;volatile
 17684                           
 17685                           ; BSR set to: 58
 17686                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 17687  01874C  6940               	setf	64,b	;volatile
 17688                           
 17689                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 17690  01874E  0E0C               	movlw	12
 17691  018750  6F71               	movwf	113,b	;volatile
 17692                           
 17693                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 17694  018752  0E0F               	movlw	15
 17695  018754  6F91               	movwf	145,b	;volatile
 17696                           
 17697                           ; BSR set to: 58
 17698                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 17699  018756  6B81               	clrf	129,b	;volatile
 17700                           
 17701                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 17702  018758  0E87               	movlw	135
 17703  01875A  6F51               	movwf	81,b	;volatile
 17704                           
 17705                           ; BSR set to: 58
 17706                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 17707  01875C  6B41               	clrf	65,b	;volatile
 17708                           
 17709                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 17710  01875E  0E90               	movlw	144
 17711  018760  6F61               	movwf	97,b	;volatile
 17712                           
 17713                           ; BSR set to: 58
 17714                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 17715  018762  6B82               	clrf	130,b	;volatile
 17716                           
 17717                           ; BSR set to: 58
 17718                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 17719  018764  6B92               	clrf	146,b	;volatile
 17720                           
 17721                           ; BSR set to: 58
 17722                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 17723  018766  6B42               	clrf	66,b	;volatile
 17724                           
 17725                           ; BSR set to: 58
 17726                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 17727  018768  6B52               	clrf	82,b	;volatile
 17728                           
 17729                           ; BSR set to: 58
 17730                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 17731  01876A  6B62               	clrf	98,b	;volatile
 17732                           
 17733                           ; BSR set to: 58
 17734                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 17735  01876C  6B72               	clrf	114,b	;volatile
 17736                           
 17737                           ; BSR set to: 58
 17738                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 17739  01876E  6943               	setf	67,b	;volatile
 17740                           
 17741                           ; BSR set to: 58
 17742                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 17743  018770  6953               	setf	83,b	;volatile
 17744                           
 17745                           ; BSR set to: 58
 17746                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 17747  018772  6963               	setf	99,b	;volatile
 17748                           
 17749                           ; BSR set to: 58
 17750                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 17751  018774  6973               	setf	115,b	;volatile
 17752                           
 17753                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 17754  018776  0E07               	movlw	7
 17755  018778  6F83               	movwf	131,b	;volatile
 17756                           
 17757                           ; BSR set to: 58
 17758                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 17759  01877A  6993               	setf	147,b	;volatile
 17760                           
 17761                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 17762  01877C  0E0F               	movlw	15
 17763  01877E  6FE8               	movwf	232,b	;volatile
 17764                           
 17765                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 17766  018780  0E13               	movlw	19
 17767  018782  6FDE               	movwf	222,b	;volatile
 17768                           
 17769                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 17770  018784  0E16               	movlw	22
 17771  018786  6F0E               	movwf	14,b	;volatile
 17772                           
 17773                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 17774  018788  0E1E               	movlw	30
 17775  01878A  6F13               	movwf	19,b	;volatile
 17776                           
 17777                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 17778  01878C  0E08               	movlw	8
 17779  01878E  6FC0               	movwf	192,b	;volatile
 17780                           
 17781                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 17782  018790  0E10               	movlw	16
 17783  018792  6F19               	movwf	25,b	;volatile
 17784                           
 17785                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 17786  018794  0E09               	movlw	9
 17787  018796  6FC1               	movwf	193,b	;volatile
 17788                           
 17789                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 17790  018798  0E1F               	movlw	31
 17791  01879A  6F15               	movwf	21,b	;volatile
 17792                           
 17793                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 17794  01879C  0E13               	movlw	19
 17795  01879E  6F16               	movwf	22,b	;volatile
 17796                           
 17797                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 17798  0187A0  0E17               	movlw	23
 17799  0187A2  6FE5               	movwf	229,b	;volatile
 17800                           
 17801                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 17802  0187A4  0E14               	movlw	20
 17803  0187A6  6FDF               	movwf	223,b	;volatile
 17804                           
 17805                           ; BSR set to: 58
 17806                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 17807  0187A8  0012               	return		;funcret
 17808  0187AA                     __end_of_PIN_MANAGER_Initialize:
 17809                           	opt callstack 0
 17810                           
 17811 ;; *************** function _OSCILLATOR_Initialize *****************
 17812 ;; Defined at:
 17813 ;;		line 70 in file "mcc_generated_files/mcc.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;		None
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;		None
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1  [STACK] void 
 17820 ;; Registers used:
 17821 ;;		wreg, status,2
 17822 ;; Tracked objects:
 17823 ;;		On entry : 3F/3A
 17824 ;;		On exit  : 3F/39
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17831 ;;Total ram usage:        0 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; Hardware stack levels required when called:    3
 17834 ;; This function calls:
 17835 ;;		Nothing
 17836 ;; This function is called by:
 17837 ;;		_SYSTEM_Initialize
 17838 ;; This function uses a reentrant model
 17839 ;;
 17840                           
 17841                           	psect	text68
 17842  0199F0                     __ptext68:
 17843                           	opt callstack 0
 17844  0199F0                     _OSCILLATOR_Initialize:
 17845                           	opt callstack 26
 17846                           
 17847                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 17848                           
 17849                           ; BSR set to: 58
 17850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17851                           ;incstack = 0
 17852  0199F0  0E20               	movlw	32
 17853  0199F2  0139               	movlb	57	; () banked
 17854  0199F4  6FD9               	movwf	217,b	;volatile
 17855                           
 17856                           ; BSR set to: 57
 17857                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 17858  0199F6  6BDB               	clrf	219,b	;volatile
 17859                           
 17860                           ; BSR set to: 57
 17861                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 17862  0199F8  6BDD               	clrf	221,b	;volatile
 17863                           
 17864                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 17865  0199FA  0E02               	movlw	2
 17866  0199FC  6FDF               	movwf	223,b	;volatile
 17867                           
 17868                           ; BSR set to: 57
 17869                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 17870  0199FE  6BDE               	clrf	222,b	;volatile
 17871  019A00                     l169:
 17872                           
 17873                           ; BSR set to: 57
 17874                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 17875  019A00  B1DC               	btfsc	220,0,b	;volatile
 17876  019A02  0012               	return	
 17877  019A04  D7FD               	goto	l169
 17878  019A06                     __end_of_OSCILLATOR_Initialize:
 17879                           	opt callstack 0
 17880                           
 17881 ;; *************** function _INTERRUPT_Initialize *****************
 17882 ;; Defined at:
 17883 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17884 ;; Parameters:    Size  Location     Type
 17885 ;;		None
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;  state           1  [STACK] _Bool 
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  1  [STACK] void 
 17890 ;; Registers used:
 17891 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 3F/39
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17901 ;;Total ram usage:        0 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; Hardware stack levels required when called:    3
 17904 ;; This function calls:
 17905 ;;		Nothing
 17906 ;; This function is called by:
 17907 ;;		_SYSTEM_Initialize
 17908 ;; This function uses a reentrant model
 17909 ;;
 17910                           
 17911                           	psect	text69
 17912  018B4E                     __ptext69:
 17913                           	opt callstack 0
 17914  018B4E                     _INTERRUPT_Initialize:
 17915                           	opt callstack 0
 17916                           
 17917                           ; BSR set to: 57
 17918                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17919  018B4E  52E6               	movf	postinc1,f,c
 17920                           
 17921                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 17922                           
 17923                           ;incstack = 0
 17924  018B50  8AD2               	bsf	210,5,c	;volatile
 17925                           
 17926                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 17927  018B52  AED2               	btfss	16338,7,c	;volatile
 17928  018B54  D003               	goto	u7060
 17929  018B56  6A42               	clrf	(btemp+11)^0,c
 17930  018B58  2A42               	incf	(btemp+11)^0,f,c
 17931  018B5A  D001               	goto	u7078
 17932  018B5C                     u7060:
 17933  018B5C  6A42               	clrf	(btemp+11)^0,c
 17934  018B5E                     u7078:
 17935                           
 17936                           ;stkvar	_state @ sp[(-1)+0]
 17937  018B5E  0EFF               	movlw	-1
 17938  018B60  0060  F10B  FFE3   	movff	btemp+11,plusw1
 17939                           
 17940                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 17941  018B66  9ED2               	bcf	16338,7,c	;volatile
 17942                           
 17943                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 17944  018B68  0E55               	movlw	85
 17945  018B6A  6ED4               	movwf	212,c	;volatile
 17946                           
 17947                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 17948  018B6C  0EAA               	movlw	170
 17949  018B6E  6ED4               	movwf	212,c	;volatile
 17950                           
 17951                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 17952  018B70  90D4               	bcf	212,0,c	;volatile
 17953                           
 17954                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 17955  018B72  0138               	movlb	56	; () banked
 17956  018B74  6B9F               	clrf	159,b	;volatile
 17957                           
 17958                           ; BSR set to: 56
 17959                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 17960  018B76  6B9E               	clrf	158,b	;volatile
 17961                           
 17962                           ; BSR set to: 56
 17963                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 17964  018B78  0E08               	movlw	8
 17965  018B7A  6F9D               	movwf	157,b	;volatile
 17966                           
 17967                           ; BSR set to: 56
 17968                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 17969  018B7C  0E55               	movlw	85
 17970  018B7E  6ED4               	movwf	212,c	;volatile
 17971                           
 17972                           ; BSR set to: 56
 17973                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 17974  018B80  0EAA               	movlw	170
 17975  018B82  6ED4               	movwf	212,c	;volatile
 17976                           
 17977                           ; BSR set to: 56
 17978                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 17979  018B84  80D4               	bsf	212,0,c	;volatile
 17980                           
 17981                           ; BSR set to: 56
 17982                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 17983                           ;stkvar	_state @ sp[(-1)+0]
 17984  018B86  0EFF               	movlw	-1
 17985  018B88  B0E3               	btfsc	plusw1,0,c
 17986  018B8A  D002               	bra	u7085
 17987  018B8C  9ED2               	bcf	16338,7,c	;volatile
 17988  018B8E  D001               	bra	u7086
 17989  018B90                     u7085:
 17990  018B90  8ED2               	bsf	16338,7,c	;volatile
 17991  018B92                     u7086:
 17992                           
 17993                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 17994  018B92  0139               	movlb	57	; () banked
 17995  018B94  8782               	bsf	130,3,b	;volatile
 17996                           
 17997                           ; BSR set to: 57
 17998                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 17999  018B96  8382               	bsf	130,1,b	;volatile
 18000                           
 18001                           ; BSR set to: 57
 18002                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 18003  018B98  8182               	bsf	130,0,b	;volatile
 18004                           
 18005                           ; BSR set to: 57
 18006                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 18007  018B9A  8582               	bsf	130,2,b	;volatile
 18008                           
 18009                           ; BSR set to: 57
 18010                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 18011  018B9C  8786               	bsf	134,3,b	;volatile
 18012                           
 18013                           ; BSR set to: 57
 18014                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 18015  018B9E  8586               	bsf	134,2,b	;volatile
 18016                           
 18017                           ; BSR set to: 57
 18018                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 18019  018BA0  8983               	bsf	131,4,b	;volatile
 18020                           
 18021                           ; BSR set to: 57
 18022                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 18023  018BA2  8783               	bsf	131,3,b	;volatile
 18024                           
 18025                           ; BSR set to: 57
 18026                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 18027  018BA4  8181               	bsf	129,0,b	;volatile
 18028                           
 18029                           ; BSR set to: 57
 18030                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 18031  018BA6  8185               	bsf	133,0,b	;volatile
 18032                           
 18033                           ; BSR set to: 57
 18034                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 18035  018BA8  8189               	bsf	137,0,b	;volatile
 18036                           
 18037                           ; BSR set to: 57
 18038                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 1;
 18039  018BAA  8D88               	bsf	136,6,b	;volatile
 18040                           
 18041                           ; BSR set to: 57
 18042                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 18043  018BAC  8581               	bsf	129,2,b	;volatile
 18044                           
 18045                           ; BSR set to: 57
 18046                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 18047  018BAE  52E5               	movf	postdec1,f,c
 18048  018BB0  0012               	return		;funcret
 18049  018BB2                     __end_of_INTERRUPT_Initialize:
 18050                           	opt callstack 0
 18051                           
 18052 ;; *************** function _EXT_INT_Initialize *****************
 18053 ;; Defined at:
 18054 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 18055 ;; Parameters:    Size  Location     Type
 18056 ;;		None
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;		None
 18059 ;; Return value:  Size  Location     Type
 18060 ;;                  1  [STACK] void 
 18061 ;; Registers used:
 18062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 18063 ;; Tracked objects:
 18064 ;;		On entry : 3F/3F
 18065 ;;		On exit  : 3F/39
 18066 ;;		Unchanged: 0/0
 18067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18072 ;;Total ram usage:        0 bytes
 18073 ;; Hardware stack levels used:    1
 18074 ;; Hardware stack levels required when called:    4
 18075 ;; This function calls:
 18076 ;;		_INT0_SetInterruptHandler
 18077 ;;		_INT1_SetInterruptHandler
 18078 ;; This function is called by:
 18079 ;;		_SYSTEM_Initialize
 18080 ;; This function uses a reentrant model
 18081 ;;
 18082                           
 18083                           	psect	text70
 18084  019300                     __ptext70:
 18085                           	opt callstack 0
 18086  019300                     _EXT_INT_Initialize:
 18087                           	opt callstack 25
 18088                           
 18089                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 18090                           
 18091                           ; BSR set to: 57
 18092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18093                           ;incstack = 0
 18094  019300  0139               	movlb	57	; () banked
 18095  019302  91A1               	bcf	161,0,b	;volatile
 18096                           
 18097                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 18098  019304  90D2               	bcf	210,0,c	;volatile
 18099                           
 18100                           ; BSR set to: 57
 18101                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 18102  019306  0EEC               	movlw	low _INT0_DefaultInterruptHandler
 18103  019308  6EE6               	movwf	postinc1,c
 18104  01930A  0E9A               	movlw	high _INT0_DefaultInterruptHandler
 18105  01930C  6EE6               	movwf	postinc1,c
 18106  01930E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 18107  019310  6EE6               	movwf	postinc1,c
 18108  019312  EC6A  F0CB         	call	_INT0_SetInterruptHandler	;wreg free
 18109                           
 18110                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 18111  019316  0139               	movlb	57	; () banked
 18112  019318  8191               	bsf	145,0,b	;volatile
 18113                           
 18114                           ; BSR set to: 57
 18115                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 18116  01931A  91A5               	bcf	165,0,b	;volatile
 18117                           
 18118                           ; BSR set to: 57
 18119                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 18120  01931C  92D2               	bcf	210,1,c	;volatile
 18121                           
 18122                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 18123  01931E  0EEE               	movlw	low _INT1_DefaultInterruptHandler
 18124  019320  6EE6               	movwf	postinc1,c
 18125  019322  0E9A               	movlw	high _INT1_DefaultInterruptHandler
 18126  019324  6EE6               	movwf	postinc1,c
 18127  019326  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 18128  019328  6EE6               	movwf	postinc1,c
 18129  01932A  EC56  F0CB         	call	_INT1_SetInterruptHandler	;wreg free
 18130                           
 18131                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 18132  01932E  0139               	movlb	57	; () banked
 18133  019330  8195               	bsf	149,0,b	;volatile
 18134                           
 18135                           ; BSR set to: 57
 18136                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 18137  019332  0012               	return		;funcret
 18138  019334                     __end_of_EXT_INT_Initialize:
 18139                           	opt callstack 0
 18140                           
 18141 ;; *************** function _INT1_SetInterruptHandler *****************
 18142 ;; Defined at:
 18143 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 18144 ;; Parameters:    Size  Location     Type
 18145 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 18146 ;;		 -> INT1_DefaultInterruptHandler(1), 
 18147 ;; Auto vars:     Size  Location     Type
 18148 ;;		None
 18149 ;; Return value:  Size  Location     Type
 18150 ;;                  1  [STACK] void 
 18151 ;; Registers used:
 18152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 18153 ;; Tracked objects:
 18154 ;;		On entry : 3F/39
 18155 ;;		On exit  : 0/0
 18156 ;;		Unchanged: 0/0
 18157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18162 ;;Total ram usage:        0 bytes
 18163 ;; Hardware stack levels used:    1
 18164 ;; Hardware stack levels required when called:    3
 18165 ;; This function calls:
 18166 ;;		Nothing
 18167 ;; This function is called by:
 18168 ;;		_EXT_INT_Initialize
 18169 ;; This function uses a reentrant model
 18170 ;;
 18171                           
 18172                           	psect	text71
 18173  0196AC                     __ptext71:
 18174                           	opt callstack 0
 18175  0196AC                     _INT1_SetInterruptHandler:
 18176                           	opt callstack 25
 18177                           
 18178                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 18179                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 18180                           
 18181                           ; BSR set to: 57
 18182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18183                           ;incstack = 0
 18184  0196AC  50E1               	movf	fsr1l,w,c
 18185  0196AE  0FFD               	addlw	-3
 18186  0196B0  6ED9               	movwf	fsr2l,c
 18187  0196B2  50E2               	movf	fsr1h,w,c
 18188  0196B4  6EDA               	movwf	fsr2h,c
 18189  0196B6  0EFF               	movlw	255
 18190  0196B8  22DA               	addwfc	fsr2h,f,c
 18191  0196BA  006F FF78  F007    	movff	postinc2,_INT1_InterruptHandler
 18192  0196C0  006F FF78  F008    	movff	postinc2,_INT1_InterruptHandler+1
 18193  0196C6  006F FF74  F009    	movff	postdec2,_INT1_InterruptHandler+2
 18194                           
 18195                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 18196  0196CC  52E5               	movf	postdec1,f,c
 18197  0196CE  52E5               	movf	postdec1,f,c
 18198  0196D0  52E5               	movf	postdec1,f,c
 18199  0196D2  0012               	return		;funcret
 18200  0196D4                     __end_of_INT1_SetInterruptHandler:
 18201                           	opt callstack 0
 18202                           
 18203 ;; *************** function _INT0_SetInterruptHandler *****************
 18204 ;; Defined at:
 18205 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 18206 ;; Parameters:    Size  Location     Type
 18207 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 18208 ;;		 -> INT0_DefaultInterruptHandler(1), 
 18209 ;; Auto vars:     Size  Location     Type
 18210 ;;		None
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  1  [STACK] void 
 18213 ;; Registers used:
 18214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 18215 ;; Tracked objects:
 18216 ;;		On entry : 3F/39
 18217 ;;		On exit  : 0/0
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18224 ;;Total ram usage:        0 bytes
 18225 ;; Hardware stack levels used:    1
 18226 ;; Hardware stack levels required when called:    3
 18227 ;; This function calls:
 18228 ;;		Nothing
 18229 ;; This function is called by:
 18230 ;;		_EXT_INT_Initialize
 18231 ;; This function uses a reentrant model
 18232 ;;
 18233                           
 18234                           	psect	text72
 18235  0196D4                     __ptext72:
 18236                           	opt callstack 0
 18237  0196D4                     _INT0_SetInterruptHandler:
 18238                           	opt callstack 25
 18239                           
 18240                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 18241                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 18242                           
 18243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18244                           ;incstack = 0
 18245  0196D4  50E1               	movf	fsr1l,w,c
 18246  0196D6  0FFD               	addlw	-3
 18247  0196D8  6ED9               	movwf	fsr2l,c
 18248  0196DA  50E2               	movf	fsr1h,w,c
 18249  0196DC  6EDA               	movwf	fsr2h,c
 18250  0196DE  0EFF               	movlw	255
 18251  0196E0  22DA               	addwfc	fsr2h,f,c
 18252  0196E2  006F FF78  F00A    	movff	postinc2,_INT0_InterruptHandler
 18253  0196E8  006F FF78  F00B    	movff	postinc2,_INT0_InterruptHandler+1
 18254  0196EE  006F FF74  F00C    	movff	postdec2,_INT0_InterruptHandler+2
 18255                           
 18256                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 18257  0196F4  52E5               	movf	postdec1,f,c
 18258  0196F6  52E5               	movf	postdec1,f,c
 18259  0196F8  52E5               	movf	postdec1,f,c
 18260  0196FA  0012               	return		;funcret
 18261  0196FC                     __end_of_INT0_SetInterruptHandler:
 18262                           	opt callstack 0
 18263                           
 18264 ;; *************** function _DMA2_Initialize *****************
 18265 ;; Defined at:
 18266 ;;		line 61 in file "mcc_generated_files/dma2.c"
 18267 ;; Parameters:    Size  Location     Type
 18268 ;;		None
 18269 ;; Auto vars:     Size  Location     Type
 18270 ;;		None
 18271 ;; Return value:  Size  Location     Type
 18272 ;;                  1  [STACK] void 
 18273 ;; Registers used:
 18274 ;;		wreg, status,2
 18275 ;; Tracked objects:
 18276 ;;		On entry : 3F/3D
 18277 ;;		On exit  : 3F/3B
 18278 ;;		Unchanged: 0/0
 18279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18284 ;;Total ram usage:        0 bytes
 18285 ;; Hardware stack levels used:    1
 18286 ;; Hardware stack levels required when called:    3
 18287 ;; This function calls:
 18288 ;;		Nothing
 18289 ;; This function is called by:
 18290 ;;		_SYSTEM_Initialize
 18291 ;; This function uses a reentrant model
 18292 ;;
 18293                           
 18294                           	psect	text73
 18295  018CD0                     __ptext73:
 18296                           	opt callstack 0
 18297  018CD0                     _DMA2_Initialize:
 18298                           	opt callstack 26
 18299                           
 18300                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 18301                           
 18302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18303                           ;incstack = 0
 18304  018CD0  0E00               	movlw	0
 18305  018CD2  013B               	movlb	59	; () banked
 18306  018CD4  6FD9               	movwf	217,b	;volatile
 18307  018CD6  0E10               	movlw	16
 18308  018CD8  6FDA               	movwf	218,b	;volatile
 18309  018CDA  0E00               	movlw	0
 18310  018CDC  6FDB               	movwf	219,b	;volatile
 18311                           
 18312                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 18313  018CDE  0E3F               	movlw	63
 18314  018CE0  6FD1               	movwf	209,b	;volatile
 18315  018CE2  0EBB               	movlw	187
 18316  018CE4  6FD0               	movwf	208,b	;volatile
 18317                           
 18318                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 18319  018CE6  0E03               	movlw	3
 18320  018CE8  6FDD               	movwf	221,b	;volatile
 18321                           
 18322                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 18323  018CEA  0E00               	movlw	0
 18324  018CEC  6FD8               	movwf	216,b	;volatile
 18325  018CEE  0E01               	movlw	1
 18326  018CF0  6FD7               	movwf	215,b	;volatile
 18327                           
 18328                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 18329  018CF2  0E00               	movlw	0
 18330  018CF4  6FCF               	movwf	207,b	;volatile
 18331  018CF6  0E01               	movlw	1
 18332  018CF8  6FCE               	movwf	206,b	;volatile
 18333                           
 18334                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 18335  018CFA  0E46               	movlw	70
 18336  018CFC  6FDF               	movwf	223,b	;volatile
 18337                           
 18338                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 18339  018CFE  0E3D               	movlw	61
 18340  018D00  6FDE               	movwf	222,b	;volatile
 18341                           
 18342                           ; BSR set to: 59
 18343                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 18344  018D02  0139               	movlb	57	; () banked
 18345  018D04  97A5               	bcf	165,3,b	;volatile
 18346                           
 18347                           ; BSR set to: 57
 18348                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 18349  018D06  95A5               	bcf	165,2,b	;volatile
 18350                           
 18351                           ; BSR set to: 57
 18352                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 18353  018D08  9BA5               	bcf	165,5,b	;volatile
 18354                           
 18355                           ; BSR set to: 57
 18356                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 18357  018D0A  99A5               	bcf	165,4,b	;volatile
 18358                           
 18359                           ; BSR set to: 57
 18360                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 18361  018D0C  9795               	bcf	149,3,b	;volatile
 18362                           
 18363                           ; BSR set to: 57
 18364                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 18365  018D0E  9595               	bcf	149,2,b	;volatile
 18366                           
 18367                           ; BSR set to: 57
 18368                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 18369  018D10  9B95               	bcf	149,5,b	;volatile
 18370                           
 18371                           ; BSR set to: 57
 18372                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 18373  018D12  9995               	bcf	149,4,b	;volatile
 18374  018D14  9ED2               	bcf	16338,7,c	;# 
 18375  018D16  0139               	banksel	14831	;# 
 18376  018D18  0E55               	movlw	85	;# 
 18377  018D1A  6FEF               	movwf	14831,b	;# 
 18378  018D1C  0EAA               	movlw	170	;# 
 18379  018D1E  6FEF               	movwf	14831,b	;# 
 18380  018D20  81EF               	bsf	14831,0,b	;# 
 18381  018D22  8ED2               	bsf	16338,7,c	;# 
 18382                           
 18383                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 18384  018D24  013B               	movlb	59	; () banked
 18385  018D26  6BDC               	clrf	220,b	;volatile
 18386                           
 18387                           ; BSR set to: 59
 18388                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 18389  018D28  0012               	return		;funcret
 18390  018D2A                     __end_of_DMA2_Initialize:
 18391                           	opt callstack 0
 18392                           
 18393 ;; *************** function _DMA1_Initialize *****************
 18394 ;; Defined at:
 18395 ;;		line 86 in file "mcc_generated_files/dma1.c"
 18396 ;; Parameters:    Size  Location     Type
 18397 ;;		None
 18398 ;; Auto vars:     Size  Location     Type
 18399 ;;		None
 18400 ;; Return value:  Size  Location     Type
 18401 ;;                  1  [STACK] void 
 18402 ;; Registers used:
 18403 ;;		wreg, status,2
 18404 ;; Tracked objects:
 18405 ;;		On entry : 3F/3B
 18406 ;;		On exit  : 3F/3B
 18407 ;;		Unchanged: 0/0
 18408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18413 ;;Total ram usage:        0 bytes
 18414 ;; Hardware stack levels used:    1
 18415 ;; Hardware stack levels required when called:    3
 18416 ;; This function calls:
 18417 ;;		Nothing
 18418 ;; This function is called by:
 18419 ;;		_SYSTEM_Initialize
 18420 ;; This function uses a reentrant model
 18421 ;;
 18422                           
 18423                           	psect	text74
 18424  018A18                     __ptext74:
 18425                           	opt callstack 0
 18426  018A18                     _DMA1_Initialize:
 18427                           	opt callstack 26
 18428                           
 18429                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 18430                           
 18431                           ; BSR set to: 59
 18432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18433                           ;incstack = 0
 18434  018A18  0E00               	movlw	0
 18435  018A1A  013B               	movlb	59	; () banked
 18436  018A1C  6FF9               	movwf	249,b	;volatile
 18437  018A1E  0E10               	movlw	16
 18438  018A20  6FFA               	movwf	250,b	;volatile
 18439  018A22  0E00               	movlw	0
 18440  018A24  6FFB               	movwf	251,b	;volatile
 18441                           
 18442                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 18443  018A26  0E3D               	movlw	61
 18444  018A28  6FF1               	movwf	241,b	;volatile
 18445  018A2A  0E11               	movlw	17
 18446  018A2C  6FF0               	movwf	240,b	;volatile
 18447                           
 18448                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 18449  018A2E  0E03               	movlw	3
 18450  018A30  6FFD               	movwf	253,b	;volatile
 18451                           
 18452                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 18453  018A32  0E00               	movlw	0
 18454  018A34  6FF8               	movwf	248,b	;volatile
 18455  018A36  0E01               	movlw	1
 18456  018A38  6FF7               	movwf	247,b	;volatile
 18457                           
 18458                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 18459  018A3A  0E00               	movlw	0
 18460  018A3C  6FEF               	movwf	239,b	;volatile
 18461  018A3E  0E01               	movlw	1
 18462  018A40  6FEE               	movwf	238,b	;volatile
 18463                           
 18464                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 18465  018A42  0E15               	movlw	21
 18466  018A44  6FFF               	movwf	255,b	;volatile
 18467                           
 18468                           ; BSR set to: 59
 18469                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 18470  018A46  6BFE               	clrf	254,b	;volatile
 18471                           
 18472                           ; BSR set to: 59
 18473                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 18474  018A48  0139               	movlb	57	; () banked
 18475  018A4A  93A2               	bcf	162,1,b	;volatile
 18476                           
 18477                           ; BSR set to: 57
 18478                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 18479  018A4C  91A2               	bcf	162,0,b	;volatile
 18480                           
 18481                           ; BSR set to: 57
 18482                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 18483  018A4E  97A2               	bcf	162,3,b	;volatile
 18484                           
 18485                           ; BSR set to: 57
 18486                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 18487  018A50  95A2               	bcf	162,2,b	;volatile
 18488                           
 18489                           ; BSR set to: 57
 18490                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 18491  018A52  8392               	bsf	146,1,b	;volatile
 18492                           
 18493                           ; BSR set to: 57
 18494                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 18495  018A54  8192               	bsf	146,0,b	;volatile
 18496                           
 18497                           ; BSR set to: 57
 18498                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 18499  018A56  8792               	bsf	146,3,b	;volatile
 18500                           
 18501                           ; BSR set to: 57
 18502                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 18503  018A58  8592               	bsf	146,2,b	;volatile
 18504                           
 18505                           ; BSR set to: 57
 18506                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 18507  018A5A  6BF1               	clrf	241,b	;volatile
 18508                           
 18509                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 18510  018A5C  0E01               	movlw	1
 18511  018A5E  6FF2               	movwf	242,b	;volatile
 18512                           
 18513                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 18514  018A60  0E04               	movlw	4
 18515  018A62  6FF3               	movwf	243,b	;volatile
 18516                           
 18517                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 18518  018A64  0E02               	movlw	2
 18519  018A66  6FF4               	movwf	244,b	;volatile
 18520                           
 18521                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 18522  018A68  0E03               	movlw	3
 18523  018A6A  6FF7               	movwf	247,b	;volatile
 18524  018A6C  9ED2               	bcf	16338,7,c	;# 
 18525  018A6E  0139               	banksel	14831	;# 
 18526  018A70  0E55               	movlw	85	;# 
 18527  018A72  6FEF               	movwf	14831,b	;# 
 18528  018A74  0EAA               	movlw	170	;# 
 18529  018A76  6FEF               	movwf	14831,b	;# 
 18530  018A78  81EF               	bsf	14831,0,b	;# 
 18531  018A7A  8ED2               	bsf	16338,7,c	;# 
 18532                           
 18533                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 18534  018A7C  013B               	movlb	59	; () banked
 18535  018A7E  6BFC               	clrf	252,b	;volatile
 18536                           
 18537                           ; BSR set to: 59
 18538                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 18539  018A80  0012               	return		;funcret
 18540  018A82                     __end_of_DMA1_Initialize:
 18541                           	opt callstack 0
 18542                           
 18543 ;; *************** function _CLKREF_Initialize *****************
 18544 ;; Defined at:
 18545 ;;		line 58 in file "mcc_generated_files/clkref.c"
 18546 ;; Parameters:    Size  Location     Type
 18547 ;;		None
 18548 ;; Auto vars:     Size  Location     Type
 18549 ;;		None
 18550 ;; Return value:  Size  Location     Type
 18551 ;;                  1  [STACK] void 
 18552 ;; Registers used:
 18553 ;;		wreg, status,2
 18554 ;; Tracked objects:
 18555 ;;		On entry : 3F/3B
 18556 ;;		On exit  : 3F/3C
 18557 ;;		Unchanged: 0/0
 18558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18563 ;;Total ram usage:        0 bytes
 18564 ;; Hardware stack levels used:    1
 18565 ;; Hardware stack levels required when called:    3
 18566 ;; This function calls:
 18567 ;;		Nothing
 18568 ;; This function is called by:
 18569 ;;		_SYSTEM_Initialize
 18570 ;; This function uses a reentrant model
 18571 ;;
 18572                           
 18573                           	psect	text75
 18574  019A76                     __ptext75:
 18575                           	opt callstack 0
 18576  019A76                     _CLKREF_Initialize:
 18577                           	opt callstack 26
 18578                           
 18579                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 18580                           
 18581                           ; BSR set to: 59
 18582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18583                           ;incstack = 0
 18584  019A76  013C               	movlb	60	; () banked
 18585  019A78  6BE6               	clrf	230,b	;volatile
 18586                           
 18587                           ; BSR set to: 60
 18588                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 18589  019A7A  0E94               	movlw	148
 18590  019A7C  6FE5               	movwf	229,b	;volatile
 18591                           
 18592                           ; BSR set to: 60
 18593                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 18594  019A7E  0012               	return		;funcret
 18595  019A80                     __end_of_CLKREF_Initialize:
 18596                           	opt callstack 0
 18597                           
 18598 ;; *************** function _ADCC_Initialize *****************
 18599 ;; Defined at:
 18600 ;;		line 64 in file "mcc_generated_files/adcc.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;		None
 18603 ;; Auto vars:     Size  Location     Type
 18604 ;;		None
 18605 ;; Return value:  Size  Location     Type
 18606 ;;                  1  [STACK] void 
 18607 ;; Registers used:
 18608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 18609 ;; Tracked objects:
 18610 ;;		On entry : 3F/39
 18611 ;;		On exit  : 0/0
 18612 ;;		Unchanged: 0/0
 18613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18618 ;;Total ram usage:        0 bytes
 18619 ;; Hardware stack levels used:    1
 18620 ;; Hardware stack levels required when called:    4
 18621 ;; This function calls:
 18622 ;;		_ADCC_SetADIInterruptHandler
 18623 ;; This function is called by:
 18624 ;;		_SYSTEM_Initialize
 18625 ;; This function uses a reentrant model
 18626 ;;
 18627                           
 18628                           	psect	text76
 18629  018ECE                     __ptext76:
 18630                           	opt callstack 0
 18631  018ECE                     _ADCC_Initialize:
 18632                           	opt callstack 25
 18633                           
 18634                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 18635                           
 18636                           ; BSR set to: 60
 18637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18638                           ;incstack = 0
 18639  018ECE  013E               	movlb	62	; () banked
 18640  018ED0  6BDE               	clrf	222,b	;volatile
 18641                           
 18642                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 18643  018ED2  6BDF               	clrf	223,b	;volatile
 18644                           
 18645                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 18646  018ED4  6BE0               	clrf	224,b	;volatile
 18647                           
 18648                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 18649  018ED6  6BE1               	clrf	225,b	;volatile
 18650                           
 18651                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 18652  018ED8  6BE4               	clrf	228,b	;volatile
 18653                           
 18654                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 18655  018EDA  6BE5               	clrf	229,b	;volatile
 18656                           
 18657                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 18658  018EDC  6BEA               	clrf	234,b	;volatile
 18659                           
 18660                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 18661  018EDE  6BEC               	clrf	236,b	;volatile
 18662                           
 18663                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 18664  018EE0  6BF1               	clrf	241,b	;volatile
 18665                           
 18666                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 18667  018EE2  6BF3               	clrf	243,b	;volatile
 18668                           
 18669                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 18670  018EE4  6BF4               	clrf	244,b	;volatile
 18671                           
 18672                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 18673  018EE6  6BF5               	clrf	245,b	;volatile
 18674                           
 18675                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 18676  018EE8  6BF6               	clrf	246,b	;volatile
 18677                           
 18678                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 18679  018EEA  6BF7               	clrf	247,b	;volatile
 18680                           
 18681                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 18682  018EEC  6BF9               	clrf	249,b	;volatile
 18683                           
 18684                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 18685  018EEE  6BFA               	clrf	250,b	;volatile
 18686                           
 18687                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 18688  018EF0  6BFB               	clrf	251,b	;volatile
 18689                           
 18690                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 18691  018EF2  6BFC               	clrf	252,b	;volatile
 18692                           
 18693                           ; BSR set to: 62
 18694                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 18695  018EF4  0E02               	movlw	2
 18696  018EF6  6FFD               	movwf	253,b	;volatile
 18697                           
 18698                           ; BSR set to: 62
 18699                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 18700  018EF8  6BFE               	clrf	254,b	;volatile
 18701                           
 18702                           ; BSR set to: 62
 18703                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 18704  018EFA  6BFF               	clrf	255,b	;volatile
 18705                           
 18706                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 18707  018EFC  0E94               	movlw	148
 18708  018EFE  6FF8               	movwf	248,b	;volatile
 18709                           
 18710                           ; BSR set to: 62
 18711                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 18712  018F00  0139               	movlb	57	; () banked
 18713  018F02  95A1               	bcf	161,2,b	;volatile
 18714                           
 18715                           ; BSR set to: 57
 18716                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 18717  018F04  8591               	bsf	145,2,b	;volatile
 18718                           
 18719                           ; BSR set to: 57
 18720                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 18721  018F06  0EF0               	movlw	low _ADCC_DefaultInterruptHandler
 18722  018F08  6EE6               	movwf	postinc1,c
 18723  018F0A  0E9A               	movlw	high _ADCC_DefaultInterruptHandler
 18724  018F0C  6EE6               	movwf	postinc1,c
 18725  018F0E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 18726  018F10  6EE6               	movwf	postinc1,c
 18727  018F12  EC7E  F0CB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 18728                           
 18729                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 18730  018F16  0012               	return		;funcret
 18731  018F18                     __end_of_ADCC_Initialize:
 18732                           	opt callstack 0
 18733                           
 18734 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 18735 ;; Defined at:
 18736 ;;		line 316 in file "mcc_generated_files/adcc.c"
 18737 ;; Parameters:    Size  Location     Type
 18738 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 18739 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 18740 ;; Auto vars:     Size  Location     Type
 18741 ;;		None
 18742 ;; Return value:  Size  Location     Type
 18743 ;;                  1  [STACK] void 
 18744 ;; Registers used:
 18745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 18746 ;; Tracked objects:
 18747 ;;		On entry : 3F/39
 18748 ;;		On exit  : 0/0
 18749 ;;		Unchanged: 0/0
 18750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18755 ;;Total ram usage:        0 bytes
 18756 ;; Hardware stack levels used:    1
 18757 ;; Hardware stack levels required when called:    3
 18758 ;; This function calls:
 18759 ;;		Nothing
 18760 ;; This function is called by:
 18761 ;;		_ADCC_Initialize
 18762 ;; This function uses a reentrant model
 18763 ;;
 18764                           
 18765                           	psect	text77
 18766  0196FC                     __ptext77:
 18767                           	opt callstack 0
 18768  0196FC                     _ADCC_SetADIInterruptHandler:
 18769                           	opt callstack 25
 18770                           
 18771                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 18772                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 18773                           
 18774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18775                           ;incstack = 0
 18776  0196FC  50E1               	movf	fsr1l,w,c
 18777  0196FE  0FFD               	addlw	-3
 18778  019700  6ED9               	movwf	fsr2l,c
 18779  019702  50E2               	movf	fsr1h,w,c
 18780  019704  6EDA               	movwf	fsr2h,c
 18781  019706  0EFF               	movlw	255
 18782  019708  22DA               	addwfc	fsr2h,f,c
 18783  01970A  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 18784  019710  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 18785  019716  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 18786                           
 18787                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 18788  01971C  52E5               	movf	postdec1,f,c
 18789  01971E  52E5               	movf	postdec1,f,c
 18790  019720  52E5               	movf	postdec1,f,c
 18791  019722  0012               	return		;funcret
 18792  019724                     __end_of_ADCC_SetADIInterruptHandler:
 18793                           	opt callstack 0
 18794                           
 18795 ;; *************** function _MyeaDogM_WriteStringAtPos *****************
 18796 ;; Defined at:
 18797 ;;		line 181 in file "mconfig.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  r               1  [STACK] const unsigned char 
 18800 ;;  c               1  [STACK] const unsigned char 
 18801 ;;  strPtr          2  [STACK] PTR unsigned char 
 18802 ;;		 -> D.lcd(512), mconfig@D(514), V(387), 
 18803 ;; Auto vars:     Size  Location     Type
 18804 ;;		None
 18805 ;; Return value:  Size  Location     Type
 18806 ;;                  1  [STACK] void 
 18807 ;; Registers used:
 18808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 18809 ;; Tracked objects:
 18810 ;;		On entry : 0/3C
 18811 ;;		On exit  : 0/0
 18812 ;;		Unchanged: 0/0
 18813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18818 ;;Total ram usage:        0 bytes
 18819 ;; Hardware stack levels used:    1
 18820 ;; Hardware stack levels required when called:   15
 18821 ;; This function calls:
 18822 ;;		_TimerDone
 18823 ;;		_eaDogM_WriteStringAtPos
 18824 ;;		_get_vterm_ptr
 18825 ;;		_sprintf
 18826 ;;		_update_lcd
 18827 ;;		_wait_lcd_done
 18828 ;; This function is called by:
 18829 ;;		_main
 18830 ;; This function uses a reentrant model
 18831 ;;
 18832                           
 18833                           	psect	text78
 18834  01803C                     __ptext78:
 18835                           	opt callstack 0
 18836  01803C                     _MyeaDogM_WriteStringAtPos:
 18837                           	opt callstack 15
 18838                           
 18839                           ;mconfig.c: 181: void MyeaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *
      +                          strPtr);mconfig.c: 182: {;mconfig.c: 184:  wait_lcd_done();
 18840                           
 18841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18842                           ;incstack = 0
 18843  01803C  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 18844                           
 18845                           ; BSR set to: 0
 18846                           ;mconfig.c: 185:  if (V.response.info == DIS_STR) {
 18847  018040  EE23  F191         	lfsr	2,_V+375	;volatile
 18848  018044  50DF               	movf	indf2,w,c
 18849  018046  A4D8               	btfss	status,2,c
 18850  018048  D010               	goto	l15007
 18851                           
 18852                           ; BSR set to: 0
 18853                           ;mconfig.c: 186:   eaDogM_WriteStringAtPos(r, c, strPtr);
 18854                           ;stkvar	_strPtr @ sp[(0)+-4]
 18855  01804A  0EFC               	movlw	-4
 18856  01804C  006F FF8F FFE6     	movff	plusw1,postinc1
 18857  018052  006F FF8F FFE6     	movff	plusw1,postinc1
 18858                           
 18859                           ;stkvar	_c @ sp[(-2)+-2]
 18860  018058  0EFC               	movlw	-4
 18861  01805A  50E3               	movf	plusw1,w,c
 18862  01805C  6EE6               	movwf	postinc1,c
 18863                           
 18864                           ;stkvar	_r @ sp[(-3)+-1]
 18865  01805E  0EFC               	movlw	-4
 18866  018060  50E3               	movf	plusw1,w,c
 18867  018062  6EE6               	movwf	postinc1,c
 18868  018064  EC4B  F0C9         	call	_eaDogM_WriteStringAtPos	;wreg free
 18869                           
 18870                           ;mconfig.c: 187:  } else {
 18871  018068  D059               	goto	l15023
 18872  01806A                     l15007:
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;mconfig.c: 188:   if (V.response.info == DIS_HELP) {
 18876  01806A  0063  F647  FFE8   	movff	_V+375,wreg	;volatile
 18877  018070  0A06               	xorlw	6
 18878  018072  A4D8               	btfss	status,2,c
 18879  018074  D01D               	goto	l15011
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;mconfig.c: 189:    sprintf(get_vterm_ptr(2, 1), "%s", V.info);
 18883  018076  0E01               	movlw	low (_V+231)
 18884  018078  6EE6               	movwf	postinc1,c
 18885  01807A  0E0D               	movlw	high (_V+231)
 18886  01807C  6EE6               	movwf	postinc1,c
 18887  01807E  0EFB               	movlw	low STR_26
 18888  018080  6EE6               	movwf	postinc1,c
 18889  018082  0EFF               	movlw	high STR_26
 18890  018084  6EE6               	movwf	postinc1,c
 18891  018086  0E01               	movlw	1
 18892  018088  6EE6               	movwf	postinc1,c
 18893  01808A  0E02               	movlw	2
 18894  01808C  6EE6               	movwf	postinc1,c
 18895  01808E  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 18896  018092  0060  F0DF  FFE6   	movff	btemp,postinc1
 18897  018098  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 18898  01809E  0E06               	movlw	6
 18899  0180A0  6EE6               	movwf	postinc1,c
 18900  0180A2  EC95  F0BE         	call	_sprintf	;wreg free
 18901                           
 18902                           ;mconfig.c: 190:    update_lcd(1);
 18903  0180A6  0E01               	movlw	1
 18904  0180A8  6EE6               	movwf	postinc1,c
 18905  0180AA  EC0D  F0BE         	call	_update_lcd	;wreg free
 18906                           
 18907                           ;mconfig.c: 191:   } else {
 18908  0180AE  D026               	goto	l15017
 18909  0180B0                     l15011:
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;mconfig.c: 192:    if ((V.response.info != DIS_STR)) {
 18913  0180B0  EE23  F191         	lfsr	2,_V+375	;volatile
 18914  0180B4  50DF               	movf	indf2,w,c
 18915  0180B6  B4D8               	btfsc	status,2,c
 18916  0180B8  D005               	goto	l15015
 18917                           
 18918                           ; BSR set to: 0
 18919                           ;mconfig.c: 193:     update_lcd(2);
 18920  0180BA  0E02               	movlw	2
 18921  0180BC  6EE6               	movwf	postinc1,c
 18922  0180BE  EC0D  F0BE         	call	_update_lcd	;wreg free
 18923                           
 18924                           ;mconfig.c: 194:    } else {
 18925  0180C2  D01C               	goto	l15017
 18926  0180C4                     l15015:
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;mconfig.c: 195:     sprintf(get_vterm_ptr(2, 0), "%s", V.info);
 18930  0180C4  0E01               	movlw	low (_V+231)
 18931  0180C6  6EE6               	movwf	postinc1,c
 18932  0180C8  0E0D               	movlw	high (_V+231)
 18933  0180CA  6EE6               	movwf	postinc1,c
 18934  0180CC  0EFB               	movlw	low STR_26
 18935  0180CE  6EE6               	movwf	postinc1,c
 18936  0180D0  0EFF               	movlw	high STR_26
 18937  0180D2  6EE6               	movwf	postinc1,c
 18938  0180D4  0E00               	movlw	0
 18939  0180D6  6EE6               	movwf	postinc1,c
 18940  0180D8  0E02               	movlw	2
 18941  0180DA  6EE6               	movwf	postinc1,c
 18942  0180DC  ECE2  F0C9         	call	_get_vterm_ptr	;wreg free
 18943  0180E0  0060  F0DF  FFE6   	movff	btemp,postinc1
 18944  0180E6  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 18945  0180EC  0E06               	movlw	6
 18946  0180EE  6EE6               	movwf	postinc1,c
 18947  0180F0  EC95  F0BE         	call	_sprintf	;wreg free
 18948                           
 18949                           ;mconfig.c: 196:     update_lcd(0);
 18950  0180F4  0E00               	movlw	0
 18951  0180F6  6EE6               	movwf	postinc1,c
 18952  0180F8  EC0D  F0BE         	call	_update_lcd	;wreg free
 18953  0180FC                     l15017:
 18954                           
 18955                           ;mconfig.c: 200:   if ((V.response.info != DIS_STR) && TimerDone(TMR_INFO))
 18956  0180FC  EE23  F191         	lfsr	2,_V+375	;volatile
 18957  018100  50DF               	movf	indf2,w,c
 18958  018102  B4D8               	btfsc	status,2,c
 18959  018104  D00B               	goto	l15023
 18960  018106  0E07               	movlw	7
 18961  018108  6EE6               	movwf	postinc1,c
 18962  01810A  ECE1  F0CB         	call	_TimerDone	;wreg free
 18963  01810E  5037               	movf	btemp^0,w,c
 18964  018110  B4D8               	btfsc	status,2,c
 18965  018112  D004               	goto	l15023
 18966                           
 18967                           ;mconfig.c: 201:    V.response.info = DIS_STR;
 18968  018114  0E00               	movlw	0
 18969  018116  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 18970  01811C                     l15023:
 18971                           
 18972                           ;mconfig.c: 207:  if (D.last_info == DIS_HELP && V.response.info != DIS_HELP) {
 18973  01811C  0062  F407  FFE8   	movff	mconfig@D+513,wreg
 18974  018122  0A06               	xorlw	6
 18975                           
 18976                           ;mconfig.c: 211:  D.last_info = V.response.info;
 18977                           
 18978                           ;mconfig.c: 209:  }
 18979  018124  CD91  F901         	movff	_V+375,mconfig@D+513	;volatile
 18980                           
 18981                           ; _MyeaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 18982  018128  52E5               	movf	postdec1,f,c
 18983  01812A  52E5               	movf	postdec1,f,c
 18984  01812C  52E5               	movf	postdec1,f,c
 18985  01812E  52E5               	movf	postdec1,f,c
 18986  018130  0012               	return		;funcret
 18987  018132                     __end_of_MyeaDogM_WriteStringAtPos:
 18988                           	opt callstack 0
 18989                           
 18990 ;; *************** function _update_lcd *****************
 18991 ;; Defined at:
 18992 ;;		line 82 in file "mconfig.c"
 18993 ;; Parameters:    Size  Location     Type
 18994 ;;  vterm           1  [STACK] unsigned char 
 18995 ;; Auto vars:     Size  Location     Type
 18996 ;;		None
 18997 ;; Return value:  Size  Location     Type
 18998 ;;                  1  [STACK] unsigned char 
 18999 ;; Registers used:
 19000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 19001 ;; Tracked objects:
 19002 ;;		On entry : 0/0
 19003 ;;		On exit  : 0/0
 19004 ;;		Unchanged: 0/0
 19005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19010 ;;Total ram usage:        0 bytes
 19011 ;; Hardware stack levels used:    1
 19012 ;; Hardware stack levels required when called:   14
 19013 ;; This function calls:
 19014 ;;		_eaDogM_WriteStringAtPos
 19015 ;;		_wait_lcd_done
 19016 ;; This function is called by:
 19017 ;;		_main
 19018 ;;		_check_help
 19019 ;;		_MyeaDogM_WriteStringAtPos
 19020 ;; This function uses a reentrant model
 19021 ;;
 19022                           
 19023                           	psect	text79
 19024  017C1A                     __ptext79:
 19025                           	opt callstack 0
 19026  017C1A                     _update_lcd:
 19027                           	opt callstack 16
 19028                           
 19029                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
 19030                           ;stkvar	_vterm @ sp[(0)+-1]
 19031                           
 19032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19033                           ;incstack = 0
 19034  017C1A  0EFF               	movlw	-1
 19035  017C1C  006F FF8C  F037    	movff	plusw1,btemp
 19036  017C22  0E03               	movlw	3
 19037  017C24  1637               	andwf	btemp^0,f,c
 19038  017C26  0EFF               	movlw	-1
 19039  017C28  0060  F0DF  FFE3   	movff	btemp,plusw1
 19040                           
 19041                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
 19042  017C2E  EE22  F100         	lfsr	2,mconfig@D+512
 19043  017C32  A0DF               	btfss	indf2,0,c
 19044  017C34  D004               	goto	l14173
 19045                           
 19046                           ;stkvar	_vterm @ sp[(0)+-1]
 19047  017C36  0EFF               	movlw	-1
 19048  017C38  50E3               	movf	plusw1,w,c
 19049  017C3A  B4D8               	btfsc	status,2,c
 19050  017C3C  D074               	goto	l2219
 19051  017C3E                     l14173:
 19052                           
 19053                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
 19054                           ;stkvar	_vterm @ sp[(0)+-1]
 19055  017C3E  0EFF               	movlw	-1
 19056  017C40  50E3               	movf	plusw1,w,c
 19057  017C42  0D80               	mullw	128
 19058  017C44  0E10               	movlw	low (mconfig@D+16)
 19059  017C46  24F3               	addwf	243,w,c
 19060  017C48  6ED9               	movwf	fsr2l,c
 19061  017C4A  0E07               	movlw	high (mconfig@D+16)
 19062  017C4C  20F4               	addwfc	prodh,w,c
 19063  017C4E  6EDA               	movwf	fsr2h,c
 19064  017C50  0E00               	movlw	0
 19065  017C52  6EDF               	movwf	indf2,c
 19066                           
 19067                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
 19068                           ;stkvar	_vterm @ sp[(0)+-1]
 19069  017C54  0EFF               	movlw	-1
 19070  017C56  50E3               	movf	plusw1,w,c
 19071  017C58  0D80               	mullw	128
 19072  017C5A  0E30               	movlw	low (mconfig@D+48)
 19073  017C5C  24F3               	addwf	243,w,c
 19074  017C5E  6ED9               	movwf	fsr2l,c
 19075  017C60  0E07               	movlw	high (mconfig@D+48)
 19076  017C62  20F4               	addwfc	prodh,w,c
 19077  017C64  6EDA               	movwf	fsr2h,c
 19078  017C66  0E00               	movlw	0
 19079  017C68  6EDF               	movwf	indf2,c
 19080                           
 19081                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
 19082                           ;stkvar	_vterm @ sp[(0)+-1]
 19083  017C6A  0EFF               	movlw	-1
 19084  017C6C  50E3               	movf	plusw1,w,c
 19085  017C6E  0D80               	mullw	128
 19086  017C70  0E50               	movlw	low (mconfig@D+80)
 19087  017C72  24F3               	addwf	243,w,c
 19088  017C74  6ED9               	movwf	fsr2l,c
 19089  017C76  0E07               	movlw	high (mconfig@D+80)
 19090  017C78  20F4               	addwfc	prodh,w,c
 19091  017C7A  6EDA               	movwf	fsr2h,c
 19092  017C7C  0E00               	movlw	0
 19093  017C7E  6EDF               	movwf	indf2,c
 19094                           
 19095                           ;mconfig.c: 92:  wait_lcd_done();
 19096  017C80  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 19097                           
 19098                           ; BSR set to: 0
 19099                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 19100                           ;stkvar	_vterm @ sp[(0)+-1]
 19101  017C84  0EFF               	movlw	-1
 19102  017C86  50E3               	movf	plusw1,w,c
 19103  017C88  0D80               	mullw	128
 19104  017C8A  0E00               	movlw	low mconfig@D
 19105  017C8C  6E41               	movwf	(btemp+10)^0,c
 19106  017C8E  0E07               	movlw	high mconfig@D
 19107  017C90  6E42               	movwf	(btemp+11)^0,c
 19108  017C92  50F3               	movf	243,w,c
 19109  017C94  2641               	addwf	(btemp+10)^0,f,c
 19110  017C96  50F4               	movf	244,w,c
 19111  017C98  2242               	addwfc	(btemp+11)^0,f,c
 19112  017C9A  0060  F107  FFE6   	movff	btemp+10,postinc1
 19113  017CA0  0060  F10B  FFE6   	movff	btemp+11,postinc1
 19114  017CA6  0E00               	movlw	0
 19115  017CA8  6EE6               	movwf	postinc1,c
 19116  017CAA  0E00               	movlw	0
 19117  017CAC  6EE6               	movwf	postinc1,c
 19118  017CAE  EC4B  F0C9         	call	_eaDogM_WriteStringAtPos	;wreg free
 19119                           
 19120                           ; BSR set to: 59
 19121                           ;mconfig.c: 94:  wait_lcd_done();
 19122  017CB2  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 19126                           ;stkvar	_vterm @ sp[(0)+-1]
 19127  017CB6  0EFF               	movlw	-1
 19128  017CB8  50E3               	movf	plusw1,w,c
 19129  017CBA  0D80               	mullw	128
 19130  017CBC  0E00               	movlw	low mconfig@D
 19131  017CBE  6E41               	movwf	(btemp+10)^0,c
 19132  017CC0  0E07               	movlw	high mconfig@D
 19133  017CC2  6E42               	movwf	(btemp+11)^0,c
 19134  017CC4  0E20               	movlw	32
 19135  017CC6  2641               	addwf	(btemp+10)^0,f,c
 19136  017CC8  0E00               	movlw	0
 19137  017CCA  2242               	addwfc	(btemp+11)^0,f,c
 19138  017CCC  50F3               	movf	243,w,c
 19139  017CCE  2641               	addwf	(btemp+10)^0,f,c
 19140  017CD0  50F4               	movf	244,w,c
 19141  017CD2  2242               	addwfc	(btemp+11)^0,f,c
 19142  017CD4  0060  F107  FFE6   	movff	btemp+10,postinc1
 19143  017CDA  0060  F10B  FFE6   	movff	btemp+11,postinc1
 19144  017CE0  0E00               	movlw	0
 19145  017CE2  6EE6               	movwf	postinc1,c
 19146  017CE4  0E01               	movlw	1
 19147  017CE6  6EE6               	movwf	postinc1,c
 19148  017CE8  EC4B  F0C9         	call	_eaDogM_WriteStringAtPos	;wreg free
 19149                           
 19150                           ; BSR set to: 59
 19151                           ;mconfig.c: 96:  wait_lcd_done();
 19152  017CEC  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 19156                           ;stkvar	_vterm @ sp[(0)+-1]
 19157  017CF0  0EFF               	movlw	-1
 19158  017CF2  50E3               	movf	plusw1,w,c
 19159  017CF4  0D80               	mullw	128
 19160  017CF6  0E00               	movlw	low mconfig@D
 19161  017CF8  6E41               	movwf	(btemp+10)^0,c
 19162  017CFA  0E07               	movlw	high mconfig@D
 19163  017CFC  6E42               	movwf	(btemp+11)^0,c
 19164  017CFE  0E40               	movlw	64
 19165  017D00  2641               	addwf	(btemp+10)^0,f,c
 19166  017D02  0E00               	movlw	0
 19167  017D04  2242               	addwfc	(btemp+11)^0,f,c
 19168  017D06  50F3               	movf	243,w,c
 19169  017D08  2641               	addwf	(btemp+10)^0,f,c
 19170  017D0A  50F4               	movf	244,w,c
 19171  017D0C  2242               	addwfc	(btemp+11)^0,f,c
 19172  017D0E  0060  F107  FFE6   	movff	btemp+10,postinc1
 19173  017D14  0060  F10B  FFE6   	movff	btemp+11,postinc1
 19174  017D1A  0E00               	movlw	0
 19175  017D1C  6EE6               	movwf	postinc1,c
 19176  017D1E  0E02               	movlw	2
 19177  017D20  6EE6               	movwf	postinc1,c
 19178  017D22  EC4B  F0C9         	call	_eaDogM_WriteStringAtPos	;wreg free
 19179  017D26                     l2219:
 19180                           
 19181                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 19182  017D26  52E5               	movf	postdec1,f,c
 19183  017D28  0012               	return		;funcret
 19184  017D2A                     __end_of_update_lcd:
 19185                           	opt callstack 0
 19186                           
 19187 ;; *************** function _eaDogM_WriteStringAtPos *****************
 19188 ;; Defined at:
 19189 ;;		line 252 in file "eadog.c"
 19190 ;; Parameters:    Size  Location     Type
 19191 ;;  r               1  [STACK] const unsigned char 
 19192 ;;  c               1  [STACK] const unsigned char 
 19193 ;;  strPtr          2  [STACK] PTR unsigned char 
 19194 ;;		 -> D.lcd(512), mconfig@D(514), V(387), 
 19195 ;; Auto vars:     Size  Location     Type
 19196 ;;		None
 19197 ;; Return value:  Size  Location     Type
 19198 ;;                  1  [STACK] void 
 19199 ;; Registers used:
 19200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 19201 ;; Tracked objects:
 19202 ;;		On entry : 3F/0
 19203 ;;		On exit  : 3F/3B
 19204 ;;		Unchanged: 0/0
 19205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19210 ;;Total ram usage:        0 bytes
 19211 ;; Hardware stack levels used:    1
 19212 ;; Hardware stack levels required when called:   13
 19213 ;; This function calls:
 19214 ;;		_eaDogM_WriteString
 19215 ;;		_send_lcd_cmd_dma
 19216 ;; This function is called by:
 19217 ;;		_update_lcd
 19218 ;;		_vterm_dump
 19219 ;;		_MyeaDogM_WriteStringAtPos
 19220 ;; This function uses a reentrant model
 19221 ;;
 19222                           
 19223                           	psect	text80
 19224  019296                     __ptext80:
 19225                           	opt callstack 0
 19226  019296                     _eaDogM_WriteStringAtPos:
 19227                           	opt callstack 16
 19228                           
 19229                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
 19230                           ;stkvar	_c @ sp[(0)+-2]
 19231                           
 19232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19233                           ;incstack = 0
 19234  019296  0EFE               	movlw	-2
 19235  019298  006F FF8C  F042    	movff	plusw1,btemp+11
 19236                           
 19237                           ;stkvar	_r @ sp[(0)+-1]
 19238  01929E  0EFF               	movlw	-1
 19239  0192A0  50E3               	movf	plusw1,w,c
 19240  0192A2  0D10               	mullw	16
 19241  0192A4  50F3               	movf	243,w,c
 19242  0192A6  2442               	addwf	(btemp+11)^0,w,c
 19243  0192A8  0F80               	addlw	128
 19244  0192AA  6EE6               	movwf	postinc1,c
 19245  0192AC  ECC2  F0C6         	call	_send_lcd_cmd_dma	;wreg free
 19246                           
 19247                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
 19248                           ;stkvar	_strPtr @ sp[(0)+-4]
 19249  0192B0  0EFC               	movlw	-4
 19250  0192B2  006F FF8F FFE6     	movff	plusw1,postinc1
 19251  0192B8  006F FF8F FFE6     	movff	plusw1,postinc1
 19252  0192BE  EC4B  F0C2         	call	_eaDogM_WriteString	;wreg free
 19253                           
 19254                           ; BSR set to: 59
 19255                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 19256  0192C2  52E5               	movf	postdec1,f,c
 19257  0192C4  52E5               	movf	postdec1,f,c
 19258  0192C6  52E5               	movf	postdec1,f,c
 19259  0192C8  52E5               	movf	postdec1,f,c
 19260  0192CA  0012               	return		;funcret
 19261  0192CC                     __end_of_eaDogM_WriteStringAtPos:
 19262                           	opt callstack 0
 19263                           
 19264 ;; *************** function _send_lcd_cmd_dma *****************
 19265 ;; Defined at:
 19266 ;;		line 205 in file "eadog.c"
 19267 ;; Parameters:    Size  Location     Type
 19268 ;;  strPtr          1  [STACK] unsigned char 
 19269 ;; Auto vars:     Size  Location     Type
 19270 ;;		None
 19271 ;; Return value:  Size  Location     Type
 19272 ;;                  1  [STACK] void 
 19273 ;; Registers used:
 19274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/3D
 19277 ;;		On exit  : 3F/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19284 ;;Total ram usage:        0 bytes
 19285 ;; Hardware stack levels used:    1
 19286 ;; Hardware stack levels required when called:   12
 19287 ;; This function calls:
 19288 ;;		_printf
 19289 ;;		_ringBufS_flush
 19290 ;;		_start_lcd
 19291 ;;		_wait_lcd_done
 19292 ;;		_wait_lcd_set
 19293 ;; This function is called by:
 19294 ;;		_eaDogM_WriteCommand
 19295 ;;		_eaDogM_WriteStringAtPos
 19296 ;; This function uses a reentrant model
 19297 ;;
 19298                           
 19299                           	psect	text81
 19300  018D84                     __ptext81:
 19301                           	opt callstack 0
 19302  018D84                     _send_lcd_cmd_dma:
 19303                           	opt callstack 16
 19304                           
 19305                           ; BSR set to: 59
 19306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19307                           ;incstack = 0
 19308                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 207:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 19309  018D84  84BE               	bsf	190,2,c	;volatile
 19310                           
 19311                           ;eadog.c: 208:  wait_lcd_set();
 19312  018D86  EC69  F0CD         	call	_wait_lcd_set	;wreg free
 19313                           
 19314                           ; BSR set to: 0
 19315                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
 19316  018D8A  0E00               	movlw	0
 19317  018D8C  6EE6               	movwf	postinc1,c
 19318  018D8E  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 19319  018D94  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 19320  018D9A  EC44  F0C3         	call	_ringBufS_flush	;wreg free
 19321  018D9E  92BC               	bcf	188,1,c	;volatile
 19322  018DA0  94BC               	bcf	188,2,c	;volatile
 19323                           
 19324                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
 19325  018DA2  013B               	movlb	59	; () banked
 19326  018DA4  9FFC               	bcf	252,7,b	;volatile
 19327                           
 19328                           ; BSR set to: 59
 19329                           ;eadog.c: 214:  DMA1SSZ = 1;
 19330  018DA6  0E00               	movlw	0
 19331  018DA8  6FF8               	movwf	248,b	;volatile
 19332  018DAA  0E01               	movlw	1
 19333  018DAC  6FF7               	movwf	247,b	;volatile
 19334                           
 19335                           ; BSR set to: 59
 19336                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
 19337  018DAE  8FFC               	bsf	252,7,b	;volatile
 19338                           
 19339                           ; BSR set to: 59
 19340                           ;eadog.c: 216:  printf("%c", strPtr);
 19341                           ;stkvar	_strPtr @ sp[(0)+-1]
 19342  018DB0  0EFF               	movlw	-1
 19343  018DB2  50E3               	movf	plusw1,w,c
 19344  018DB4  6EE6               	movwf	postinc1,c
 19345  018DB6  0E00               	movlw	0
 19346  018DB8  6EE6               	movwf	postinc1,c
 19347  018DBA  0EF8               	movlw	low STR_27
 19348  018DBC  6EE6               	movwf	postinc1,c
 19349  018DBE  0EFF               	movlw	high STR_27
 19350  018DC0  6EE6               	movwf	postinc1,c
 19351  018DC2  0E04               	movlw	4
 19352  018DC4  6EE6               	movwf	postinc1,c
 19353  018DC6  ECD9  F0C5         	call	_printf	;wreg free
 19354                           
 19355                           ;eadog.c: 217:  start_lcd();
 19356  018DCA  EC6C  F0CD         	call	_start_lcd	;wreg free
 19357                           
 19358                           ; BSR set to: 59
 19359                           ;eadog.c: 218:  wait_lcd_done();
 19360  018DCE  EC94  F0CC         	call	_wait_lcd_done	;wreg free
 19361                           
 19362                           ; BSR set to: 0
 19363  018DD2  82BC               	bsf	188,1,c	;volatile
 19364                           
 19365                           ; BSR set to: 0
 19366                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19367  018DD4  52E5               	movf	postdec1,f,c
 19368  018DD6  0012               	return		;funcret
 19369  018DD8                     __end_of_send_lcd_cmd_dma:
 19370                           	opt callstack 0
 19371                           
 19372 ;; *************** function _wait_lcd_done *****************
 19373 ;; Defined at:
 19374 ;;		line 141 in file "eadog.c"
 19375 ;; Parameters:    Size  Location     Type
 19376 ;;		None
 19377 ;; Auto vars:     Size  Location     Type
 19378 ;;		None
 19379 ;; Return value:  Size  Location     Type
 19380 ;;                  1  [STACK] void 
 19381 ;; Registers used:
 19382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 19383 ;; Tracked objects:
 19384 ;;		On entry : 0/0
 19385 ;;		On exit  : 3F/0
 19386 ;;		Unchanged: 0/0
 19387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19392 ;;Total ram usage:        0 bytes
 19393 ;; Hardware stack levels used:    1
 19394 ;; Hardware stack levels required when called:    4
 19395 ;; This function calls:
 19396 ;;		_wdtdelay
 19397 ;; This function is called by:
 19398 ;;		_send_lcd_cmd_dma
 19399 ;;		_update_lcd
 19400 ;;		_vterm_dump
 19401 ;;		_MyeaDogM_WriteStringAtPos
 19402 ;; This function uses a reentrant model
 19403 ;;
 19404                           
 19405                           	psect	text82
 19406  019928                     __ptext82:
 19407                           	opt callstack 0
 19408  019928                     _wait_lcd_done:
 19409                           	opt callstack 25
 19410                           
 19411                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
 19412                           
 19413                           ; BSR set to: 0
 19414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19415                           ;incstack = 0
 19416  019928  0100               	movlb	0	; () banked
 19417  01992A  B787               	btfsc	_spi_link& (0+255),3,b	;volatile
 19418  01992C  D7FD               	goto	_wait_lcd_done
 19419                           
 19420                           ; BSR set to: 0
 19421                           ;eadog.c: 144:  wdtdelay(50);
 19422  01992E  0E32               	movlw	50
 19423  019930  6EE6               	movwf	postinc1,c
 19424  019932  0E00               	movlw	0
 19425  019934  6EE6               	movwf	postinc1,c
 19426  019936  0E00               	movlw	0
 19427  019938  6EE6               	movwf	postinc1,c
 19428  01993A  0E00               	movlw	0
 19429  01993C  6EE6               	movwf	postinc1,c
 19430  01993E  EC95  F0C6         	call	_wdtdelay	;wreg free
 19431                           
 19432                           ; BSR set to: 0
 19433                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 19434  019942  0012               	return		;funcret
 19435  019944                     __end_of_wait_lcd_done:
 19436                           	opt callstack 0
 19437                           
 19438 ;; *************** function _wdtdelay *****************
 19439 ;; Defined at:
 19440 ;;		line 22 in file "eadog.c"
 19441 ;; Parameters:    Size  Location     Type
 19442 ;;  delay           4  [STACK] const unsigned long 
 19443 ;; Auto vars:     Size  Location     Type
 19444 ;;		None
 19445 ;; Return value:  Size  Location     Type
 19446 ;;                  1  [STACK] void 
 19447 ;; Registers used:
 19448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 19449 ;; Tracked objects:
 19450 ;;		On entry : 0/0
 19451 ;;		On exit  : 3F/0
 19452 ;;		Unchanged: 0/0
 19453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19458 ;;Total ram usage:        0 bytes
 19459 ;; Hardware stack levels used:    1
 19460 ;; Hardware stack levels required when called:    3
 19461 ;; This function calls:
 19462 ;;		Nothing
 19463 ;; This function is called by:
 19464 ;;		_init_display
 19465 ;;		_send_lcd_cmd
 19466 ;;		_send_lcd_cmd_long
 19467 ;;		_wait_lcd_done
 19468 ;; This function uses a reentrant model
 19469 ;;
 19470                           
 19471                           	psect	text83
 19472  018D2A                     __ptext83:
 19473                           	opt callstack 0
 19474  018D2A                     _wdtdelay:
 19475                           	opt callstack 25
 19476                           
 19477                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
 19478                           
 19479                           ; BSR set to: 0
 19480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19481                           ;incstack = 0
 19482  018D2A  0100               	movlb	0	; () banked
 19483  018D2C  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 19484  018D2E  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 19485  018D30  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 19486  018D32  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 19487  018D34                     l1389:
 19488                           
 19489                           ; BSR set to: 0
 19490                           ;eadog.c: 27:   __nop();
 19491  018D34  F000               	nop	
 19492  018D36  0004               	clrwdt		;# 
 19493                           
 19494                           ;eadog.c: 29:  };
 19495  018D38  0E01               	movlw	1
 19496  018D3A  0100               	movlb	0	; () banked
 19497  018D3C  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 19498  018D3E  0E00               	movlw	0
 19499  018D40  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 19500  018D42  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 19501  018D44  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 19502                           
 19503                           ; BSR set to: 0
 19504                           ;stkvar	_delay @ sp[(0)+-4]
 19505  018D46  0EFC               	movlw	-4
 19506  018D48  006F FF8C  F037    	movff	plusw1,btemp
 19507  018D4E  519A               	movf	wdtdelay@dcount& (0+255),w,b
 19508  018D50  5C37               	subwf	btemp^0,w,c
 19509  018D52  0EFD               	movlw	-3
 19510  018D54  006F FF8C  F037    	movff	plusw1,btemp
 19511  018D5A  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 19512  018D5C  5837               	subwfb	btemp^0,w,c
 19513  018D5E  0EFE               	movlw	-2
 19514  018D60  006F FF8C  F037    	movff	plusw1,btemp
 19515  018D66  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 19516  018D68  5837               	subwfb	btemp^0,w,c
 19517  018D6A  0EFF               	movlw	-1
 19518  018D6C  006F FF8C  F037    	movff	plusw1,btemp
 19519  018D72  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 19520  018D74  5837               	subwfb	btemp^0,w,c
 19521  018D76  B0D8               	btfsc	status,0,c
 19522  018D78  D7DD               	goto	l1389
 19523                           
 19524                           ; BSR set to: 0
 19525                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 19526  018D7A  52E5               	movf	postdec1,f,c
 19527  018D7C  52E5               	movf	postdec1,f,c
 19528  018D7E  52E5               	movf	postdec1,f,c
 19529  018D80  52E5               	movf	postdec1,f,c
 19530  018D82  0012               	return		;funcret
 19531  018D84                     __end_of_wdtdelay:
 19532                           	opt callstack 0
 19533                           
 19534 ;; *************** function _eaDogM_WriteString *****************
 19535 ;; Defined at:
 19536 ;;		line 184 in file "eadog.c"
 19537 ;; Parameters:    Size  Location     Type
 19538 ;;  strPtr          2  [STACK] PTR unsigned char 
 19539 ;;		 -> D.lcd(512), mconfig@D(514), V(387), 
 19540 ;; Auto vars:     Size  Location     Type
 19541 ;;		None
 19542 ;; Return value:  Size  Location     Type
 19543 ;;                  1  [STACK] void 
 19544 ;; Registers used:
 19545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 19546 ;; Tracked objects:
 19547 ;;		On entry : 3F/0
 19548 ;;		On exit  : 3F/3B
 19549 ;;		Unchanged: 0/0
 19550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19555 ;;Total ram usage:        0 bytes
 19556 ;; Hardware stack levels used:    1
 19557 ;; Hardware stack levels required when called:   12
 19558 ;; This function calls:
 19559 ;;		_printf
 19560 ;;		_ringBufS_flush
 19561 ;;		_start_lcd
 19562 ;;		_strlen
 19563 ;;		_wait_lcd_set
 19564 ;; This function is called by:
 19565 ;;		_eaDogM_WriteStringAtPos
 19566 ;; This function uses a reentrant model
 19567 ;;
 19568                           
 19569                           	psect	text84
 19570  018496                     __ptext84:
 19571                           	opt callstack 0
 19572  018496                     _eaDogM_WriteString:
 19573                           	opt callstack 16
 19574                           
 19575                           ; BSR set to: 0
 19576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19577                           ;incstack = 0
 19578                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 186:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 19579  018496  84BE               	bsf	190,2,c	;volatile
 19580                           
 19581                           ;eadog.c: 187:  wait_lcd_set();
 19582  018498  EC69  F0CD         	call	_wait_lcd_set	;wreg free
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
 19586  01849C  0E00               	movlw	0
 19587  01849E  6EE6               	movwf	postinc1,c
 19588  0184A0  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 19589  0184A6  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 19590  0184AC  EC44  F0C3         	call	_ringBufS_flush	;wreg free
 19591  0184B0  94BC               	bcf	188,2,c	;volatile
 19592                           
 19593                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 19594                           ;stkvar	_strPtr @ sp[(0)+-2]
 19595  0184B2  0EFE               	movlw	-2
 19596  0184B4  006F FF8F FFE6     	movff	plusw1,postinc1
 19597  0184BA  006F FF8F FFE6     	movff	plusw1,postinc1
 19598  0184C0  ECF3  F0C2         	call	_strlen	;wreg free
 19599  0184C4  5038               	movf	(btemp+1)^0,w,c
 19600  0184C6  E104               	bnz	u10340
 19601  0184C8  0E41               	movlw	65
 19602  0184CA  5C37               	subwf	btemp^0,w,c
 19603  0184CC  A0D8               	btfss	status,0,c
 19604  0184CE  D010               	goto	l13925
 19605  0184D0                     u10340:
 19606                           
 19607                           ;stkvar	_strPtr @ sp[(0)+-2]
 19608  0184D0  0EFE               	movlw	-2
 19609  0184D2  006F FF8C  F041    	movff	plusw1,btemp+10
 19610  0184D8  0EFF               	movlw	-1
 19611  0184DA  006F FF8C  F042    	movff	plusw1,btemp+11
 19612  0184E0  0E40               	movlw	64
 19613  0184E2  2441               	addwf	(btemp+10)^0,w,c
 19614  0184E4  6ED9               	movwf	fsr2l,c
 19615  0184E6  0E00               	movlw	0
 19616  0184E8  2042               	addwfc	(btemp+11)^0,w,c
 19617  0184EA  6EDA               	movwf	fsr2h,c
 19618  0184EC  0E00               	movlw	0
 19619  0184EE  6EDF               	movwf	indf2,c
 19620  0184F0                     l13925:
 19621                           
 19622                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
 19623  0184F0  013B               	movlb	59	; () banked
 19624  0184F2  9FFC               	bcf	252,7,b	;volatile
 19625                           
 19626                           ; BSR set to: 59
 19627                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
 19628                           ;stkvar	_strPtr @ sp[(0)+-2]
 19629  0184F4  0EFE               	movlw	-2
 19630  0184F6  006F FF8F FFE6     	movff	plusw1,postinc1
 19631  0184FC  006F FF8F FFE6     	movff	plusw1,postinc1
 19632  018502  ECF3  F0C2         	call	_strlen	;wreg free
 19633  018506  0060  F0DF  FBF7   	movff	btemp,15351	;volatile
 19634  01850C  0060  F0E3  FBF8   	movff	btemp+1,15352	;volatile
 19635                           
 19636                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
 19637  018512  013B               	movlb	59	; () banked
 19638  018514  8FFC               	bsf	252,7,b	;volatile
 19639                           
 19640                           ; BSR set to: 59
 19641                           ;eadog.c: 195:  printf("%s", strPtr);
 19642                           ;stkvar	_strPtr @ sp[(0)+-2]
 19643  018516  0EFE               	movlw	-2
 19644  018518  006F FF8F FFE6     	movff	plusw1,postinc1
 19645  01851E  006F FF8F FFE6     	movff	plusw1,postinc1
 19646  018524  0EFB               	movlw	low STR_26
 19647  018526  6EE6               	movwf	postinc1,c
 19648  018528  0EFF               	movlw	high STR_26
 19649  01852A  6EE6               	movwf	postinc1,c
 19650  01852C  0E04               	movlw	4
 19651  01852E  6EE6               	movwf	postinc1,c
 19652  018530  ECD9  F0C5         	call	_printf	;wreg free
 19653                           
 19654                           ;eadog.c: 196:  start_lcd();
 19655  018534  EC6C  F0CD         	call	_start_lcd	;wreg free
 19656                           
 19657                           ; BSR set to: 59
 19658                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19659  018538  52E5               	movf	postdec1,f,c
 19660  01853A  52E5               	movf	postdec1,f,c
 19661  01853C  0012               	return		;funcret
 19662  01853E                     __end_of_eaDogM_WriteString:
 19663                           	opt callstack 0
 19664                           
 19665 ;; *************** function _wait_lcd_set *****************
 19666 ;; Defined at:
 19667 ;;		line 131 in file "eadog.c"
 19668 ;; Parameters:    Size  Location     Type
 19669 ;;		None
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;		None
 19672 ;; Return value:  Size  Location     Type
 19673 ;;                  1  [STACK] void 
 19674 ;; Registers used:
 19675 ;;		None
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/3D
 19678 ;;		On exit  : 3F/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19685 ;;Total ram usage:        0 bytes
 19686 ;; Hardware stack levels used:    1
 19687 ;; Hardware stack levels required when called:    3
 19688 ;; This function calls:
 19689 ;;		Nothing
 19690 ;; This function is called by:
 19691 ;;		_eaDogM_WriteString
 19692 ;;		_send_lcd_cmd_dma
 19693 ;; This function uses a reentrant model
 19694 ;;
 19695                           
 19696                           	psect	text85
 19697  019AD2                     __ptext85:
 19698                           	opt callstack 0
 19699  019AD2                     _wait_lcd_set:
 19700                           	opt callstack 24
 19701                           
 19702                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
 19703                           
 19704                           ; BSR set to: 59
 19705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19706                           ;incstack = 0
 19707  019AD2  0100               	movlb	0	; () banked
 19708  019AD4  8787               	bsf	_spi_link& (0+255),3,b	;volatile
 19709                           
 19710                           ; BSR set to: 0
 19711                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19712  019AD6  0012               	return		;funcret
 19713  019AD8                     __end_of_wait_lcd_set:
 19714                           	opt callstack 0
 19715                           
 19716 ;; *************** function _start_lcd *****************
 19717 ;; Defined at:
 19718 ;;		line 126 in file "eadog.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;		None
 19721 ;; Auto vars:     Size  Location     Type
 19722 ;;		None
 19723 ;; Return value:  Size  Location     Type
 19724 ;;                  1  [STACK] void 
 19725 ;; Registers used:
 19726 ;;		None
 19727 ;; Tracked objects:
 19728 ;;		On entry : 0/3B
 19729 ;;		On exit  : 3F/3B
 19730 ;;		Unchanged: 0/0
 19731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19736 ;;Total ram usage:        0 bytes
 19737 ;; Hardware stack levels used:    1
 19738 ;; Hardware stack levels required when called:    3
 19739 ;; This function calls:
 19740 ;;		Nothing
 19741 ;; This function is called by:
 19742 ;;		_eaDogM_WriteString
 19743 ;;		_send_lcd_cmd_dma
 19744 ;; This function uses a reentrant model
 19745 ;;
 19746                           
 19747                           	psect	text86
 19748  019AD8                     __ptext86:
 19749                           	opt callstack 0
 19750  019AD8                     _start_lcd:
 19751                           	opt callstack 24
 19752                           
 19753                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
 19754                           
 19755                           ; BSR set to: 0
 19756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19757                           ;incstack = 0
 19758  019AD8  013B               	movlb	59	; () banked
 19759  019ADA  8DFC               	bsf	252,6,b	;volatile
 19760                           
 19761                           ; BSR set to: 59
 19762                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 19763  019ADC  0012               	return		;funcret
 19764  019ADE                     __end_of_start_lcd:
 19765                           	opt callstack 0
 19766                           
 19767 ;; *************** function _ringBufS_flush *****************
 19768 ;; Defined at:
 19769 ;;		line 76 in file "ringbufs.c"
 19770 ;; Parameters:    Size  Location     Type
 19771 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19772 ;;		 -> ring_buf1(67), 
 19773 ;;  clearBuffer     1  [STACK] const char 
 19774 ;; Auto vars:     Size  Location     Type
 19775 ;;		None
 19776 ;; Return value:  Size  Location     Type
 19777 ;;                  1  [STACK] void 
 19778 ;; Registers used:
 19779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 19780 ;; Tracked objects:
 19781 ;;		On entry : 3F/0
 19782 ;;		On exit  : 0/0
 19783 ;;		Unchanged: 0/0
 19784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19789 ;;Total ram usage:        0 bytes
 19790 ;; Hardware stack levels used:    1
 19791 ;; Hardware stack levels required when called:    4
 19792 ;; This function calls:
 19793 ;;		_memset
 19794 ;; This function is called by:
 19795 ;;		_eaDogM_WriteString
 19796 ;;		_send_lcd_cmd_dma
 19797 ;; This function uses a reentrant model
 19798 ;;
 19799                           
 19800                           	psect	text87
 19801  018688                     __ptext87:
 19802                           	opt callstack 0
 19803  018688                     _ringBufS_flush:
 19804                           	opt callstack 23
 19805                           
 19806                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 19807                           ;stkvar	__this @ sp[(0)+-2]
 19808                           
 19809                           ; BSR set to: 59
 19810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19811                           ;incstack = 0
 19812  018688  0EFE               	movlw	-2
 19813  01868A  006F FF8C  F041    	movff	plusw1,btemp+10
 19814  018690  0EFF               	movlw	-1
 19815  018692  006F FF8C  F042    	movff	plusw1,btemp+11
 19816  018698  0E42               	movlw	66
 19817  01869A  2441               	addwf	(btemp+10)^0,w,c
 19818  01869C  6ED9               	movwf	fsr2l,c
 19819  01869E  0E00               	movlw	0
 19820  0186A0  2042               	addwfc	(btemp+11)^0,w,c
 19821  0186A2  6EDA               	movwf	fsr2h,c
 19822  0186A4  0E00               	movlw	0
 19823  0186A6  6EDF               	movwf	indf2,c
 19824                           
 19825                           ;ringbufs.c: 79:  _this->head = 0;
 19826                           ;stkvar	__this @ sp[(0)+-2]
 19827  0186A8  0EFE               	movlw	-2
 19828  0186AA  006F FF8C  F041    	movff	plusw1,btemp+10
 19829  0186B0  0EFF               	movlw	-1
 19830  0186B2  006F FF8C  F042    	movff	plusw1,btemp+11
 19831  0186B8  0E40               	movlw	64
 19832  0186BA  2441               	addwf	(btemp+10)^0,w,c
 19833  0186BC  6ED9               	movwf	fsr2l,c
 19834  0186BE  0E00               	movlw	0
 19835  0186C0  2042               	addwfc	(btemp+11)^0,w,c
 19836  0186C2  6EDA               	movwf	fsr2h,c
 19837  0186C4  0E00               	movlw	0
 19838  0186C6  6EDF               	movwf	indf2,c
 19839                           
 19840                           ;ringbufs.c: 80:  _this->tail = 0;
 19841                           ;stkvar	__this @ sp[(0)+-2]
 19842  0186C8  0EFE               	movlw	-2
 19843  0186CA  006F FF8C  F041    	movff	plusw1,btemp+10
 19844  0186D0  0EFF               	movlw	-1
 19845  0186D2  006F FF8C  F042    	movff	plusw1,btemp+11
 19846  0186D8  0E41               	movlw	65
 19847  0186DA  2441               	addwf	(btemp+10)^0,w,c
 19848  0186DC  6ED9               	movwf	fsr2l,c
 19849  0186DE  0E00               	movlw	0
 19850  0186E0  2042               	addwfc	(btemp+11)^0,w,c
 19851  0186E2  6EDA               	movwf	fsr2h,c
 19852  0186E4  0E00               	movlw	0
 19853  0186E6  6EDF               	movwf	indf2,c
 19854                           
 19855                           ;ringbufs.c: 81:  if (clearBuffer) {
 19856                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 19857  0186E8  0EFD               	movlw	-3
 19858  0186EA  50E3               	movf	plusw1,w,c
 19859  0186EC  B4D8               	btfsc	status,2,c
 19860  0186EE  D011               	goto	l1535
 19861                           
 19862                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 19863  0186F0  0E40               	movlw	64
 19864  0186F2  6EE6               	movwf	postinc1,c
 19865  0186F4  0E00               	movlw	0
 19866  0186F6  6EE6               	movwf	postinc1,c
 19867  0186F8  0E00               	movlw	0
 19868  0186FA  6EE6               	movwf	postinc1,c
 19869  0186FC  0E00               	movlw	0
 19870  0186FE  6EE6               	movwf	postinc1,c
 19871                           
 19872                           ;stkvar	__this @ sp[(-4)+-2]
 19873  018700  0EFA               	movlw	-6
 19874  018702  006F FF8F FFE6     	movff	plusw1,postinc1
 19875  018708  006F FF8F FFE6     	movff	plusw1,postinc1
 19876  01870E  ECE1  F0A9         	call	_memset	;wreg free
 19877  018712                     l1535:
 19878                           
 19879                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 19880  018712  52E5               	movf	postdec1,f,c
 19881  018714  52E5               	movf	postdec1,f,c
 19882  018716  52E5               	movf	postdec1,f,c
 19883  018718  0012               	return		;funcret
 19884  01871A                     __end_of_ringBufS_flush:
 19885                           	opt callstack 0
 19886                           
 19887 ;; *************** function _memset *****************
 19888 ;; Defined at:
 19889 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 19890 ;; Parameters:    Size  Location     Type
 19891 ;;  dest            2  [STACK] PTR void 
 19892 ;;		 -> ring_buf2(67), ring_buf1(67), 
 19893 ;;  c               2  [STACK] int 
 19894 ;;  n               2  [STACK] unsigned int 
 19895 ;; Auto vars:     Size  Location     Type
 19896 ;;  s               2  [STACK] PTR unsigned char 
 19897 ;;		 -> ring_buf2(67), ring_buf1(67), 
 19898 ;;  k               2  [STACK] unsigned int 
 19899 ;; Return value:  Size  Location     Type
 19900 ;;                  2  [STACK] PTR void 
 19901 ;; Registers used:
 19902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 19903 ;; Tracked objects:
 19904 ;;		On entry : 0/0
 19905 ;;		On exit  : 0/0
 19906 ;;		Unchanged: 0/0
 19907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19912 ;;Total ram usage:        0 bytes
 19913 ;; Hardware stack levels used:    1
 19914 ;; Hardware stack levels required when called:    3
 19915 ;; This function calls:
 19916 ;;		Nothing
 19917 ;; This function is called by:
 19918 ;;		_ringBufS_init
 19919 ;;		_ringBufS_flush
 19920 ;; This function uses a reentrant model
 19921 ;;
 19922                           
 19923                           	psect	text88
 19924  0153C2                     __ptext88:
 19925                           	opt callstack 0
 19926  0153C2                     _memset:
 19927                           	opt callstack 0
 19928                           
 19929                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19930  0153C2  52E6               	movf	postinc1,f,c
 19931  0153C4  52E6               	movf	postinc1,f,c
 19932  0153C6  52E6               	movf	postinc1,f,c
 19933  0153C8  52E6               	movf	postinc1,f,c
 19934                           
 19935                           ;stkvar	_dest @ sp[(-4)+-2]
 19936                           
 19937                           ;incstack = 0
 19938  0153CA  0EFA               	movlw	-6
 19939  0153CC  006F FF8C  F041    	movff	plusw1,btemp+10
 19940  0153D2  0EFB               	movlw	-5
 19941  0153D4  006F FF8C  F042    	movff	plusw1,btemp+11
 19942                           
 19943                           ;stkvar	_s @ sp[(-4)+0]
 19944  0153DA  0EFD               	movlw	-3
 19945  0153DC  0060  F10B  FFE3   	movff	btemp+11,plusw1
 19946  0153E2  0EFC               	movlw	-4
 19947  0153E4  0060  F107  FFE3   	movff	btemp+10,plusw1
 19948                           
 19949                           ;stkvar	_n @ sp[(-4)+-6]
 19950  0153EA  0EF6               	movlw	-10
 19951  0153EC  006F FF8C  F037    	movff	plusw1,btemp
 19952  0153F2  0EF7               	movlw	-9
 19953  0153F4  50E3               	movf	plusw1,w,c
 19954  0153F6  1037               	iorwf	btemp^0,w,c
 19955  0153F8  B4D8               	btfsc	status,2,c
 19956  0153FA  D154               	goto	u10310
 19957                           
 19958                           ;stkvar	_c @ sp[(-4)+-4]
 19959                           ;stkvar	_s @ sp[(-4)+0]
 19960  0153FC  0EFC               	movlw	-4
 19961  0153FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19962  015404  0EFD               	movlw	-3
 19963  015406  006F FF8F FFDA     	movff	plusw1,fsr2h
 19964  01540C  0EF8               	movlw	-8
 19965  01540E  006F FF8F FFDF     	movff	plusw1,indf2
 19966                           
 19967                           ;stkvar	_c @ sp[(-4)+-4]
 19968                           ;stkvar	_n @ sp[(-4)+-6]
 19969                           ;stkvar	_s @ sp[(-4)+0]
 19970  015414  0EFC               	movlw	-4
 19971  015416  006F FF8C  F041    	movff	plusw1,btemp+10
 19972  01541C  0EFD               	movlw	-3
 19973  01541E  006F FF8C  F042    	movff	plusw1,btemp+11
 19974  015424  0EF6               	movlw	-10
 19975  015426  50E3               	movf	plusw1,w,c
 19976  015428  2641               	addwf	(btemp+10)^0,f,c
 19977  01542A  0EF7               	movlw	-9
 19978  01542C  50E3               	movf	plusw1,w,c
 19979  01542E  2242               	addwfc	(btemp+11)^0,f,c
 19980  015430  0EFF               	movlw	255
 19981  015432  2441               	addwf	(btemp+10)^0,w,c
 19982  015434  6ED9               	movwf	fsr2l,c
 19983  015436  0EFF               	movlw	255
 19984  015438  2042               	addwfc	(btemp+11)^0,w,c
 19985  01543A  6EDA               	movwf	fsr2h,c
 19986  01543C  0EF8               	movlw	-8
 19987  01543E  006F FF8F FFDF     	movff	plusw1,indf2
 19988                           
 19989                           ;stkvar	_n @ sp[(-4)+-6]
 19990  015444  0EF7               	movlw	-9
 19991  015446  50E3               	movf	plusw1,w,c
 19992  015448  E108               	bnz	l13831
 19993  01544A  0EF6               	movlw	-10
 19994  01544C  006F FF8C  F037    	movff	plusw1,btemp
 19995  015452  0E03               	movlw	3
 19996  015454  5E37               	subwf	btemp^0,f,c
 19997  015456  A0D8               	btfss	status,0,c
 19998  015458  D125               	goto	u10310
 19999  01545A                     l13831:
 20000                           
 20001                           ;stkvar	_c @ sp[(-4)+-4]
 20002                           ;stkvar	_s @ sp[(-4)+0]
 20003  01545A  0EFC               	movlw	-4
 20004  01545C  006F FF8C  F041    	movff	plusw1,btemp+10
 20005  015462  0EFD               	movlw	-3
 20006  015464  006F FF8C  F042    	movff	plusw1,btemp+11
 20007  01546A  0E01               	movlw	1
 20008  01546C  2441               	addwf	(btemp+10)^0,w,c
 20009  01546E  6ED9               	movwf	fsr2l,c
 20010  015470  0E00               	movlw	0
 20011  015472  2042               	addwfc	(btemp+11)^0,w,c
 20012  015474  6EDA               	movwf	fsr2h,c
 20013  015476  0EF8               	movlw	-8
 20014  015478  006F FF8F FFDF     	movff	plusw1,indf2
 20015                           
 20016                           ;stkvar	_c @ sp[(-4)+-4]
 20017                           ;stkvar	_s @ sp[(-4)+0]
 20018  01547E  0EFC               	movlw	-4
 20019  015480  006F FF8C  F041    	movff	plusw1,btemp+10
 20020  015486  0EFD               	movlw	-3
 20021  015488  006F FF8C  F042    	movff	plusw1,btemp+11
 20022  01548E  0E02               	movlw	2
 20023  015490  2441               	addwf	(btemp+10)^0,w,c
 20024  015492  6ED9               	movwf	fsr2l,c
 20025  015494  0E00               	movlw	0
 20026  015496  2042               	addwfc	(btemp+11)^0,w,c
 20027  015498  6EDA               	movwf	fsr2h,c
 20028  01549A  0EF8               	movlw	-8
 20029  01549C  006F FF8F FFDF     	movff	plusw1,indf2
 20030                           
 20031                           ;stkvar	_c @ sp[(-4)+-4]
 20032                           ;stkvar	_n @ sp[(-4)+-6]
 20033                           ;stkvar	_s @ sp[(-4)+0]
 20034  0154A2  0EFC               	movlw	-4
 20035  0154A4  006F FF8C  F041    	movff	plusw1,btemp+10
 20036  0154AA  0EFD               	movlw	-3
 20037  0154AC  006F FF8C  F042    	movff	plusw1,btemp+11
 20038  0154B2  0EF6               	movlw	-10
 20039  0154B4  50E3               	movf	plusw1,w,c
 20040  0154B6  2641               	addwf	(btemp+10)^0,f,c
 20041  0154B8  0EF7               	movlw	-9
 20042  0154BA  50E3               	movf	plusw1,w,c
 20043  0154BC  2242               	addwfc	(btemp+11)^0,f,c
 20044  0154BE  0EFE               	movlw	254
 20045  0154C0  2441               	addwf	(btemp+10)^0,w,c
 20046  0154C2  6ED9               	movwf	fsr2l,c
 20047  0154C4  0EFF               	movlw	255
 20048  0154C6  2042               	addwfc	(btemp+11)^0,w,c
 20049  0154C8  6EDA               	movwf	fsr2h,c
 20050  0154CA  0EF8               	movlw	-8
 20051  0154CC  006F FF8F FFDF     	movff	plusw1,indf2
 20052                           
 20053                           ;stkvar	_c @ sp[(-4)+-4]
 20054                           ;stkvar	_n @ sp[(-4)+-6]
 20055                           ;stkvar	_s @ sp[(-4)+0]
 20056  0154D2  0EFC               	movlw	-4
 20057  0154D4  006F FF8C  F041    	movff	plusw1,btemp+10
 20058  0154DA  0EFD               	movlw	-3
 20059  0154DC  006F FF8C  F042    	movff	plusw1,btemp+11
 20060  0154E2  0EF6               	movlw	-10
 20061  0154E4  50E3               	movf	plusw1,w,c
 20062  0154E6  2641               	addwf	(btemp+10)^0,f,c
 20063  0154E8  0EF7               	movlw	-9
 20064  0154EA  50E3               	movf	plusw1,w,c
 20065  0154EC  2242               	addwfc	(btemp+11)^0,f,c
 20066  0154EE  0EFD               	movlw	253
 20067  0154F0  2441               	addwf	(btemp+10)^0,w,c
 20068  0154F2  6ED9               	movwf	fsr2l,c
 20069  0154F4  0EFF               	movlw	255
 20070  0154F6  2042               	addwfc	(btemp+11)^0,w,c
 20071  0154F8  6EDA               	movwf	fsr2h,c
 20072  0154FA  0EF8               	movlw	-8
 20073  0154FC  006F FF8F FFDF     	movff	plusw1,indf2
 20074                           
 20075                           ;stkvar	_n @ sp[(-4)+-6]
 20076  015502  0EF7               	movlw	-9
 20077  015504  50E3               	movf	plusw1,w,c
 20078  015506  E108               	bnz	l13837
 20079  015508  0EF6               	movlw	-10
 20080  01550A  006F FF8C  F037    	movff	plusw1,btemp
 20081  015510  0E07               	movlw	7
 20082  015512  5E37               	subwf	btemp^0,f,c
 20083  015514  A0D8               	btfss	status,0,c
 20084  015516  D0C6               	goto	u10310
 20085  015518                     l13837:
 20086                           
 20087                           ;stkvar	_c @ sp[(-4)+-4]
 20088                           ;stkvar	_s @ sp[(-4)+0]
 20089  015518  0EFC               	movlw	-4
 20090  01551A  006F FF8C  F041    	movff	plusw1,btemp+10
 20091  015520  0EFD               	movlw	-3
 20092  015522  006F FF8C  F042    	movff	plusw1,btemp+11
 20093  015528  0E03               	movlw	3
 20094  01552A  2441               	addwf	(btemp+10)^0,w,c
 20095  01552C  6ED9               	movwf	fsr2l,c
 20096  01552E  0E00               	movlw	0
 20097  015530  2042               	addwfc	(btemp+11)^0,w,c
 20098  015532  6EDA               	movwf	fsr2h,c
 20099  015534  0EF8               	movlw	-8
 20100  015536  006F FF8F FFDF     	movff	plusw1,indf2
 20101                           
 20102                           ;stkvar	_c @ sp[(-4)+-4]
 20103                           ;stkvar	_n @ sp[(-4)+-6]
 20104                           ;stkvar	_s @ sp[(-4)+0]
 20105  01553C  0EFC               	movlw	-4
 20106  01553E  006F FF8C  F041    	movff	plusw1,btemp+10
 20107  015544  0EFD               	movlw	-3
 20108  015546  006F FF8C  F042    	movff	plusw1,btemp+11
 20109  01554C  0EF6               	movlw	-10
 20110  01554E  50E3               	movf	plusw1,w,c
 20111  015550  2641               	addwf	(btemp+10)^0,f,c
 20112  015552  0EF7               	movlw	-9
 20113  015554  50E3               	movf	plusw1,w,c
 20114  015556  2242               	addwfc	(btemp+11)^0,f,c
 20115  015558  0EFC               	movlw	252
 20116  01555A  2441               	addwf	(btemp+10)^0,w,c
 20117  01555C  6ED9               	movwf	fsr2l,c
 20118  01555E  0EFF               	movlw	255
 20119  015560  2042               	addwfc	(btemp+11)^0,w,c
 20120  015562  6EDA               	movwf	fsr2h,c
 20121  015564  0EF8               	movlw	-8
 20122  015566  006F FF8F FFDF     	movff	plusw1,indf2
 20123                           
 20124                           ;stkvar	_n @ sp[(-4)+-6]
 20125  01556C  0EF7               	movlw	-9
 20126  01556E  50E3               	movf	plusw1,w,c
 20127  015570  E108               	bnz	l13843
 20128  015572  0EF6               	movlw	-10
 20129  015574  006F FF8C  F037    	movff	plusw1,btemp
 20130  01557A  0E09               	movlw	9
 20131  01557C  5E37               	subwf	btemp^0,f,c
 20132  01557E  A0D8               	btfss	status,0,c
 20133  015580  D091               	goto	u10310
 20134  015582                     l13843:
 20135                           
 20136                           ;stkvar	_s @ sp[(-4)+0]
 20137  015582  0EFC               	movlw	-4
 20138  015584  006F FF8C  F041    	movff	plusw1,btemp+10
 20139  01558A  1E41               	comf	(btemp+10)^0,f,c
 20140  01558C  0EFD               	movlw	-3
 20141  01558E  006F FF8C  F042    	movff	plusw1,btemp+11
 20142  015594  1E42               	comf	(btemp+11)^0,f,c
 20143  015596  2A41               	incf	(btemp+10)^0,f,c
 20144  015598  B4D8               	btfsc	status,2,c
 20145  01559A  2A42               	incf	(btemp+11)^0,f,c
 20146  01559C  0E03               	movlw	3
 20147  01559E  1641               	andwf	(btemp+10)^0,f,c
 20148  0155A0  0E00               	movlw	0
 20149  0155A2  1642               	andwf	(btemp+11)^0,f,c
 20150                           
 20151                           ;stkvar	_k @ sp[(-4)+2]
 20152  0155A4  0EFE               	movlw	-2
 20153  0155A6  0060  F107  FFE3   	movff	btemp+10,plusw1
 20154  0155AC  0EFF               	movlw	-1
 20155  0155AE  0060  F10B  FFE3   	movff	btemp+11,plusw1
 20156                           
 20157                           ;stkvar	_k @ sp[(-4)+2]
 20158                           ;stkvar	_s @ sp[(-4)+0]
 20159  0155B4  0EFC               	movlw	-4
 20160  0155B6  50E3               	movf	plusw1,w,c
 20161  0155B8  6E37               	movwf	btemp^0,c
 20162  0155BA  0EFE               	movlw	-2
 20163  0155BC  50E3               	movf	plusw1,w,c
 20164  0155BE  2637               	addwf	btemp^0,f,c
 20165  0155C0  0EFC               	movlw	-4
 20166  0155C2  0060  F0DF  FFE3   	movff	btemp,plusw1
 20167  0155C8  0EFD               	movlw	-3
 20168  0155CA  50E3               	movf	plusw1,w,c
 20169  0155CC  6E37               	movwf	btemp^0,c
 20170  0155CE  0EFF               	movlw	-1
 20171  0155D0  50E3               	movf	plusw1,w,c
 20172  0155D2  2237               	addwfc	btemp^0,f,c
 20173  0155D4  0EFD               	movlw	-3
 20174  0155D6  0060  F0DF  FFE3   	movff	btemp,plusw1
 20175                           
 20176                           ;stkvar	_k @ sp[(-4)+2]
 20177                           ;stkvar	_n @ sp[(-4)+-6]
 20178  0155DC  0EF6               	movlw	-10
 20179  0155DE  50E3               	movf	plusw1,w,c
 20180  0155E0  6E37               	movwf	btemp^0,c
 20181  0155E2  0EFE               	movlw	-2
 20182  0155E4  50E3               	movf	plusw1,w,c
 20183  0155E6  5E37               	subwf	btemp^0,f,c
 20184  0155E8  0EF6               	movlw	-10
 20185  0155EA  0060  F0DF  FFE3   	movff	btemp,plusw1
 20186  0155F0  0EF7               	movlw	-9
 20187  0155F2  50E3               	movf	plusw1,w,c
 20188  0155F4  6E37               	movwf	btemp^0,c
 20189  0155F6  0EFF               	movlw	-1
 20190  0155F8  50E3               	movf	plusw1,w,c
 20191  0155FA  5A37               	subwfb	btemp^0,f,c
 20192  0155FC  0EF7               	movlw	-9
 20193  0155FE  0060  F0DF  FFE3   	movff	btemp,plusw1
 20194  015604  0EFC               	movlw	252
 20195  015606  6E41               	movwf	(btemp+10)^0,c
 20196  015608  0EFF               	movlw	255
 20197  01560A  6E42               	movwf	(btemp+11)^0,c
 20198                           
 20199                           ;stkvar	_n @ sp[(-4)+-6]
 20200  01560C  0EF6               	movlw	-10
 20201  01560E  006F FF8C  F037    	movff	plusw1,btemp
 20202  015614  5041               	movf	(btemp+10)^0,w,c
 20203  015616  1637               	andwf	btemp^0,f,c
 20204  015618  0EF6               	movlw	-10
 20205  01561A  0060  F0DF  FFE3   	movff	btemp,plusw1
 20206  015620  0EF7               	movlw	-9
 20207  015622  006F FF8C  F037    	movff	plusw1,btemp
 20208  015628  5042               	movf	(btemp+11)^0,w,c
 20209  01562A  1637               	andwf	btemp^0,f,c
 20210  01562C  0EF7               	movlw	-9
 20211  01562E  D02E               	goto	L34
 20212  015630                     l13851:
 20213                           
 20214                           ;stkvar	_c @ sp[(-4)+-4]
 20215                           ;stkvar	_s @ sp[(-4)+0]
 20216  015630  0EFC               	movlw	-4
 20217  015632  006F FF8F FFD9     	movff	plusw1,fsr2l
 20218  015638  0EFD               	movlw	-3
 20219  01563A  006F FF8F FFDA     	movff	plusw1,fsr2h
 20220  015640  0EF8               	movlw	-8
 20221  015642  006F FF8F FFDF     	movff	plusw1,indf2
 20222                           
 20223                           ;stkvar	_n @ sp[(-4)+-6]
 20224  015648  0EF6               	movlw	-10
 20225  01564A  006F FF8C  F037    	movff	plusw1,btemp
 20226  015650  0E01               	movlw	1
 20227  015652  5E37               	subwf	btemp^0,f,c
 20228  015654  0EF6               	movlw	-10
 20229  015656  0060  F0DF  FFE3   	movff	btemp,plusw1
 20230  01565C  0EF7               	movlw	-9
 20231  01565E  006F FF8C  F037    	movff	plusw1,btemp
 20232  015664  0E00               	movlw	0
 20233  015666  5A37               	subwfb	btemp^0,f,c
 20234  015668  0EF7               	movlw	-9
 20235  01566A  0060  F0DF  FFE3   	movff	btemp,plusw1
 20236                           
 20237                           ;stkvar	_s @ sp[(-4)+0]
 20238  015670  0EFC               	movlw	-4
 20239  015672  50E3               	movf	plusw1,w,c
 20240  015674  0F01               	addlw	1
 20241  015676  6E37               	movwf	btemp^0,c
 20242  015678  0EFC               	movlw	-4
 20243  01567A  0060  F0DF  FFE3   	movff	btemp,plusw1
 20244  015680  6A37               	clrf	btemp^0,c
 20245  015682  0EFD               	movlw	-3
 20246  015684  50E3               	movf	plusw1,w,c
 20247  015686  2037               	addwfc	btemp^0,w,c
 20248  015688  6E37               	movwf	btemp^0,c
 20249  01568A  0EFD               	movlw	-3
 20250  01568C                     L34:
 20251  01568C  0060  F0DF  FFE3   	movff	btemp,plusw1
 20252                           
 20253                           ;stkvar	_n @ sp[(-4)+-6]
 20254  015692  0EF6               	movlw	-10
 20255  015694  006F FF8C  F037    	movff	plusw1,btemp
 20256  01569A  0EF7               	movlw	-9
 20257  01569C  50E3               	movf	plusw1,w,c
 20258  01569E  1037               	iorwf	btemp^0,w,c
 20259  0156A0  A4D8               	btfss	status,2,c
 20260  0156A2  D7C6               	goto	l13851
 20261  0156A4                     u10310:
 20262                           
 20263                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 20264  0156A4  0EF6               	movlw	246
 20265  0156A6  26E1               	addwf	fsr1l,f,c
 20266  0156A8  0EFF               	movlw	255
 20267  0156AA  22E2               	addwfc	fsr1h,f,c
 20268  0156AC  0012               	return		;funcret
 20269  0156AE                     __end_of_memset:
 20270                           	opt callstack 0
 20271                           
 20272 ;; *************** function _printf *****************
 20273 ;; Defined at:
 20274 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 20275 ;; Parameters:    Size  Location     Type
 20276 ;;  fmt             2  [STACK] PTR const unsigned char 
 20277 ;;		 -> STR_28(3), STR_27(3), STR_26(3), 
 20278 ;; Auto vars:     Size  Location     Type
 20279 ;;  ap              2  [STACK] PTR void [1]
 20280 ;;		 -> ?_printf(2), ?_sprintf(2), 
 20281 ;;  ret             2    0        int 
 20282 ;; Return value:  Size  Location     Type
 20283 ;;                  2  [STACK] int 
 20284 ;; Registers used:
 20285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 20286 ;; Tracked objects:
 20287 ;;		On entry : 3F/3B
 20288 ;;		On exit  : 0/0
 20289 ;;		Unchanged: 0/0
 20290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20295 ;;Total ram usage:        0 bytes
 20296 ;; Hardware stack levels used:    1
 20297 ;; Hardware stack levels required when called:   11
 20298 ;; This function calls:
 20299 ;;		_vfprintf
 20300 ;; This function is called by:
 20301 ;;		_eaDogM_WriteString
 20302 ;;		_send_lcd_cmd_dma
 20303 ;; This function uses a reentrant model
 20304 ;;
 20305                           
 20306                           	psect	text89
 20307  018BB2                     __ptext89:
 20308                           	opt callstack 0
 20309  018BB2                     _printf:
 20310                           	opt callstack 0
 20311                           
 20312                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20313  018BB2  52E6               	movf	postinc1,f,c
 20314  018BB4  52E6               	movf	postinc1,f,c
 20315                           
 20316                           ;stkvar	?_printf @ sp[(-2)+-3]
 20317                           
 20318                           ;incstack = 0
 20319  018BB6  0EFB               	movlw	251
 20320  018BB8  24E1               	addwf	fsr1l,w,c
 20321  018BBA  6E41               	movwf	(btemp+10)^0,c
 20322  018BBC  0EFF               	movlw	255
 20323  018BBE  20E2               	addwfc	fsr1h,w,c
 20324  018BC0  6E42               	movwf	(btemp+11)^0,c
 20325                           
 20326                           ;stkvar	_ap @ sp[(-2)+0]
 20327  018BC2  0EFF               	movlw	-1
 20328  018BC4  0060  F10B  FFE3   	movff	btemp+11,plusw1
 20329  018BCA  0EFE               	movlw	-2
 20330  018BCC  0060  F107  FFE3   	movff	btemp+10,plusw1
 20331                           
 20332                           ;stkvar	_ap @ sp[(-2)+0]
 20333  018BD2  0EFE               	movlw	254
 20334  018BD4  24E1               	addwf	fsr1l,w,c
 20335  018BD6  6E37               	movwf	btemp^0,c
 20336  018BD8  0EFF               	movlw	255
 20337  018BDA  20E2               	addwfc	fsr1h,w,c
 20338  018BDC  6E38               	movwf	(btemp+1)^0,c
 20339  018BDE  0060  F0DF  FFE6   	movff	btemp,postinc1
 20340  018BE4  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 20341                           
 20342                           ;stkvar	_fmt @ sp[(-4)+-3]
 20343  018BEA  0EF9               	movlw	-7
 20344  018BEC  006F FF8F FFE6     	movff	plusw1,postinc1
 20345  018BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 20346  018BF8  0E00               	movlw	0
 20347  018BFA  6EE6               	movwf	postinc1,c
 20348  018BFC  0E00               	movlw	0
 20349  018BFE  6EE6               	movwf	postinc1,c
 20350  018C00  EC9F  F0C2         	call	_vfprintf	;wreg free
 20351                           
 20352                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 20353  018C04  52E5               	movf	postdec1,f,c
 20354  018C06  52E5               	movf	postdec1,f,c
 20355  018C08  52E5               	movf	postdec1,f,c
 20356  018C0A  50E7               	movf	indf1,w,c
 20357  018C0C  5EE1               	subwf	fsr1l,f,c
 20358  018C0E  0E00               	movlw	0
 20359  018C10  5AE2               	subwfb	fsr1h,f,c
 20360  018C12  0012               	return		;funcret
 20361  018C14                     __end_of_printf:
 20362                           	opt callstack 0
 20363                           
 20364 ;; *************** function _sprintf *****************
 20365 ;; Defined at:
 20366 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 20367 ;; Parameters:    Size  Location     Type
 20368 ;;  s               2  [STACK] PTR unsigned char 
 20369 ;;		 -> D.lcd(512), mconfig@D(514), V(387), 
 20370 ;;  fmt             2  [STACK] PTR const unsigned char 
 20371 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 20372 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 20373 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 20374 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 20375 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 20376 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 20377 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 20378 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 20379 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 20380 ;;		 -> msg1(88), msg0(89), STR_25(29), STR_24(26), 
 20381 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 20382 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 20383 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 20384 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 20385 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 20386 ;;		 -> STR_1(17), 
 20387 ;; Auto vars:     Size  Location     Type
 20388 ;;  f               6  [STACK] struct _IO_FILE
 20389 ;;  ap              2  [STACK] PTR void [1]
 20390 ;;		 -> ?_printf(2), ?_sprintf(2), 
 20391 ;;  ret             2    0        int 
 20392 ;; Return value:  Size  Location     Type
 20393 ;;                  2  [STACK] int 
 20394 ;; Registers used:
 20395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 20396 ;; Tracked objects:
 20397 ;;		On entry : 0/0
 20398 ;;		On exit  : 0/0
 20399 ;;		Unchanged: 0/0
 20400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20405 ;;Total ram usage:        0 bytes
 20406 ;; Hardware stack levels used:    1
 20407 ;; Hardware stack levels required when called:   11
 20408 ;; This function calls:
 20409 ;;		_vfprintf
 20410 ;; This function is called by:
 20411 ;;		_main
 20412 ;;		_terminal_format
 20413 ;;		_s10f1_opcmd
 20414 ;;		_ee_logger
 20415 ;;		_check_help
 20416 ;;		_vterm_dump
 20417 ;;		_vterm_sequence
 20418 ;;		_MyeaDogM_WriteStringAtPos
 20419 ;; This function uses a reentrant model
 20420 ;;
 20421                           
 20422                           	psect	text90
 20423  017D2A                     __ptext90:
 20424                           	opt callstack 0
 20425  017D2A                     _sprintf:
 20426                           	opt callstack 0
 20427                           
 20428                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20429  017D2A  0E08               	movlw	8
 20430  017D2C  26E1               	addwf	fsr1l,f,c
 20431  017D2E  0E00               	movlw	0
 20432  017D30  22E2               	addwfc	fsr1h,f,c
 20433                           
 20434                           ;incstack = 0
 20435  017D32  0EFE               	movlw	254
 20436  017D34  6E41               	movwf	(btemp+10)^0,c
 20437  017D36  0EFF               	movlw	255
 20438  017D38  6E42               	movwf	(btemp+11)^0,c
 20439                           
 20440                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 20441  017D3A  0EF5               	movlw	245
 20442  017D3C  24E1               	addwf	fsr1l,w,c
 20443  017D3E  6E3F               	movwf	(btemp+8)^0,c
 20444  017D40  0EFF               	movlw	255
 20445  017D42  20E2               	addwfc	fsr1h,w,c
 20446  017D44  6E40               	movwf	(btemp+9)^0,c
 20447  017D46  5041               	movf	(btemp+10)^0,w,c
 20448  017D48  263F               	addwf	(btemp+8)^0,f,c
 20449  017D4A  5042               	movf	(btemp+11)^0,w,c
 20450  017D4C  2240               	addwfc	(btemp+9)^0,f,c
 20451                           
 20452                           ;stkvar	_ap @ sp[(-8)+6]
 20453  017D4E  0EFF               	movlw	-1
 20454  017D50  0060  F103  FFE3   	movff	btemp+9,plusw1
 20455  017D56  0EFE               	movlw	-2
 20456  017D58  0060  F0FF  FFE3   	movff	btemp+8,plusw1
 20457                           
 20458                           ;stkvar	_s @ sp[(-8)+-3]
 20459  017D5E  0EF5               	movlw	-11
 20460  017D60  006F FF8C  F041    	movff	plusw1,btemp+10
 20461  017D66  0EF6               	movlw	-10
 20462  017D68  006F FF8C  F042    	movff	plusw1,btemp+11
 20463                           
 20464                           ;stkvar	_f @ sp[(-8)+0]
 20465  017D6E  0EF9               	movlw	-7
 20466  017D70  0060  F10B  FFE3   	movff	btemp+11,plusw1
 20467  017D76  0EF8               	movlw	-8
 20468  017D78  0060  F107  FFE3   	movff	btemp+10,plusw1
 20469                           
 20470                           ;stkvar	_f @ sp[(-8)+0]
 20471  017D7E  0EFA               	movlw	250
 20472  017D80  24E1               	addwf	fsr1l,w,c
 20473  017D82  6ED9               	movwf	fsr2l,c
 20474  017D84  0EFF               	movlw	255
 20475  017D86  20E2               	addwfc	fsr1h,w,c
 20476  017D88  6EDA               	movwf	fsr2h,c
 20477  017D8A  0E00               	movlw	0
 20478  017D8C  6EDE               	movwf	postinc2,c
 20479  017D8E  0E00               	movlw	0
 20480  017D90  6EDD               	movwf	postdec2,c
 20481                           
 20482                           ;stkvar	_f @ sp[(-8)+0]
 20483  017D92  0EFC               	movlw	252
 20484  017D94  24E1               	addwf	fsr1l,w,c
 20485  017D96  6ED9               	movwf	fsr2l,c
 20486  017D98  0EFF               	movlw	255
 20487  017D9A  20E2               	addwfc	fsr1h,w,c
 20488  017D9C  6EDA               	movwf	fsr2h,c
 20489  017D9E  0E00               	movlw	0
 20490  017DA0  6EDE               	movwf	postinc2,c
 20491  017DA2  0E00               	movlw	0
 20492  017DA4  6EDD               	movwf	postdec2,c
 20493                           
 20494                           ;stkvar	_ap @ sp[(-8)+6]
 20495  017DA6  0EFE               	movlw	254
 20496  017DA8  24E1               	addwf	fsr1l,w,c
 20497  017DAA  6E37               	movwf	btemp^0,c
 20498  017DAC  0EFF               	movlw	255
 20499  017DAE  20E2               	addwfc	fsr1h,w,c
 20500  017DB0  6E38               	movwf	(btemp+1)^0,c
 20501  017DB2  0060  F0DF  FFE6   	movff	btemp,postinc1
 20502  017DB8  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 20503                           
 20504                           ;stkvar	_fmt @ sp[(-10)+-5]
 20505  017DBE  0EF1               	movlw	-15
 20506  017DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20507  017DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 20508                           
 20509                           ;stkvar	_f @ sp[(-12)+0]
 20510  017DCC  0EF4               	movlw	244
 20511  017DCE  24E1               	addwf	fsr1l,w,c
 20512  017DD0  6E37               	movwf	btemp^0,c
 20513  017DD2  0EFF               	movlw	255
 20514  017DD4  20E2               	addwfc	fsr1h,w,c
 20515  017DD6  6E38               	movwf	(btemp+1)^0,c
 20516  017DD8  0060  F0DF  FFE6   	movff	btemp,postinc1
 20517  017DDE  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 20518  017DE4  EC9F  F0C2         	call	_vfprintf	;wreg free
 20519                           
 20520                           ;stkvar	_f @ sp[(-8)+0]
 20521  017DE8  0EFA               	movlw	250
 20522  017DEA  24E1               	addwf	fsr1l,w,c
 20523  017DEC  6ED9               	movwf	fsr2l,c
 20524  017DEE  0EFF               	movlw	255
 20525  017DF0  20E2               	addwfc	fsr1h,w,c
 20526  017DF2  6EDA               	movwf	fsr2h,c
 20527  017DF4  006F FF78  F041    	movff	postinc2,btemp+10
 20528  017DFA  006F FF74  F042    	movff	postdec2,btemp+11
 20529                           
 20530                           ;stkvar	_s @ sp[(-8)+-3]
 20531  017E00  0EF5               	movlw	-11
 20532  017E02  006F FF8C  F03F    	movff	plusw1,btemp+8
 20533  017E08  0EF6               	movlw	-10
 20534  017E0A  006F FF8C  F040    	movff	plusw1,btemp+9
 20535  017E10  5041               	movf	(btemp+10)^0,w,c
 20536  017E12  243F               	addwf	(btemp+8)^0,w,c
 20537  017E14  6ED9               	movwf	fsr2l,c
 20538  017E16  5042               	movf	(btemp+11)^0,w,c
 20539  017E18  2040               	addwfc	(btemp+9)^0,w,c
 20540  017E1A  6EDA               	movwf	fsr2h,c
 20541  017E1C  0E00               	movlw	0
 20542  017E1E  6EDF               	movwf	indf2,c
 20543                           
 20544                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, args
      +                          ize = 4, vargsize = 0
 20545  017E20  0EF8               	movlw	248
 20546  017E22  26E1               	addwf	fsr1l,f,c
 20547  017E24  0EFF               	movlw	255
 20548  017E26  22E2               	addwfc	fsr1h,f,c
 20549  017E28  52E5               	movf	postdec1,f,c
 20550  017E2A  50E7               	movf	indf1,w,c
 20551  017E2C  5EE1               	subwf	fsr1l,f,c
 20552  017E2E  0E00               	movlw	0
 20553  017E30  5AE2               	subwfb	fsr1h,f,c
 20554  017E32  0012               	return		;funcret
 20555  017E34                     __end_of_sprintf:
 20556                           	opt callstack 0
 20557                           
 20558 ;; *************** function _vfprintf *****************
 20559 ;; Defined at:
 20560 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20561 ;; Parameters:    Size  Location     Type
 20562 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20563 ;;		 -> f(6), NULL(0), 
 20564 ;;  fmt             2  [STACK] PTR const unsigned char 
 20565 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 20566 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 20567 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 20568 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 20569 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 20570 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 20571 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 20572 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 20573 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 20574 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 20575 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 20576 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 20577 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 20578 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 20579 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 20580 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20581 ;;  ap              2  [STACK] PTR PTR void 
 20582 ;;		 -> ap(2), ap(2), 
 20583 ;; Auto vars:     Size  Location     Type
 20584 ;;  cfmt            2  [STACK] PTR unsigned char 
 20585 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 20586 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 20587 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 20588 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 20589 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 20590 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 20591 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 20592 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 20593 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 20594 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 20595 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 20596 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 20597 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 20598 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 20599 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 20600 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20601 ;; Return value:  Size  Location     Type
 20602 ;;                  2  [STACK] int 
 20603 ;; Registers used:
 20604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 20605 ;; Tracked objects:
 20606 ;;		On entry : 0/3B
 20607 ;;		On exit  : 0/0
 20608 ;;		Unchanged: 0/0
 20609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20614 ;;Total ram usage:        0 bytes
 20615 ;; Hardware stack levels used:    1
 20616 ;; Hardware stack levels required when called:   10
 20617 ;; This function calls:
 20618 ;;		_vfpfcnvrt
 20619 ;; This function is called by:
 20620 ;;		_sprintf
 20621 ;;		_printf
 20622 ;; This function uses a reentrant model
 20623 ;;
 20624                           
 20625                           	psect	text91
 20626  01853E                     __ptext91:
 20627                           	opt callstack 0
 20628  01853E                     _vfprintf:
 20629                           	opt callstack 0
 20630                           
 20631                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20632  01853E  52E6               	movf	postinc1,f,c
 20633  018540  52E6               	movf	postinc1,f,c
 20634                           
 20635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 20636                           ;stkvar	_fmt @ sp[(-2)+-4]
 20637                           
 20638                           ;incstack = 0
 20639  018542  0EFA               	movlw	-6
 20640  018544  006F FF8C  F041    	movff	plusw1,btemp+10
 20641  01854A  0EFB               	movlw	-5
 20642  01854C  006F FF8C  F042    	movff	plusw1,btemp+11
 20643                           
 20644                           ;stkvar	_cfmt @ sp[(-2)+0]
 20645  018552  0EFF               	movlw	-1
 20646  018554  0060  F10B  FFE3   	movff	btemp+11,plusw1
 20647  01855A  0EFE               	movlw	-2
 20648  01855C  0060  F107  FFE3   	movff	btemp+10,plusw1
 20649                           
 20650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 20651  018562  6A0D               	clrf	_nout^0,c
 20652  018564  6A0E               	clrf	(_nout+1)^0,c
 20653                           
 20654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 20655  018566  D020               	goto	l13865
 20656  018568                     l13863:
 20657                           
 20658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 20659                           ;stkvar	_ap @ sp[(-2)+-6]
 20660  018568  0EF8               	movlw	-8
 20661  01856A  006F FF8F FFE6     	movff	plusw1,postinc1
 20662  018570  006F FF8F FFE6     	movff	plusw1,postinc1
 20663                           
 20664                           ;stkvar	_cfmt @ sp[(-4)+0]
 20665  018576  0EFC               	movlw	252
 20666  018578  24E1               	addwf	fsr1l,w,c
 20667  01857A  6E37               	movwf	btemp^0,c
 20668  01857C  0EFF               	movlw	255
 20669  01857E  20E2               	addwfc	fsr1h,w,c
 20670  018580  6E38               	movwf	(btemp+1)^0,c
 20671  018582  0060  F0DF  FFE6   	movff	btemp,postinc1
 20672  018588  0060  F0E3  FFE6   	movff	btemp+1,postinc1
 20673                           
 20674                           ;stkvar	_fp @ sp[(-6)+-2]
 20675  01858E  0EF8               	movlw	-8
 20676  018590  006F FF8F FFE6     	movff	plusw1,postinc1
 20677  018596  006F FF8F FFE6     	movff	plusw1,postinc1
 20678  01859C  EC00  F080         	call	_vfpfcnvrt	;wreg free
 20679  0185A0  5037               	movf	btemp^0,w,c
 20680  0185A2  260D               	addwf	_nout^0,f,c
 20681  0185A4  5038               	movf	(btemp+1)^0,w,c
 20682  0185A6  220E               	addwfc	(_nout+1)^0,f,c
 20683  0185A8                     l13865:
 20684                           
 20685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 20686                           ;stkvar	_cfmt @ sp[(-2)+0]
 20687  0185A8  50E1               	movf	fsr1l,w,c
 20688  0185AA  0FFE               	addlw	-2
 20689  0185AC  6ED9               	movwf	fsr2l,c
 20690  0185AE  50E2               	movf	fsr1h,w,c
 20691  0185B0  6EDA               	movwf	fsr2h,c
 20692  0185B2  0EFF               	movlw	255
 20693  0185B4  22DA               	addwfc	fsr2h,f,c
 20694  0185B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 20695  0185BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 20696  0185C2                     	if	0	;tblptru may be non-zero
 20697  0185C2                     	endif
 20698  0185C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20699  0185C2  0E00               	movlw	low (__mediumconst shr (0+16))
 20700  0185C4  6EF8               	movwf	tblptru,c
 20701  0185C6                     	endif
 20702  0185C6  0008               	tblrd		*
 20703  0185C8  50F5               	movf	tablat,w,c
 20704  0185CA  0900               	iorlw	0
 20705  0185CC  A4D8               	btfss	status,2,c
 20706  0185CE  D7CC               	goto	l13863
 20707                           
 20708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 20709  0185D0  0060  F034  F037   	movff	_nout,btemp
 20710  0185D6  0060  F038  F038   	movff	_nout+1,btemp+1
 20711                           
 20712                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 20713  0185DC  0EF8               	movlw	248
 20714  0185DE  26E1               	addwf	fsr1l,f,c
 20715  0185E0  0EFF               	movlw	255
 20716  0185E2  22E2               	addwfc	fsr1h,f,c
 20717  0185E4  0012               	return		;funcret
 20718  0185E6                     __end_of_vfprintf:
 20719                           	opt callstack 0
 20720                           
 20721 ;; *************** function _vfpfcnvrt *****************
 20722 ;; Defined at:
 20723 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20724 ;; Parameters:    Size  Location     Type
 20725 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20726 ;;		 -> f(6), NULL(0), 
 20727 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 20728 ;;		 -> cfmt(2), 
 20729 ;;  ap              2  [STACK] PTR PTR void 
 20730 ;;		 -> ap(2), ap(2), 
 20731 ;; Auto vars:     Size  Location     Type
 20732 ;;  llu             8  [STACK] unsigned long long 
 20733 ;;  ll              8  [STACK] long long 
 20734 ;;  f               4    0        long long 
 20735 ;;  ct              3    0        unsigned char [3]
 20736 ;;  vp              2  [STACK] PTR void 
 20737 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 20738 ;;		 -> D.lcd(512), mconfig@D(514), STR_32(4), STR_31(4), 
 20739 ;;		 -> STR_30(4), STR_29(4), STR_7(4), STR_3(4), 
 20740 ;;		 -> T(256), V(387), 
 20741 ;;  done            2  [STACK] int 
 20742 ;;  cp              2  [STACK] PTR unsigned char 
 20743 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 20744 ;;		 -> D.lcd(512), mconfig@D(514), STR_32(4), STR_31(4), 
 20745 ;;		 -> STR_30(4), STR_29(4), STR_7(4), STR_3(4), 
 20746 ;;		 -> T(256), V(387), 
 20747 ;;  i               2    0        int 
 20748 ;;  c               1  [STACK] unsigned char 
 20749 ;; Return value:  Size  Location     Type
 20750 ;;                  2  [STACK] int 
 20751 ;; Registers used:
 20752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 20753 ;; Tracked objects:
 20754 ;;		On entry : 0/3B
 20755 ;;		On exit  : 0/0
 20756 ;;		Unchanged: 0/0
 20757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20762 ;;Total ram usage:        0 bytes
 20763 ;; Hardware stack levels used:    1
 20764 ;; Hardware stack levels required when called:    9
 20765 ;; This function calls:
 20766 ;;		_atoi
 20767 ;;		_ctoa
 20768 ;;		_dtoa
 20769 ;;		_fputc
 20770 ;;		_isdigit
 20771 ;;		_otoa
 20772 ;;		_stoa
 20773 ;;		_strncmp
 20774 ;;		_utoa
 20775 ;;		_xtoa
 20776 ;; This function is called by:
 20777 ;;		_vfprintf
 20778 ;; This function uses a reentrant model
 20779 ;;
 20780                           
 20781                           	psect	text92
 20782  010000                     __ptext92:
 20783                           	opt callstack 0
 20784  010000                     _vfpfcnvrt:
 20785                           	opt callstack 0
 20786                           
 20787                           ; autosize = 27, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20788  010000  0E1B               	movlw	27
 20789  010002  26E1               	addwf	fsr1l,f,c
 20790  010004  0E00               	movlw	0
 20791  010006  22E2               	addwfc	fsr1h,f,c
 20792                           
 20793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 20794                           ;stkvar	_fmt @ sp[(-27)+-4]
 20795                           
 20796                           ;incstack = 0
 20797  010008  0EE1               	movlw	-31
 20798  01000A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20799  010010  0EE2               	movlw	-30
 20800  010012  006F FF8F FFDA     	movff	plusw1,fsr2h
 20801  010018  006F FF7B FFF6     	movff	postinc2,tblptrl
 20802  01001E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20803  010024                     	if	0	;tblptru may be non-zero
 20804  010024                     	endif
 20805  010024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20806  010024  0E00               	movlw	low (__mediumconst shr (0+16))
 20807  010026  6EF8               	movwf	tblptru,c
 20808  010028                     	endif
 20809  010028  0008               	tblrd		*
 20810  01002A  50F5               	movf	tablat,w,c
 20811  01002C  0A25               	xorlw	37
 20812  01002E  A4D8               	btfss	status,2,c
 20813  010030  EFDD  F08D         	goto	l13805
 20814                           
 20815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 20816                           ;stkvar	_fmt @ sp[(-27)+-4]
 20817  010034  0EE1               	movlw	-31
 20818  010036  006F FF8F FFD9     	movff	plusw1,fsr2l
 20819  01003C  0EE2               	movlw	-30
 20820  01003E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20821  010044  2ADE               	incf	postinc2,f,c
 20822  010046  0E00               	movlw	0
 20823  010048  22DD               	addwfc	postdec2,f,c
 20824                           
 20825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 20826  01004A  6A0F               	clrf	_width^0,c
 20827  01004C  6A10               	clrf	(_width+1)^0,c
 20828  01004E  6A13               	clrf	_flags^0,c
 20829  010050  6A14               	clrf	(_flags+1)^0,c
 20830                           
 20831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 20832  010052  6811               	setf	_prec^0,c
 20833  010054  6812               	setf	(_prec+1)^0,c
 20834                           
 20835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 0;
 20836                           ;stkvar	_done @ sp[(-27)+22]
 20837  010056  0EFB               	movlw	-5
 20838  010058  6AE3               	clrf	plusw1,c
 20839  01005A  0EFC               	movlw	-4
 20840  01005C  6AE3               	clrf	plusw1,c
 20841                           
 20842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
 20843  01005E  D04B               	goto	l13423
 20844  010060                     l13397:
 20845                           
 20846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
 20847  010060  8013               	bsf	_flags^0,0,c
 20848  010062                     l13399:
 20849                           
 20850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
 20851                           ;stkvar	_fmt @ sp[(-27)+-4]
 20852  010062  0EE1               	movlw	-31
 20853  010064  006F FF8F FFD9     	movff	plusw1,fsr2l
 20854  01006A  0EE2               	movlw	-30
 20855  01006C  006F FF8F FFDA     	movff	plusw1,fsr2h
 20856  010072  2ADE               	incf	postinc2,f,c
 20857  010074  0E00               	movlw	0
 20858  010076  22DD               	addwfc	postdec2,f,c
 20859                           
 20860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
 20861  010078  D03E               	goto	l13423
 20862  01007A                     l13401:
 20863                           
 20864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
 20865  01007A  8213               	bsf	_flags^0,1,c
 20866  01007C  D7F2               	goto	l13399
 20867  01007E                     l13405:
 20868                           
 20869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
 20870  01007E  8413               	bsf	_flags^0,2,c
 20871  010080  D7F0               	goto	l13399
 20872  010082                     l13409:
 20873                           
 20874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
 20875  010082  8613               	bsf	_flags^0,3,c
 20876  010084  D7EE               	goto	l13399
 20877  010086                     l13413:
 20878                           
 20879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
 20880  010086  8813               	bsf	_flags^0,4,c
 20881  010088  D7EC               	goto	l13399
 20882  01008A                     l13417:
 20883                           
 20884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
 20885  01008A  0E01               	movlw	1
 20886  01008C  6E41               	movwf	(btemp+10)^0,c
 20887  01008E  0E00               	movlw	0
 20888  010090  6E42               	movwf	(btemp+11)^0,c
 20889                           
 20890                           ;stkvar	_done @ sp[(-27)+22]
 20891  010092  0EFB               	movlw	-5
 20892  010094  0060  F107  FFE3   	movff	btemp+10,plusw1
 20893  01009A  0EFC               	movlw	-4
 20894  01009C  0060  F10B  FFE3   	movff	btemp+11,plusw1
 20895                           
 20896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
 20897  0100A2  D029               	goto	l13423
 20898  0100A4                     l13421:
 20899                           
 20900                           ;stkvar	_fmt @ sp[(-27)+-4]
 20901  0100A4  0EE1               	movlw	-31
 20902  0100A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 20903  0100AC  0EE2               	movlw	-30
 20904  0100AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 20905  0100B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 20906  0100BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 20907  0100C0                     	if	0	;tblptru may be non-zero
 20908  0100C0                     	endif
 20909  0100C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20910  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
 20911  0100C2  6EF8               	movwf	tblptru,c
 20912  0100C4                     	endif
 20913  0100C4  0008               	tblrd		*
 20914  0100C6  50F5               	movf	tablat,w,c
 20915  0100C8  6E41               	movwf	(btemp+10)^0,c
 20916  0100CA  6A42               	clrf	(btemp+11)^0,c
 20917                           
 20918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20919                           ; Switch size 1, requested type "simple"
 20920                           ; Number of cases is 1, Range of values is 0 to 0
 20921                           ; switch strategies available:
 20922                           ; Name         Instructions Cycles
 20923                           ; simple_byte            4     3 (average)
 20924                           ;	Chosen strategy is simple_byte
 20925  0100CC  5042               	movf	(btemp+11)^0,w,c
 20926  0100CE  0A00               	xorlw	0	; case 0
 20927  0100D0  A4D8               	btfss	status,2,c
 20928  0100D2  D7DB               	goto	l13417
 20929                           
 20930                           ; Switch size 1, requested type "simple"
 20931                           ; Number of cases is 5, Range of values is 32 to 48
 20932                           ; switch strategies available:
 20933                           ; Name         Instructions Cycles
 20934                           ; simple_byte           16     9 (average)
 20935                           ;	Chosen strategy is simple_byte
 20936  0100D4  5041               	movf	(btemp+10)^0,w,c
 20937  0100D6  0A20               	xorlw	32	; case 32
 20938  0100D8  B4D8               	btfsc	status,2,c
 20939  0100DA  D7D3               	goto	l13409
 20940  0100DC  0A03               	xorlw	3	; case 35
 20941  0100DE  B4D8               	btfsc	status,2,c
 20942  0100E0  D7D2               	goto	l13413
 20943  0100E2  0A08               	xorlw	8	; case 43
 20944  0100E4  B4D8               	btfsc	status,2,c
 20945  0100E6  D7CB               	goto	l13405
 20946  0100E8  0A06               	xorlw	6	; case 45
 20947  0100EA  B4D8               	btfsc	status,2,c
 20948  0100EC  D7B9               	goto	l13397
 20949  0100EE  0A1D               	xorlw	29	; case 48
 20950  0100F0  B4D8               	btfsc	status,2,c
 20951  0100F2  D7C3               	goto	l13401
 20952  0100F4  D7CA               	goto	l13417
 20953  0100F6                     l13423:
 20954                           
 20955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
 20956                           ;stkvar	_done @ sp[(-27)+22]
 20957  0100F6  0EFB               	movlw	-5
 20958  0100F8  006F FF8C  F037    	movff	plusw1,btemp
 20959  0100FE  0EFC               	movlw	-4
 20960  010100  50E3               	movf	plusw1,w,c
 20961  010102  1037               	iorwf	btemp^0,w,c
 20962  010104  B4D8               	btfsc	status,2,c
 20963  010106  D7CE               	goto	l13421
 20964                           
 20965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
 20966  010108  B013               	btfsc	_flags^0,0,c
 20967                           
 20968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
 20969  01010A  9213               	bcf	_flags^0,1,c
 20970                           
 20971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 20972                           ;stkvar	_fmt @ sp[(-27)+-4]
 20973  01010C  0EE1               	movlw	-31
 20974  01010E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20975  010114  0EE2               	movlw	-30
 20976  010116  006F FF8F FFDA     	movff	plusw1,fsr2h
 20977  01011C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20978  010122  006F FF77 FFF7     	movff	postdec2,tblptrh
 20979  010128                     	if	0	;tblptru may be non-zero
 20980  010128                     	endif
 20981  010128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20982  010128  0E00               	movlw	low (__mediumconst shr (0+16))
 20983  01012A  6EF8               	movwf	tblptru,c
 20984  01012C                     	endif
 20985  01012C  0008               	tblrd		*
 20986  01012E  50F5               	movf	tablat,w,c
 20987  010130  0A2A               	xorlw	42
 20988  010132  A4D8               	btfss	status,2,c
 20989  010134  D031               	goto	l13437
 20990                           
 20991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 20992                           ;stkvar	_fmt @ sp[(-27)+-4]
 20993  010136  0EE1               	movlw	-31
 20994  010138  006F FF8F FFD9     	movff	plusw1,fsr2l
 20995  01013E  0EE2               	movlw	-30
 20996  010140  006F FF8F FFDA     	movff	plusw1,fsr2h
 20997  010146  2ADE               	incf	postinc2,f,c
 20998  010148  0E00               	movlw	0
 20999  01014A  22DD               	addwfc	postdec2,f,c
 21000                           
 21001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 21002                           ;stkvar	_ap @ sp[(-27)+-6]
 21003  01014C  0EDF               	movlw	-33
 21004  01014E  006F FF8F FFD9     	movff	plusw1,fsr2l
 21005  010154  0EE0               	movlw	-32
 21006  010156  006F FF8F FFDA     	movff	plusw1,fsr2h
 21007  01015C  0E02               	movlw	2
 21008  01015E  5EDE               	subwf	postinc2,f,c
 21009  010160  0E00               	movlw	0
 21010  010162  5ADD               	subwfb	postdec2,f,c
 21011  010164  006F FF78  F041    	movff	postinc2,btemp+10
 21012  01016A  006F FF74  F042    	movff	postdec2,btemp+11
 21013  010170  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21014  010176  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21015  01017C  006F FF78  F00F    	movff	postinc2,_width
 21016  010182  006F FF74  F010    	movff	postdec2,_width+1
 21017                           
 21018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 21019  010188  AE10               	btfss	(_width+1)^0,7,c
 21020  01018A  D066               	goto	u9770
 21021                           
 21022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 21023  01018C  8013               	bsf	_flags^0,0,c
 21024                           
 21025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 21026  01018E  6C0F               	negf	_width^0,c
 21027  010190  1E10               	comf	(_width+1)^0,f,c
 21028  010192  B0D8               	btfsc	status,0,c
 21029  010194  2A10               	incf	(_width+1)^0,f,c
 21030  010196  D060               	goto	u9770
 21031  010198                     l13437:
 21032                           
 21033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 21034                           ;stkvar	_fmt @ sp[(-27)+-4]
 21035  010198  0EE1               	movlw	-31
 21036  01019A  006F FF8F FFD9     	movff	plusw1,fsr2l
 21037  0101A0  0EE2               	movlw	-30
 21038  0101A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 21039  0101A8  006F FF78  F041    	movff	postinc2,btemp+10
 21040  0101AE  006F FF74  F042    	movff	postdec2,btemp+11
 21041  0101B4  0060  F107  FFE6   	movff	btemp+10,postinc1
 21042  0101BA  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21043  0101C0  EC3F  F0AF         	call	_atoi	;wreg free
 21044  0101C4  0060  F0DC  F00F   	movff	btemp,_width
 21045  0101CA  0060  F0E0  F010   	movff	btemp+1,_width+1
 21046                           
 21047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 21048  0101D0  D00B               	goto	l13441
 21049  0101D2                     l13439:
 21050                           
 21051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 21052                           ;stkvar	_fmt @ sp[(-27)+-4]
 21053  0101D2  0EE1               	movlw	-31
 21054  0101D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 21055  0101DA  0EE2               	movlw	-30
 21056  0101DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 21057  0101E2  2ADE               	incf	postinc2,f,c
 21058  0101E4  0E00               	movlw	0
 21059  0101E6  22DD               	addwfc	postdec2,f,c
 21060  0101E8                     l13441:
 21061  0101E8  0ED0               	movlw	208
 21062  0101EA  6E41               	movwf	(btemp+10)^0,c
 21063  0101EC  0EFF               	movlw	255
 21064  0101EE  6E42               	movwf	(btemp+11)^0,c
 21065                           
 21066                           ;stkvar	_fmt @ sp[(-27)+-4]
 21067  0101F0  0EE1               	movlw	-31
 21068  0101F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 21069  0101F8  0EE2               	movlw	-30
 21070  0101FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 21071  010200  006F FF7B FFF6     	movff	postinc2,tblptrl
 21072  010206  006F FF77 FFF7     	movff	postdec2,tblptrh
 21073  01020C                     	if	0	;tblptru may be non-zero
 21074  01020C                     	endif
 21075  01020C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21076  01020C  0E00               	movlw	low (__mediumconst shr (0+16))
 21077  01020E  6EF8               	movwf	tblptru,c
 21078  010210                     	endif
 21079  010210  0008               	tblrd		*
 21080  010212  50F5               	movf	tablat,w,c
 21081  010214  6E3F               	movwf	(btemp+8)^0,c
 21082  010216  6A40               	clrf	(btemp+9)^0,c
 21083  010218  5041               	movf	(btemp+10)^0,w,c
 21084  01021A  263F               	addwf	(btemp+8)^0,f,c
 21085  01021C  5042               	movf	(btemp+11)^0,w,c
 21086  01021E  2240               	addwfc	(btemp+9)^0,f,c
 21087  010220  5040               	movf	(btemp+9)^0,w,c
 21088  010222  E106               	bnz	u9750
 21089  010224  0E0A               	movlw	10
 21090  010226  5C3F               	subwf	(btemp+8)^0,w,c
 21091  010228  B0D8               	btfsc	status,0,c
 21092  01022A  D002               	goto	u9750
 21093  01022C  0E01               	movlw	1
 21094  01022E  D001               	goto	u9760
 21095  010230                     u9750:
 21096  010230  0E00               	movlw	0
 21097  010232                     u9760:
 21098  010232  6E41               	movwf	(btemp+10)^0,c
 21099  010234  6A42               	clrf	(btemp+11)^0,c
 21100                           
 21101                           ;stkvar	_vfpfcnvrt$5081 @ sp[(-27)+2]
 21102  010236  0EE7               	movlw	-25
 21103  010238  0060  F107  FFE3   	movff	btemp+10,plusw1
 21104  01023E  0EE8               	movlw	-24
 21105  010240  0060  F10B  FFE3   	movff	btemp+11,plusw1
 21106                           
 21107                           ;stkvar	_vfpfcnvrt$5081 @ sp[(-27)+2]
 21108  010246  0EE7               	movlw	-25
 21109  010248  006F FF8C  F037    	movff	plusw1,btemp
 21110  01024E  0EE8               	movlw	-24
 21111  010250  50E3               	movf	plusw1,w,c
 21112  010252  1037               	iorwf	btemp^0,w,c
 21113  010254  A4D8               	btfss	status,2,c
 21114  010256  D7BD               	goto	l13439
 21115  010258                     u9770:
 21116                           
 21117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 21118                           ;stkvar	_fmt @ sp[(-27)+-4]
 21119  010258  0EE1               	movlw	-31
 21120  01025A  006F FF8F FFD9     	movff	plusw1,fsr2l
 21121  010260  0EE2               	movlw	-30
 21122  010262  006F FF8F FFDA     	movff	plusw1,fsr2h
 21123  010268  006F FF7B FFF6     	movff	postinc2,tblptrl
 21124  01026E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21125  010274                     	if	0	;tblptru may be non-zero
 21126  010274                     	endif
 21127  010274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21128  010274  0E00               	movlw	low (__mediumconst shr (0+16))
 21129  010276  6EF8               	movwf	tblptru,c
 21130  010278                     	endif
 21131  010278  0008               	tblrd		*
 21132  01027A  50F5               	movf	tablat,w,c
 21133  01027C  0A2E               	xorlw	46
 21134  01027E  A4D8               	btfss	status,2,c
 21135  010280  D0AC               	goto	u9820
 21136                           
 21137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 21138  010282  6A11               	clrf	_prec^0,c
 21139  010284  6A12               	clrf	(_prec+1)^0,c
 21140                           
 21141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 21142                           ;stkvar	_fmt @ sp[(-27)+-4]
 21143  010286  0EE1               	movlw	-31
 21144  010288  006F FF8F FFD9     	movff	plusw1,fsr2l
 21145  01028E  0EE2               	movlw	-30
 21146  010290  006F FF8F FFDA     	movff	plusw1,fsr2h
 21147  010296  2ADE               	incf	postinc2,f,c
 21148  010298  0E00               	movlw	0
 21149  01029A  22DD               	addwfc	postdec2,f,c
 21150                           
 21151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 21152                           ;stkvar	_fmt @ sp[(-27)+-4]
 21153  01029C  0EE1               	movlw	-31
 21154  01029E  006F FF8F FFD9     	movff	plusw1,fsr2l
 21155  0102A4  0EE2               	movlw	-30
 21156  0102A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 21157  0102AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 21158  0102B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21159  0102B8                     	if	0	;tblptru may be non-zero
 21160  0102B8                     	endif
 21161  0102B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21162  0102B8  0E00               	movlw	low (__mediumconst shr (0+16))
 21163  0102BA  6EF8               	movwf	tblptru,c
 21164  0102BC                     	endif
 21165  0102BC  0008               	tblrd		*
 21166  0102BE  50F5               	movf	tablat,w,c
 21167  0102C0  0A2A               	xorlw	42
 21168  0102C2  A4D8               	btfss	status,2,c
 21169  0102C4  D02A               	goto	l13459
 21170                           
 21171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 21172                           ;stkvar	_fmt @ sp[(-27)+-4]
 21173  0102C6  0EE1               	movlw	-31
 21174  0102C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 21175  0102CE  0EE2               	movlw	-30
 21176  0102D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 21177  0102D6  2ADE               	incf	postinc2,f,c
 21178  0102D8  0E00               	movlw	0
 21179  0102DA  22DD               	addwfc	postdec2,f,c
 21180                           
 21181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 21182                           ;stkvar	_ap @ sp[(-27)+-6]
 21183  0102DC  0EDF               	movlw	-33
 21184  0102DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 21185  0102E4  0EE0               	movlw	-32
 21186  0102E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 21187  0102EC  0E02               	movlw	2
 21188  0102EE  5EDE               	subwf	postinc2,f,c
 21189  0102F0  0E00               	movlw	0
 21190  0102F2  5ADD               	subwfb	postdec2,f,c
 21191  0102F4  006F FF78  F041    	movff	postinc2,btemp+10
 21192  0102FA  006F FF74  F042    	movff	postdec2,btemp+11
 21193  010300  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21194  010306  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21195  01030C  006F FF78  F011    	movff	postinc2,_prec
 21196  010312  006F FF74  F012    	movff	postdec2,_prec+1
 21197                           
 21198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 21199  010318  D060               	goto	u9820
 21200  01031A                     l13459:
 21201                           
 21202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 21203                           ;stkvar	_fmt @ sp[(-27)+-4]
 21204  01031A  0EE1               	movlw	-31
 21205  01031C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21206  010322  0EE2               	movlw	-30
 21207  010324  006F FF8F FFDA     	movff	plusw1,fsr2h
 21208  01032A  006F FF78  F041    	movff	postinc2,btemp+10
 21209  010330  006F FF74  F042    	movff	postdec2,btemp+11
 21210  010336  0060  F107  FFE6   	movff	btemp+10,postinc1
 21211  01033C  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21212  010342  EC3F  F0AF         	call	_atoi	;wreg free
 21213  010346  0060  F0DC  F011   	movff	btemp,_prec
 21214  01034C  0060  F0E0  F012   	movff	btemp+1,_prec+1
 21215                           
 21216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 21217  010352  D00B               	goto	l13463
 21218  010354                     l13461:
 21219                           
 21220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 21221                           ;stkvar	_fmt @ sp[(-27)+-4]
 21222  010354  0EE1               	movlw	-31
 21223  010356  006F FF8F FFD9     	movff	plusw1,fsr2l
 21224  01035C  0EE2               	movlw	-30
 21225  01035E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21226  010364  2ADE               	incf	postinc2,f,c
 21227  010366  0E00               	movlw	0
 21228  010368  22DD               	addwfc	postdec2,f,c
 21229  01036A                     l13463:
 21230  01036A  0ED0               	movlw	208
 21231  01036C  6E41               	movwf	(btemp+10)^0,c
 21232  01036E  0EFF               	movlw	255
 21233  010370  6E42               	movwf	(btemp+11)^0,c
 21234                           
 21235                           ;stkvar	_fmt @ sp[(-27)+-4]
 21236  010372  0EE1               	movlw	-31
 21237  010374  006F FF8F FFD9     	movff	plusw1,fsr2l
 21238  01037A  0EE2               	movlw	-30
 21239  01037C  006F FF8F FFDA     	movff	plusw1,fsr2h
 21240  010382  006F FF7B FFF6     	movff	postinc2,tblptrl
 21241  010388  006F FF77 FFF7     	movff	postdec2,tblptrh
 21242  01038E                     	if	0	;tblptru may be non-zero
 21243  01038E                     	endif
 21244  01038E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21245  01038E  0E00               	movlw	low (__mediumconst shr (0+16))
 21246  010390  6EF8               	movwf	tblptru,c
 21247  010392                     	endif
 21248  010392  0008               	tblrd		*
 21249  010394  50F5               	movf	tablat,w,c
 21250  010396  6E3F               	movwf	(btemp+8)^0,c
 21251  010398  6A40               	clrf	(btemp+9)^0,c
 21252  01039A  5041               	movf	(btemp+10)^0,w,c
 21253  01039C  263F               	addwf	(btemp+8)^0,f,c
 21254  01039E  5042               	movf	(btemp+11)^0,w,c
 21255  0103A0  2240               	addwfc	(btemp+9)^0,f,c
 21256  0103A2  5040               	movf	(btemp+9)^0,w,c
 21257  0103A4  E106               	bnz	u9800
 21258  0103A6  0E0A               	movlw	10
 21259  0103A8  5C3F               	subwf	(btemp+8)^0,w,c
 21260  0103AA  B0D8               	btfsc	status,0,c
 21261  0103AC  D002               	goto	u9800
 21262  0103AE  0E01               	movlw	1
 21263  0103B0  D001               	goto	u9810
 21264  0103B2                     u9800:
 21265  0103B2  0E00               	movlw	0
 21266  0103B4                     u9810:
 21267  0103B4  6E41               	movwf	(btemp+10)^0,c
 21268  0103B6  6A42               	clrf	(btemp+11)^0,c
 21269                           
 21270                           ;stkvar	_vfpfcnvrt$5082 @ sp[(-27)+0]
 21271  0103B8  0EE5               	movlw	-27
 21272  0103BA  0060  F107  FFE3   	movff	btemp+10,plusw1
 21273  0103C0  0EE6               	movlw	-26
 21274  0103C2  0060  F10B  FFE3   	movff	btemp+11,plusw1
 21275                           
 21276                           ;stkvar	_vfpfcnvrt$5082 @ sp[(-27)+0]
 21277  0103C8  0EE5               	movlw	-27
 21278  0103CA  006F FF8C  F037    	movff	plusw1,btemp
 21279  0103D0  0EE6               	movlw	-26
 21280  0103D2  50E3               	movf	plusw1,w,c
 21281  0103D4  1037               	iorwf	btemp^0,w,c
 21282  0103D6  A4D8               	btfss	status,2,c
 21283  0103D8  D7BD               	goto	l13461
 21284  0103DA                     u9820:
 21285                           
 21286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 21287                           ;stkvar	_fmt @ sp[(-27)+-4]
 21288  0103DA  0EE1               	movlw	-31
 21289  0103DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 21290  0103E2  0EE2               	movlw	-30
 21291  0103E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 21292  0103EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21293  0103F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 21294  0103F6                     	if	0	;tblptru may be non-zero
 21295  0103F6                     	endif
 21296  0103F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21297  0103F6  0E00               	movlw	low (__mediumconst shr (0+16))
 21298  0103F8  6EF8               	movwf	tblptru,c
 21299  0103FA                     	endif
 21300  0103FA  0008               	tblrd		*
 21301  0103FC  50F5               	movf	tablat,w,c
 21302  0103FE  0A63               	xorlw	99
 21303  010400  A4D8               	btfss	status,2,c
 21304  010402  D037               	goto	l13479
 21305                           
 21306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 21307                           ;stkvar	_fmt @ sp[(-27)+-4]
 21308  010404  0EE1               	movlw	-31
 21309  010406  006F FF8F FFD9     	movff	plusw1,fsr2l
 21310  01040C  0EE2               	movlw	-30
 21311  01040E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21312  010414  2ADE               	incf	postinc2,f,c
 21313  010416  0E00               	movlw	0
 21314  010418  22DD               	addwfc	postdec2,f,c
 21315                           
 21316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21317                           ;stkvar	_ap @ sp[(-27)+-6]
 21318  01041A  0EDF               	movlw	-33
 21319  01041C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21320  010422  0EE0               	movlw	-32
 21321  010424  006F FF8F FFDA     	movff	plusw1,fsr2h
 21322  01042A  0E02               	movlw	2
 21323  01042C  5EDE               	subwf	postinc2,f,c
 21324  01042E  0E00               	movlw	0
 21325  010430  5ADD               	subwfb	postdec2,f,c
 21326  010432  006F FF78  F041    	movff	postinc2,btemp+10
 21327  010438  006F FF74  F042    	movff	postdec2,btemp+11
 21328  01043E  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21329  010444  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21330  01044A  50DF               	movf	indf2,w,c
 21331  01044C  6E42               	movwf	(btemp+11)^0,c
 21332                           
 21333                           ;stkvar	_c @ sp[(-27)+26]
 21334  01044E  0EFF               	movlw	-1
 21335  010450  0060  F10B  FFE3   	movff	btemp+11,plusw1
 21336                           
 21337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 21338                           ;stkvar	_c @ sp[(-27)+26]
 21339  010456  0EFF               	movlw	-1
 21340  010458  50E3               	movf	plusw1,w,c
 21341  01045A  6EE6               	movwf	postinc1,c
 21342                           
 21343                           ;stkvar	_fp @ sp[(-28)+-2]
 21344  01045C  0EE2               	movlw	-30
 21345  01045E  006F FF8F FFE6     	movff	plusw1,postinc1
 21346  010464  006F FF8F FFE6     	movff	plusw1,postinc1
 21347  01046A  EC17  F0C4         	call	_ctoa	;wreg free
 21348  01046E  EF07  F08E         	goto	l2469
 21349  010472                     l13479:
 21350                           
 21351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
 21352  010472  0E03               	movlw	3
 21353  010474  6EE6               	movwf	postinc1,c
 21354  010476  0E00               	movlw	0
 21355  010478  6EE6               	movwf	postinc1,c
 21356  01047A  0EAE               	movlw	low STR_69
 21357  01047C  6EE6               	movwf	postinc1,c
 21358  01047E  0EFF               	movlw	high STR_69
 21359  010480  6EE6               	movwf	postinc1,c
 21360                           
 21361                           ;stkvar	_fmt @ sp[(-31)+-4]
 21362  010482  0EDD               	movlw	-35
 21363  010484  006F FF8F FFD9     	movff	plusw1,fsr2l
 21364  01048A  0EDE               	movlw	-34
 21365  01048C  006F FF8F FFDA     	movff	plusw1,fsr2h
 21366  010492  006F FF78  F041    	movff	postinc2,btemp+10
 21367  010498  006F FF74  F042    	movff	postdec2,btemp+11
 21368  01049E  0060  F107  FFE6   	movff	btemp+10,postinc1
 21369  0104A4  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21370  0104AA  EC27  F0B7         	call	_strncmp	;wreg free
 21371  0104AE  5037               	movf	btemp^0,w,c
 21372  0104B0  1038               	iorwf	(btemp+1)^0,w,c
 21373  0104B2  B4D8               	btfsc	status,2,c
 21374  0104B4  D022               	goto	u9850
 21375  0104B6  0E03               	movlw	3
 21376  0104B8  6EE6               	movwf	postinc1,c
 21377  0104BA  0E00               	movlw	0
 21378  0104BC  6EE6               	movwf	postinc1,c
 21379  0104BE  0EB2               	movlw	low STR_73
 21380  0104C0  6EE6               	movwf	postinc1,c
 21381  0104C2  0EFF               	movlw	high STR_73
 21382  0104C4  6EE6               	movwf	postinc1,c
 21383                           
 21384                           ;stkvar	_fmt @ sp[(-31)+-4]
 21385  0104C6  0EDD               	movlw	-35
 21386  0104C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 21387  0104CE  0EDE               	movlw	-34
 21388  0104D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 21389  0104D6  006F FF78  F041    	movff	postinc2,btemp+10
 21390  0104DC  006F FF74  F042    	movff	postdec2,btemp+11
 21391  0104E2  0060  F107  FFE6   	movff	btemp+10,postinc1
 21392  0104E8  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21393  0104EE  EC27  F0B7         	call	_strncmp	;wreg free
 21394  0104F2  5037               	movf	btemp^0,w,c
 21395  0104F4  1038               	iorwf	(btemp+1)^0,w,c
 21396  0104F6  A4D8               	btfss	status,2,c
 21397  0104F8  D07A               	goto	l13491
 21398  0104FA                     u9850:
 21399                           
 21400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
 21401                           ;stkvar	_fmt @ sp[(-27)+-4]
 21402  0104FA  0EE1               	movlw	-31
 21403  0104FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 21404  010502  0EE2               	movlw	-30
 21405  010504  006F FF8F FFDA     	movff	plusw1,fsr2h
 21406  01050A  0E03               	movlw	3
 21407  01050C  26DE               	addwf	postinc2,f,c
 21408  01050E  0E00               	movlw	0
 21409  010510  22DD               	addwfc	postdec2,f,c
 21410                           
 21411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21412                           ;stkvar	_ap @ sp[(-27)+-6]
 21413  010512  0EDF               	movlw	-33
 21414  010514  006F FF8F FFD9     	movff	plusw1,fsr2l
 21415  01051A  0EE0               	movlw	-32
 21416  01051C  006F FF8F FFDA     	movff	plusw1,fsr2h
 21417  010522  0E02               	movlw	2
 21418  010524  5EDE               	subwf	postinc2,f,c
 21419  010526  0E00               	movlw	0
 21420  010528  5ADD               	subwfb	postdec2,f,c
 21421  01052A  006F FF78  F041    	movff	postinc2,btemp+10
 21422  010530  006F FF74  F042    	movff	postdec2,btemp+11
 21423  010536  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21424  01053C  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21425  010542  50DF               	movf	indf2,w,c
 21426  010544  6E47               	movwf	(btemp+16)^0,c
 21427  010546  0E00               	movlw	0
 21428  010548  BE47               	btfsc	(btemp+16)^0,7,c
 21429  01054A  0EFF               	movlw	255
 21430  01054C  6E48               	movwf	(btemp+17)^0,c
 21431  01054E  6E49               	movwf	(btemp+18)^0,c
 21432  010550  6E4A               	movwf	(btemp+19)^0,c
 21433  010552  6E4B               	movwf	(btemp+20)^0,c
 21434  010554  6E4C               	movwf	(btemp+21)^0,c
 21435  010556  6E4D               	movwf	(btemp+22)^0,c
 21436  010558  6E4E               	movwf	(btemp+23)^0,c
 21437  01055A                     L36:
 21438                           
 21439                           ;stkvar	_ll @ sp[(-27)+12]
 21440  01055A  0EF1               	movlw	-15
 21441  01055C  0060  F11F  FFE3   	movff	btemp+16,plusw1
 21442  010562  0EF2               	movlw	-14
 21443  010564  0060  F123  FFE3   	movff	btemp+17,plusw1
 21444  01056A  0EF3               	movlw	-13
 21445  01056C  0060  F127  FFE3   	movff	btemp+18,plusw1
 21446  010572  0EF4               	movlw	-12
 21447  010574  0060  F12B  FFE3   	movff	btemp+19,plusw1
 21448  01057A  0EF5               	movlw	-11
 21449  01057C  0060  F12F  FFE3   	movff	btemp+20,plusw1
 21450  010582  0EF6               	movlw	-10
 21451  010584  0060  F133  FFE3   	movff	btemp+21,plusw1
 21452  01058A  0EF7               	movlw	-9
 21453  01058C  0060  F137  FFE3   	movff	btemp+22,plusw1
 21454  010592  0EF8               	movlw	-8
 21455  010594  0060  F13B  FFE3   	movff	btemp+23,plusw1
 21456  01059A                     l13487:
 21457                           
 21458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
 21459                           ;stkvar	_ll @ sp[(-27)+12]
 21460  01059A  50E1               	movf	fsr1l,w,c
 21461  01059C  0FF1               	addlw	-15
 21462  01059E  6ED9               	movwf	fsr2l,c
 21463  0105A0  50E2               	movf	fsr1h,w,c
 21464  0105A2  6EDA               	movwf	fsr2h,c
 21465  0105A4  0EFF               	movlw	255
 21466  0105A6  22DA               	addwfc	fsr2h,f,c
 21467  0105A8  006F FF7B FFE6     	movff	postinc2,postinc1
 21468  0105AE  006F FF7B FFE6     	movff	postinc2,postinc1
 21469  0105B4  006F FF7B FFE6     	movff	postinc2,postinc1
 21470  0105BA  006F FF7B FFE6     	movff	postinc2,postinc1
 21471  0105C0  006F FF7B FFE6     	movff	postinc2,postinc1
 21472  0105C6  006F FF7B FFE6     	movff	postinc2,postinc1
 21473  0105CC  006F FF7B FFE6     	movff	postinc2,postinc1
 21474  0105D2  006F FF7B FFE6     	movff	postinc2,postinc1
 21475                           
 21476                           ;stkvar	_fp @ sp[(-35)+-2]
 21477  0105D8  0EDB               	movlw	-37
 21478  0105DA  006F FF8F FFE6     	movff	plusw1,postinc1
 21479  0105E0  006F FF8F FFE6     	movff	plusw1,postinc1
 21480  0105E6  EC5A  F09F         	call	_dtoa	;wreg free
 21481  0105EA  EF07  F08E         	goto	l2469
 21482  0105EE                     l13491:
 21483                           
 21484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
 21485  0105EE  0E02               	movlw	2
 21486  0105F0  6EE6               	movwf	postinc1,c
 21487  0105F2  0E00               	movlw	0
 21488  0105F4  6EE6               	movwf	postinc1,c
 21489  0105F6  0EAF               	movlw	low (STR_69+1)
 21490  0105F8  6EE6               	movwf	postinc1,c
 21491  0105FA  0EFF               	movlw	high (STR_69+1)
 21492  0105FC  6EE6               	movwf	postinc1,c
 21493                           
 21494                           ;stkvar	_fmt @ sp[(-31)+-4]
 21495  0105FE  0EDD               	movlw	-35
 21496  010600  006F FF8F FFD9     	movff	plusw1,fsr2l
 21497  010606  0EDE               	movlw	-34
 21498  010608  006F FF8F FFDA     	movff	plusw1,fsr2h
 21499  01060E  006F FF78  F041    	movff	postinc2,btemp+10
 21500  010614  006F FF74  F042    	movff	postdec2,btemp+11
 21501  01061A  0060  F107  FFE6   	movff	btemp+10,postinc1
 21502  010620  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21503  010626  EC27  F0B7         	call	_strncmp	;wreg free
 21504  01062A  5037               	movf	btemp^0,w,c
 21505  01062C  1038               	iorwf	(btemp+1)^0,w,c
 21506  01062E  B4D8               	btfsc	status,2,c
 21507  010630  D022               	goto	u9870
 21508  010632  0E02               	movlw	2
 21509  010634  6EE6               	movwf	postinc1,c
 21510  010636  0E00               	movlw	0
 21511  010638  6EE6               	movwf	postinc1,c
 21512  01063A  0EB3               	movlw	low (STR_73+1)
 21513  01063C  6EE6               	movwf	postinc1,c
 21514  01063E  0EFF               	movlw	high (STR_73+1)
 21515  010640  6EE6               	movwf	postinc1,c
 21516                           
 21517                           ;stkvar	_fmt @ sp[(-31)+-4]
 21518  010642  0EDD               	movlw	-35
 21519  010644  006F FF8F FFD9     	movff	plusw1,fsr2l
 21520  01064A  0EDE               	movlw	-34
 21521  01064C  006F FF8F FFDA     	movff	plusw1,fsr2h
 21522  010652  006F FF78  F041    	movff	postinc2,btemp+10
 21523  010658  006F FF74  F042    	movff	postdec2,btemp+11
 21524  01065E  0060  F107  FFE6   	movff	btemp+10,postinc1
 21525  010664  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21526  01066A  EC27  F0B7         	call	_strncmp	;wreg free
 21527  01066E  5037               	movf	btemp^0,w,c
 21528  010670  1038               	iorwf	(btemp+1)^0,w,c
 21529  010672  A4D8               	btfss	status,2,c
 21530  010674  D04D               	goto	l13503
 21531  010676                     u9870:
 21532                           
 21533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
 21534                           ;stkvar	_fmt @ sp[(-27)+-4]
 21535  010676  0EE1               	movlw	-31
 21536  010678  006F FF8F FFD9     	movff	plusw1,fsr2l
 21537  01067E  0EE2               	movlw	-30
 21538  010680  006F FF8F FFDA     	movff	plusw1,fsr2h
 21539  010686  0E02               	movlw	2
 21540  010688  26DE               	addwf	postinc2,f,c
 21541  01068A  D075               	goto	L35
 21542  01068C                     l13497:
 21543                           
 21544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 818:             ll = (long l
      +                          ong)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21545                           ;stkvar	_ap @ sp[(-27)+-6]
 21546  01068C  0EDF               	movlw	-33
 21547  01068E  006F FF8F FFD9     	movff	plusw1,fsr2l
 21548  010694  0EE0               	movlw	-32
 21549  010696  006F FF8F FFDA     	movff	plusw1,fsr2h
 21550  01069C  0E02               	movlw	2
 21551  01069E  5EDE               	subwf	postinc2,f,c
 21552  0106A0  0E00               	movlw	0
 21553  0106A2  5ADD               	subwfb	postdec2,f,c
 21554  0106A4  006F FF78  F041    	movff	postinc2,btemp+10
 21555  0106AA  006F FF74  F042    	movff	postdec2,btemp+11
 21556  0106B0  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21557  0106B6  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21558  0106BC  006F FF78  F041    	movff	postinc2,btemp+10
 21559  0106C2  006F FF74  F042    	movff	postdec2,btemp+11
 21560                           
 21561                           ;stkvar	_ll @ sp[(-27)+12]
 21562  0106C8  0EF1               	movlw	-15
 21563  0106CA  0060  F107  FFE3   	movff	btemp+10,plusw1
 21564  0106D0  0EF2               	movlw	-14
 21565  0106D2  0060  F10B  FFE3   	movff	btemp+11,plusw1
 21566  0106D8  6A37               	clrf	btemp^0,c
 21567  0106DA  BEE3               	btfsc	plusw1,7,c
 21568  0106DC  6837               	setf	btemp^0,c
 21569  0106DE  0EF3               	movlw	-13
 21570  0106E0  0060  F0DF  FFE3   	movff	btemp,plusw1
 21571  0106E6  0EF4               	movlw	-12
 21572  0106E8  0060  F0DF  FFE3   	movff	btemp,plusw1
 21573  0106EE  0EF5               	movlw	-11
 21574  0106F0  0060  F0DF  FFE3   	movff	btemp,plusw1
 21575  0106F6  0EF6               	movlw	-10
 21576  0106F8  0060  F0DF  FFE3   	movff	btemp,plusw1
 21577  0106FE  0EF7               	movlw	-9
 21578  010700  0060  F0DF  FFE3   	movff	btemp,plusw1
 21579  010706  0EF8               	movlw	-8
 21580  010708  0060  F0DF  FFE3   	movff	btemp,plusw1
 21581  01070E  D745               	goto	l13487
 21582  010710                     l13503:
 21583                           
 21584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 21585                           ;stkvar	_fmt @ sp[(-27)+-4]
 21586  010710  0EE1               	movlw	-31
 21587  010712  006F FF8F FFD9     	movff	plusw1,fsr2l
 21588  010718  0EE2               	movlw	-30
 21589  01071A  006F FF8F FFDA     	movff	plusw1,fsr2h
 21590  010720  006F FF7B FFF6     	movff	postinc2,tblptrl
 21591  010726  006F FF77 FFF7     	movff	postdec2,tblptrh
 21592  01072C                     	if	0	;tblptru may be non-zero
 21593  01072C                     	endif
 21594  01072C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21595  01072C  0E00               	movlw	low (__mediumconst shr (0+16))
 21596  01072E  6EF8               	movwf	tblptru,c
 21597  010730                     	endif
 21598  010730  0008               	tblrd		*
 21599  010732  50F5               	movf	tablat,w,c
 21600  010734  0A64               	xorlw	100
 21601  010736  B4D8               	btfsc	status,2,c
 21602  010738  D015               	goto	u9890
 21603                           
 21604                           ;stkvar	_fmt @ sp[(-27)+-4]
 21605  01073A  0EE1               	movlw	-31
 21606  01073C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21607  010742  0EE2               	movlw	-30
 21608  010744  006F FF8F FFDA     	movff	plusw1,fsr2h
 21609  01074A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21610  010750  006F FF77 FFF7     	movff	postdec2,tblptrh
 21611  010756                     	if	0	;tblptru may be non-zero
 21612  010756                     	endif
 21613  010756                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21614  010756  0E00               	movlw	low (__mediumconst shr (0+16))
 21615  010758  6EF8               	movwf	tblptru,c
 21616  01075A                     	endif
 21617  01075A  0008               	tblrd		*
 21618  01075C  50F5               	movf	tablat,w,c
 21619  01075E  0A69               	xorlw	105
 21620  010760  A4D8               	btfss	status,2,c
 21621  010762  D00C               	goto	l13515
 21622  010764                     u9890:
 21623                           
 21624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 21625                           ;stkvar	_fmt @ sp[(-27)+-4]
 21626  010764  0EE1               	movlw	-31
 21627  010766  006F FF8F FFD9     	movff	plusw1,fsr2l
 21628  01076C  0EE2               	movlw	-30
 21629  01076E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21630  010774  2ADE               	incf	postinc2,f,c
 21631  010776                     L35:
 21632  010776  0E00               	movlw	0
 21633  010778  22DD               	addwfc	postdec2,f,c
 21634  01077A  D788               	goto	l13497
 21635  01077C                     l13515:
 21636                           
 21637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 21638  01077C  0E02               	movlw	2
 21639  01077E  6EE6               	movwf	postinc1,c
 21640  010780  0E00               	movlw	0
 21641  010782  6EE6               	movwf	postinc1,c
 21642  010784  0ED4               	movlw	low STR_87
 21643  010786  6EE6               	movwf	postinc1,c
 21644  010788  0EFF               	movlw	high STR_87
 21645  01078A  6EE6               	movwf	postinc1,c
 21646                           
 21647                           ;stkvar	_fmt @ sp[(-31)+-4]
 21648  01078C  0EDD               	movlw	-35
 21649  01078E  006F FF8F FFD9     	movff	plusw1,fsr2l
 21650  010794  0EDE               	movlw	-34
 21651  010796  006F FF8F FFDA     	movff	plusw1,fsr2h
 21652  01079C  006F FF78  F041    	movff	postinc2,btemp+10
 21653  0107A2  006F FF74  F042    	movff	postdec2,btemp+11
 21654  0107A8  0060  F107  FFE6   	movff	btemp+10,postinc1
 21655  0107AE  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21656  0107B4  EC27  F0B7         	call	_strncmp	;wreg free
 21657  0107B8  5037               	movf	btemp^0,w,c
 21658  0107BA  1038               	iorwf	(btemp+1)^0,w,c
 21659  0107BC  B4D8               	btfsc	status,2,c
 21660  0107BE  D022               	goto	u9910
 21661  0107C0  0E02               	movlw	2
 21662  0107C2  6EE6               	movwf	postinc1,c
 21663  0107C4  0E00               	movlw	0
 21664  0107C6  6EE6               	movwf	postinc1,c
 21665  0107C8  0EDA               	movlw	low STR_91
 21666  0107CA  6EE6               	movwf	postinc1,c
 21667  0107CC  0EFF               	movlw	high STR_91
 21668  0107CE  6EE6               	movwf	postinc1,c
 21669                           
 21670                           ;stkvar	_fmt @ sp[(-31)+-4]
 21671  0107D0  0EDD               	movlw	-35
 21672  0107D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 21673  0107D8  0EDE               	movlw	-34
 21674  0107DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 21675  0107E0  006F FF78  F041    	movff	postinc2,btemp+10
 21676  0107E6  006F FF74  F042    	movff	postdec2,btemp+11
 21677  0107EC  0060  F107  FFE6   	movff	btemp+10,postinc1
 21678  0107F2  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21679  0107F8  EC27  F0B7         	call	_strncmp	;wreg free
 21680  0107FC  5037               	movf	btemp^0,w,c
 21681  0107FE  1038               	iorwf	(btemp+1)^0,w,c
 21682  010800  A4D8               	btfss	status,2,c
 21683  010802  D049               	goto	l13527
 21684  010804                     u9910:
 21685                           
 21686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 21687                           ;stkvar	_fmt @ sp[(-27)+-4]
 21688  010804  0EE1               	movlw	-31
 21689  010806  006F FF8F FFD9     	movff	plusw1,fsr2l
 21690  01080C  0EE2               	movlw	-30
 21691  01080E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21692  010814  0E02               	movlw	2
 21693  010816  26DE               	addwf	postinc2,f,c
 21694  010818  0E00               	movlw	0
 21695  01081A  22DD               	addwfc	postdec2,f,c
 21696                           
 21697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 21698                           ;stkvar	_ap @ sp[(-27)+-6]
 21699  01081C  0EDF               	movlw	-33
 21700  01081E  006F FF8F FFD9     	movff	plusw1,fsr2l
 21701  010824  0EE0               	movlw	-32
 21702  010826  006F FF8F FFDA     	movff	plusw1,fsr2h
 21703  01082C  0E04               	movlw	4
 21704  01082E  5EDE               	subwf	postinc2,f,c
 21705  010830  0E00               	movlw	0
 21706  010832  5ADD               	subwfb	postdec2,f,c
 21707  010834  006F FF78  F041    	movff	postinc2,btemp+10
 21708  01083A  006F FF74  F042    	movff	postdec2,btemp+11
 21709  010840  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21710  010846  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21711  01084C  006F FF78  F03F    	movff	postinc2,btemp+8
 21712  010852  006F FF78  F040    	movff	postinc2,btemp+9
 21713  010858  006F FF78  F041    	movff	postinc2,btemp+10
 21714  01085E  006F FF78  F042    	movff	postinc2,btemp+11
 21715  010864  0060  F0FC  F047   	movff	btemp+8,btemp+16
 21716  01086A  0060  F100  F048   	movff	btemp+9,btemp+17
 21717  010870  0060  F104  F049   	movff	btemp+10,btemp+18
 21718  010876  0060  F108  F04A   	movff	btemp+11,btemp+19
 21719  01087C  6A4B               	clrf	(btemp+20)^0,c
 21720  01087E  BE4A               	btfsc	(btemp+19)^0,7,c
 21721  010880  684B               	setf	(btemp+20)^0,c
 21722  010882  0060  F12C  F04C   	movff	btemp+20,btemp+21
 21723  010888  0060  F12C  F04D   	movff	btemp+20,btemp+22
 21724  01088E  0060  F12C  F04E   	movff	btemp+20,btemp+23
 21725  010894  D662               	goto	L36
 21726  010896                     l13527:
 21727                           
 21728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
 21729  010896  0E02               	movlw	2
 21730  010898  6EE6               	movwf	postinc1,c
 21731  01089A  0E00               	movlw	0
 21732  01089C  6EE6               	movwf	postinc1,c
 21733  01089E  0ED7               	movlw	low STR_96
 21734  0108A0  6EE6               	movwf	postinc1,c
 21735  0108A2  0EFF               	movlw	high STR_96
 21736  0108A4  6EE6               	movwf	postinc1,c
 21737                           
 21738                           ;stkvar	_fmt @ sp[(-31)+-4]
 21739  0108A6  0EDD               	movlw	-35
 21740  0108A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 21741  0108AE  0EDE               	movlw	-34
 21742  0108B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 21743  0108B6  006F FF78  F041    	movff	postinc2,btemp+10
 21744  0108BC  006F FF74  F042    	movff	postdec2,btemp+11
 21745  0108C2  0060  F107  FFE6   	movff	btemp+10,postinc1
 21746  0108C8  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21747  0108CE  EC27  F0B7         	call	_strncmp	;wreg free
 21748  0108D2  5037               	movf	btemp^0,w,c
 21749  0108D4  1038               	iorwf	(btemp+1)^0,w,c
 21750  0108D6  B4D8               	btfsc	status,2,c
 21751  0108D8  D022               	goto	u9930
 21752  0108DA  0E02               	movlw	2
 21753  0108DC  6EE6               	movwf	postinc1,c
 21754  0108DE  0E00               	movlw	0
 21755  0108E0  6EE6               	movwf	postinc1,c
 21756  0108E2  0EDD               	movlw	low STR_100
 21757  0108E4  6EE6               	movwf	postinc1,c
 21758  0108E6  0EFF               	movlw	high STR_100
 21759  0108E8  6EE6               	movwf	postinc1,c
 21760                           
 21761                           ;stkvar	_fmt @ sp[(-31)+-4]
 21762  0108EA  0EDD               	movlw	-35
 21763  0108EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 21764  0108F2  0EDE               	movlw	-34
 21765  0108F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 21766  0108FA  006F FF78  F041    	movff	postinc2,btemp+10
 21767  010900  006F FF74  F042    	movff	postdec2,btemp+11
 21768  010906  0060  F107  FFE6   	movff	btemp+10,postinc1
 21769  01090C  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21770  010912  EC27  F0B7         	call	_strncmp	;wreg free
 21771  010916  5037               	movf	btemp^0,w,c
 21772  010918  1038               	iorwf	(btemp+1)^0,w,c
 21773  01091A  A4D8               	btfss	status,2,c
 21774  01091C  D035               	goto	l13539
 21775  01091E                     u9930:
 21776                           
 21777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
 21778                           ;stkvar	_fmt @ sp[(-27)+-4]
 21779  01091E  0EE1               	movlw	-31
 21780  010920  006F FF8F FFD9     	movff	plusw1,fsr2l
 21781  010926  0EE2               	movlw	-30
 21782  010928  006F FF8F FFDA     	movff	plusw1,fsr2h
 21783  01092E  0E02               	movlw	2
 21784  010930  26DE               	addwf	postinc2,f,c
 21785  010932  0E00               	movlw	0
 21786  010934  22DD               	addwfc	postdec2,f,c
 21787                           
 21788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21789                           ;stkvar	_ap @ sp[(-27)+-6]
 21790  010936  0EDF               	movlw	-33
 21791  010938  006F FF8F FFD9     	movff	plusw1,fsr2l
 21792  01093E  0EE0               	movlw	-32
 21793  010940  006F FF8F FFDA     	movff	plusw1,fsr2h
 21794  010946  0E02               	movlw	2
 21795  010948  5EDE               	subwf	postinc2,f,c
 21796  01094A  0E00               	movlw	0
 21797  01094C  5ADD               	subwfb	postdec2,f,c
 21798  01094E  006F FF78  F041    	movff	postinc2,btemp+10
 21799  010954  006F FF74  F042    	movff	postdec2,btemp+11
 21800  01095A  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21801  010960  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21802  010966  006F FF78  F041    	movff	postinc2,btemp+10
 21803  01096C  006F FF74  F042    	movff	postdec2,btemp+11
 21804  010972  5041               	movf	(btemp+10)^0,w,c
 21805  010974  6E47               	movwf	(btemp+16)^0,c
 21806  010976  5042               	movf	(btemp+11)^0,w,c
 21807  010978  6E48               	movwf	(btemp+17)^0,c
 21808  01097A  6A49               	clrf	(btemp+18)^0,c
 21809  01097C  6A4A               	clrf	(btemp+19)^0,c
 21810  01097E  6A4B               	clrf	(btemp+20)^0,c
 21811  010980  6A4C               	clrf	(btemp+21)^0,c
 21812  010982  6A4D               	clrf	(btemp+22)^0,c
 21813  010984  6A4E               	clrf	(btemp+23)^0,c
 21814  010986  D5E9               	goto	L36
 21815  010988                     l13539:
 21816                           
 21817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21818  010988  0E03               	movlw	3
 21819  01098A  6EE6               	movwf	postinc1,c
 21820  01098C  0E00               	movlw	0
 21821  01098E  6EE6               	movwf	postinc1,c
 21822  010990  0EBA               	movlw	low STR_105
 21823  010992  6EE6               	movwf	postinc1,c
 21824  010994  0EFF               	movlw	high STR_105
 21825  010996  6EE6               	movwf	postinc1,c
 21826                           
 21827                           ;stkvar	_fmt @ sp[(-31)+-4]
 21828  010998  0EDD               	movlw	-35
 21829  01099A  006F FF8F FFD9     	movff	plusw1,fsr2l
 21830  0109A0  0EDE               	movlw	-34
 21831  0109A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 21832  0109A8  006F FF78  F041    	movff	postinc2,btemp+10
 21833  0109AE  006F FF74  F042    	movff	postdec2,btemp+11
 21834  0109B4  0060  F107  FFE6   	movff	btemp+10,postinc1
 21835  0109BA  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21836  0109C0  EC27  F0B7         	call	_strncmp	;wreg free
 21837  0109C4  5037               	movf	btemp^0,w,c
 21838  0109C6  1038               	iorwf	(btemp+1)^0,w,c
 21839  0109C8  A4D8               	btfss	status,2,c
 21840  0109CA  D07A               	goto	l13549
 21841                           
 21842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
 21843                           ;stkvar	_fmt @ sp[(-27)+-4]
 21844  0109CC  0EE1               	movlw	-31
 21845  0109CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 21846  0109D4  0EE2               	movlw	-30
 21847  0109D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 21848  0109DC  0E03               	movlw	3
 21849  0109DE  26DE               	addwf	postinc2,f,c
 21850  0109E0  0E00               	movlw	0
 21851  0109E2  22DD               	addwfc	postdec2,f,c
 21852                           
 21853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21854                           ;stkvar	_ap @ sp[(-27)+-6]
 21855  0109E4  0EDF               	movlw	-33
 21856  0109E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 21857  0109EC  0EE0               	movlw	-32
 21858  0109EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 21859  0109F4  0E02               	movlw	2
 21860  0109F6  5EDE               	subwf	postinc2,f,c
 21861  0109F8  0E00               	movlw	0
 21862  0109FA  5ADD               	subwfb	postdec2,f,c
 21863  0109FC  006F FF78  F041    	movff	postinc2,btemp+10
 21864  010A02  006F FF74  F042    	movff	postdec2,btemp+11
 21865  010A08  0060  F107  FFD9   	movff	btemp+10,fsr2l
 21866  010A0E  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 21867  010A14  50DF               	movf	indf2,w,c
 21868  010A16  6E42               	movwf	(btemp+11)^0,c
 21869  010A18  0060  F108  F047   	movff	btemp+11,btemp+16
 21870  010A1E  6A48               	clrf	(btemp+17)^0,c
 21871  010A20                     L37:
 21872  010A20  6A49               	clrf	(btemp+18)^0,c
 21873  010A22  6A4A               	clrf	(btemp+19)^0,c
 21874  010A24                     L38:
 21875  010A24  6A4B               	clrf	(btemp+20)^0,c
 21876  010A26  6A4C               	clrf	(btemp+21)^0,c
 21877  010A28  6A4D               	clrf	(btemp+22)^0,c
 21878  010A2A  6A4E               	clrf	(btemp+23)^0,c
 21879                           
 21880                           ;stkvar	_llu @ sp[(-27)+4]
 21881  010A2C  0EE9               	movlw	-23
 21882  010A2E  0060  F11F  FFE3   	movff	btemp+16,plusw1
 21883  010A34  0EEA               	movlw	-22
 21884  010A36  0060  F123  FFE3   	movff	btemp+17,plusw1
 21885  010A3C  0EEB               	movlw	-21
 21886  010A3E  0060  F127  FFE3   	movff	btemp+18,plusw1
 21887  010A44  0EEC               	movlw	-20
 21888  010A46  0060  F12B  FFE3   	movff	btemp+19,plusw1
 21889  010A4C  0EED               	movlw	-19
 21890  010A4E  0060  F12F  FFE3   	movff	btemp+20,plusw1
 21891  010A54  0EEE               	movlw	-18
 21892  010A56  0060  F133  FFE3   	movff	btemp+21,plusw1
 21893  010A5C  0EEF               	movlw	-17
 21894  010A5E  0060  F137  FFE3   	movff	btemp+22,plusw1
 21895  010A64  0EF0               	movlw	-16
 21896  010A66  0060  F13B  FFE3   	movff	btemp+23,plusw1
 21897                           
 21898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
 21899                           ;stkvar	_llu @ sp[(-27)+4]
 21900  010A6C  50E1               	movf	fsr1l,w,c
 21901  010A6E  0FE9               	addlw	-23
 21902  010A70  6ED9               	movwf	fsr2l,c
 21903  010A72  50E2               	movf	fsr1h,w,c
 21904  010A74  6EDA               	movwf	fsr2h,c
 21905  010A76  0EFF               	movlw	255
 21906  010A78  22DA               	addwfc	fsr2h,f,c
 21907  010A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 21908  010A80  006F FF7B FFE6     	movff	postinc2,postinc1
 21909  010A86  006F FF7B FFE6     	movff	postinc2,postinc1
 21910  010A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 21911  010A92  006F FF7B FFE6     	movff	postinc2,postinc1
 21912  010A98  006F FF7B FFE6     	movff	postinc2,postinc1
 21913  010A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 21914  010AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 21915                           
 21916                           ;stkvar	_fp @ sp[(-35)+-2]
 21917  010AAA  0EDB               	movlw	-37
 21918  010AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 21919  010AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 21920  010AB8  ECAB  F0B1         	call	_otoa	;wreg free
 21921  010ABC  EF07  F08E         	goto	l2469
 21922  010AC0                     l13549:
 21923                           
 21924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21925  010AC0  0E02               	movlw	2
 21926  010AC2  6EE6               	movwf	postinc1,c
 21927  010AC4  0E00               	movlw	0
 21928  010AC6  6EE6               	movwf	postinc1,c
 21929  010AC8  0EBB               	movlw	low (STR_105+1)
 21930  010ACA  6EE6               	movwf	postinc1,c
 21931  010ACC  0EFF               	movlw	high (STR_105+1)
 21932  010ACE  6EE6               	movwf	postinc1,c
 21933                           
 21934                           ;stkvar	_fmt @ sp[(-31)+-4]
 21935  010AD0  0EDD               	movlw	-35
 21936  010AD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 21937  010AD8  0EDE               	movlw	-34
 21938  010ADA  006F FF8F FFDA     	movff	plusw1,fsr2h
 21939  010AE0  006F FF78  F041    	movff	postinc2,btemp+10
 21940  010AE6  006F FF74  F042    	movff	postdec2,btemp+11
 21941  010AEC  0060  F107  FFE6   	movff	btemp+10,postinc1
 21942  010AF2  0060  F10B  FFE6   	movff	btemp+11,postinc1
 21943  010AF8  EC27  F0B7         	call	_strncmp	;wreg free
 21944  010AFC  5037               	movf	btemp^0,w,c
 21945  010AFE  1038               	iorwf	(btemp+1)^0,w,c
 21946  010B00  B4D8               	btfsc	status,2,c
 21947  010B02  D09C               	goto	L58
 21948                           
 21949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
 21950                           ;stkvar	_fmt @ sp[(-27)+-4]
 21951                           
 21952                           ;stkvar	_llu @ sp[(-27)+4]
 21953                           
 21954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21955                           ;stkvar	_ap @ sp[(-27)+-6]
 21956                           
 21957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
 21958                           ;stkvar	_fmt @ sp[(-27)+-4]
 21959  010B04  0EE1               	movlw	-31
 21960  010B06  006F FF8F FFD9     	movff	plusw1,fsr2l
 21961  010B0C  0EE2               	movlw	-30
 21962  010B0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21963  010B14  006F FF7B FFF6     	movff	postinc2,tblptrl
 21964  010B1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 21965  010B20                     	if	0	;tblptru may be non-zero
 21966  010B20                     	endif
 21967  010B20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21968  010B20  0E00               	movlw	low (__mediumconst shr (0+16))
 21969  010B22  6EF8               	movwf	tblptru,c
 21970  010B24                     	endif
 21971  010B24  0008               	tblrd		*
 21972  010B26  50F5               	movf	tablat,w,c
 21973  010B28  0A6F               	xorlw	111
 21974  010B2A  A4D8               	btfss	status,2,c
 21975  010B2C  D00A               	goto	l13569
 21976                           
 21977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
 21978                           ;stkvar	_fmt @ sp[(-27)+-4]
 21979  010B2E  0EE1               	movlw	-31
 21980  010B30  006F FF8F FFD9     	movff	plusw1,fsr2l
 21981  010B36  0EE2               	movlw	-30
 21982  010B38  006F FF8F FFDA     	movff	plusw1,fsr2h
 21983  010B3E  2ADE               	incf	postinc2,f,c
 21984  010B40  D087               	goto	L55
 21985  010B42                     l13569:
 21986                           
 21987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 21988  010B42  0E02               	movlw	2
 21989  010B44  6EE6               	movwf	postinc1,c
 21990  010B46  0E00               	movlw	0
 21991  010B48  6EE6               	movwf	postinc1,c
 21992  010B4A  0EE6               	movlw	low STR_115
 21993  010B4C  6EE6               	movwf	postinc1,c
 21994  010B4E  0EFF               	movlw	high STR_115
 21995  010B50  6EE6               	movwf	postinc1,c
 21996                           
 21997                           ;stkvar	_fmt @ sp[(-31)+-4]
 21998  010B52  0EDD               	movlw	-35
 21999  010B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 22000  010B5A  0EDE               	movlw	-34
 22001  010B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 22002  010B62  006F FF78  F041    	movff	postinc2,btemp+10
 22003  010B68  006F FF74  F042    	movff	postdec2,btemp+11
 22004  010B6E  0060  F107  FFE6   	movff	btemp+10,postinc1
 22005  010B74  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22006  010B7A  EC27  F0B7         	call	_strncmp	;wreg free
 22007  010B7E  5037               	movf	btemp^0,w,c
 22008  010B80  1038               	iorwf	(btemp+1)^0,w,c
 22009  010B82  A4D8               	btfss	status,2,c
 22010  010B84  D039               	goto	l13579
 22011                           
 22012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
 22013                           ;stkvar	_fmt @ sp[(-27)+-4]
 22014  010B86  0EE1               	movlw	-31
 22015  010B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 22016  010B8E  0EE2               	movlw	-30
 22017  010B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 22018  010B96  0E02               	movlw	2
 22019  010B98  26DE               	addwf	postinc2,f,c
 22020  010B9A  0E00               	movlw	0
 22021  010B9C  22DD               	addwfc	postdec2,f,c
 22022                           
 22023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 22024                           ;stkvar	_ap @ sp[(-27)+-6]
 22025  010B9E  0EDF               	movlw	-33
 22026  010BA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 22027  010BA6  0EE0               	movlw	-32
 22028  010BA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 22029  010BAE  0E04               	movlw	4
 22030  010BB0  5EDE               	subwf	postinc2,f,c
 22031  010BB2  0E00               	movlw	0
 22032  010BB4  5ADD               	subwfb	postdec2,f,c
 22033  010BB6  006F FF78  F041    	movff	postinc2,btemp+10
 22034  010BBC  006F FF74  F042    	movff	postdec2,btemp+11
 22035  010BC2  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22036  010BC8  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22037  010BCE  006F FF78  F03F    	movff	postinc2,btemp+8
 22038  010BD4  006F FF78  F040    	movff	postinc2,btemp+9
 22039  010BDA  006F FF78  F041    	movff	postinc2,btemp+10
 22040  010BE0  006F FF78  F042    	movff	postinc2,btemp+11
 22041  010BE6  503F               	movf	(btemp+8)^0,w,c
 22042  010BE8  6E47               	movwf	(btemp+16)^0,c
 22043  010BEA  5040               	movf	(btemp+9)^0,w,c
 22044  010BEC  6E48               	movwf	(btemp+17)^0,c
 22045  010BEE  5041               	movf	(btemp+10)^0,w,c
 22046  010BF0  6E49               	movwf	(btemp+18)^0,c
 22047  010BF2  5042               	movf	(btemp+11)^0,w,c
 22048  010BF4  6E4A               	movwf	(btemp+19)^0,c
 22049  010BF6  D716               	goto	L38
 22050  010BF8                     l13579:
 22051                           
 22052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 22053  010BF8  0E02               	movlw	2
 22054  010BFA  6EE6               	movwf	postinc1,c
 22055  010BFC  0E00               	movlw	0
 22056  010BFE  6EE6               	movwf	postinc1,c
 22057  010C00  0EE9               	movlw	low STR_120
 22058  010C02  6EE6               	movwf	postinc1,c
 22059  010C04  0EFF               	movlw	high STR_120
 22060  010C06  6EE6               	movwf	postinc1,c
 22061                           
 22062                           ;stkvar	_fmt @ sp[(-31)+-4]
 22063  010C08  0EDD               	movlw	-35
 22064  010C0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22065  010C10  0EDE               	movlw	-34
 22066  010C12  006F FF8F FFDA     	movff	plusw1,fsr2h
 22067  010C18  006F FF78  F041    	movff	postinc2,btemp+10
 22068  010C1E  006F FF74  F042    	movff	postdec2,btemp+11
 22069  010C24  0060  F107  FFE6   	movff	btemp+10,postinc1
 22070  010C2A  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22071  010C30  EC27  F0B7         	call	_strncmp	;wreg free
 22072  010C34  5037               	movf	btemp^0,w,c
 22073  010C36  1038               	iorwf	(btemp+1)^0,w,c
 22074  010C38  A4D8               	btfss	status,2,c
 22075  010C3A  D02F               	goto	l13589
 22076  010C3C                     L58:
 22077                           
 22078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
 22079                           ;stkvar	_fmt @ sp[(-27)+-4]
 22080  010C3C  0EE1               	movlw	-31
 22081  010C3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 22082  010C44  0EE2               	movlw	-30
 22083  010C46  006F FF8F FFDA     	movff	plusw1,fsr2h
 22084  010C4C  0E02               	movlw	2
 22085  010C4E  26DE               	addwf	postinc2,f,c
 22086  010C50                     L55:
 22087  010C50  0E00               	movlw	0
 22088  010C52  22DD               	addwfc	postdec2,f,c
 22089                           
 22090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22091                           ;stkvar	_ap @ sp[(-27)+-6]
 22092  010C54  0EDF               	movlw	-33
 22093  010C56  006F FF8F FFD9     	movff	plusw1,fsr2l
 22094  010C5C  0EE0               	movlw	-32
 22095  010C5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 22096  010C64  0E02               	movlw	2
 22097  010C66  5EDE               	subwf	postinc2,f,c
 22098  010C68  0E00               	movlw	0
 22099  010C6A  5ADD               	subwfb	postdec2,f,c
 22100  010C6C  006F FF78  F041    	movff	postinc2,btemp+10
 22101  010C72  006F FF74  F042    	movff	postdec2,btemp+11
 22102  010C78  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22103  010C7E  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22104  010C84  006F FF78  F041    	movff	postinc2,btemp+10
 22105  010C8A  006F FF74  F042    	movff	postdec2,btemp+11
 22106  010C90  5041               	movf	(btemp+10)^0,w,c
 22107  010C92  6E47               	movwf	(btemp+16)^0,c
 22108  010C94  5042               	movf	(btemp+11)^0,w,c
 22109  010C96  6E48               	movwf	(btemp+17)^0,c
 22110  010C98  D6C3               	goto	L37
 22111  010C9A                     l13589:
 22112                           
 22113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22114  010C9A  0E03               	movlw	3
 22115  010C9C  6EE6               	movwf	postinc1,c
 22116  010C9E  0E00               	movlw	0
 22117  010CA0  6EE6               	movwf	postinc1,c
 22118  010CA2  0EB6               	movlw	low STR_125
 22119  010CA4  6EE6               	movwf	postinc1,c
 22120  010CA6  0EFF               	movlw	high STR_125
 22121  010CA8  6EE6               	movwf	postinc1,c
 22122                           
 22123                           ;stkvar	_fmt @ sp[(-31)+-4]
 22124  010CAA  0EDD               	movlw	-35
 22125  010CAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 22126  010CB2  0EDE               	movlw	-34
 22127  010CB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 22128  010CBA  006F FF78  F041    	movff	postinc2,btemp+10
 22129  010CC0  006F FF74  F042    	movff	postdec2,btemp+11
 22130  010CC6  0060  F107  FFE6   	movff	btemp+10,postinc1
 22131  010CCC  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22132  010CD2  EC27  F0B7         	call	_strncmp	;wreg free
 22133  010CD6  5037               	movf	btemp^0,w,c
 22134  010CD8  1038               	iorwf	(btemp+1)^0,w,c
 22135  010CDA  A4D8               	btfss	status,2,c
 22136  010CDC  D050               	goto	l13601
 22137                           
 22138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
 22139                           ;stkvar	_fmt @ sp[(-27)+-4]
 22140  010CDE  0EE1               	movlw	-31
 22141  010CE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 22142  010CE6  0EE2               	movlw	-30
 22143  010CE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 22144  010CEE  0E03               	movlw	3
 22145  010CF0  26DE               	addwf	postinc2,f,c
 22146  010CF2  0E00               	movlw	0
 22147  010CF4  22DD               	addwfc	postdec2,f,c
 22148                           
 22149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22150                           ;stkvar	_ap @ sp[(-27)+-6]
 22151  010CF6  0EDF               	movlw	-33
 22152  010CF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 22153  010CFE  0EE0               	movlw	-32
 22154  010D00  006F FF8F FFDA     	movff	plusw1,fsr2h
 22155  010D06  0E02               	movlw	2
 22156  010D08  5EDE               	subwf	postinc2,f,c
 22157  010D0A  0E00               	movlw	0
 22158  010D0C  5ADD               	subwfb	postdec2,f,c
 22159  010D0E  006F FF78  F041    	movff	postinc2,btemp+10
 22160  010D14  006F FF74  F042    	movff	postdec2,btemp+11
 22161  010D1A  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22162  010D20  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22163  010D26  006F FF78  F041    	movff	postinc2,btemp+10
 22164  010D2C  006F FF74  F042    	movff	postdec2,btemp+11
 22165                           
 22166                           ;stkvar	_vp @ sp[(-27)+20]
 22167  010D32  0EFA               	movlw	-6
 22168  010D34  0060  F10B  FFE3   	movff	btemp+11,plusw1
 22169  010D3A  0EF9               	movlw	-7
 22170  010D3C  0060  F107  FFE3   	movff	btemp+10,plusw1
 22171                           
 22172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
 22173                           ;stkvar	_vp @ sp[(-27)+20]
 22174  010D42  0EF9               	movlw	-7
 22175  010D44  006F FF8F FFF6     	movff	plusw1,tblptrl
 22176  010D4A  0EFA               	movlw	-6
 22177  010D4C  006F FF8F FFF7     	movff	plusw1,tblptrh
 22178  010D52  0E00               	movlw	low (__mediumconst shr (0+16))
 22179  010D54  6EF8               	movwf	tblptru,c
 22180  010D56  0E1F               	movlw	(high __ramtop+-1)
 22181  010D58  64F7               	cpfsgt	tblptrh,c
 22182  010D5A  D005               	bra	u10007
 22183  010D5C  0060  F037  FFF5   	movff	_nout,tablat
 22184  010D62  000C               	tblwt		*
 22185  010D64  D009               	bra	u10000
 22186  010D66                     u10007:
 22187  010D66  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22188  010D6C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22189  010D72  0060  F037  FFEF   	movff	_nout,indf0
 22190  010D78                     u10000:
 22191                           
 22192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1063:             return 0;
 22193  010D78  0E00               	movlw	0
 22194  010D7A  EFCC  F08D         	goto	L39
 22195  010D7E                     l13601:
 22196                           
 22197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22198  010D7E  0E02               	movlw	2
 22199  010D80  6EE6               	movwf	postinc1,c
 22200  010D82  0E00               	movlw	0
 22201  010D84  6EE6               	movwf	postinc1,c
 22202  010D86  0EB7               	movlw	low (STR_125+1)
 22203  010D88  6EE6               	movwf	postinc1,c
 22204  010D8A  0EFF               	movlw	high (STR_125+1)
 22205  010D8C  6EE6               	movwf	postinc1,c
 22206                           
 22207                           ;stkvar	_fmt @ sp[(-31)+-4]
 22208  010D8E  0EDD               	movlw	-35
 22209  010D90  006F FF8F FFD9     	movff	plusw1,fsr2l
 22210  010D96  0EDE               	movlw	-34
 22211  010D98  006F FF8F FFDA     	movff	plusw1,fsr2h
 22212  010D9E  006F FF78  F041    	movff	postinc2,btemp+10
 22213  010DA4  006F FF74  F042    	movff	postdec2,btemp+11
 22214  010DAA  0060  F107  FFE6   	movff	btemp+10,postinc1
 22215  010DB0  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22216  010DB6  EC27  F0B7         	call	_strncmp	;wreg free
 22217  010DBA  5037               	movf	btemp^0,w,c
 22218  010DBC  1038               	iorwf	(btemp+1)^0,w,c
 22219  010DBE  A4D8               	btfss	status,2,c
 22220  010DC0  D04A               	goto	l13613
 22221                           
 22222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1070:             *fmt += ((s
      +                          izeof("hn")/sizeof("hn"[0]))-1);
 22223                           ;stkvar	_fmt @ sp[(-27)+-4]
 22224  010DC2  0EE1               	movlw	-31
 22225  010DC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 22226  010DCA  0EE2               	movlw	-30
 22227  010DCC  006F FF8F FFDA     	movff	plusw1,fsr2h
 22228  010DD2  0E02               	movlw	2
 22229  010DD4  26DE               	addwf	postinc2,f,c
 22230  010DD6  0E00               	movlw	0
 22231  010DD8  22DD               	addwfc	postdec2,f,c
 22232                           
 22233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1071:             vp = (void 
      +                          *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22234                           ;stkvar	_ap @ sp[(-27)+-6]
 22235  010DDA  0EDF               	movlw	-33
 22236  010DDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 22237  010DE2  0EE0               	movlw	-32
 22238  010DE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 22239  010DEA  0E02               	movlw	2
 22240  010DEC  5EDE               	subwf	postinc2,f,c
 22241  010DEE  0E00               	movlw	0
 22242  010DF0  5ADD               	subwfb	postdec2,f,c
 22243  010DF2  006F FF78  F041    	movff	postinc2,btemp+10
 22244  010DF8  006F FF74  F042    	movff	postdec2,btemp+11
 22245  010DFE  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22246  010E04  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22247  010E0A  006F FF78  F041    	movff	postinc2,btemp+10
 22248  010E10  006F FF74  F042    	movff	postdec2,btemp+11
 22249                           
 22250                           ;stkvar	_vp @ sp[(-27)+20]
 22251  010E16  0EFA               	movlw	-6
 22252  010E18  0060  F10B  FFE3   	movff	btemp+11,plusw1
 22253  010E1E  0EF9               	movlw	-7
 22254  010E20  0060  F107  FFE3   	movff	btemp+10,plusw1
 22255                           
 22256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
 22257                           ;stkvar	_vp @ sp[(-27)+20]
 22258  010E26  0EF9               	movlw	-7
 22259  010E28  006F FF8F FFF6     	movff	plusw1,tblptrl
 22260  010E2E  0EFA               	movlw	-6
 22261  010E30  006F FF8F FFF7     	movff	plusw1,tblptrh
 22262  010E36  0E00               	movlw	low (__mediumconst shr (0+16))
 22263  010E38  6EF8               	movwf	tblptru,c
 22264  010E3A  0E1F               	movlw	(high __ramtop+-1)
 22265  010E3C  64F7               	cpfsgt	tblptrh,c
 22266  010E3E  D009               	bra	u10027
 22267  010E40  0060  F037  FFF5   	movff	_nout,tablat
 22268  010E46  000D               	tblwt		*+
 22269  010E48  0060  F03B  FFF5   	movff	_nout+1,tablat
 22270  010E4E  000C               	tblwt		*
 22271  010E50  D001               	bra	u10020
 22272  010E52                     u10027:
 22273  010E52  D159               	goto	u10087
 22274  010E54                     u10020:
 22275  010E54  D791               	goto	u10000
 22276  010E56                     l13613:
 22277                           
 22278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
 22279                           ;stkvar	_fmt @ sp[(-27)+-4]
 22280  010E56  0EE1               	movlw	-31
 22281  010E58  006F FF8F FFD9     	movff	plusw1,fsr2l
 22282  010E5E  0EE2               	movlw	-30
 22283  010E60  006F FF8F FFDA     	movff	plusw1,fsr2h
 22284  010E66  006F FF7B FFF6     	movff	postinc2,tblptrl
 22285  010E6C  006F FF77 FFF7     	movff	postdec2,tblptrh
 22286  010E72                     	if	0	;tblptru may be non-zero
 22287  010E72                     	endif
 22288  010E72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22289  010E72  0E00               	movlw	low (__mediumconst shr (0+16))
 22290  010E74  6EF8               	movwf	tblptru,c
 22291  010E76                     	endif
 22292  010E76  0008               	tblrd		*
 22293  010E78  50F5               	movf	tablat,w,c
 22294  010E7A  0A6E               	xorlw	110
 22295  010E7C  A4D8               	btfss	status,2,c
 22296  010E7E  D049               	goto	l13625
 22297                           
 22298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
 22299                           ;stkvar	_fmt @ sp[(-27)+-4]
 22300  010E80  0EE1               	movlw	-31
 22301  010E82  006F FF8F FFD9     	movff	plusw1,fsr2l
 22302  010E88  0EE2               	movlw	-30
 22303  010E8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 22304  010E90  2ADE               	incf	postinc2,f,c
 22305  010E92  0E00               	movlw	0
 22306  010E94  22DD               	addwfc	postdec2,f,c
 22307                           
 22308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1079:             vp = (void 
      +                          *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22309                           ;stkvar	_ap @ sp[(-27)+-6]
 22310  010E96  0EDF               	movlw	-33
 22311  010E98  006F FF8F FFD9     	movff	plusw1,fsr2l
 22312  010E9E  0EE0               	movlw	-32
 22313  010EA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 22314  010EA6  0E02               	movlw	2
 22315  010EA8  5EDE               	subwf	postinc2,f,c
 22316  010EAA  0E00               	movlw	0
 22317  010EAC  5ADD               	subwfb	postdec2,f,c
 22318  010EAE  006F FF78  F041    	movff	postinc2,btemp+10
 22319  010EB4  006F FF74  F042    	movff	postdec2,btemp+11
 22320  010EBA  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22321  010EC0  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22322  010EC6  006F FF78  F041    	movff	postinc2,btemp+10
 22323  010ECC  006F FF74  F042    	movff	postdec2,btemp+11
 22324                           
 22325                           ;stkvar	_vp @ sp[(-27)+20]
 22326  010ED2  0EFA               	movlw	-6
 22327  010ED4  0060  F10B  FFE3   	movff	btemp+11,plusw1
 22328  010EDA  0EF9               	movlw	-7
 22329  010EDC  0060  F107  FFE3   	movff	btemp+10,plusw1
 22330                           
 22331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1080:             *(int *)vp 
      +                          = nout;
 22332                           ;stkvar	_vp @ sp[(-27)+20]
 22333  010EE2  0EF9               	movlw	-7
 22334  010EE4  006F FF8F FFF6     	movff	plusw1,tblptrl
 22335  010EEA  0EFA               	movlw	-6
 22336  010EEC  006F FF8F FFF7     	movff	plusw1,tblptrh
 22337  010EF2  0E00               	movlw	low (__mediumconst shr (0+16))
 22338  010EF4  6EF8               	movwf	tblptru,c
 22339  010EF6  0E1F               	movlw	(high __ramtop+-1)
 22340  010EF8  64F7               	cpfsgt	tblptrh,c
 22341  010EFA  D009               	bra	u10047
 22342  010EFC  0060  F037  FFF5   	movff	_nout,tablat
 22343  010F02  000D               	tblwt		*+
 22344  010F04  0060  F03B  FFF5   	movff	_nout+1,tablat
 22345  010F0A  000C               	tblwt		*
 22346  010F0C  D001               	bra	u10040
 22347  010F0E                     u10047:
 22348  010F0E  D0FB               	goto	u10087
 22349  010F10                     u10040:
 22350  010F10  D733               	goto	u10000
 22351  010F12                     l13625:
 22352                           
 22353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 22354  010F12  0E02               	movlw	2
 22355  010F14  6EE6               	movwf	postinc1,c
 22356  010F16  0E00               	movlw	0
 22357  010F18  6EE6               	movwf	postinc1,c
 22358  010F1A  0EE0               	movlw	low STR_135
 22359  010F1C  6EE6               	movwf	postinc1,c
 22360  010F1E  0EFF               	movlw	high STR_135
 22361  010F20  6EE6               	movwf	postinc1,c
 22362                           
 22363                           ;stkvar	_fmt @ sp[(-31)+-4]
 22364  010F22  0EDD               	movlw	-35
 22365  010F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 22366  010F2A  0EDE               	movlw	-34
 22367  010F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 22368  010F32  006F FF78  F041    	movff	postinc2,btemp+10
 22369  010F38  006F FF74  F042    	movff	postdec2,btemp+11
 22370  010F3E  0060  F107  FFE6   	movff	btemp+10,postinc1
 22371  010F44  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22372  010F4A  EC27  F0B7         	call	_strncmp	;wreg free
 22373  010F4E  5037               	movf	btemp^0,w,c
 22374  010F50  1038               	iorwf	(btemp+1)^0,w,c
 22375  010F52  A4D8               	btfss	status,2,c
 22376  010F54  D06E               	goto	l13637
 22377                           
 22378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
 22379                           ;stkvar	_fmt @ sp[(-27)+-4]
 22380  010F56  0EE1               	movlw	-31
 22381  010F58  006F FF8F FFD9     	movff	plusw1,fsr2l
 22382  010F5E  0EE2               	movlw	-30
 22383  010F60  006F FF8F FFDA     	movff	plusw1,fsr2h
 22384  010F66  0E02               	movlw	2
 22385  010F68  26DE               	addwf	postinc2,f,c
 22386  010F6A  0E00               	movlw	0
 22387  010F6C  22DD               	addwfc	postdec2,f,c
 22388                           
 22389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 22390                           ;stkvar	_ap @ sp[(-27)+-6]
 22391  010F6E  0EDF               	movlw	-33
 22392  010F70  006F FF8F FFD9     	movff	plusw1,fsr2l
 22393  010F76  0EE0               	movlw	-32
 22394  010F78  006F FF8F FFDA     	movff	plusw1,fsr2h
 22395  010F7E  0E02               	movlw	2
 22396  010F80  5EDE               	subwf	postinc2,f,c
 22397  010F82  0E00               	movlw	0
 22398  010F84  5ADD               	subwfb	postdec2,f,c
 22399  010F86  006F FF78  F041    	movff	postinc2,btemp+10
 22400  010F8C  006F FF74  F042    	movff	postdec2,btemp+11
 22401  010F92  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22402  010F98  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22403  010F9E  006F FF78  F041    	movff	postinc2,btemp+10
 22404  010FA4  006F FF74  F042    	movff	postdec2,btemp+11
 22405                           
 22406                           ;stkvar	_vp @ sp[(-27)+20]
 22407  010FAA  0EFA               	movlw	-6
 22408  010FAC  0060  F10B  FFE3   	movff	btemp+11,plusw1
 22409  010FB2  0EF9               	movlw	-7
 22410  010FB4  0060  F107  FFE3   	movff	btemp+10,plusw1
 22411                           
 22412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
 22413  010FBA  0060  F034  F03F   	movff	_nout,btemp+8
 22414  010FC0  0060  F038  F040   	movff	_nout+1,btemp+9
 22415  010FC6  0E00               	movlw	0
 22416  010FC8  BE40               	btfsc	(btemp+9)^0,7,c
 22417  010FCA  0EFF               	movlw	255
 22418  010FCC  6E41               	movwf	(btemp+10)^0,c
 22419  010FCE  6E42               	movwf	(btemp+11)^0,c
 22420                           
 22421                           ;stkvar	_vp @ sp[(-27)+20]
 22422  010FD0  0EF9               	movlw	-7
 22423  010FD2  006F FF8F FFF6     	movff	plusw1,tblptrl
 22424  010FD8  0EFA               	movlw	-6
 22425  010FDA  006F FF8F FFF7     	movff	plusw1,tblptrh
 22426  010FE0  0E00               	movlw	low (__mediumconst shr (0+16))
 22427  010FE2  6EF8               	movwf	tblptru,c
 22428  010FE4  0E1F               	movlw	(high __ramtop+-1)
 22429  010FE6  64F7               	cpfsgt	tblptrh,c
 22430  010FE8  D011               	bra	u10067
 22431  010FEA  0060  F0FF  FFF5   	movff	btemp+8,tablat
 22432  010FF0  000D               	tblwt		*+
 22433  010FF2  0060  F103  FFF5   	movff	btemp+9,tablat
 22434  010FF8  000D               	tblwt		*+
 22435  010FFA  0060  F107  FFF5   	movff	btemp+10,tablat
 22436  011000  000D               	tblwt		*+
 22437  011002  0060  F10B  FFF5   	movff	btemp+11,tablat
 22438  011008  000C               	tblwt		*
 22439  01100A  D012               	bra	u10060
 22440  01100C                     u10067:
 22441  01100C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22442  011012  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22443  011018  0060  F0FF  FFEE   	movff	btemp+8,postinc0
 22444  01101E  0060  F103  FFEE   	movff	btemp+9,postinc0
 22445  011024  0060  F107  FFEE   	movff	btemp+10,postinc0
 22446  01102A  0060  F10B  FFEF   	movff	btemp+11,indf0
 22447  011030                     u10060:
 22448  011030  D6A3               	goto	u10000
 22449  011032                     l13637:
 22450                           
 22451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22452  011032  0E02               	movlw	2
 22453  011034  6EE6               	movwf	postinc1,c
 22454  011036  0E00               	movlw	0
 22455  011038  6EE6               	movwf	postinc1,c
 22456  01103A  0EE3               	movlw	low STR_140
 22457  01103C  6EE6               	movwf	postinc1,c
 22458  01103E  0EFF               	movlw	high STR_140
 22459  011040  6EE6               	movwf	postinc1,c
 22460                           
 22461                           ;stkvar	_fmt @ sp[(-31)+-4]
 22462  011042  0EDD               	movlw	-35
 22463  011044  006F FF8F FFD9     	movff	plusw1,fsr2l
 22464  01104A  0EDE               	movlw	-34
 22465  01104C  006F FF8F FFDA     	movff	plusw1,fsr2h
 22466  011052  006F FF78  F041    	movff	postinc2,btemp+10
 22467  011058  006F FF74  F042    	movff	postdec2,btemp+11
 22468  01105E  0060  F107  FFE6   	movff	btemp+10,postinc1
 22469  011064  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22470  01106A  EC27  F0B7         	call	_strncmp	;wreg free
 22471  01106E  5037               	movf	btemp^0,w,c
 22472  011070  1038               	iorwf	(btemp+1)^0,w,c
 22473  011072  A4D8               	btfss	status,2,c
 22474  011074  D055               	goto	l13649
 22475                           
 22476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
 22477                           ;stkvar	_fmt @ sp[(-27)+-4]
 22478  011076  0EE1               	movlw	-31
 22479  011078  006F FF8F FFD9     	movff	plusw1,fsr2l
 22480  01107E  0EE2               	movlw	-30
 22481  011080  006F FF8F FFDA     	movff	plusw1,fsr2h
 22482  011086  0E02               	movlw	2
 22483  011088  26DE               	addwf	postinc2,f,c
 22484  01108A  0E00               	movlw	0
 22485  01108C  22DD               	addwfc	postdec2,f,c
 22486                           
 22487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22488                           ;stkvar	_ap @ sp[(-27)+-6]
 22489  01108E  0EDF               	movlw	-33
 22490  011090  006F FF8F FFD9     	movff	plusw1,fsr2l
 22491  011096  0EE0               	movlw	-32
 22492  011098  006F FF8F FFDA     	movff	plusw1,fsr2h
 22493  01109E  0E02               	movlw	2
 22494  0110A0  5EDE               	subwf	postinc2,f,c
 22495  0110A2  0E00               	movlw	0
 22496  0110A4  5ADD               	subwfb	postdec2,f,c
 22497  0110A6  006F FF78  F041    	movff	postinc2,btemp+10
 22498  0110AC  006F FF74  F042    	movff	postdec2,btemp+11
 22499  0110B2  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22500  0110B8  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22501  0110BE  006F FF78  F041    	movff	postinc2,btemp+10
 22502  0110C4  006F FF74  F042    	movff	postdec2,btemp+11
 22503                           
 22504                           ;stkvar	_vp @ sp[(-27)+20]
 22505  0110CA  0EFA               	movlw	-6
 22506  0110CC  0060  F10B  FFE3   	movff	btemp+11,plusw1
 22507  0110D2  0EF9               	movlw	-7
 22508  0110D4  0060  F107  FFE3   	movff	btemp+10,plusw1
 22509                           
 22510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1129:             *(size_t *)
      +                          vp = (size_t)nout;
 22511                           ;stkvar	_vp @ sp[(-27)+20]
 22512  0110DA  0EF9               	movlw	-7
 22513  0110DC  006F FF8F FFF6     	movff	plusw1,tblptrl
 22514  0110E2  0EFA               	movlw	-6
 22515  0110E4  006F FF8F FFF7     	movff	plusw1,tblptrh
 22516  0110EA  0E00               	movlw	low (__mediumconst shr (0+16))
 22517  0110EC  6EF8               	movwf	tblptru,c
 22518  0110EE  0E1F               	movlw	(high __ramtop+-1)
 22519  0110F0  64F7               	cpfsgt	tblptrh,c
 22520  0110F2  D009               	bra	u10087
 22521  0110F4  0060  F037  FFF5   	movff	_nout,tablat
 22522  0110FA  000D               	tblwt		*+
 22523  0110FC  0060  F03B  FFF5   	movff	_nout+1,tablat
 22524  011102  000C               	tblwt		*
 22525  011104  D00C               	bra	u10080
 22526  011106                     u10087:
 22527  011106  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22528  01110C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22529  011112  0060  F037  FFEE   	movff	_nout,postinc0
 22530  011118  0060  F03B  FFEF   	movff	_nout+1,indf0
 22531  01111E                     u10080:
 22532  01111E  D62C               	goto	u10000
 22533  011120                     l13649:
 22534                           
 22535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
 22536                           ;stkvar	_fmt @ sp[(-27)+-4]
 22537  011120  0EE1               	movlw	-31
 22538  011122  006F FF8F FFD9     	movff	plusw1,fsr2l
 22539  011128  0EE2               	movlw	-30
 22540  01112A  006F FF8F FFDA     	movff	plusw1,fsr2h
 22541  011130  006F FF7B FFF6     	movff	postinc2,tblptrl
 22542  011136  006F FF77 FFF7     	movff	postdec2,tblptrh
 22543  01113C                     	if	0	;tblptru may be non-zero
 22544  01113C                     	endif
 22545  01113C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22546  01113C  0E00               	movlw	low (__mediumconst shr (0+16))
 22547  01113E  6EF8               	movwf	tblptru,c
 22548  011140                     	endif
 22549  011140  0008               	tblrd		*
 22550  011142  50F5               	movf	tablat,w,c
 22551  011144  0A70               	xorlw	112
 22552  011146  A4D8               	btfss	status,2,c
 22553  011148  D07F               	goto	l13659
 22554                           
 22555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
 22556                           ;stkvar	_fmt @ sp[(-27)+-4]
 22557  01114A  0EE1               	movlw	-31
 22558  01114C  006F FF8F FFD9     	movff	plusw1,fsr2l
 22559  011152  0EE2               	movlw	-30
 22560  011154  006F FF8F FFDA     	movff	plusw1,fsr2h
 22561  01115A  2ADE               	incf	postinc2,f,c
 22562  01115C  0E00               	movlw	0
 22563  01115E  22DD               	addwfc	postdec2,f,c
 22564                           
 22565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
 22566                           ;stkvar	_ap @ sp[(-27)+-6]
 22567  011160  0EDF               	movlw	-33
 22568  011162  006F FF8F FFD9     	movff	plusw1,fsr2l
 22569  011168  0EE0               	movlw	-32
 22570  01116A  006F FF8F FFDA     	movff	plusw1,fsr2h
 22571  011170  0E02               	movlw	2
 22572  011172  5EDE               	subwf	postinc2,f,c
 22573  011174  0E00               	movlw	0
 22574  011176  5ADD               	subwfb	postdec2,f,c
 22575  011178  006F FF78  F041    	movff	postinc2,btemp+10
 22576  01117E  006F FF74  F042    	movff	postdec2,btemp+11
 22577  011184  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22578  01118A  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22579  011190  006F FF78  F041    	movff	postinc2,btemp+10
 22580  011196  006F FF74  F042    	movff	postdec2,btemp+11
 22581  01119C  5041               	movf	(btemp+10)^0,w,c
 22582  01119E  6E47               	movwf	(btemp+16)^0,c
 22583  0111A0  5042               	movf	(btemp+11)^0,w,c
 22584  0111A2  6E48               	movwf	(btemp+17)^0,c
 22585  0111A4  6A49               	clrf	(btemp+18)^0,c
 22586  0111A6  6A4A               	clrf	(btemp+19)^0,c
 22587  0111A8  6A4B               	clrf	(btemp+20)^0,c
 22588  0111AA  6A4C               	clrf	(btemp+21)^0,c
 22589  0111AC  6A4D               	clrf	(btemp+22)^0,c
 22590  0111AE  6A4E               	clrf	(btemp+23)^0,c
 22591                           
 22592                           ;stkvar	_llu @ sp[(-27)+4]
 22593  0111B0  0EE9               	movlw	-23
 22594  0111B2  0060  F11F  FFE3   	movff	btemp+16,plusw1
 22595  0111B8  0EEA               	movlw	-22
 22596  0111BA  0060  F123  FFE3   	movff	btemp+17,plusw1
 22597  0111C0  0EEB               	movlw	-21
 22598  0111C2  0060  F127  FFE3   	movff	btemp+18,plusw1
 22599  0111C8  0EEC               	movlw	-20
 22600  0111CA  0060  F12B  FFE3   	movff	btemp+19,plusw1
 22601  0111D0  0EED               	movlw	-19
 22602  0111D2  0060  F12F  FFE3   	movff	btemp+20,plusw1
 22603  0111D8  0EEE               	movlw	-18
 22604  0111DA  0060  F133  FFE3   	movff	btemp+21,plusw1
 22605  0111E0  0EEF               	movlw	-17
 22606  0111E2  0060  F137  FFE3   	movff	btemp+22,plusw1
 22607  0111E8  0EF0               	movlw	-16
 22608  0111EA  0060  F13B  FFE3   	movff	btemp+23,plusw1
 22609                           
 22610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
 22611  0111F0  0E78               	movlw	120
 22612  0111F2  6EE6               	movwf	postinc1,c
 22613                           
 22614                           ;stkvar	_llu @ sp[(-28)+4]
 22615  0111F4  50E1               	movf	fsr1l,w,c
 22616  0111F6  0FE8               	addlw	-24
 22617  0111F8  6ED9               	movwf	fsr2l,c
 22618  0111FA  50E2               	movf	fsr1h,w,c
 22619  0111FC  6EDA               	movwf	fsr2h,c
 22620  0111FE  0EFF               	movlw	255
 22621  011200  22DA               	addwfc	fsr2h,f,c
 22622  011202  006F FF7B FFE6     	movff	postinc2,postinc1
 22623  011208  006F FF7B FFE6     	movff	postinc2,postinc1
 22624  01120E  006F FF7B FFE6     	movff	postinc2,postinc1
 22625  011214  006F FF7B FFE6     	movff	postinc2,postinc1
 22626  01121A  006F FF7B FFE6     	movff	postinc2,postinc1
 22627  011220  006F FF7B FFE6     	movff	postinc2,postinc1
 22628  011226  006F FF7B FFE6     	movff	postinc2,postinc1
 22629  01122C  006F FF7B FFE6     	movff	postinc2,postinc1
 22630                           
 22631                           ;stkvar	_fp @ sp[(-36)+-2]
 22632  011232  0EDA               	movlw	-38
 22633  011234  006F FF8F FFE6     	movff	plusw1,postinc1
 22634  01123A  006F FF8F FFE6     	movff	plusw1,postinc1
 22635  011240  EC63  F0A3         	call	_xtoa	;wreg free
 22636  011244  EF07  F08E         	goto	l2469
 22637  011248                     l13659:
 22638                           
 22639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 22640                           ;stkvar	_fmt @ sp[(-27)+-4]
 22641  011248  0EE1               	movlw	-31
 22642  01124A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22643  011250  0EE2               	movlw	-30
 22644  011252  006F FF8F FFDA     	movff	plusw1,fsr2h
 22645  011258  006F FF7B FFF6     	movff	postinc2,tblptrl
 22646  01125E  006F FF77 FFF7     	movff	postdec2,tblptrh
 22647  011264                     	if	0	;tblptru may be non-zero
 22648  011264                     	endif
 22649  011264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22650  011264  0E00               	movlw	low (__mediumconst shr (0+16))
 22651  011266  6EF8               	movwf	tblptru,c
 22652  011268                     	endif
 22653  011268  0008               	tblrd		*
 22654  01126A  50F5               	movf	tablat,w,c
 22655  01126C  0A73               	xorlw	115
 22656  01126E  A4D8               	btfss	status,2,c
 22657  011270  D043               	goto	l13669
 22658                           
 22659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 22660                           ;stkvar	_fmt @ sp[(-27)+-4]
 22661  011272  0EE1               	movlw	-31
 22662  011274  006F FF8F FFD9     	movff	plusw1,fsr2l
 22663  01127A  0EE2               	movlw	-30
 22664  01127C  006F FF8F FFDA     	movff	plusw1,fsr2h
 22665  011282  2ADE               	incf	postinc2,f,c
 22666  011284  0E00               	movlw	0
 22667  011286  22DD               	addwfc	postdec2,f,c
 22668                           
 22669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 22670                           ;stkvar	_ap @ sp[(-27)+-6]
 22671  011288  0EDF               	movlw	-33
 22672  01128A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22673  011290  0EE0               	movlw	-32
 22674  011292  006F FF8F FFDA     	movff	plusw1,fsr2h
 22675  011298  0E02               	movlw	2
 22676  01129A  5EDE               	subwf	postinc2,f,c
 22677  01129C  0E00               	movlw	0
 22678  01129E  5ADD               	subwfb	postdec2,f,c
 22679  0112A0  006F FF78  F041    	movff	postinc2,btemp+10
 22680  0112A6  006F FF74  F042    	movff	postdec2,btemp+11
 22681  0112AC  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22682  0112B2  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22683  0112B8  006F FF78  F041    	movff	postinc2,btemp+10
 22684  0112BE  006F FF74  F042    	movff	postdec2,btemp+11
 22685                           
 22686                           ;stkvar	_cp @ sp[(-27)+24]
 22687  0112C4  0EFE               	movlw	-2
 22688  0112C6  0060  F10B  FFE3   	movff	btemp+11,plusw1
 22689  0112CC  0EFD               	movlw	-3
 22690  0112CE  0060  F107  FFE3   	movff	btemp+10,plusw1
 22691                           
 22692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 22693                           ;stkvar	_cp @ sp[(-27)+24]
 22694  0112D4  0EFD               	movlw	-3
 22695  0112D6  006F FF8F FFE6     	movff	plusw1,postinc1
 22696  0112DC  006F FF8F FFE6     	movff	plusw1,postinc1
 22697                           
 22698                           ;stkvar	_fp @ sp[(-29)+-2]
 22699  0112E2  0EE1               	movlw	-31
 22700  0112E4  006F FF8F FFE6     	movff	plusw1,postinc1
 22701  0112EA  006F FF8F FFE6     	movff	plusw1,postinc1
 22702  0112F0  EC57  F0AB         	call	_stoa	;wreg free
 22703  0112F4  EF07  F08E         	goto	l2469
 22704  0112F8                     l13669:
 22705                           
 22706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22707  0112F8  0E03               	movlw	3
 22708  0112FA  6EE6               	movwf	postinc1,c
 22709  0112FC  0E00               	movlw	0
 22710  0112FE  6EE6               	movwf	postinc1,c
 22711  011300  0EBE               	movlw	low STR_145
 22712  011302  6EE6               	movwf	postinc1,c
 22713  011304  0EFF               	movlw	high STR_145
 22714  011306  6EE6               	movwf	postinc1,c
 22715                           
 22716                           ;stkvar	_fmt @ sp[(-31)+-4]
 22717  011308  0EDD               	movlw	-35
 22718  01130A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22719  011310  0EDE               	movlw	-34
 22720  011312  006F FF8F FFDA     	movff	plusw1,fsr2h
 22721  011318  006F FF78  F041    	movff	postinc2,btemp+10
 22722  01131E  006F FF74  F042    	movff	postdec2,btemp+11
 22723  011324  0060  F107  FFE6   	movff	btemp+10,postinc1
 22724  01132A  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22725  011330  EC27  F0B7         	call	_strncmp	;wreg free
 22726  011334  5037               	movf	btemp^0,w,c
 22727  011336  1038               	iorwf	(btemp+1)^0,w,c
 22728  011338  A4D8               	btfss	status,2,c
 22729  01133A  D079               	goto	l13679
 22730                           
 22731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
 22732                           ;stkvar	_fmt @ sp[(-27)+-4]
 22733  01133C  0EE1               	movlw	-31
 22734  01133E  006F FF8F FFD9     	movff	plusw1,fsr2l
 22735  011344  0EE2               	movlw	-30
 22736  011346  006F FF8F FFDA     	movff	plusw1,fsr2h
 22737  01134C  0E03               	movlw	3
 22738  01134E  26DE               	addwf	postinc2,f,c
 22739  011350  0E00               	movlw	0
 22740  011352  22DD               	addwfc	postdec2,f,c
 22741                           
 22742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22743                           ;stkvar	_ap @ sp[(-27)+-6]
 22744  011354  0EDF               	movlw	-33
 22745  011356  006F FF8F FFD9     	movff	plusw1,fsr2l
 22746  01135C  0EE0               	movlw	-32
 22747  01135E  006F FF8F FFDA     	movff	plusw1,fsr2h
 22748  011364  0E02               	movlw	2
 22749  011366  5EDE               	subwf	postinc2,f,c
 22750  011368  0E00               	movlw	0
 22751  01136A  5ADD               	subwfb	postdec2,f,c
 22752  01136C  006F FF78  F041    	movff	postinc2,btemp+10
 22753  011372  006F FF74  F042    	movff	postdec2,btemp+11
 22754  011378  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22755  01137E  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22756  011384  50DF               	movf	indf2,w,c
 22757  011386  6E42               	movwf	(btemp+11)^0,c
 22758  011388  0060  F108  F047   	movff	btemp+11,btemp+16
 22759  01138E  6A48               	clrf	(btemp+17)^0,c
 22760  011390                     L40:
 22761  011390  6A49               	clrf	(btemp+18)^0,c
 22762  011392  6A4A               	clrf	(btemp+19)^0,c
 22763  011394                     L41:
 22764  011394  6A4B               	clrf	(btemp+20)^0,c
 22765  011396  6A4C               	clrf	(btemp+21)^0,c
 22766  011398  6A4D               	clrf	(btemp+22)^0,c
 22767  01139A  6A4E               	clrf	(btemp+23)^0,c
 22768                           
 22769                           ;stkvar	_llu @ sp[(-27)+4]
 22770  01139C  0EE9               	movlw	-23
 22771  01139E  0060  F11F  FFE3   	movff	btemp+16,plusw1
 22772  0113A4  0EEA               	movlw	-22
 22773  0113A6  0060  F123  FFE3   	movff	btemp+17,plusw1
 22774  0113AC  0EEB               	movlw	-21
 22775  0113AE  0060  F127  FFE3   	movff	btemp+18,plusw1
 22776  0113B4  0EEC               	movlw	-20
 22777  0113B6  0060  F12B  FFE3   	movff	btemp+19,plusw1
 22778  0113BC  0EED               	movlw	-19
 22779  0113BE  0060  F12F  FFE3   	movff	btemp+20,plusw1
 22780  0113C4  0EEE               	movlw	-18
 22781  0113C6  0060  F133  FFE3   	movff	btemp+21,plusw1
 22782  0113CC  0EEF               	movlw	-17
 22783  0113CE  0060  F137  FFE3   	movff	btemp+22,plusw1
 22784  0113D4  0EF0               	movlw	-16
 22785  0113D6  0060  F13B  FFE3   	movff	btemp+23,plusw1
 22786                           
 22787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
 22788                           ;stkvar	_llu @ sp[(-27)+4]
 22789  0113DC  50E1               	movf	fsr1l,w,c
 22790  0113DE  0FE9               	addlw	-23
 22791  0113E0  6ED9               	movwf	fsr2l,c
 22792  0113E2  50E2               	movf	fsr1h,w,c
 22793  0113E4  6EDA               	movwf	fsr2h,c
 22794  0113E6  0EFF               	movlw	255
 22795  0113E8  22DA               	addwfc	fsr2h,f,c
 22796  0113EA  006F FF7B FFE6     	movff	postinc2,postinc1
 22797  0113F0  006F FF7B FFE6     	movff	postinc2,postinc1
 22798  0113F6  006F FF7B FFE6     	movff	postinc2,postinc1
 22799  0113FC  006F FF7B FFE6     	movff	postinc2,postinc1
 22800  011402  006F FF7B FFE6     	movff	postinc2,postinc1
 22801  011408  006F FF7B FFE6     	movff	postinc2,postinc1
 22802  01140E  006F FF7B FFE6     	movff	postinc2,postinc1
 22803  011414  006F FF7B FFE6     	movff	postinc2,postinc1
 22804                           
 22805                           ;stkvar	_fp @ sp[(-35)+-2]
 22806  01141A  0EDB               	movlw	-37
 22807  01141C  006F FF8F FFE6     	movff	plusw1,postinc1
 22808  011422  006F FF8F FFE6     	movff	plusw1,postinc1
 22809  011428  ECD2  F0A6         	call	_utoa	;wreg free
 22810  01142C  D3F0               	goto	l2469
 22811  01142E                     l13679:
 22812                           
 22813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22814  01142E  0E02               	movlw	2
 22815  011430  6EE6               	movwf	postinc1,c
 22816  011432  0E00               	movlw	0
 22817  011434  6EE6               	movwf	postinc1,c
 22818  011436  0EBF               	movlw	low (STR_145+1)
 22819  011438  6EE6               	movwf	postinc1,c
 22820  01143A  0EFF               	movlw	high (STR_145+1)
 22821  01143C  6EE6               	movwf	postinc1,c
 22822                           
 22823                           ;stkvar	_fmt @ sp[(-31)+-4]
 22824  01143E  0EDD               	movlw	-35
 22825  011440  006F FF8F FFD9     	movff	plusw1,fsr2l
 22826  011446  0EDE               	movlw	-34
 22827  011448  006F FF8F FFDA     	movff	plusw1,fsr2h
 22828  01144E  006F FF78  F041    	movff	postinc2,btemp+10
 22829  011454  006F FF74  F042    	movff	postdec2,btemp+11
 22830  01145A  0060  F107  FFE6   	movff	btemp+10,postinc1
 22831  011460  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22832  011466  EC27  F0B7         	call	_strncmp	;wreg free
 22833  01146A  5037               	movf	btemp^0,w,c
 22834  01146C  1038               	iorwf	(btemp+1)^0,w,c
 22835  01146E  B4D8               	btfsc	status,2,c
 22836  011470  D09C               	goto	L59
 22837                           
 22838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 22839                           ;stkvar	_fmt @ sp[(-27)+-4]
 22840                           
 22841                           ;stkvar	_llu @ sp[(-27)+4]
 22842                           
 22843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 22844                           ;stkvar	_ap @ sp[(-27)+-6]
 22845                           
 22846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
 22847                           ;stkvar	_fmt @ sp[(-27)+-4]
 22848  011472  0EE1               	movlw	-31
 22849  011474  006F FF8F FFD9     	movff	plusw1,fsr2l
 22850  01147A  0EE2               	movlw	-30
 22851  01147C  006F FF8F FFDA     	movff	plusw1,fsr2h
 22852  011482  006F FF7B FFF6     	movff	postinc2,tblptrl
 22853  011488  006F FF77 FFF7     	movff	postdec2,tblptrh
 22854  01148E                     	if	0	;tblptru may be non-zero
 22855  01148E                     	endif
 22856  01148E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22857  01148E  0E00               	movlw	low (__mediumconst shr (0+16))
 22858  011490  6EF8               	movwf	tblptru,c
 22859  011492                     	endif
 22860  011492  0008               	tblrd		*
 22861  011494  50F5               	movf	tablat,w,c
 22862  011496  0A75               	xorlw	117
 22863  011498  A4D8               	btfss	status,2,c
 22864  01149A  D00A               	goto	l13699
 22865                           
 22866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 22867                           ;stkvar	_fmt @ sp[(-27)+-4]
 22868  01149C  0EE1               	movlw	-31
 22869  01149E  006F FF8F FFD9     	movff	plusw1,fsr2l
 22870  0114A4  0EE2               	movlw	-30
 22871  0114A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 22872  0114AC  2ADE               	incf	postinc2,f,c
 22873  0114AE  D087               	goto	L56
 22874  0114B0                     l13699:
 22875                           
 22876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 22877  0114B0  0E02               	movlw	2
 22878  0114B2  6EE6               	movwf	postinc1,c
 22879  0114B4  0E00               	movlw	0
 22880  0114B6  6EE6               	movwf	postinc1,c
 22881  0114B8  0EEC               	movlw	low STR_155
 22882  0114BA  6EE6               	movwf	postinc1,c
 22883  0114BC  0EFF               	movlw	high STR_155
 22884  0114BE  6EE6               	movwf	postinc1,c
 22885                           
 22886                           ;stkvar	_fmt @ sp[(-31)+-4]
 22887  0114C0  0EDD               	movlw	-35
 22888  0114C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 22889  0114C8  0EDE               	movlw	-34
 22890  0114CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 22891  0114D0  006F FF78  F041    	movff	postinc2,btemp+10
 22892  0114D6  006F FF74  F042    	movff	postdec2,btemp+11
 22893  0114DC  0060  F107  FFE6   	movff	btemp+10,postinc1
 22894  0114E2  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22895  0114E8  EC27  F0B7         	call	_strncmp	;wreg free
 22896  0114EC  5037               	movf	btemp^0,w,c
 22897  0114EE  1038               	iorwf	(btemp+1)^0,w,c
 22898  0114F0  A4D8               	btfss	status,2,c
 22899  0114F2  D039               	goto	l13709
 22900                           
 22901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 22902                           ;stkvar	_fmt @ sp[(-27)+-4]
 22903  0114F4  0EE1               	movlw	-31
 22904  0114F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 22905  0114FC  0EE2               	movlw	-30
 22906  0114FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 22907  011504  0E02               	movlw	2
 22908  011506  26DE               	addwf	postinc2,f,c
 22909  011508  0E00               	movlw	0
 22910  01150A  22DD               	addwfc	postdec2,f,c
 22911                           
 22912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 22913                           ;stkvar	_ap @ sp[(-27)+-6]
 22914  01150C  0EDF               	movlw	-33
 22915  01150E  006F FF8F FFD9     	movff	plusw1,fsr2l
 22916  011514  0EE0               	movlw	-32
 22917  011516  006F FF8F FFDA     	movff	plusw1,fsr2h
 22918  01151C  0E04               	movlw	4
 22919  01151E  5EDE               	subwf	postinc2,f,c
 22920  011520  0E00               	movlw	0
 22921  011522  5ADD               	subwfb	postdec2,f,c
 22922  011524  006F FF78  F041    	movff	postinc2,btemp+10
 22923  01152A  006F FF74  F042    	movff	postdec2,btemp+11
 22924  011530  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22925  011536  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22926  01153C  006F FF78  F03F    	movff	postinc2,btemp+8
 22927  011542  006F FF78  F040    	movff	postinc2,btemp+9
 22928  011548  006F FF78  F041    	movff	postinc2,btemp+10
 22929  01154E  006F FF78  F042    	movff	postinc2,btemp+11
 22930  011554  503F               	movf	(btemp+8)^0,w,c
 22931  011556  6E47               	movwf	(btemp+16)^0,c
 22932  011558  5040               	movf	(btemp+9)^0,w,c
 22933  01155A  6E48               	movwf	(btemp+17)^0,c
 22934  01155C  5041               	movf	(btemp+10)^0,w,c
 22935  01155E  6E49               	movwf	(btemp+18)^0,c
 22936  011560  5042               	movf	(btemp+11)^0,w,c
 22937  011562  6E4A               	movwf	(btemp+19)^0,c
 22938  011564  D717               	goto	L41
 22939  011566                     l13709:
 22940                           
 22941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22942  011566  0E02               	movlw	2
 22943  011568  6EE6               	movwf	postinc1,c
 22944  01156A  0E00               	movlw	0
 22945  01156C  6EE6               	movwf	postinc1,c
 22946  01156E  0EEF               	movlw	low STR_160
 22947  011570  6EE6               	movwf	postinc1,c
 22948  011572  0EFF               	movlw	high STR_160
 22949  011574  6EE6               	movwf	postinc1,c
 22950                           
 22951                           ;stkvar	_fmt @ sp[(-31)+-4]
 22952  011576  0EDD               	movlw	-35
 22953  011578  006F FF8F FFD9     	movff	plusw1,fsr2l
 22954  01157E  0EDE               	movlw	-34
 22955  011580  006F FF8F FFDA     	movff	plusw1,fsr2h
 22956  011586  006F FF78  F041    	movff	postinc2,btemp+10
 22957  01158C  006F FF74  F042    	movff	postdec2,btemp+11
 22958  011592  0060  F107  FFE6   	movff	btemp+10,postinc1
 22959  011598  0060  F10B  FFE6   	movff	btemp+11,postinc1
 22960  01159E  EC27  F0B7         	call	_strncmp	;wreg free
 22961  0115A2  5037               	movf	btemp^0,w,c
 22962  0115A4  1038               	iorwf	(btemp+1)^0,w,c
 22963  0115A6  A4D8               	btfss	status,2,c
 22964  0115A8  D02F               	goto	l13719
 22965  0115AA                     L59:
 22966                           
 22967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
 22968                           ;stkvar	_fmt @ sp[(-27)+-4]
 22969  0115AA  0EE1               	movlw	-31
 22970  0115AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 22971  0115B2  0EE2               	movlw	-30
 22972  0115B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 22973  0115BA  0E02               	movlw	2
 22974  0115BC  26DE               	addwf	postinc2,f,c
 22975  0115BE                     L56:
 22976  0115BE  0E00               	movlw	0
 22977  0115C0  22DD               	addwfc	postdec2,f,c
 22978                           
 22979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22980                           ;stkvar	_ap @ sp[(-27)+-6]
 22981  0115C2  0EDF               	movlw	-33
 22982  0115C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 22983  0115CA  0EE0               	movlw	-32
 22984  0115CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 22985  0115D2  0E02               	movlw	2
 22986  0115D4  5EDE               	subwf	postinc2,f,c
 22987  0115D6  0E00               	movlw	0
 22988  0115D8  5ADD               	subwfb	postdec2,f,c
 22989  0115DA  006F FF78  F041    	movff	postinc2,btemp+10
 22990  0115E0  006F FF74  F042    	movff	postdec2,btemp+11
 22991  0115E6  0060  F107  FFD9   	movff	btemp+10,fsr2l
 22992  0115EC  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 22993  0115F2  006F FF78  F041    	movff	postinc2,btemp+10
 22994  0115F8  006F FF74  F042    	movff	postdec2,btemp+11
 22995  0115FE  5041               	movf	(btemp+10)^0,w,c
 22996  011600  6E47               	movwf	(btemp+16)^0,c
 22997  011602  5042               	movf	(btemp+11)^0,w,c
 22998  011604  6E48               	movwf	(btemp+17)^0,c
 22999  011606  D6C4               	goto	L40
 23000  011608                     l13719:
 23001                           
 23002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
 23003  011608  0E03               	movlw	3
 23004  01160A  6EE6               	movwf	postinc1,c
 23005  01160C  0E00               	movlw	0
 23006  01160E  6EE6               	movwf	postinc1,c
 23007  011610  0EC2               	movlw	low STR_165
 23008  011612  6EE6               	movwf	postinc1,c
 23009  011614  0EFF               	movlw	high STR_165
 23010  011616  6EE6               	movwf	postinc1,c
 23011                           
 23012                           ;stkvar	_fmt @ sp[(-31)+-4]
 23013  011618  0EDD               	movlw	-35
 23014  01161A  006F FF8F FFD9     	movff	plusw1,fsr2l
 23015  011620  0EDE               	movlw	-34
 23016  011622  006F FF8F FFDA     	movff	plusw1,fsr2h
 23017  011628  006F FF78  F041    	movff	postinc2,btemp+10
 23018  01162E  006F FF74  F042    	movff	postdec2,btemp+11
 23019  011634  0060  F107  FFE6   	movff	btemp+10,postinc1
 23020  01163A  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23021  011640  EC27  F0B7         	call	_strncmp	;wreg free
 23022  011644  5037               	movf	btemp^0,w,c
 23023  011646  1038               	iorwf	(btemp+1)^0,w,c
 23024  011648  B4D8               	btfsc	status,2,c
 23025  01164A  D022               	goto	u10170
 23026  01164C  0E03               	movlw	3
 23027  01164E  6EE6               	movwf	postinc1,c
 23028  011650  0E00               	movlw	0
 23029  011652  6EE6               	movwf	postinc1,c
 23030  011654  0EAA               	movlw	low STR_169
 23031  011656  6EE6               	movwf	postinc1,c
 23032  011658  0EFF               	movlw	high STR_169
 23033  01165A  6EE6               	movwf	postinc1,c
 23034                           
 23035                           ;stkvar	_fmt @ sp[(-31)+-4]
 23036  01165C  0EDD               	movlw	-35
 23037  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 23038  011664  0EDE               	movlw	-34
 23039  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 23040  01166C  006F FF78  F041    	movff	postinc2,btemp+10
 23041  011672  006F FF74  F042    	movff	postdec2,btemp+11
 23042  011678  0060  F107  FFE6   	movff	btemp+10,postinc1
 23043  01167E  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23044  011684  EC27  F0B7         	call	_strncmp	;wreg free
 23045  011688  5037               	movf	btemp^0,w,c
 23046  01168A  1038               	iorwf	(btemp+1)^0,w,c
 23047  01168C  A4D8               	btfss	status,2,c
 23048  01168E  D09B               	goto	l13733
 23049  011690                     u10170:
 23050                           
 23051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
 23052                           ;stkvar	_fmt @ sp[(-27)+-4]
 23053  011690  0EE1               	movlw	-31
 23054  011692  006F FF8F FFD9     	movff	plusw1,fsr2l
 23055  011698  0EE2               	movlw	-30
 23056  01169A  006F FF8F FFDA     	movff	plusw1,fsr2h
 23057  0116A0  006F FF78  F041    	movff	postinc2,btemp+10
 23058  0116A6  006F FF74  F042    	movff	postdec2,btemp+11
 23059  0116AC  0E02               	movlw	2
 23060  0116AE  2641               	addwf	(btemp+10)^0,f,c
 23061  0116B0  0E00               	movlw	0
 23062  0116B2  2242               	addwfc	(btemp+11)^0,f,c
 23063  0116B4  0060  F107  FFF6   	movff	btemp+10,tblptrl
 23064  0116BA  0060  F10B  FFF7   	movff	btemp+11,tblptrh
 23065  0116C0                     	if	0	;tblptru may be non-zero
 23066  0116C0                     	endif
 23067  0116C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23068  0116C0  0E00               	movlw	low (__mediumconst shr (0+16))
 23069  0116C2  6EF8               	movwf	tblptru,c
 23070  0116C4                     	endif
 23071                           
 23072                           ;stkvar	_c @ sp[(-27)+26]
 23073  0116C4  0008               	tblrd		*
 23074  0116C6  0EFF               	movlw	-1
 23075  0116C8  006F FFD7 FFE3     	movff	tablat,plusw1
 23076                           
 23077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
 23078                           ;stkvar	_fmt @ sp[(-27)+-4]
 23079  0116CE  0EE1               	movlw	-31
 23080  0116D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 23081  0116D6  0EE2               	movlw	-30
 23082  0116D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 23083  0116DE  0E03               	movlw	3
 23084  0116E0  26DE               	addwf	postinc2,f,c
 23085  0116E2  0E00               	movlw	0
 23086  0116E4  22DD               	addwfc	postdec2,f,c
 23087                           
 23088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23089                           ;stkvar	_ap @ sp[(-27)+-6]
 23090  0116E6  0EDF               	movlw	-33
 23091  0116E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 23092  0116EE  0EE0               	movlw	-32
 23093  0116F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 23094  0116F6  0E02               	movlw	2
 23095  0116F8  5EDE               	subwf	postinc2,f,c
 23096  0116FA  0E00               	movlw	0
 23097  0116FC  5ADD               	subwfb	postdec2,f,c
 23098  0116FE  006F FF78  F041    	movff	postinc2,btemp+10
 23099  011704  006F FF74  F042    	movff	postdec2,btemp+11
 23100  01170A  0060  F107  FFD9   	movff	btemp+10,fsr2l
 23101  011710  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 23102  011716  50DF               	movf	indf2,w,c
 23103  011718  6E42               	movwf	(btemp+11)^0,c
 23104  01171A  0060  F108  F047   	movff	btemp+11,btemp+16
 23105  011720  6A48               	clrf	(btemp+17)^0,c
 23106  011722                     L42:
 23107  011722  6A49               	clrf	(btemp+18)^0,c
 23108  011724  6A4A               	clrf	(btemp+19)^0,c
 23109  011726                     L43:
 23110  011726  6A4B               	clrf	(btemp+20)^0,c
 23111  011728  6A4C               	clrf	(btemp+21)^0,c
 23112  01172A  6A4D               	clrf	(btemp+22)^0,c
 23113  01172C  6A4E               	clrf	(btemp+23)^0,c
 23114                           
 23115                           ;stkvar	_llu @ sp[(-27)+4]
 23116  01172E  0EE9               	movlw	-23
 23117  011730  0060  F11F  FFE3   	movff	btemp+16,plusw1
 23118  011736  0EEA               	movlw	-22
 23119  011738  0060  F123  FFE3   	movff	btemp+17,plusw1
 23120  01173E  0EEB               	movlw	-21
 23121  011740  0060  F127  FFE3   	movff	btemp+18,plusw1
 23122  011746  0EEC               	movlw	-20
 23123  011748  0060  F12B  FFE3   	movff	btemp+19,plusw1
 23124  01174E  0EED               	movlw	-19
 23125  011750  0060  F12F  FFE3   	movff	btemp+20,plusw1
 23126  011756  0EEE               	movlw	-18
 23127  011758  0060  F133  FFE3   	movff	btemp+21,plusw1
 23128  01175E  0EEF               	movlw	-17
 23129  011760  0060  F137  FFE3   	movff	btemp+22,plusw1
 23130  011766  0EF0               	movlw	-16
 23131  011768  0060  F13B  FFE3   	movff	btemp+23,plusw1
 23132                           
 23133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
 23134                           ;stkvar	_c @ sp[(-27)+26]
 23135  01176E  0EFF               	movlw	-1
 23136  011770  50E3               	movf	plusw1,w,c
 23137  011772  6EE6               	movwf	postinc1,c
 23138                           
 23139                           ;stkvar	_llu @ sp[(-28)+4]
 23140  011774  50E1               	movf	fsr1l,w,c
 23141  011776  0FE8               	addlw	-24
 23142  011778  6ED9               	movwf	fsr2l,c
 23143  01177A  50E2               	movf	fsr1h,w,c
 23144  01177C  6EDA               	movwf	fsr2h,c
 23145  01177E  0EFF               	movlw	255
 23146  011780  22DA               	addwfc	fsr2h,f,c
 23147  011782  006F FF7B FFE6     	movff	postinc2,postinc1
 23148  011788  006F FF7B FFE6     	movff	postinc2,postinc1
 23149  01178E  006F FF7B FFE6     	movff	postinc2,postinc1
 23150  011794  006F FF7B FFE6     	movff	postinc2,postinc1
 23151  01179A  006F FF7B FFE6     	movff	postinc2,postinc1
 23152  0117A0  006F FF7B FFE6     	movff	postinc2,postinc1
 23153  0117A6  006F FF7B FFE6     	movff	postinc2,postinc1
 23154  0117AC  006F FF7B FFE6     	movff	postinc2,postinc1
 23155                           
 23156                           ;stkvar	_fp @ sp[(-36)+-2]
 23157  0117B2  0EDA               	movlw	-38
 23158  0117B4  006F FF8F FFE6     	movff	plusw1,postinc1
 23159  0117BA  006F FF8F FFE6     	movff	plusw1,postinc1
 23160  0117C0  EC63  F0A3         	call	_xtoa	;wreg free
 23161  0117C4  D224               	goto	l2469
 23162  0117C6                     l13733:
 23163                           
 23164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
 23165  0117C6  0E02               	movlw	2
 23166  0117C8  6EE6               	movwf	postinc1,c
 23167  0117CA  0E00               	movlw	0
 23168  0117CC  6EE6               	movwf	postinc1,c
 23169  0117CE  0EC3               	movlw	low (STR_165+1)
 23170  0117D0  6EE6               	movwf	postinc1,c
 23171  0117D2  0EFF               	movlw	high (STR_165+1)
 23172  0117D4  6EE6               	movwf	postinc1,c
 23173                           
 23174                           ;stkvar	_fmt @ sp[(-31)+-4]
 23175  0117D6  0EDD               	movlw	-35
 23176  0117D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 23177  0117DE  0EDE               	movlw	-34
 23178  0117E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 23179  0117E6  006F FF78  F041    	movff	postinc2,btemp+10
 23180  0117EC  006F FF74  F042    	movff	postdec2,btemp+11
 23181  0117F2  0060  F107  FFE6   	movff	btemp+10,postinc1
 23182  0117F8  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23183  0117FE  EC27  F0B7         	call	_strncmp	;wreg free
 23184  011802  5037               	movf	btemp^0,w,c
 23185  011804  1038               	iorwf	(btemp+1)^0,w,c
 23186  011806  B4D8               	btfsc	status,2,c
 23187  011808  D14B               	goto	u10250
 23188  01180A  0E02               	movlw	2
 23189  01180C  6EE6               	movwf	postinc1,c
 23190  01180E  0E00               	movlw	0
 23191  011810  6EE6               	movwf	postinc1,c
 23192  011812  0EAB               	movlw	low (STR_169+1)
 23193  011814  6EE6               	movwf	postinc1,c
 23194  011816  0EFF               	movlw	high (STR_169+1)
 23195  011818  6EE6               	movwf	postinc1,c
 23196                           
 23197                           ;stkvar	_fmt @ sp[(-31)+-4]
 23198  01181A  0EDD               	movlw	-35
 23199  01181C  006F FF8F FFD9     	movff	plusw1,fsr2l
 23200  011822  0EDE               	movlw	-34
 23201  011824  006F FF8F FFDA     	movff	plusw1,fsr2h
 23202  01182A  006F FF78  F041    	movff	postinc2,btemp+10
 23203  011830  006F FF74  F042    	movff	postdec2,btemp+11
 23204  011836  0060  F107  FFE6   	movff	btemp+10,postinc1
 23205  01183C  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23206  011842  EC27  F0B7         	call	_strncmp	;wreg free
 23207  011846  5037               	movf	btemp^0,w,c
 23208  011848  1038               	iorwf	(btemp+1)^0,w,c
 23209  01184A  B4D8               	btfsc	status,2,c
 23210  01184C  D129               	goto	u10250
 23211                           
 23212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 23213                           ;stkvar	_fmt @ sp[(-27)+-4]
 23214                           
 23215                           ;stkvar	_llu @ sp[(-27)+4]
 23216                           
 23217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1267:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 23218                           ;stkvar	_ap @ sp[(-27)+-6]
 23219                           
 23220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1266:             *fmt += ((s
      +                          izeof("hx")/sizeof("hx"[0]))-1);
 23221                           ;stkvar	_fmt @ sp[(-27)+-4]
 23222                           
 23223                           ;stkvar	_c @ sp[(-27)+26]
 23224                           
 23225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
 23226                           ;stkvar	_fmt @ sp[(-27)+-4]
 23227  01184E  0EE1               	movlw	-31
 23228  011850  006F FF8F FFD9     	movff	plusw1,fsr2l
 23229  011856  0EE2               	movlw	-30
 23230  011858  006F FF8F FFDA     	movff	plusw1,fsr2h
 23231  01185E  006F FF7B FFF6     	movff	postinc2,tblptrl
 23232  011864  006F FF77 FFF7     	movff	postdec2,tblptrh
 23233  01186A                     	if	0	;tblptru may be non-zero
 23234  01186A                     	endif
 23235  01186A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23236  01186A  0E00               	movlw	low (__mediumconst shr (0+16))
 23237  01186C  6EF8               	movwf	tblptru,c
 23238  01186E                     	endif
 23239  01186E  0008               	tblrd		*
 23240  011870  50F5               	movf	tablat,w,c
 23241  011872  0A78               	xorlw	120
 23242  011874  B4D8               	btfsc	status,2,c
 23243  011876  D015               	goto	u10210
 23244                           
 23245                           ;stkvar	_fmt @ sp[(-27)+-4]
 23246  011878  0EE1               	movlw	-31
 23247  01187A  006F FF8F FFD9     	movff	plusw1,fsr2l
 23248  011880  0EE2               	movlw	-30
 23249  011882  006F FF8F FFDA     	movff	plusw1,fsr2h
 23250  011888  006F FF7B FFF6     	movff	postinc2,tblptrl
 23251  01188E  006F FF77 FFF7     	movff	postdec2,tblptrh
 23252  011894                     	if	0	;tblptru may be non-zero
 23253  011894                     	endif
 23254  011894                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23255  011894  0E00               	movlw	low (__mediumconst shr (0+16))
 23256  011896  6EF8               	movwf	tblptru,c
 23257  011898                     	endif
 23258  011898  0008               	tblrd		*
 23259  01189A  50F5               	movf	tablat,w,c
 23260  01189C  0A58               	xorlw	88
 23261  01189E  A4D8               	btfss	status,2,c
 23262  0118A0  D01F               	goto	l13761
 23263  0118A2                     u10210:
 23264                           
 23265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 23266                           ;stkvar	_fmt @ sp[(-27)+-4]
 23267  0118A2  0EE1               	movlw	-31
 23268  0118A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 23269  0118AA  0EE2               	movlw	-30
 23270  0118AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 23271  0118B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 23272  0118B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 23273  0118BE                     	if	0	;tblptru may be non-zero
 23274  0118BE                     	endif
 23275  0118BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23276  0118BE  0E00               	movlw	low (__mediumconst shr (0+16))
 23277  0118C0  6EF8               	movwf	tblptru,c
 23278  0118C2                     	endif
 23279                           
 23280                           ;stkvar	_c @ sp[(-27)+26]
 23281  0118C2  0008               	tblrd		*
 23282  0118C4  0EFF               	movlw	-1
 23283  0118C6  006F FFD7 FFE3     	movff	tablat,plusw1
 23284                           
 23285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 23286                           ;stkvar	_fmt @ sp[(-27)+-4]
 23287  0118CC  0EE1               	movlw	-31
 23288  0118CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 23289  0118D4  0EE2               	movlw	-30
 23290  0118D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 23291  0118DC  2ADE               	incf	postinc2,f,c
 23292  0118DE  D109               	goto	L57
 23293  0118E0                     l13761:
 23294                           
 23295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 23296  0118E0  0E02               	movlw	2
 23297  0118E2  6EE6               	movwf	postinc1,c
 23298  0118E4  0E00               	movlw	0
 23299  0118E6  6EE6               	movwf	postinc1,c
 23300  0118E8  0EF2               	movlw	low STR_183
 23301  0118EA  6EE6               	movwf	postinc1,c
 23302  0118EC  0EFF               	movlw	high STR_183
 23303  0118EE  6EE6               	movwf	postinc1,c
 23304                           
 23305                           ;stkvar	_fmt @ sp[(-31)+-4]
 23306  0118F0  0EDD               	movlw	-35
 23307  0118F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 23308  0118F8  0EDE               	movlw	-34
 23309  0118FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 23310  011900  006F FF78  F041    	movff	postinc2,btemp+10
 23311  011906  006F FF74  F042    	movff	postdec2,btemp+11
 23312  01190C  0060  F107  FFE6   	movff	btemp+10,postinc1
 23313  011912  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23314  011918  EC27  F0B7         	call	_strncmp	;wreg free
 23315  01191C  5037               	movf	btemp^0,w,c
 23316  01191E  1038               	iorwf	(btemp+1)^0,w,c
 23317  011920  B4D8               	btfsc	status,2,c
 23318  011922  D022               	goto	u10230
 23319  011924  0E02               	movlw	2
 23320  011926  6EE6               	movwf	postinc1,c
 23321  011928  0E00               	movlw	0
 23322  01192A  6EE6               	movwf	postinc1,c
 23323  01192C  0ECE               	movlw	low STR_187
 23324  01192E  6EE6               	movwf	postinc1,c
 23325  011930  0EFF               	movlw	high STR_187
 23326  011932  6EE6               	movwf	postinc1,c
 23327                           
 23328                           ;stkvar	_fmt @ sp[(-31)+-4]
 23329  011934  0EDD               	movlw	-35
 23330  011936  006F FF8F FFD9     	movff	plusw1,fsr2l
 23331  01193C  0EDE               	movlw	-34
 23332  01193E  006F FF8F FFDA     	movff	plusw1,fsr2h
 23333  011944  006F FF78  F041    	movff	postinc2,btemp+10
 23334  01194A  006F FF74  F042    	movff	postdec2,btemp+11
 23335  011950  0060  F107  FFE6   	movff	btemp+10,postinc1
 23336  011956  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23337  01195C  EC27  F0B7         	call	_strncmp	;wreg free
 23338  011960  5037               	movf	btemp^0,w,c
 23339  011962  1038               	iorwf	(btemp+1)^0,w,c
 23340  011964  A4D8               	btfss	status,2,c
 23341  011966  D058               	goto	l13775
 23342  011968                     u10230:
 23343                           
 23344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 23345                           ;stkvar	_fmt @ sp[(-27)+-4]
 23346  011968  0EE1               	movlw	-31
 23347  01196A  006F FF8F FFD9     	movff	plusw1,fsr2l
 23348  011970  0EE2               	movlw	-30
 23349  011972  006F FF8F FFDA     	movff	plusw1,fsr2h
 23350  011978  006F FF78  F041    	movff	postinc2,btemp+10
 23351  01197E  006F FF74  F042    	movff	postdec2,btemp+11
 23352  011984  0E01               	movlw	1
 23353  011986  2641               	addwf	(btemp+10)^0,f,c
 23354  011988  0E00               	movlw	0
 23355  01198A  2242               	addwfc	(btemp+11)^0,f,c
 23356  01198C  0060  F107  FFF6   	movff	btemp+10,tblptrl
 23357  011992  0060  F10B  FFF7   	movff	btemp+11,tblptrh
 23358  011998                     	if	0	;tblptru may be non-zero
 23359  011998                     	endif
 23360  011998                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23361  011998  0E00               	movlw	low (__mediumconst shr (0+16))
 23362  01199A  6EF8               	movwf	tblptru,c
 23363  01199C                     	endif
 23364                           
 23365                           ;stkvar	_c @ sp[(-27)+26]
 23366  01199C  0008               	tblrd		*
 23367  01199E  0EFF               	movlw	-1
 23368  0119A0  006F FFD7 FFE3     	movff	tablat,plusw1
 23369                           
 23370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 23371                           ;stkvar	_fmt @ sp[(-27)+-4]
 23372  0119A6  0EE1               	movlw	-31
 23373  0119A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 23374  0119AE  0EE2               	movlw	-30
 23375  0119B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 23376  0119B6  0E02               	movlw	2
 23377  0119B8  26DE               	addwf	postinc2,f,c
 23378  0119BA  0E00               	movlw	0
 23379  0119BC  22DD               	addwfc	postdec2,f,c
 23380                           
 23381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 23382                           ;stkvar	_ap @ sp[(-27)+-6]
 23383  0119BE  0EDF               	movlw	-33
 23384  0119C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 23385  0119C6  0EE0               	movlw	-32
 23386  0119C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 23387  0119CE  0E04               	movlw	4
 23388  0119D0  5EDE               	subwf	postinc2,f,c
 23389  0119D2  0E00               	movlw	0
 23390  0119D4  5ADD               	subwfb	postdec2,f,c
 23391  0119D6  006F FF78  F041    	movff	postinc2,btemp+10
 23392  0119DC  006F FF74  F042    	movff	postdec2,btemp+11
 23393  0119E2  0060  F107  FFD9   	movff	btemp+10,fsr2l
 23394  0119E8  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 23395  0119EE  006F FF78  F03F    	movff	postinc2,btemp+8
 23396  0119F4  006F FF78  F040    	movff	postinc2,btemp+9
 23397  0119FA  006F FF78  F041    	movff	postinc2,btemp+10
 23398  011A00  006F FF78  F042    	movff	postinc2,btemp+11
 23399  011A06  503F               	movf	(btemp+8)^0,w,c
 23400  011A08  6E47               	movwf	(btemp+16)^0,c
 23401  011A0A  5040               	movf	(btemp+9)^0,w,c
 23402  011A0C  6E48               	movwf	(btemp+17)^0,c
 23403  011A0E  5041               	movf	(btemp+10)^0,w,c
 23404  011A10  6E49               	movwf	(btemp+18)^0,c
 23405  011A12  5042               	movf	(btemp+11)^0,w,c
 23406  011A14  6E4A               	movwf	(btemp+19)^0,c
 23407  011A16  D687               	goto	L43
 23408  011A18                     l13775:
 23409                           
 23410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
 23411  011A18  0E02               	movlw	2
 23412  011A1A  6EE6               	movwf	postinc1,c
 23413  011A1C  0E00               	movlw	0
 23414  011A1E  6EE6               	movwf	postinc1,c
 23415  011A20  0EF5               	movlw	low STR_192
 23416  011A22  6EE6               	movwf	postinc1,c
 23417  011A24  0EFF               	movlw	high STR_192
 23418  011A26  6EE6               	movwf	postinc1,c
 23419                           
 23420                           ;stkvar	_fmt @ sp[(-31)+-4]
 23421  011A28  0EDD               	movlw	-35
 23422  011A2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 23423  011A30  0EDE               	movlw	-34
 23424  011A32  006F FF8F FFDA     	movff	plusw1,fsr2h
 23425  011A38  006F FF78  F041    	movff	postinc2,btemp+10
 23426  011A3E  006F FF74  F042    	movff	postdec2,btemp+11
 23427  011A44  0060  F107  FFE6   	movff	btemp+10,postinc1
 23428  011A4A  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23429  011A50  EC27  F0B7         	call	_strncmp	;wreg free
 23430  011A54  5037               	movf	btemp^0,w,c
 23431  011A56  1038               	iorwf	(btemp+1)^0,w,c
 23432  011A58  B4D8               	btfsc	status,2,c
 23433  011A5A  D022               	goto	u10250
 23434  011A5C  0E02               	movlw	2
 23435  011A5E  6EE6               	movwf	postinc1,c
 23436  011A60  0E00               	movlw	0
 23437  011A62  6EE6               	movwf	postinc1,c
 23438  011A64  0ED1               	movlw	low STR_196
 23439  011A66  6EE6               	movwf	postinc1,c
 23440  011A68  0EFF               	movlw	high STR_196
 23441  011A6A  6EE6               	movwf	postinc1,c
 23442                           
 23443                           ;stkvar	_fmt @ sp[(-31)+-4]
 23444  011A6C  0EDD               	movlw	-35
 23445  011A6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 23446  011A74  0EDE               	movlw	-34
 23447  011A76  006F FF8F FFDA     	movff	plusw1,fsr2h
 23448  011A7C  006F FF78  F041    	movff	postinc2,btemp+10
 23449  011A82  006F FF74  F042    	movff	postdec2,btemp+11
 23450  011A88  0060  F107  FFE6   	movff	btemp+10,postinc1
 23451  011A8E  0060  F10B  FFE6   	movff	btemp+11,postinc1
 23452  011A94  EC27  F0B7         	call	_strncmp	;wreg free
 23453  011A98  5037               	movf	btemp^0,w,c
 23454  011A9A  1038               	iorwf	(btemp+1)^0,w,c
 23455  011A9C  A4D8               	btfss	status,2,c
 23456  011A9E  D04E               	goto	l13789
 23457  011AA0                     u10250:
 23458                           
 23459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
 23460                           ;stkvar	_fmt @ sp[(-27)+-4]
 23461  011AA0  0EE1               	movlw	-31
 23462  011AA2  006F FF8F FFD9     	movff	plusw1,fsr2l
 23463  011AA8  0EE2               	movlw	-30
 23464  011AAA  006F FF8F FFDA     	movff	plusw1,fsr2h
 23465  011AB0  006F FF78  F041    	movff	postinc2,btemp+10
 23466  011AB6  006F FF74  F042    	movff	postdec2,btemp+11
 23467  011ABC  0E01               	movlw	1
 23468  011ABE  2641               	addwf	(btemp+10)^0,f,c
 23469  011AC0  0E00               	movlw	0
 23470  011AC2  2242               	addwfc	(btemp+11)^0,f,c
 23471  011AC4  0060  F107  FFF6   	movff	btemp+10,tblptrl
 23472  011ACA  0060  F10B  FFF7   	movff	btemp+11,tblptrh
 23473  011AD0                     	if	0	;tblptru may be non-zero
 23474  011AD0                     	endif
 23475  011AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23476  011AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 23477  011AD2  6EF8               	movwf	tblptru,c
 23478  011AD4                     	endif
 23479                           
 23480                           ;stkvar	_c @ sp[(-27)+26]
 23481  011AD4  0008               	tblrd		*
 23482  011AD6  0EFF               	movlw	-1
 23483  011AD8  006F FFD7 FFE3     	movff	tablat,plusw1
 23484                           
 23485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
 23486                           ;stkvar	_fmt @ sp[(-27)+-4]
 23487  011ADE  0EE1               	movlw	-31
 23488  011AE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 23489  011AE6  0EE2               	movlw	-30
 23490  011AE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 23491  011AEE  0E02               	movlw	2
 23492  011AF0  26DE               	addwf	postinc2,f,c
 23493  011AF2                     L57:
 23494  011AF2  0E00               	movlw	0
 23495  011AF4  22DD               	addwfc	postdec2,f,c
 23496                           
 23497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23498                           ;stkvar	_ap @ sp[(-27)+-6]
 23499  011AF6  0EDF               	movlw	-33
 23500  011AF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 23501  011AFE  0EE0               	movlw	-32
 23502  011B00  006F FF8F FFDA     	movff	plusw1,fsr2h
 23503  011B06  0E02               	movlw	2
 23504  011B08  5EDE               	subwf	postinc2,f,c
 23505  011B0A  0E00               	movlw	0
 23506  011B0C  5ADD               	subwfb	postdec2,f,c
 23507  011B0E  006F FF78  F041    	movff	postinc2,btemp+10
 23508  011B14  006F FF74  F042    	movff	postdec2,btemp+11
 23509  011B1A  0060  F107  FFD9   	movff	btemp+10,fsr2l
 23510  011B20  0060  F10B  FFDA   	movff	btemp+11,fsr2h
 23511  011B26  006F FF78  F041    	movff	postinc2,btemp+10
 23512  011B2C  006F FF74  F042    	movff	postdec2,btemp+11
 23513  011B32  5041               	movf	(btemp+10)^0,w,c
 23514  011B34  6E47               	movwf	(btemp+16)^0,c
 23515  011B36  5042               	movf	(btemp+11)^0,w,c
 23516  011B38  6E48               	movwf	(btemp+17)^0,c
 23517  011B3A  D5F3               	goto	L42
 23518  011B3C                     l13789:
 23519                           
 23520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 23521                           ;stkvar	_fmt @ sp[(-27)+-4]
 23522  011B3C  0EE1               	movlw	-31
 23523  011B3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 23524  011B44  0EE2               	movlw	-30
 23525  011B46  006F FF8F FFDA     	movff	plusw1,fsr2h
 23526  011B4C  006F FF7B FFF6     	movff	postinc2,tblptrl
 23527  011B52  006F FF77 FFF7     	movff	postdec2,tblptrh
 23528  011B58                     	if	0	;tblptru may be non-zero
 23529  011B58                     	endif
 23530  011B58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23531  011B58  0E00               	movlw	low (__mediumconst shr (0+16))
 23532  011B5A  6EF8               	movwf	tblptru,c
 23533  011B5C                     	endif
 23534  011B5C  0008               	tblrd		*
 23535  011B5E  50F5               	movf	tablat,w,c
 23536  011B60  0A25               	xorlw	37
 23537  011B62  A4D8               	btfss	status,2,c
 23538  011B64  D01D               	goto	l13799
 23539                           
 23540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 23541                           ;stkvar	_fmt @ sp[(-27)+-4]
 23542  011B66  0EE1               	movlw	-31
 23543  011B68  006F FF8F FFD9     	movff	plusw1,fsr2l
 23544  011B6E  0EE2               	movlw	-30
 23545  011B70  006F FF8F FFDA     	movff	plusw1,fsr2h
 23546  011B76  2ADE               	incf	postinc2,f,c
 23547  011B78  0E00               	movlw	0
 23548  011B7A  22DD               	addwfc	postdec2,f,c
 23549                           
 23550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 23551                           ;stkvar	_fp @ sp[(-27)+-2]
 23552  011B7C  0EE3               	movlw	-29
 23553  011B7E  006F FF8F FFE6     	movff	plusw1,postinc1
 23554  011B84  006F FF8F FFE6     	movff	plusw1,postinc1
 23555  011B8A  0E25               	movlw	37
 23556  011B8C  6EE6               	movwf	postinc1,c
 23557  011B8E  0E00               	movlw	0
 23558  011B90  6EE6               	movwf	postinc1,c
 23559  011B92  ECEA  F0BC         	call	_fputc	;wreg free
 23560  011B96                     l13795:
 23561                           
 23562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 23563  011B96  0E01               	movlw	1
 23564  011B98                     L39:
 23565  011B98  6E37               	movwf	btemp^0,c
 23566  011B9A  0E00               	movlw	0
 23567  011B9C  6E38               	movwf	(btemp+1)^0,c
 23568  011B9E  D037               	goto	l2469
 23569  011BA0                     l13799:
 23570                           
 23571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 23572                           ;stkvar	_fmt @ sp[(-27)+-4]
 23573  011BA0  0EE1               	movlw	-31
 23574  011BA2  006F FF8F FFD9     	movff	plusw1,fsr2l
 23575  011BA8  0EE2               	movlw	-30
 23576  011BAA  006F FF8F FFDA     	movff	plusw1,fsr2h
 23577  011BB0  2ADE               	incf	postinc2,f,c
 23578  011BB2  0E00               	movlw	0
 23579  011BB4  22DD               	addwfc	postdec2,f,c
 23580  011BB6  EFBC  F086         	goto	u10000
 23581  011BBA                     l13805:
 23582                           
 23583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 23584                           ;stkvar	_fp @ sp[(-27)+-2]
 23585  011BBA  0EE3               	movlw	-29
 23586  011BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 23587  011BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 23588                           
 23589                           ;stkvar	_fmt @ sp[(-29)+-4]
 23590  011BC8  0EDF               	movlw	-33
 23591  011BCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 23592  011BD0  0EE0               	movlw	-32
 23593  011BD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 23594  011BD8  006F FF7B FFF6     	movff	postinc2,tblptrl
 23595  011BDE  006F FF77 FFF7     	movff	postdec2,tblptrh
 23596  011BE4                     	if	0	;tblptru may be non-zero
 23597  011BE4                     	endif
 23598  011BE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23599  011BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 23600  011BE6  6EF8               	movwf	tblptru,c
 23601  011BE8                     	endif
 23602  011BE8  0008               	tblrd		*
 23603  011BEA  50F5               	movf	tablat,w,c
 23604  011BEC  6EE6               	movwf	postinc1,c
 23605  011BEE  0E00               	movlw	0
 23606  011BF0  6EE6               	movwf	postinc1,c
 23607  011BF2  ECEA  F0BC         	call	_fputc	;wreg free
 23608                           
 23609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 23610                           ;stkvar	_fmt @ sp[(-27)+-4]
 23611  011BF6  0EE1               	movlw	-31
 23612  011BF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 23613  011BFE  0EE2               	movlw	-30
 23614  011C00  006F FF8F FFDA     	movff	plusw1,fsr2h
 23615  011C06  2ADE               	incf	postinc2,f,c
 23616  011C08  0E00               	movlw	0
 23617  011C0A  22DD               	addwfc	postdec2,f,c
 23618  011C0C  D7C4               	goto	l13795
 23619  011C0E                     l2469:
 23620                           
 23621                           ; _vfpfcnvrt: autosize = 27, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 23622  011C0E  0EDF               	movlw	223
 23623  011C10  26E1               	addwf	fsr1l,f,c
 23624  011C12  0EFF               	movlw	255
 23625  011C14  22E2               	addwfc	fsr1h,f,c
 23626  011C16  0012               	return		;funcret
 23627  011C18                     __end_of_vfpfcnvrt:
 23628                           	opt callstack 0
 23629                           
 23630 ;; *************** function _xtoa *****************
 23631 ;; Defined at:
 23632 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23633 ;; Parameters:    Size  Location     Type
 23634 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23635 ;;		 -> f(6), NULL(0), 
 23636 ;;  d               8  [STACK] unsigned long long 
 23637 ;;  x               1  [STACK] unsigned char 
 23638 ;; Auto vars:     Size  Location     Type
 23639 ;;  n               8  [STACK] unsigned long long 
 23640 ;;  c               2  [STACK] int 
 23641 ;;  i               2  [STACK] int 
 23642 ;;  w               2  [STACK] int 
 23643 ;;  p               2  [STACK] int 
 23644 ;; Return value:  Size  Location     Type
 23645 ;;                  2  [STACK] int 
 23646 ;; Registers used:
 23647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23648 ;; Tracked objects:
 23649 ;;		On entry : 0/3B
 23650 ;;		On exit  : 0/0
 23651 ;;		Unchanged: 0/0
 23652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23657 ;;Total ram usage:        0 bytes
 23658 ;; Hardware stack levels used:    1
 23659 ;; Hardware stack levels required when called:    8
 23660 ;; This function calls:
 23661 ;;		_isalpha
 23662 ;;		_isupper
 23663 ;;		_pad
 23664 ;;		_toupper
 23665 ;; This function is called by:
 23666 ;;		_vfpfcnvrt
 23667 ;; This function uses a reentrant model
 23668 ;;
 23669                           
 23670                           	psect	text93
 23671  0146C6                     __ptext93:
 23672                           	opt callstack 0
 23673  0146C6                     _xtoa:
 23674                           	opt callstack 0
 23675                           
 23676                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 23677  0146C6  0E14               	movlw	20
 23678  0146C8  26E1               	addwf	fsr1l,f,c
 23679  0146CA  0E00               	movlw	0
 23680  0146CC  22E2               	addwfc	fsr1h,f,c
 23681                           
 23682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 23683                           
 23684                           ;incstack = 0
 23685  0146CE  AE12               	btfss	(_prec+1)^0,7,c
 23686                           
 23687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 23688  0146D0  9213               	bcf	_flags^0,1,c
 23689                           
 23690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 23691  0146D2  BE12               	btfsc	(_prec+1)^0,7,c
 23692  0146D4  D005               	goto	u9530
 23693  0146D6  5012               	movf	(_prec+1)^0,w,c
 23694  0146D8  E110               	bnz	l13323
 23695  0146DA  0411               	decf	_prec^0,w,c
 23696  0146DC  B0D8               	btfsc	status,0,c
 23697  0146DE  D00D               	goto	l13323
 23698  0146E0                     u9530:
 23699  0146E0  0E01               	movlw	1
 23700  0146E2  6E41               	movwf	(btemp+10)^0,c
 23701  0146E4  0E00               	movlw	0
 23702  0146E6  6E42               	movwf	(btemp+11)^0,c
 23703                           
 23704                           ;stkvar	_p @ sp[(-20)+18]
 23705  0146E8  0EFE               	movlw	-2
 23706  0146EA  0060  F107  FFE3   	movff	btemp+10,plusw1
 23707  0146F0  0EFF               	movlw	-1
 23708  0146F2  0060  F10B  FFE3   	movff	btemp+11,plusw1
 23709  0146F8  D008               	goto	l2409
 23710  0146FA                     l13323:
 23711                           
 23712                           ;stkvar	_p @ sp[(-20)+18]
 23713  0146FA  0EFE               	movlw	-2
 23714  0146FC  0060  F047  FFE3   	movff	_prec,plusw1
 23715  014702  0EFF               	movlw	-1
 23716  014704  0060  F04B  FFE3   	movff	_prec+1,plusw1
 23717  01470A                     l2409:
 23718                           
 23719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 23720                           ;stkvar	_w @ sp[(-20)+16]
 23721  01470A  0EFC               	movlw	-4
 23722  01470C  0060  F03F  FFE3   	movff	_width,plusw1
 23723  014712  0EFD               	movlw	-3
 23724  014714  0060  F043  FFE3   	movff	_width+1,plusw1
 23725                           
 23726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 23727  01471A  A813               	btfss	_flags^0,4,c
 23728  01471C  D00B               	goto	l13329
 23729                           
 23730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 23731                           ;stkvar	_w @ sp[(-20)+16]
 23732  01471E  50E1               	movf	fsr1l,w,c
 23733  014720  0FFC               	addlw	-4
 23734  014722  6ED9               	movwf	fsr2l,c
 23735  014724  50E2               	movf	fsr1h,w,c
 23736  014726  6EDA               	movwf	fsr2h,c
 23737  014728  0EFF               	movlw	255
 23738  01472A  22DA               	addwfc	fsr2h,f,c
 23739  01472C  0EFE               	movlw	254
 23740  01472E  26DE               	addwf	postinc2,f,c
 23741  014730  0EFF               	movlw	255
 23742  014732  22DD               	addwfc	postdec2,f,c
 23743  014734                     l13329:
 23744                           
 23745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 23746                           ;stkvar	_d @ sp[(-20)+-10]
 23747  014734  0EE2               	movlw	226
 23748  014736  24E1               	addwf	fsr1l,w,c
 23749  014738  6ED9               	movwf	fsr2l,c
 23750  01473A  0EFF               	movlw	255
 23751  01473C  20E2               	addwfc	fsr1h,w,c
 23752  01473E  6EDA               	movwf	fsr2h,c
 23753                           
 23754                           ;stkvar	_n @ sp[(-20)+4]
 23755  014740  0E08               	movlw	8
 23756  014742  6E37               	movwf	btemp^0,c
 23757  014744  0EF0               	movlw	-16
 23758  014746                     us955999:
 23759  014746  006F FF7B FFE3     	movff	postinc2,plusw1
 23760  01474C  28E8               	incf	wreg,w,c
 23761  01474E  2E37               	decfsz	btemp^0,f,c
 23762  014750  D7FA               	bra	us955999
 23763                           
 23764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 23765  014752  0E1F               	movlw	31
 23766  014754  6E41               	movwf	(btemp+10)^0,c
 23767  014756  0E00               	movlw	0
 23768  014758  6E42               	movwf	(btemp+11)^0,c
 23769                           
 23770                           ;stkvar	_i @ sp[(-20)+14]
 23771  01475A  0EFA               	movlw	-6
 23772  01475C  0060  F107  FFE3   	movff	btemp+10,plusw1
 23773  014762  0EFB               	movlw	-5
 23774  014764  0060  F10B  FFE3   	movff	btemp+11,plusw1
 23775                           
 23776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 23777  01476A  0100               	movlb	0	; () banked
 23778  01476C  6BCC               	clrf	(_dbuf+31)& (0+255),b
 23779                           
 23780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23781  01476E  D0E8               	goto	l13367
 23782  014770                     l13335:
 23783                           
 23784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 23785                           ;stkvar	_i @ sp[(-20)+14]
 23786  014770  50E1               	movf	fsr1l,w,c
 23787  014772  0FFA               	addlw	-6
 23788  014774  6ED9               	movwf	fsr2l,c
 23789  014776  50E2               	movf	fsr1h,w,c
 23790  014778  6EDA               	movwf	fsr2h,c
 23791  01477A  0EFF               	movlw	255
 23792  01477C  22DA               	addwfc	fsr2h,f,c
 23793  01477E  06DE               	decf	postinc2,f,c
 23794  014780  0E00               	movlw	0
 23795  014782  5ADD               	subwfb	postdec2,f,c
 23796                           
 23797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 23798                           ;stkvar	_n @ sp[(-20)+4]
 23799  014784  0EF0               	movlw	-16
 23800  014786  006F FF8C  F041    	movff	plusw1,btemp+10
 23801  01478C  0EF1               	movlw	-15
 23802  01478E  006F FF8C  F042    	movff	plusw1,btemp+11
 23803  014794  0E0F               	movlw	15
 23804  014796  1641               	andwf	(btemp+10)^0,f,c
 23805  014798  0E00               	movlw	0
 23806  01479A  1642               	andwf	(btemp+11)^0,f,c
 23807                           
 23808                           ;stkvar	_c @ sp[(-20)+12]
 23809  01479C  0EF8               	movlw	-8
 23810  01479E  0060  F107  FFE3   	movff	btemp+10,plusw1
 23811  0147A4  0EF9               	movlw	-7
 23812  0147A6  0060  F10B  FFE3   	movff	btemp+11,plusw1
 23813                           
 23814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 23815                           ;stkvar	_c @ sp[(-20)+12]
 23816  0147AC  0EF9               	movlw	-7
 23817  0147AE  BEE3               	btfsc	plusw1,7,c
 23818  0147B0  D00F               	goto	l13343
 23819  0147B2  0EF9               	movlw	-7
 23820  0147B4  50E3               	movf	plusw1,w,c
 23821  0147B6  E108               	bnz	u9560
 23822  0147B8  0EF8               	movlw	-8
 23823  0147BA  006F FF8C  F037    	movff	plusw1,btemp
 23824  0147C0  0E0A               	movlw	10
 23825  0147C2  5E37               	subwf	btemp^0,f,c
 23826  0147C4  A0D8               	btfss	status,0,c
 23827  0147C6  D004               	goto	l13343
 23828  0147C8                     u9560:
 23829                           
 23830                           ;stkvar	_c @ sp[(-20)+12]
 23831  0147C8  0EF8               	movlw	-8
 23832  0147CA  50E3               	movf	plusw1,w,c
 23833  0147CC  0F57               	addlw	87
 23834  0147CE  D003               	goto	L47
 23835  0147D0                     l13343:
 23836                           
 23837                           ;stkvar	_c @ sp[(-20)+12]
 23838  0147D0  0EF8               	movlw	-8
 23839  0147D2  50E3               	movf	plusw1,w,c
 23840  0147D4  0F30               	addlw	48
 23841  0147D6                     L47:
 23842  0147D6  6E41               	movwf	(btemp+10)^0,c
 23843  0147D8  0EF9               	movlw	-7
 23844  0147DA  006F FF8C  F042    	movff	plusw1,btemp+11
 23845  0147E0  0E00               	movlw	0
 23846  0147E2  2242               	addwfc	(btemp+11)^0,f,c
 23847                           
 23848                           ;stkvar	_c @ sp[(-20)+12]
 23849  0147E4  0EF8               	movlw	-8
 23850  0147E6  0060  F107  FFE3   	movff	btemp+10,plusw1
 23851  0147EC  0EF9               	movlw	-7
 23852  0147EE  0060  F10B  FFE3   	movff	btemp+11,plusw1
 23853  0147F4  0EBF               	movlw	191
 23854  0147F6  6E41               	movwf	(btemp+10)^0,c
 23855  0147F8  0EFF               	movlw	255
 23856  0147FA  6E42               	movwf	(btemp+11)^0,c
 23857                           
 23858                           ;stkvar	_x @ sp[(-20)+-11]
 23859  0147FC  0EE1               	movlw	-31
 23860  0147FE  50E3               	movf	plusw1,w,c
 23861  014800  6E3F               	movwf	(btemp+8)^0,c
 23862  014802  6A40               	clrf	(btemp+9)^0,c
 23863  014804  5041               	movf	(btemp+10)^0,w,c
 23864  014806  263F               	addwf	(btemp+8)^0,f,c
 23865  014808  5042               	movf	(btemp+11)^0,w,c
 23866  01480A  2240               	addwfc	(btemp+9)^0,f,c
 23867  01480C  5040               	movf	(btemp+9)^0,w,c
 23868  01480E  E106               	bnz	u9570
 23869  014810  0E1A               	movlw	26
 23870  014812  5C3F               	subwf	(btemp+8)^0,w,c
 23871  014814  B0D8               	btfsc	status,0,c
 23872  014816  D002               	goto	u9570
 23873  014818  0E01               	movlw	1
 23874  01481A  D001               	goto	u9580
 23875  01481C                     u9570:
 23876  01481C  0E00               	movlw	0
 23877  01481E                     u9580:
 23878  01481E  6E41               	movwf	(btemp+10)^0,c
 23879  014820  6A42               	clrf	(btemp+11)^0,c
 23880                           
 23881                           ;stkvar	_xtoa$5066 @ sp[(-20)+2]
 23882  014822  0EEE               	movlw	-18
 23883  014824  0060  F107  FFE3   	movff	btemp+10,plusw1
 23884  01482A  0EEF               	movlw	-17
 23885  01482C  0060  F10B  FFE3   	movff	btemp+11,plusw1
 23886                           
 23887                           ;stkvar	_xtoa$5066 @ sp[(-20)+2]
 23888  014832  0EEE               	movlw	-18
 23889  014834  006F FF8C  F037    	movff	plusw1,btemp
 23890  01483A  0EEF               	movlw	-17
 23891  01483C  50E3               	movf	plusw1,w,c
 23892  01483E  1037               	iorwf	btemp^0,w,c
 23893  014840  B4D8               	btfsc	status,2,c
 23894  014842  D041               	goto	l13359
 23895  014844  0E9F               	movlw	159
 23896  014846  6E41               	movwf	(btemp+10)^0,c
 23897  014848  0EFF               	movlw	255
 23898  01484A  6E42               	movwf	(btemp+11)^0,c
 23899                           
 23900                           ;stkvar	_c @ sp[(-20)+12]
 23901  01484C  0EF8               	movlw	-8
 23902  01484E  006F FF8C  F03F    	movff	plusw1,btemp+8
 23903  014854  0EF9               	movlw	-7
 23904  014856  006F FF8C  F040    	movff	plusw1,btemp+9
 23905  01485C  0E20               	movlw	32
 23906  01485E  123F               	iorwf	(btemp+8)^0,f,c
 23907  014860  0E00               	movlw	0
 23908  014862  1240               	iorwf	(btemp+9)^0,f,c
 23909  014864  5041               	movf	(btemp+10)^0,w,c
 23910  014866  263F               	addwf	(btemp+8)^0,f,c
 23911  014868  5042               	movf	(btemp+11)^0,w,c
 23912  01486A  2240               	addwfc	(btemp+9)^0,f,c
 23913  01486C  5040               	movf	(btemp+9)^0,w,c
 23914  01486E  E106               	bnz	u9600
 23915  014870  0E1A               	movlw	26
 23916  014872  5C3F               	subwf	(btemp+8)^0,w,c
 23917  014874  B0D8               	btfsc	status,0,c
 23918  014876  D002               	goto	u9600
 23919  014878  0E01               	movlw	1
 23920  01487A  D001               	goto	u9610
 23921  01487C                     u9600:
 23922  01487C  0E00               	movlw	0
 23923  01487E                     u9610:
 23924  01487E  6E41               	movwf	(btemp+10)^0,c
 23925  014880  6A42               	clrf	(btemp+11)^0,c
 23926                           
 23927                           ;stkvar	_xtoa$5067 @ sp[(-20)+0]
 23928  014882  0EEC               	movlw	-20
 23929  014884  0060  F107  FFE3   	movff	btemp+10,plusw1
 23930  01488A  0EED               	movlw	-19
 23931  01488C  0060  F10B  FFE3   	movff	btemp+11,plusw1
 23932                           
 23933                           ;stkvar	_xtoa$5067 @ sp[(-20)+0]
 23934  014892  0EEC               	movlw	-20
 23935  014894  006F FF8C  F037    	movff	plusw1,btemp
 23936  01489A  0EED               	movlw	-19
 23937  01489C  50E3               	movf	plusw1,w,c
 23938  01489E  1037               	iorwf	btemp^0,w,c
 23939  0148A0  B4D8               	btfsc	status,2,c
 23940  0148A2  D011               	goto	l13359
 23941                           
 23942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 23943                           ;stkvar	_c @ sp[(-20)+12]
 23944  0148A4  0EF8               	movlw	-8
 23945  0148A6  006F FF8F FFE6     	movff	plusw1,postinc1
 23946  0148AC  006F FF8F FFE6     	movff	plusw1,postinc1
 23947  0148B2  ECD5  F0C3         	call	_toupper	;wreg free
 23948                           
 23949                           ;stkvar	_c @ sp[(-20)+12]
 23950  0148B6  0EF8               	movlw	-8
 23951  0148B8  0060  F0DF  FFE3   	movff	btemp,plusw1
 23952  0148BE  0EF9               	movlw	-7
 23953  0148C0  0060  F0E3  FFE3   	movff	btemp+1,plusw1
 23954  0148C6                     l13359:
 23955                           
 23956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 23957                           ;stkvar	_c @ sp[(-20)+12]
 23958                           ;stkvar	_i @ sp[(-20)+14]
 23959  0148C6  0EFA               	movlw	-6
 23960  0148C8  006F FF8C  F042    	movff	plusw1,btemp+11
 23961  0148CE  5042               	movf	(btemp+11)^0,w,c
 23962  0148D0  0FAD               	addlw	low _dbuf
 23963  0148D2  6ED9               	movwf	fsr2l,c
 23964  0148D4  6ADA               	clrf	fsr2h,c
 23965  0148D6  0EF8               	movlw	-8
 23966  0148D8  006F FF8F FFDF     	movff	plusw1,indf2
 23967                           
 23968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 23969                           ;stkvar	_p @ sp[(-20)+18]
 23970  0148DE  50E1               	movf	fsr1l,w,c
 23971  0148E0  0FFE               	addlw	-2
 23972  0148E2  6ED9               	movwf	fsr2l,c
 23973  0148E4  50E2               	movf	fsr1h,w,c
 23974  0148E6  6EDA               	movwf	fsr2h,c
 23975  0148E8  0EFF               	movlw	255
 23976  0148EA  22DA               	addwfc	fsr2h,f,c
 23977  0148EC  06DE               	decf	postinc2,f,c
 23978  0148EE  0E00               	movlw	0
 23979  0148F0  5ADD               	subwfb	postdec2,f,c
 23980                           
 23981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 23982                           ;stkvar	_w @ sp[(-20)+16]
 23983  0148F2  50E1               	movf	fsr1l,w,c
 23984  0148F4  0FFC               	addlw	-4
 23985  0148F6  6ED9               	movwf	fsr2l,c
 23986  0148F8  50E2               	movf	fsr1h,w,c
 23987  0148FA  6EDA               	movwf	fsr2h,c
 23988  0148FC  0EFF               	movlw	255
 23989  0148FE  22DA               	addwfc	fsr2h,f,c
 23990  014900  06DE               	decf	postinc2,f,c
 23991  014902  0E00               	movlw	0
 23992  014904  5ADD               	subwfb	postdec2,f,c
 23993                           
 23994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 23995  014906  0E04               	movlw	4
 23996  014908  6E42               	movwf	(btemp+11)^0,c
 23997                           
 23998                           ;stkvar	_n @ sp[(-20)+4]
 23999  01490A  50E1               	movf	fsr1l,w,c
 24000  01490C  0FF0               	addlw	-16
 24001  01490E  6ED9               	movwf	fsr2l,c
 24002  014910  50E2               	movf	fsr1h,w,c
 24003  014912  6EDA               	movwf	fsr2h,c
 24004  014914  0EFF               	movlw	255
 24005  014916  22DA               	addwfc	fsr2h,f,c
 24006  014918  2842               	incf	(btemp+11)^0,w,c
 24007  01491A  52DE               	movf	postinc2,f,c
 24008  01491C  D00F               	goto	u9630
 24009  01491E                     u9635:
 24010  01491E  52DE               	movf	postinc2,f,c
 24011  014920  52DE               	movf	postinc2,f,c
 24012  014922  52DE               	movf	postinc2,f,c
 24013  014924  52DE               	movf	postinc2,f,c
 24014  014926  52DE               	movf	postinc2,f,c
 24015  014928  52DE               	movf	postinc2,f,c
 24016  01492A  90D8               	bcf	status,0,c
 24017  01492C  32DD               	rrcf	postdec2,f,c
 24018  01492E  32DD               	rrcf	postdec2,f,c
 24019  014930  32DD               	rrcf	postdec2,f,c
 24020  014932  32DD               	rrcf	postdec2,f,c
 24021  014934  32DD               	rrcf	postdec2,f,c
 24022  014936  32DD               	rrcf	postdec2,f,c
 24023  014938  32DD               	rrcf	postdec2,f,c
 24024  01493A  32DE               	rrcf	postinc2,f,c
 24025  01493C                     u9630:
 24026  01493C  2EE8               	decfsz	wreg,f,c
 24027  01493E  D7EF               	goto	u9635
 24028  014940                     l13367:
 24029                           
 24030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 24031                           ;stkvar	_i @ sp[(-20)+14]
 24032  014940  0EFB               	movlw	-5
 24033  014942  BEE3               	btfsc	plusw1,7,c
 24034  014944  D03A               	goto	u9680
 24035  014946  0EFB               	movlw	-5
 24036  014948  50E3               	movf	plusw1,w,c
 24037  01494A  E108               	bnz	u9640
 24038  01494C  0EFA               	movlw	-6
 24039  01494E  006F FF8C  F037    	movff	plusw1,btemp
 24040  014954  0E02               	movlw	2
 24041  014956  5E37               	subwf	btemp^0,f,c
 24042  014958  A0D8               	btfss	status,0,c
 24043  01495A  D02F               	goto	u9680
 24044  01495C                     u9640:
 24045                           
 24046                           ;stkvar	_n @ sp[(-20)+4]
 24047  01495C  0EF0               	movlw	-16
 24048  01495E  50E3               	movf	plusw1,w,c
 24049  014960  E115               	bnz	u9651
 24050  014962  0EF1               	movlw	-15
 24051  014964  50E3               	movf	plusw1,w,c
 24052  014966  E112               	bnz	u9651
 24053  014968  0EF2               	movlw	-14
 24054  01496A  50E3               	movf	plusw1,w,c
 24055  01496C  E10F               	bnz	u9651
 24056  01496E  0EF3               	movlw	-13
 24057  014970  50E3               	movf	plusw1,w,c
 24058  014972  E10C               	bnz	u9651
 24059  014974  0EF4               	movlw	-12
 24060  014976  50E3               	movf	plusw1,w,c
 24061  014978  E109               	bnz	u9651
 24062  01497A  0EF5               	movlw	-11
 24063  01497C  50E3               	movf	plusw1,w,c
 24064  01497E  E106               	bnz	u9651
 24065  014980  0EF6               	movlw	-10
 24066  014982  50E3               	movf	plusw1,w,c
 24067  014984  E103               	bnz	u9651
 24068  014986  0EF7               	movlw	-9
 24069  014988  50E3               	movf	plusw1,w,c
 24070  01498A  A4D8               	btfss	status,2,c
 24071  01498C                     u9651:
 24072  01498C  D6F1               	goto	l13335
 24073                           
 24074                           ;stkvar	_p @ sp[(-20)+18]
 24075  01498E  0EFF               	movlw	-1
 24076  014990  BEE3               	btfsc	plusw1,7,c
 24077  014992  D007               	goto	u9660
 24078  014994  0EFF               	movlw	-1
 24079  014996  50E3               	movf	plusw1,w,c
 24080  014998  E103               	bnz	u9661
 24081  01499A  0EFE               	movlw	-2
 24082  01499C  04E3               	decf	plusw1,w,c
 24083  01499E  B0D8               	btfsc	status,0,c
 24084  0149A0                     u9661:
 24085  0149A0  D6E7               	goto	l13335
 24086  0149A2                     u9660:
 24087                           
 24088                           ;stkvar	_w @ sp[(-20)+16]
 24089  0149A2  0EFD               	movlw	-3
 24090  0149A4  BEE3               	btfsc	plusw1,7,c
 24091  0149A6  D009               	goto	u9680
 24092  0149A8  0EFD               	movlw	-3
 24093  0149AA  50E3               	movf	plusw1,w,c
 24094  0149AC  E104               	bnz	u9670
 24095  0149AE  0EFC               	movlw	-4
 24096  0149B0  04E3               	decf	plusw1,w,c
 24097  0149B2  A0D8               	btfss	status,0,c
 24098  0149B4  D002               	goto	u9680
 24099  0149B6                     u9670:
 24100  0149B6  B213               	btfsc	_flags^0,1,c
 24101  0149B8  D6DB               	goto	l13335
 24102  0149BA                     u9680:
 24103                           
 24104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 24105  0149BA  A813               	btfss	_flags^0,4,c
 24106  0149BC  D02A               	goto	l13383
 24107                           
 24108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 24109                           ;stkvar	_i @ sp[(-20)+14]
 24110  0149BE  50E1               	movf	fsr1l,w,c
 24111  0149C0  0FFA               	addlw	-6
 24112  0149C2  6ED9               	movwf	fsr2l,c
 24113  0149C4  50E2               	movf	fsr1h,w,c
 24114  0149C6  6EDA               	movwf	fsr2h,c
 24115  0149C8  0EFF               	movlw	255
 24116  0149CA  22DA               	addwfc	fsr2h,f,c
 24117  0149CC  06DE               	decf	postinc2,f,c
 24118  0149CE  0E00               	movlw	0
 24119  0149D0  5ADD               	subwfb	postdec2,f,c
 24120                           
 24121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 24122                           ;stkvar	_x @ sp[(-20)+-11]
 24123                           ;stkvar	_i @ sp[(-20)+14]
 24124  0149D2  0EFA               	movlw	-6
 24125  0149D4  006F FF8C  F042    	movff	plusw1,btemp+11
 24126  0149DA  5042               	movf	(btemp+11)^0,w,c
 24127  0149DC  0FAD               	addlw	low _dbuf
 24128  0149DE  6ED9               	movwf	fsr2l,c
 24129  0149E0  6ADA               	clrf	fsr2h,c
 24130  0149E2  0EE1               	movlw	-31
 24131  0149E4  006F FF8F FFDF     	movff	plusw1,indf2
 24132                           
 24133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 24134                           ;stkvar	_i @ sp[(-20)+14]
 24135  0149EA  50E1               	movf	fsr1l,w,c
 24136  0149EC  0FFA               	addlw	-6
 24137  0149EE  6ED9               	movwf	fsr2l,c
 24138  0149F0  50E2               	movf	fsr1h,w,c
 24139  0149F2  6EDA               	movwf	fsr2h,c
 24140  0149F4  0EFF               	movlw	255
 24141  0149F6  22DA               	addwfc	fsr2h,f,c
 24142  0149F8  06DE               	decf	postinc2,f,c
 24143  0149FA  0E00               	movlw	0
 24144  0149FC  5ADD               	subwfb	postdec2,f,c
 24145                           
 24146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 24147                           ;stkvar	_i @ sp[(-20)+14]
 24148  0149FE  0EFA               	movlw	-6
 24149  014A00  006F FF8C  F042    	movff	plusw1,btemp+11
 24150  014A06  5042               	movf	(btemp+11)^0,w,c
 24151  014A08  0FAD               	addlw	low _dbuf
 24152  014A0A  6ED9               	movwf	fsr2l,c
 24153  014A0C  6ADA               	clrf	fsr2h,c
 24154  014A0E  0E30               	movlw	48
 24155  014A10  6EDF               	movwf	indf2,c
 24156  014A12                     l13383:
 24157                           
 24158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 24159                           ;stkvar	_w @ sp[(-20)+16]
 24160  014A12  0EFC               	movlw	-4
 24161  014A14  006F FF8F FFE6     	movff	plusw1,postinc1
 24162  014A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 24163                           
 24164                           ;stkvar	_i @ sp[(-22)+14]
 24165  014A20  0EF8               	movlw	-8
 24166  014A22  006F FF8C  F042    	movff	plusw1,btemp+11
 24167  014A28  5042               	movf	(btemp+11)^0,w,c
 24168  014A2A  0FAD               	addlw	low _dbuf
 24169  014A2C  6EE6               	movwf	postinc1,c
 24170                           
 24171                           ;stkvar	_fp @ sp[(-23)+-2]
 24172  014A2E  0EE7               	movlw	-25
 24173  014A30  006F FF8F FFE6     	movff	plusw1,postinc1
 24174  014A36  006F FF8F FFE6     	movff	plusw1,postinc1
 24175  014A3C  EC1A  F0BF         	call	_pad	;wreg free
 24176                           
 24177                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 24178  014A40  0EE1               	movlw	225
 24179  014A42  26E1               	addwf	fsr1l,f,c
 24180  014A44  0EFF               	movlw	255
 24181  014A46  22E2               	addwfc	fsr1h,f,c
 24182  014A48  0012               	return		;funcret
 24183  014A4A                     __end_of_xtoa:
 24184                           	opt callstack 0
 24185                           
 24186 ;; *************** function _toupper *****************
 24187 ;; Defined at:
 24188 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 24189 ;; Parameters:    Size  Location     Type
 24190 ;;  c               2  [STACK] int 
 24191 ;; Auto vars:     Size  Location     Type
 24192 ;;		None
 24193 ;; Return value:  Size  Location     Type
 24194 ;;                  2  [STACK] int 
 24195 ;; Registers used:
 24196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 24197 ;; Tracked objects:
 24198 ;;		On entry : 0/0
 24199 ;;		On exit  : 0/0
 24200 ;;		Unchanged: 0/0
 24201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24206 ;;Total ram usage:        0 bytes
 24207 ;; Hardware stack levels used:    1
 24208 ;; Hardware stack levels required when called:    4
 24209 ;; This function calls:
 24210 ;;		_islower
 24211 ;; This function is called by:
 24212 ;;		_xtoa
 24213 ;; This function uses a reentrant model
 24214 ;;
 24215                           
 24216                           	psect	text94
 24217  0187AA                     __ptext94:
 24218                           	opt callstack 0
 24219  0187AA                     _toupper:
 24220                           	opt callstack 0
 24221                           
 24222                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24223  0187AA  52E6               	movf	postinc1,f,c
 24224  0187AC  52E6               	movf	postinc1,f,c
 24225                           
 24226                           ;stkvar	_c @ sp[(-2)+-2]
 24227                           
 24228                           ;incstack = 0
 24229  0187AE  0EFC               	movlw	-4
 24230  0187B0  50E3               	movf	plusw1,w,c
 24231  0187B2  0F9F               	addlw	159
 24232  0187B4  6E41               	movwf	(btemp+10)^0,c
 24233  0187B6  0EFD               	movlw	-3
 24234  0187B8  006F FF8C  F042    	movff	plusw1,btemp+11
 24235  0187BE  0EFF               	movlw	255
 24236  0187C0  2242               	addwfc	(btemp+11)^0,f,c
 24237  0187C2  5042               	movf	(btemp+11)^0,w,c
 24238  0187C4  E106               	bnz	u4690
 24239  0187C6  0E1A               	movlw	26
 24240  0187C8  5C41               	subwf	(btemp+10)^0,w,c
 24241  0187CA  B0D8               	btfsc	status,0,c
 24242  0187CC  D002               	goto	u4690
 24243  0187CE  0E01               	movlw	1
 24244  0187D0  D001               	goto	u4700
 24245  0187D2                     u4690:
 24246  0187D2  0E00               	movlw	0
 24247  0187D4                     u4700:
 24248  0187D4  6E41               	movwf	(btemp+10)^0,c
 24249  0187D6  6A42               	clrf	(btemp+11)^0,c
 24250                           
 24251                           ;stkvar	_toupper$5801 @ sp[(-2)+0]
 24252  0187D8  0EFE               	movlw	-2
 24253  0187DA  0060  F107  FFE3   	movff	btemp+10,plusw1
 24254  0187E0  0EFF               	movlw	-1
 24255  0187E2  0060  F10B  FFE3   	movff	btemp+11,plusw1
 24256                           
 24257                           ;stkvar	_toupper$5801 @ sp[(-2)+0]
 24258  0187E8  0EFE               	movlw	-2
 24259  0187EA  006F FF8C  F037    	movff	plusw1,btemp
 24260  0187F0  0EFF               	movlw	-1
 24261  0187F2  50E3               	movf	plusw1,w,c
 24262  0187F4  1037               	iorwf	btemp^0,w,c
 24263  0187F6  B4D8               	btfsc	status,2,c
 24264  0187F8  D00D               	goto	l8271
 24265                           
 24266                           ;stkvar	_c @ sp[(-2)+-2]
 24267  0187FA  0EFC               	movlw	-4
 24268  0187FC  006F FF8C  F037    	movff	plusw1,btemp
 24269  018802  0EFD               	movlw	-3
 24270  018804  006F FF8C  F038    	movff	plusw1,btemp+1
 24271  01880A  0E5F               	movlw	95
 24272  01880C  1637               	andwf	btemp^0,f,c
 24273  01880E  0E00               	movlw	0
 24274  018810  1638               	andwf	(btemp+1)^0,f,c
 24275  018812  D008               	goto	l3338
 24276  018814                     l8271:
 24277                           
 24278                           ;stkvar	_c @ sp[(-2)+-2]
 24279  018814  0EFC               	movlw	-4
 24280  018816  006F FF8C  F037    	movff	plusw1,btemp
 24281  01881C  0EFD               	movlw	-3
 24282  01881E  006F FF8C  F038    	movff	plusw1,btemp+1
 24283  018824                     l3338:
 24284                           
 24285                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24286  018824  52E5               	movf	postdec1,f,c
 24287  018826  52E5               	movf	postdec1,f,c
 24288  018828  52E5               	movf	postdec1,f,c
 24289  01882A  52E5               	movf	postdec1,f,c
 24290  01882C  0012               	return		;funcret
 24291  01882E                     __end_of_toupper:
 24292                           	opt callstack 0
 24293                           
 24294 ;; *************** function _islower *****************
 24295 ;; Defined at:
 24296 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 24297 ;; Parameters:    Size  Location     Type
 24298 ;;  c               2  [STACK] int 
 24299 ;; Auto vars:     Size  Location     Type
 24300 ;;		None
 24301 ;; Return value:  Size  Location     Type
 24302 ;;                  2  [STACK] int 
 24303 ;; Registers used:
 24304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24305 ;; Tracked objects:
 24306 ;;		On entry : 0/0
 24307 ;;		On exit  : 0/0
 24308 ;;		Unchanged: 0/0
 24309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24314 ;;Total ram usage:        0 bytes
 24315 ;; Hardware stack levels used:    1
 24316 ;; Hardware stack levels required when called:    3
 24317 ;; This function calls:
 24318 ;;		Nothing
 24319 ;; This function is called by:
 24320 ;;		_toupper
 24321 ;; This function uses a reentrant model
 24322 ;;
 24323                           
 24324                           	psect	text95
 24325  019334                     __ptext95:
 24326                           	opt callstack 0
 24327  019334                     _islower:
 24328                           	opt callstack 19
 24329                           
 24330                           ;stkvar	_c @ sp[(0)+-2]
 24331                           
 24332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24333                           ;incstack = 0
 24334  019334  0EFE               	movlw	-2
 24335  019336  50E3               	movf	plusw1,w,c
 24336  019338  0F9F               	addlw	159
 24337  01933A  6E41               	movwf	(btemp+10)^0,c
 24338  01933C  0EFF               	movlw	-1
 24339  01933E  006F FF8C  F042    	movff	plusw1,btemp+11
 24340  019344  0EFF               	movlw	255
 24341  019346  2242               	addwfc	(btemp+11)^0,f,c
 24342  019348  5042               	movf	(btemp+11)^0,w,c
 24343  01934A  E106               	bnz	u4580
 24344  01934C  0E1A               	movlw	26
 24345  01934E  5C41               	subwf	(btemp+10)^0,w,c
 24346  019350  B0D8               	btfsc	status,0,c
 24347  019352  D002               	goto	u4580
 24348  019354  0E01               	movlw	1
 24349  019356  D001               	goto	u4590
 24350  019358                     u4580:
 24351  019358  0E00               	movlw	0
 24352  01935A                     u4590:
 24353  01935A  6E37               	movwf	btemp^0,c
 24354  01935C  6A38               	clrf	(btemp+1)^0,c
 24355                           
 24356                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24357  01935E  52E5               	movf	postdec1,f,c
 24358  019360  52E5               	movf	postdec1,f,c
 24359  019362  0012               	return		;funcret
 24360  019364                     __end_of_islower:
 24361                           	opt callstack 0
 24362                           
 24363 ;; *************** function _isupper *****************
 24364 ;; Defined at:
 24365 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 24366 ;; Parameters:    Size  Location     Type
 24367 ;;  c               2  [STACK] int 
 24368 ;; Auto vars:     Size  Location     Type
 24369 ;;		None
 24370 ;; Return value:  Size  Location     Type
 24371 ;;                  2  [STACK] int 
 24372 ;; Registers used:
 24373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24374 ;; Tracked objects:
 24375 ;;		On entry : 0/0
 24376 ;;		On exit  : 0/0
 24377 ;;		Unchanged: 0/0
 24378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24383 ;;Total ram usage:        0 bytes
 24384 ;; Hardware stack levels used:    1
 24385 ;; Hardware stack levels required when called:    3
 24386 ;; This function calls:
 24387 ;;		Nothing
 24388 ;; This function is called by:
 24389 ;;		_xtoa
 24390 ;; This function uses a reentrant model
 24391 ;;
 24392                           
 24393                           	psect	text96
 24394  019364                     __ptext96:
 24395                           	opt callstack 0
 24396  019364                     _isupper:
 24397                           	opt callstack 20
 24398                           
 24399                           ;stkvar	_c @ sp[(0)+-2]
 24400                           
 24401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24402                           ;incstack = 0
 24403  019364  0EFE               	movlw	-2
 24404  019366  50E3               	movf	plusw1,w,c
 24405  019368  0FBF               	addlw	191
 24406  01936A  6E41               	movwf	(btemp+10)^0,c
 24407  01936C  0EFF               	movlw	-1
 24408  01936E  006F FF8C  F042    	movff	plusw1,btemp+11
 24409  019374  0EFF               	movlw	255
 24410  019376  2242               	addwfc	(btemp+11)^0,f,c
 24411  019378  5042               	movf	(btemp+11)^0,w,c
 24412  01937A  E106               	bnz	u4650
 24413  01937C  0E1A               	movlw	26
 24414  01937E  5C41               	subwf	(btemp+10)^0,w,c
 24415  019380  B0D8               	btfsc	status,0,c
 24416  019382  D002               	goto	u4650
 24417  019384  0E01               	movlw	1
 24418  019386  D001               	goto	u4660
 24419  019388                     u4650:
 24420  019388  0E00               	movlw	0
 24421  01938A                     u4660:
 24422  01938A  6E37               	movwf	btemp^0,c
 24423  01938C  6A38               	clrf	(btemp+1)^0,c
 24424                           
 24425                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24426  01938E  52E5               	movf	postdec1,f,c
 24427  019390  52E5               	movf	postdec1,f,c
 24428  019392  0012               	return		;funcret
 24429  019394                     __end_of_isupper:
 24430                           	opt callstack 0
 24431                           
 24432 ;; *************** function _isalpha *****************
 24433 ;; Defined at:
 24434 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 24435 ;; Parameters:    Size  Location     Type
 24436 ;;  c               2  [STACK] int 
 24437 ;; Auto vars:     Size  Location     Type
 24438 ;;		None
 24439 ;; Return value:  Size  Location     Type
 24440 ;;                  2  [STACK] int 
 24441 ;; Registers used:
 24442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 24443 ;; Tracked objects:
 24444 ;;		On entry : 0/0
 24445 ;;		On exit  : 0/0
 24446 ;;		Unchanged: 0/0
 24447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24452 ;;Total ram usage:        0 bytes
 24453 ;; Hardware stack levels used:    1
 24454 ;; Hardware stack levels required when called:    3
 24455 ;; This function calls:
 24456 ;;		Nothing
 24457 ;; This function is called by:
 24458 ;;		_xtoa
 24459 ;; This function uses a reentrant model
 24460 ;;
 24461                           
 24462                           	psect	text97
 24463  018FEA                     __ptext97:
 24464                           	opt callstack 0
 24465  018FEA                     _isalpha:
 24466                           	opt callstack 20
 24467                           
 24468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24469                           ;incstack = 0
 24470  018FEA  0E9F               	movlw	159
 24471  018FEC  6E41               	movwf	(btemp+10)^0,c
 24472  018FEE  0EFF               	movlw	255
 24473  018FF0  6E42               	movwf	(btemp+11)^0,c
 24474                           
 24475                           ;stkvar	_c @ sp[(0)+-2]
 24476  018FF2  0EFE               	movlw	-2
 24477  018FF4  006F FF8C  F03F    	movff	plusw1,btemp+8
 24478  018FFA  0EFF               	movlw	-1
 24479  018FFC  006F FF8C  F040    	movff	plusw1,btemp+9
 24480  019002  0E20               	movlw	32
 24481  019004  123F               	iorwf	(btemp+8)^0,f,c
 24482  019006  0E00               	movlw	0
 24483  019008  1240               	iorwf	(btemp+9)^0,f,c
 24484  01900A  5041               	movf	(btemp+10)^0,w,c
 24485  01900C  263F               	addwf	(btemp+8)^0,f,c
 24486  01900E  5042               	movf	(btemp+11)^0,w,c
 24487  019010  2240               	addwfc	(btemp+9)^0,f,c
 24488  019012  5040               	movf	(btemp+9)^0,w,c
 24489  019014  E106               	bnz	u4670
 24490  019016  0E1A               	movlw	26
 24491  019018  5C3F               	subwf	(btemp+8)^0,w,c
 24492  01901A  B0D8               	btfsc	status,0,c
 24493  01901C  D002               	goto	u4670
 24494  01901E  0E01               	movlw	1
 24495  019020  D001               	goto	u4680
 24496  019022                     u4670:
 24497  019022  0E00               	movlw	0
 24498  019024                     u4680:
 24499  019024  6E37               	movwf	btemp^0,c
 24500  019026  6A38               	clrf	(btemp+1)^0,c
 24501                           
 24502                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24503  019028  52E5               	movf	postdec1,f,c
 24504  01902A  52E5               	movf	postdec1,f,c
 24505  01902C  0012               	return		;funcret
 24506  01902E                     __end_of_isalpha:
 24507                           	opt callstack 0
 24508                           
 24509 ;; *************** function _utoa *****************
 24510 ;; Defined at:
 24511 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24512 ;; Parameters:    Size  Location     Type
 24513 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24514 ;;		 -> f(6), NULL(0), 
 24515 ;;  d               8  [STACK] unsigned long long 
 24516 ;; Auto vars:     Size  Location     Type
 24517 ;;  n               8  [STACK] unsigned long long 
 24518 ;;  i               2  [STACK] int 
 24519 ;;  w               2  [STACK] int 
 24520 ;;  p               2  [STACK] int 
 24521 ;; Return value:  Size  Location     Type
 24522 ;;                  2  [STACK] int 
 24523 ;; Registers used:
 24524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 24525 ;; Tracked objects:
 24526 ;;		On entry : 0/3B
 24527 ;;		On exit  : 0/0
 24528 ;;		Unchanged: 0/0
 24529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24534 ;;Total ram usage:        0 bytes
 24535 ;; Hardware stack levels used:    1
 24536 ;; Hardware stack levels required when called:    8
 24537 ;; This function calls:
 24538 ;;		___lodiv
 24539 ;;		___lomod
 24540 ;;		_pad
 24541 ;; This function is called by:
 24542 ;;		_vfpfcnvrt
 24543 ;; This function uses a reentrant model
 24544 ;;
 24545                           
 24546                           	psect	text98
 24547  014DA4                     __ptext98:
 24548                           	opt callstack 0
 24549  014DA4                     _utoa:
 24550                           	opt callstack 0
 24551                           
 24552                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 24553  014DA4  0E0E               	movlw	14
 24554  014DA6  26E1               	addwf	fsr1l,f,c
 24555  014DA8  0E00               	movlw	0
 24556  014DAA  22E2               	addwfc	fsr1h,f,c
 24557                           
 24558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 24559                           
 24560                           ;incstack = 0
 24561  014DAC  AE12               	btfss	(_prec+1)^0,7,c
 24562                           
 24563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 24564  014DAE  9213               	bcf	_flags^0,1,c
 24565                           
 24566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 24567  014DB0  BE12               	btfsc	(_prec+1)^0,7,c
 24568  014DB2  D005               	goto	u9450
 24569  014DB4  5012               	movf	(_prec+1)^0,w,c
 24570  014DB6  E110               	bnz	l13283
 24571  014DB8  0411               	decf	_prec^0,w,c
 24572  014DBA  B0D8               	btfsc	status,0,c
 24573  014DBC  D00D               	goto	l13283
 24574  014DBE                     u9450:
 24575  014DBE  0E01               	movlw	1
 24576  014DC0  6E41               	movwf	(btemp+10)^0,c
 24577  014DC2  0E00               	movlw	0
 24578  014DC4  6E42               	movwf	(btemp+11)^0,c
 24579                           
 24580                           ;stkvar	_p @ sp[(-14)+12]
 24581  014DC6  0EFE               	movlw	-2
 24582  014DC8  0060  F107  FFE3   	movff	btemp+10,plusw1
 24583  014DCE  0EFF               	movlw	-1
 24584  014DD0  0060  F10B  FFE3   	movff	btemp+11,plusw1
 24585  014DD6  D008               	goto	l2394
 24586  014DD8                     l13283:
 24587                           
 24588                           ;stkvar	_p @ sp[(-14)+12]
 24589  014DD8  0EFE               	movlw	-2
 24590  014DDA  0060  F047  FFE3   	movff	_prec,plusw1
 24591  014DE0  0EFF               	movlw	-1
 24592  014DE2  0060  F04B  FFE3   	movff	_prec+1,plusw1
 24593  014DE8                     l2394:
 24594                           
 24595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 24596                           ;stkvar	_w @ sp[(-14)+10]
 24597  014DE8  0EFC               	movlw	-4
 24598  014DEA  0060  F03F  FFE3   	movff	_width,plusw1
 24599  014DF0  0EFD               	movlw	-3
 24600  014DF2  0060  F043  FFE3   	movff	_width+1,plusw1
 24601                           
 24602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 24603                           ;stkvar	_d @ sp[(-14)+-10]
 24604  014DF8  0EE8               	movlw	232
 24605  014DFA  24E1               	addwf	fsr1l,w,c
 24606  014DFC  6ED9               	movwf	fsr2l,c
 24607  014DFE  0EFF               	movlw	255
 24608  014E00  20E2               	addwfc	fsr1h,w,c
 24609  014E02  6EDA               	movwf	fsr2h,c
 24610                           
 24611                           ;stkvar	_n @ sp[(-14)+0]
 24612  014E04  0E08               	movlw	8
 24613  014E06  6E37               	movwf	btemp^0,c
 24614  014E08  0EF2               	movlw	-14
 24615  014E0A                     us946999:
 24616  014E0A  006F FF7B FFE3     	movff	postinc2,plusw1
 24617  014E10  28E8               	incf	wreg,w,c
 24618  014E12  2E37               	decfsz	btemp^0,f,c
 24619  014E14  D7FA               	bra	us946999
 24620                           
 24621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 24622  014E16  0E1F               	movlw	31
 24623  014E18  6E41               	movwf	(btemp+10)^0,c
 24624  014E1A  0E00               	movlw	0
 24625  014E1C  6E42               	movwf	(btemp+11)^0,c
 24626                           
 24627                           ;stkvar	_i @ sp[(-14)+8]
 24628  014E1E  0EFA               	movlw	-6
 24629  014E20  0060  F107  FFE3   	movff	btemp+10,plusw1
 24630  014E26  0EFB               	movlw	-5
 24631  014E28  0060  F10B  FFE3   	movff	btemp+11,plusw1
 24632                           
 24633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 24634  014E2E  0100               	movlb	0	; () banked
 24635  014E30  6BCC               	clrf	(_dbuf+31)& (0+255),b
 24636                           
 24637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 24638  014E32  D0F5               	goto	l13301
 24639  014E34                     l13291:
 24640                           
 24641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 24642                           ;stkvar	_i @ sp[(-14)+8]
 24643  014E34  50E1               	movf	fsr1l,w,c
 24644  014E36  0FFA               	addlw	-6
 24645  014E38  6ED9               	movwf	fsr2l,c
 24646  014E3A  50E2               	movf	fsr1h,w,c
 24647  014E3C  6EDA               	movwf	fsr2h,c
 24648  014E3E  0EFF               	movlw	255
 24649  014E40  22DA               	addwfc	fsr2h,f,c
 24650  014E42  06DE               	decf	postinc2,f,c
 24651  014E44  0E00               	movlw	0
 24652  014E46  5ADD               	subwfb	postdec2,f,c
 24653                           
 24654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 24655  014E48  0E0A               	movlw	10
 24656  014E4A  6EE6               	movwf	postinc1,c
 24657  014E4C  0E00               	movlw	0
 24658  014E4E  6EE6               	movwf	postinc1,c
 24659  014E50  0E00               	movlw	0
 24660  014E52  6EE6               	movwf	postinc1,c
 24661  014E54  0E00               	movlw	0
 24662  014E56  6EE6               	movwf	postinc1,c
 24663  014E58  0E00               	movlw	0
 24664  014E5A  6EE6               	movwf	postinc1,c
 24665  014E5C  0E00               	movlw	0
 24666  014E5E  6EE6               	movwf	postinc1,c
 24667  014E60  0E00               	movlw	0
 24668  014E62  6EE6               	movwf	postinc1,c
 24669  014E64  0E00               	movlw	0
 24670  014E66  6EE6               	movwf	postinc1,c
 24671                           
 24672                           ;stkvar	_n @ sp[(-22)+0]
 24673  014E68  50E1               	movf	fsr1l,w,c
 24674  014E6A  0FEA               	addlw	-22
 24675  014E6C  6ED9               	movwf	fsr2l,c
 24676  014E6E  50E2               	movf	fsr1h,w,c
 24677  014E70  6EDA               	movwf	fsr2h,c
 24678  014E72  0EFF               	movlw	255
 24679  014E74  22DA               	addwfc	fsr2h,f,c
 24680  014E76  006F FF7B FFE6     	movff	postinc2,postinc1
 24681  014E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 24682  014E82  006F FF7B FFE6     	movff	postinc2,postinc1
 24683  014E88  006F FF7B FFE6     	movff	postinc2,postinc1
 24684  014E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 24685  014E94  006F FF7B FFE6     	movff	postinc2,postinc1
 24686  014E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 24687  014EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 24688  014EA6  ECB3  F0BB         	call	___lomod	;wreg free
 24689  014EAA  52E5               	movf	postdec1,f,c
 24690  014EAC  006F FF9C  F04E    	movff	indf1,btemp+23
 24691  014EB2  52E5               	movf	postdec1,f,c
 24692  014EB4  006F FF9C  F04D    	movff	indf1,btemp+22
 24693  014EBA  52E5               	movf	postdec1,f,c
 24694  014EBC  006F FF9C  F04C    	movff	indf1,btemp+21
 24695  014EC2  52E5               	movf	postdec1,f,c
 24696  014EC4  006F FF9C  F04B    	movff	indf1,btemp+20
 24697  014ECA  52E5               	movf	postdec1,f,c
 24698  014ECC  006F FF9C  F04A    	movff	indf1,btemp+19
 24699  014ED2  52E5               	movf	postdec1,f,c
 24700  014ED4  006F FF9C  F049    	movff	indf1,btemp+18
 24701  014EDA  52E5               	movf	postdec1,f,c
 24702  014EDC  006F FF9C  F048    	movff	indf1,btemp+17
 24703  014EE2  52E5               	movf	postdec1,f,c
 24704  014EE4  006F FF9C  F047    	movff	indf1,btemp+16
 24705  014EEA  0EF8               	movlw	248
 24706  014EEC  26E1               	addwf	fsr1l,f,c
 24707  014EEE  0EFF               	movlw	255
 24708  014EF0  22E2               	addwfc	fsr1h,f,c
 24709  014EF2  0E30               	movlw	48
 24710  014EF4  2647               	addwf	(btemp+16)^0,f,c
 24711                           
 24712                           ;stkvar	_i @ sp[(-14)+8]
 24713  014EF6  0EFA               	movlw	-6
 24714  014EF8  006F FF8C  F042    	movff	plusw1,btemp+11
 24715  014EFE  5042               	movf	(btemp+11)^0,w,c
 24716  014F00  0FAD               	addlw	low _dbuf
 24717  014F02  6ED9               	movwf	fsr2l,c
 24718  014F04  6ADA               	clrf	fsr2h,c
 24719  014F06  0060  F11F  FFDF   	movff	btemp+16,indf2
 24720                           
 24721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 24722                           ;stkvar	_p @ sp[(-14)+12]
 24723  014F0C  50E1               	movf	fsr1l,w,c
 24724  014F0E  0FFE               	addlw	-2
 24725  014F10  6ED9               	movwf	fsr2l,c
 24726  014F12  50E2               	movf	fsr1h,w,c
 24727  014F14  6EDA               	movwf	fsr2h,c
 24728  014F16  0EFF               	movlw	255
 24729  014F18  22DA               	addwfc	fsr2h,f,c
 24730  014F1A  06DE               	decf	postinc2,f,c
 24731  014F1C  0E00               	movlw	0
 24732  014F1E  5ADD               	subwfb	postdec2,f,c
 24733                           
 24734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 24735                           ;stkvar	_w @ sp[(-14)+10]
 24736  014F20  50E1               	movf	fsr1l,w,c
 24737  014F22  0FFC               	addlw	-4
 24738  014F24  6ED9               	movwf	fsr2l,c
 24739  014F26  50E2               	movf	fsr1h,w,c
 24740  014F28  6EDA               	movwf	fsr2h,c
 24741  014F2A  0EFF               	movlw	255
 24742  014F2C  22DA               	addwfc	fsr2h,f,c
 24743  014F2E  06DE               	decf	postinc2,f,c
 24744  014F30  0E00               	movlw	0
 24745  014F32  5ADD               	subwfb	postdec2,f,c
 24746                           
 24747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 24748  014F34  0E0A               	movlw	10
 24749  014F36  6EE6               	movwf	postinc1,c
 24750  014F38  0E00               	movlw	0
 24751  014F3A  6EE6               	movwf	postinc1,c
 24752  014F3C  0E00               	movlw	0
 24753  014F3E  6EE6               	movwf	postinc1,c
 24754  014F40  0E00               	movlw	0
 24755  014F42  6EE6               	movwf	postinc1,c
 24756  014F44  0E00               	movlw	0
 24757  014F46  6EE6               	movwf	postinc1,c
 24758  014F48  0E00               	movlw	0
 24759  014F4A  6EE6               	movwf	postinc1,c
 24760  014F4C  0E00               	movlw	0
 24761  014F4E  6EE6               	movwf	postinc1,c
 24762  014F50  0E00               	movlw	0
 24763  014F52  6EE6               	movwf	postinc1,c
 24764                           
 24765                           ;stkvar	_n @ sp[(-22)+0]
 24766  014F54  50E1               	movf	fsr1l,w,c
 24767  014F56  0FEA               	addlw	-22
 24768  014F58  6ED9               	movwf	fsr2l,c
 24769  014F5A  50E2               	movf	fsr1h,w,c
 24770  014F5C  6EDA               	movwf	fsr2h,c
 24771  014F5E  0EFF               	movlw	255
 24772  014F60  22DA               	addwfc	fsr2h,f,c
 24773  014F62  006F FF7B FFE6     	movff	postinc2,postinc1
 24774  014F68  006F FF7B FFE6     	movff	postinc2,postinc1
 24775  014F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 24776  014F74  006F FF7B FFE6     	movff	postinc2,postinc1
 24777  014F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 24778  014F80  006F FF7B FFE6     	movff	postinc2,postinc1
 24779  014F86  006F FF7B FFE6     	movff	postinc2,postinc1
 24780  014F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 24781  014F92  ECEF  F0B8         	call	___lodiv	;wreg free
 24782  014F96  52E5               	movf	postdec1,f,c
 24783  014F98  006F FF9C  F04E    	movff	indf1,btemp+23
 24784  014F9E  52E5               	movf	postdec1,f,c
 24785  014FA0  006F FF9C  F04D    	movff	indf1,btemp+22
 24786  014FA6  52E5               	movf	postdec1,f,c
 24787  014FA8  006F FF9C  F04C    	movff	indf1,btemp+21
 24788  014FAE  52E5               	movf	postdec1,f,c
 24789  014FB0  006F FF9C  F04B    	movff	indf1,btemp+20
 24790  014FB6  52E5               	movf	postdec1,f,c
 24791  014FB8  006F FF9C  F04A    	movff	indf1,btemp+19
 24792  014FBE  52E5               	movf	postdec1,f,c
 24793  014FC0  006F FF9C  F049    	movff	indf1,btemp+18
 24794  014FC6  52E5               	movf	postdec1,f,c
 24795  014FC8  006F FF9C  F048    	movff	indf1,btemp+17
 24796  014FCE  52E5               	movf	postdec1,f,c
 24797  014FD0  006F FF9C  F047    	movff	indf1,btemp+16
 24798  014FD6  0EF8               	movlw	248
 24799  014FD8  26E1               	addwf	fsr1l,f,c
 24800  014FDA  0EFF               	movlw	255
 24801  014FDC  22E2               	addwfc	fsr1h,f,c
 24802                           
 24803                           ;stkvar	_n @ sp[(-14)+0]
 24804  014FDE  0EF2               	movlw	-14
 24805  014FE0  0060  F11F  FFE3   	movff	btemp+16,plusw1
 24806  014FE6  0EF3               	movlw	-13
 24807  014FE8  0060  F123  FFE3   	movff	btemp+17,plusw1
 24808  014FEE  0EF4               	movlw	-12
 24809  014FF0  0060  F127  FFE3   	movff	btemp+18,plusw1
 24810  014FF6  0EF5               	movlw	-11
 24811  014FF8  0060  F12B  FFE3   	movff	btemp+19,plusw1
 24812  014FFE  0EF6               	movlw	-10
 24813  015000  0060  F12F  FFE3   	movff	btemp+20,plusw1
 24814  015006  0EF7               	movlw	-9
 24815  015008  0060  F133  FFE3   	movff	btemp+21,plusw1
 24816  01500E  0EF8               	movlw	-8
 24817  015010  0060  F137  FFE3   	movff	btemp+22,plusw1
 24818  015016  0EF9               	movlw	-7
 24819  015018  0060  F13B  FFE3   	movff	btemp+23,plusw1
 24820  01501E                     l13301:
 24821                           
 24822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 24823                           ;stkvar	_i @ sp[(-14)+8]
 24824  01501E  0EFA               	movlw	-6
 24825  015020  006F FF8C  F037    	movff	plusw1,btemp
 24826  015026  0EFB               	movlw	-5
 24827  015028  50E3               	movf	plusw1,w,c
 24828  01502A  1037               	iorwf	btemp^0,w,c
 24829  01502C  B4D8               	btfsc	status,2,c
 24830  01502E  D02F               	goto	u9510
 24831                           
 24832                           ;stkvar	_n @ sp[(-14)+0]
 24833  015030  0EF2               	movlw	-14
 24834  015032  50E3               	movf	plusw1,w,c
 24835  015034  E115               	bnz	u9481
 24836  015036  0EF3               	movlw	-13
 24837  015038  50E3               	movf	plusw1,w,c
 24838  01503A  E112               	bnz	u9481
 24839  01503C  0EF4               	movlw	-12
 24840  01503E  50E3               	movf	plusw1,w,c
 24841  015040  E10F               	bnz	u9481
 24842  015042  0EF5               	movlw	-11
 24843  015044  50E3               	movf	plusw1,w,c
 24844  015046  E10C               	bnz	u9481
 24845  015048  0EF6               	movlw	-10
 24846  01504A  50E3               	movf	plusw1,w,c
 24847  01504C  E109               	bnz	u9481
 24848  01504E  0EF7               	movlw	-9
 24849  015050  50E3               	movf	plusw1,w,c
 24850  015052  E106               	bnz	u9481
 24851  015054  0EF8               	movlw	-8
 24852  015056  50E3               	movf	plusw1,w,c
 24853  015058  E103               	bnz	u9481
 24854  01505A  0EF9               	movlw	-7
 24855  01505C  50E3               	movf	plusw1,w,c
 24856  01505E  A4D8               	btfss	status,2,c
 24857  015060                     u9481:
 24858  015060  D6E9               	goto	l13291
 24859                           
 24860                           ;stkvar	_p @ sp[(-14)+12]
 24861  015062  0EFF               	movlw	-1
 24862  015064  BEE3               	btfsc	plusw1,7,c
 24863  015066  D007               	goto	u9490
 24864  015068  0EFF               	movlw	-1
 24865  01506A  50E3               	movf	plusw1,w,c
 24866  01506C  E103               	bnz	u9491
 24867  01506E  0EFE               	movlw	-2
 24868  015070  04E3               	decf	plusw1,w,c
 24869  015072  B0D8               	btfsc	status,0,c
 24870  015074                     u9491:
 24871  015074  D6DF               	goto	l13291
 24872  015076                     u9490:
 24873                           
 24874                           ;stkvar	_w @ sp[(-14)+10]
 24875  015076  0EFD               	movlw	-3
 24876  015078  BEE3               	btfsc	plusw1,7,c
 24877  01507A  D009               	goto	u9510
 24878  01507C  0EFD               	movlw	-3
 24879  01507E  50E3               	movf	plusw1,w,c
 24880  015080  E104               	bnz	u9500
 24881  015082  0EFC               	movlw	-4
 24882  015084  04E3               	decf	plusw1,w,c
 24883  015086  A0D8               	btfss	status,0,c
 24884  015088  D002               	goto	u9510
 24885  01508A                     u9500:
 24886  01508A  B213               	btfsc	_flags^0,1,c
 24887  01508C  D6D3               	goto	l13291
 24888  01508E                     u9510:
 24889                           
 24890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 24891                           ;stkvar	_w @ sp[(-14)+10]
 24892  01508E  0EFC               	movlw	-4
 24893  015090  006F FF8F FFE6     	movff	plusw1,postinc1
 24894  015096  006F FF8F FFE6     	movff	plusw1,postinc1
 24895                           
 24896                           ;stkvar	_i @ sp[(-16)+8]
 24897  01509C  0EF8               	movlw	-8
 24898  01509E  006F FF8C  F042    	movff	plusw1,btemp+11
 24899  0150A4  5042               	movf	(btemp+11)^0,w,c
 24900  0150A6  0FAD               	addlw	low _dbuf
 24901  0150A8  6EE6               	movwf	postinc1,c
 24902                           
 24903                           ;stkvar	_fp @ sp[(-17)+-2]
 24904  0150AA  0EED               	movlw	-19
 24905  0150AC  006F FF8F FFE6     	movff	plusw1,postinc1
 24906  0150B2  006F FF8F FFE6     	movff	plusw1,postinc1
 24907  0150B8  EC1A  F0BF         	call	_pad	;wreg free
 24908                           
 24909                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 24910  0150BC  0EE8               	movlw	232
 24911  0150BE  26E1               	addwf	fsr1l,f,c
 24912  0150C0  0EFF               	movlw	255
 24913  0150C2  22E2               	addwfc	fsr1h,f,c
 24914  0150C4  0012               	return		;funcret
 24915  0150C6                     __end_of_utoa:
 24916                           	opt callstack 0
 24917                           
 24918 ;; *************** function ___lomod *****************
 24919 ;; Defined at:
 24920 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 24921 ;; Parameters:    Size  Location     Type
 24922 ;;  dividend        8  [STACK] unsigned long long 
 24923 ;;  divisor         8  [STACK] unsigned long long 
 24924 ;; Auto vars:     Size  Location     Type
 24925 ;;  counter         1  [STACK] unsigned char 
 24926 ;; Return value:  Size  Location     Type
 24927 ;;                  8  [STACK] unsigned long long 
 24928 ;; Registers used:
 24929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24930 ;; Tracked objects:
 24931 ;;		On entry : 0/0
 24932 ;;		On exit  : 0/0
 24933 ;;		Unchanged: 0/0
 24934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24939 ;;Total ram usage:        0 bytes
 24940 ;; Hardware stack levels used:    1
 24941 ;; Hardware stack levels required when called:    3
 24942 ;; This function calls:
 24943 ;;		Nothing
 24944 ;; This function is called by:
 24945 ;;		_utoa
 24946 ;; This function uses a reentrant model
 24947 ;;
 24948                           
 24949                           	psect	text99
 24950  017766                     __ptext99:
 24951                           	opt callstack 0
 24952  017766                     ___lomod:
 24953                           	opt callstack 0
 24954                           
 24955                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 24956  017766  52E6               	movf	postinc1,f,c
 24957                           
 24958                           ;stkvar	_divisor @ sp[(-1)+-16]
 24959                           
 24960                           ;incstack = 0
 24961  017768  0EEF               	movlw	-17
 24962  01776A  50E3               	movf	plusw1,w,c
 24963  01776C  E116               	bnz	u5030
 24964  01776E  0EF0               	movlw	-16
 24965  017770  50E3               	movf	plusw1,w,c
 24966  017772  E113               	bnz	u5030
 24967  017774  0EF1               	movlw	-15
 24968  017776  50E3               	movf	plusw1,w,c
 24969  017778  E110               	bnz	u5030
 24970  01777A  0EF2               	movlw	-14
 24971  01777C  50E3               	movf	plusw1,w,c
 24972  01777E  E10D               	bnz	u5030
 24973  017780  0EF3               	movlw	-13
 24974  017782  50E3               	movf	plusw1,w,c
 24975  017784  E10A               	bnz	u5030
 24976  017786  0EF4               	movlw	-12
 24977  017788  50E3               	movf	plusw1,w,c
 24978  01778A  E107               	bnz	u5030
 24979  01778C  0EF5               	movlw	-11
 24980  01778E  50E3               	movf	plusw1,w,c
 24981  017790  E104               	bnz	u5030
 24982  017792  0EF6               	movlw	-10
 24983  017794  50E3               	movf	plusw1,w,c
 24984  017796  B4D8               	btfsc	status,2,c
 24985  017798  D075               	goto	u5060
 24986  01779A                     u5030:
 24987                           
 24988                           ;stkvar	_counter @ sp[(-1)+0]
 24989  01779A  0EFF               	movlw	-1
 24990  01779C  6AE3               	clrf	plusw1,c
 24991  01779E  D012               	goto	L48
 24992  0177A0                     l8387:
 24993                           
 24994                           ;stkvar	_divisor @ sp[(-1)+-16]
 24995  0177A0  90D8               	bcf	status,0,c
 24996  0177A2  0EEF               	movlw	-17
 24997  0177A4  36E3               	rlcf	plusw1,f,c
 24998  0177A6  0EF0               	movlw	-16
 24999  0177A8  36E3               	rlcf	plusw1,f,c
 25000  0177AA  0EF1               	movlw	-15
 25001  0177AC  36E3               	rlcf	plusw1,f,c
 25002  0177AE  0EF2               	movlw	-14
 25003  0177B0  36E3               	rlcf	plusw1,f,c
 25004  0177B2  0EF3               	movlw	-13
 25005  0177B4  36E3               	rlcf	plusw1,f,c
 25006  0177B6  0EF4               	movlw	-12
 25007  0177B8  36E3               	rlcf	plusw1,f,c
 25008  0177BA  0EF5               	movlw	-11
 25009  0177BC  36E3               	rlcf	plusw1,f,c
 25010  0177BE  0EF6               	movlw	-10
 25011  0177C0  36E3               	rlcf	plusw1,f,c
 25012                           
 25013                           ;stkvar	_counter @ sp[(-1)+0]
 25014  0177C2  0EFF               	movlw	-1
 25015  0177C4                     L48:
 25016  0177C4  2AE3               	incf	plusw1,f,c
 25017                           
 25018                           ;stkvar	_divisor @ sp[(-1)+-16]
 25019  0177C6  0EF6               	movlw	-10
 25020  0177C8  AEE3               	btfss	plusw1,7,c
 25021  0177CA  D7EA               	goto	l8387
 25022  0177CC                     u5040:
 25023                           
 25024                           ;stkvar	_divisor @ sp[(-1)+-16]
 25025                           ;stkvar	_dividend @ sp[(-1)+-8]
 25026  0177CC  50E1               	movf	fsr1l,w,c
 25027  0177CE  0FF7               	addlw	-9
 25028  0177D0  6ED9               	movwf	fsr2l,c
 25029  0177D2  50E2               	movf	fsr1h,w,c
 25030  0177D4  6EDA               	movwf	fsr2h,c
 25031  0177D6  0EFF               	movlw	255
 25032  0177D8  22DA               	addwfc	fsr2h,f,c
 25033  0177DA  0EEF               	movlw	-17
 25034  0177DC  50E3               	movf	plusw1,w,c
 25035  0177DE  5CDE               	subwf	postinc2,w,c
 25036  0177E0  0EF0               	movlw	-16
 25037  0177E2  50E3               	movf	plusw1,w,c
 25038  0177E4  58DE               	subwfb	postinc2,w,c
 25039  0177E6  0EF1               	movlw	-15
 25040  0177E8  50E3               	movf	plusw1,w,c
 25041  0177EA  58DE               	subwfb	postinc2,w,c
 25042  0177EC  0EF2               	movlw	-14
 25043  0177EE  50E3               	movf	plusw1,w,c
 25044  0177F0  58DE               	subwfb	postinc2,w,c
 25045  0177F2  0EF3               	movlw	-13
 25046  0177F4  50E3               	movf	plusw1,w,c
 25047  0177F6  58DE               	subwfb	postinc2,w,c
 25048  0177F8  0EF4               	movlw	-12
 25049  0177FA  50E3               	movf	plusw1,w,c
 25050  0177FC  58DE               	subwfb	postinc2,w,c
 25051  0177FE  0EF5               	movlw	-11
 25052  017800  50E3               	movf	plusw1,w,c
 25053  017802  58DE               	subwfb	postinc2,w,c
 25054  017804  0EF6               	movlw	-10
 25055  017806  50E3               	movf	plusw1,w,c
 25056  017808  58DE               	subwfb	postinc2,w,c
 25057  01780A  A0D8               	btfss	status,0,c
 25058  01780C  D01F               	goto	l8395
 25059                           
 25060                           ;stkvar	_divisor @ sp[(-1)+-16]
 25061                           ;stkvar	_dividend @ sp[(-1)+-8]
 25062  01780E  50E1               	movf	fsr1l,w,c
 25063  017810  0FF7               	addlw	-9
 25064  017812  6ED9               	movwf	fsr2l,c
 25065  017814  50E2               	movf	fsr1h,w,c
 25066  017816  6EDA               	movwf	fsr2h,c
 25067  017818  0EFF               	movlw	255
 25068  01781A  22DA               	addwfc	fsr2h,f,c
 25069  01781C  0EEF               	movlw	-17
 25070  01781E  50E3               	movf	plusw1,w,c
 25071  017820  5EDE               	subwf	postinc2,f,c
 25072  017822  0EF0               	movlw	-16
 25073  017824  50E3               	movf	plusw1,w,c
 25074  017826  5ADE               	subwfb	postinc2,f,c
 25075  017828  0EF1               	movlw	-15
 25076  01782A  50E3               	movf	plusw1,w,c
 25077  01782C  5ADE               	subwfb	postinc2,f,c
 25078  01782E  0EF2               	movlw	-14
 25079  017830  50E3               	movf	plusw1,w,c
 25080  017832  5ADE               	subwfb	postinc2,f,c
 25081  017834  0EF3               	movlw	-13
 25082  017836  50E3               	movf	plusw1,w,c
 25083  017838  5ADE               	subwfb	postinc2,f,c
 25084  01783A  0EF4               	movlw	-12
 25085  01783C  50E3               	movf	plusw1,w,c
 25086  01783E  5ADE               	subwfb	postinc2,f,c
 25087  017840  0EF5               	movlw	-11
 25088  017842  50E3               	movf	plusw1,w,c
 25089  017844  5ADE               	subwfb	postinc2,f,c
 25090  017846  0EF6               	movlw	-10
 25091  017848  50E3               	movf	plusw1,w,c
 25092  01784A  5ADE               	subwfb	postinc2,f,c
 25093  01784C                     l8395:
 25094                           
 25095                           ;stkvar	_divisor @ sp[(-1)+-16]
 25096  01784C  90D8               	bcf	status,0,c
 25097  01784E  0EF6               	movlw	-10
 25098  017850  32E3               	rrcf	plusw1,f,c
 25099  017852  0EF5               	movlw	-11
 25100  017854  32E3               	rrcf	plusw1,f,c
 25101  017856  0EF4               	movlw	-12
 25102  017858  32E3               	rrcf	plusw1,f,c
 25103  01785A  0EF3               	movlw	-13
 25104  01785C  32E3               	rrcf	plusw1,f,c
 25105  01785E  0EF2               	movlw	-14
 25106  017860  32E3               	rrcf	plusw1,f,c
 25107  017862  0EF1               	movlw	-15
 25108  017864  32E3               	rrcf	plusw1,f,c
 25109  017866  0EF0               	movlw	-16
 25110  017868  32E3               	rrcf	plusw1,f,c
 25111  01786A  0EEF               	movlw	-17
 25112  01786C  32E3               	rrcf	plusw1,f,c
 25113                           
 25114                           ;stkvar	_counter @ sp[(-1)+0]
 25115  01786E  0EFF               	movlw	-1
 25116  017870  50E3               	movf	plusw1,w,c
 25117  017872  6E37               	movwf	btemp^0,c
 25118  017874  0E01               	movlw	1
 25119  017876  5E37               	subwf	btemp^0,f,c
 25120  017878  0EFF               	movlw	-1
 25121  01787A  0060  F0DF  FFE3   	movff	btemp,plusw1
 25122  017880  A4D8               	btfss	status,2,c
 25123  017882  D7A4               	goto	u5040
 25124  017884                     u5060:
 25125                           
 25126                           ;stkvar	_dividend @ sp[(-1)+-8]
 25127  017884  0EF7               	movlw	247
 25128  017886  24E1               	addwf	fsr1l,w,c
 25129  017888  6ED9               	movwf	fsr2l,c
 25130  01788A  0EFF               	movlw	255
 25131  01788C  20E2               	addwfc	fsr1h,w,c
 25132  01788E  6EDA               	movwf	fsr2h,c
 25133                           
 25134                           ;stkvar	?___lomod @ sp[(-1)+-8]
 25135  017890  0E08               	movlw	8
 25136  017892  6E37               	movwf	btemp^0,c
 25137  017894  0EF7               	movlw	-9
 25138  017896                     us507999:
 25139  017896  006F FF7B FFE3     	movff	postinc2,plusw1
 25140  01789C  28E8               	incf	wreg,w,c
 25141  01789E  2E37               	decfsz	btemp^0,f,c
 25142  0178A0  D7FA               	bra	us507999
 25143                           
 25144                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 25145  0178A2  52E5               	movf	postdec1,f,c
 25146  0178A4  0012               	return		;funcret
 25147  0178A6                     __end_of___lomod:
 25148                           	opt callstack 0
 25149                           
 25150 ;; *************** function ___lodiv *****************
 25151 ;; Defined at:
 25152 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 25153 ;; Parameters:    Size  Location     Type
 25154 ;;  dividend        8  [STACK] unsigned long long 
 25155 ;;  divisor         8  [STACK] unsigned long long 
 25156 ;; Auto vars:     Size  Location     Type
 25157 ;;  quotient        8  [STACK] unsigned long long 
 25158 ;;  counter         1  [STACK] unsigned char 
 25159 ;; Return value:  Size  Location     Type
 25160 ;;                  8  [STACK] unsigned long long 
 25161 ;; Registers used:
 25162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25163 ;; Tracked objects:
 25164 ;;		On entry : 0/0
 25165 ;;		On exit  : 0/0
 25166 ;;		Unchanged: 0/0
 25167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25172 ;;Total ram usage:        0 bytes
 25173 ;; Hardware stack levels used:    1
 25174 ;; Hardware stack levels required when called:    3
 25175 ;; This function calls:
 25176 ;;		Nothing
 25177 ;; This function is called by:
 25178 ;;		_utoa
 25179 ;; This function uses a reentrant model
 25180 ;;
 25181                           
 25182                           	psect	text100
 25183  0171DE                     __ptext100:
 25184                           	opt callstack 0
 25185  0171DE                     ___lodiv:
 25186                           	opt callstack 0
 25187                           
 25188                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 25189  0171DE  0E09               	movlw	9
 25190  0171E0  26E1               	addwf	fsr1l,f,c
 25191  0171E2  0E00               	movlw	0
 25192  0171E4  22E2               	addwfc	fsr1h,f,c
 25193                           
 25194                           ;stkvar	_quotient @ sp[(-9)+0]
 25195                           
 25196                           ;incstack = 0
 25197  0171E6  0E07               	movlw	7
 25198  0171E8  6E37               	movwf	btemp^0,c
 25199  0171EA  0EF7               	movlw	-9
 25200  0171EC                     u4971:
 25201  0171EC  6AE3               	clrf	plusw1,c
 25202  0171EE  2AE8               	incf	wreg,f,c
 25203  0171F0  0637               	decf	btemp^0,f,c
 25204  0171F2  E2FC               	bc	u4971
 25205                           
 25206                           ;stkvar	_divisor @ sp[(-9)+-16]
 25207  0171F4  0EE7               	movlw	-25
 25208  0171F6  50E3               	movf	plusw1,w,c
 25209  0171F8  E116               	bnz	u4980
 25210  0171FA  0EE8               	movlw	-24
 25211  0171FC  50E3               	movf	plusw1,w,c
 25212  0171FE  E113               	bnz	u4980
 25213  017200  0EE9               	movlw	-23
 25214  017202  50E3               	movf	plusw1,w,c
 25215  017204  E110               	bnz	u4980
 25216  017206  0EEA               	movlw	-22
 25217  017208  50E3               	movf	plusw1,w,c
 25218  01720A  E10D               	bnz	u4980
 25219  01720C  0EEB               	movlw	-21
 25220  01720E  50E3               	movf	plusw1,w,c
 25221  017210  E10A               	bnz	u4980
 25222  017212  0EEC               	movlw	-20
 25223  017214  50E3               	movf	plusw1,w,c
 25224  017216  E107               	bnz	u4980
 25225  017218  0EED               	movlw	-19
 25226  01721A  50E3               	movf	plusw1,w,c
 25227  01721C  E104               	bnz	u4980
 25228  01721E  0EEE               	movlw	-18
 25229  017220  50E3               	movf	plusw1,w,c
 25230  017222  B4D8               	btfsc	status,2,c
 25231  017224  D088               	goto	u5010
 25232  017226                     u4980:
 25233                           
 25234                           ;stkvar	_counter @ sp[(-9)+8]
 25235  017226  0EFF               	movlw	-1
 25236  017228  6AE3               	clrf	plusw1,c
 25237  01722A  D012               	goto	L49
 25238  01722C                     l8363:
 25239                           
 25240                           ;stkvar	_divisor @ sp[(-9)+-16]
 25241  01722C  90D8               	bcf	status,0,c
 25242  01722E  0EE7               	movlw	-25
 25243  017230  36E3               	rlcf	plusw1,f,c
 25244  017232  0EE8               	movlw	-24
 25245  017234  36E3               	rlcf	plusw1,f,c
 25246  017236  0EE9               	movlw	-23
 25247  017238  36E3               	rlcf	plusw1,f,c
 25248  01723A  0EEA               	movlw	-22
 25249  01723C  36E3               	rlcf	plusw1,f,c
 25250  01723E  0EEB               	movlw	-21
 25251  017240  36E3               	rlcf	plusw1,f,c
 25252  017242  0EEC               	movlw	-20
 25253  017244  36E3               	rlcf	plusw1,f,c
 25254  017246  0EED               	movlw	-19
 25255  017248  36E3               	rlcf	plusw1,f,c
 25256  01724A  0EEE               	movlw	-18
 25257  01724C  36E3               	rlcf	plusw1,f,c
 25258                           
 25259                           ;stkvar	_counter @ sp[(-9)+8]
 25260  01724E  0EFF               	movlw	-1
 25261  017250                     L49:
 25262  017250  2AE3               	incf	plusw1,f,c
 25263                           
 25264                           ;stkvar	_divisor @ sp[(-9)+-16]
 25265  017252  0EEE               	movlw	-18
 25266  017254  AEE3               	btfss	plusw1,7,c
 25267  017256  D7EA               	goto	l8363
 25268  017258                     u4990:
 25269                           
 25270                           ;stkvar	_quotient @ sp[(-9)+0]
 25271  017258  90D8               	bcf	status,0,c
 25272  01725A  0EF7               	movlw	-9
 25273  01725C  36E3               	rlcf	plusw1,f,c
 25274  01725E  0EF8               	movlw	-8
 25275  017260  36E3               	rlcf	plusw1,f,c
 25276  017262  0EF9               	movlw	-7
 25277  017264  36E3               	rlcf	plusw1,f,c
 25278  017266  0EFA               	movlw	-6
 25279  017268  36E3               	rlcf	plusw1,f,c
 25280  01726A  0EFB               	movlw	-5
 25281  01726C  36E3               	rlcf	plusw1,f,c
 25282  01726E  0EFC               	movlw	-4
 25283  017270  36E3               	rlcf	plusw1,f,c
 25284  017272  0EFD               	movlw	-3
 25285  017274  36E3               	rlcf	plusw1,f,c
 25286  017276  0EFE               	movlw	-2
 25287  017278  36E3               	rlcf	plusw1,f,c
 25288                           
 25289                           ;stkvar	_divisor @ sp[(-9)+-16]
 25290                           ;stkvar	_dividend @ sp[(-9)+-8]
 25291  01727A  50E1               	movf	fsr1l,w,c
 25292  01727C  0FEF               	addlw	-17
 25293  01727E  6ED9               	movwf	fsr2l,c
 25294  017280  50E2               	movf	fsr1h,w,c
 25295  017282  6EDA               	movwf	fsr2h,c
 25296  017284  0EFF               	movlw	255
 25297  017286  22DA               	addwfc	fsr2h,f,c
 25298  017288  0EE7               	movlw	-25
 25299  01728A  50E3               	movf	plusw1,w,c
 25300  01728C  5CDE               	subwf	postinc2,w,c
 25301  01728E  0EE8               	movlw	-24
 25302  017290  50E3               	movf	plusw1,w,c
 25303  017292  58DE               	subwfb	postinc2,w,c
 25304  017294  0EE9               	movlw	-23
 25305  017296  50E3               	movf	plusw1,w,c
 25306  017298  58DE               	subwfb	postinc2,w,c
 25307  01729A  0EEA               	movlw	-22
 25308  01729C  50E3               	movf	plusw1,w,c
 25309  01729E  58DE               	subwfb	postinc2,w,c
 25310  0172A0  0EEB               	movlw	-21
 25311  0172A2  50E3               	movf	plusw1,w,c
 25312  0172A4  58DE               	subwfb	postinc2,w,c
 25313  0172A6  0EEC               	movlw	-20
 25314  0172A8  50E3               	movf	plusw1,w,c
 25315  0172AA  58DE               	subwfb	postinc2,w,c
 25316  0172AC  0EED               	movlw	-19
 25317  0172AE  50E3               	movf	plusw1,w,c
 25318  0172B0  58DE               	subwfb	postinc2,w,c
 25319  0172B2  0EEE               	movlw	-18
 25320  0172B4  50E3               	movf	plusw1,w,c
 25321  0172B6  58DE               	subwfb	postinc2,w,c
 25322  0172B8  A0D8               	btfss	status,0,c
 25323  0172BA  D021               	goto	l8375
 25324                           
 25325                           ;stkvar	_divisor @ sp[(-9)+-16]
 25326                           ;stkvar	_dividend @ sp[(-9)+-8]
 25327  0172BC  50E1               	movf	fsr1l,w,c
 25328  0172BE  0FEF               	addlw	-17
 25329  0172C0  6ED9               	movwf	fsr2l,c
 25330  0172C2  50E2               	movf	fsr1h,w,c
 25331  0172C4  6EDA               	movwf	fsr2h,c
 25332  0172C6  0EFF               	movlw	255
 25333  0172C8  22DA               	addwfc	fsr2h,f,c
 25334  0172CA  0EE7               	movlw	-25
 25335  0172CC  50E3               	movf	plusw1,w,c
 25336  0172CE  5EDE               	subwf	postinc2,f,c
 25337  0172D0  0EE8               	movlw	-24
 25338  0172D2  50E3               	movf	plusw1,w,c
 25339  0172D4  5ADE               	subwfb	postinc2,f,c
 25340  0172D6  0EE9               	movlw	-23
 25341  0172D8  50E3               	movf	plusw1,w,c
 25342  0172DA  5ADE               	subwfb	postinc2,f,c
 25343  0172DC  0EEA               	movlw	-22
 25344  0172DE  50E3               	movf	plusw1,w,c
 25345  0172E0  5ADE               	subwfb	postinc2,f,c
 25346  0172E2  0EEB               	movlw	-21
 25347  0172E4  50E3               	movf	plusw1,w,c
 25348  0172E6  5ADE               	subwfb	postinc2,f,c
 25349  0172E8  0EEC               	movlw	-20
 25350  0172EA  50E3               	movf	plusw1,w,c
 25351  0172EC  5ADE               	subwfb	postinc2,f,c
 25352  0172EE  0EED               	movlw	-19
 25353  0172F0  50E3               	movf	plusw1,w,c
 25354  0172F2  5ADE               	subwfb	postinc2,f,c
 25355  0172F4  0EEE               	movlw	-18
 25356  0172F6  50E3               	movf	plusw1,w,c
 25357  0172F8  5ADE               	subwfb	postinc2,f,c
 25358                           
 25359                           ;stkvar	_quotient @ sp[(-9)+0]
 25360  0172FA  0EF7               	movlw	-9
 25361  0172FC  80E3               	bsf	plusw1,0,c
 25362  0172FE                     l8375:
 25363                           
 25364                           ;stkvar	_divisor @ sp[(-9)+-16]
 25365  0172FE  90D8               	bcf	status,0,c
 25366  017300  0EEE               	movlw	-18
 25367  017302  32E3               	rrcf	plusw1,f,c
 25368  017304  0EED               	movlw	-19
 25369  017306  32E3               	rrcf	plusw1,f,c
 25370  017308  0EEC               	movlw	-20
 25371  01730A  32E3               	rrcf	plusw1,f,c
 25372  01730C  0EEB               	movlw	-21
 25373  01730E  32E3               	rrcf	plusw1,f,c
 25374  017310  0EEA               	movlw	-22
 25375  017312  32E3               	rrcf	plusw1,f,c
 25376  017314  0EE9               	movlw	-23
 25377  017316  32E3               	rrcf	plusw1,f,c
 25378  017318  0EE8               	movlw	-24
 25379  01731A  32E3               	rrcf	plusw1,f,c
 25380  01731C  0EE7               	movlw	-25
 25381  01731E  32E3               	rrcf	plusw1,f,c
 25382                           
 25383                           ;stkvar	_counter @ sp[(-9)+8]
 25384  017320  0EFF               	movlw	-1
 25385  017322  50E3               	movf	plusw1,w,c
 25386  017324  6E37               	movwf	btemp^0,c
 25387  017326  0E01               	movlw	1
 25388  017328  5E37               	subwf	btemp^0,f,c
 25389  01732A  0EFF               	movlw	-1
 25390  01732C  0060  F0DF  FFE3   	movff	btemp,plusw1
 25391  017332  A4D8               	btfss	status,2,c
 25392  017334  D791               	goto	u4990
 25393  017336                     u5010:
 25394                           
 25395                           ;stkvar	_quotient @ sp[(-9)+0]
 25396  017336  0EF7               	movlw	247
 25397  017338  24E1               	addwf	fsr1l,w,c
 25398  01733A  6ED9               	movwf	fsr2l,c
 25399  01733C  0EFF               	movlw	255
 25400  01733E  20E2               	addwfc	fsr1h,w,c
 25401  017340  6EDA               	movwf	fsr2h,c
 25402                           
 25403                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 25404  017342  0E08               	movlw	8
 25405  017344  6E37               	movwf	btemp^0,c
 25406  017346  0EEF               	movlw	-17
 25407  017348                     us502999:
 25408  017348  006F FF7B FFE3     	movff	postinc2,plusw1
 25409  01734E  28E8               	incf	wreg,w,c
 25410  017350  2E37               	decfsz	btemp^0,f,c
 25411  017352  D7FA               	bra	us502999
 25412                           
 25413                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 25414  017354  0EF7               	movlw	247
 25415  017356  26E1               	addwf	fsr1l,f,c
 25416  017358  0EFF               	movlw	255
 25417  01735A  22E2               	addwfc	fsr1h,f,c
 25418  01735C  0012               	return		;funcret
 25419  01735E                     __end_of___lodiv:
 25420                           	opt callstack 0
 25421                           
 25422 ;; *************** function _strncmp *****************
 25423 ;; Defined at:
 25424 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 25425 ;; Parameters:    Size  Location     Type
 25426 ;;  _l              2  [STACK] PTR const unsigned char 
 25427 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 25428 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 25429 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 25430 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 25431 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 25432 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 25433 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 25434 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 25435 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 25436 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 25437 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 25438 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 25439 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 25440 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 25441 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 25442 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 25443 ;;  _r              2  [STACK] PTR const unsigned char 
 25444 ;;		 -> STR_198(3), STR_194(3), STR_189(3), STR_185(3), 
 25445 ;;		 -> STR_180(3), STR_176(3), STR_171(4), STR_167(4), 
 25446 ;;		 -> STR_162(3), STR_157(3), STR_152(3), STR_147(4), 
 25447 ;;		 -> STR_142(3), STR_137(3), STR_132(3), STR_127(4), 
 25448 ;;		 -> STR_122(3), STR_117(3), STR_112(3), STR_107(4), 
 25449 ;;		 -> STR_102(3), STR_98(3), STR_93(3), STR_89(3), 
 25450 ;;		 -> STR_84(3), STR_80(3), STR_75(4), STR_71(4), 
 25451 ;;  n               2  [STACK] unsigned int 
 25452 ;; Auto vars:     Size  Location     Type
 25453 ;;  r               2  [STACK] PTR const unsigned char 
 25454 ;;		 -> STR_198(3), STR_194(3), STR_189(3), STR_185(3), 
 25455 ;;		 -> STR_180(3), STR_176(3), STR_171(4), STR_167(4), 
 25456 ;;		 -> STR_162(3), STR_157(3), STR_152(3), STR_147(4), 
 25457 ;;		 -> STR_142(3), STR_137(3), STR_132(3), STR_127(4), 
 25458 ;;		 -> STR_122(3), STR_117(3), STR_112(3), STR_107(4), 
 25459 ;;		 -> STR_102(3), STR_98(3), STR_93(3), STR_89(3), 
 25460 ;;		 -> STR_84(3), STR_80(3), STR_75(4), STR_71(4), 
 25461 ;;  l               2  [STACK] PTR const unsigned char 
 25462 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 25463 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 25464 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 25465 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 25466 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 25467 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 25468 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 25469 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 25470 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 25471 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 25472 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 25473 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 25474 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 25475 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 25476 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 25477 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 25478 ;; Return value:  Size  Location     Type
 25479 ;;                  2  [STACK] int 
 25480 ;; Registers used:
 25481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 25482 ;; Tracked objects:
 25483 ;;		On entry : 0/3B
 25484 ;;		On exit  : 0/0
 25485 ;;		Unchanged: 0/0
 25486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25491 ;;Total ram usage:        0 bytes
 25492 ;; Hardware stack levels used:    1
 25493 ;; Hardware stack levels required when called:    3
 25494 ;; This function calls:
 25495 ;;		Nothing
 25496 ;; This function is called by:
 25497 ;;		_vfpfcnvrt
 25498 ;; This function uses a reentrant model
 25499 ;;
 25500                           
 25501                           	psect	text101
 25502  016E4E                     __ptext101:
 25503                           	opt callstack 0
 25504  016E4E                     _strncmp:
 25505                           	opt callstack 0
 25506                           
 25507                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25508  016E4E  52E6               	movf	postinc1,f,c
 25509  016E50  52E6               	movf	postinc1,f,c
 25510  016E52  52E6               	movf	postinc1,f,c
 25511  016E54  52E6               	movf	postinc1,f,c
 25512                           
 25513                           ;stkvar	__l @ sp[(-4)+-2]
 25514                           
 25515                           ;incstack = 0
 25516  016E56  0EFA               	movlw	-6
 25517  016E58  006F FF8C  F041    	movff	plusw1,btemp+10
 25518  016E5E  0EFB               	movlw	-5
 25519  016E60  006F FF8C  F042    	movff	plusw1,btemp+11
 25520                           
 25521                           ;stkvar	_l @ sp[(-4)+2]
 25522  016E66  0EFF               	movlw	-1
 25523  016E68  0060  F10B  FFE3   	movff	btemp+11,plusw1
 25524  016E6E  0EFE               	movlw	-2
 25525  016E70  0060  F107  FFE3   	movff	btemp+10,plusw1
 25526                           
 25527                           ;stkvar	__r @ sp[(-4)+-4]
 25528  016E76  0EF8               	movlw	-8
 25529  016E78  006F FF8C  F041    	movff	plusw1,btemp+10
 25530  016E7E  0EF9               	movlw	-7
 25531  016E80  006F FF8C  F042    	movff	plusw1,btemp+11
 25532                           
 25533                           ;stkvar	_r @ sp[(-4)+0]
 25534  016E86  0EFD               	movlw	-3
 25535  016E88  0060  F10B  FFE3   	movff	btemp+11,plusw1
 25536  016E8E  0EFC               	movlw	-4
 25537  016E90  0060  F107  FFE3   	movff	btemp+10,plusw1
 25538                           
 25539                           ;stkvar	_n @ sp[(-4)+-6]
 25540  016E96  0EF6               	movlw	-10
 25541  016E98  006F FF8C  F037    	movff	plusw1,btemp
 25542  016E9E  0E01               	movlw	1
 25543  016EA0  5E37               	subwf	btemp^0,f,c
 25544  016EA2  0EF6               	movlw	-10
 25545  016EA4  0060  F0DF  FFE3   	movff	btemp,plusw1
 25546  016EAA  0EF7               	movlw	-9
 25547  016EAC  006F FF8C  F037    	movff	plusw1,btemp
 25548  016EB2  0E00               	movlw	0
 25549  016EB4  5A37               	subwfb	btemp^0,f,c
 25550  016EB6  0EF7               	movlw	-9
 25551  016EB8  0060  F0DF  FFE3   	movff	btemp,plusw1
 25552  016EBE  0EF6               	movlw	-10
 25553  016EC0  28E3               	incf	plusw1,w,c
 25554  016EC2  E13F               	bnz	l8767
 25555  016EC4  0EF7               	movlw	-9
 25556  016EC6  28E3               	incf	plusw1,w,c
 25557  016EC8  A4D8               	btfss	status,2,c
 25558  016ECA  D03B               	goto	l8767
 25559  016ECC  0E00               	movlw	0
 25560  016ECE  6E37               	movwf	btemp^0,c
 25561  016ED0  0E00               	movlw	0
 25562  016ED2  6E38               	movwf	(btemp+1)^0,c
 25563  016ED4  D0B5               	goto	l3323
 25564  016ED6                     l8765:
 25565                           
 25566                           ;stkvar	_l @ sp[(-4)+2]
 25567  016ED6  0EFE               	movlw	-2
 25568  016ED8  50E3               	movf	plusw1,w,c
 25569  016EDA  0F01               	addlw	1
 25570  016EDC  6E37               	movwf	btemp^0,c
 25571  016EDE  0EFE               	movlw	-2
 25572  016EE0  0060  F0DF  FFE3   	movff	btemp,plusw1
 25573  016EE6  6A37               	clrf	btemp^0,c
 25574  016EE8  0EFF               	movlw	-1
 25575  016EEA  50E3               	movf	plusw1,w,c
 25576  016EEC  2037               	addwfc	btemp^0,w,c
 25577  016EEE  6E37               	movwf	btemp^0,c
 25578  016EF0  0EFF               	movlw	-1
 25579  016EF2  0060  F0DF  FFE3   	movff	btemp,plusw1
 25580                           
 25581                           ;stkvar	_r @ sp[(-4)+0]
 25582  016EF8  0EFC               	movlw	-4
 25583  016EFA  50E3               	movf	plusw1,w,c
 25584  016EFC  0F01               	addlw	1
 25585  016EFE  6E37               	movwf	btemp^0,c
 25586  016F00  0EFC               	movlw	-4
 25587  016F02  0060  F0DF  FFE3   	movff	btemp,plusw1
 25588  016F08  6A37               	clrf	btemp^0,c
 25589  016F0A  0EFD               	movlw	-3
 25590  016F0C  50E3               	movf	plusw1,w,c
 25591  016F0E  2037               	addwfc	btemp^0,w,c
 25592  016F10  6E37               	movwf	btemp^0,c
 25593  016F12  0EFD               	movlw	-3
 25594  016F14  0060  F0DF  FFE3   	movff	btemp,plusw1
 25595                           
 25596                           ;stkvar	_n @ sp[(-4)+-6]
 25597  016F1A  0EF6               	movlw	-10
 25598  016F1C  006F FF8C  F037    	movff	plusw1,btemp
 25599  016F22  0E01               	movlw	1
 25600  016F24  5E37               	subwf	btemp^0,f,c
 25601  016F26  0EF6               	movlw	-10
 25602  016F28  0060  F0DF  FFE3   	movff	btemp,plusw1
 25603  016F2E  0EF7               	movlw	-9
 25604  016F30  006F FF8C  F037    	movff	plusw1,btemp
 25605  016F36  0E00               	movlw	0
 25606  016F38  5A37               	subwfb	btemp^0,f,c
 25607  016F3A  0EF7               	movlw	-9
 25608  016F3C  0060  F0DF  FFE3   	movff	btemp,plusw1
 25609  016F42                     l8767:
 25610                           
 25611                           ;stkvar	_l @ sp[(-4)+2]
 25612  016F42  50E1               	movf	fsr1l,w,c
 25613  016F44  0FFE               	addlw	-2
 25614  016F46  6ED9               	movwf	fsr2l,c
 25615  016F48  50E2               	movf	fsr1h,w,c
 25616  016F4A  6EDA               	movwf	fsr2h,c
 25617  016F4C  0EFF               	movlw	255
 25618  016F4E  22DA               	addwfc	fsr2h,f,c
 25619  016F50  006F FF7B FFF6     	movff	postinc2,tblptrl
 25620  016F56  006F FF77 FFF7     	movff	postdec2,tblptrh
 25621  016F5C                     	if	0	;tblptru may be non-zero
 25622  016F5C                     	endif
 25623  016F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25624  016F5C  0E00               	movlw	low (__mediumconst shr (0+16))
 25625  016F5E  6EF8               	movwf	tblptru,c
 25626  016F60                     	endif
 25627  016F60  0008               	tblrd		*
 25628  016F62  50F5               	movf	tablat,w,c
 25629  016F64  0900               	iorlw	0
 25630  016F66  B4D8               	btfsc	status,2,c
 25631  016F68  D044               	goto	u5860
 25632                           
 25633                           ;stkvar	_r @ sp[(-4)+0]
 25634  016F6A  50E1               	movf	fsr1l,w,c
 25635  016F6C  0FFC               	addlw	-4
 25636  016F6E  6ED9               	movwf	fsr2l,c
 25637  016F70  50E2               	movf	fsr1h,w,c
 25638  016F72  6EDA               	movwf	fsr2h,c
 25639  016F74  0EFF               	movlw	255
 25640  016F76  22DA               	addwfc	fsr2h,f,c
 25641  016F78  006F FF7B FFF6     	movff	postinc2,tblptrl
 25642  016F7E  006F FF77 FFF7     	movff	postdec2,tblptrh
 25643  016F84                     	if	0	;tblptru may be non-zero
 25644  016F84                     	endif
 25645  016F84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25646  016F84  0E00               	movlw	low (__mediumconst shr (0+16))
 25647  016F86  6EF8               	movwf	tblptru,c
 25648  016F88                     	endif
 25649  016F88  0008               	tblrd		*
 25650  016F8A  50F5               	movf	tablat,w,c
 25651  016F8C  0900               	iorlw	0
 25652  016F8E  B4D8               	btfsc	status,2,c
 25653  016F90  D030               	goto	u5860
 25654                           
 25655                           ;stkvar	_n @ sp[(-4)+-6]
 25656  016F92  0EF6               	movlw	-10
 25657  016F94  006F FF8C  F037    	movff	plusw1,btemp
 25658  016F9A  0EF7               	movlw	-9
 25659  016F9C  50E3               	movf	plusw1,w,c
 25660  016F9E  1037               	iorwf	btemp^0,w,c
 25661  016FA0  B4D8               	btfsc	status,2,c
 25662  016FA2  D027               	goto	u5860
 25663                           
 25664                           ;stkvar	_l @ sp[(-4)+2]
 25665  016FA4  50E1               	movf	fsr1l,w,c
 25666  016FA6  0FFE               	addlw	-2
 25667  016FA8  6ED9               	movwf	fsr2l,c
 25668  016FAA  50E2               	movf	fsr1h,w,c
 25669  016FAC  6EDA               	movwf	fsr2h,c
 25670  016FAE  0EFF               	movlw	255
 25671  016FB0  22DA               	addwfc	fsr2h,f,c
 25672  016FB2  006F FF7B FFF6     	movff	postinc2,tblptrl
 25673  016FB8  006F FF77 FFF7     	movff	postdec2,tblptrh
 25674  016FBE                     	if	0	;tblptru may be non-zero
 25675  016FBE                     	endif
 25676  016FBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25677  016FBE  0E00               	movlw	low (__mediumconst shr (0+16))
 25678  016FC0  6EF8               	movwf	tblptru,c
 25679  016FC2                     	endif
 25680  016FC2  0008               	tblrd		*
 25681  016FC4  006F FFD4  F042    	movff	tablat,btemp+11
 25682                           
 25683                           ;stkvar	_r @ sp[(-4)+0]
 25684  016FCA  50E1               	movf	fsr1l,w,c
 25685  016FCC  0FFC               	addlw	-4
 25686  016FCE  6ED9               	movwf	fsr2l,c
 25687  016FD0  50E2               	movf	fsr1h,w,c
 25688  016FD2  6EDA               	movwf	fsr2h,c
 25689  016FD4  0EFF               	movlw	255
 25690  016FD6  22DA               	addwfc	fsr2h,f,c
 25691  016FD8  006F FF7B FFF6     	movff	postinc2,tblptrl
 25692  016FDE  006F FF77 FFF7     	movff	postdec2,tblptrh
 25693  016FE4                     	if	0	;tblptru may be non-zero
 25694  016FE4                     	endif
 25695  016FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25696  016FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 25697  016FE6  6EF8               	movwf	tblptru,c
 25698  016FE8                     	endif
 25699  016FE8  0008               	tblrd		*
 25700  016FEA  50F5               	movf	tablat,w,c
 25701  016FEC  1842               	xorwf	(btemp+11)^0,w,c
 25702  016FEE  B4D8               	btfsc	status,2,c
 25703  016FF0  D772               	goto	l8765
 25704  016FF2                     u5860:
 25705                           
 25706                           ;stkvar	_l @ sp[(-4)+2]
 25707  016FF2  50E1               	movf	fsr1l,w,c
 25708  016FF4  0FFE               	addlw	-2
 25709  016FF6  6ED9               	movwf	fsr2l,c
 25710  016FF8  50E2               	movf	fsr1h,w,c
 25711  016FFA  6EDA               	movwf	fsr2h,c
 25712  016FFC  0EFF               	movlw	255
 25713  016FFE  22DA               	addwfc	fsr2h,f,c
 25714  017000  006F FF7B FFF6     	movff	postinc2,tblptrl
 25715  017006  006F FF77 FFF7     	movff	postdec2,tblptrh
 25716  01700C                     	if	0	;tblptru may be non-zero
 25717  01700C                     	endif
 25718  01700C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25719  01700C  0E00               	movlw	low (__mediumconst shr (0+16))
 25720  01700E  6EF8               	movwf	tblptru,c
 25721  017010                     	endif
 25722  017010  0008               	tblrd		*
 25723  017012  50F5               	movf	tablat,w,c
 25724  017014  6E37               	movwf	btemp^0,c
 25725  017016  6A38               	clrf	(btemp+1)^0,c
 25726                           
 25727                           ;stkvar	_r @ sp[(-4)+0]
 25728  017018  50E1               	movf	fsr1l,w,c
 25729  01701A  0FFC               	addlw	-4
 25730  01701C  6ED9               	movwf	fsr2l,c
 25731  01701E  50E2               	movf	fsr1h,w,c
 25732  017020  6EDA               	movwf	fsr2h,c
 25733  017022  0EFF               	movlw	255
 25734  017024  22DA               	addwfc	fsr2h,f,c
 25735  017026  006F FF7B FFF6     	movff	postinc2,tblptrl
 25736  01702C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25737  017032                     	if	0	;tblptru may be non-zero
 25738  017032                     	endif
 25739  017032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25740  017032  0E00               	movlw	low (__mediumconst shr (0+16))
 25741  017034  6EF8               	movwf	tblptru,c
 25742  017036                     	endif
 25743  017036  0008               	tblrd		*
 25744  017038  50F5               	movf	tablat,w,c
 25745  01703A  5E37               	subwf	btemp^0,f,c
 25746  01703C  0E00               	movlw	0
 25747  01703E  5A38               	subwfb	(btemp+1)^0,f,c
 25748  017040                     l3323:
 25749                           
 25750                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 25751  017040  0EF6               	movlw	246
 25752  017042  26E1               	addwf	fsr1l,f,c
 25753  017044  0EFF               	movlw	255
 25754  017046  22E2               	addwfc	fsr1h,f,c
 25755  017048  0012               	return		;funcret
 25756  01704A                     __end_of_strncmp:
 25757                           	opt callstack 0
 25758                           
 25759 ;; *************** function _stoa *****************
 25760 ;; Defined at:
 25761 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25762 ;; Parameters:    Size  Location     Type
 25763 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25764 ;;		 -> f(6), NULL(0), 
 25765 ;;  s               2  [STACK] PTR unsigned char 
 25766 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 25767 ;;		 -> D.lcd(512), mconfig@D(514), STR_32(4), STR_31(4), 
 25768 ;;		 -> STR_30(4), STR_29(4), STR_7(4), STR_3(4), 
 25769 ;;		 -> T(256), V(387), 
 25770 ;; Auto vars:     Size  Location     Type
 25771 ;;  nuls            7  [STACK] unsigned char [7]
 25772 ;;  l               2  [STACK] int 
 25773 ;;  p               2  [STACK] int 
 25774 ;;  cp              2  [STACK] PTR unsigned char 
 25775 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_38(9), 
 25776 ;;		 -> STR_37(12), D.lcd(512), mconfig@D(514), STR_32(4), 
 25777 ;;		 -> STR_31(4), STR_30(4), STR_29(4), STR_7(4), 
 25778 ;;		 -> STR_3(4), T(256), V(387), 
 25779 ;;  w               2  [STACK] int 
 25780 ;;  i               2  [STACK] int 
 25781 ;; Return value:  Size  Location     Type
 25782 ;;                  2  [STACK] int 
 25783 ;; Registers used:
 25784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25785 ;; Tracked objects:
 25786 ;;		On entry : 0/3B
 25787 ;;		On exit  : 0/0
 25788 ;;		Unchanged: 0/0
 25789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25794 ;;Total ram usage:        0 bytes
 25795 ;; Hardware stack levels used:    1
 25796 ;; Hardware stack levels required when called:    6
 25797 ;; This function calls:
 25798 ;;		_fputc
 25799 ;;		_strlen
 25800 ;; This function is called by:
 25801 ;;		_vfpfcnvrt
 25802 ;; This function uses a reentrant model
 25803 ;;
 25804                           
 25805                           	psect	text102
 25806  0156AE                     __ptext102:
 25807                           	opt callstack 0
 25808  0156AE                     _stoa:
 25809                           	opt callstack 0
 25810                           
 25811                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25812  0156AE  0E11               	movlw	17
 25813  0156B0  26E1               	addwf	fsr1l,f,c
 25814  0156B2  0E00               	movlw	0
 25815  0156B4  22E2               	addwfc	fsr1h,f,c
 25816                           
 25817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 25818                           
 25819                           ;incstack = 0
 25820  0156B6  EE20  F0D5         	lfsr	2,stoa@F1152
 25821                           
 25822                           ;stkvar	_nuls @ sp[(-17)+0]
 25823  0156BA  0E07               	movlw	7
 25824  0156BC  6E37               	movwf	btemp^0,c
 25825  0156BE  0EEF               	movlw	-17
 25826  0156C0                     us934999:
 25827  0156C0  006F FF7B FFE3     	movff	postinc2,plusw1
 25828  0156C6  28E8               	incf	wreg,w,c
 25829  0156C8  2E37               	decfsz	btemp^0,f,c
 25830  0156CA  D7FA               	bra	us934999
 25831                           
 25832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 25833                           ;stkvar	_s @ sp[(-17)+-4]
 25834  0156CC  0EEB               	movlw	-21
 25835  0156CE  006F FF8C  F041    	movff	plusw1,btemp+10
 25836  0156D4  0EEC               	movlw	-20
 25837  0156D6  006F FF8C  F042    	movff	plusw1,btemp+11
 25838                           
 25839                           ;stkvar	_cp @ sp[(-17)+11]
 25840  0156DC  0EFB               	movlw	-5
 25841  0156DE  0060  F10B  FFE3   	movff	btemp+11,plusw1
 25842  0156E4  0EFA               	movlw	-6
 25843  0156E6  0060  F107  FFE3   	movff	btemp+10,plusw1
 25844                           
 25845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 25846                           ;stkvar	_cp @ sp[(-17)+11]
 25847  0156EC  0EFA               	movlw	-6
 25848  0156EE  006F FF8C  F037    	movff	plusw1,btemp
 25849  0156F4  0EFB               	movlw	-5
 25850  0156F6  50E3               	movf	plusw1,w,c
 25851  0156F8  1037               	iorwf	btemp^0,w,c
 25852  0156FA  A4D8               	btfss	status,2,c
 25853  0156FC  D00E               	goto	l13231
 25854                           
 25855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 25856                           ;stkvar	_nuls @ sp[(-17)+0]
 25857  0156FE  0EEF               	movlw	239
 25858  015700  24E1               	addwf	fsr1l,w,c
 25859  015702  6E41               	movwf	(btemp+10)^0,c
 25860  015704  0EFF               	movlw	255
 25861  015706  20E2               	addwfc	fsr1h,w,c
 25862  015708  6E42               	movwf	(btemp+11)^0,c
 25863                           
 25864                           ;stkvar	_cp @ sp[(-17)+11]
 25865  01570A  0EFB               	movlw	-5
 25866  01570C  0060  F10B  FFE3   	movff	btemp+11,plusw1
 25867  015712  0EFA               	movlw	-6
 25868  015714  0060  F107  FFE3   	movff	btemp+10,plusw1
 25869  01571A                     l13231:
 25870                           
 25871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 25872                           ;stkvar	_cp @ sp[(-17)+11]
 25873  01571A  0EFA               	movlw	-6
 25874  01571C  006F FF8F FFE6     	movff	plusw1,postinc1
 25875  015722  006F FF8F FFE6     	movff	plusw1,postinc1
 25876  015728  ECF3  F0C2         	call	_strlen	;wreg free
 25877                           
 25878                           ;stkvar	_l @ sp[(-17)+7]
 25879  01572C  0EF6               	movlw	-10
 25880  01572E  0060  F0DF  FFE3   	movff	btemp,plusw1
 25881  015734  0EF7               	movlw	-9
 25882  015736  0060  F0E3  FFE3   	movff	btemp+1,plusw1
 25883                           
 25884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 25885                           ;stkvar	_p @ sp[(-17)+9]
 25886  01573C  0EF8               	movlw	-8
 25887  01573E  0060  F047  FFE3   	movff	_prec,plusw1
 25888  015744  0EF9               	movlw	-7
 25889  015746  0060  F04B  FFE3   	movff	_prec+1,plusw1
 25890                           
 25891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 25892                           ;stkvar	_p @ sp[(-17)+9]
 25893  01574C  0EF9               	movlw	-7
 25894  01574E  BEE3               	btfsc	plusw1,7,c
 25895  015750  D023               	goto	l2373
 25896                           
 25897                           ;stkvar	_l @ sp[(-17)+7]
 25898                           ;stkvar	_p @ sp[(-17)+9]
 25899  015752  50E1               	movf	fsr1l,w,c
 25900  015754  0FF8               	addlw	-8
 25901  015756  6ED9               	movwf	fsr2l,c
 25902  015758  50E2               	movf	fsr1h,w,c
 25903  01575A  6EDA               	movwf	fsr2h,c
 25904  01575C  0EFF               	movlw	255
 25905  01575E  22DA               	addwfc	fsr2h,f,c
 25906  015760  0EF6               	movlw	-10
 25907  015762  50E3               	movf	plusw1,w,c
 25908  015764  5CDE               	subwf	postinc2,w,c
 25909  015766  50DE               	movf	postinc2,w,c
 25910  015768  0A80               	xorlw	128
 25911  01576A  6E37               	movwf	btemp^0,c
 25912  01576C  0EF7               	movlw	-9
 25913  01576E  50E3               	movf	plusw1,w,c
 25914  015770  0A80               	xorlw	128
 25915  015772  5837               	subwfb	btemp^0,w,c
 25916  015774  B0D8               	btfsc	status,0,c
 25917  015776  D010               	goto	l2373
 25918                           
 25919                           ;stkvar	_p @ sp[(-17)+9]
 25920                           ;stkvar	_l @ sp[(-17)+7]
 25921  015778  0EF8               	movlw	-8
 25922  01577A  006F FF8C  F037    	movff	plusw1,btemp
 25923  015780  0EF6               	movlw	-10
 25924  015782  0060  F0DF  FFE3   	movff	btemp,plusw1
 25925  015788  0EF9               	movlw	-7
 25926  01578A  006F FF8C  F037    	movff	plusw1,btemp
 25927  015790  0EF7               	movlw	-9
 25928  015792  0060  F0DF  FFE3   	movff	btemp,plusw1
 25929  015798                     l2373:
 25930                           
 25931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 25932                           ;stkvar	_l @ sp[(-17)+7]
 25933                           ;stkvar	_p @ sp[(-17)+9]
 25934  015798  0EF6               	movlw	-10
 25935  01579A  006F FF8C  F037    	movff	plusw1,btemp
 25936  0157A0  0EF8               	movlw	-8
 25937  0157A2  0060  F0DF  FFE3   	movff	btemp,plusw1
 25938  0157A8  0EF7               	movlw	-9
 25939  0157AA  006F FF8C  F037    	movff	plusw1,btemp
 25940  0157B0  0EF9               	movlw	-7
 25941  0157B2  0060  F0DF  FFE3   	movff	btemp,plusw1
 25942                           
 25943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 25944                           ;stkvar	_w @ sp[(-17)+13]
 25945  0157B8  0EFC               	movlw	-4
 25946  0157BA  0060  F03F  FFE3   	movff	_width,plusw1
 25947  0157C0  0EFD               	movlw	-3
 25948  0157C2  0060  F043  FFE3   	movff	_width+1,plusw1
 25949                           
 25950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 25951  0157C8  A013               	btfss	_flags^0,0,c
 25952  0157CA  D01F               	goto	l13251
 25953  0157CC  D031               	goto	u9390
 25954  0157CE                     l13247:
 25955                           
 25956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 25957                           ;stkvar	_fp @ sp[(-17)+-2]
 25958  0157CE  0EED               	movlw	-19
 25959  0157D0  006F FF8F FFE6     	movff	plusw1,postinc1
 25960  0157D6  006F FF8F FFE6     	movff	plusw1,postinc1
 25961  0157DC  0E20               	movlw	32
 25962  0157DE  6EE6               	movwf	postinc1,c
 25963  0157E0  0E00               	movlw	0
 25964  0157E2  6EE6               	movwf	postinc1,c
 25965  0157E4  ECEA  F0BC         	call	_fputc	;wreg free
 25966                           
 25967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 25968                           ;stkvar	_l @ sp[(-17)+7]
 25969  0157E8  0EF6               	movlw	-10
 25970  0157EA  50E3               	movf	plusw1,w,c
 25971  0157EC  0F01               	addlw	1
 25972  0157EE  6E37               	movwf	btemp^0,c
 25973  0157F0  0EF6               	movlw	-10
 25974  0157F2  0060  F0DF  FFE3   	movff	btemp,plusw1
 25975  0157F8  6A37               	clrf	btemp^0,c
 25976  0157FA  0EF7               	movlw	-9
 25977  0157FC  50E3               	movf	plusw1,w,c
 25978  0157FE  2037               	addwfc	btemp^0,w,c
 25979  015800  6E37               	movwf	btemp^0,c
 25980  015802  0EF7               	movlw	-9
 25981  015804  0060  F0DF  FFE3   	movff	btemp,plusw1
 25982  01580A                     l13251:
 25983                           
 25984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 25985                           ;stkvar	_w @ sp[(-17)+13]
 25986                           ;stkvar	_l @ sp[(-17)+7]
 25987  01580A  50E1               	movf	fsr1l,w,c
 25988  01580C  0FF6               	addlw	-10
 25989  01580E  6ED9               	movwf	fsr2l,c
 25990  015810  50E2               	movf	fsr1h,w,c
 25991  015812  6EDA               	movwf	fsr2h,c
 25992  015814  0EFF               	movlw	255
 25993  015816  22DA               	addwfc	fsr2h,f,c
 25994  015818  0EFC               	movlw	-4
 25995  01581A  50E3               	movf	plusw1,w,c
 25996  01581C  5CDE               	subwf	postinc2,w,c
 25997  01581E  50DE               	movf	postinc2,w,c
 25998  015820  0A80               	xorlw	128
 25999  015822  6E37               	movwf	btemp^0,c
 26000  015824  0EFD               	movlw	-3
 26001  015826  50E3               	movf	plusw1,w,c
 26002  015828  0A80               	xorlw	128
 26003  01582A  5837               	subwfb	btemp^0,w,c
 26004  01582C  A0D8               	btfss	status,0,c
 26005  01582E  D7CF               	goto	l13247
 26006  015830                     u9390:
 26007                           
 26008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 26009                           ;stkvar	_i @ sp[(-17)+15]
 26010  015830  0EFE               	movlw	-2
 26011  015832  6AE3               	clrf	plusw1,c
 26012  015834  0EFF               	movlw	-1
 26013  015836  6AE3               	clrf	plusw1,c
 26014                           
 26015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 26016  015838  D045               	goto	l13261
 26017  01583A                     l13255:
 26018                           
 26019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 26020                           ;stkvar	_fp @ sp[(-17)+-2]
 26021  01583A  0EED               	movlw	-19
 26022  01583C  006F FF8F FFE6     	movff	plusw1,postinc1
 26023  015842  006F FF8F FFE6     	movff	plusw1,postinc1
 26024                           
 26025                           ;stkvar	_cp @ sp[(-19)+11]
 26026  015848  0EF8               	movlw	-8
 26027  01584A  006F FF8F FFF6     	movff	plusw1,tblptrl
 26028  015850  0EF9               	movlw	-7
 26029  015852  006F FF8F FFF7     	movff	plusw1,tblptrh
 26030  015858  0E00               	movlw	low (__mediumconst shr (0+16))
 26031  01585A  6EF8               	movwf	tblptru,c
 26032  01585C  0E1F               	movlw	(high __ramtop+-1)
 26033  01585E  64F7               	cpfsgt	tblptrh,c
 26034  015860  D003               	bra	u9407
 26035  015862  0008               	tblrd		*
 26036  015864  50F5               	movf	tablat,w,c
 26037  015866  D007               	bra	u9400
 26038  015868                     u9407:
 26039  015868  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26040  01586E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26041  015874  50EF               	movf	indf0,w,c
 26042  015876                     u9400:
 26043  015876  6EE6               	movwf	postinc1,c
 26044  015878  0E00               	movlw	0
 26045  01587A  6EE6               	movwf	postinc1,c
 26046  01587C  ECEA  F0BC         	call	_fputc	;wreg free
 26047                           
 26048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 26049                           ;stkvar	_cp @ sp[(-17)+11]
 26050  015880  0EFA               	movlw	-6
 26051  015882  50E3               	movf	plusw1,w,c
 26052  015884  0F01               	addlw	1
 26053  015886  6E37               	movwf	btemp^0,c
 26054  015888  0EFA               	movlw	-6
 26055  01588A  0060  F0DF  FFE3   	movff	btemp,plusw1
 26056  015890  6A37               	clrf	btemp^0,c
 26057  015892  0EFB               	movlw	-5
 26058  015894  50E3               	movf	plusw1,w,c
 26059  015896  2037               	addwfc	btemp^0,w,c
 26060  015898  6E37               	movwf	btemp^0,c
 26061  01589A  0EFB               	movlw	-5
 26062  01589C  0060  F0DF  FFE3   	movff	btemp,plusw1
 26063                           
 26064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 26065                           ;stkvar	_i @ sp[(-17)+15]
 26066  0158A2  0EFE               	movlw	-2
 26067  0158A4  50E3               	movf	plusw1,w,c
 26068  0158A6  0F01               	addlw	1
 26069  0158A8  6E37               	movwf	btemp^0,c
 26070  0158AA  0EFE               	movlw	-2
 26071  0158AC  0060  F0DF  FFE3   	movff	btemp,plusw1
 26072  0158B2  6A37               	clrf	btemp^0,c
 26073  0158B4  0EFF               	movlw	-1
 26074  0158B6  50E3               	movf	plusw1,w,c
 26075  0158B8  2037               	addwfc	btemp^0,w,c
 26076  0158BA  6E37               	movwf	btemp^0,c
 26077  0158BC  0EFF               	movlw	-1
 26078  0158BE  0060  F0DF  FFE3   	movff	btemp,plusw1
 26079  0158C4                     l13261:
 26080                           
 26081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 26082                           ;stkvar	_p @ sp[(-17)+9]
 26083                           ;stkvar	_i @ sp[(-17)+15]
 26084  0158C4  50E1               	movf	fsr1l,w,c
 26085  0158C6  0FFE               	addlw	-2
 26086  0158C8  6ED9               	movwf	fsr2l,c
 26087  0158CA  50E2               	movf	fsr1h,w,c
 26088  0158CC  6EDA               	movwf	fsr2h,c
 26089  0158CE  0EFF               	movlw	255
 26090  0158D0  22DA               	addwfc	fsr2h,f,c
 26091  0158D2  0EF8               	movlw	-8
 26092  0158D4  50E3               	movf	plusw1,w,c
 26093  0158D6  5CDE               	subwf	postinc2,w,c
 26094  0158D8  50DE               	movf	postinc2,w,c
 26095  0158DA  0A80               	xorlw	128
 26096  0158DC  6E37               	movwf	btemp^0,c
 26097  0158DE  0EF9               	movlw	-7
 26098  0158E0  50E3               	movf	plusw1,w,c
 26099  0158E2  0A80               	xorlw	128
 26100  0158E4  5837               	subwfb	btemp^0,w,c
 26101  0158E6  A0D8               	btfss	status,0,c
 26102  0158E8  D7A8               	goto	l13255
 26103                           
 26104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 26105  0158EA  B013               	btfsc	_flags^0,0,c
 26106  0158EC  D01F               	goto	l13269
 26107  0158EE  D031               	goto	u9430
 26108  0158F0                     l13265:
 26109                           
 26110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 26111                           ;stkvar	_fp @ sp[(-17)+-2]
 26112  0158F0  0EED               	movlw	-19
 26113  0158F2  006F FF8F FFE6     	movff	plusw1,postinc1
 26114  0158F8  006F FF8F FFE6     	movff	plusw1,postinc1
 26115  0158FE  0E20               	movlw	32
 26116  015900  6EE6               	movwf	postinc1,c
 26117  015902  0E00               	movlw	0
 26118  015904  6EE6               	movwf	postinc1,c
 26119  015906  ECEA  F0BC         	call	_fputc	;wreg free
 26120                           
 26121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 26122                           ;stkvar	_l @ sp[(-17)+7]
 26123  01590A  0EF6               	movlw	-10
 26124  01590C  50E3               	movf	plusw1,w,c
 26125  01590E  0F01               	addlw	1
 26126  015910  6E37               	movwf	btemp^0,c
 26127  015912  0EF6               	movlw	-10
 26128  015914  0060  F0DF  FFE3   	movff	btemp,plusw1
 26129  01591A  6A37               	clrf	btemp^0,c
 26130  01591C  0EF7               	movlw	-9
 26131  01591E  50E3               	movf	plusw1,w,c
 26132  015920  2037               	addwfc	btemp^0,w,c
 26133  015922  6E37               	movwf	btemp^0,c
 26134  015924  0EF7               	movlw	-9
 26135  015926  0060  F0DF  FFE3   	movff	btemp,plusw1
 26136  01592C                     l13269:
 26137                           
 26138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 26139                           ;stkvar	_w @ sp[(-17)+13]
 26140                           ;stkvar	_l @ sp[(-17)+7]
 26141  01592C  50E1               	movf	fsr1l,w,c
 26142  01592E  0FF6               	addlw	-10
 26143  015930  6ED9               	movwf	fsr2l,c
 26144  015932  50E2               	movf	fsr1h,w,c
 26145  015934  6EDA               	movwf	fsr2h,c
 26146  015936  0EFF               	movlw	255
 26147  015938  22DA               	addwfc	fsr2h,f,c
 26148  01593A  0EFC               	movlw	-4
 26149  01593C  50E3               	movf	plusw1,w,c
 26150  01593E  5CDE               	subwf	postinc2,w,c
 26151  015940  50DE               	movf	postinc2,w,c
 26152  015942  0A80               	xorlw	128
 26153  015944  6E37               	movwf	btemp^0,c
 26154  015946  0EFD               	movlw	-3
 26155  015948  50E3               	movf	plusw1,w,c
 26156  01594A  0A80               	xorlw	128
 26157  01594C  5837               	subwfb	btemp^0,w,c
 26158  01594E  A0D8               	btfss	status,0,c
 26159  015950  D7CF               	goto	l13265
 26160  015952                     u9430:
 26161                           
 26162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 26163                           ;stkvar	_l @ sp[(-17)+7]
 26164  015952  0EF6               	movlw	-10
 26165  015954  006F FF8C  F037    	movff	plusw1,btemp
 26166  01595A  0EF7               	movlw	-9
 26167  01595C  006F FF8C  F038    	movff	plusw1,btemp+1
 26168                           
 26169                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26170  015962  0EEB               	movlw	235
 26171  015964  26E1               	addwf	fsr1l,f,c
 26172  015966  0EFF               	movlw	255
 26173  015968  22E2               	addwfc	fsr1h,f,c
 26174  01596A  0012               	return		;funcret
 26175  01596C                     __end_of_stoa:
 26176                           	opt callstack 0
 26177                           
 26178 ;; *************** function _otoa *****************
 26179 ;; Defined at:
 26180 ;;		line 507 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26181 ;; Parameters:    Size  Location     Type
 26182 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26183 ;;		 -> f(6), NULL(0), 
 26184 ;;  d               8  [STACK] unsigned long long 
 26185 ;; Auto vars:     Size  Location     Type
 26186 ;;  n               8  [STACK] unsigned long long 
 26187 ;;  i               2  [STACK] int 
 26188 ;;  w               2  [STACK] int 
 26189 ;;  t               2  [STACK] int 
 26190 ;;  p               2  [STACK] int 
 26191 ;; Return value:  Size  Location     Type
 26192 ;;                  2  [STACK] int 
 26193 ;; Registers used:
 26194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26195 ;; Tracked objects:
 26196 ;;		On entry : 0/3B
 26197 ;;		On exit  : 0/0
 26198 ;;		Unchanged: 0/0
 26199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26204 ;;Total ram usage:        0 bytes
 26205 ;; Hardware stack levels used:    1
 26206 ;; Hardware stack levels required when called:    8
 26207 ;; This function calls:
 26208 ;;		_pad
 26209 ;; This function is called by:
 26210 ;;		_vfpfcnvrt
 26211 ;; This function uses a reentrant model
 26212 ;;
 26213                           
 26214                           	psect	text103
 26215  016356                     __ptext103:
 26216                           	opt callstack 0
 26217  016356                     _otoa:
 26218                           	opt callstack 0
 26219                           
 26220                           ; autosize = 16, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 26221  016356  0E10               	movlw	16
 26222  016358  26E1               	addwf	fsr1l,f,c
 26223  01635A  0E00               	movlw	0
 26224  01635C  22E2               	addwfc	fsr1h,f,c
 26225                           
 26226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
 26227                           
 26228                           ;incstack = 0
 26229  01635E  AE12               	btfss	(_prec+1)^0,7,c
 26230                           
 26231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
 26232  016360  9213               	bcf	_flags^0,1,c
 26233                           
 26234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
 26235  016362  BE12               	btfsc	(_prec+1)^0,7,c
 26236  016364  D005               	goto	u9240
 26237  016366  5012               	movf	(_prec+1)^0,w,c
 26238  016368  E110               	bnz	l13179
 26239  01636A  0411               	decf	_prec^0,w,c
 26240  01636C  B0D8               	btfsc	status,0,c
 26241  01636E  D00D               	goto	l13179
 26242  016370                     u9240:
 26243  016370  0E01               	movlw	1
 26244  016372  6E41               	movwf	(btemp+10)^0,c
 26245  016374  0E00               	movlw	0
 26246  016376  6E42               	movwf	(btemp+11)^0,c
 26247                           
 26248                           ;stkvar	_p @ sp[(-16)+14]
 26249  016378  0EFE               	movlw	-2
 26250  01637A  0060  F107  FFE3   	movff	btemp+10,plusw1
 26251  016380  0EFF               	movlw	-1
 26252  016382  0060  F10B  FFE3   	movff	btemp+11,plusw1
 26253  016388  D008               	goto	l2355
 26254  01638A                     l13179:
 26255                           
 26256                           ;stkvar	_p @ sp[(-16)+14]
 26257  01638A  0EFE               	movlw	-2
 26258  01638C  0060  F047  FFE3   	movff	_prec,plusw1
 26259  016392  0EFF               	movlw	-1
 26260  016394  0060  F04B  FFE3   	movff	_prec+1,plusw1
 26261  01639A                     l2355:
 26262                           
 26263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 517:     w = width;
 26264                           ;stkvar	_w @ sp[(-16)+10]
 26265  01639A  0EFA               	movlw	-6
 26266  01639C  0060  F03F  FFE3   	movff	_width,plusw1
 26267  0163A2  0EFB               	movlw	-5
 26268  0163A4  0060  F043  FFE3   	movff	_width+1,plusw1
 26269                           
 26270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 520:     n = d;
 26271                           ;stkvar	_d @ sp[(-16)+-10]
 26272  0163AA  0EE6               	movlw	230
 26273  0163AC  24E1               	addwf	fsr1l,w,c
 26274  0163AE  6ED9               	movwf	fsr2l,c
 26275  0163B0  0EFF               	movlw	255
 26276  0163B2  20E2               	addwfc	fsr1h,w,c
 26277  0163B4  6EDA               	movwf	fsr2h,c
 26278                           
 26279                           ;stkvar	_n @ sp[(-16)+0]
 26280  0163B6  0E08               	movlw	8
 26281  0163B8  6E37               	movwf	btemp^0,c
 26282  0163BA  0EF0               	movlw	-16
 26283  0163BC                     us925999:
 26284  0163BC  006F FF7B FFE3     	movff	postinc2,plusw1
 26285  0163C2  28E8               	incf	wreg,w,c
 26286  0163C4  2E37               	decfsz	btemp^0,f,c
 26287  0163C6  D7FA               	bra	us925999
 26288                           
 26289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
 26290  0163C8  0E1F               	movlw	31
 26291  0163CA  6E41               	movwf	(btemp+10)^0,c
 26292  0163CC  0E00               	movlw	0
 26293  0163CE  6E42               	movwf	(btemp+11)^0,c
 26294                           
 26295                           ;stkvar	_i @ sp[(-16)+8]
 26296  0163D0  0EF8               	movlw	-8
 26297  0163D2  0060  F107  FFE3   	movff	btemp+10,plusw1
 26298  0163D8  0EF9               	movlw	-7
 26299  0163DA  0060  F10B  FFE3   	movff	btemp+11,plusw1
 26300                           
 26301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
 26302  0163E0  0100               	movlb	0	; () banked
 26303  0163E2  6BCC               	clrf	(_dbuf+31)& (0+255),b
 26304                           
 26305                           ; BSR set to: 0
 26306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 523:     t = 0;
 26307                           ;stkvar	_t @ sp[(-16)+12]
 26308  0163E4  0EFC               	movlw	-4
 26309  0163E6  6AE3               	clrf	plusw1,c
 26310  0163E8  0EFD               	movlw	-3
 26311  0163EA  6AE3               	clrf	plusw1,c
 26312                           
 26313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26314  0163EC  D05B               	goto	l13201
 26315  0163EE                     l13189:
 26316                           
 26317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 525:         --i;
 26318                           ;stkvar	_i @ sp[(-16)+8]
 26319  0163EE  50E1               	movf	fsr1l,w,c
 26320  0163F0  0FF8               	addlw	-8
 26321  0163F2  6ED9               	movwf	fsr2l,c
 26322  0163F4  50E2               	movf	fsr1h,w,c
 26323  0163F6  6EDA               	movwf	fsr2h,c
 26324  0163F8  0EFF               	movlw	255
 26325  0163FA  22DA               	addwfc	fsr2h,f,c
 26326  0163FC  06DE               	decf	postinc2,f,c
 26327  0163FE  0E00               	movlw	0
 26328  016400  5ADD               	subwfb	postdec2,f,c
 26329                           
 26330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
 26331                           ;stkvar	_n @ sp[(-16)+0]
 26332  016402  0EF0               	movlw	-16
 26333  016404  006F FF8C  F041    	movff	plusw1,btemp+10
 26334  01640A  0EF1               	movlw	-15
 26335  01640C  006F FF8C  F042    	movff	plusw1,btemp+11
 26336  016412  0E07               	movlw	7
 26337  016414  1641               	andwf	(btemp+10)^0,f,c
 26338  016416  0E00               	movlw	0
 26339  016418  1642               	andwf	(btemp+11)^0,f,c
 26340                           
 26341                           ;stkvar	_t @ sp[(-16)+12]
 26342  01641A  0EFC               	movlw	-4
 26343  01641C  0060  F107  FFE3   	movff	btemp+10,plusw1
 26344  016422  0EFD               	movlw	-3
 26345  016424  0060  F10B  FFE3   	movff	btemp+11,plusw1
 26346                           
 26347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
 26348                           ;stkvar	_i @ sp[(-16)+8]
 26349  01642A  0EF8               	movlw	-8
 26350  01642C  006F FF8C  F042    	movff	plusw1,btemp+11
 26351  016432  5042               	movf	(btemp+11)^0,w,c
 26352  016434  0FAD               	addlw	low _dbuf
 26353  016436  6ED9               	movwf	fsr2l,c
 26354  016438  6ADA               	clrf	fsr2h,c
 26355                           
 26356                           ;stkvar	_t @ sp[(-16)+12]
 26357  01643A  0EFC               	movlw	-4
 26358  01643C  50E3               	movf	plusw1,w,c
 26359  01643E  0F30               	addlw	48
 26360  016440  6EDF               	movwf	indf2,c
 26361                           
 26362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 528:         --p;
 26363                           ;stkvar	_p @ sp[(-16)+14]
 26364  016442  50E1               	movf	fsr1l,w,c
 26365  016444  0FFE               	addlw	-2
 26366  016446  6ED9               	movwf	fsr2l,c
 26367  016448  50E2               	movf	fsr1h,w,c
 26368  01644A  6EDA               	movwf	fsr2h,c
 26369  01644C  0EFF               	movlw	255
 26370  01644E  22DA               	addwfc	fsr2h,f,c
 26371  016450  06DE               	decf	postinc2,f,c
 26372  016452  0E00               	movlw	0
 26373  016454  5ADD               	subwfb	postdec2,f,c
 26374                           
 26375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 529:         --w;
 26376                           ;stkvar	_w @ sp[(-16)+10]
 26377  016456  50E1               	movf	fsr1l,w,c
 26378  016458  0FFA               	addlw	-6
 26379  01645A  6ED9               	movwf	fsr2l,c
 26380  01645C  50E2               	movf	fsr1h,w,c
 26381  01645E  6EDA               	movwf	fsr2h,c
 26382  016460  0EFF               	movlw	255
 26383  016462  22DA               	addwfc	fsr2h,f,c
 26384  016464  06DE               	decf	postinc2,f,c
 26385  016466  0E00               	movlw	0
 26386  016468  5ADD               	subwfb	postdec2,f,c
 26387                           
 26388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
 26389  01646A  0E03               	movlw	3
 26390  01646C  6E42               	movwf	(btemp+11)^0,c
 26391                           
 26392                           ;stkvar	_n @ sp[(-16)+0]
 26393  01646E  50E1               	movf	fsr1l,w,c
 26394  016470  0FF0               	addlw	-16
 26395  016472  6ED9               	movwf	fsr2l,c
 26396  016474  50E2               	movf	fsr1h,w,c
 26397  016476  6EDA               	movwf	fsr2h,c
 26398  016478  0EFF               	movlw	255
 26399  01647A  22DA               	addwfc	fsr2h,f,c
 26400  01647C  2842               	incf	(btemp+11)^0,w,c
 26401  01647E  52DE               	movf	postinc2,f,c
 26402  016480  D00F               	goto	u9260
 26403  016482                     u9265:
 26404  016482  52DE               	movf	postinc2,f,c
 26405  016484  52DE               	movf	postinc2,f,c
 26406  016486  52DE               	movf	postinc2,f,c
 26407  016488  52DE               	movf	postinc2,f,c
 26408  01648A  52DE               	movf	postinc2,f,c
 26409  01648C  52DE               	movf	postinc2,f,c
 26410  01648E  90D8               	bcf	status,0,c
 26411  016490  32DD               	rrcf	postdec2,f,c
 26412  016492  32DD               	rrcf	postdec2,f,c
 26413  016494  32DD               	rrcf	postdec2,f,c
 26414  016496  32DD               	rrcf	postdec2,f,c
 26415  016498  32DD               	rrcf	postdec2,f,c
 26416  01649A  32DD               	rrcf	postdec2,f,c
 26417  01649C  32DD               	rrcf	postdec2,f,c
 26418  01649E  32DE               	rrcf	postinc2,f,c
 26419  0164A0                     u9260:
 26420  0164A0  2EE8               	decfsz	wreg,f,c
 26421  0164A2  D7EF               	goto	u9265
 26422  0164A4                     l13201:
 26423                           
 26424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26425                           ;stkvar	_i @ sp[(-16)+8]
 26426  0164A4  0EF9               	movlw	-7
 26427  0164A6  BEE3               	btfsc	plusw1,7,c
 26428  0164A8  D036               	goto	u9310
 26429  0164AA  0EF9               	movlw	-7
 26430  0164AC  50E3               	movf	plusw1,w,c
 26431  0164AE  E104               	bnz	u9270
 26432  0164B0  0EF8               	movlw	-8
 26433  0164B2  04E3               	decf	plusw1,w,c
 26434  0164B4  A0D8               	btfss	status,0,c
 26435  0164B6  D02F               	goto	u9310
 26436  0164B8                     u9270:
 26437                           
 26438                           ;stkvar	_n @ sp[(-16)+0]
 26439  0164B8  0EF0               	movlw	-16
 26440  0164BA  50E3               	movf	plusw1,w,c
 26441  0164BC  E198               	bnz	l13189
 26442  0164BE  0EF1               	movlw	-15
 26443  0164C0  50E3               	movf	plusw1,w,c
 26444  0164C2  E195               	bnz	l13189
 26445  0164C4  0EF2               	movlw	-14
 26446  0164C6  50E3               	movf	plusw1,w,c
 26447  0164C8  E192               	bnz	l13189
 26448  0164CA  0EF3               	movlw	-13
 26449  0164CC  50E3               	movf	plusw1,w,c
 26450  0164CE  E18F               	bnz	l13189
 26451  0164D0  0EF4               	movlw	-12
 26452  0164D2  50E3               	movf	plusw1,w,c
 26453  0164D4  E18C               	bnz	l13189
 26454  0164D6  0EF5               	movlw	-11
 26455  0164D8  50E3               	movf	plusw1,w,c
 26456  0164DA  E189               	bnz	l13189
 26457  0164DC  0EF6               	movlw	-10
 26458  0164DE  50E3               	movf	plusw1,w,c
 26459  0164E0  E186               	bnz	l13189
 26460  0164E2  0EF7               	movlw	-9
 26461  0164E4  50E3               	movf	plusw1,w,c
 26462  0164E6  A4D8               	btfss	status,2,c
 26463  0164E8  D782               	goto	l13189
 26464                           
 26465                           ;stkvar	_p @ sp[(-16)+14]
 26466  0164EA  0EFF               	movlw	-1
 26467  0164EC  BEE3               	btfsc	plusw1,7,c
 26468  0164EE  D007               	goto	u9290
 26469  0164F0  0EFF               	movlw	-1
 26470  0164F2  50E3               	movf	plusw1,w,c
 26471  0164F4  E103               	bnz	u9291
 26472  0164F6  0EFE               	movlw	-2
 26473  0164F8  04E3               	decf	plusw1,w,c
 26474  0164FA  B0D8               	btfsc	status,0,c
 26475  0164FC                     u9291:
 26476  0164FC  D778               	goto	l13189
 26477  0164FE                     u9290:
 26478                           
 26479                           ;stkvar	_w @ sp[(-16)+10]
 26480  0164FE  0EFB               	movlw	-5
 26481  016500  BEE3               	btfsc	plusw1,7,c
 26482  016502  D009               	goto	u9310
 26483  016504  0EFB               	movlw	-5
 26484  016506  50E3               	movf	plusw1,w,c
 26485  016508  E104               	bnz	u9300
 26486  01650A  0EFA               	movlw	-6
 26487  01650C  04E3               	decf	plusw1,w,c
 26488  01650E  A0D8               	btfss	status,0,c
 26489  016510  D002               	goto	u9310
 26490  016512                     u9300:
 26491  016512  B213               	btfsc	_flags^0,1,c
 26492  016514  D76C               	goto	l13189
 26493  016516                     u9310:
 26494                           
 26495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
 26496  016516  A813               	btfss	_flags^0,4,c
 26497  016518  D027               	goto	l13219
 26498                           
 26499                           ;stkvar	_t @ sp[(-16)+12]
 26500  01651A  0EFC               	movlw	-4
 26501  01651C  006F FF8C  F037    	movff	plusw1,btemp
 26502  016522  0EFD               	movlw	-3
 26503  016524  50E3               	movf	plusw1,w,c
 26504  016526  1037               	iorwf	btemp^0,w,c
 26505  016528  B4D8               	btfsc	status,2,c
 26506  01652A  D01E               	goto	l13219
 26507                           
 26508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 535:         --i;
 26509                           ;stkvar	_i @ sp[(-16)+8]
 26510  01652C  50E1               	movf	fsr1l,w,c
 26511  01652E  0FF8               	addlw	-8
 26512  016530  6ED9               	movwf	fsr2l,c
 26513  016532  50E2               	movf	fsr1h,w,c
 26514  016534  6EDA               	movwf	fsr2h,c
 26515  016536  0EFF               	movlw	255
 26516  016538  22DA               	addwfc	fsr2h,f,c
 26517  01653A  06DE               	decf	postinc2,f,c
 26518  01653C  0E00               	movlw	0
 26519  01653E  5ADD               	subwfb	postdec2,f,c
 26520                           
 26521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
 26522                           ;stkvar	_i @ sp[(-16)+8]
 26523  016540  0EF8               	movlw	-8
 26524  016542  006F FF8C  F042    	movff	plusw1,btemp+11
 26525  016548  5042               	movf	(btemp+11)^0,w,c
 26526  01654A  0FAD               	addlw	low _dbuf
 26527  01654C  6ED9               	movwf	fsr2l,c
 26528  01654E  6ADA               	clrf	fsr2h,c
 26529  016550  0E30               	movlw	48
 26530  016552  6EDF               	movwf	indf2,c
 26531                           
 26532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 537:         --w;
 26533                           ;stkvar	_w @ sp[(-16)+10]
 26534  016554  50E1               	movf	fsr1l,w,c
 26535  016556  0FFA               	addlw	-6
 26536  016558  6ED9               	movwf	fsr2l,c
 26537  01655A  50E2               	movf	fsr1h,w,c
 26538  01655C  6EDA               	movwf	fsr2h,c
 26539  01655E  0EFF               	movlw	255
 26540  016560  22DA               	addwfc	fsr2h,f,c
 26541  016562  06DE               	decf	postinc2,f,c
 26542  016564  0E00               	movlw	0
 26543  016566  5ADD               	subwfb	postdec2,f,c
 26544  016568                     l13219:
 26545                           
 26546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
 26547                           ;stkvar	_w @ sp[(-16)+10]
 26548  016568  0EFA               	movlw	-6
 26549  01656A  006F FF8F FFE6     	movff	plusw1,postinc1
 26550  016570  006F FF8F FFE6     	movff	plusw1,postinc1
 26551                           
 26552                           ;stkvar	_i @ sp[(-18)+8]
 26553  016576  0EF6               	movlw	-10
 26554  016578  006F FF8C  F042    	movff	plusw1,btemp+11
 26555  01657E  5042               	movf	(btemp+11)^0,w,c
 26556  016580  0FAD               	addlw	low _dbuf
 26557  016582  6EE6               	movwf	postinc1,c
 26558                           
 26559                           ;stkvar	_fp @ sp[(-19)+-2]
 26560  016584  0EEB               	movlw	-21
 26561  016586  006F FF8F FFE6     	movff	plusw1,postinc1
 26562  01658C  006F FF8F FFE6     	movff	plusw1,postinc1
 26563  016592  EC1A  F0BF         	call	_pad	;wreg free
 26564                           
 26565                           ; _otoa: autosize = 16, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 26566  016596  0EE6               	movlw	230
 26567  016598  26E1               	addwf	fsr1l,f,c
 26568  01659A  0EFF               	movlw	255
 26569  01659C  22E2               	addwfc	fsr1h,f,c
 26570  01659E  0012               	return		;funcret
 26571  0165A0                     __end_of_otoa:
 26572                           	opt callstack 0
 26573                           
 26574 ;; *************** function _dtoa *****************
 26575 ;; Defined at:
 26576 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26577 ;; Parameters:    Size  Location     Type
 26578 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26579 ;;		 -> f(6), NULL(0), 
 26580 ;;  d               8  [STACK] long long 
 26581 ;; Auto vars:     Size  Location     Type
 26582 ;;  n               8  [STACK] long long 
 26583 ;;  i               2  [STACK] int 
 26584 ;;  s               2  [STACK] int 
 26585 ;;  w               2  [STACK] int 
 26586 ;;  p               2  [STACK] int 
 26587 ;; Return value:  Size  Location     Type
 26588 ;;                  2  [STACK] int 
 26589 ;; Registers used:
 26590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 26591 ;; Tracked objects:
 26592 ;;		On entry : 0/3B
 26593 ;;		On exit  : 0/0
 26594 ;;		Unchanged: 0/0
 26595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26600 ;;Total ram usage:        0 bytes
 26601 ;; Hardware stack levels used:    1
 26602 ;; Hardware stack levels required when called:    8
 26603 ;; This function calls:
 26604 ;;		___aodiv
 26605 ;;		___aomod
 26606 ;;		_abs
 26607 ;;		_pad
 26608 ;; This function is called by:
 26609 ;;		_vfpfcnvrt
 26610 ;; This function uses a reentrant model
 26611 ;;
 26612                           
 26613                           	psect	text104
 26614  013EB4                     __ptext104:
 26615                           	opt callstack 0
 26616  013EB4                     _dtoa:
 26617                           	opt callstack 0
 26618                           
 26619                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 26620  013EB4  0E12               	movlw	18
 26621  013EB6  26E1               	addwf	fsr1l,f,c
 26622  013EB8  0E00               	movlw	0
 26623  013EBA  22E2               	addwfc	fsr1h,f,c
 26624                           
 26625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 26626                           ;stkvar	_d @ sp[(-18)+-10]
 26627                           
 26628                           ;incstack = 0
 26629  013EBC  0EE4               	movlw	228
 26630  013EBE  24E1               	addwf	fsr1l,w,c
 26631  013EC0  6ED9               	movwf	fsr2l,c
 26632  013EC2  0EFF               	movlw	255
 26633  013EC4  20E2               	addwfc	fsr1h,w,c
 26634  013EC6  6EDA               	movwf	fsr2h,c
 26635                           
 26636                           ;stkvar	_n @ sp[(-18)+2]
 26637  013EC8  0E08               	movlw	8
 26638  013ECA  6E37               	movwf	btemp^0,c
 26639  013ECC  0EF0               	movlw	-16
 26640  013ECE                     us906999:
 26641  013ECE  006F FF7B FFE3     	movff	postinc2,plusw1
 26642  013ED4  28E8               	incf	wreg,w,c
 26643  013ED6  2E37               	decfsz	btemp^0,f,c
 26644  013ED8  D7FA               	bra	us906999
 26645                           
 26646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 26647                           ;stkvar	_n @ sp[(-18)+2]
 26648  013EDA  0EF7               	movlw	-9
 26649  013EDC  AEE3               	btfss	plusw1,7,c
 26650  013EDE  D002               	goto	u9070
 26651  013EE0  0E01               	movlw	1
 26652  013EE2  D001               	goto	u9080
 26653  013EE4                     u9070:
 26654  013EE4  0E00               	movlw	0
 26655  013EE6                     u9080:
 26656  013EE6  6E41               	movwf	(btemp+10)^0,c
 26657  013EE8  6A42               	clrf	(btemp+11)^0,c
 26658                           
 26659                           ;stkvar	_s @ sp[(-18)+12]
 26660  013EEA  0EFA               	movlw	-6
 26661  013EEC  0060  F107  FFE3   	movff	btemp+10,plusw1
 26662  013EF2  0EFB               	movlw	-5
 26663  013EF4  0060  F10B  FFE3   	movff	btemp+11,plusw1
 26664                           
 26665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 26666                           ;stkvar	_s @ sp[(-18)+12]
 26667  013EFA  0EFA               	movlw	-6
 26668  013EFC  006F FF8C  F037    	movff	plusw1,btemp
 26669  013F02  0EFB               	movlw	-5
 26670  013F04  50E3               	movf	plusw1,w,c
 26671  013F06  1037               	iorwf	btemp^0,w,c
 26672  013F08  B4D8               	btfsc	status,2,c
 26673  013F0A  D025               	goto	u9100
 26674                           
 26675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 26676                           ;stkvar	_n @ sp[(-18)+2]
 26677                           ;stkvar	_n @ sp[(-18)+2]
 26678  013F0C  0EF0               	movlw	-16
 26679  013F0E  6CE3               	negf	plusw1,c
 26680  013F10  0EF1               	movlw	-15
 26681  013F12  1EE3               	comf	plusw1,f,c
 26682  013F14  0EF2               	movlw	-14
 26683  013F16  1EE3               	comf	plusw1,f,c
 26684  013F18  0EF3               	movlw	-13
 26685  013F1A  1EE3               	comf	plusw1,f,c
 26686  013F1C  0EF4               	movlw	-12
 26687  013F1E  1EE3               	comf	plusw1,f,c
 26688  013F20  0EF5               	movlw	-11
 26689  013F22  1EE3               	comf	plusw1,f,c
 26690  013F24  0EF6               	movlw	-10
 26691  013F26  1EE3               	comf	plusw1,f,c
 26692  013F28  0EF7               	movlw	-9
 26693  013F2A  1EE3               	comf	plusw1,f,c
 26694  013F2C  E314               	bnc	u9100
 26695  013F2E  0EF1               	movlw	-15
 26696  013F30  2AE3               	incf	plusw1,f,c
 26697  013F32  E311               	bnc	u9100
 26698  013F34  0EF2               	movlw	-14
 26699  013F36  2AE3               	incf	plusw1,f,c
 26700  013F38  E30E               	bnc	u9100
 26701  013F3A  0EF3               	movlw	-13
 26702  013F3C  2AE3               	incf	plusw1,f,c
 26703  013F3E  E30B               	bnc	u9100
 26704  013F40  0EF4               	movlw	-12
 26705  013F42  2AE3               	incf	plusw1,f,c
 26706  013F44  E308               	bnc	u9100
 26707  013F46  0EF5               	movlw	-11
 26708  013F48  2AE3               	incf	plusw1,f,c
 26709  013F4A  E305               	bnc	u9100
 26710  013F4C  0EF6               	movlw	-10
 26711  013F4E  2AE3               	incf	plusw1,f,c
 26712  013F50  E302               	bnc	u9100
 26713  013F52  0EF7               	movlw	-9
 26714  013F54  2AE3               	incf	plusw1,f,c
 26715  013F56                     u9100:
 26716                           
 26717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 26718  013F56  AE12               	btfss	(_prec+1)^0,7,c
 26719                           
 26720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 26721  013F58  9213               	bcf	_flags^0,1,c
 26722                           
 26723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 26724  013F5A  BE12               	btfsc	(_prec+1)^0,7,c
 26725  013F5C  D005               	goto	u9120
 26726  013F5E  5012               	movf	(_prec+1)^0,w,c
 26727  013F60  E110               	bnz	l13121
 26728  013F62  0411               	decf	_prec^0,w,c
 26729  013F64  B0D8               	btfsc	status,0,c
 26730  013F66  D00D               	goto	l13121
 26731  013F68                     u9120:
 26732  013F68  0E01               	movlw	1
 26733  013F6A  6E41               	movwf	(btemp+10)^0,c
 26734  013F6C  0E00               	movlw	0
 26735  013F6E  6E42               	movwf	(btemp+11)^0,c
 26736                           
 26737                           ;stkvar	_p @ sp[(-18)+16]
 26738  013F70  0EFE               	movlw	-2
 26739  013F72  0060  F107  FFE3   	movff	btemp+10,plusw1
 26740  013F78  0EFF               	movlw	-1
 26741  013F7A  0060  F10B  FFE3   	movff	btemp+11,plusw1
 26742  013F80  D008               	goto	l2330
 26743  013F82                     l13121:
 26744                           
 26745                           ;stkvar	_p @ sp[(-18)+16]
 26746  013F82  0EFE               	movlw	-2
 26747  013F84  0060  F047  FFE3   	movff	_prec,plusw1
 26748  013F8A  0EFF               	movlw	-1
 26749  013F8C  0060  F04B  FFE3   	movff	_prec+1,plusw1
 26750  013F92                     l2330:
 26751                           
 26752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 26753                           ;stkvar	_w @ sp[(-18)+14]
 26754  013F92  0EFC               	movlw	-4
 26755  013F94  0060  F03F  FFE3   	movff	_width,plusw1
 26756  013F9A  0EFD               	movlw	-3
 26757  013F9C  0060  F043  FFE3   	movff	_width+1,plusw1
 26758                           
 26759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 26760                           ;stkvar	_s @ sp[(-18)+12]
 26761  013FA2  0EFA               	movlw	-6
 26762  013FA4  006F FF8C  F037    	movff	plusw1,btemp
 26763  013FAA  0EFB               	movlw	-5
 26764  013FAC  50E3               	movf	plusw1,w,c
 26765  013FAE  1037               	iorwf	btemp^0,w,c
 26766  013FB0  A4D8               	btfss	status,2,c
 26767  013FB2  D002               	goto	u9140
 26768  013FB4  A413               	btfss	_flags^0,2,c
 26769  013FB6  D00A               	goto	l13129
 26770  013FB8                     u9140:
 26771                           
 26772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 26773                           ;stkvar	_w @ sp[(-18)+14]
 26774  013FB8  50E1               	movf	fsr1l,w,c
 26775  013FBA  0FFC               	addlw	-4
 26776  013FBC  6ED9               	movwf	fsr2l,c
 26777  013FBE  50E2               	movf	fsr1h,w,c
 26778  013FC0  6EDA               	movwf	fsr2h,c
 26779  013FC2  0EFF               	movlw	255
 26780  013FC4  22DA               	addwfc	fsr2h,f,c
 26781  013FC6  06DE               	decf	postinc2,f,c
 26782  013FC8  0E00               	movlw	0
 26783  013FCA  5ADD               	subwfb	postdec2,f,c
 26784  013FCC                     l13129:
 26785                           
 26786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 26787  013FCC  0E1F               	movlw	31
 26788  013FCE  6E41               	movwf	(btemp+10)^0,c
 26789  013FD0  0E00               	movlw	0
 26790  013FD2  6E42               	movwf	(btemp+11)^0,c
 26791                           
 26792                           ;stkvar	_i @ sp[(-18)+10]
 26793  013FD4  0EF8               	movlw	-8
 26794  013FD6  0060  F107  FFE3   	movff	btemp+10,plusw1
 26795  013FDC  0EF9               	movlw	-7
 26796  013FDE  0060  F10B  FFE3   	movff	btemp+11,plusw1
 26797                           
 26798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 26799  013FE4  0100               	movlb	0	; () banked
 26800  013FE6  6BCC               	clrf	(_dbuf+31)& (0+255),b
 26801                           
 26802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26803  013FE8  D103               	goto	l13143
 26804  013FEA                     l13133:
 26805                           
 26806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 26807                           ;stkvar	_i @ sp[(-18)+10]
 26808  013FEA  50E1               	movf	fsr1l,w,c
 26809  013FEC  0FF8               	addlw	-8
 26810  013FEE  6ED9               	movwf	fsr2l,c
 26811  013FF0  50E2               	movf	fsr1h,w,c
 26812  013FF2  6EDA               	movwf	fsr2h,c
 26813  013FF4  0EFF               	movlw	255
 26814  013FF6  22DA               	addwfc	fsr2h,f,c
 26815  013FF8  06DE               	decf	postinc2,f,c
 26816  013FFA  0E00               	movlw	0
 26817  013FFC  5ADD               	subwfb	postdec2,f,c
 26818                           
 26819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 26820  013FFE  0E0A               	movlw	10
 26821  014000  6EE6               	movwf	postinc1,c
 26822  014002  0E00               	movlw	0
 26823  014004  6EE6               	movwf	postinc1,c
 26824  014006  0E00               	movlw	0
 26825  014008  6EE6               	movwf	postinc1,c
 26826  01400A  0E00               	movlw	0
 26827  01400C  6EE6               	movwf	postinc1,c
 26828  01400E  0E00               	movlw	0
 26829  014010  6EE6               	movwf	postinc1,c
 26830  014012  0E00               	movlw	0
 26831  014014  6EE6               	movwf	postinc1,c
 26832  014016  0E00               	movlw	0
 26833  014018  6EE6               	movwf	postinc1,c
 26834  01401A  0E00               	movlw	0
 26835  01401C  6EE6               	movwf	postinc1,c
 26836                           
 26837                           ;stkvar	_n @ sp[(-26)+2]
 26838  01401E  50E1               	movf	fsr1l,w,c
 26839  014020  0FE8               	addlw	-24
 26840  014022  6ED9               	movwf	fsr2l,c
 26841  014024  50E2               	movf	fsr1h,w,c
 26842  014026  6EDA               	movwf	fsr2h,c
 26843  014028  0EFF               	movlw	255
 26844  01402A  22DA               	addwfc	fsr2h,f,c
 26845  01402C  006F FF7B FFE6     	movff	postinc2,postinc1
 26846  014032  006F FF7B FFE6     	movff	postinc2,postinc1
 26847  014038  006F FF7B FFE6     	movff	postinc2,postinc1
 26848  01403E  006F FF7B FFE6     	movff	postinc2,postinc1
 26849  014044  006F FF7B FFE6     	movff	postinc2,postinc1
 26850  01404A  006F FF7B FFE6     	movff	postinc2,postinc1
 26851  014050  006F FF7B FFE6     	movff	postinc2,postinc1
 26852  014056  006F FF7B FFE6     	movff	postinc2,postinc1
 26853  01405C  ECD0  F0B2         	call	___aomod	;wreg free
 26854  014060  52E5               	movf	postdec1,f,c
 26855  014062  006F FF9C  F04E    	movff	indf1,btemp+23
 26856  014068  52E5               	movf	postdec1,f,c
 26857  01406A  006F FF9C  F04D    	movff	indf1,btemp+22
 26858  014070  52E5               	movf	postdec1,f,c
 26859  014072  006F FF9C  F04C    	movff	indf1,btemp+21
 26860  014078  52E5               	movf	postdec1,f,c
 26861  01407A  006F FF9C  F04B    	movff	indf1,btemp+20
 26862  014080  52E5               	movf	postdec1,f,c
 26863  014082  006F FF9C  F04A    	movff	indf1,btemp+19
 26864  014088  52E5               	movf	postdec1,f,c
 26865  01408A  006F FF9C  F049    	movff	indf1,btemp+18
 26866  014090  52E5               	movf	postdec1,f,c
 26867  014092  006F FF9C  F048    	movff	indf1,btemp+17
 26868  014098  52E5               	movf	postdec1,f,c
 26869  01409A  006F FF9C  F047    	movff	indf1,btemp+16
 26870  0140A0  0EF8               	movlw	248
 26871  0140A2  26E1               	addwf	fsr1l,f,c
 26872  0140A4  0EFF               	movlw	255
 26873  0140A6  22E2               	addwfc	fsr1h,f,c
 26874  0140A8  0060  F11C  F041   	movff	btemp+16,btemp+10
 26875  0140AE  0060  F120  F042   	movff	btemp+17,btemp+11
 26876  0140B4  0060  F107  FFE6   	movff	btemp+10,postinc1
 26877  0140BA  0060  F10B  FFE6   	movff	btemp+11,postinc1
 26878  0140C0  ECAF  F0C7         	call	_abs	;wreg free
 26879  0140C4  0E30               	movlw	48
 26880  0140C6  2637               	addwf	btemp^0,f,c
 26881                           
 26882                           ;stkvar	_i @ sp[(-18)+10]
 26883  0140C8  0EF8               	movlw	-8
 26884  0140CA  006F FF8C  F042    	movff	plusw1,btemp+11
 26885  0140D0  5042               	movf	(btemp+11)^0,w,c
 26886  0140D2  0FAD               	addlw	low _dbuf
 26887  0140D4  6ED9               	movwf	fsr2l,c
 26888  0140D6  6ADA               	clrf	fsr2h,c
 26889  0140D8  0060  F0DF  FFDF   	movff	btemp,indf2
 26890                           
 26891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 26892                           ;stkvar	_p @ sp[(-18)+16]
 26893  0140DE  50E1               	movf	fsr1l,w,c
 26894  0140E0  0FFE               	addlw	-2
 26895  0140E2  6ED9               	movwf	fsr2l,c
 26896  0140E4  50E2               	movf	fsr1h,w,c
 26897  0140E6  6EDA               	movwf	fsr2h,c
 26898  0140E8  0EFF               	movlw	255
 26899  0140EA  22DA               	addwfc	fsr2h,f,c
 26900  0140EC  06DE               	decf	postinc2,f,c
 26901  0140EE  0E00               	movlw	0
 26902  0140F0  5ADD               	subwfb	postdec2,f,c
 26903                           
 26904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 26905                           ;stkvar	_w @ sp[(-18)+14]
 26906  0140F2  50E1               	movf	fsr1l,w,c
 26907  0140F4  0FFC               	addlw	-4
 26908  0140F6  6ED9               	movwf	fsr2l,c
 26909  0140F8  50E2               	movf	fsr1h,w,c
 26910  0140FA  6EDA               	movwf	fsr2h,c
 26911  0140FC  0EFF               	movlw	255
 26912  0140FE  22DA               	addwfc	fsr2h,f,c
 26913  014100  06DE               	decf	postinc2,f,c
 26914  014102  0E00               	movlw	0
 26915  014104  5ADD               	subwfb	postdec2,f,c
 26916                           
 26917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 26918  014106  0E0A               	movlw	10
 26919  014108  6EE6               	movwf	postinc1,c
 26920  01410A  0E00               	movlw	0
 26921  01410C  6EE6               	movwf	postinc1,c
 26922  01410E  0E00               	movlw	0
 26923  014110  6EE6               	movwf	postinc1,c
 26924  014112  0E00               	movlw	0
 26925  014114  6EE6               	movwf	postinc1,c
 26926  014116  0E00               	movlw	0
 26927  014118  6EE6               	movwf	postinc1,c
 26928  01411A  0E00               	movlw	0
 26929  01411C  6EE6               	movwf	postinc1,c
 26930  01411E  0E00               	movlw	0
 26931  014120  6EE6               	movwf	postinc1,c
 26932  014122  0E00               	movlw	0
 26933  014124  6EE6               	movwf	postinc1,c
 26934                           
 26935                           ;stkvar	_n @ sp[(-26)+2]
 26936  014126  50E1               	movf	fsr1l,w,c
 26937  014128  0FE8               	addlw	-24
 26938  01412A  6ED9               	movwf	fsr2l,c
 26939  01412C  50E2               	movf	fsr1h,w,c
 26940  01412E  6EDA               	movwf	fsr2h,c
 26941  014130  0EFF               	movlw	255
 26942  014132  22DA               	addwfc	fsr2h,f,c
 26943  014134  006F FF7B FFE6     	movff	postinc2,postinc1
 26944  01413A  006F FF7B FFE6     	movff	postinc2,postinc1
 26945  014140  006F FF7B FFE6     	movff	postinc2,postinc1
 26946  014146  006F FF7B FFE6     	movff	postinc2,postinc1
 26947  01414C  006F FF7B FFE6     	movff	postinc2,postinc1
 26948  014152  006F FF7B FFE6     	movff	postinc2,postinc1
 26949  014158  006F FF7B FFE6     	movff	postinc2,postinc1
 26950  01415E  006F FF7B FFE6     	movff	postinc2,postinc1
 26951  014164  ECFF  F0AD         	call	___aodiv	;wreg free
 26952  014168  52E5               	movf	postdec1,f,c
 26953  01416A  006F FF9C  F04E    	movff	indf1,btemp+23
 26954  014170  52E5               	movf	postdec1,f,c
 26955  014172  006F FF9C  F04D    	movff	indf1,btemp+22
 26956  014178  52E5               	movf	postdec1,f,c
 26957  01417A  006F FF9C  F04C    	movff	indf1,btemp+21
 26958  014180  52E5               	movf	postdec1,f,c
 26959  014182  006F FF9C  F04B    	movff	indf1,btemp+20
 26960  014188  52E5               	movf	postdec1,f,c
 26961  01418A  006F FF9C  F04A    	movff	indf1,btemp+19
 26962  014190  52E5               	movf	postdec1,f,c
 26963  014192  006F FF9C  F049    	movff	indf1,btemp+18
 26964  014198  52E5               	movf	postdec1,f,c
 26965  01419A  006F FF9C  F048    	movff	indf1,btemp+17
 26966  0141A0  52E5               	movf	postdec1,f,c
 26967  0141A2  006F FF9C  F047    	movff	indf1,btemp+16
 26968  0141A8  0EF8               	movlw	248
 26969  0141AA  26E1               	addwf	fsr1l,f,c
 26970  0141AC  0EFF               	movlw	255
 26971  0141AE  22E2               	addwfc	fsr1h,f,c
 26972                           
 26973                           ;stkvar	_n @ sp[(-18)+2]
 26974  0141B0  0EF0               	movlw	-16
 26975  0141B2  0060  F11F  FFE3   	movff	btemp+16,plusw1
 26976  0141B8  0EF1               	movlw	-15
 26977  0141BA  0060  F123  FFE3   	movff	btemp+17,plusw1
 26978  0141C0  0EF2               	movlw	-14
 26979  0141C2  0060  F127  FFE3   	movff	btemp+18,plusw1
 26980  0141C8  0EF3               	movlw	-13
 26981  0141CA  0060  F12B  FFE3   	movff	btemp+19,plusw1
 26982  0141D0  0EF4               	movlw	-12
 26983  0141D2  0060  F12F  FFE3   	movff	btemp+20,plusw1
 26984  0141D8  0EF5               	movlw	-11
 26985  0141DA  0060  F133  FFE3   	movff	btemp+21,plusw1
 26986  0141E0  0EF6               	movlw	-10
 26987  0141E2  0060  F137  FFE3   	movff	btemp+22,plusw1
 26988  0141E8  0EF7               	movlw	-9
 26989  0141EA  0060  F13B  FFE3   	movff	btemp+23,plusw1
 26990  0141F0                     l13143:
 26991                           
 26992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26993                           ;stkvar	_i @ sp[(-18)+10]
 26994  0141F0  0EF9               	movlw	-7
 26995  0141F2  BEE3               	btfsc	plusw1,7,c
 26996  0141F4  D036               	goto	u9190
 26997  0141F6  0EF9               	movlw	-7
 26998  0141F8  50E3               	movf	plusw1,w,c
 26999  0141FA  E104               	bnz	u9150
 27000  0141FC  0EF8               	movlw	-8
 27001  0141FE  04E3               	decf	plusw1,w,c
 27002  014200  A0D8               	btfss	status,0,c
 27003  014202  D02F               	goto	u9190
 27004  014204                     u9150:
 27005                           
 27006                           ;stkvar	_n @ sp[(-18)+2]
 27007  014204  0EF0               	movlw	-16
 27008  014206  50E3               	movf	plusw1,w,c
 27009  014208  E115               	bnz	u9161
 27010  01420A  0EF1               	movlw	-15
 27011  01420C  50E3               	movf	plusw1,w,c
 27012  01420E  E112               	bnz	u9161
 27013  014210  0EF2               	movlw	-14
 27014  014212  50E3               	movf	plusw1,w,c
 27015  014214  E10F               	bnz	u9161
 27016  014216  0EF3               	movlw	-13
 27017  014218  50E3               	movf	plusw1,w,c
 27018  01421A  E10C               	bnz	u9161
 27019  01421C  0EF4               	movlw	-12
 27020  01421E  50E3               	movf	plusw1,w,c
 27021  014220  E109               	bnz	u9161
 27022  014222  0EF5               	movlw	-11
 27023  014224  50E3               	movf	plusw1,w,c
 27024  014226  E106               	bnz	u9161
 27025  014228  0EF6               	movlw	-10
 27026  01422A  50E3               	movf	plusw1,w,c
 27027  01422C  E103               	bnz	u9161
 27028  01422E  0EF7               	movlw	-9
 27029  014230  50E3               	movf	plusw1,w,c
 27030  014232  A4D8               	btfss	status,2,c
 27031  014234                     u9161:
 27032  014234  D6DA               	goto	l13133
 27033                           
 27034                           ;stkvar	_p @ sp[(-18)+16]
 27035  014236  0EFF               	movlw	-1
 27036  014238  BEE3               	btfsc	plusw1,7,c
 27037  01423A  D007               	goto	u9170
 27038  01423C  0EFF               	movlw	-1
 27039  01423E  50E3               	movf	plusw1,w,c
 27040  014240  E103               	bnz	u9171
 27041  014242  0EFE               	movlw	-2
 27042  014244  04E3               	decf	plusw1,w,c
 27043  014246  B0D8               	btfsc	status,0,c
 27044  014248                     u9171:
 27045  014248  D6D0               	goto	l13133
 27046  01424A                     u9170:
 27047                           
 27048                           ;stkvar	_w @ sp[(-18)+14]
 27049  01424A  0EFD               	movlw	-3
 27050  01424C  BEE3               	btfsc	plusw1,7,c
 27051  01424E  D009               	goto	u9190
 27052  014250  0EFD               	movlw	-3
 27053  014252  50E3               	movf	plusw1,w,c
 27054  014254  E104               	bnz	u9180
 27055  014256  0EFC               	movlw	-4
 27056  014258  04E3               	decf	plusw1,w,c
 27057  01425A  A0D8               	btfss	status,0,c
 27058  01425C  D002               	goto	u9190
 27059  01425E                     u9180:
 27060  01425E  B213               	btfsc	_flags^0,1,c
 27061  014260  D6C4               	goto	l13133
 27062  014262                     u9190:
 27063                           
 27064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 27065                           ;stkvar	_s @ sp[(-18)+12]
 27066  014262  0EFA               	movlw	-6
 27067  014264  006F FF8C  F037    	movff	plusw1,btemp
 27068  01426A  0EFB               	movlw	-5
 27069  01426C  50E3               	movf	plusw1,w,c
 27070  01426E  1037               	iorwf	btemp^0,w,c
 27071  014270  A4D8               	btfss	status,2,c
 27072  014272  D002               	goto	u9210
 27073  014274  A413               	btfss	_flags^0,2,c
 27074  014276  D02D               	goto	l13167
 27075  014278                     u9210:
 27076                           
 27077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 27078                           ;stkvar	_i @ sp[(-18)+10]
 27079  014278  50E1               	movf	fsr1l,w,c
 27080  01427A  0FF8               	addlw	-8
 27081  01427C  6ED9               	movwf	fsr2l,c
 27082  01427E  50E2               	movf	fsr1h,w,c
 27083  014280  6EDA               	movwf	fsr2h,c
 27084  014282  0EFF               	movlw	255
 27085  014284  22DA               	addwfc	fsr2h,f,c
 27086  014286  06DE               	decf	postinc2,f,c
 27087  014288  0E00               	movlw	0
 27088  01428A  5ADD               	subwfb	postdec2,f,c
 27089                           
 27090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 27091                           ;stkvar	_s @ sp[(-18)+12]
 27092  01428C  0EFA               	movlw	-6
 27093  01428E  006F FF8C  F037    	movff	plusw1,btemp
 27094  014294  0EFB               	movlw	-5
 27095  014296  50E3               	movf	plusw1,w,c
 27096  014298  1037               	iorwf	btemp^0,w,c
 27097  01429A  A4D8               	btfss	status,2,c
 27098  01429C  D002               	goto	l13163
 27099  01429E  0E2B               	movlw	43
 27100  0142A0  D001               	goto	L50
 27101  0142A2                     l13163:
 27102  0142A2  0E2D               	movlw	45
 27103  0142A4                     L50:
 27104  0142A4  6E41               	movwf	(btemp+10)^0,c
 27105  0142A6  0E00               	movlw	0
 27106  0142A8  6E42               	movwf	(btemp+11)^0,c
 27107                           
 27108                           ;stkvar	_dtoa$5031 @ sp[(-18)+0]
 27109  0142AA  0EEE               	movlw	-18
 27110  0142AC  0060  F107  FFE3   	movff	btemp+10,plusw1
 27111  0142B2  0EEF               	movlw	-17
 27112  0142B4  0060  F10B  FFE3   	movff	btemp+11,plusw1
 27113                           
 27114                           ;stkvar	_dtoa$5031 @ sp[(-18)+0]
 27115                           ;stkvar	_i @ sp[(-18)+10]
 27116  0142BA  0EF8               	movlw	-8
 27117  0142BC  006F FF8C  F042    	movff	plusw1,btemp+11
 27118  0142C2  5042               	movf	(btemp+11)^0,w,c
 27119  0142C4  0FAD               	addlw	low _dbuf
 27120  0142C6  6ED9               	movwf	fsr2l,c
 27121  0142C8  6ADA               	clrf	fsr2h,c
 27122  0142CA  0EEE               	movlw	-18
 27123  0142CC  006F FF8F FFDF     	movff	plusw1,indf2
 27124  0142D2                     l13167:
 27125                           
 27126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 27127                           ;stkvar	_w @ sp[(-18)+14]
 27128  0142D2  0EFC               	movlw	-4
 27129  0142D4  006F FF8F FFE6     	movff	plusw1,postinc1
 27130  0142DA  006F FF8F FFE6     	movff	plusw1,postinc1
 27131                           
 27132                           ;stkvar	_i @ sp[(-20)+10]
 27133  0142E0  0EF6               	movlw	-10
 27134  0142E2  006F FF8C  F042    	movff	plusw1,btemp+11
 27135  0142E8  5042               	movf	(btemp+11)^0,w,c
 27136  0142EA  0FAD               	addlw	low _dbuf
 27137  0142EC  6EE6               	movwf	postinc1,c
 27138                           
 27139                           ;stkvar	_fp @ sp[(-21)+-2]
 27140  0142EE  0EE9               	movlw	-23
 27141  0142F0  006F FF8F FFE6     	movff	plusw1,postinc1
 27142  0142F6  006F FF8F FFE6     	movff	plusw1,postinc1
 27143  0142FC  EC1A  F0BF         	call	_pad	;wreg free
 27144                           
 27145                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 27146  014300  0EE4               	movlw	228
 27147  014302  26E1               	addwf	fsr1l,f,c
 27148  014304  0EFF               	movlw	255
 27149  014306  22E2               	addwfc	fsr1h,f,c
 27150  014308  0012               	return		;funcret
 27151  01430A                     __end_of_dtoa:
 27152                           	opt callstack 0
 27153                           
 27154 ;; *************** function _abs *****************
 27155 ;; Defined at:
 27156 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 27157 ;; Parameters:    Size  Location     Type
 27158 ;;  a               2  [STACK] int 
 27159 ;; Auto vars:     Size  Location     Type
 27160 ;;		None
 27161 ;; Return value:  Size  Location     Type
 27162 ;;                  2  [STACK] int 
 27163 ;; Registers used:
 27164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 27165 ;; Tracked objects:
 27166 ;;		On entry : 0/0
 27167 ;;		On exit  : 0/0
 27168 ;;		Unchanged: 0/0
 27169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27174 ;;Total ram usage:        0 bytes
 27175 ;; Hardware stack levels used:    1
 27176 ;; Hardware stack levels required when called:    3
 27177 ;; This function calls:
 27178 ;;		Nothing
 27179 ;; This function is called by:
 27180 ;;		_dtoa
 27181 ;; This function uses a reentrant model
 27182 ;;
 27183                           
 27184                           	psect	text105
 27185  018F5E                     __ptext105:
 27186                           	opt callstack 0
 27187  018F5E                     _abs:
 27188                           	opt callstack 20
 27189                           
 27190                           ;stkvar	_a @ sp[(0)+-2]
 27191                           
 27192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27193                           ;incstack = 0
 27194  018F5E  0EFF               	movlw	-1
 27195  018F60  BEE3               	btfsc	plusw1,7,c
 27196  018F62  D007               	goto	u4640
 27197  018F64  0EFF               	movlw	-1
 27198  018F66  50E3               	movf	plusw1,w,c
 27199  018F68  E112               	bnz	l8249
 27200  018F6A  0EFE               	movlw	-2
 27201  018F6C  04E3               	decf	plusw1,w,c
 27202  018F6E  B0D8               	btfsc	status,0,c
 27203  018F70  D00E               	goto	l8249
 27204  018F72                     u4640:
 27205                           
 27206                           ;stkvar	_a @ sp[(0)+-2]
 27207  018F72  0EFE               	movlw	-2
 27208  018F74  006F FF8C  F037    	movff	plusw1,btemp
 27209  018F7A  1E37               	comf	btemp^0,f,c
 27210  018F7C  0EFF               	movlw	-1
 27211  018F7E  006F FF8C  F038    	movff	plusw1,btemp+1
 27212  018F84  1E38               	comf	(btemp+1)^0,f,c
 27213  018F86  2A37               	incf	btemp^0,f,c
 27214  018F88  B4D8               	btfsc	status,2,c
 27215  018F8A  2A38               	incf	(btemp+1)^0,f,c
 27216  018F8C  D008               	goto	l3204
 27217  018F8E                     l8249:
 27218                           
 27219                           ;stkvar	_a @ sp[(0)+-2]
 27220  018F8E  0EFE               	movlw	-2
 27221  018F90  006F FF8C  F037    	movff	plusw1,btemp
 27222  018F96  0EFF               	movlw	-1
 27223  018F98  006F FF8C  F038    	movff	plusw1,btemp+1
 27224  018F9E                     l3204:
 27225                           
 27226                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 27227  018F9E  52E5               	movf	postdec1,f,c
 27228  018FA0  52E5               	movf	postdec1,f,c
 27229  018FA2  0012               	return		;funcret
 27230  018FA4                     __end_of_abs:
 27231                           	opt callstack 0
 27232                           
 27233 ;; *************** function ___aomod *****************
 27234 ;; Defined at:
 27235 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 27236 ;; Parameters:    Size  Location     Type
 27237 ;;  dividend        8  [STACK] long long 
 27238 ;;  divisor         8  [STACK] long long 
 27239 ;; Auto vars:     Size  Location     Type
 27240 ;;  sign            1  [STACK] unsigned char 
 27241 ;;  counter         1  [STACK] unsigned char 
 27242 ;; Return value:  Size  Location     Type
 27243 ;;                  8  [STACK] long long 
 27244 ;; Registers used:
 27245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27246 ;; Tracked objects:
 27247 ;;		On entry : 0/0
 27248 ;;		On exit  : 0/0
 27249 ;;		Unchanged: 0/0
 27250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27255 ;;Total ram usage:        0 bytes
 27256 ;; Hardware stack levels used:    1
 27257 ;; Hardware stack levels required when called:    3
 27258 ;; This function calls:
 27259 ;;		Nothing
 27260 ;; This function is called by:
 27261 ;;		_dtoa
 27262 ;; This function uses a reentrant model
 27263 ;;
 27264                           
 27265                           	psect	text106
 27266  0165A0                     __ptext106:
 27267                           	opt callstack 0
 27268  0165A0                     ___aomod:
 27269                           	opt callstack 0
 27270                           
 27271                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 27272  0165A0  52E6               	movf	postinc1,f,c
 27273  0165A2  52E6               	movf	postinc1,f,c
 27274                           
 27275                           ;stkvar	_sign @ sp[(-2)+0]
 27276                           
 27277                           ;incstack = 0
 27278  0165A4  0EFE               	movlw	-2
 27279  0165A6  6AE3               	clrf	plusw1,c
 27280                           
 27281                           ;stkvar	_dividend @ sp[(-2)+-8]
 27282  0165A8  0EFD               	movlw	-3
 27283  0165AA  AEE3               	btfss	plusw1,7,c
 27284  0165AC  D028               	goto	l8331
 27285                           
 27286                           ;stkvar	_dividend @ sp[(-2)+-8]
 27287                           ;stkvar	_dividend @ sp[(-2)+-8]
 27288  0165AE  0EF6               	movlw	-10
 27289  0165B0  6CE3               	negf	plusw1,c
 27290  0165B2  0EF7               	movlw	-9
 27291  0165B4  1EE3               	comf	plusw1,f,c
 27292  0165B6  0EF8               	movlw	-8
 27293  0165B8  1EE3               	comf	plusw1,f,c
 27294  0165BA  0EF9               	movlw	-7
 27295  0165BC  1EE3               	comf	plusw1,f,c
 27296  0165BE  0EFA               	movlw	-6
 27297  0165C0  1EE3               	comf	plusw1,f,c
 27298  0165C2  0EFB               	movlw	-5
 27299  0165C4  1EE3               	comf	plusw1,f,c
 27300  0165C6  0EFC               	movlw	-4
 27301  0165C8  1EE3               	comf	plusw1,f,c
 27302  0165CA  0EFD               	movlw	-3
 27303  0165CC  1EE3               	comf	plusw1,f,c
 27304  0165CE  E314               	bnc	u4870
 27305  0165D0  0EF7               	movlw	-9
 27306  0165D2  2AE3               	incf	plusw1,f,c
 27307  0165D4  E311               	bnc	u4870
 27308  0165D6  0EF8               	movlw	-8
 27309  0165D8  2AE3               	incf	plusw1,f,c
 27310  0165DA  E30E               	bnc	u4870
 27311  0165DC  0EF9               	movlw	-7
 27312  0165DE  2AE3               	incf	plusw1,f,c
 27313  0165E0  E30B               	bnc	u4870
 27314  0165E2  0EFA               	movlw	-6
 27315  0165E4  2AE3               	incf	plusw1,f,c
 27316  0165E6  E308               	bnc	u4870
 27317  0165E8  0EFB               	movlw	-5
 27318  0165EA  2AE3               	incf	plusw1,f,c
 27319  0165EC  E305               	bnc	u4870
 27320  0165EE  0EFC               	movlw	-4
 27321  0165F0  2AE3               	incf	plusw1,f,c
 27322  0165F2  E302               	bnc	u4870
 27323  0165F4  0EFD               	movlw	-3
 27324  0165F6  2AE3               	incf	plusw1,f,c
 27325  0165F8                     u4870:
 27326                           
 27327                           ;stkvar	_sign @ sp[(-2)+0]
 27328  0165F8  0EFE               	movlw	-2
 27329  0165FA  6AE3               	clrf	plusw1,c
 27330  0165FC  2AE3               	incf	plusw1,f,c
 27331  0165FE                     l8331:
 27332                           
 27333                           ;stkvar	_divisor @ sp[(-2)+-16]
 27334  0165FE  0EF5               	movlw	-11
 27335  016600  AEE3               	btfss	plusw1,7,c
 27336  016602  D025               	goto	u4890
 27337                           
 27338                           ;stkvar	_divisor @ sp[(-2)+-16]
 27339                           ;stkvar	_divisor @ sp[(-2)+-16]
 27340  016604  0EEE               	movlw	-18
 27341  016606  6CE3               	negf	plusw1,c
 27342  016608  0EEF               	movlw	-17
 27343  01660A  1EE3               	comf	plusw1,f,c
 27344  01660C  0EF0               	movlw	-16
 27345  01660E  1EE3               	comf	plusw1,f,c
 27346  016610  0EF1               	movlw	-15
 27347  016612  1EE3               	comf	plusw1,f,c
 27348  016614  0EF2               	movlw	-14
 27349  016616  1EE3               	comf	plusw1,f,c
 27350  016618  0EF3               	movlw	-13
 27351  01661A  1EE3               	comf	plusw1,f,c
 27352  01661C  0EF4               	movlw	-12
 27353  01661E  1EE3               	comf	plusw1,f,c
 27354  016620  0EF5               	movlw	-11
 27355  016622  1EE3               	comf	plusw1,f,c
 27356  016624  E314               	bnc	u4890
 27357  016626  0EEF               	movlw	-17
 27358  016628  2AE3               	incf	plusw1,f,c
 27359  01662A  E311               	bnc	u4890
 27360  01662C  0EF0               	movlw	-16
 27361  01662E  2AE3               	incf	plusw1,f,c
 27362  016630  E30E               	bnc	u4890
 27363  016632  0EF1               	movlw	-15
 27364  016634  2AE3               	incf	plusw1,f,c
 27365  016636  E30B               	bnc	u4890
 27366  016638  0EF2               	movlw	-14
 27367  01663A  2AE3               	incf	plusw1,f,c
 27368  01663C  E308               	bnc	u4890
 27369  01663E  0EF3               	movlw	-13
 27370  016640  2AE3               	incf	plusw1,f,c
 27371  016642  E305               	bnc	u4890
 27372  016644  0EF4               	movlw	-12
 27373  016646  2AE3               	incf	plusw1,f,c
 27374  016648  E302               	bnc	u4890
 27375  01664A  0EF5               	movlw	-11
 27376  01664C  2AE3               	incf	plusw1,f,c
 27377  01664E                     u4890:
 27378                           
 27379                           ;stkvar	_divisor @ sp[(-2)+-16]
 27380  01664E  0EEE               	movlw	-18
 27381  016650  50E3               	movf	plusw1,w,c
 27382  016652  E116               	bnz	u4900
 27383  016654  0EEF               	movlw	-17
 27384  016656  50E3               	movf	plusw1,w,c
 27385  016658  E113               	bnz	u4900
 27386  01665A  0EF0               	movlw	-16
 27387  01665C  50E3               	movf	plusw1,w,c
 27388  01665E  E110               	bnz	u4900
 27389  016660  0EF1               	movlw	-15
 27390  016662  50E3               	movf	plusw1,w,c
 27391  016664  E10D               	bnz	u4900
 27392  016666  0EF2               	movlw	-14
 27393  016668  50E3               	movf	plusw1,w,c
 27394  01666A  E10A               	bnz	u4900
 27395  01666C  0EF3               	movlw	-13
 27396  01666E  50E3               	movf	plusw1,w,c
 27397  016670  E107               	bnz	u4900
 27398  016672  0EF4               	movlw	-12
 27399  016674  50E3               	movf	plusw1,w,c
 27400  016676  E104               	bnz	u4900
 27401  016678  0EF5               	movlw	-11
 27402  01667A  50E3               	movf	plusw1,w,c
 27403  01667C  B4D8               	btfsc	status,2,c
 27404  01667E  D075               	goto	u4930
 27405  016680                     u4900:
 27406                           
 27407                           ;stkvar	_counter @ sp[(-2)+1]
 27408  016680  0EFF               	movlw	-1
 27409  016682  6AE3               	clrf	plusw1,c
 27410  016684  D012               	goto	L51
 27411  016686                     l8339:
 27412                           
 27413                           ;stkvar	_divisor @ sp[(-2)+-16]
 27414  016686  90D8               	bcf	status,0,c
 27415  016688  0EEE               	movlw	-18
 27416  01668A  36E3               	rlcf	plusw1,f,c
 27417  01668C  0EEF               	movlw	-17
 27418  01668E  36E3               	rlcf	plusw1,f,c
 27419  016690  0EF0               	movlw	-16
 27420  016692  36E3               	rlcf	plusw1,f,c
 27421  016694  0EF1               	movlw	-15
 27422  016696  36E3               	rlcf	plusw1,f,c
 27423  016698  0EF2               	movlw	-14
 27424  01669A  36E3               	rlcf	plusw1,f,c
 27425  01669C  0EF3               	movlw	-13
 27426  01669E  36E3               	rlcf	plusw1,f,c
 27427  0166A0  0EF4               	movlw	-12
 27428  0166A2  36E3               	rlcf	plusw1,f,c
 27429  0166A4  0EF5               	movlw	-11
 27430  0166A6  36E3               	rlcf	plusw1,f,c
 27431                           
 27432                           ;stkvar	_counter @ sp[(-2)+1]
 27433  0166A8  0EFF               	movlw	-1
 27434  0166AA                     L51:
 27435  0166AA  2AE3               	incf	plusw1,f,c
 27436                           
 27437                           ;stkvar	_divisor @ sp[(-2)+-16]
 27438  0166AC  0EF5               	movlw	-11
 27439  0166AE  AEE3               	btfss	plusw1,7,c
 27440  0166B0  D7EA               	goto	l8339
 27441  0166B2                     u4910:
 27442                           
 27443                           ;stkvar	_divisor @ sp[(-2)+-16]
 27444                           ;stkvar	_dividend @ sp[(-2)+-8]
 27445  0166B2  50E1               	movf	fsr1l,w,c
 27446  0166B4  0FF6               	addlw	-10
 27447  0166B6  6ED9               	movwf	fsr2l,c
 27448  0166B8  50E2               	movf	fsr1h,w,c
 27449  0166BA  6EDA               	movwf	fsr2h,c
 27450  0166BC  0EFF               	movlw	255
 27451  0166BE  22DA               	addwfc	fsr2h,f,c
 27452  0166C0  0EEE               	movlw	-18
 27453  0166C2  50E3               	movf	plusw1,w,c
 27454  0166C4  5CDE               	subwf	postinc2,w,c
 27455  0166C6  0EEF               	movlw	-17
 27456  0166C8  50E3               	movf	plusw1,w,c
 27457  0166CA  58DE               	subwfb	postinc2,w,c
 27458  0166CC  0EF0               	movlw	-16
 27459  0166CE  50E3               	movf	plusw1,w,c
 27460  0166D0  58DE               	subwfb	postinc2,w,c
 27461  0166D2  0EF1               	movlw	-15
 27462  0166D4  50E3               	movf	plusw1,w,c
 27463  0166D6  58DE               	subwfb	postinc2,w,c
 27464  0166D8  0EF2               	movlw	-14
 27465  0166DA  50E3               	movf	plusw1,w,c
 27466  0166DC  58DE               	subwfb	postinc2,w,c
 27467  0166DE  0EF3               	movlw	-13
 27468  0166E0  50E3               	movf	plusw1,w,c
 27469  0166E2  58DE               	subwfb	postinc2,w,c
 27470  0166E4  0EF4               	movlw	-12
 27471  0166E6  50E3               	movf	plusw1,w,c
 27472  0166E8  58DE               	subwfb	postinc2,w,c
 27473  0166EA  0EF5               	movlw	-11
 27474  0166EC  50E3               	movf	plusw1,w,c
 27475  0166EE  58DE               	subwfb	postinc2,w,c
 27476  0166F0  A0D8               	btfss	status,0,c
 27477  0166F2  D01F               	goto	l8347
 27478                           
 27479                           ;stkvar	_divisor @ sp[(-2)+-16]
 27480                           ;stkvar	_dividend @ sp[(-2)+-8]
 27481  0166F4  50E1               	movf	fsr1l,w,c
 27482  0166F6  0FF6               	addlw	-10
 27483  0166F8  6ED9               	movwf	fsr2l,c
 27484  0166FA  50E2               	movf	fsr1h,w,c
 27485  0166FC  6EDA               	movwf	fsr2h,c
 27486  0166FE  0EFF               	movlw	255
 27487  016700  22DA               	addwfc	fsr2h,f,c
 27488  016702  0EEE               	movlw	-18
 27489  016704  50E3               	movf	plusw1,w,c
 27490  016706  5EDE               	subwf	postinc2,f,c
 27491  016708  0EEF               	movlw	-17
 27492  01670A  50E3               	movf	plusw1,w,c
 27493  01670C  5ADE               	subwfb	postinc2,f,c
 27494  01670E  0EF0               	movlw	-16
 27495  016710  50E3               	movf	plusw1,w,c
 27496  016712  5ADE               	subwfb	postinc2,f,c
 27497  016714  0EF1               	movlw	-15
 27498  016716  50E3               	movf	plusw1,w,c
 27499  016718  5ADE               	subwfb	postinc2,f,c
 27500  01671A  0EF2               	movlw	-14
 27501  01671C  50E3               	movf	plusw1,w,c
 27502  01671E  5ADE               	subwfb	postinc2,f,c
 27503  016720  0EF3               	movlw	-13
 27504  016722  50E3               	movf	plusw1,w,c
 27505  016724  5ADE               	subwfb	postinc2,f,c
 27506  016726  0EF4               	movlw	-12
 27507  016728  50E3               	movf	plusw1,w,c
 27508  01672A  5ADE               	subwfb	postinc2,f,c
 27509  01672C  0EF5               	movlw	-11
 27510  01672E  50E3               	movf	plusw1,w,c
 27511  016730  5ADE               	subwfb	postinc2,f,c
 27512  016732                     l8347:
 27513                           
 27514                           ;stkvar	_divisor @ sp[(-2)+-16]
 27515  016732  90D8               	bcf	status,0,c
 27516  016734  0EF5               	movlw	-11
 27517  016736  32E3               	rrcf	plusw1,f,c
 27518  016738  0EF4               	movlw	-12
 27519  01673A  32E3               	rrcf	plusw1,f,c
 27520  01673C  0EF3               	movlw	-13
 27521  01673E  32E3               	rrcf	plusw1,f,c
 27522  016740  0EF2               	movlw	-14
 27523  016742  32E3               	rrcf	plusw1,f,c
 27524  016744  0EF1               	movlw	-15
 27525  016746  32E3               	rrcf	plusw1,f,c
 27526  016748  0EF0               	movlw	-16
 27527  01674A  32E3               	rrcf	plusw1,f,c
 27528  01674C  0EEF               	movlw	-17
 27529  01674E  32E3               	rrcf	plusw1,f,c
 27530  016750  0EEE               	movlw	-18
 27531  016752  32E3               	rrcf	plusw1,f,c
 27532                           
 27533                           ;stkvar	_counter @ sp[(-2)+1]
 27534  016754  0EFF               	movlw	-1
 27535  016756  50E3               	movf	plusw1,w,c
 27536  016758  6E37               	movwf	btemp^0,c
 27537  01675A  0E01               	movlw	1
 27538  01675C  5E37               	subwf	btemp^0,f,c
 27539  01675E  0EFF               	movlw	-1
 27540  016760  0060  F0DF  FFE3   	movff	btemp,plusw1
 27541  016766  A4D8               	btfss	status,2,c
 27542  016768  D7A4               	goto	u4910
 27543  01676A                     u4930:
 27544                           
 27545                           ;stkvar	_sign @ sp[(-2)+0]
 27546  01676A  0EFE               	movlw	-2
 27547  01676C  50E3               	movf	plusw1,w,c
 27548  01676E  B4D8               	btfsc	status,2,c
 27549  016770  D025               	goto	u4950
 27550                           
 27551                           ;stkvar	_dividend @ sp[(-2)+-8]
 27552                           ;stkvar	_dividend @ sp[(-2)+-8]
 27553  016772  0EF6               	movlw	-10
 27554  016774  6CE3               	negf	plusw1,c
 27555  016776  0EF7               	movlw	-9
 27556  016778  1EE3               	comf	plusw1,f,c
 27557  01677A  0EF8               	movlw	-8
 27558  01677C  1EE3               	comf	plusw1,f,c
 27559  01677E  0EF9               	movlw	-7
 27560  016780  1EE3               	comf	plusw1,f,c
 27561  016782  0EFA               	movlw	-6
 27562  016784  1EE3               	comf	plusw1,f,c
 27563  016786  0EFB               	movlw	-5
 27564  016788  1EE3               	comf	plusw1,f,c
 27565  01678A  0EFC               	movlw	-4
 27566  01678C  1EE3               	comf	plusw1,f,c
 27567  01678E  0EFD               	movlw	-3
 27568  016790  1EE3               	comf	plusw1,f,c
 27569  016792  E314               	bnc	u4950
 27570  016794  0EF7               	movlw	-9
 27571  016796  2AE3               	incf	plusw1,f,c
 27572  016798  E311               	bnc	u4950
 27573  01679A  0EF8               	movlw	-8
 27574  01679C  2AE3               	incf	plusw1,f,c
 27575  01679E  E30E               	bnc	u4950
 27576  0167A0  0EF9               	movlw	-7
 27577  0167A2  2AE3               	incf	plusw1,f,c
 27578  0167A4  E30B               	bnc	u4950
 27579  0167A6  0EFA               	movlw	-6
 27580  0167A8  2AE3               	incf	plusw1,f,c
 27581  0167AA  E308               	bnc	u4950
 27582  0167AC  0EFB               	movlw	-5
 27583  0167AE  2AE3               	incf	plusw1,f,c
 27584  0167B0  E305               	bnc	u4950
 27585  0167B2  0EFC               	movlw	-4
 27586  0167B4  2AE3               	incf	plusw1,f,c
 27587  0167B6  E302               	bnc	u4950
 27588  0167B8  0EFD               	movlw	-3
 27589  0167BA  2AE3               	incf	plusw1,f,c
 27590  0167BC                     u4950:
 27591                           
 27592                           ;stkvar	_dividend @ sp[(-2)+-8]
 27593  0167BC  0EF6               	movlw	246
 27594  0167BE  24E1               	addwf	fsr1l,w,c
 27595  0167C0  6ED9               	movwf	fsr2l,c
 27596  0167C2  0EFF               	movlw	255
 27597  0167C4  20E2               	addwfc	fsr1h,w,c
 27598  0167C6  6EDA               	movwf	fsr2h,c
 27599                           
 27600                           ;stkvar	?___aomod @ sp[(-2)+-8]
 27601  0167C8  0E08               	movlw	8
 27602  0167CA  6E37               	movwf	btemp^0,c
 27603  0167CC  0EF6               	movlw	-10
 27604  0167CE                     us496999:
 27605  0167CE  006F FF7B FFE3     	movff	postinc2,plusw1
 27606  0167D4  28E8               	incf	wreg,w,c
 27607  0167D6  2E37               	decfsz	btemp^0,f,c
 27608  0167D8  D7FA               	bra	us496999
 27609                           
 27610                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 27611  0167DA  52E5               	movf	postdec1,f,c
 27612  0167DC  52E5               	movf	postdec1,f,c
 27613  0167DE  0012               	return		;funcret
 27614  0167E0                     __end_of___aomod:
 27615                           	opt callstack 0
 27616                           
 27617 ;; *************** function ___aodiv *****************
 27618 ;; Defined at:
 27619 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 27620 ;; Parameters:    Size  Location     Type
 27621 ;;  dividend        8  [STACK] long long 
 27622 ;;  divisor         8  [STACK] long long 
 27623 ;; Auto vars:     Size  Location     Type
 27624 ;;  quotient        8  [STACK] long long 
 27625 ;;  sign            1  [STACK] unsigned char 
 27626 ;;  counter         1  [STACK] unsigned char 
 27627 ;; Return value:  Size  Location     Type
 27628 ;;                  8  [STACK] long long 
 27629 ;; Registers used:
 27630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27631 ;; Tracked objects:
 27632 ;;		On entry : 0/0
 27633 ;;		On exit  : 0/0
 27634 ;;		Unchanged: 0/0
 27635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27640 ;;Total ram usage:        0 bytes
 27641 ;; Hardware stack levels used:    1
 27642 ;; Hardware stack levels required when called:    3
 27643 ;; This function calls:
 27644 ;;		Nothing
 27645 ;; This function is called by:
 27646 ;;		_dtoa
 27647 ;; This function uses a reentrant model
 27648 ;;
 27649                           
 27650                           	psect	text107
 27651  015BFE                     __ptext107:
 27652                           	opt callstack 0
 27653  015BFE                     ___aodiv:
 27654                           	opt callstack 0
 27655                           
 27656                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 27657  015BFE  0E0A               	movlw	10
 27658  015C00  26E1               	addwf	fsr1l,f,c
 27659  015C02  0E00               	movlw	0
 27660  015C04  22E2               	addwfc	fsr1h,f,c
 27661                           
 27662                           ;stkvar	_sign @ sp[(-10)+8]
 27663                           
 27664                           ;incstack = 0
 27665  015C06  0EFE               	movlw	-2
 27666  015C08  6AE3               	clrf	plusw1,c
 27667                           
 27668                           ;stkvar	_divisor @ sp[(-10)+-16]
 27669  015C0A  0EED               	movlw	-19
 27670  015C0C  AEE3               	btfss	plusw1,7,c
 27671  015C0E  D028               	goto	l8287
 27672                           
 27673                           ;stkvar	_divisor @ sp[(-10)+-16]
 27674                           ;stkvar	_divisor @ sp[(-10)+-16]
 27675  015C10  0EE6               	movlw	-26
 27676  015C12  6CE3               	negf	plusw1,c
 27677  015C14  0EE7               	movlw	-25
 27678  015C16  1EE3               	comf	plusw1,f,c
 27679  015C18  0EE8               	movlw	-24
 27680  015C1A  1EE3               	comf	plusw1,f,c
 27681  015C1C  0EE9               	movlw	-23
 27682  015C1E  1EE3               	comf	plusw1,f,c
 27683  015C20  0EEA               	movlw	-22
 27684  015C22  1EE3               	comf	plusw1,f,c
 27685  015C24  0EEB               	movlw	-21
 27686  015C26  1EE3               	comf	plusw1,f,c
 27687  015C28  0EEC               	movlw	-20
 27688  015C2A  1EE3               	comf	plusw1,f,c
 27689  015C2C  0EED               	movlw	-19
 27690  015C2E  1EE3               	comf	plusw1,f,c
 27691  015C30  E314               	bnc	u4750
 27692  015C32  0EE7               	movlw	-25
 27693  015C34  2AE3               	incf	plusw1,f,c
 27694  015C36  E311               	bnc	u4750
 27695  015C38  0EE8               	movlw	-24
 27696  015C3A  2AE3               	incf	plusw1,f,c
 27697  015C3C  E30E               	bnc	u4750
 27698  015C3E  0EE9               	movlw	-23
 27699  015C40  2AE3               	incf	plusw1,f,c
 27700  015C42  E30B               	bnc	u4750
 27701  015C44  0EEA               	movlw	-22
 27702  015C46  2AE3               	incf	plusw1,f,c
 27703  015C48  E308               	bnc	u4750
 27704  015C4A  0EEB               	movlw	-21
 27705  015C4C  2AE3               	incf	plusw1,f,c
 27706  015C4E  E305               	bnc	u4750
 27707  015C50  0EEC               	movlw	-20
 27708  015C52  2AE3               	incf	plusw1,f,c
 27709  015C54  E302               	bnc	u4750
 27710  015C56  0EED               	movlw	-19
 27711  015C58  2AE3               	incf	plusw1,f,c
 27712  015C5A                     u4750:
 27713                           
 27714                           ;stkvar	_sign @ sp[(-10)+8]
 27715  015C5A  0EFE               	movlw	-2
 27716  015C5C  6AE3               	clrf	plusw1,c
 27717  015C5E  2AE3               	incf	plusw1,f,c
 27718  015C60                     l8287:
 27719                           
 27720                           ;stkvar	_dividend @ sp[(-10)+-8]
 27721  015C60  0EF5               	movlw	-11
 27722  015C62  AEE3               	btfss	plusw1,7,c
 27723  015C64  D027               	goto	l8293
 27724                           
 27725                           ;stkvar	_dividend @ sp[(-10)+-8]
 27726                           ;stkvar	_dividend @ sp[(-10)+-8]
 27727  015C66  0EEE               	movlw	-18
 27728  015C68  6CE3               	negf	plusw1,c
 27729  015C6A  0EEF               	movlw	-17
 27730  015C6C  1EE3               	comf	plusw1,f,c
 27731  015C6E  0EF0               	movlw	-16
 27732  015C70  1EE3               	comf	plusw1,f,c
 27733  015C72  0EF1               	movlw	-15
 27734  015C74  1EE3               	comf	plusw1,f,c
 27735  015C76  0EF2               	movlw	-14
 27736  015C78  1EE3               	comf	plusw1,f,c
 27737  015C7A  0EF3               	movlw	-13
 27738  015C7C  1EE3               	comf	plusw1,f,c
 27739  015C7E  0EF4               	movlw	-12
 27740  015C80  1EE3               	comf	plusw1,f,c
 27741  015C82  0EF5               	movlw	-11
 27742  015C84  1EE3               	comf	plusw1,f,c
 27743  015C86  E314               	bnc	u4770
 27744  015C88  0EEF               	movlw	-17
 27745  015C8A  2AE3               	incf	plusw1,f,c
 27746  015C8C  E311               	bnc	u4770
 27747  015C8E  0EF0               	movlw	-16
 27748  015C90  2AE3               	incf	plusw1,f,c
 27749  015C92  E30E               	bnc	u4770
 27750  015C94  0EF1               	movlw	-15
 27751  015C96  2AE3               	incf	plusw1,f,c
 27752  015C98  E30B               	bnc	u4770
 27753  015C9A  0EF2               	movlw	-14
 27754  015C9C  2AE3               	incf	plusw1,f,c
 27755  015C9E  E308               	bnc	u4770
 27756  015CA0  0EF3               	movlw	-13
 27757  015CA2  2AE3               	incf	plusw1,f,c
 27758  015CA4  E305               	bnc	u4770
 27759  015CA6  0EF4               	movlw	-12
 27760  015CA8  2AE3               	incf	plusw1,f,c
 27761  015CAA  E302               	bnc	u4770
 27762  015CAC  0EF5               	movlw	-11
 27763  015CAE  2AE3               	incf	plusw1,f,c
 27764  015CB0                     u4770:
 27765                           
 27766                           ;stkvar	_sign @ sp[(-10)+8]
 27767  015CB0  0EFE               	movlw	-2
 27768  015CB2  70E3               	btg	plusw1,0,c
 27769  015CB4                     l8293:
 27770                           
 27771                           ;stkvar	_quotient @ sp[(-10)+0]
 27772  015CB4  0E07               	movlw	7
 27773  015CB6  6E37               	movwf	btemp^0,c
 27774  015CB8  0EF6               	movlw	-10
 27775  015CBA                     u4781:
 27776  015CBA  6AE3               	clrf	plusw1,c
 27777  015CBC  2AE8               	incf	wreg,f,c
 27778  015CBE  0637               	decf	btemp^0,f,c
 27779  015CC0  E2FC               	bc	u4781
 27780                           
 27781                           ;stkvar	_divisor @ sp[(-10)+-16]
 27782  015CC2  0EE6               	movlw	-26
 27783  015CC4  50E3               	movf	plusw1,w,c
 27784  015CC6  E116               	bnz	u4790
 27785  015CC8  0EE7               	movlw	-25
 27786  015CCA  50E3               	movf	plusw1,w,c
 27787  015CCC  E113               	bnz	u4790
 27788  015CCE  0EE8               	movlw	-24
 27789  015CD0  50E3               	movf	plusw1,w,c
 27790  015CD2  E110               	bnz	u4790
 27791  015CD4  0EE9               	movlw	-23
 27792  015CD6  50E3               	movf	plusw1,w,c
 27793  015CD8  E10D               	bnz	u4790
 27794  015CDA  0EEA               	movlw	-22
 27795  015CDC  50E3               	movf	plusw1,w,c
 27796  015CDE  E10A               	bnz	u4790
 27797  015CE0  0EEB               	movlw	-21
 27798  015CE2  50E3               	movf	plusw1,w,c
 27799  015CE4  E107               	bnz	u4790
 27800  015CE6  0EEC               	movlw	-20
 27801  015CE8  50E3               	movf	plusw1,w,c
 27802  015CEA  E104               	bnz	u4790
 27803  015CEC  0EED               	movlw	-19
 27804  015CEE  50E3               	movf	plusw1,w,c
 27805  015CF0  B4D8               	btfsc	status,2,c
 27806  015CF2  D088               	goto	u4820
 27807  015CF4                     u4790:
 27808                           
 27809                           ;stkvar	_counter @ sp[(-10)+9]
 27810  015CF4  0EFF               	movlw	-1
 27811  015CF6  6AE3               	clrf	plusw1,c
 27812  015CF8  D012               	goto	L52
 27813  015CFA                     l8299:
 27814                           
 27815                           ;stkvar	_divisor @ sp[(-10)+-16]
 27816  015CFA  90D8               	bcf	status,0,c
 27817  015CFC  0EE6               	movlw	-26
 27818  015CFE  36E3               	rlcf	plusw1,f,c
 27819  015D00  0EE7               	movlw	-25
 27820  015D02  36E3               	rlcf	plusw1,f,c
 27821  015D04  0EE8               	movlw	-24
 27822  015D06  36E3               	rlcf	plusw1,f,c
 27823  015D08  0EE9               	movlw	-23
 27824  015D0A  36E3               	rlcf	plusw1,f,c
 27825  015D0C  0EEA               	movlw	-22
 27826  015D0E  36E3               	rlcf	plusw1,f,c
 27827  015D10  0EEB               	movlw	-21
 27828  015D12  36E3               	rlcf	plusw1,f,c
 27829  015D14  0EEC               	movlw	-20
 27830  015D16  36E3               	rlcf	plusw1,f,c
 27831  015D18  0EED               	movlw	-19
 27832  015D1A  36E3               	rlcf	plusw1,f,c
 27833                           
 27834                           ;stkvar	_counter @ sp[(-10)+9]
 27835  015D1C  0EFF               	movlw	-1
 27836  015D1E                     L52:
 27837  015D1E  2AE3               	incf	plusw1,f,c
 27838                           
 27839                           ;stkvar	_divisor @ sp[(-10)+-16]
 27840  015D20  0EED               	movlw	-19
 27841  015D22  AEE3               	btfss	plusw1,7,c
 27842  015D24  D7EA               	goto	l8299
 27843  015D26                     u4800:
 27844                           
 27845                           ;stkvar	_quotient @ sp[(-10)+0]
 27846  015D26  90D8               	bcf	status,0,c
 27847  015D28  0EF6               	movlw	-10
 27848  015D2A  36E3               	rlcf	plusw1,f,c
 27849  015D2C  0EF7               	movlw	-9
 27850  015D2E  36E3               	rlcf	plusw1,f,c
 27851  015D30  0EF8               	movlw	-8
 27852  015D32  36E3               	rlcf	plusw1,f,c
 27853  015D34  0EF9               	movlw	-7
 27854  015D36  36E3               	rlcf	plusw1,f,c
 27855  015D38  0EFA               	movlw	-6
 27856  015D3A  36E3               	rlcf	plusw1,f,c
 27857  015D3C  0EFB               	movlw	-5
 27858  015D3E  36E3               	rlcf	plusw1,f,c
 27859  015D40  0EFC               	movlw	-4
 27860  015D42  36E3               	rlcf	plusw1,f,c
 27861  015D44  0EFD               	movlw	-3
 27862  015D46  36E3               	rlcf	plusw1,f,c
 27863                           
 27864                           ;stkvar	_divisor @ sp[(-10)+-16]
 27865                           ;stkvar	_dividend @ sp[(-10)+-8]
 27866  015D48  50E1               	movf	fsr1l,w,c
 27867  015D4A  0FEE               	addlw	-18
 27868  015D4C  6ED9               	movwf	fsr2l,c
 27869  015D4E  50E2               	movf	fsr1h,w,c
 27870  015D50  6EDA               	movwf	fsr2h,c
 27871  015D52  0EFF               	movlw	255
 27872  015D54  22DA               	addwfc	fsr2h,f,c
 27873  015D56  0EE6               	movlw	-26
 27874  015D58  50E3               	movf	plusw1,w,c
 27875  015D5A  5CDE               	subwf	postinc2,w,c
 27876  015D5C  0EE7               	movlw	-25
 27877  015D5E  50E3               	movf	plusw1,w,c
 27878  015D60  58DE               	subwfb	postinc2,w,c
 27879  015D62  0EE8               	movlw	-24
 27880  015D64  50E3               	movf	plusw1,w,c
 27881  015D66  58DE               	subwfb	postinc2,w,c
 27882  015D68  0EE9               	movlw	-23
 27883  015D6A  50E3               	movf	plusw1,w,c
 27884  015D6C  58DE               	subwfb	postinc2,w,c
 27885  015D6E  0EEA               	movlw	-22
 27886  015D70  50E3               	movf	plusw1,w,c
 27887  015D72  58DE               	subwfb	postinc2,w,c
 27888  015D74  0EEB               	movlw	-21
 27889  015D76  50E3               	movf	plusw1,w,c
 27890  015D78  58DE               	subwfb	postinc2,w,c
 27891  015D7A  0EEC               	movlw	-20
 27892  015D7C  50E3               	movf	plusw1,w,c
 27893  015D7E  58DE               	subwfb	postinc2,w,c
 27894  015D80  0EED               	movlw	-19
 27895  015D82  50E3               	movf	plusw1,w,c
 27896  015D84  58DE               	subwfb	postinc2,w,c
 27897  015D86  A0D8               	btfss	status,0,c
 27898  015D88  D021               	goto	l8311
 27899                           
 27900                           ;stkvar	_divisor @ sp[(-10)+-16]
 27901                           ;stkvar	_dividend @ sp[(-10)+-8]
 27902  015D8A  50E1               	movf	fsr1l,w,c
 27903  015D8C  0FEE               	addlw	-18
 27904  015D8E  6ED9               	movwf	fsr2l,c
 27905  015D90  50E2               	movf	fsr1h,w,c
 27906  015D92  6EDA               	movwf	fsr2h,c
 27907  015D94  0EFF               	movlw	255
 27908  015D96  22DA               	addwfc	fsr2h,f,c
 27909  015D98  0EE6               	movlw	-26
 27910  015D9A  50E3               	movf	plusw1,w,c
 27911  015D9C  5EDE               	subwf	postinc2,f,c
 27912  015D9E  0EE7               	movlw	-25
 27913  015DA0  50E3               	movf	plusw1,w,c
 27914  015DA2  5ADE               	subwfb	postinc2,f,c
 27915  015DA4  0EE8               	movlw	-24
 27916  015DA6  50E3               	movf	plusw1,w,c
 27917  015DA8  5ADE               	subwfb	postinc2,f,c
 27918  015DAA  0EE9               	movlw	-23
 27919  015DAC  50E3               	movf	plusw1,w,c
 27920  015DAE  5ADE               	subwfb	postinc2,f,c
 27921  015DB0  0EEA               	movlw	-22
 27922  015DB2  50E3               	movf	plusw1,w,c
 27923  015DB4  5ADE               	subwfb	postinc2,f,c
 27924  015DB6  0EEB               	movlw	-21
 27925  015DB8  50E3               	movf	plusw1,w,c
 27926  015DBA  5ADE               	subwfb	postinc2,f,c
 27927  015DBC  0EEC               	movlw	-20
 27928  015DBE  50E3               	movf	plusw1,w,c
 27929  015DC0  5ADE               	subwfb	postinc2,f,c
 27930  015DC2  0EED               	movlw	-19
 27931  015DC4  50E3               	movf	plusw1,w,c
 27932  015DC6  5ADE               	subwfb	postinc2,f,c
 27933                           
 27934                           ;stkvar	_quotient @ sp[(-10)+0]
 27935  015DC8  0EF6               	movlw	-10
 27936  015DCA  80E3               	bsf	plusw1,0,c
 27937  015DCC                     l8311:
 27938                           
 27939                           ;stkvar	_divisor @ sp[(-10)+-16]
 27940  015DCC  90D8               	bcf	status,0,c
 27941  015DCE  0EED               	movlw	-19
 27942  015DD0  32E3               	rrcf	plusw1,f,c
 27943  015DD2  0EEC               	movlw	-20
 27944  015DD4  32E3               	rrcf	plusw1,f,c
 27945  015DD6  0EEB               	movlw	-21
 27946  015DD8  32E3               	rrcf	plusw1,f,c
 27947  015DDA  0EEA               	movlw	-22
 27948  015DDC  32E3               	rrcf	plusw1,f,c
 27949  015DDE  0EE9               	movlw	-23
 27950  015DE0  32E3               	rrcf	plusw1,f,c
 27951  015DE2  0EE8               	movlw	-24
 27952  015DE4  32E3               	rrcf	plusw1,f,c
 27953  015DE6  0EE7               	movlw	-25
 27954  015DE8  32E3               	rrcf	plusw1,f,c
 27955  015DEA  0EE6               	movlw	-26
 27956  015DEC  32E3               	rrcf	plusw1,f,c
 27957                           
 27958                           ;stkvar	_counter @ sp[(-10)+9]
 27959  015DEE  0EFF               	movlw	-1
 27960  015DF0  50E3               	movf	plusw1,w,c
 27961  015DF2  6E37               	movwf	btemp^0,c
 27962  015DF4  0E01               	movlw	1
 27963  015DF6  5E37               	subwf	btemp^0,f,c
 27964  015DF8  0EFF               	movlw	-1
 27965  015DFA  0060  F0DF  FFE3   	movff	btemp,plusw1
 27966  015E00  A4D8               	btfss	status,2,c
 27967  015E02  D791               	goto	u4800
 27968  015E04                     u4820:
 27969                           
 27970                           ;stkvar	_sign @ sp[(-10)+8]
 27971  015E04  0EFE               	movlw	-2
 27972  015E06  50E3               	movf	plusw1,w,c
 27973  015E08  B4D8               	btfsc	status,2,c
 27974  015E0A  D025               	goto	u4840
 27975                           
 27976                           ;stkvar	_quotient @ sp[(-10)+0]
 27977                           ;stkvar	_quotient @ sp[(-10)+0]
 27978  015E0C  0EF6               	movlw	-10
 27979  015E0E  6CE3               	negf	plusw1,c
 27980  015E10  0EF7               	movlw	-9
 27981  015E12  1EE3               	comf	plusw1,f,c
 27982  015E14  0EF8               	movlw	-8
 27983  015E16  1EE3               	comf	plusw1,f,c
 27984  015E18  0EF9               	movlw	-7
 27985  015E1A  1EE3               	comf	plusw1,f,c
 27986  015E1C  0EFA               	movlw	-6
 27987  015E1E  1EE3               	comf	plusw1,f,c
 27988  015E20  0EFB               	movlw	-5
 27989  015E22  1EE3               	comf	plusw1,f,c
 27990  015E24  0EFC               	movlw	-4
 27991  015E26  1EE3               	comf	plusw1,f,c
 27992  015E28  0EFD               	movlw	-3
 27993  015E2A  1EE3               	comf	plusw1,f,c
 27994  015E2C  E314               	bnc	u4840
 27995  015E2E  0EF7               	movlw	-9
 27996  015E30  2AE3               	incf	plusw1,f,c
 27997  015E32  E311               	bnc	u4840
 27998  015E34  0EF8               	movlw	-8
 27999  015E36  2AE3               	incf	plusw1,f,c
 28000  015E38  E30E               	bnc	u4840
 28001  015E3A  0EF9               	movlw	-7
 28002  015E3C  2AE3               	incf	plusw1,f,c
 28003  015E3E  E30B               	bnc	u4840
 28004  015E40  0EFA               	movlw	-6
 28005  015E42  2AE3               	incf	plusw1,f,c
 28006  015E44  E308               	bnc	u4840
 28007  015E46  0EFB               	movlw	-5
 28008  015E48  2AE3               	incf	plusw1,f,c
 28009  015E4A  E305               	bnc	u4840
 28010  015E4C  0EFC               	movlw	-4
 28011  015E4E  2AE3               	incf	plusw1,f,c
 28012  015E50  E302               	bnc	u4840
 28013  015E52  0EFD               	movlw	-3
 28014  015E54  2AE3               	incf	plusw1,f,c
 28015  015E56                     u4840:
 28016                           
 28017                           ;stkvar	_quotient @ sp[(-10)+0]
 28018  015E56  0EF6               	movlw	246
 28019  015E58  24E1               	addwf	fsr1l,w,c
 28020  015E5A  6ED9               	movwf	fsr2l,c
 28021  015E5C  0EFF               	movlw	255
 28022  015E5E  20E2               	addwfc	fsr1h,w,c
 28023  015E60  6EDA               	movwf	fsr2h,c
 28024                           
 28025                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 28026  015E62  0E08               	movlw	8
 28027  015E64  6E37               	movwf	btemp^0,c
 28028  015E66  0EEE               	movlw	-18
 28029  015E68                     us485999:
 28030  015E68  006F FF7B FFE3     	movff	postinc2,plusw1
 28031  015E6E  28E8               	incf	wreg,w,c
 28032  015E70  2E37               	decfsz	btemp^0,f,c
 28033  015E72  D7FA               	bra	us485999
 28034                           
 28035                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 28036  015E74  0EF6               	movlw	246
 28037  015E76  26E1               	addwf	fsr1l,f,c
 28038  015E78  0EFF               	movlw	255
 28039  015E7A  22E2               	addwfc	fsr1h,f,c
 28040  015E7C  0012               	return		;funcret
 28041  015E7E                     __end_of___aodiv:
 28042                           	opt callstack 0
 28043                           
 28044 ;; *************** function _ctoa *****************
 28045 ;; Defined at:
 28046 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28047 ;; Parameters:    Size  Location     Type
 28048 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28049 ;;		 -> f(6), NULL(0), 
 28050 ;;  c               1  [STACK] unsigned char 
 28051 ;; Auto vars:     Size  Location     Type
 28052 ;;  w               2  [STACK] int 
 28053 ;;  l               2    0        int 
 28054 ;; Return value:  Size  Location     Type
 28055 ;;                  2  [STACK] int 
 28056 ;; Registers used:
 28057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28058 ;; Tracked objects:
 28059 ;;		On entry : 0/3B
 28060 ;;		On exit  : 0/0
 28061 ;;		Unchanged: 0/0
 28062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28067 ;;Total ram usage:        0 bytes
 28068 ;; Hardware stack levels used:    1
 28069 ;; Hardware stack levels required when called:    8
 28070 ;; This function calls:
 28071 ;;		_pad
 28072 ;; This function is called by:
 28073 ;;		_vfpfcnvrt
 28074 ;; This function uses a reentrant model
 28075 ;;
 28076                           
 28077                           	psect	text108
 28078  01882E                     __ptext108:
 28079                           	opt callstack 0
 28080  01882E                     _ctoa:
 28081                           	opt callstack 0
 28082                           
 28083                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28084  01882E  52E6               	movf	postinc1,f,c
 28085  018830  52E6               	movf	postinc1,f,c
 28086                           
 28087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 28088                           
 28089                           ;incstack = 0
 28090  018832  500F               	movf	_width^0,w,c
 28091  018834  1010               	iorwf	(_width+1)^0,w,c
 28092  018836  A4D8               	btfss	status,2,c
 28093  018838  D009               	goto	l13095
 28094                           
 28095                           ;stkvar	_w @ sp[(-2)+0]
 28096  01883A  0EFE               	movlw	-2
 28097  01883C  0060  F03F  FFE3   	movff	_width,plusw1
 28098  018842  0EFF               	movlw	-1
 28099  018844  0060  F043  FFE3   	movff	_width+1,plusw1
 28100  01884A  D016               	goto	l13097
 28101  01884C                     l13095:
 28102  01884C  0EFF               	movlw	255
 28103  01884E  6E41               	movwf	(btemp+10)^0,c
 28104  018850  0EFF               	movlw	255
 28105  018852  6E42               	movwf	(btemp+11)^0,c
 28106  018854  0060  F03C  F03F   	movff	_width,btemp+8
 28107  01885A  0060  F040  F040   	movff	_width+1,btemp+9
 28108  018860  5041               	movf	(btemp+10)^0,w,c
 28109  018862  263F               	addwf	(btemp+8)^0,f,c
 28110  018864  5042               	movf	(btemp+11)^0,w,c
 28111  018866  2240               	addwfc	(btemp+9)^0,f,c
 28112                           
 28113                           ;stkvar	_w @ sp[(-2)+0]
 28114  018868  0EFE               	movlw	-2
 28115  01886A  0060  F0FF  FFE3   	movff	btemp+8,plusw1
 28116  018870  0EFF               	movlw	-1
 28117  018872  0060  F103  FFE3   	movff	btemp+9,plusw1
 28118  018878                     l13097:
 28119                           
 28120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 28121                           ;stkvar	_c @ sp[(-2)+-3]
 28122  018878  0EFB               	movlw	-5
 28123  01887A  006F FF8C  F0AD    	movff	plusw1,_dbuf
 28124                           
 28125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 28126  018880  0100               	movlb	0	; () banked
 28127  018882  6BAE               	clrf	(_dbuf+1)& (0+255),b
 28128                           
 28129                           ; BSR set to: 0
 28130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 28131                           ;stkvar	_w @ sp[(-2)+0]
 28132  018884  0EFE               	movlw	-2
 28133  018886  006F FF8F FFE6     	movff	plusw1,postinc1
 28134  01888C  006F FF8F FFE6     	movff	plusw1,postinc1
 28135  018892  0EAD               	movlw	_dbuf& (0+255)
 28136  018894  6EE6               	movwf	postinc1,c
 28137                           
 28138                           ;stkvar	_fp @ sp[(-5)+-2]
 28139  018896  0EF9               	movlw	-7
 28140  018898  006F FF8F FFE6     	movff	plusw1,postinc1
 28141  01889E  006F FF8F FFE6     	movff	plusw1,postinc1
 28142  0188A4  EC1A  F0BF         	call	_pad	;wreg free
 28143                           
 28144                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 28145  0188A8  0EFB               	movlw	251
 28146  0188AA  26E1               	addwf	fsr1l,f,c
 28147  0188AC  0EFF               	movlw	255
 28148  0188AE  22E2               	addwfc	fsr1h,f,c
 28149  0188B0  0012               	return		;funcret
 28150  0188B2                     __end_of_ctoa:
 28151                           	opt callstack 0
 28152                           
 28153 ;; *************** function _pad *****************
 28154 ;; Defined at:
 28155 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28156 ;; Parameters:    Size  Location     Type
 28157 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28158 ;;		 -> f(6), NULL(0), 
 28159 ;;  buf             1  [STACK] PTR unsigned char 
 28160 ;;		 -> dbuf(32), 
 28161 ;;  p               2  [STACK] int 
 28162 ;; Auto vars:     Size  Location     Type
 28163 ;;  w               2  [STACK] int 
 28164 ;;  i               2  [STACK] int 
 28165 ;; Return value:  Size  Location     Type
 28166 ;;                  2  [STACK] int 
 28167 ;; Registers used:
 28168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28169 ;; Tracked objects:
 28170 ;;		On entry : 0/0
 28171 ;;		On exit  : 0/0
 28172 ;;		Unchanged: 0/0
 28173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28178 ;;Total ram usage:        0 bytes
 28179 ;; Hardware stack levels used:    1
 28180 ;; Hardware stack levels required when called:    7
 28181 ;; This function calls:
 28182 ;;		_fputc
 28183 ;;		_fputs
 28184 ;;		_strlen
 28185 ;; This function is called by:
 28186 ;;		_ctoa
 28187 ;;		_dtoa
 28188 ;;		_otoa
 28189 ;;		_utoa
 28190 ;;		_xtoa
 28191 ;; This function uses a reentrant model
 28192 ;;
 28193                           
 28194                           	psect	text109
 28195  017E34                     __ptext109:
 28196                           	opt callstack 0
 28197  017E34                     _pad:
 28198                           	opt callstack 0
 28199                           
 28200                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28201  017E34  52E6               	movf	postinc1,f,c
 28202  017E36  52E6               	movf	postinc1,f,c
 28203  017E38  52E6               	movf	postinc1,f,c
 28204  017E3A  52E6               	movf	postinc1,f,c
 28205                           
 28206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 28207                           
 28208                           ;incstack = 0
 28209  017E3C  A013               	btfss	_flags^0,0,c
 28210  017E3E  D00C               	goto	l13073
 28211                           
 28212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 28213                           ;stkvar	_fp @ sp[(-4)+-2]
 28214  017E40  0EFA               	movlw	-6
 28215  017E42  006F FF8F FFE6     	movff	plusw1,postinc1
 28216  017E48  006F FF8F FFE6     	movff	plusw1,postinc1
 28217                           
 28218                           ;stkvar	_buf @ sp[(-6)+-3]
 28219  017E4E  0EF7               	movlw	-9
 28220  017E50  50E3               	movf	plusw1,w,c
 28221  017E52  6EE6               	movwf	postinc1,c
 28222  017E54  EC59  F0C4         	call	_fputs	;wreg free
 28223  017E58                     l13073:
 28224                           
 28225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 28226                           ;stkvar	_p @ sp[(-4)+-5]
 28227  017E58  0EF8               	movlw	-8
 28228  017E5A  BEE3               	btfsc	plusw1,7,c
 28229  017E5C  D011               	goto	l13077
 28230                           
 28231                           ;stkvar	_p @ sp[(-4)+-5]
 28232                           ;stkvar	_w @ sp[(-4)+0]
 28233  017E5E  0EF7               	movlw	-9
 28234  017E60  006F FF8C  F037    	movff	plusw1,btemp
 28235  017E66  0EFC               	movlw	-4
 28236  017E68  0060  F0DF  FFE3   	movff	btemp,plusw1
 28237  017E6E  0EF8               	movlw	-8
 28238  017E70  006F FF8C  F037    	movff	plusw1,btemp
 28239  017E76  0EFD               	movlw	-3
 28240  017E78  0060  F0DF  FFE3   	movff	btemp,plusw1
 28241  017E7E  D004               	goto	l2310
 28242  017E80                     l13077:
 28243                           
 28244                           ;stkvar	_w @ sp[(-4)+0]
 28245  017E80  0EFC               	movlw	-4
 28246  017E82  6AE3               	clrf	plusw1,c
 28247  017E84  0EFD               	movlw	-3
 28248  017E86  6AE3               	clrf	plusw1,c
 28249  017E88                     l2310:
 28250                           
 28251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 28252                           ;stkvar	_i @ sp[(-4)+2]
 28253  017E88  0EFE               	movlw	-2
 28254  017E8A  6AE3               	clrf	plusw1,c
 28255  017E8C  0EFF               	movlw	-1
 28256  017E8E  6AE3               	clrf	plusw1,c
 28257                           
 28258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 28259  017E90  D01E               	goto	l13083
 28260  017E92                     l13079:
 28261                           
 28262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 28263                           ;stkvar	_fp @ sp[(-4)+-2]
 28264  017E92  0EFA               	movlw	-6
 28265  017E94  006F FF8F FFE6     	movff	plusw1,postinc1
 28266  017E9A  006F FF8F FFE6     	movff	plusw1,postinc1
 28267  017EA0  0E20               	movlw	32
 28268  017EA2  6EE6               	movwf	postinc1,c
 28269  017EA4  0E00               	movlw	0
 28270  017EA6  6EE6               	movwf	postinc1,c
 28271  017EA8  ECEA  F0BC         	call	_fputc	;wreg free
 28272                           
 28273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 28274                           ;stkvar	_i @ sp[(-4)+2]
 28275  017EAC  0EFE               	movlw	-2
 28276  017EAE  50E3               	movf	plusw1,w,c
 28277  017EB0  0F01               	addlw	1
 28278  017EB2  6E37               	movwf	btemp^0,c
 28279  017EB4  0EFE               	movlw	-2
 28280  017EB6  0060  F0DF  FFE3   	movff	btemp,plusw1
 28281  017EBC  6A37               	clrf	btemp^0,c
 28282  017EBE  0EFF               	movlw	-1
 28283  017EC0  50E3               	movf	plusw1,w,c
 28284  017EC2  2037               	addwfc	btemp^0,w,c
 28285  017EC4  6E37               	movwf	btemp^0,c
 28286  017EC6  0EFF               	movlw	-1
 28287  017EC8  0060  F0DF  FFE3   	movff	btemp,plusw1
 28288  017ECE                     l13083:
 28289                           
 28290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 28291                           ;stkvar	_w @ sp[(-4)+0]
 28292                           ;stkvar	_i @ sp[(-4)+2]
 28293  017ECE  50E1               	movf	fsr1l,w,c
 28294  017ED0  0FFE               	addlw	-2
 28295  017ED2  6ED9               	movwf	fsr2l,c
 28296  017ED4  50E2               	movf	fsr1h,w,c
 28297  017ED6  6EDA               	movwf	fsr2h,c
 28298  017ED8  0EFF               	movlw	255
 28299  017EDA  22DA               	addwfc	fsr2h,f,c
 28300  017EDC  0EFC               	movlw	-4
 28301  017EDE  50E3               	movf	plusw1,w,c
 28302  017EE0  5CDE               	subwf	postinc2,w,c
 28303  017EE2  50DE               	movf	postinc2,w,c
 28304  017EE4  0A80               	xorlw	128
 28305  017EE6  6E37               	movwf	btemp^0,c
 28306  017EE8  0EFD               	movlw	-3
 28307  017EEA  50E3               	movf	plusw1,w,c
 28308  017EEC  0A80               	xorlw	128
 28309  017EEE  5837               	subwfb	btemp^0,w,c
 28310  017EF0  A0D8               	btfss	status,0,c
 28311  017EF2  D7CF               	goto	l13079
 28312                           
 28313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 28314  017EF4  B013               	btfsc	_flags^0,0,c
 28315  017EF6  D00C               	goto	l13087
 28316                           
 28317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 28318                           ;stkvar	_fp @ sp[(-4)+-2]
 28319  017EF8  0EFA               	movlw	-6
 28320  017EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 28321  017F00  006F FF8F FFE6     	movff	plusw1,postinc1
 28322                           
 28323                           ;stkvar	_buf @ sp[(-6)+-3]
 28324  017F06  0EF7               	movlw	-9
 28325  017F08  50E3               	movf	plusw1,w,c
 28326  017F0A  6EE6               	movwf	postinc1,c
 28327  017F0C  EC59  F0C4         	call	_fputs	;wreg free
 28328  017F10                     l13087:
 28329                           
 28330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 28331                           ;stkvar	_w @ sp[(-4)+0]
 28332                           ;stkvar	_buf @ sp[(-4)+-3]
 28333  017F10  0EF9               	movlw	-7
 28334  017F12  006F FF8C  F042    	movff	plusw1,btemp+11
 28335  017F18  0060  F10B  FFE6   	movff	btemp+11,postinc1
 28336  017F1E  0E00               	movlw	0
 28337  017F20  6EE6               	movwf	postinc1,c
 28338  017F22  ECF3  F0C2         	call	_strlen	;wreg free
 28339  017F26  0EFC               	movlw	-4
 28340  017F28  50E3               	movf	plusw1,w,c
 28341  017F2A  2637               	addwf	btemp^0,f,c
 28342  017F2C  0EFD               	movlw	-3
 28343  017F2E  50E3               	movf	plusw1,w,c
 28344  017F30  2238               	addwfc	(btemp+1)^0,f,c
 28345                           
 28346                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
 28347  017F32  0EF7               	movlw	247
 28348  017F34  26E1               	addwf	fsr1l,f,c
 28349  017F36  0EFF               	movlw	255
 28350  017F38  22E2               	addwfc	fsr1h,f,c
 28351  017F3A  0012               	return		;funcret
 28352  017F3C                     __end_of_pad:
 28353                           	opt callstack 0
 28354                           
 28355 ;; *************** function _strlen *****************
 28356 ;; Defined at:
 28357 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 28358 ;; Parameters:    Size  Location     Type
 28359 ;;  s               2  [STACK] PTR const unsigned char 
 28360 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 28361 ;;		 -> STR_38(9), STR_37(12), D.lcd(512), mconfig@D(514), 
 28362 ;;		 -> STR_32(4), STR_31(4), STR_30(4), STR_29(4), 
 28363 ;;		 -> STR_7(4), STR_3(4), V.terminal(160), T(256), 
 28364 ;;		 -> V(387), 
 28365 ;; Auto vars:     Size  Location     Type
 28366 ;;  a               2  [STACK] PTR const unsigned char 
 28367 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 28368 ;;		 -> STR_38(9), STR_37(12), D.lcd(512), mconfig@D(514), 
 28369 ;;		 -> STR_32(4), STR_31(4), STR_30(4), STR_29(4), 
 28370 ;;		 -> STR_7(4), STR_3(4), V.terminal(160), T(256), 
 28371 ;;		 -> V(387), 
 28372 ;; Return value:  Size  Location     Type
 28373 ;;                  2  [STACK] unsigned int 
 28374 ;; Registers used:
 28375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 28376 ;; Tracked objects:
 28377 ;;		On entry : 0/3C
 28378 ;;		On exit  : 0/0
 28379 ;;		Unchanged: 0/0
 28380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28385 ;;Total ram usage:        0 bytes
 28386 ;; Hardware stack levels used:    1
 28387 ;; Hardware stack levels required when called:    3
 28388 ;; This function calls:
 28389 ;;		Nothing
 28390 ;; This function is called by:
 28391 ;;		_eaDogM_WriteString
 28392 ;;		_format_display_text
 28393 ;;		_pad
 28394 ;;		_stoa
 28395 ;; This function uses a reentrant model
 28396 ;;
 28397                           
 28398                           	psect	text110
 28399  0185E6                     __ptext110:
 28400                           	opt callstack 0
 28401  0185E6                     _strlen:
 28402                           	opt callstack 0
 28403                           
 28404                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28405  0185E6  52E6               	movf	postinc1,f,c
 28406  0185E8  52E6               	movf	postinc1,f,c
 28407                           
 28408                           ;stkvar	_s @ sp[(-2)+-2]
 28409                           
 28410                           ;incstack = 0
 28411  0185EA  0EFC               	movlw	-4
 28412  0185EC  006F FF8C  F041    	movff	plusw1,btemp+10
 28413  0185F2  0EFD               	movlw	-3
 28414  0185F4  006F FF8C  F042    	movff	plusw1,btemp+11
 28415                           
 28416                           ;stkvar	_a @ sp[(-2)+0]
 28417  0185FA  0EFF               	movlw	-1
 28418  0185FC  0060  F10B  FFE3   	movff	btemp+11,plusw1
 28419  018602  0EFE               	movlw	-2
 28420  018604  0060  F107  FFE3   	movff	btemp+10,plusw1
 28421  01860A  D011               	goto	l8205
 28422  01860C                     l8203:
 28423                           
 28424                           ;stkvar	_s @ sp[(-2)+-2]
 28425  01860C  0EFC               	movlw	-4
 28426  01860E  50E3               	movf	plusw1,w,c
 28427  018610  0F01               	addlw	1
 28428  018612  6E37               	movwf	btemp^0,c
 28429  018614  0EFC               	movlw	-4
 28430  018616  0060  F0DF  FFE3   	movff	btemp,plusw1
 28431  01861C  6A37               	clrf	btemp^0,c
 28432  01861E  0EFD               	movlw	-3
 28433  018620  50E3               	movf	plusw1,w,c
 28434  018622  2037               	addwfc	btemp^0,w,c
 28435  018624  6E37               	movwf	btemp^0,c
 28436  018626  0EFD               	movlw	-3
 28437  018628  0060  F0DF  FFE3   	movff	btemp,plusw1
 28438  01862E                     l8205:
 28439                           
 28440                           ;stkvar	_s @ sp[(-2)+-2]
 28441  01862E  0EFC               	movlw	-4
 28442  018630  006F FF8F FFF6     	movff	plusw1,tblptrl
 28443  018636  0EFD               	movlw	-3
 28444  018638  006F FF8F FFF7     	movff	plusw1,tblptrh
 28445  01863E  0E00               	movlw	low (__mediumconst shr (0+16))
 28446  018640  6EF8               	movwf	tblptru,c
 28447  018642  0E1F               	movlw	(high __ramtop+-1)
 28448  018644  64F7               	cpfsgt	tblptrh,c
 28449  018646  D003               	bra	u4557
 28450  018648  0008               	tblrd		*
 28451  01864A  50F5               	movf	tablat,w,c
 28452  01864C  D007               	bra	u4550
 28453  01864E                     u4557:
 28454  01864E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28455  018654  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28456  01865A  50EF               	movf	indf0,w,c
 28457  01865C                     u4550:
 28458  01865C  0900               	iorlw	0
 28459  01865E  A4D8               	btfss	status,2,c
 28460  018660  D7D5               	goto	l8203
 28461                           
 28462                           ;stkvar	_a @ sp[(-2)+0]
 28463                           ;stkvar	_s @ sp[(-2)+-2]
 28464  018662  0EFC               	movlw	-4
 28465  018664  006F FF8C  F037    	movff	plusw1,btemp
 28466  01866A  0EFD               	movlw	-3
 28467  01866C  006F FF8C  F038    	movff	plusw1,btemp+1
 28468  018672  0EFE               	movlw	-2
 28469  018674  50E3               	movf	plusw1,w,c
 28470  018676  5E37               	subwf	btemp^0,f,c
 28471  018678  0EFF               	movlw	-1
 28472  01867A  50E3               	movf	plusw1,w,c
 28473  01867C  5A38               	subwfb	(btemp+1)^0,f,c
 28474                           
 28475                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 28476  01867E  52E5               	movf	postdec1,f,c
 28477  018680  52E5               	movf	postdec1,f,c
 28478  018682  52E5               	movf	postdec1,f,c
 28479  018684  52E5               	movf	postdec1,f,c
 28480  018686  0012               	return		;funcret
 28481  018688                     __end_of_strlen:
 28482                           	opt callstack 0
 28483                           
 28484 ;; *************** function _fputs *****************
 28485 ;; Defined at:
 28486 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 28487 ;; Parameters:    Size  Location     Type
 28488 ;;  s               1  [STACK] PTR const unsigned char 
 28489 ;;		 -> dbuf(32), 
 28490 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28491 ;;		 -> f(6), NULL(0), 
 28492 ;; Auto vars:     Size  Location     Type
 28493 ;;  i               2  [STACK] int 
 28494 ;;  c               1  [STACK] unsigned char 
 28495 ;; Return value:  Size  Location     Type
 28496 ;;                  2  [STACK] int 
 28497 ;; Registers used:
 28498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 28499 ;; Tracked objects:
 28500 ;;		On entry : 0/0
 28501 ;;		On exit  : 0/0
 28502 ;;		Unchanged: 0/0
 28503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28508 ;;Total ram usage:        0 bytes
 28509 ;; Hardware stack levels used:    1
 28510 ;; Hardware stack levels required when called:    6
 28511 ;; This function calls:
 28512 ;;		_fputc
 28513 ;; This function is called by:
 28514 ;;		_pad
 28515 ;; This function uses a reentrant model
 28516 ;;
 28517                           
 28518                           	psect	text111
 28519  0188B2                     __ptext111:
 28520                           	opt callstack 0
 28521  0188B2                     _fputs:
 28522                           	opt callstack 0
 28523                           
 28524                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28525  0188B2  52E6               	movf	postinc1,f,c
 28526  0188B4  52E6               	movf	postinc1,f,c
 28527  0188B6  52E6               	movf	postinc1,f,c
 28528                           
 28529                           ;stkvar	_i @ sp[(-3)+0]
 28530                           
 28531                           ;incstack = 0
 28532  0188B8  0EFD               	movlw	-3
 28533  0188BA  6AE3               	clrf	plusw1,c
 28534  0188BC  0EFE               	movlw	-2
 28535  0188BE  6AE3               	clrf	plusw1,c
 28536  0188C0  D01F               	goto	l13067
 28537  0188C2                     l13063:
 28538                           
 28539                           ;stkvar	_fp @ sp[(-3)+-3]
 28540  0188C2  0EFA               	movlw	-6
 28541  0188C4  006F FF8F FFE6     	movff	plusw1,postinc1
 28542  0188CA  006F FF8F FFE6     	movff	plusw1,postinc1
 28543                           
 28544                           ;stkvar	_c @ sp[(-5)+2]
 28545  0188D0  0EFD               	movlw	-3
 28546  0188D2  50E3               	movf	plusw1,w,c
 28547  0188D4  6EE6               	movwf	postinc1,c
 28548  0188D6  0E00               	movlw	0
 28549  0188D8  6EE6               	movwf	postinc1,c
 28550  0188DA  ECEA  F0BC         	call	_fputc	;wreg free
 28551                           
 28552                           ;stkvar	_i @ sp[(-3)+0]
 28553  0188DE  0EFD               	movlw	-3
 28554  0188E0  50E3               	movf	plusw1,w,c
 28555  0188E2  0F01               	addlw	1
 28556  0188E4  6E37               	movwf	btemp^0,c
 28557  0188E6  0EFD               	movlw	-3
 28558  0188E8  0060  F0DF  FFE3   	movff	btemp,plusw1
 28559  0188EE  6A37               	clrf	btemp^0,c
 28560  0188F0  0EFE               	movlw	-2
 28561  0188F2  50E3               	movf	plusw1,w,c
 28562  0188F4  2037               	addwfc	btemp^0,w,c
 28563  0188F6  6E37               	movwf	btemp^0,c
 28564  0188F8  0EFE               	movlw	-2
 28565  0188FA  0060  F0DF  FFE3   	movff	btemp,plusw1
 28566  018900                     l13067:
 28567                           
 28568                           ;stkvar	_i @ sp[(-3)+0]
 28569  018900  0EFD               	movlw	-3
 28570  018902  006F FF8C  F042    	movff	plusw1,btemp+11
 28571                           
 28572                           ;stkvar	_s @ sp[(-3)+-1]
 28573  018908  0EFC               	movlw	-4
 28574  01890A  50E3               	movf	plusw1,w,c
 28575  01890C  2442               	addwf	(btemp+11)^0,w,c
 28576  01890E  6ED9               	movwf	fsr2l,c
 28577  018910  6ADA               	clrf	fsr2h,c
 28578  018912  50DF               	movf	indf2,w,c
 28579  018914  6E42               	movwf	(btemp+11)^0,c
 28580                           
 28581                           ;stkvar	_c @ sp[(-3)+2]
 28582  018916  0EFF               	movlw	-1
 28583  018918  0060  F10B  FFE3   	movff	btemp+11,plusw1
 28584  01891E  0EFF               	movlw	-1
 28585  018920  50E3               	movf	plusw1,w,c
 28586  018922  A4D8               	btfss	status,2,c
 28587  018924  D7CE               	goto	l13063
 28588                           
 28589                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
 28590  018926  0EFA               	movlw	250
 28591  018928  26E1               	addwf	fsr1l,f,c
 28592  01892A  0EFF               	movlw	255
 28593  01892C  22E2               	addwfc	fsr1h,f,c
 28594  01892E  0012               	return		;funcret
 28595  018930                     __end_of_fputs:
 28596                           	opt callstack 0
 28597                           
 28598 ;; *************** function _fputc *****************
 28599 ;; Defined at:
 28600 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 28601 ;; Parameters:    Size  Location     Type
 28602 ;;  c               2  [STACK] int 
 28603 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28604 ;;		 -> f(6), NULL(0), 
 28605 ;; Auto vars:     Size  Location     Type
 28606 ;;		None
 28607 ;; Return value:  Size  Location     Type
 28608 ;;                  2  [STACK] int 
 28609 ;; Registers used:
 28610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 28611 ;; Tracked objects:
 28612 ;;		On entry : 0/3B
 28613 ;;		On exit  : 0/0
 28614 ;;		Unchanged: 0/0
 28615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28620 ;;Total ram usage:        0 bytes
 28621 ;; Hardware stack levels used:    1
 28622 ;; Hardware stack levels required when called:    5
 28623 ;; This function calls:
 28624 ;;		_putch
 28625 ;; This function is called by:
 28626 ;;		_pad
 28627 ;;		_stoa
 28628 ;;		_vfpfcnvrt
 28629 ;;		_fputs
 28630 ;; This function uses a reentrant model
 28631 ;;
 28632                           
 28633                           	psect	text112
 28634  0179D4                     __ptext112:
 28635                           	opt callstack 0
 28636  0179D4                     _fputc:
 28637                           	opt callstack 16
 28638                           
 28639                           ;stkvar	_fp @ sp[(0)+-4]
 28640                           
 28641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28642                           ;incstack = 0
 28643  0179D4  0EFC               	movlw	-4
 28644  0179D6  006F FF8C  F037    	movff	plusw1,btemp
 28645  0179DC  0EFD               	movlw	-3
 28646  0179DE  50E3               	movf	plusw1,w,c
 28647  0179E0  1037               	iorwf	btemp^0,w,c
 28648  0179E2  B4D8               	btfsc	status,2,c
 28649  0179E4  D009               	goto	u8970
 28650                           
 28651                           ;stkvar	_fp @ sp[(0)+-4]
 28652  0179E6  0EFC               	movlw	-4
 28653  0179E8  006F FF8C  F037    	movff	plusw1,btemp
 28654  0179EE  0EFD               	movlw	-3
 28655  0179F0  50E3               	movf	plusw1,w,c
 28656  0179F2  1037               	iorwf	btemp^0,w,c
 28657  0179F4  A4D8               	btfss	status,2,c
 28658  0179F6  D006               	goto	l13051
 28659  0179F8                     u8970:
 28660                           
 28661                           ;stkvar	_c @ sp[(0)+-2]
 28662  0179F8  0EFE               	movlw	-2
 28663  0179FA  50E3               	movf	plusw1,w,c
 28664  0179FC  6EE6               	movwf	postinc1,c
 28665  0179FE  ECAF  F0CC         	call	_putch	;wreg free
 28666  017A02  D075               	goto	l3283
 28667  017A04                     l13051:
 28668                           
 28669                           ;stkvar	_fp @ sp[(0)+-4]
 28670  017A04  0EFC               	movlw	-4
 28671  017A06  006F FF8C  F041    	movff	plusw1,btemp+10
 28672  017A0C  0EFD               	movlw	-3
 28673  017A0E  006F FF8C  F042    	movff	plusw1,btemp+11
 28674  017A14  0E04               	movlw	4
 28675  017A16  2441               	addwf	(btemp+10)^0,w,c
 28676  017A18  6ED9               	movwf	fsr2l,c
 28677  017A1A  0E00               	movlw	0
 28678  017A1C  2042               	addwfc	(btemp+11)^0,w,c
 28679  017A1E  6EDA               	movwf	fsr2h,c
 28680  017A20  50DE               	movf	postinc2,w,c
 28681  017A22  10DE               	iorwf	postinc2,w,c
 28682  017A24  B4D8               	btfsc	status,2,c
 28683  017A26  D026               	goto	u8990
 28684                           
 28685                           ;stkvar	_fp @ sp[(0)+-4]
 28686  017A28  0EFC               	movlw	-4
 28687  017A2A  006F FF8C  F041    	movff	plusw1,btemp+10
 28688  017A30  0EFD               	movlw	-3
 28689  017A32  006F FF8C  F042    	movff	plusw1,btemp+11
 28690  017A38  0E04               	movlw	4
 28691  017A3A  2441               	addwf	(btemp+10)^0,w,c
 28692  017A3C  6ED9               	movwf	fsr2l,c
 28693  017A3E  0E00               	movlw	0
 28694  017A40  2042               	addwfc	(btemp+11)^0,w,c
 28695  017A42  6EDA               	movwf	fsr2h,c
 28696                           
 28697                           ;stkvar	_fp @ sp[(0)+-4]
 28698  017A44  0EFC               	movlw	-4
 28699  017A46  006F FF8C  F041    	movff	plusw1,btemp+10
 28700  017A4C  0EFD               	movlw	-3
 28701  017A4E  006F FF8C  F042    	movff	plusw1,btemp+11
 28702  017A54  0E02               	movlw	2
 28703  017A56  2441               	addwf	(btemp+10)^0,w,c
 28704  017A58  6EE9               	movwf	fsr0l,c
 28705  017A5A  0E00               	movlw	0
 28706  017A5C  2042               	addwfc	(btemp+11)^0,w,c
 28707  017A5E  6EEA               	movwf	fsr0h,c
 28708  017A60  50DE               	movf	postinc2,w,c
 28709  017A62  5CEE               	subwf	postinc0,w,c
 28710  017A64  50EE               	movf	postinc0,w,c
 28711  017A66  0A80               	xorlw	128
 28712  017A68  6E37               	movwf	btemp^0,c
 28713  017A6A  50DE               	movf	postinc2,w,c
 28714  017A6C  0A80               	xorlw	128
 28715  017A6E  5837               	subwfb	btemp^0,w,c
 28716  017A70  B0D8               	btfsc	status,0,c
 28717  017A72  D03D               	goto	l3283
 28718  017A74                     u8990:
 28719                           
 28720                           ;stkvar	_c @ sp[(0)+-2]
 28721                           ;stkvar	_fp @ sp[(0)+-4]
 28722  017A74  0EFC               	movlw	-4
 28723  017A76  006F FF8C  F041    	movff	plusw1,btemp+10
 28724  017A7C  0EFD               	movlw	-3
 28725  017A7E  006F FF8C  F042    	movff	plusw1,btemp+11
 28726  017A84  0E02               	movlw	2
 28727  017A86  2441               	addwf	(btemp+10)^0,w,c
 28728  017A88  6ED9               	movwf	fsr2l,c
 28729  017A8A  0E00               	movlw	0
 28730  017A8C  2042               	addwfc	(btemp+11)^0,w,c
 28731  017A8E  6EDA               	movwf	fsr2h,c
 28732  017A90  006F FF78  F041    	movff	postinc2,btemp+10
 28733  017A96  006F FF74  F042    	movff	postdec2,btemp+11
 28734                           
 28735                           ;stkvar	_fp @ sp[(0)+-4]
 28736  017A9C  0EFC               	movlw	-4
 28737  017A9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28738  017AA4  0EFD               	movlw	-3
 28739  017AA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 28740  017AAC  006F FF78  F03F    	movff	postinc2,btemp+8
 28741  017AB2  006F FF74  F040    	movff	postdec2,btemp+9
 28742  017AB8  5041               	movf	(btemp+10)^0,w,c
 28743  017ABA  243F               	addwf	(btemp+8)^0,w,c
 28744  017ABC  6ED9               	movwf	fsr2l,c
 28745  017ABE  5042               	movf	(btemp+11)^0,w,c
 28746  017AC0  2040               	addwfc	(btemp+9)^0,w,c
 28747  017AC2  6EDA               	movwf	fsr2h,c
 28748  017AC4  0EFE               	movlw	-2
 28749  017AC6  006F FF8F FFDF     	movff	plusw1,indf2
 28750                           
 28751                           ;stkvar	_fp @ sp[(0)+-4]
 28752  017ACC  0EFC               	movlw	-4
 28753  017ACE  006F FF8C  F041    	movff	plusw1,btemp+10
 28754  017AD4  0EFD               	movlw	-3
 28755  017AD6  006F FF8C  F042    	movff	plusw1,btemp+11
 28756  017ADC  0E02               	movlw	2
 28757  017ADE  2441               	addwf	(btemp+10)^0,w,c
 28758  017AE0  6ED9               	movwf	fsr2l,c
 28759  017AE2  0E00               	movlw	0
 28760  017AE4  2042               	addwfc	(btemp+11)^0,w,c
 28761  017AE6  6EDA               	movwf	fsr2h,c
 28762  017AE8  2ADE               	incf	postinc2,f,c
 28763  017AEA  0E00               	movlw	0
 28764  017AEC  22DD               	addwfc	postdec2,f,c
 28765  017AEE                     l3283:
 28766                           
 28767                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 28768  017AEE  52E5               	movf	postdec1,f,c
 28769  017AF0  52E5               	movf	postdec1,f,c
 28770  017AF2  52E5               	movf	postdec1,f,c
 28771  017AF4  52E5               	movf	postdec1,f,c
 28772  017AF6  0012               	return		;funcret
 28773  017AF8                     __end_of_fputc:
 28774                           	opt callstack 0
 28775                           
 28776 ;; *************** function _putch *****************
 28777 ;; Defined at:
 28778 ;;		line 155 in file "eadog.c"
 28779 ;; Parameters:    Size  Location     Type
 28780 ;;  c               1  [STACK] unsigned char 
 28781 ;; Auto vars:     Size  Location     Type
 28782 ;;		None
 28783 ;; Return value:  Size  Location     Type
 28784 ;;                  1  [STACK] void 
 28785 ;; Registers used:
 28786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 28787 ;; Tracked objects:
 28788 ;;		On entry : 0/3B
 28789 ;;		On exit  : 0/0
 28790 ;;		Unchanged: 0/0
 28791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28796 ;;Total ram usage:        0 bytes
 28797 ;; Hardware stack levels used:    1
 28798 ;; Hardware stack levels required when called:    4
 28799 ;; This function calls:
 28800 ;;		_ringBufS_put_dma
 28801 ;; This function is called by:
 28802 ;;		_fputc
 28803 ;; This function uses a reentrant model
 28804 ;;
 28805                           
 28806                           	psect	text113
 28807  01995E                     __ptext113:
 28808                           	opt callstack 0
 28809  01995E                     _putch:
 28810                           	opt callstack 16
 28811                           
 28812                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 28813                           ;stkvar	_c @ sp[(0)+-1]
 28814                           
 28815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28816                           ;incstack = 0
 28817  01995E  0EFF               	movlw	-1
 28818  019960  50E3               	movf	plusw1,w,c
 28819  019962  6EE6               	movwf	postinc1,c
 28820  019964  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 28821  01996A  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 28822  019970  ECF6  F0C1         	call	_ringBufS_put_dma	;wreg free
 28823                           
 28824                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 28825  019974  52E5               	movf	postdec1,f,c
 28826  019976  0012               	return		;funcret
 28827  019978                     __end_of_putch:
 28828                           	opt callstack 0
 28829                           
 28830 ;; *************** function _ringBufS_put_dma *****************
 28831 ;; Defined at:
 28832 ;;		line 67 in file "ringbufs.c"
 28833 ;; Parameters:    Size  Location     Type
 28834 ;;  _this           2  [STACK] PTR struct ringBufS_t
 28835 ;;		 -> ring_buf1(67), 
 28836 ;;  c               1  [STACK] const unsigned char 
 28837 ;; Auto vars:     Size  Location     Type
 28838 ;;		None
 28839 ;; Return value:  Size  Location     Type
 28840 ;;                  1  [STACK] void 
 28841 ;; Registers used:
 28842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 28843 ;; Tracked objects:
 28844 ;;		On entry : 0/3B
 28845 ;;		On exit  : 0/0
 28846 ;;		Unchanged: 0/0
 28847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28852 ;;Total ram usage:        0 bytes
 28853 ;; Hardware stack levels used:    1
 28854 ;; Hardware stack levels required when called:    3
 28855 ;; This function calls:
 28856 ;;		Nothing
 28857 ;; This function is called by:
 28858 ;;		_putch
 28859 ;; This function uses a reentrant model
 28860 ;;
 28861                           
 28862                           	psect	text114
 28863  0183EC                     __ptext114:
 28864                           	opt callstack 0
 28865  0183EC                     _ringBufS_put_dma:
 28866                           	opt callstack 16
 28867                           
 28868                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 28869                           ;stkvar	__this @ sp[(0)+-2]
 28870                           
 28871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28872                           ;incstack = 0
 28873  0183EC  0EFE               	movlw	-2
 28874  0183EE  006F FF8C  F041    	movff	plusw1,btemp+10
 28875  0183F4  0EFF               	movlw	-1
 28876  0183F6  006F FF8C  F042    	movff	plusw1,btemp+11
 28877  0183FC  0E42               	movlw	66
 28878  0183FE  2441               	addwf	(btemp+10)^0,w,c
 28879  018400  6ED9               	movwf	fsr2l,c
 28880  018402  0E00               	movlw	0
 28881  018404  2042               	addwfc	(btemp+11)^0,w,c
 28882  018406  6EDA               	movwf	fsr2h,c
 28883  018408  0E40               	movlw	64
 28884  01840A  60DF               	cpfslt	indf2,c
 28885  01840C  D040               	goto	l1531
 28886                           
 28887                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 28888                           ;stkvar	_c @ sp[(0)+-3]
 28889                           ;stkvar	__this @ sp[(0)+-2]
 28890  01840E  0EFE               	movlw	-2
 28891  018410  006F FF8C  F041    	movff	plusw1,btemp+10
 28892  018416  0EFF               	movlw	-1
 28893  018418  006F FF8C  F042    	movff	plusw1,btemp+11
 28894  01841E  0E40               	movlw	64
 28895  018420  2441               	addwf	(btemp+10)^0,w,c
 28896  018422  6ED9               	movwf	fsr2l,c
 28897  018424  0E00               	movlw	0
 28898  018426  2042               	addwfc	(btemp+11)^0,w,c
 28899  018428  6EDA               	movwf	fsr2h,c
 28900  01842A  50DF               	movf	indf2,w,c
 28901  01842C  6E42               	movwf	(btemp+11)^0,c
 28902                           
 28903                           ;stkvar	__this @ sp[(0)+-2]
 28904  01842E  0EFE               	movlw	-2
 28905  018430  006F FF8C  F03F    	movff	plusw1,btemp+8
 28906  018436  0EFF               	movlw	-1
 28907  018438  006F FF8C  F040    	movff	plusw1,btemp+9
 28908  01843E  5042               	movf	(btemp+11)^0,w,c
 28909  018440  243F               	addwf	(btemp+8)^0,w,c
 28910  018442  6ED9               	movwf	fsr2l,c
 28911  018444  0E00               	movlw	0
 28912  018446  2040               	addwfc	(btemp+9)^0,w,c
 28913  018448  6EDA               	movwf	fsr2h,c
 28914  01844A  0EFD               	movlw	-3
 28915  01844C  006F FF8F FFDF     	movff	plusw1,indf2
 28916                           
 28917                           ;ringbufs.c: 71:   ++_this->head;
 28918                           ;stkvar	__this @ sp[(0)+-2]
 28919  018452  0EFE               	movlw	-2
 28920  018454  006F FF8C  F041    	movff	plusw1,btemp+10
 28921  01845A  0EFF               	movlw	-1
 28922  01845C  006F FF8C  F042    	movff	plusw1,btemp+11
 28923  018462  0E40               	movlw	64
 28924  018464  2441               	addwf	(btemp+10)^0,w,c
 28925  018466  6ED9               	movwf	fsr2l,c
 28926  018468  0E00               	movlw	0
 28927  01846A  2042               	addwfc	(btemp+11)^0,w,c
 28928  01846C  6EDA               	movwf	fsr2h,c
 28929  01846E  2ADF               	incf	indf2,f,c
 28930                           
 28931                           ;ringbufs.c: 72:   ++_this->count;
 28932                           ;stkvar	__this @ sp[(0)+-2]
 28933  018470  0EFE               	movlw	-2
 28934  018472  006F FF8C  F041    	movff	plusw1,btemp+10
 28935  018478  0EFF               	movlw	-1
 28936  01847A  006F FF8C  F042    	movff	plusw1,btemp+11
 28937  018480  0E42               	movlw	66
 28938  018482  2441               	addwf	(btemp+10)^0,w,c
 28939  018484  6ED9               	movwf	fsr2l,c
 28940  018486  0E00               	movlw	0
 28941  018488  2042               	addwfc	(btemp+11)^0,w,c
 28942  01848A  6EDA               	movwf	fsr2h,c
 28943  01848C  2ADF               	incf	indf2,f,c
 28944  01848E                     l1531:
 28945                           
 28946                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 28947  01848E  52E5               	movf	postdec1,f,c
 28948  018490  52E5               	movf	postdec1,f,c
 28949  018492  52E5               	movf	postdec1,f,c
 28950  018494  0012               	return		;funcret
 28951  018496                     __end_of_ringBufS_put_dma:
 28952                           	opt callstack 0
 28953                           
 28954 ;; *************** function _atoi *****************
 28955 ;; Defined at:
 28956 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 28957 ;; Parameters:    Size  Location     Type
 28958 ;;  s               2  [STACK] PTR const unsigned char 
 28959 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 28960 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 28961 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 28962 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 28963 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 28964 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 28965 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 28966 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 28967 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 28968 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 28969 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 28970 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 28971 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 28972 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 28973 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 28974 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 28975 ;; Auto vars:     Size  Location     Type
 28976 ;;  n               2  [STACK] int 
 28977 ;;  neg             2  [STACK] int 
 28978 ;; Return value:  Size  Location     Type
 28979 ;;                  2  [STACK] int 
 28980 ;; Registers used:
 28981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 28982 ;; Tracked objects:
 28983 ;;		On entry : 0/3B
 28984 ;;		On exit  : 0/0
 28985 ;;		Unchanged: 0/0
 28986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28991 ;;Total ram usage:        0 bytes
 28992 ;; Hardware stack levels used:    1
 28993 ;; Hardware stack levels required when called:    4
 28994 ;; This function calls:
 28995 ;;		_isdigit
 28996 ;;		_isspace
 28997 ;; This function is called by:
 28998 ;;		_vfpfcnvrt
 28999 ;; This function uses a reentrant model
 29000 ;;
 29001                           
 29002                           	psect	text115
 29003  015E7E                     __ptext115:
 29004                           	opt callstack 0
 29005  015E7E                     _atoi:
 29006                           	opt callstack 0
 29007                           
 29008                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29009  015E7E  0E09               	movlw	9
 29010  015E80  26E1               	addwf	fsr1l,f,c
 29011  015E82  0E00               	movlw	0
 29012  015E84  22E2               	addwfc	fsr1h,f,c
 29013                           
 29014                           ;stkvar	_n @ sp[(-9)+5]
 29015                           
 29016                           ;incstack = 0
 29017  015E86  0EFC               	movlw	-4
 29018  015E88  6AE3               	clrf	plusw1,c
 29019  015E8A  0EFD               	movlw	-3
 29020  015E8C  6AE3               	clrf	plusw1,c
 29021                           
 29022                           ;stkvar	_neg @ sp[(-9)+7]
 29023  015E8E  0EFE               	movlw	-2
 29024  015E90  6AE3               	clrf	plusw1,c
 29025  015E92  0EFF               	movlw	-1
 29026  015E94  6AE3               	clrf	plusw1,c
 29027  015E96  D011               	goto	l8715
 29028  015E98                     l8713:
 29029                           
 29030                           ;stkvar	_s @ sp[(-9)+-2]
 29031  015E98  0EF5               	movlw	-11
 29032  015E9A  50E3               	movf	plusw1,w,c
 29033  015E9C  0F01               	addlw	1
 29034  015E9E  6E37               	movwf	btemp^0,c
 29035  015EA0  0EF5               	movlw	-11
 29036  015EA2  0060  F0DF  FFE3   	movff	btemp,plusw1
 29037  015EA8  6A37               	clrf	btemp^0,c
 29038  015EAA  0EF6               	movlw	-10
 29039  015EAC  50E3               	movf	plusw1,w,c
 29040  015EAE  2037               	addwfc	btemp^0,w,c
 29041  015EB0  6E37               	movwf	btemp^0,c
 29042  015EB2  0EF6               	movlw	-10
 29043  015EB4  0060  F0DF  FFE3   	movff	btemp,plusw1
 29044  015EBA                     l8715:
 29045                           
 29046                           ;stkvar	_atoi$5677 @ sp[(-9)+4]
 29047  015EBA  0EFB               	movlw	-5
 29048  015EBC  6AE3               	clrf	plusw1,c
 29049  015EBE  2AE3               	incf	plusw1,f,c
 29050                           
 29051                           ;stkvar	_s @ sp[(-9)+-2]
 29052  015EC0  50E1               	movf	fsr1l,w,c
 29053  015EC2  0FF5               	addlw	-11
 29054  015EC4  6ED9               	movwf	fsr2l,c
 29055  015EC6  50E2               	movf	fsr1h,w,c
 29056  015EC8  6EDA               	movwf	fsr2h,c
 29057  015ECA  0EFF               	movlw	255
 29058  015ECC  22DA               	addwfc	fsr2h,f,c
 29059  015ECE  006F FF7B FFF6     	movff	postinc2,tblptrl
 29060  015ED4  006F FF77 FFF7     	movff	postdec2,tblptrh
 29061  015EDA                     	if	0	;tblptru may be non-zero
 29062  015EDA                     	endif
 29063  015EDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29064  015EDA  0E00               	movlw	low (__mediumconst shr (0+16))
 29065  015EDC  6EF8               	movwf	tblptru,c
 29066  015EDE                     	endif
 29067  015EDE  0008               	tblrd		*
 29068  015EE0  50F5               	movf	tablat,w,c
 29069  015EE2  0A20               	xorlw	32
 29070  015EE4  B4D8               	btfsc	status,2,c
 29071  015EE6  D023               	goto	l8723
 29072  015EE8  0EF7               	movlw	247
 29073  015EEA  6E41               	movwf	(btemp+10)^0,c
 29074  015EEC  0EFF               	movlw	255
 29075  015EEE  6E42               	movwf	(btemp+11)^0,c
 29076                           
 29077                           ;stkvar	_s @ sp[(-9)+-2]
 29078  015EF0  50E1               	movf	fsr1l,w,c
 29079  015EF2  0FF5               	addlw	-11
 29080  015EF4  6ED9               	movwf	fsr2l,c
 29081  015EF6  50E2               	movf	fsr1h,w,c
 29082  015EF8  6EDA               	movwf	fsr2h,c
 29083  015EFA  0EFF               	movlw	255
 29084  015EFC  22DA               	addwfc	fsr2h,f,c
 29085  015EFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 29086  015F04  006F FF77 FFF7     	movff	postdec2,tblptrh
 29087  015F0A                     	if	0	;tblptru may be non-zero
 29088  015F0A                     	endif
 29089  015F0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29090  015F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 29091  015F0C  6EF8               	movwf	tblptru,c
 29092  015F0E                     	endif
 29093  015F0E  0008               	tblrd		*
 29094  015F10  50F5               	movf	tablat,w,c
 29095  015F12  6E3F               	movwf	(btemp+8)^0,c
 29096  015F14  6A40               	clrf	(btemp+9)^0,c
 29097  015F16  5041               	movf	(btemp+10)^0,w,c
 29098  015F18  263F               	addwf	(btemp+8)^0,f,c
 29099  015F1A  5042               	movf	(btemp+11)^0,w,c
 29100  015F1C  2240               	addwfc	(btemp+9)^0,f,c
 29101  015F1E  5040               	movf	(btemp+9)^0,w,c
 29102  015F20  E104               	bnz	u5760
 29103  015F22  0E05               	movlw	5
 29104  015F24  5C3F               	subwf	(btemp+8)^0,w,c
 29105  015F26  A0D8               	btfss	status,0,c
 29106  015F28  D002               	goto	l8723
 29107  015F2A                     u5760:
 29108                           
 29109                           ;stkvar	_atoi$5677 @ sp[(-9)+4]
 29110  015F2A  0EFB               	movlw	-5
 29111  015F2C  6AE3               	clrf	plusw1,c
 29112  015F2E                     l8723:
 29113                           
 29114                           ;stkvar	_atoi$5677 @ sp[(-9)+4]
 29115  015F2E  0EFB               	movlw	-5
 29116  015F30  50E3               	movf	plusw1,w,c
 29117  015F32  6E41               	movwf	(btemp+10)^0,c
 29118  015F34  6A42               	clrf	(btemp+11)^0,c
 29119                           
 29120                           ;stkvar	_atoi$5676 @ sp[(-9)+2]
 29121  015F36  0EF9               	movlw	-7
 29122  015F38  0060  F107  FFE3   	movff	btemp+10,plusw1
 29123  015F3E  0EFA               	movlw	-6
 29124  015F40  0060  F10B  FFE3   	movff	btemp+11,plusw1
 29125                           
 29126                           ;stkvar	_atoi$5676 @ sp[(-9)+2]
 29127  015F46  0EF9               	movlw	-7
 29128  015F48  006F FF8C  F037    	movff	plusw1,btemp
 29129  015F4E  0EFA               	movlw	-6
 29130  015F50  50E3               	movf	plusw1,w,c
 29131  015F52  1037               	iorwf	btemp^0,w,c
 29132  015F54  B4D8               	btfsc	status,2,c
 29133  015F56  D01F               	goto	l8733
 29134  015F58  D79F               	goto	l8713
 29135  015F5A                     l8729:
 29136  015F5A  0E01               	movlw	1
 29137  015F5C  6E41               	movwf	(btemp+10)^0,c
 29138  015F5E  0E00               	movlw	0
 29139  015F60  6E42               	movwf	(btemp+11)^0,c
 29140                           
 29141                           ;stkvar	_neg @ sp[(-9)+7]
 29142  015F62  0EFE               	movlw	-2
 29143  015F64  0060  F107  FFE3   	movff	btemp+10,plusw1
 29144  015F6A  0EFF               	movlw	-1
 29145  015F6C  0060  F10B  FFE3   	movff	btemp+11,plusw1
 29146  015F72                     l8731:
 29147                           
 29148                           ;stkvar	_s @ sp[(-9)+-2]
 29149  015F72  0EF5               	movlw	-11
 29150  015F74  50E3               	movf	plusw1,w,c
 29151  015F76  0F01               	addlw	1
 29152  015F78  6E37               	movwf	btemp^0,c
 29153  015F7A  0EF5               	movlw	-11
 29154  015F7C  0060  F0DF  FFE3   	movff	btemp,plusw1
 29155  015F82  6A37               	clrf	btemp^0,c
 29156  015F84  0EF6               	movlw	-10
 29157  015F86  50E3               	movf	plusw1,w,c
 29158  015F88  2037               	addwfc	btemp^0,w,c
 29159  015F8A  6E37               	movwf	btemp^0,c
 29160  015F8C  0EF6               	movlw	-10
 29161  015F8E  0060  F0DF  FFE3   	movff	btemp,plusw1
 29162  015F94  D053               	goto	l8739
 29163  015F96                     l8733:
 29164                           
 29165                           ;stkvar	_s @ sp[(-9)+-2]
 29166  015F96  50E1               	movf	fsr1l,w,c
 29167  015F98  0FF5               	addlw	-11
 29168  015F9A  6ED9               	movwf	fsr2l,c
 29169  015F9C  50E2               	movf	fsr1h,w,c
 29170  015F9E  6EDA               	movwf	fsr2h,c
 29171  015FA0  0EFF               	movlw	255
 29172  015FA2  22DA               	addwfc	fsr2h,f,c
 29173  015FA4  006F FF7B FFF6     	movff	postinc2,tblptrl
 29174  015FAA  006F FF77 FFF7     	movff	postdec2,tblptrh
 29175  015FB0                     	if	0	;tblptru may be non-zero
 29176  015FB0                     	endif
 29177  015FB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29178  015FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 29179  015FB2  6EF8               	movwf	tblptru,c
 29180  015FB4                     	endif
 29181  015FB4  0008               	tblrd		*
 29182  015FB6  50F5               	movf	tablat,w,c
 29183  015FB8  6E41               	movwf	(btemp+10)^0,c
 29184  015FBA  6A42               	clrf	(btemp+11)^0,c
 29185                           
 29186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29187                           ; Switch size 1, requested type "simple"
 29188                           ; Number of cases is 1, Range of values is 0 to 0
 29189                           ; switch strategies available:
 29190                           ; Name         Instructions Cycles
 29191                           ; simple_byte            4     3 (average)
 29192                           ;	Chosen strategy is simple_byte
 29193  015FBC  5042               	movf	(btemp+11)^0,w,c
 29194  015FBE  0A00               	xorlw	0	; case 0
 29195  015FC0  A4D8               	btfss	status,2,c
 29196  015FC2  D03C               	goto	l8739
 29197                           
 29198                           ; Switch size 1, requested type "simple"
 29199                           ; Number of cases is 2, Range of values is 43 to 45
 29200                           ; switch strategies available:
 29201                           ; Name         Instructions Cycles
 29202                           ; simple_byte            7     4 (average)
 29203                           ;	Chosen strategy is simple_byte
 29204  015FC4  5041               	movf	(btemp+10)^0,w,c
 29205  015FC6  0A2B               	xorlw	43	; case 43
 29206  015FC8  B4D8               	btfsc	status,2,c
 29207  015FCA  D7D3               	goto	l8731
 29208  015FCC  0A06               	xorlw	6	; case 45
 29209  015FCE  B4D8               	btfsc	status,2,c
 29210  015FD0  D7C4               	goto	l8729
 29211  015FD2  D034               	goto	l8739
 29212  015FD4                     l8735:
 29213                           
 29214                           ;stkvar	_n @ sp[(-9)+5]
 29215  015FD4  0EFC               	movlw	-4
 29216  015FD6  006F FF8C  F041    	movff	plusw1,btemp+10
 29217  015FDC  0EFD               	movlw	-3
 29218  015FDE  006F FF8C  F042    	movff	plusw1,btemp+11
 29219  015FE4  0E0A               	movlw	10
 29220  015FE6  0241               	mulwf	(btemp+10)^0,c
 29221  015FE8  006F FFCC  F03F    	movff	prodl,btemp+8
 29222  015FEE  006F FFD0  F040    	movff	prodh,btemp+9
 29223  015FF4  0242               	mulwf	(btemp+11)^0,c
 29224  015FF6  50F3               	movf	prodl,w,c
 29225  015FF8  2640               	addwf	(btemp+9)^0,f,c
 29226                           
 29227                           ;stkvar	_s @ sp[(-9)+-2]
 29228  015FFA  50E1               	movf	fsr1l,w,c
 29229  015FFC  0FF5               	addlw	-11
 29230  015FFE  6ED9               	movwf	fsr2l,c
 29231  016000  50E2               	movf	fsr1h,w,c
 29232  016002  6EDA               	movwf	fsr2h,c
 29233  016004  0EFF               	movlw	255
 29234  016006  22DA               	addwfc	fsr2h,f,c
 29235  016008  006F FF7B FFF6     	movff	postinc2,tblptrl
 29236  01600E  006F FF77 FFF7     	movff	postdec2,tblptrh
 29237  016014                     	if	0	;tblptru may be non-zero
 29238  016014                     	endif
 29239  016014                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29240  016014  0E00               	movlw	low (__mediumconst shr (0+16))
 29241  016016  6EF8               	movwf	tblptru,c
 29242  016018                     	endif
 29243  016018  0008               	tblrd		*
 29244  01601A  50F5               	movf	tablat,w,c
 29245  01601C  5E3F               	subwf	(btemp+8)^0,f,c
 29246  01601E  0E00               	movlw	0
 29247  016020  5A40               	subwfb	(btemp+9)^0,f,c
 29248  016022  0E30               	movlw	48
 29249  016024  263F               	addwf	(btemp+8)^0,f,c
 29250  016026  0E00               	movlw	0
 29251  016028  2240               	addwfc	(btemp+9)^0,f,c
 29252                           
 29253                           ;stkvar	_n @ sp[(-9)+5]
 29254  01602A  0EFC               	movlw	-4
 29255  01602C  0060  F0FF  FFE3   	movff	btemp+8,plusw1
 29256  016032  0EFD               	movlw	-3
 29257  016034  0060  F103  FFE3   	movff	btemp+9,plusw1
 29258  01603A  D79B               	goto	l8731
 29259  01603C                     l8739:
 29260  01603C  0ED0               	movlw	208
 29261  01603E  6E41               	movwf	(btemp+10)^0,c
 29262  016040  0EFF               	movlw	255
 29263  016042  6E42               	movwf	(btemp+11)^0,c
 29264                           
 29265                           ;stkvar	_s @ sp[(-9)+-2]
 29266  016044  50E1               	movf	fsr1l,w,c
 29267  016046  0FF5               	addlw	-11
 29268  016048  6ED9               	movwf	fsr2l,c
 29269  01604A  50E2               	movf	fsr1h,w,c
 29270  01604C  6EDA               	movwf	fsr2h,c
 29271  01604E  0EFF               	movlw	255
 29272  016050  22DA               	addwfc	fsr2h,f,c
 29273  016052  006F FF7B FFF6     	movff	postinc2,tblptrl
 29274  016058  006F FF77 FFF7     	movff	postdec2,tblptrh
 29275  01605E                     	if	0	;tblptru may be non-zero
 29276  01605E                     	endif
 29277  01605E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29278  01605E  0E00               	movlw	low (__mediumconst shr (0+16))
 29279  016060  6EF8               	movwf	tblptru,c
 29280  016062                     	endif
 29281  016062  0008               	tblrd		*
 29282  016064  50F5               	movf	tablat,w,c
 29283  016066  6E3F               	movwf	(btemp+8)^0,c
 29284  016068  6A40               	clrf	(btemp+9)^0,c
 29285  01606A  5041               	movf	(btemp+10)^0,w,c
 29286  01606C  263F               	addwf	(btemp+8)^0,f,c
 29287  01606E  5042               	movf	(btemp+11)^0,w,c
 29288  016070  2240               	addwfc	(btemp+9)^0,f,c
 29289  016072  5040               	movf	(btemp+9)^0,w,c
 29290  016074  E106               	bnz	u5780
 29291  016076  0E0A               	movlw	10
 29292  016078  5C3F               	subwf	(btemp+8)^0,w,c
 29293  01607A  B0D8               	btfsc	status,0,c
 29294  01607C  D002               	goto	u5780
 29295  01607E  0E01               	movlw	1
 29296  016080  D001               	goto	u5790
 29297  016082                     u5780:
 29298  016082  0E00               	movlw	0
 29299  016084                     u5790:
 29300  016084  6E41               	movwf	(btemp+10)^0,c
 29301  016086  6A42               	clrf	(btemp+11)^0,c
 29302                           
 29303                           ;stkvar	_atoi$5678 @ sp[(-9)+0]
 29304  016088  0EF7               	movlw	-9
 29305  01608A  0060  F107  FFE3   	movff	btemp+10,plusw1
 29306  016090  0EF8               	movlw	-8
 29307  016092  0060  F10B  FFE3   	movff	btemp+11,plusw1
 29308                           
 29309                           ;stkvar	_atoi$5678 @ sp[(-9)+0]
 29310  016098  0EF7               	movlw	-9
 29311  01609A  006F FF8C  F037    	movff	plusw1,btemp
 29312  0160A0  0EF8               	movlw	-8
 29313  0160A2  50E3               	movf	plusw1,w,c
 29314  0160A4  1037               	iorwf	btemp^0,w,c
 29315  0160A6  A4D8               	btfss	status,2,c
 29316  0160A8  D795               	goto	l8735
 29317                           
 29318                           ;stkvar	_neg @ sp[(-9)+7]
 29319  0160AA  0EFE               	movlw	-2
 29320  0160AC  006F FF8C  F037    	movff	plusw1,btemp
 29321  0160B2  0EFF               	movlw	-1
 29322  0160B4  50E3               	movf	plusw1,w,c
 29323  0160B6  1037               	iorwf	btemp^0,w,c
 29324  0160B8  A4D8               	btfss	status,2,c
 29325  0160BA  D00E               	goto	l8749
 29326                           
 29327                           ;stkvar	_n @ sp[(-9)+5]
 29328  0160BC  0EFC               	movlw	-4
 29329  0160BE  006F FF8C  F037    	movff	plusw1,btemp
 29330  0160C4  1E37               	comf	btemp^0,f,c
 29331  0160C6  0EFD               	movlw	-3
 29332  0160C8  006F FF8C  F038    	movff	plusw1,btemp+1
 29333  0160CE  1E38               	comf	(btemp+1)^0,f,c
 29334  0160D0  2A37               	incf	btemp^0,f,c
 29335  0160D2  B4D8               	btfsc	status,2,c
 29336  0160D4  2A38               	incf	(btemp+1)^0,f,c
 29337  0160D6  D008               	goto	l3235
 29338  0160D8                     l8749:
 29339                           
 29340                           ;stkvar	_n @ sp[(-9)+5]
 29341  0160D8  0EFC               	movlw	-4
 29342  0160DA  006F FF8C  F037    	movff	plusw1,btemp
 29343  0160E0  0EFD               	movlw	-3
 29344  0160E2  006F FF8C  F038    	movff	plusw1,btemp+1
 29345  0160E8                     l3235:
 29346                           
 29347                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 29348  0160E8  0EF5               	movlw	245
 29349  0160EA  26E1               	addwf	fsr1l,f,c
 29350  0160EC  0EFF               	movlw	255
 29351  0160EE  22E2               	addwfc	fsr1h,f,c
 29352  0160F0  0012               	return		;funcret
 29353  0160F2                     __end_of_atoi:
 29354                           	opt callstack 0
 29355                           
 29356 ;; *************** function _isspace *****************
 29357 ;; Defined at:
 29358 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 29359 ;; Parameters:    Size  Location     Type
 29360 ;;  c               2  [STACK] int 
 29361 ;; Auto vars:     Size  Location     Type
 29362 ;;		None
 29363 ;; Return value:  Size  Location     Type
 29364 ;;                  2  [STACK] int 
 29365 ;; Registers used:
 29366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 29367 ;; Tracked objects:
 29368 ;;		On entry : 0/0
 29369 ;;		On exit  : 0/0
 29370 ;;		Unchanged: 0/0
 29371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29376 ;;Total ram usage:        0 bytes
 29377 ;; Hardware stack levels used:    1
 29378 ;; Hardware stack levels required when called:    3
 29379 ;; This function calls:
 29380 ;;		Nothing
 29381 ;; This function is called by:
 29382 ;;		_atoi
 29383 ;; This function uses a reentrant model
 29384 ;;
 29385                           
 29386                           	psect	text116
 29387  018DD8                     __ptext116:
 29388                           	opt callstack 0
 29389  018DD8                     _isspace:
 29390                           	opt callstack 0
 29391                           
 29392                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29393  018DD8  52E6               	movf	postinc1,f,c
 29394                           
 29395                           ;stkvar	_isspace$5703 @ sp[(-1)+0]
 29396                           
 29397                           ;incstack = 0
 29398  018DDA  0EFF               	movlw	-1
 29399  018DDC  6AE3               	clrf	plusw1,c
 29400  018DDE  2AE3               	incf	plusw1,f,c
 29401                           
 29402                           ;stkvar	_c @ sp[(-1)+-2]
 29403  018DE0  0EFD               	movlw	-3
 29404  018DE2  006F FF8C  F037    	movff	plusw1,btemp
 29405  018DE8  0E20               	movlw	32
 29406  018DEA  1837               	xorwf	btemp^0,w,c
 29407  018DEC  E104               	bnz	u5080
 29408  018DEE  0EFE               	movlw	-2
 29409  018DF0  50E3               	movf	plusw1,w,c
 29410  018DF2  B4D8               	btfsc	status,2,c
 29411  018DF4  D012               	goto	l8411
 29412  018DF6                     u5080:
 29413                           
 29414                           ;stkvar	_c @ sp[(-1)+-2]
 29415  018DF6  0EFD               	movlw	-3
 29416  018DF8  50E3               	movf	plusw1,w,c
 29417  018DFA  0FF7               	addlw	247
 29418  018DFC  6E41               	movwf	(btemp+10)^0,c
 29419  018DFE  0EFE               	movlw	-2
 29420  018E00  006F FF8C  F042    	movff	plusw1,btemp+11
 29421  018E06  0EFF               	movlw	255
 29422  018E08  2242               	addwfc	(btemp+11)^0,f,c
 29423  018E0A  5042               	movf	(btemp+11)^0,w,c
 29424  018E0C  E104               	bnz	u5090
 29425  018E0E  0E05               	movlw	5
 29426  018E10  5C41               	subwf	(btemp+10)^0,w,c
 29427  018E12  A0D8               	btfss	status,0,c
 29428  018E14  D002               	goto	l8411
 29429  018E16                     u5090:
 29430                           
 29431                           ;stkvar	_isspace$5703 @ sp[(-1)+0]
 29432  018E16  0EFF               	movlw	-1
 29433  018E18  6AE3               	clrf	plusw1,c
 29434  018E1A                     l8411:
 29435                           
 29436                           ;stkvar	_isspace$5703 @ sp[(-1)+0]
 29437  018E1A  0EFF               	movlw	-1
 29438  018E1C  50E3               	movf	plusw1,w,c
 29439  018E1E  6E37               	movwf	btemp^0,c
 29440  018E20  6A38               	clrf	(btemp+1)^0,c
 29441                           
 29442                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29443  018E22  52E5               	movf	postdec1,f,c
 29444  018E24  52E5               	movf	postdec1,f,c
 29445  018E26  52E5               	movf	postdec1,f,c
 29446  018E28  0012               	return		;funcret
 29447  018E2A                     __end_of_isspace:
 29448                           	opt callstack 0
 29449                           
 29450 ;; *************** function _isdigit *****************
 29451 ;; Defined at:
 29452 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 29453 ;; Parameters:    Size  Location     Type
 29454 ;;  c               2  [STACK] int 
 29455 ;; Auto vars:     Size  Location     Type
 29456 ;;		None
 29457 ;; Return value:  Size  Location     Type
 29458 ;;                  2  [STACK] int 
 29459 ;; Registers used:
 29460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 29461 ;; Tracked objects:
 29462 ;;		On entry : 0/0
 29463 ;;		On exit  : 0/0
 29464 ;;		Unchanged: 0/0
 29465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29470 ;;Total ram usage:        0 bytes
 29471 ;; Hardware stack levels used:    1
 29472 ;; Hardware stack levels required when called:    3
 29473 ;; This function calls:
 29474 ;;		Nothing
 29475 ;; This function is called by:
 29476 ;;		_vfpfcnvrt
 29477 ;;		_atoi
 29478 ;; This function uses a reentrant model
 29479 ;;
 29480                           
 29481                           	psect	text117
 29482  019394                     __ptext117:
 29483                           	opt callstack 0
 29484  019394                     _isdigit:
 29485                           	opt callstack 21
 29486                           
 29487                           ;stkvar	_c @ sp[(0)+-2]
 29488                           
 29489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29490                           ;incstack = 0
 29491  019394  0EFE               	movlw	-2
 29492  019396  50E3               	movf	plusw1,w,c
 29493  019398  0FD0               	addlw	208
 29494  01939A  6E41               	movwf	(btemp+10)^0,c
 29495  01939C  0EFF               	movlw	-1
 29496  01939E  006F FF8C  F042    	movff	plusw1,btemp+11
 29497  0193A4  0EFF               	movlw	255
 29498  0193A6  2242               	addwfc	(btemp+11)^0,f,c
 29499  0193A8  5042               	movf	(btemp+11)^0,w,c
 29500  0193AA  E106               	bnz	u4720
 29501  0193AC  0E0A               	movlw	10
 29502  0193AE  5C41               	subwf	(btemp+10)^0,w,c
 29503  0193B0  B0D8               	btfsc	status,0,c
 29504  0193B2  D002               	goto	u4720
 29505  0193B4  0E01               	movlw	1
 29506  0193B6  D001               	goto	u4730
 29507  0193B8                     u4720:
 29508  0193B8  0E00               	movlw	0
 29509  0193BA                     u4730:
 29510  0193BA  6E37               	movwf	btemp^0,c
 29511  0193BC  6A38               	clrf	(btemp+1)^0,c
 29512                           
 29513                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29514  0193BE  52E5               	movf	postdec1,f,c
 29515  0193C0  52E5               	movf	postdec1,f,c
 29516  0193C2  0012               	return		;funcret
 29517  0193C4                     __end_of_isdigit:
 29518                           	opt callstack 0
 29519                           
 29520 ;; *************** function _get_vterm_ptr *****************
 29521 ;; Defined at:
 29522 ;;		line 113 in file "mconfig.c"
 29523 ;; Parameters:    Size  Location     Type
 29524 ;;  line            1  [STACK] unsigned char 
 29525 ;;  vterm           1  [STACK] unsigned char 
 29526 ;; Auto vars:     Size  Location     Type
 29527 ;;		None
 29528 ;; Return value:  Size  Location     Type
 29529 ;;                  2  [STACK] PTR unsigned char 
 29530 ;; Registers used:
 29531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 29532 ;; Tracked objects:
 29533 ;;		On entry : 0/0
 29534 ;;		On exit  : 0/0
 29535 ;;		Unchanged: 0/0
 29536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29541 ;;Total ram usage:        0 bytes
 29542 ;; Hardware stack levels used:    1
 29543 ;; Hardware stack levels required when called:    3
 29544 ;; This function calls:
 29545 ;;		Nothing
 29546 ;; This function is called by:
 29547 ;;		_main
 29548 ;;		_check_help
 29549 ;;		_vterm_dump
 29550 ;;		_vterm_sequence
 29551 ;;		_MyeaDogM_WriteStringAtPos
 29552 ;; This function uses a reentrant model
 29553 ;;
 29554                           
 29555                           	psect	text118
 29556  0193C4                     __ptext118:
 29557                           	opt callstack 0
 29558  0193C4                     _get_vterm_ptr:
 29559                           	opt callstack 24
 29560                           
 29561                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
 29562                           ;stkvar	_vterm @ sp[(0)+-2]
 29563                           
 29564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29565                           ;incstack = 0
 29566  0193C4  0EFE               	movlw	-2
 29567  0193C6  50E3               	movf	plusw1,w,c
 29568  0193C8  0B03               	andlw	3
 29569  0193CA  0D80               	mullw	128
 29570  0193CC  0E00               	movlw	low mconfig@D
 29571  0193CE  6E37               	movwf	btemp^0,c
 29572  0193D0  0E07               	movlw	high mconfig@D
 29573  0193D2  6E38               	movwf	(btemp+1)^0,c
 29574  0193D4  50F3               	movf	243,w,c
 29575  0193D6  2637               	addwf	btemp^0,f,c
 29576  0193D8  50F4               	movf	244,w,c
 29577  0193DA  2238               	addwfc	(btemp+1)^0,f,c
 29578                           
 29579                           ;stkvar	_line @ sp[(0)+-1]
 29580  0193DC  0EFF               	movlw	-1
 29581  0193DE  50E3               	movf	plusw1,w,c
 29582  0193E0  0B03               	andlw	3
 29583  0193E2  0D20               	mullw	32
 29584  0193E4  50F3               	movf	243,w,c
 29585  0193E6  2637               	addwf	btemp^0,f,c
 29586  0193E8  50F4               	movf	244,w,c
 29587  0193EA  2238               	addwfc	(btemp+1)^0,f,c
 29588                           
 29589                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 29590  0193EC  52E5               	movf	postdec1,f,c
 29591  0193EE  52E5               	movf	postdec1,f,c
 29592  0193F0  0012               	return		;funcret
 29593  0193F2                     __end_of_get_vterm_ptr:
 29594                           	opt callstack 0
 29595                           
 29596 ;; *************** function _TimerDone *****************
 29597 ;; Defined at:
 29598 ;;		line 20 in file "timers.c"
 29599 ;; Parameters:    Size  Location     Type
 29600 ;;  timer           1  [STACK] const unsigned char 
 29601 ;; Auto vars:     Size  Location     Type
 29602 ;;		None
 29603 ;; Return value:  Size  Location     Type
 29604 ;;                  1  [STACK] _Bool 
 29605 ;; Registers used:
 29606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 29607 ;; Tracked objects:
 29608 ;;		On entry : 0/3C
 29609 ;;		On exit  : 0/0
 29610 ;;		Unchanged: 0/0
 29611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;Total ram usage:        0 bytes
 29617 ;; Hardware stack levels used:    1
 29618 ;; Hardware stack levels required when called:    3
 29619 ;; This function calls:
 29620 ;;		Nothing
 29621 ;; This function is called by:
 29622 ;;		_main
 29623 ;;		_m_protocol
 29624 ;;		_r_protocol
 29625 ;;		_t_protocol
 29626 ;;		_secs_II_message
 29627 ;;		_secs_gem_state
 29628 ;;		_WaitMs
 29629 ;;		_help_button
 29630 ;;		_check_help
 29631 ;;		_MyeaDogM_WriteStringAtPos
 29632 ;;		_set_display_info
 29633 ;; This function uses a reentrant model
 29634 ;;
 29635                           
 29636                           	psect	text119
 29637  0197C2                     __ptext119:
 29638                           	opt callstack 0
 29639  0197C2                     _TimerDone:
 29640                           	opt callstack 24
 29641                           
 29642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29643                           ;incstack = 0
 29644  0197C2  0004               	clrwdt		;# 
 29645                           
 29646                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 29647                           ;stkvar	_timer @ sp[(0)+-1]
 29648  0197C4  0EFF               	movlw	-1
 29649  0197C6  50E3               	movf	plusw1,w,c
 29650  0197C8  0D02               	mullw	2
 29651  0197CA  50F3               	movf	243,w,c
 29652  0197CC  0F60               	addlw	low _tickCount
 29653  0197CE  6ED9               	movwf	fsr2l,c
 29654  0197D0  6ADA               	clrf	fsr2h,c
 29655  0197D2  50DE               	movf	postinc2,w,c
 29656  0197D4  10DE               	iorwf	postinc2,w,c
 29657  0197D6  A4D8               	btfss	status,2,c
 29658  0197D8  D002               	goto	l9343
 29659                           
 29660                           ;timers.c: 24:   return 1;
 29661  0197DA  0E01               	movlw	1
 29662  0197DC  D001               	goto	L53
 29663  0197DE                     l9343:
 29664                           
 29665                           ;timers.c: 26:  return 0;
 29666  0197DE  0E00               	movlw	0
 29667  0197E0                     L53:
 29668  0197E0  6E37               	movwf	btemp^0,c
 29669                           
 29670                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 29671  0197E2  52E5               	movf	postdec1,f,c
 29672  0197E4  0012               	return		;funcret
 29673  0197E6                     __end_of_TimerDone:
 29674                           	opt callstack 0
 29675                           
 29676 ;; *************** function _INT0_ISR *****************
 29677 ;; Defined at:
 29678 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 29679 ;; Parameters:    Size  Location     Type
 29680 ;;		None
 29681 ;; Auto vars:     Size  Location     Type
 29682 ;;		None
 29683 ;; Return value:  Size  Location     Type
 29684 ;;                  1    wreg      void 
 29685 ;; Registers used:
 29686 ;;		wreg, status,2, status,0, pclath, tosl
 29687 ;; Tracked objects:
 29688 ;;		On entry : 0/0
 29689 ;;		On exit  : 0/0
 29690 ;;		Unchanged: 0/0
 29691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29696 ;;Total ram usage:        0 bytes
 29697 ;; Hardware stack levels used:    1
 29698 ;; Hardware stack levels required when called:    2
 29699 ;; This function calls:
 29700 ;;		_INT0_CallBack
 29701 ;; This function is called by:
 29702 ;;		Interrupt level 2
 29703 ;; This function uses a non-reentrant model
 29704 ;;
 29705                           
 29706                           	psect	text120
 29707  019A58                     __ptext120:
 29708                           	opt callstack 0
 29709  019A58                     _INT0_ISR:
 29710                           	opt callstack 15
 29711                           
 29712                           ;incstack = 0
 29713  019A58  EE15  F13A         	lfsr	1,___inthi_sp
 29714                           
 29715                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 29716  019A5C  0139               	movlb	57	; () banked
 29717  019A5E  91A1               	bcf	161,0,b	;volatile
 29718                           
 29719                           ; BSR set to: 57
 29720                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 29721  019A60  EC17  F0CC         	call	_INT0_CallBack	;wreg free
 29722  019A64  0011               	retfie		f
 29723  019A66                     __end_of_INT0_ISR:
 29724                           	opt callstack 0
 29725                           
 29726 ;; *************** function _INT0_CallBack *****************
 29727 ;; Defined at:
 29728 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 29729 ;; Parameters:    Size  Location     Type
 29730 ;;		None
 29731 ;; Auto vars:     Size  Location     Type
 29732 ;;		None
 29733 ;; Return value:  Size  Location     Type
 29734 ;;                  1  [STACK] void 
 29735 ;; Registers used:
 29736 ;;		wreg, status,2, status,0, pclath, tosl
 29737 ;; Tracked objects:
 29738 ;;		On entry : 3F/39
 29739 ;;		On exit  : 0/0
 29740 ;;		Unchanged: 0/0
 29741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29746 ;;Total ram usage:        0 bytes
 29747 ;; Hardware stack levels used:    1
 29748 ;; Hardware stack levels required when called:    1
 29749 ;; This function calls:
 29750 ;;		Absolute function
 29751 ;;		_INT0_DefaultInterruptHandler
 29752 ;; This function is called by:
 29753 ;;		_INT0_ISR
 29754 ;; This function uses a reentrant model
 29755 ;;
 29756                           
 29757                           	psect	text121
 29758  01982E                     __ptext121:
 29759                           	opt callstack 0
 29760  01982E                     _INT0_CallBack:
 29761                           	opt callstack 15
 29762                           
 29763                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 29764                           
 29765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29766                           ;incstack = 0
 29767  01982E  500A               	movf	_INT0_InterruptHandler^0,w,c
 29768  019830  100B               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 29769  019832  100C               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 29770  019834  B4D8               	btfsc	status,2,c
 29771  019836  0012               	return	
 29772                           
 29773                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 29774  019838  D801               	call	u305_48
 29775  01983A  0012               	return	
 29776  01983C                     u305_48:
 29777  01983C  0005               	push	
 29778  01983E  6EFA               	movwf	pclath,c
 29779  019840  500A               	movf	_INT0_InterruptHandler^0,w,c
 29780  019842  6EFD               	movwf	tosl,c
 29781  019844  500B               	movf	(_INT0_InterruptHandler+1)^0,w,c
 29782  019846  6EFE               	movwf	tosh,c
 29783  019848  500C               	movf	(_INT0_InterruptHandler+2)^0,w,c
 29784  01984A  6EFF               	movwf	tosu,c
 29785  01984C  50FA               	movf	pclath,w,c
 29786  01984E  0012               	return		;indir
 29787  019850                     __end_of_INT0_CallBack:
 29788                           	opt callstack 0
 29789                           
 29790 ;; *************** function _INT0_DefaultInterruptHandler *****************
 29791 ;; Defined at:
 29792 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 29793 ;; Parameters:    Size  Location     Type
 29794 ;;		None
 29795 ;; Auto vars:     Size  Location     Type
 29796 ;;		None
 29797 ;; Return value:  Size  Location     Type
 29798 ;;                  1  [STACK] void 
 29799 ;; Registers used:
 29800 ;;		None
 29801 ;; Tracked objects:
 29802 ;;		On entry : 0/39
 29803 ;;		On exit  : 0/0
 29804 ;;		Unchanged: 0/0
 29805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29810 ;;Total ram usage:        0 bytes
 29811 ;; Hardware stack levels used:    1
 29812 ;; This function calls:
 29813 ;;		Nothing
 29814 ;; This function is called by:
 29815 ;;		_EXT_INT_Initialize
 29816 ;;		_INT0_CallBack
 29817 ;; This function uses a reentrant model
 29818 ;;
 29819                           
 29820                           	psect	text122
 29821  019AEC                     __ptext122:
 29822                           	opt callstack 0
 29823  019AEC                     _INT0_DefaultInterruptHandler:
 29824                           	opt callstack 15
 29825                           
 29826                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29827                           
 29828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29829                           ;incstack = 0
 29830  019AEC  0012               	return		;funcret
 29831  019AEE                     __end_of_INT0_DefaultInterruptHandler:
 29832                           	opt callstack 0
 29833                           
 29834 ;; *************** function _INT1_ISR *****************
 29835 ;; Defined at:
 29836 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 29837 ;; Parameters:    Size  Location     Type
 29838 ;;		None
 29839 ;; Auto vars:     Size  Location     Type
 29840 ;;		None
 29841 ;; Return value:  Size  Location     Type
 29842 ;;                  1    wreg      void 
 29843 ;; Registers used:
 29844 ;;		wreg, status,2, status,0, pclath, tosl
 29845 ;; Tracked objects:
 29846 ;;		On entry : 0/0
 29847 ;;		On exit  : 0/0
 29848 ;;		Unchanged: 0/0
 29849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29854 ;;Total ram usage:        0 bytes
 29855 ;; Hardware stack levels used:    1
 29856 ;; Hardware stack levels required when called:    2
 29857 ;; This function calls:
 29858 ;;		_INT1_CallBack
 29859 ;; This function is called by:
 29860 ;;		Interrupt level 2
 29861 ;; This function uses a non-reentrant model
 29862 ;;
 29863                           
 29864                           	psect	text123
 29865  019A68                     __ptext123:
 29866                           	opt callstack 0
 29867  019A68                     _INT1_ISR:
 29868                           	opt callstack 15
 29869                           
 29870                           ;incstack = 0
 29871  019A68  EE15  F13A         	lfsr	1,___inthi_sp
 29872                           
 29873                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 29874  019A6C  0139               	movlb	57	; () banked
 29875  019A6E  91A5               	bcf	165,0,b	;volatile
 29876                           
 29877                           ; BSR set to: 57
 29878                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 29879  019A70  EC28  F0CC         	call	_INT1_CallBack	;wreg free
 29880  019A74  0011               	retfie		f
 29881  019A76                     __end_of_INT1_ISR:
 29882                           	opt callstack 0
 29883                           
 29884 ;; *************** function _INT1_CallBack *****************
 29885 ;; Defined at:
 29886 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 29887 ;; Parameters:    Size  Location     Type
 29888 ;;		None
 29889 ;; Auto vars:     Size  Location     Type
 29890 ;;		None
 29891 ;; Return value:  Size  Location     Type
 29892 ;;                  1  [STACK] void 
 29893 ;; Registers used:
 29894 ;;		wreg, status,2, status,0, pclath, tosl
 29895 ;; Tracked objects:
 29896 ;;		On entry : 3F/39
 29897 ;;		On exit  : 0/0
 29898 ;;		Unchanged: 0/0
 29899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29904 ;;Total ram usage:        0 bytes
 29905 ;; Hardware stack levels used:    1
 29906 ;; Hardware stack levels required when called:    1
 29907 ;; This function calls:
 29908 ;;		Absolute function
 29909 ;;		_INT1_DefaultInterruptHandler
 29910 ;; This function is called by:
 29911 ;;		_INT1_ISR
 29912 ;; This function uses a reentrant model
 29913 ;;
 29914                           
 29915                           	psect	text124
 29916  019850                     __ptext124:
 29917                           	opt callstack 0
 29918  019850                     _INT1_CallBack:
 29919                           	opt callstack 15
 29920                           
 29921                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 29922                           
 29923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29924                           ;incstack = 0
 29925  019850  5007               	movf	_INT1_InterruptHandler^0,w,c
 29926  019852  1008               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 29927  019854  1009               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 29928  019856  B4D8               	btfsc	status,2,c
 29929  019858  0012               	return	
 29930                           
 29931                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 29932  01985A  D801               	call	u307_48
 29933  01985C  0012               	return	
 29934  01985E                     u307_48:
 29935  01985E  0005               	push	
 29936  019860  6EFA               	movwf	pclath,c
 29937  019862  5007               	movf	_INT1_InterruptHandler^0,w,c
 29938  019864  6EFD               	movwf	tosl,c
 29939  019866  5008               	movf	(_INT1_InterruptHandler+1)^0,w,c
 29940  019868  6EFE               	movwf	tosh,c
 29941  01986A  5009               	movf	(_INT1_InterruptHandler+2)^0,w,c
 29942  01986C  6EFF               	movwf	tosu,c
 29943  01986E  50FA               	movf	pclath,w,c
 29944  019870  0012               	return		;indir
 29945  019872                     __end_of_INT1_CallBack:
 29946                           	opt callstack 0
 29947                           
 29948 ;; *************** function _INT1_DefaultInterruptHandler *****************
 29949 ;; Defined at:
 29950 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 29951 ;; Parameters:    Size  Location     Type
 29952 ;;		None
 29953 ;; Auto vars:     Size  Location     Type
 29954 ;;		None
 29955 ;; Return value:  Size  Location     Type
 29956 ;;                  1  [STACK] void 
 29957 ;; Registers used:
 29958 ;;		None
 29959 ;; Tracked objects:
 29960 ;;		On entry : 0/39
 29961 ;;		On exit  : 0/0
 29962 ;;		Unchanged: 0/0
 29963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29968 ;;Total ram usage:        0 bytes
 29969 ;; Hardware stack levels used:    1
 29970 ;; This function calls:
 29971 ;;		Nothing
 29972 ;; This function is called by:
 29973 ;;		_EXT_INT_Initialize
 29974 ;;		_INT1_CallBack
 29975 ;; This function uses a reentrant model
 29976 ;;
 29977                           
 29978                           	psect	text125
 29979  019AEE                     __ptext125:
 29980                           	opt callstack 0
 29981  019AEE                     _INT1_DefaultInterruptHandler:
 29982                           	opt callstack 15
 29983                           
 29984                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29985                           
 29986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29987                           ;incstack = 0
 29988  019AEE  0012               	return		;funcret
 29989  019AF0                     __end_of_INT1_DefaultInterruptHandler:
 29990                           	opt callstack 0
 29991                           
 29992 ;; *************** function _Default_ISR *****************
 29993 ;; Defined at:
 29994 ;;		line 87 in file "mcc_generated_files/interrupt_manager.c"
 29995 ;; Parameters:    Size  Location     Type
 29996 ;;		None
 29997 ;; Auto vars:     Size  Location     Type
 29998 ;;		None
 29999 ;; Return value:  Size  Location     Type
 30000 ;;                  1    wreg      void 
 30001 ;; Registers used:
 30002 ;;		None
 30003 ;; Tracked objects:
 30004 ;;		On entry : 0/0
 30005 ;;		On exit  : 0/0
 30006 ;;		Unchanged: 0/0
 30007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30012 ;;Total ram usage:        0 bytes
 30013 ;; Hardware stack levels used:    1
 30014 ;; This function calls:
 30015 ;;		Nothing
 30016 ;; This function is called by:
 30017 ;;		Interrupt level 2
 30018 ;; This function uses a non-reentrant model
 30019 ;;
 30020                           
 30021                           	psect	text126
 30022  019AE0                     __ptext126:
 30023                           	opt callstack 0
 30024  019AE0                     _Default_ISR:
 30025                           	opt callstack 17
 30026                           
 30027                           ;incstack = 0
 30028  019AE0  EE15  F13A         	lfsr	1,___inthi_sp
 30029  019AE4  0011               	retfie		f
 30030  019AE6                     __end_of_Default_ISR:
 30031                           	opt callstack 0
 30032                           
 30033 ;; *************** function _ADCC_ISR *****************
 30034 ;; Defined at:
 30035 ;;		line 307 in file "mcc_generated_files/adcc.c"
 30036 ;; Parameters:    Size  Location     Type
 30037 ;;		None
 30038 ;; Auto vars:     Size  Location     Type
 30039 ;;		None
 30040 ;; Return value:  Size  Location     Type
 30041 ;;                  1    wreg      void 
 30042 ;; Registers used:
 30043 ;;		wreg, status,2, status,0, pclath, tosl
 30044 ;; Tracked objects:
 30045 ;;		On entry : 0/0
 30046 ;;		On exit  : 0/0
 30047 ;;		Unchanged: 0/0
 30048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30053 ;;Total ram usage:        0 bytes
 30054 ;; Hardware stack levels used:    1
 30055 ;; Hardware stack levels required when called:    1
 30056 ;; This function calls:
 30057 ;;		Absolute function
 30058 ;;		_ADCC_DefaultInterruptHandler
 30059 ;; This function is called by:
 30060 ;;		Interrupt level 2
 30061 ;; This function uses a non-reentrant model
 30062 ;;
 30063                           
 30064                           	psect	text127
 30065  0193F4                     __ptext127:
 30066                           	opt callstack 0
 30067  0193F4                     _ADCC_ISR:
 30068                           	opt callstack 16
 30069                           
 30070                           ;incstack = 0
 30071  0193F4  EE15  F13A         	lfsr	1,___inthi_sp
 30072                           
 30073                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 30074  0193F8  0139               	movlb	57	; () banked
 30075  0193FA  95A1               	bcf	161,2,b	;volatile
 30076                           
 30077                           ; BSR set to: 57
 30078                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 30079  0193FC  0100               	movlb	0	; () banked
 30080  0193FE  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 30081  019400  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 30082  019402  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 30083  019404  B4D8               	btfsc	status,2,c
 30084  019406  0011               	retfie		f
 30085                           
 30086                           ; BSR set to: 0
 30087                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 30088  019408  D801               	call	i2u852_48
 30089  01940A  0011               	retfie		f
 30090  01940C                     i2u852_48:
 30091  01940C  0005               	push	
 30092  01940E  6EFA               	movwf	pclath,c
 30093  019410  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 30094  019412  6EFD               	movwf	tosl,c
 30095  019414  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 30096  019416  6EFE               	movwf	tosh,c
 30097  019418  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 30098  01941A  6EFF               	movwf	tosu,c
 30099  01941C  50FA               	movf	pclath,w,c
 30100  01941E  0012               	return		;indir
 30101  019420                     __end_of_ADCC_ISR:
 30102                           	opt callstack 0
 30103                           
 30104 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 30105 ;; Defined at:
 30106 ;;		line 320 in file "mcc_generated_files/adcc.c"
 30107 ;; Parameters:    Size  Location     Type
 30108 ;;		None
 30109 ;; Auto vars:     Size  Location     Type
 30110 ;;		None
 30111 ;; Return value:  Size  Location     Type
 30112 ;;                  1  [STACK] void 
 30113 ;; Registers used:
 30114 ;;		None
 30115 ;; Tracked objects:
 30116 ;;		On entry : 3F/0
 30117 ;;		On exit  : 0/0
 30118 ;;		Unchanged: 0/0
 30119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30124 ;;Total ram usage:        0 bytes
 30125 ;; Hardware stack levels used:    1
 30126 ;; This function calls:
 30127 ;;		Nothing
 30128 ;; This function is called by:
 30129 ;;		_ADCC_Initialize
 30130 ;;		_ADCC_ISR
 30131 ;; This function uses a reentrant model
 30132 ;;
 30133                           
 30134                           	psect	text128
 30135  019AF0                     __ptext128:
 30136                           	opt callstack 0
 30137  019AF0                     _ADCC_DefaultInterruptHandler:
 30138                           	opt callstack 16
 30139                           
 30140                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30141                           
 30142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30143                           ;incstack = 0
 30144  019AF0  0012               	return		;funcret
 30145  019AF2                     __end_of_ADCC_DefaultInterruptHandler:
 30146                           	opt callstack 0
 30147                           
 30148 ;; *************** function _UART1_tx_vect_isr *****************
 30149 ;; Defined at:
 30150 ;;		line 200 in file "mcc_generated_files/uart1.c"
 30151 ;; Parameters:    Size  Location     Type
 30152 ;;		None
 30153 ;; Auto vars:     Size  Location     Type
 30154 ;;		None
 30155 ;; Return value:  Size  Location     Type
 30156 ;;                  1    wreg      void 
 30157 ;; Registers used:
 30158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 30159 ;; Tracked objects:
 30160 ;;		On entry : 0/0
 30161 ;;		On exit  : 0/0
 30162 ;;		Unchanged: 0/0
 30163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30168 ;;Total ram usage:        0 bytes
 30169 ;; Hardware stack levels used:    1
 30170 ;; Hardware stack levels required when called:    1
 30171 ;; This function calls:
 30172 ;;		Absolute function
 30173 ;;		_UART1_Transmit_ISR
 30174 ;; This function is called by:
 30175 ;;		Interrupt level 2
 30176 ;; This function uses a non-reentrant model
 30177 ;;
 30178                           
 30179                           	psect	text129
 30180  019724                     __ptext129:
 30181                           	opt callstack 0
 30182  019724                     _UART1_tx_vect_isr:
 30183                           	opt callstack 16
 30184                           
 30185                           ;incstack = 0
 30186  019724  EE15  F13A         	lfsr	1,___inthi_sp
 30187                           
 30188                           ;mcc_generated_files/uart1.c: 202:  if (UART1_TxInterruptHandler) {
 30189  019728  0100               	movlb	0	; () banked
 30190  01972A  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 30191  01972C  11A8               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 30192  01972E  11A9               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 30193  019730  B4D8               	btfsc	status,2,c
 30194  019732  0011               	retfie		f
 30195                           
 30196                           ; BSR set to: 0
 30197                           ;mcc_generated_files/uart1.c: 203:   UART1_TxInterruptHandler();
 30198  019734  D801               	call	i2u854_48
 30199  019736  0011               	retfie		f
 30200  019738                     i2u854_48:
 30201  019738  0005               	push	
 30202  01973A  6EFA               	movwf	pclath,c
 30203  01973C  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 30204  01973E  6EFD               	movwf	tosl,c
 30205  019740  51A8               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 30206  019742  6EFE               	movwf	tosh,c
 30207  019744  51A9               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 30208  019746  6EFF               	movwf	tosu,c
 30209  019748  50FA               	movf	pclath,w,c
 30210  01974A  0012               	return		;indir
 30211  01974C                     __end_of_UART1_tx_vect_isr:
 30212                           	opt callstack 0
 30213                           
 30214 ;; *************** function _UART1_Transmit_ISR *****************
 30215 ;; Defined at:
 30216 ;;		line 214 in file "mcc_generated_files/uart1.c"
 30217 ;; Parameters:    Size  Location     Type
 30218 ;;		None
 30219 ;; Auto vars:     Size  Location     Type
 30220 ;;		None
 30221 ;; Return value:  Size  Location     Type
 30222 ;;                  1  [STACK] void 
 30223 ;; Registers used:
 30224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30225 ;; Tracked objects:
 30226 ;;		On entry : 3F/0
 30227 ;;		On exit  : 3B/39
 30228 ;;		Unchanged: 0/0
 30229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30234 ;;Total ram usage:        0 bytes
 30235 ;; Hardware stack levels used:    1
 30236 ;; This function calls:
 30237 ;;		Nothing
 30238 ;; This function is called by:
 30239 ;;		_UART1_Initialize
 30240 ;;		_UART1_tx_vect_isr
 30241 ;; This function uses a reentrant model
 30242 ;;
 30243                           
 30244                           	psect	text130
 30245  019420                     __ptext130:
 30246                           	opt callstack 0
 30247  019420                     _UART1_Transmit_ISR:
 30248                           	opt callstack 16
 30249                           
 30250                           ;mcc_generated_files/uart1.c: 217:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 30251                           
 30252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30253                           ;incstack = 0
 30254  019420  0E40               	movlw	64
 30255  019422  602D               	cpfslt	_uart1TxBufferRemaining^0,c
 30256  019424  D010               	goto	l570
 30257                           
 30258                           ;mcc_generated_files/uart1.c: 218:   U1TXB = uart1TxBuffer[uart1TxTail++];
 30259  019426  0E40               	movlw	low _uart1TxBuffer
 30260  019428  242E               	addwf	_uart1TxTail^0,w,c	;volatile
 30261  01942A  6ED9               	movwf	fsr2l,c
 30262  01942C  6ADA               	clrf	fsr2h,c
 30263  01942E  0E02               	movlw	high _uart1TxBuffer
 30264  019430  22DA               	addwfc	fsr2h,f,c
 30265  019432  50DF               	movf	indf2,w,c
 30266  019434  013D               	movlb	61	; () banked
 30267  019436  6FEA               	movwf	234,b	;volatile
 30268                           
 30269                           ; BSR set to: 61
 30270  019438  2A2E               	incf	_uart1TxTail^0,f,c	;volatile
 30271                           
 30272                           ; BSR set to: 61
 30273                           ;mcc_generated_files/uart1.c: 219:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 30274  01943A  0E3F               	movlw	63
 30275  01943C  642E               	cpfsgt	_uart1TxTail^0,c
 30276  01943E  D001               	goto	l11107
 30277                           
 30278                           ; BSR set to: 61
 30279                           ;mcc_generated_files/uart1.c: 220:    uart1TxTail = 0;
 30280  019440  6A2E               	clrf	_uart1TxTail^0,c	;volatile
 30281  019442                     l11107:
 30282                           
 30283                           ; BSR set to: 61
 30284                           ;mcc_generated_files/uart1.c: 222:   uart1TxBufferRemaining++;
 30285  019442  2A2D               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 30286                           
 30287                           ;mcc_generated_files/uart1.c: 223:  } else {
 30288  019444  0012               	return	
 30289  019446                     l570:
 30290                           
 30291                           ;mcc_generated_files/uart1.c: 224:   PIE3bits.U1TXIE = 0;
 30292  019446  0139               	movlb	57	; () banked
 30293  019448  9993               	bcf	147,4,b	;volatile
 30294                           
 30295                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30296  01944A  0012               	return		;funcret
 30297  01944C                     __end_of_UART1_Transmit_ISR:
 30298                           	opt callstack 0
 30299                           
 30300 ;; *************** function _UART1_rx_vect_isr *****************
 30301 ;; Defined at:
 30302 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30303 ;; Parameters:    Size  Location     Type
 30304 ;;		None
 30305 ;; Auto vars:     Size  Location     Type
 30306 ;;		None
 30307 ;; Return value:  Size  Location     Type
 30308 ;;                  1    wreg      void 
 30309 ;; Registers used:
 30310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 30311 ;; Tracked objects:
 30312 ;;		On entry : 0/0
 30313 ;;		On exit  : 0/0
 30314 ;;		Unchanged: 0/0
 30315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30320 ;;Total ram usage:        0 bytes
 30321 ;; Hardware stack levels used:    1
 30322 ;; Hardware stack levels required when called:    1
 30323 ;; This function calls:
 30324 ;;		Absolute function
 30325 ;;		_UART1_Receive_ISR
 30326 ;; This function is called by:
 30327 ;;		Interrupt level 2
 30328 ;; This function uses a non-reentrant model
 30329 ;;
 30330                           
 30331                           	psect	text131
 30332  01974C                     __ptext131:
 30333                           	opt callstack 0
 30334  01974C                     _UART1_rx_vect_isr:
 30335                           	opt callstack 16
 30336                           
 30337                           ;incstack = 0
 30338  01974C  EE15  F13A         	lfsr	1,___inthi_sp
 30339                           
 30340                           ;mcc_generated_files/uart1.c: 209:  if (UART1_RxInterruptHandler) {
 30341  019750  0100               	movlb	0	; () banked
 30342  019752  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 30343  019754  11AB               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 30344  019756  11AC               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 30345  019758  B4D8               	btfsc	status,2,c
 30346  01975A  0011               	retfie		f
 30347                           
 30348                           ; BSR set to: 0
 30349                           ;mcc_generated_files/uart1.c: 210:   UART1_RxInterruptHandler();
 30350  01975C  D801               	call	i2u856_48
 30351  01975E  0011               	retfie		f
 30352  019760                     i2u856_48:
 30353  019760  0005               	push	
 30354  019762  6EFA               	movwf	pclath,c
 30355  019764  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 30356  019766  6EFD               	movwf	tosl,c
 30357  019768  51AB               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 30358  01976A  6EFE               	movwf	tosh,c
 30359  01976C  51AC               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 30360  01976E  6EFF               	movwf	tosu,c
 30361  019770  50FA               	movf	pclath,w,c
 30362  019772  0012               	return		;indir
 30363  019774                     __end_of_UART1_rx_vect_isr:
 30364                           	opt callstack 0
 30365                           
 30366 ;; *************** function _UART1_Receive_ISR *****************
 30367 ;; Defined at:
 30368 ;;		line 230 in file "mcc_generated_files/uart1.c"
 30369 ;; Parameters:    Size  Location     Type
 30370 ;;		None
 30371 ;; Auto vars:     Size  Location     Type
 30372 ;;		None
 30373 ;; Return value:  Size  Location     Type
 30374 ;;                  1  [STACK] void 
 30375 ;; Registers used:
 30376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30377 ;; Tracked objects:
 30378 ;;		On entry : 3F/0
 30379 ;;		On exit  : 0/0
 30380 ;;		Unchanged: 0/0
 30381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30386 ;;Total ram usage:        0 bytes
 30387 ;; Hardware stack levels used:    1
 30388 ;; This function calls:
 30389 ;;		Nothing
 30390 ;; This function is called by:
 30391 ;;		_UART1_Initialize
 30392 ;;		_UART1_rx_vect_isr
 30393 ;; This function uses a reentrant model
 30394 ;;
 30395                           
 30396                           	psect	text132
 30397  0198CE                     __ptext132:
 30398                           	opt callstack 0
 30399  0198CE                     _UART1_Receive_ISR:
 30400                           	opt callstack 16
 30401                           
 30402                           ;mcc_generated_files/uart1.c: 233:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 30403                           
 30404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30405                           ;incstack = 0
 30406  0198CE  0E00               	movlw	low _uart1RxBuffer
 30407  0198D0  242C               	addwf	_uart1RxHead^0,w,c	;volatile
 30408  0198D2  6ED9               	movwf	fsr2l,c
 30409  0198D4  6ADA               	clrf	fsr2h,c
 30410  0198D6  0E04               	movlw	high _uart1RxBuffer
 30411  0198D8  22DA               	addwfc	fsr2h,f,c
 30412  0198DA  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 30413  0198E0  2A2C               	incf	_uart1RxHead^0,f,c	;volatile
 30414                           
 30415                           ;mcc_generated_files/uart1.c: 234:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 30416  0198E2  282C               	incf	_uart1RxHead^0,w,c
 30417  0198E4  B4D8               	btfsc	status,2,c
 30418                           
 30419                           ;mcc_generated_files/uart1.c: 235:   uart1RxHead = 0;
 30420  0198E6  6A2C               	clrf	_uart1RxHead^0,c	;volatile
 30421                           
 30422                           ;mcc_generated_files/uart1.c: 237:  uart1RxCount++;
 30423  0198E8  2A2A               	incf	_uart1RxCount^0,f,c	;volatile
 30424                           
 30425                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30426  0198EA  0012               	return		;funcret
 30427  0198EC                     __end_of_UART1_Receive_ISR:
 30428                           	opt callstack 0
 30429                           
 30430 ;; *************** function _UART2_tx_vect_isr *****************
 30431 ;; Defined at:
 30432 ;;		line 195 in file "mcc_generated_files/uart2.c"
 30433 ;; Parameters:    Size  Location     Type
 30434 ;;		None
 30435 ;; Auto vars:     Size  Location     Type
 30436 ;;		None
 30437 ;; Return value:  Size  Location     Type
 30438 ;;                  1    wreg      void 
 30439 ;; Registers used:
 30440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 30441 ;; Tracked objects:
 30442 ;;		On entry : 0/0
 30443 ;;		On exit  : 0/0
 30444 ;;		Unchanged: 0/0
 30445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30450 ;;Total ram usage:        0 bytes
 30451 ;; Hardware stack levels used:    1
 30452 ;; Hardware stack levels required when called:    1
 30453 ;; This function calls:
 30454 ;;		Absolute function
 30455 ;;		_UART2_Transmit_ISR
 30456 ;; This function is called by:
 30457 ;;		Interrupt level 2
 30458 ;; This function uses a non-reentrant model
 30459 ;;
 30460                           
 30461                           	psect	text133
 30462  019774                     __ptext133:
 30463                           	opt callstack 0
 30464  019774                     _UART2_tx_vect_isr:
 30465                           	opt callstack 16
 30466                           
 30467                           ;incstack = 0
 30468  019774  EE15  F13A         	lfsr	1,___inthi_sp
 30469                           
 30470                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 30471  019778  5001               	movf	_UART2_TxInterruptHandler^0,w,c
 30472  01977A  1002               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 30473  01977C  1003               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 30474  01977E  B4D8               	btfsc	status,2,c
 30475  019780  0011               	retfie		f
 30476                           
 30477                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 30478  019782  D801               	call	i2u858_48
 30479  019784  0011               	retfie		f
 30480  019786                     i2u858_48:
 30481  019786  0005               	push	
 30482  019788  6EFA               	movwf	pclath,c
 30483  01978A  5001               	movf	_UART2_TxInterruptHandler^0,w,c
 30484  01978C  6EFD               	movwf	tosl,c
 30485  01978E  5002               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 30486  019790  6EFE               	movwf	tosh,c
 30487  019792  5003               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 30488  019794  6EFF               	movwf	tosu,c
 30489  019796  50FA               	movf	pclath,w,c
 30490  019798  0012               	return		;indir
 30491  01979A                     __end_of_UART2_tx_vect_isr:
 30492                           	opt callstack 0
 30493                           
 30494 ;; *************** function _UART2_Transmit_ISR *****************
 30495 ;; Defined at:
 30496 ;;		line 213 in file "mcc_generated_files/uart2.c"
 30497 ;; Parameters:    Size  Location     Type
 30498 ;;		None
 30499 ;; Auto vars:     Size  Location     Type
 30500 ;;		None
 30501 ;; Return value:  Size  Location     Type
 30502 ;;                  1  [STACK] void 
 30503 ;; Registers used:
 30504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30505 ;; Tracked objects:
 30506 ;;		On entry : 0/0
 30507 ;;		On exit  : 3B/39
 30508 ;;		Unchanged: 0/0
 30509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30514 ;;Total ram usage:        0 bytes
 30515 ;; Hardware stack levels used:    1
 30516 ;; This function calls:
 30517 ;;		Nothing
 30518 ;; This function is called by:
 30519 ;;		_UART2_Initialize
 30520 ;;		_UART2_tx_vect_isr
 30521 ;; This function uses a reentrant model
 30522 ;;
 30523                           
 30524                           	psect	text134
 30525  01944C                     __ptext134:
 30526                           	opt callstack 0
 30527  01944C                     _UART2_Transmit_ISR:
 30528                           	opt callstack 16
 30529                           
 30530                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 30531                           
 30532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30533                           ;incstack = 0
 30534  01944C  0E40               	movlw	64
 30535  01944E  6027               	cpfslt	_uart2TxBufferRemaining^0,c
 30536  019450  D010               	goto	l690
 30537                           
 30538                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 30539  019452  0E00               	movlw	low _uart2TxBuffer
 30540  019454  2428               	addwf	_uart2TxTail^0,w,c	;volatile
 30541  019456  6ED9               	movwf	fsr2l,c
 30542  019458  6ADA               	clrf	fsr2h,c
 30543  01945A  0E02               	movlw	high _uart2TxBuffer
 30544  01945C  22DA               	addwfc	fsr2h,f,c
 30545  01945E  50DF               	movf	indf2,w,c
 30546  019460  013D               	movlb	61	; () banked
 30547  019462  6FD2               	movwf	210,b	;volatile
 30548                           
 30549                           ; BSR set to: 61
 30550  019464  2A28               	incf	_uart2TxTail^0,f,c	;volatile
 30551                           
 30552                           ; BSR set to: 61
 30553                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 30554  019466  0E3F               	movlw	63
 30555  019468  6428               	cpfsgt	_uart2TxTail^0,c
 30556  01946A  D001               	goto	l11129
 30557                           
 30558                           ; BSR set to: 61
 30559                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 30560  01946C  6A28               	clrf	_uart2TxTail^0,c	;volatile
 30561  01946E                     l11129:
 30562                           
 30563                           ; BSR set to: 61
 30564                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 30565  01946E  2A27               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 30566                           
 30567                           ;mcc_generated_files/uart2.c: 224:     }
 30568  019470  0012               	return	
 30569  019472                     l690:
 30570                           
 30571                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 30572  019472  0139               	movlb	57	; () banked
 30573  019474  9796               	bcf	150,3,b	;volatile
 30574                           
 30575                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30576  019476  0012               	return		;funcret
 30577  019478                     __end_of_UART2_Transmit_ISR:
 30578                           	opt callstack 0
 30579                           
 30580 ;; *************** function _UART2_rx_vect_isr *****************
 30581 ;; Defined at:
 30582 ;;		line 203 in file "mcc_generated_files/uart2.c"
 30583 ;; Parameters:    Size  Location     Type
 30584 ;;		None
 30585 ;; Auto vars:     Size  Location     Type
 30586 ;;		None
 30587 ;; Return value:  Size  Location     Type
 30588 ;;                  1    wreg      void 
 30589 ;; Registers used:
 30590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 30591 ;; Tracked objects:
 30592 ;;		On entry : 0/0
 30593 ;;		On exit  : 0/0
 30594 ;;		Unchanged: 0/0
 30595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30600 ;;Total ram usage:        0 bytes
 30601 ;; Hardware stack levels used:    1
 30602 ;; Hardware stack levels required when called:    1
 30603 ;; This function calls:
 30604 ;;		Absolute function
 30605 ;;		_UART2_Receive_ISR
 30606 ;; This function is called by:
 30607 ;;		Interrupt level 2
 30608 ;; This function uses a non-reentrant model
 30609 ;;
 30610                           
 30611                           	psect	text135
 30612  01979C                     __ptext135:
 30613                           	opt callstack 0
 30614  01979C                     _UART2_rx_vect_isr:
 30615                           	opt callstack 16
 30616                           
 30617                           ;incstack = 0
 30618  01979C  EE15  F13A         	lfsr	1,___inthi_sp
 30619                           
 30620                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 30621  0197A0  5004               	movf	_UART2_RxInterruptHandler^0,w,c
 30622  0197A2  1005               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 30623  0197A4  1006               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 30624  0197A6  B4D8               	btfsc	status,2,c
 30625  0197A8  0011               	retfie		f
 30626                           
 30627                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 30628  0197AA  D801               	call	i2u860_48
 30629  0197AC  0011               	retfie		f
 30630  0197AE                     i2u860_48:
 30631  0197AE  0005               	push	
 30632  0197B0  6EFA               	movwf	pclath,c
 30633  0197B2  5004               	movf	_UART2_RxInterruptHandler^0,w,c
 30634  0197B4  6EFD               	movwf	tosl,c
 30635  0197B6  5005               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 30636  0197B8  6EFE               	movwf	tosh,c
 30637  0197BA  5006               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 30638  0197BC  6EFF               	movwf	tosu,c
 30639  0197BE  50FA               	movf	pclath,w,c
 30640  0197C0  0012               	return		;indir
 30641  0197C2                     __end_of_UART2_rx_vect_isr:
 30642                           	opt callstack 0
 30643                           
 30644 ;; *************** function _UART2_Receive_ISR *****************
 30645 ;; Defined at:
 30646 ;;		line 233 in file "mcc_generated_files/uart2.c"
 30647 ;; Parameters:    Size  Location     Type
 30648 ;;		None
 30649 ;; Auto vars:     Size  Location     Type
 30650 ;;		None
 30651 ;; Return value:  Size  Location     Type
 30652 ;;                  1  [STACK] void 
 30653 ;; Registers used:
 30654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30655 ;; Tracked objects:
 30656 ;;		On entry : 0/0
 30657 ;;		On exit  : 0/0
 30658 ;;		Unchanged: 0/0
 30659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30664 ;;Total ram usage:        0 bytes
 30665 ;; Hardware stack levels used:    1
 30666 ;; This function calls:
 30667 ;;		Nothing
 30668 ;; This function is called by:
 30669 ;;		_UART2_Initialize
 30670 ;;		_UART2_rx_vect_isr
 30671 ;; This function uses a reentrant model
 30672 ;;
 30673                           
 30674                           	psect	text136
 30675  0198EC                     __ptext136:
 30676                           	opt callstack 0
 30677  0198EC                     _UART2_Receive_ISR:
 30678                           	opt callstack 16
 30679                           
 30680                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 30681                           
 30682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30683                           ;incstack = 0
 30684  0198EC  0E00               	movlw	low _uart2RxBuffer
 30685  0198EE  2426               	addwf	_uart2RxHead^0,w,c	;volatile
 30686  0198F0  6ED9               	movwf	fsr2l,c
 30687  0198F2  6ADA               	clrf	fsr2h,c
 30688  0198F4  0E05               	movlw	high _uart2RxBuffer
 30689  0198F6  22DA               	addwfc	fsr2h,f,c
 30690  0198F8  006F F743 FFDF     	movff	15824,indf2	;volatile
 30691  0198FE  2A26               	incf	_uart2RxHead^0,f,c	;volatile
 30692                           
 30693                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 30694  019900  2826               	incf	_uart2RxHead^0,w,c
 30695  019902  B4D8               	btfsc	status,2,c
 30696                           
 30697                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 30698  019904  6A26               	clrf	_uart2RxHead^0,c	;volatile
 30699                           
 30700                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 30701  019906  2A24               	incf	_uart2RxCount^0,f,c	;volatile
 30702                           
 30703                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30704  019908  0012               	return		;funcret
 30705  01990A                     __end_of_UART2_Receive_ISR:
 30706                           	opt callstack 0
 30707                           
 30708 ;; *************** function _TMR6_ISR *****************
 30709 ;; Defined at:
 30710 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 30711 ;; Parameters:    Size  Location     Type
 30712 ;;		None
 30713 ;; Auto vars:     Size  Location     Type
 30714 ;;		None
 30715 ;; Return value:  Size  Location     Type
 30716 ;;                  1    wreg      void 
 30717 ;; Registers used:
 30718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30719 ;; Tracked objects:
 30720 ;;		On entry : 0/0
 30721 ;;		On exit  : 0/0
 30722 ;;		Unchanged: 0/0
 30723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30728 ;;Total ram usage:        1 bytes
 30729 ;; Hardware stack levels used:    1
 30730 ;; Hardware stack levels required when called:    2
 30731 ;; This function calls:
 30732 ;;		_TMR6_CallBack
 30733 ;; This function is called by:
 30734 ;;		Interrupt level 2
 30735 ;; This function uses a non-reentrant model
 30736 ;;
 30737                           
 30738                           	psect	text137
 30739  019978                     __ptext137:
 30740                           	opt callstack 0
 30741  019978                     _TMR6_ISR:
 30742                           	opt callstack 15
 30743                           
 30744                           ;incstack = 0
 30745  019978  0060  F0DC  F05C   	movff	btemp,??_TMR6_ISR
 30746  01997E  EE15  F13A         	lfsr	1,___inthi_sp
 30747                           
 30748                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 30749  019982  0139               	movlb	57	; () banked
 30750  019984  91A9               	bcf	169,0,b	;volatile
 30751                           
 30752                           ; BSR set to: 57
 30753                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 30754  019986  ECF3  F0CB         	call	_TMR6_CallBack	;wreg free
 30755  01998A  0060  F170  F037   	movff	??_TMR6_ISR,btemp
 30756  019990  0011               	retfie		f
 30757  019992                     __end_of_TMR6_ISR:
 30758                           	opt callstack 0
 30759                           
 30760 ;; *************** function _TMR6_CallBack *****************
 30761 ;; Defined at:
 30762 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 30763 ;; Parameters:    Size  Location     Type
 30764 ;;		None
 30765 ;; Auto vars:     Size  Location     Type
 30766 ;;		None
 30767 ;; Return value:  Size  Location     Type
 30768 ;;                  1  [STACK] void 
 30769 ;; Registers used:
 30770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30771 ;; Tracked objects:
 30772 ;;		On entry : 3F/39
 30773 ;;		On exit  : 0/0
 30774 ;;		Unchanged: 0/0
 30775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30780 ;;Total ram usage:        0 bytes
 30781 ;; Hardware stack levels used:    1
 30782 ;; Hardware stack levels required when called:    1
 30783 ;; This function calls:
 30784 ;;		Absolute function
 30785 ;;		_TMR6_DefaultInterruptHandler
 30786 ;; This function is called by:
 30787 ;;		_TMR6_ISR
 30788 ;; This function uses a reentrant model
 30789 ;;
 30790                           
 30791                           	psect	text138
 30792  0197E6                     __ptext138:
 30793                           	opt callstack 0
 30794  0197E6                     _TMR6_CallBack:
 30795                           	opt callstack 15
 30796                           
 30797                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 30798                           
 30799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30800                           ;incstack = 0
 30801  0197E6  0100               	movlb	0	; () banked
 30802  0197E8  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30803  0197EA  11A2               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30804  0197EC  11A3               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30805  0197EE  B4D8               	btfsc	status,2,c
 30806  0197F0  0012               	return	
 30807                           
 30808                           ; BSR set to: 0
 30809                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 30810  0197F2  D801               	call	u760_48
 30811  0197F4  0012               	return	
 30812  0197F6                     u760_48:
 30813  0197F6  0005               	push	
 30814  0197F8  6EFA               	movwf	pclath,c
 30815  0197FA  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30816  0197FC  6EFD               	movwf	tosl,c
 30817  0197FE  51A2               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30818  019800  6EFE               	movwf	tosh,c
 30819  019802  51A3               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30820  019804  6EFF               	movwf	tosu,c
 30821  019806  50FA               	movf	pclath,w,c
 30822  019808  0012               	return		;indir
 30823  01980A                     __end_of_TMR6_CallBack:
 30824                           	opt callstack 0
 30825                           
 30826 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 30827 ;; Defined at:
 30828 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 30829 ;; Parameters:    Size  Location     Type
 30830 ;;		None
 30831 ;; Auto vars:     Size  Location     Type
 30832 ;;  i               1  [STACK] unsigned char 
 30833 ;; Return value:  Size  Location     Type
 30834 ;;                  1  [STACK] void 
 30835 ;; Registers used:
 30836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 30837 ;; Tracked objects:
 30838 ;;		On entry : 3F/0
 30839 ;;		On exit  : 0/0
 30840 ;;		Unchanged: 0/0
 30841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30846 ;;Total ram usage:        0 bytes
 30847 ;; Hardware stack levels used:    1
 30848 ;; This function calls:
 30849 ;;		Nothing
 30850 ;; This function is called by:
 30851 ;;		_TMR6_Initialize
 30852 ;;		_TMR6_CallBack
 30853 ;; This function uses a reentrant model
 30854 ;;
 30855                           
 30856                           	psect	text139
 30857  018FA4                     __ptext139:
 30858                           	opt callstack 0
 30859  018FA4                     _TMR6_DefaultInterruptHandler:
 30860                           	opt callstack 0
 30861                           
 30862                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30863  018FA4  52E6               	movf	postinc1,f,c
 30864                           
 30865                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 30866                           ;stkvar	_i @ sp[(-1)+0]
 30867                           
 30868                           ;incstack = 0
 30869  018FA6  0EFF               	movlw	-1
 30870  018FA8  6AE3               	clrf	plusw1,c
 30871  018FAA                     l10321:
 30872                           
 30873                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 30874                           ;stkvar	_i @ sp[(-1)+0]
 30875  018FAA  0EFF               	movlw	-1
 30876  018FAC  50E3               	movf	plusw1,w,c
 30877  018FAE  0D02               	mullw	2
 30878  018FB0  50F3               	movf	243,w,c
 30879  018FB2  0F60               	addlw	low _tickCount
 30880  018FB4  6ED9               	movwf	fsr2l,c
 30881  018FB6  6ADA               	clrf	fsr2h,c
 30882  018FB8  50DE               	movf	postinc2,w,c
 30883  018FBA  10DE               	iorwf	postinc2,w,c
 30884  018FBC  B4D8               	btfsc	status,2,c
 30885  018FBE  D00A               	goto	l10325
 30886                           
 30887                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 30888                           ;stkvar	_i @ sp[(-1)+0]
 30889  018FC0  0EFF               	movlw	-1
 30890  018FC2  50E3               	movf	plusw1,w,c
 30891  018FC4  0D02               	mullw	2
 30892  018FC6  50F3               	movf	243,w,c
 30893  018FC8  0F60               	addlw	low _tickCount
 30894  018FCA  6ED9               	movwf	fsr2l,c
 30895  018FCC  6ADA               	clrf	fsr2h,c
 30896  018FCE  06DE               	decf	postinc2,f,c
 30897  018FD0  0E00               	movlw	0
 30898  018FD2  5ADD               	subwfb	postdec2,f,c
 30899  018FD4                     l10325:
 30900                           
 30901                           ;mcc_generated_files/tmr6.c: 207:  }
 30902                           ;stkvar	_i @ sp[(-1)+0]
 30903  018FD4  0EFF               	movlw	-1
 30904  018FD6  2AE3               	incf	plusw1,f,c
 30905                           
 30906                           ;stkvar	_i @ sp[(-1)+0]
 30907  018FD8  0EFF               	movlw	-1
 30908  018FDA  006F FF8C  F037    	movff	plusw1,btemp
 30909  018FE0  0E0C               	movlw	12
 30910  018FE2  6437               	cpfsgt	btemp^0,c
 30911  018FE4  D7E2               	goto	l10321
 30912                           
 30913                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30914  018FE6  52E5               	movf	postdec1,f,c
 30915  018FE8  0012               	return		;funcret
 30916  018FEA                     __end_of_TMR6_DefaultInterruptHandler:
 30917                           	opt callstack 0
 30918                           
 30919 ;; *************** function _DMA1_DMASCNT_ISR *****************
 30920 ;; Defined at:
 30921 ;;		line 126 in file "mcc_generated_files/dma1.c"
 30922 ;; Parameters:    Size  Location     Type
 30923 ;;		None
 30924 ;; Auto vars:     Size  Location     Type
 30925 ;;		None
 30926 ;; Return value:  Size  Location     Type
 30927 ;;                  1    wreg      void 
 30928 ;; Registers used:
 30929 ;;		None
 30930 ;; Tracked objects:
 30931 ;;		On entry : 0/0
 30932 ;;		On exit  : 3F/0
 30933 ;;		Unchanged: 0/0
 30934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30939 ;;Total ram usage:        0 bytes
 30940 ;; Hardware stack levels used:    1
 30941 ;; This function calls:
 30942 ;;		Nothing
 30943 ;; This function is called by:
 30944 ;;		Interrupt level 2
 30945 ;; This function uses a non-reentrant model
 30946 ;;
 30947                           
 30948                           	psect	text140
 30949  019A2C                     __ptext140:
 30950                           	opt callstack 0
 30951  019A2C                     _DMA1_DMASCNT_ISR:
 30952                           	opt callstack 17
 30953                           
 30954                           ;incstack = 0
 30955  019A2C  EE15  F13A         	lfsr	1,___inthi_sp
 30956                           
 30957                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 30958  019A30  0139               	movlb	57	; () banked
 30959  019A32  91A2               	bcf	162,0,b	;volatile
 30960                           
 30961                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 30962  019A34  0100               	movlb	0	; () banked
 30963  019A36  9787               	bcf	_spi_link& (0+255),3,b	;volatile
 30964                           
 30965                           ; BSR set to: 0
 30966                           
 30967                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE2 = 0; } while(0);
 30968  019A38  94BE               	bcf	190,2,c	;volatile
 30969                           
 30970                           ; BSR set to: 0
 30971  019A3A  0011               	retfie		f
 30972  019A3C                     __end_of_DMA1_DMASCNT_ISR:
 30973                           	opt callstack 0
 30974                           
 30975 ;; *************** function _DMA1_DMADCNT_ISR *****************
 30976 ;; Defined at:
 30977 ;;		line 134 in file "mcc_generated_files/dma1.c"
 30978 ;; Parameters:    Size  Location     Type
 30979 ;;		None
 30980 ;; Auto vars:     Size  Location     Type
 30981 ;;		None
 30982 ;; Return value:  Size  Location     Type
 30983 ;;                  1    wreg      void 
 30984 ;; Registers used:
 30985 ;;		None
 30986 ;; Tracked objects:
 30987 ;;		On entry : 0/0
 30988 ;;		On exit  : 3F/39
 30989 ;;		Unchanged: 0/0
 30990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30995 ;;Total ram usage:        0 bytes
 30996 ;; Hardware stack levels used:    1
 30997 ;; This function calls:
 30998 ;;		Nothing
 30999 ;; This function is called by:
 31000 ;;		Interrupt level 2
 31001 ;; This function uses a non-reentrant model
 31002 ;;
 31003                           
 31004                           	psect	text141
 31005  019A80                     __ptext141:
 31006                           	opt callstack 0
 31007  019A80                     _DMA1_DMADCNT_ISR:
 31008                           	opt callstack 17
 31009                           
 31010                           ; BSR set to: 0
 31011                           ;incstack = 0
 31012  019A80  EE15  F13A         	lfsr	1,___inthi_sp
 31013                           
 31014                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 31015  019A84  0139               	movlb	57	; () banked
 31016  019A86  93A2               	bcf	162,1,b	;volatile
 31017                           
 31018                           ; BSR set to: 57
 31019  019A88  0011               	retfie		f
 31020  019A8A                     __end_of_DMA1_DMADCNT_ISR:
 31021                           	opt callstack 0
 31022                           
 31023 ;; *************** function _DMA1_DMAA_ISR *****************
 31024 ;; Defined at:
 31025 ;;		line 144 in file "mcc_generated_files/dma1.c"
 31026 ;; Parameters:    Size  Location     Type
 31027 ;;		None
 31028 ;; Auto vars:     Size  Location     Type
 31029 ;;		None
 31030 ;; Return value:  Size  Location     Type
 31031 ;;                  1    wreg      void 
 31032 ;; Registers used:
 31033 ;;		None
 31034 ;; Tracked objects:
 31035 ;;		On entry : 0/0
 31036 ;;		On exit  : 3F/39
 31037 ;;		Unchanged: 0/0
 31038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31043 ;;Total ram usage:        0 bytes
 31044 ;; Hardware stack levels used:    1
 31045 ;; This function calls:
 31046 ;;		Nothing
 31047 ;; This function is called by:
 31048 ;;		Interrupt level 2
 31049 ;; This function uses a non-reentrant model
 31050 ;;
 31051                           
 31052                           	psect	text142
 31053  019A8C                     __ptext142:
 31054                           	opt callstack 0
 31055  019A8C                     _DMA1_DMAA_ISR:
 31056                           	opt callstack 17
 31057                           
 31058                           ; BSR set to: 57
 31059                           ;incstack = 0
 31060  019A8C  EE15  F13A         	lfsr	1,___inthi_sp
 31061                           
 31062                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 31063  019A90  0139               	movlb	57	; () banked
 31064  019A92  97A2               	bcf	162,3,b	;volatile
 31065                           
 31066                           ; BSR set to: 57
 31067  019A94  0011               	retfie		f
 31068  019A96                     __end_of_DMA1_DMAA_ISR:
 31069                           	opt callstack 0
 31070                           
 31071 ;; *************** function _DMA1_DMAOR_ISR *****************
 31072 ;; Defined at:
 31073 ;;		line 155 in file "mcc_generated_files/dma1.c"
 31074 ;; Parameters:    Size  Location     Type
 31075 ;;		None
 31076 ;; Auto vars:     Size  Location     Type
 31077 ;;		None
 31078 ;; Return value:  Size  Location     Type
 31079 ;;                  1    wreg      void 
 31080 ;; Registers used:
 31081 ;;		None
 31082 ;; Tracked objects:
 31083 ;;		On entry : 0/0
 31084 ;;		On exit  : 3F/39
 31085 ;;		Unchanged: 0/0
 31086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31091 ;;Total ram usage:        0 bytes
 31092 ;; Hardware stack levels used:    1
 31093 ;; This function calls:
 31094 ;;		Nothing
 31095 ;; This function is called by:
 31096 ;;		Interrupt level 2
 31097 ;; This function uses a non-reentrant model
 31098 ;;
 31099                           
 31100                           	psect	text143
 31101  019A98                     __ptext143:
 31102                           	opt callstack 0
 31103  019A98                     _DMA1_DMAOR_ISR:
 31104                           	opt callstack 17
 31105                           
 31106                           ; BSR set to: 57
 31107                           ;incstack = 0
 31108  019A98  EE15  F13A         	lfsr	1,___inthi_sp
 31109                           
 31110                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 31111  019A9C  0139               	movlb	57	; () banked
 31112  019A9E  95A2               	bcf	162,2,b	;volatile
 31113                           
 31114                           ; BSR set to: 57
 31115  019AA0  0011               	retfie		f
 31116  019AA2                     __end_of_DMA1_DMAOR_ISR:
 31117                           	opt callstack 0
 31118                           
 31119 ;; *************** function _TMR5_ISR *****************
 31120 ;; Defined at:
 31121 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31122 ;; Parameters:    Size  Location     Type
 31123 ;;		None
 31124 ;; Auto vars:     Size  Location     Type
 31125 ;;		None
 31126 ;; Return value:  Size  Location     Type
 31127 ;;                  1    wreg      void 
 31128 ;; Registers used:
 31129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31130 ;; Tracked objects:
 31131 ;;		On entry : 0/0
 31132 ;;		On exit  : 0/0
 31133 ;;		Unchanged: 0/0
 31134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31137 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31138 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31139 ;;Total ram usage:        3 bytes
 31140 ;; Hardware stack levels used:    1
 31141 ;; Hardware stack levels required when called:    2
 31142 ;; This function calls:
 31143 ;;		_TMR5_CallBack
 31144 ;;		_TMR5_WriteTimer
 31145 ;; This function is called by:
 31146 ;;		Interrupt level 2
 31147 ;; This function uses a non-reentrant model
 31148 ;;
 31149                           
 31150                           	psect	text144
 31151  018E2C                     __ptext144:
 31152                           	opt callstack 0
 31153  018E2C                     _TMR5_ISR:
 31154                           	opt callstack 15
 31155                           
 31156                           ; BSR set to: 57
 31157                           ;incstack = 0
 31158  018E2C  0060  F108  F1F0   	movff	btemp+11,??_TMR5_ISR+2
 31159  018E32  EE15  F13A         	lfsr	1,___inthi_sp
 31160                           
 31161                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31162  018E36  0139               	movlb	57	; () banked
 31163  018E38  9DA8               	bcf	168,6,b	;volatile
 31164                           
 31165                           ; BSR set to: 57
 31166                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31167  018E3A  0060  F06F  FFE6   	movff	_timer5ReloadVal,postinc1
 31168  018E40  0060  F073  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31169  018E46  EC79  F0C8         	call	_TMR5_WriteTimer	;wreg free
 31170                           
 31171                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31172  018E4A  EE23  F19B         	lfsr	2,_V+385	;volatile
 31173  018E4E  50DF               	movf	indf2,w,c
 31174  018E50  0101               	movlb	1	; () banked
 31175  018E52  6FEE               	movwf	??_TMR5_ISR& (0+255),b
 31176  018E54  6BEF               	clrf	(??_TMR5_ISR+1)& (0+255),b
 31177  018E56  0E05               	movlw	5
 31178  018E58  27EE               	addwf	??_TMR5_ISR& (0+255),f,b
 31179  018E5A  0E00               	movlw	0
 31180  018E5C  23EF               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 31181  018E5E  4A19               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31182  018E60  2A1A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31183  018E62  51EE               	movf	??_TMR5_ISR& (0+255),w,b
 31184  018E64  5C19               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31185  018E66  51EF               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 31186  018E68  581A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31187  018E6A  A0D8               	btfss	status,0,c
 31188  018E6C  D004               	goto	i2l1038
 31189                           
 31190                           ; BSR set to: 1
 31191                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31192  018E6E  EC05  F0CC         	call	_TMR5_CallBack	;wreg free
 31193                           
 31194                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31195  018E72  6A19               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31196  018E74  6A1A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31197  018E76                     i2l1038:
 31198  018E76  0060  F7C0  F042   	movff	??_TMR5_ISR+2,btemp+11
 31199  018E7C  0011               	retfie		f
 31200  018E7E                     __end_of_TMR5_ISR:
 31201                           	opt callstack 0
 31202                           
 31203 ;; *************** function _TMR5_WriteTimer *****************
 31204 ;; Defined at:
 31205 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31206 ;; Parameters:    Size  Location     Type
 31207 ;;  timerVal        2  [STACK] unsigned short 
 31208 ;; Auto vars:     Size  Location     Type
 31209 ;;		None
 31210 ;; Return value:  Size  Location     Type
 31211 ;;                  1  [STACK] void 
 31212 ;; Registers used:
 31213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31214 ;; Tracked objects:
 31215 ;;		On entry : 3F/39
 31216 ;;		On exit  : 0/0
 31217 ;;		Unchanged: 0/0
 31218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31223 ;;Total ram usage:        0 bytes
 31224 ;; Hardware stack levels used:    1
 31225 ;; This function calls:
 31226 ;;		Nothing
 31227 ;; This function is called by:
 31228 ;;		_TMR5_ISR
 31229 ;; This function uses a reentrant model
 31230 ;;
 31231                           
 31232                           	psect	text145
 31233  0190F2                     __ptext145:
 31234                           	opt callstack 0
 31235  0190F2                     _TMR5_WriteTimer:
 31236                           	opt callstack 16
 31237                           
 31238                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31239                           
 31240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31241                           ;incstack = 0
 31242  0190F2  A49A               	btfss	154,2,c	;volatile
 31243  0190F4  D00F               	goto	l11155
 31244                           
 31245                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31246  0190F6  909A               	bcf	154,0,c	;volatile
 31247                           
 31248                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31249                           ;stkvar	_timerVal @ sp[(0)+-2]
 31250  0190F8  0EFF               	movlw	255
 31251  0190FA  24E1               	addwf	fsr1l,w,c
 31252  0190FC  6ED9               	movwf	fsr2l,c
 31253  0190FE  0EFF               	movlw	255
 31254  019100  20E2               	addwfc	fsr1h,w,c
 31255  019102  6EDA               	movwf	fsr2h,c
 31256  019104  50DF               	movf	indf2,w,c
 31257  019106  6E99               	movwf	153,c	;volatile
 31258                           
 31259                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31260                           ;stkvar	_timerVal @ sp[(0)+-2]
 31261  019108  0EFE               	movlw	-2
 31262  01910A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31263                           
 31264                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31265  019110  809A               	bsf	154,0,c	;volatile
 31266                           
 31267                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31268  019112  D00C               	goto	l1021
 31269  019114                     l11155:
 31270                           
 31271                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31272                           ;stkvar	_timerVal @ sp[(0)+-2]
 31273  019114  0EFF               	movlw	255
 31274  019116  24E1               	addwf	fsr1l,w,c
 31275  019118  6ED9               	movwf	fsr2l,c
 31276  01911A  0EFF               	movlw	255
 31277  01911C  20E2               	addwfc	fsr1h,w,c
 31278  01911E  6EDA               	movwf	fsr2h,c
 31279  019120  50DF               	movf	indf2,w,c
 31280  019122  6E99               	movwf	153,c	;volatile
 31281                           
 31282                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31283                           ;stkvar	_timerVal @ sp[(0)+-2]
 31284  019124  0EFE               	movlw	-2
 31285  019126  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31286  01912C                     l1021:
 31287                           
 31288                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31289  01912C  52E5               	movf	postdec1,f,c
 31290  01912E  52E5               	movf	postdec1,f,c
 31291  019130  0012               	return		;funcret
 31292  019132                     __end_of_TMR5_WriteTimer:
 31293                           	opt callstack 0
 31294                           
 31295 ;; *************** function _TMR5_CallBack *****************
 31296 ;; Defined at:
 31297 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31298 ;; Parameters:    Size  Location     Type
 31299 ;;		None
 31300 ;; Auto vars:     Size  Location     Type
 31301 ;;		None
 31302 ;; Return value:  Size  Location     Type
 31303 ;;                  1  [STACK] void 
 31304 ;; Registers used:
 31305 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31306 ;; Tracked objects:
 31307 ;;		On entry : 3F/1
 31308 ;;		On exit  : 0/0
 31309 ;;		Unchanged: 0/0
 31310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31315 ;;Total ram usage:        0 bytes
 31316 ;; Hardware stack levels used:    1
 31317 ;; Hardware stack levels required when called:    1
 31318 ;; This function calls:
 31319 ;;		Absolute function
 31320 ;;		_TMR5_DefaultInterruptHandler
 31321 ;; This function is called by:
 31322 ;;		_TMR5_ISR
 31323 ;; This function uses a reentrant model
 31324 ;;
 31325                           
 31326                           	psect	text146
 31327  01980A                     __ptext146:
 31328                           	opt callstack 0
 31329  01980A                     _TMR5_CallBack:
 31330                           	opt callstack 15
 31331                           
 31332                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31333                           
 31334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31335                           ;incstack = 0
 31336  01980A  0100               	movlb	0	; () banked
 31337  01980C  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31338  01980E  119F               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31339  019810  11A0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31340  019812  B4D8               	btfsc	status,2,c
 31341  019814  0012               	return	
 31342                           
 31343                           ; BSR set to: 0
 31344                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31345  019816  D801               	call	u763_48
 31346  019818  0012               	return	
 31347  01981A                     u763_48:
 31348  01981A  0005               	push	
 31349  01981C  6EFA               	movwf	pclath,c
 31350  01981E  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31351  019820  6EFD               	movwf	tosl,c
 31352  019822  519F               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31353  019824  6EFE               	movwf	tosh,c
 31354  019826  51A0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31355  019828  6EFF               	movwf	tosu,c
 31356  01982A  50FA               	movf	pclath,w,c
 31357  01982C  0012               	return		;indir
 31358  01982E                     __end_of_TMR5_CallBack:
 31359                           	opt callstack 0
 31360                           
 31361 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31362 ;; Defined at:
 31363 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31364 ;; Parameters:    Size  Location     Type
 31365 ;;		None
 31366 ;; Auto vars:     Size  Location     Type
 31367 ;;		None
 31368 ;; Return value:  Size  Location     Type
 31369 ;;                  1  [STACK] void 
 31370 ;; Registers used:
 31371 ;;		wreg, status,2, status,0, btemp+11
 31372 ;; Tracked objects:
 31373 ;;		On entry : 3F/0
 31374 ;;		On exit  : 0/0
 31375 ;;		Unchanged: 0/0
 31376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31381 ;;Total ram usage:        0 bytes
 31382 ;; Hardware stack levels used:    1
 31383 ;; This function calls:
 31384 ;;		Nothing
 31385 ;; This function is called by:
 31386 ;;		_TMR5_Initialize
 31387 ;;		_TMR5_CallBack
 31388 ;; This function uses a reentrant model
 31389 ;;
 31390                           
 31391                           	psect	text147
 31392  019992                     __ptext147:
 31393                           	opt callstack 0
 31394  019992                     _TMR5_DefaultInterruptHandler:
 31395                           	opt callstack 15
 31396                           
 31397                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31398                           
 31399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31400                           ;incstack = 0
 31401  019992  A0BE               	btfss	190,0,c	;volatile
 31402  019994  D002               	goto	u716_40
 31403  019996  0E01               	movlw	1
 31404  019998  D001               	goto	u716_46
 31405  01999A                     u716_40:
 31406  01999A  0E00               	movlw	0
 31407  01999C                     u716_46:
 31408  01999C  0AFF               	xorlw	255
 31409  01999E  6E42               	movwf	(btemp+11)^0,c
 31410  0199A0  50BE               	movf	190,w,c	;volatile
 31411  0199A2  1842               	xorwf	(btemp+11)^0,w,c
 31412  0199A4  0BFE               	andlw	-2
 31413  0199A6  1842               	xorwf	(btemp+11)^0,w,c
 31414  0199A8  6EBE               	movwf	190,c	;volatile
 31415                           
 31416                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31417  0199AA  0012               	return		;funcret
 31418  0199AC                     __end_of_TMR5_DefaultInterruptHandler:
 31419                           	opt callstack 0
 31420                           
 31421                           ;
 31422                           ; Interrupt Vector Table @ 0x8
 31423                           ;
 31424                           
 31425                           	psect	ivt0x8
 31426  000008                     __pivt0x8:
 31427                           	opt callstack 0
 31428  000008                     ivt0x8_base:
 31429                           	opt callstack 0
 31430                           
 31431                           ; Vector 0 : SWINT
 31432  000008  66B8               	dw	_Default_ISR shr (0+2)
 31433                           
 31434                           ; Vector 1 : HLVD
 31435  00000A  66B8               	dw	_Default_ISR shr (0+2)
 31436                           
 31437                           ; Vector 2 : OSF
 31438  00000C  66B8               	dw	_Default_ISR shr (0+2)
 31439                           
 31440                           ; Vector 3 : CSW
 31441  00000E  66B8               	dw	_Default_ISR shr (0+2)
 31442                           
 31443                           ; Vector 4 : NVM
 31444  000010  66B8               	dw	_Default_ISR shr (0+2)
 31445                           
 31446                           ; Vector 5 : SCAN
 31447  000012  66B8               	dw	_Default_ISR shr (0+2)
 31448                           
 31449                           ; Vector 6 : CRC
 31450  000014  66B8               	dw	_Default_ISR shr (0+2)
 31451                           
 31452                           ; Vector 7 : IOC
 31453  000016  66B8               	dw	_Default_ISR shr (0+2)
 31454                           
 31455                           ; Vector 8 : INT0
 31456  000018  6696               	dw	_INT0_ISR shr (0+2)
 31457                           
 31458                           ; Vector 9 : ZCD
 31459  00001A  66B8               	dw	_Default_ISR shr (0+2)
 31460                           
 31461                           ; Vector 10 : AD
 31462  00001C  64FD               	dw	_ADCC_ISR shr (0+2)
 31463                           
 31464                           ; Vector 11 : ADT
 31465  00001E  66B8               	dw	_Default_ISR shr (0+2)
 31466                           
 31467                           ; Vector 12 : CMP1
 31468  000020  66B8               	dw	_Default_ISR shr (0+2)
 31469                           
 31470                           ; Vector 13 : SMT1
 31471  000022  66B8               	dw	_Default_ISR shr (0+2)
 31472                           
 31473                           ; Vector 14 : SMT1PRA
 31474  000024  66B8               	dw	_Default_ISR shr (0+2)
 31475                           
 31476                           ; Vector 15 : SMT1PRW
 31477  000026  66B8               	dw	_Default_ISR shr (0+2)
 31478                           
 31479                           ; Vector 16 : DMA1SCNT
 31480  000028  668B               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 31481                           
 31482                           ; Vector 17 : DMA1DCNT
 31483  00002A  66A0               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 31484                           
 31485                           ; Vector 18 : DMA1OR
 31486  00002C  66A6               	dw	_DMA1_DMAOR_ISR shr (0+2)
 31487                           
 31488                           ; Vector 19 : DMA1A
 31489  00002E  66A3               	dw	_DMA1_DMAA_ISR shr (0+2)
 31490                           
 31491                           ; Vector 20 : SPI1RX
 31492  000030  66B8               	dw	_Default_ISR shr (0+2)
 31493                           
 31494                           ; Vector 21 : SPI1TX
 31495  000032  66B8               	dw	_Default_ISR shr (0+2)
 31496                           
 31497                           ; Vector 22 : SPI1
 31498  000034  66B8               	dw	_Default_ISR shr (0+2)
 31499                           
 31500                           ; Vector 23 : I2C1RX
 31501  000036  66B8               	dw	_Default_ISR shr (0+2)
 31502                           
 31503                           ; Vector 24 : I2C1TX
 31504  000038  66B8               	dw	_Default_ISR shr (0+2)
 31505                           
 31506                           ; Vector 25 : I2C1
 31507  00003A  66B8               	dw	_Default_ISR shr (0+2)
 31508                           
 31509                           ; Vector 26 : I2C1E
 31510  00003C  66B8               	dw	_Default_ISR shr (0+2)
 31511                           
 31512                           ; Vector 27 : U1RX
 31513  00003E  65D3               	dw	_UART1_rx_vect_isr shr (0+2)
 31514                           
 31515                           ; Vector 28 : U1TX
 31516  000040  65C9               	dw	_UART1_tx_vect_isr shr (0+2)
 31517                           
 31518                           ; Vector 29 : U1E
 31519  000042  66B8               	dw	_Default_ISR shr (0+2)
 31520                           
 31521                           ; Vector 30 : U1
 31522  000044  66B8               	dw	_Default_ISR shr (0+2)
 31523                           
 31524                           ; Vector 31 : TMR0
 31525  000046  66B8               	dw	_Default_ISR shr (0+2)
 31526                           
 31527                           ; Vector 32 : TMR1
 31528  000048  66B8               	dw	_Default_ISR shr (0+2)
 31529                           
 31530                           ; Vector 33 : TMR1G
 31531  00004A  66B8               	dw	_Default_ISR shr (0+2)
 31532                           
 31533                           ; Vector 34 : TMR2
 31534  00004C  66B8               	dw	_Default_ISR shr (0+2)
 31535                           
 31536                           ; Vector 35 : CCP1
 31537  00004E  66B8               	dw	_Default_ISR shr (0+2)
 31538                           
 31539                           ; Vector 36 : Undefined
 31540  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 31541                           
 31542                           ; Vector 37 : NCO1
 31543  000052  66B8               	dw	_Default_ISR shr (0+2)
 31544                           
 31545                           ; Vector 38 : CWG1
 31546  000054  66B8               	dw	_Default_ISR shr (0+2)
 31547                           
 31548                           ; Vector 39 : CLC1
 31549  000056  66B8               	dw	_Default_ISR shr (0+2)
 31550                           
 31551                           ; Vector 40 : INT1
 31552  000058  669A               	dw	_INT1_ISR shr (0+2)
 31553                           
 31554                           ; Vector 41 : CMP2
 31555  00005A  66B8               	dw	_Default_ISR shr (0+2)
 31556                           
 31557                           ; Vector 42 : DMA2SCNT
 31558  00005C  66B8               	dw	_Default_ISR shr (0+2)
 31559                           
 31560                           ; Vector 43 : DMA2DCNT
 31561  00005E  66B8               	dw	_Default_ISR shr (0+2)
 31562                           
 31563                           ; Vector 44 : DMA2OR
 31564  000060  66B8               	dw	_Default_ISR shr (0+2)
 31565                           
 31566                           ; Vector 45 : DMA2A
 31567  000062  66B8               	dw	_Default_ISR shr (0+2)
 31568                           
 31569                           ; Vector 46 : I2C2RX
 31570  000064  66B8               	dw	_Default_ISR shr (0+2)
 31571                           
 31572                           ; Vector 47 : I2C2TX
 31573  000066  66B8               	dw	_Default_ISR shr (0+2)
 31574                           
 31575                           ; Vector 48 : I2C2
 31576  000068  66B8               	dw	_Default_ISR shr (0+2)
 31577                           
 31578                           ; Vector 49 : I2C2E
 31579  00006A  66B8               	dw	_Default_ISR shr (0+2)
 31580                           
 31581                           ; Vector 50 : U2RX
 31582  00006C  65E7               	dw	_UART2_rx_vect_isr shr (0+2)
 31583                           
 31584                           ; Vector 51 : U2TX
 31585  00006E  65DD               	dw	_UART2_tx_vect_isr shr (0+2)
 31586                           
 31587                           ; Vector 52 : U2E
 31588  000070  66B8               	dw	_Default_ISR shr (0+2)
 31589                           
 31590                           ; Vector 53 : U2
 31591  000072  66B8               	dw	_Default_ISR shr (0+2)
 31592                           
 31593                           ; Vector 54 : TMR3
 31594  000074  66B8               	dw	_Default_ISR shr (0+2)
 31595                           
 31596                           ; Vector 55 : TMR3G
 31597  000076  66B8               	dw	_Default_ISR shr (0+2)
 31598                           
 31599                           ; Vector 56 : TMR4
 31600  000078  66B8               	dw	_Default_ISR shr (0+2)
 31601                           
 31602                           ; Vector 57 : CCP2
 31603  00007A  66B8               	dw	_Default_ISR shr (0+2)
 31604                           
 31605                           ; Vector 58 : Undefined
 31606  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 31607                           
 31608                           ; Vector 59 : CWG2
 31609  00007E  66B8               	dw	_Default_ISR shr (0+2)
 31610                           
 31611                           ; Vector 60 : CLC2
 31612  000080  66B8               	dw	_Default_ISR shr (0+2)
 31613                           
 31614                           ; Vector 61 : INT2
 31615  000082  66B8               	dw	_Default_ISR shr (0+2)
 31616                           
 31617                           ; Vector 62 : Undefined
 31618  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 31619                           
 31620                           ; Vector 63 : Undefined
 31621  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 31622                           
 31623                           ; Vector 64 : Undefined
 31624  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 31625                           
 31626                           ; Vector 65 : Undefined
 31627  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 31628                           
 31629                           ; Vector 66 : Undefined
 31630  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 31631                           
 31632                           ; Vector 67 : Undefined
 31633  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 31634                           
 31635                           ; Vector 68 : Undefined
 31636  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 31637                           
 31638                           ; Vector 69 : Undefined
 31639  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 31640                           
 31641                           ; Vector 70 : TMR5
 31642  000094  638B               	dw	_TMR5_ISR shr (0+2)
 31643                           
 31644                           ; Vector 71 : TMR5G
 31645  000096  66B8               	dw	_Default_ISR shr (0+2)
 31646                           
 31647                           ; Vector 72 : TMR6
 31648  000098  665E               	dw	_TMR6_ISR shr (0+2)
 31649                           
 31650                           ; Vector 73 : CCP3
 31651  00009A  66B8               	dw	_Default_ISR shr (0+2)
 31652                           
 31653                           ; Vector 74 : CWG3
 31654  00009C  66B8               	dw	_Default_ISR shr (0+2)
 31655                           
 31656                           ; Vector 75 : CLC3
 31657  00009E  66B8               	dw	_Default_ISR shr (0+2)
 31658                           
 31659                           ; Vector 76 : Undefined
 31660  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 31661                           
 31662                           ; Vector 77 : Undefined
 31663  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 31664                           
 31665                           ; Vector 78 : Undefined
 31666  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 31667                           
 31668                           ; Vector 79 : Undefined
 31669  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 31670                           
 31671                           ; Vector 80 : CCP4
 31672  0000A8  66B8               	dw	_Default_ISR shr (0+2)
 31673                           
 31674                           ; Vector 81 : CLC4
 31675  0000AA  66B8               	dw	_Default_ISR shr (0+2)
 31676  0000AC                     ivt0x8_undefint:
 31677                           	opt callstack 0
 31678  0000AC  00FF               	reset	
 31679                           
 31680                           	psect	text148
 31681  000000                     __ptext148:
 31682                           	opt callstack 0
 31683                           
 31684                           	psect	rparam
 31685  0000                     
 31686                           	psect	temp
 31687  000037                     btemp:
 31688                           	opt callstack 0
 31689  000037                     	ds	32
 31690  0000                     wtemp0	set	btemp
 31691  0000                     wtemp1	set	btemp+2
 31692  0000                     wtemp2	set	btemp+4
 31693  0000                     wtemp3	set	btemp+6
 31694  0000                     wtemp4	set	btemp+8
 31695  0000                     wtemp5	set	btemp+10
 31696  0000                     wtemp8	set	btemp+1
 31697  0000                     ttemp0	set	btemp
 31698  0000                     ttemp1	set	btemp+3
 31699  0000                     ttemp2	set	btemp+6
 31700  0000                     ttemp3	set	btemp+9
 31701  0000                     ttemp5	set	btemp+1
 31702  0000                     ttemp6	set	btemp+4
 31703  0000                     ttemp7	set	btemp+8
 31704  0000                     ltemp0	set	btemp
 31705  0000                     ltemp1	set	btemp+4
 31706  0000                     ltemp2	set	btemp+8
 31707  0000                     lltemp0	set	btemp
 31708  0000                     lltemp1	set	btemp+8
 31709  0000                     lltemp2	set	btemp+16
 31710  0000                     lltemp3	set	btemp+24
 31711                           tosu	equ	0x3FFF
 31712                           tosh	equ	0x3FFE
 31713                           tosl	equ	0x3FFD
 31714                           stkptr	equ	0x3FFC
 31715                           pclatu	equ	0x3FFB
 31716                           pclath	equ	0x3FFA
 31717                           pcl	equ	0x3FF9
 31718                           tblptru	equ	0x3FF8
 31719                           tblptrh	equ	0x3FF7
 31720                           tblptrl	equ	0x3FF6
 31721                           tablat	equ	0x3FF5
 31722                           prodh	equ	0x3FF4
 31723                           prodl	equ	0x3FF3
 31724                           indf0	equ	0x3FEF
 31725                           postinc0	equ	0x3FEE
 31726                           postdec0	equ	0x3FED
 31727                           preinc0	equ	0x3FEC
 31728                           plusw0	equ	0x3FEB
 31729                           fsr0h	equ	0x3FEA
 31730                           fsr0l	equ	0x3FE9
 31731                           wreg	equ	0x3FE8
 31732                           indf1	equ	0x3FE7
 31733                           postinc1	equ	0x3FE6
 31734                           postdec1	equ	0x3FE5
 31735                           preinc1	equ	0x3FE4
 31736                           plusw1	equ	0x3FE3
 31737                           fsr1h	equ	0x3FE2
 31738                           fsr1l	equ	0x3FE1
 31739                           bsr	equ	0x3FE0
 31740                           indf2	equ	0x3FDF
 31741                           postinc2	equ	0x3FDE
 31742                           postdec2	equ	0x3FDD
 31743                           preinc2	equ	0x3FDC
 31744                           plusw2	equ	0x3FDB
 31745                           fsr2h	equ	0x3FDA
 31746                           fsr2l	equ	0x3FD9
 31747                           status	equ	0x3FD8


Data Sizes:
    Strings     902
    Constant    391
    Data        1527
    BSS         2249
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      60
    BANK0           160      0     160
    BANK1           256      3     241
    BANK2           256      0     224
    BANK3           256      0      67
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0     256
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 312
		 -> H153(BIGRAM[312]), H33(BANK0[36]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[64]), H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_198(CODE[3]), STR_194(CODE[3]), STR_189(CODE[3]), STR_185(CODE[3]), 
		 -> STR_180(CODE[3]), STR_176(CODE[3]), STR_171(CODE[4]), STR_167(CODE[4]), 
		 -> STR_162(CODE[3]), STR_157(CODE[3]), STR_152(CODE[3]), STR_147(CODE[4]), 
		 -> STR_142(CODE[3]), STR_137(CODE[3]), STR_132(CODE[3]), STR_127(CODE[4]), 
		 -> STR_122(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_107(CODE[4]), 
		 -> STR_102(CODE[3]), STR_98(CODE[3]), STR_93(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[3]), STR_80(CODE[3]), STR_75(CODE[4]), STR_71(CODE[4]), 

    r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_198(CODE[3]), STR_194(CODE[3]), STR_189(CODE[3]), STR_185(CODE[3]), 
		 -> STR_180(CODE[3]), STR_176(CODE[3]), STR_171(CODE[4]), STR_167(CODE[4]), 
		 -> STR_162(CODE[3]), STR_157(CODE[3]), STR_152(CODE[3]), STR_147(CODE[4]), 
		 -> STR_142(CODE[3]), STR_137(CODE[3]), STR_132(CODE[3]), STR_127(CODE[4]), 
		 -> STR_122(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_107(CODE[4]), 
		 -> STR_102(CODE[3]), STR_98(CODE[3]), STR_93(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[3]), STR_80(CODE[3]), STR_75(CODE[4]), STR_71(CODE[4]), 

    _l	PTR const unsigned char  size(2) Largest target is 89
		 -> STR_68(CODE[3]), STR_67(CODE[3]), STR_66(CODE[19]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_62(CODE[25]), STR_61(CODE[26]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[21]), STR_57(CODE[24]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[20]), STR_53(CODE[18]), 
		 -> STR_52(CODE[20]), STR_51(CODE[18]), STR_50(CODE[20]), STR_49(CODE[18]), 
		 -> STR_48(CODE[20]), STR_47(CODE[22]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[21]), STR_35(CODE[26]), 
		 -> STR_34(CODE[26]), STR_33(CODE[20]), msg99(CODE[56]), msg2(CODE[86]), 
		 -> msg1(CODE[88]), msg0(CODE[89]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), STR_23(CODE[21]), 
		 -> STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), STR_19(CODE[21]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[18]), 
		 -> STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 89
		 -> STR_68(CODE[3]), STR_67(CODE[3]), STR_66(CODE[19]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_62(CODE[25]), STR_61(CODE[26]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[21]), STR_57(CODE[24]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[20]), STR_53(CODE[18]), 
		 -> STR_52(CODE[20]), STR_51(CODE[18]), STR_50(CODE[20]), STR_49(CODE[18]), 
		 -> STR_48(CODE[20]), STR_47(CODE[22]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[21]), STR_35(CODE[26]), 
		 -> STR_34(CODE[26]), STR_33(CODE[20]), msg99(CODE[56]), msg2(CODE[86]), 
		 -> msg1(CODE[88]), msg0(CODE[89]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), STR_23(CODE[21]), 
		 -> STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), STR_19(CODE[21]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[18]), 
		 -> STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 514
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_38(CODE[9]), STR_37(CODE[12]), D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), 
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V.terminal(BIGRAM[160]), T(BANK6[256]), 
		 -> V(BIGRAM[387]), 

    a	PTR const unsigned char  size(2) Largest target is 514
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_38(CODE[9]), STR_37(CODE[12]), D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), 
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V.terminal(BIGRAM[160]), T(BANK6[256]), 
		 -> V(BIGRAM[387]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> STR_68(CODE[3]), STR_67(CODE[3]), STR_66(CODE[19]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_62(CODE[25]), STR_61(CODE[26]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[21]), STR_57(CODE[24]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[20]), STR_53(CODE[18]), 
		 -> STR_52(CODE[20]), STR_51(CODE[18]), STR_50(CODE[20]), STR_49(CODE[18]), 
		 -> STR_48(CODE[20]), STR_47(CODE[22]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[21]), STR_35(CODE[26]), 
		 -> STR_34(CODE[26]), STR_33(CODE[20]), msg99(CODE[56]), msg2(CODE[86]), 
		 -> msg1(CODE[88]), msg0(CODE[89]), STR_25(CODE[29]), STR_24(CODE[26]), 
		 -> STR_23(CODE[21]), STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), 
		 -> STR_19(CODE[21]), STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[18]), STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), V(BIGRAM[387]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), V(BIGRAM[387]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5723_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> mconfig@D(BIGRAM[514]), V(BIGRAM[387]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 514
		 -> mconfig@D(BIGRAM[514]), V(BIGRAM[387]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    s	PTR const unsigned char  size(2) Largest target is 89
		 -> STR_68(CODE[3]), STR_67(CODE[3]), STR_66(CODE[19]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_62(CODE[25]), STR_61(CODE[26]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[21]), STR_57(CODE[24]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[20]), STR_53(CODE[18]), 
		 -> STR_52(CODE[20]), STR_51(CODE[18]), STR_50(CODE[20]), STR_49(CODE[18]), 
		 -> STR_48(CODE[20]), STR_47(CODE[22]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[21]), STR_35(CODE[26]), 
		 -> STR_34(CODE[26]), STR_33(CODE[20]), msg99(CODE[56]), msg2(CODE[86]), 
		 -> msg1(CODE[88]), msg0(CODE[89]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), STR_23(CODE[21]), 
		 -> STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), STR_19(CODE[21]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[18]), 
		 -> STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> STR_68(CODE[3]), STR_67(CODE[3]), STR_66(CODE[19]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_62(CODE[25]), STR_61(CODE[26]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[21]), STR_57(CODE[24]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[20]), STR_53(CODE[18]), 
		 -> STR_52(CODE[20]), STR_51(CODE[18]), STR_50(CODE[20]), STR_49(CODE[18]), 
		 -> STR_48(CODE[20]), STR_47(CODE[22]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[21]), STR_35(CODE[26]), 
		 -> STR_34(CODE[26]), STR_33(CODE[20]), msg99(CODE[56]), msg2(CODE[86]), 
		 -> msg1(CODE[88]), msg0(CODE[89]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), STR_23(CODE[21]), 
		 -> STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), STR_19(CODE[21]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[18]), 
		 -> STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 89
		 -> STR_68(CODE[3]), STR_67(CODE[3]), STR_66(CODE[19]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_62(CODE[25]), STR_61(CODE[26]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[21]), STR_57(CODE[24]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[20]), STR_53(CODE[18]), 
		 -> STR_52(CODE[20]), STR_51(CODE[18]), STR_50(CODE[20]), STR_49(CODE[18]), 
		 -> STR_48(CODE[20]), STR_47(CODE[22]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[21]), STR_35(CODE[26]), 
		 -> STR_34(CODE[26]), STR_33(CODE[20]), msg99(CODE[56]), msg2(CODE[86]), 
		 -> msg1(CODE[88]), msg0(CODE[89]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[29]), STR_24(CODE[26]), STR_23(CODE[21]), 
		 -> STR_22(CODE[4]), STR_21(CODE[19]), STR_20(CODE[26]), STR_19(CODE[21]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[18]), 
		 -> STR_14(CODE[24]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_38(CODE[9]), STR_37(CODE[12]), 
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> T(BANK6[256]), V(BIGRAM[387]), 

    vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_38(CODE[9]), STR_37(CODE[12]), 
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> T(BANK6[256]), V(BIGRAM[387]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_38(CODE[9]), STR_37(CODE[12]), 
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> T(BANK6[256]), V(BIGRAM[387]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_38(CODE[9]), 
		 -> STR_37(CODE[12]), D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), STR_32(CODE[4]), 
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), T(BANK6[256]), V(BIGRAM[387]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), V(BIGRAM[387]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_38(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[12]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    F17459.reply	PTR unsigned char  size(2) Largest target is 312
		 -> H153(BIGRAM[312]), H33(BANK0[36]), H12(BANK1[30]), H10(BANK1[91]), 

    F17459.header	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[64]), H12(BANK1[30]), H10(BANK1[91]), 

    block.reply	PTR unsigned char  size(2) Largest target is 312
		 -> H153(BIGRAM[312]), H33(BANK0[36]), H12(BANK1[30]), H10(BANK1[91]), 

    block.header	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[64]), H12(BANK1[30]), H10(BANK1[91]), 

    block	PTR struct response_type size(1) Largest target is 9
		 -> secs_II_message@block(COMRAM[7]), 

    data	PTR const unsigned char  size(2) Largest target is 387
		 -> V.terminal(BIGRAM[160]), V(BIGRAM[387]), 

    D.block.reply	PTR unsigned char  size(2) Largest target is 312
		 -> H153(BIGRAM[312]), H33(BANK0[36]), H12(BANK1[30]), H10(BANK1[91]), 

    D.block.header	PTR unsigned char  size(2) Largest target is 480
		 -> D.message(BIGRAM[156]), D(BIGRAM[332]), S(BIGRAM[460]), H26(BANK2[29]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), H12(BANK1[30]), 
		 -> H10(BANK1[91]), 

    S.block.reply	PTR unsigned char  size(2) Largest target is 312
		 -> H153(BIGRAM[312]), H33(BANK0[36]), H12(BANK1[30]), H10(BANK1[91]), 

    S.block.header	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S.message(BIGRAM[36]), S(BIGRAM[460]), H26(BANK2[29]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), H12(BANK1[30]), 
		 -> H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H153(BIGRAM[312]), H33(BANK0[36]), 
		 -> H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H153(BIGRAM[312]), H33(BANK0[36]), 
		 -> H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16792 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    S3053response_type$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H153(BIGRAM[312]), H33(BANK0[36]), H12(BANK1[30]), H10(BANK1[91]), 

    F17429.reply	PTR unsigned char  size(2) Largest target is 312
		 -> H153(BIGRAM[312]), H33(BANK0[36]), H12(BANK1[30]), H10(BANK1[91]), 

    S3053response_type$header	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[64]), H12(BANK1[30]), H10(BANK1[91]), 

    F17429.header	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H26(BANK2[29]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[64]), H12(BANK1[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16792 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    m_link	PTR enum E16792 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    m_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    byte_block	PTR unsigned char  size(2) Largest target is 480
		 -> D(BIGRAM[332]), S(BIGRAM[460]), H153(BIGRAM[312]), H33(BANK0[36]), 
		 -> H26(BANK2[29]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[64]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), V(BIGRAM[387]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), V(BIGRAM[387]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 514
		 -> D.lcd(BIGRAM[512]), mconfig@D(BIGRAM[514]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1931spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1931spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  497603
          _MyeaDogM_WriteStringAtPos
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                         _check_help
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                         _hb_message
                       _init_display
                         _m_protocol
                      _mode_lamp_dim
                         _r_protocol
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                         _t_protocol
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           3     1      2   67530
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5     913
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     158
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                     13     6      7   65959
                   _DATAEE_WriteByte
                         _StartTimer
                          _TimerDone
                       _display_info
                _format_display_text
                       _gem_messages
                          _parse_sid
                        _s10f1_opcmd
                        _s6f11_opcmd
                  _sequence_messages
                   _set_display_info
              _set_temp_display_help
                    _terminal_format
                     _vterm_sequence
 ---------------------------------------------------------------------------------
 (3) _vterm_sequence                                       0     0      0   21536
                      _get_vterm_ptr
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _s6f11_opcmd                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _s10f1_opcmd                                          0     0      0   21492
                           _parse_ll
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _parse_ll                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _parse_sid                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _gem_messages                                         2     0      2     132
                         _StartTimer
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           3     1      2   45546
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           3     1      2   45944
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2   22151
                         _StartTimer
                          _TimerDone
                _format_display_text
                  _sequence_messages
                   _set_display_info
                    _terminal_format
 ---------------------------------------------------------------------------------
 (3) _terminal_format                                      1     0      1   21523
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sequence_messages                                    1     0      1      66
                         _StartTimer
 ---------------------------------------------------------------------------------
 (3) _format_display_text                                 10     8      2     328
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _secs_II_monitor_message                              6     2      4   22500
                          _ee_logger
 ---------------------------------------------------------------------------------
 (3) _ee_logger                                            8     2      6   21846
                   _DATAEE_WriteByte
                         _StartTimer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   22545
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  134349
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   66928
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (3) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     221
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (1) _MyeaDogM_WriteStringAtPos                            4     0      4  112479
                          _TimerDone
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   45524
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   45260
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   22514
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   22653
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   21267
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             28    10     18   21492
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   21012
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    36      6   20344
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _otoa                                                26    16     10    2124
                                _pad
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (4) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            3     3      0      90
                                              0 BANK1      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyeaDogM_WriteStringAtPos
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _get_vterm_ptr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _otoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _otoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _otoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _otoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _otoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _otoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_II_monitor_message
       _ee_logger
         _DATAEE_WriteByte
         _StartTimer
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
     _secs_gem_state
       _StartTimer
       _TimerDone
       _format_display_text
         _strlen
       _sequence_messages
         _StartTimer
       _set_display_info
         _TimerDone
       _terminal_format
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_II_monitor_message
       _ee_logger
         _DATAEE_WriteByte
         _StartTimer
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
     _secs_gem_state
       _StartTimer
       _TimerDone
       _format_display_text
         _strlen
       _sequence_messages
         _StartTimer
       _set_display_info
         _TimerDone
       _terminal_format
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _otoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
       _DATAEE_WriteByte
       _StartTimer
       _TimerDone
       _display_info
       _format_display_text
         _strlen
       _gem_messages
         _StartTimer
       _parse_sid
       _s10f1_opcmd
         _parse_ll
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
       _s6f11_opcmd
       _sequence_messages
         _StartTimer
       _set_display_info
         _TimerDone
       _set_temp_display_help
       _terminal_format
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
       _vterm_sequence
         _get_vterm_ptr
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     8D6      69       27.6%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0     100      17      100.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      43      11       26.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E0       9       87.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3      F1       7       94.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3C       1       95.2%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5EE      58        0.0%
DATA                 0      0     EC4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 23 15:16:27 2019

                    _SPI1_Exchange8bit 9892               __end_of_set_display_info 9892  
                                    _D 0ACE                                      _S 0902  
                                    _T 0600                                      _V 0C1A  
     __end_of_TMR5_SetInterruptHandler 96AC              __end_of_UART2_is_rx_ready 9ABA  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 9AAA                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 019B  
                                  _H13 015B                                    _H14 01CD  
                                  _H17 01B9                                    _H33 00DC  
                                  _H26 02C3                                    l169 9A00  
                                  l550 90C8                                    l570 9446  
                                  l824 98A0                                    l672 9148  
                                  l690 9472                                    l961 8ACE  
                                  _GIE 01FE97                                    _abs 8F5E  
                                  _pad 7E34                                    fsr0 003FE9  
                                  fsr2 003FD9                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 9944                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 982E                           _run_checksum 94F4  
                   _UART1_Transmit_ISR 9420                          __CFG_BBEN$OFF 000000  
     __size_of_secs_II_monitor_message 0154                    __end_of_s10f1_opcmd 6A1E  
                        _INT1_CallBack 9850                           __CFG_ZCD$OFF 000000  
                                 _H153 0D9D                                   _H254 0ED5  
                                 l1021 912C                                   l2020 2CF4  
                                 l2021 2D10                                   l2023 2D50  
                                 l1312 26CA                                   l2017 2CBE  
                                 l1305 259C                                   l2211 6AD4  
                                 l2019 2CD8                                   l1308 25D8  
                                 l2133 9278                                   l2037 7C10  
                                 l2310 7E88                                   l2070 760A  
                                 l2215 6C4E                                   l1272 1F88  
                                 l1281 20E6                                   l1265 1E30  
                                 l1257 1C5C                                   l2330 3F92  
                                 l2090 6CC8                                   l1274 2022  
                                 l1531 848E                                   l2219 7D26  
                                 l1283 216C                                   l3204 8F9E  
                                 l1285 2176                                   l1535 8712  
                                 l2409 470A                                   l2266 988E  
                                 l1802 5BF4                                   l1298 2422  
                                 l3235 60E8                                   l2355 639A  
                                 l3323 7040                                   l1660 2F8C  
                                 l2373 5798                                   l1389 8D34  
                                 l1830 50D0                                   l1726 3AA4  
                                 l1824 8EBC                                   l1833 52F8  
                                 l2394 4DE8                                   l3338 8824  
                                 l3283 7AEE                                   l1835 53BE  
                                 l1844 6352                                   l2469 1C0E  
                                 l1861 893C                                   l1781 4C1E  
                                 l1767 4A4E                                   l1961 2ECA  
                                 l1947 71D8                                   l1885 89C2  
                                 l1878 89B0                                   _HC33 FAF1  
                                 l8203 860C                                   l8205 862E  
                                 l8311 5DCC                                   l8411 8E1A  
                                 l8331 65FE                                   l8271 8814  
                                 l8249 8F8E                                   l8347 6732  
                                 l8339 6686                                   l8363 722C  
                                 l8293 5CB4                                   l9343 97DE  
                                 l8287 5C60                                   l8375 72FE  
                                 l9511 9282                                   l8713 5E98  
                                 l9433 90E8                                   l8731 5F72  
                                 l8723 5F2E                                   l8715 5EBA  
                                 l8299 5CFA                                   l8395 784C  
                                 l8387 77A0                                   l9435 90EA  
                                 l8733 5F96                                   l8735 5FD4  
                                 l9607 538E                                   l9615 5398  
                                 l9391 8944                                   l8729 5F5A  
                                 l9529 8334                                   l8739 603C  
                                 l9395 894C                                   l9475 9168  
                                 l8749 60D8                                   l8765 6ED6  
                                 l9477 916A                                   l8767 6F42  
                                 l9655 745C                                   l9399 8998  
                                 l9657 747C                                   l9649 73C4  
                                 l9659 7490                                   l9669 89CC  
                                 STR_1 FF3B                                   STR_2 FF7C  
                                 l9857 710E                                   l9849 705A  
                                 l9873 71A2                                   STR_3 FFCA  
                                 STR_4 FF2A                                   l9875 71C2  
                                 STR_5 FF4C                                   STR_6 FF7C  
                                 STR_7 FFCA                                   STR_8 FF19  
                                 STR_9 FF5D                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u5010 7336  
                                 _T2PR 003FAB                                   u5030 779A  
                                 u5040 77CC                                   u5060 7884  
                                 u5080 8DF6                                   u5090 8E16  
                                 _T6PR 003F93                                   u4700 87D4  
                                 _PMD0 0039C0                                   u7021 70B0  
                                 _PMD1 0039C1                                   u4550 865C  
                                 _PMD2 0039C2                                   u7031 7164  
                                 _PMD3 0039C3                                   u4720 93B8  
                                 u4800 5D26                                   u4640 8F72  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u4730 93BA                                   u4650 9388  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u4820 5E04                                   u4900 6680  
                                 u4660 938A                                   u4580 9358  
                                 u7060 8B5C                                   u4557 864E  
                                 u4750 5C5A                                   u4910 66B2  
                                 u4670 9022                                   u4590 935A  
                                 u4840 5E56                                   u4680 9024  
                                 u4770 5CB0                                   u4930 676A  
                                 u4690 87D2                                   u6530 8A8E  
                                 u9100 3F56                                   u4781 5CBA  
                                 u7085 8B90                                   u4790 5CF4  
                                 u4950 67BC                                   u4870 65F8  
                                 u7086 8B92                                   u7078 8B5E  
                                 u7430 59F6                                   u5760 5F2A  
                                 u9120 3F68                                   u6720 83D2  
                                 u4890 664E                                   u9210 4278  
                                 u6538 8A90                                   u6730 50EA  
                                 u4971 71EC                                   u6555 8ADE  
                                 u5780 6082                                   u9140 3FB8  
                                 u9300 6512                                   u5860 6FF2  
                                 u4980 7226                                   u6556 8AE0  
                                 u6820 74B6                                   u6740 5108  
                                 u5790 6084                                   u9150 4204  
                                 u9070 3EE4                                   u9310 6516  
                                 u4990 7258                                   u6750 5126  
                                 u9080 3EE6                                   u9240 6370  
                                 u9400 5876                                   u6760 5144  
                                 u9161 4234                                   u9170 424A  
                                 u6770 5162                                   u9171 4248  
                                 u9180 425E                                   u9260 64A0  
                                 u9500 508A                                   u6780 5180  
                                 u6685 905E                                   u9190 4262  
                                 u9270 64B8                                   u9430 5952  
                                 u9510 508E                                   u9407 5868  
                                 u6791 530A                                   u9600 487C  
                                 u9265 6482                                   u9290 64FE  
                                 u9450 4DBE                                   u9610 487E  
                                 u9530 46E0                                   u9291 64FC  
                                 u9390 5830                                   u9630 493C  
                                 u9640 495C                                   u9560 47C8  
                                 u9800 03B2                                   u9481 5060  
                                 u9490 5076                                   u9570 481C  
                                 u9810 03B4                                   _PLLR 01CEE0  
                                 u9491 5074                                   u9651 498C  
                                 u9635 491E                                   u9660 49A2  
                                 u9580 481E                                   u9820 03DA  
                                 u9661 49A0                                   u9670 49B6  
                                 u9910 0804                                   u9750 0230  
                                 u9680 49BA                                   u9760 0232  
                                 u8970 79F8                                   u9930 091E  
                                 u9850 04FA                                   u9770 0258  
                                 u8990 7A74                                   u9870 0676  
                                 u9890 0764                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                       __end_of_ADCC_ISR 9420  
                        __CFG_FCMEN$ON 000000                                   _dbuf 00AD  
                                 _atoi 5E7E                                   _ctoa 882E  
                                 _main 1C18                                   _dtoa 3EB4  
                                 _msg0 FB39                                   _msg1 FB92  
                                 _msg2 FBEA                                   _seed 00CD  
                                 _prec 0011                                   _otoa 6356  
                                 _nout 000D                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 56AE                                   btemp 0037  
                                 _utoa 4DA4                                   _xtoa 46C6  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 001B  
            __end_of_SPI1_Exchange8bit 98B0                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 974C                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005C  
            __size_of_DATAEE_WriteByte 0068             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 9A66                       __end_of_INT1_ISR 9A76  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 8496  
        __end_of_OSCILLATOR_Initialize 9A06                                  l11011 5BA6  
                                l11003 5B6C                                  l11013 5BCE  
                                l10321 8FAA                                  l11041 921E  
                                l11107 9442                                  l11019 5BD4  
                                l10325 8FD4                                  l11037 9206  
                                l10271 91AE                                  l11129 946E  
                                l11155 9114                                  l10295 9172  
                                l13121 3F82                                  l13201 64A4  
                                l13051 7A04                                  l10379 9500  
                                l14003 68A8                                  l13133 3FEA  
                                l13301 501E                                  l14021 68EC  
                                l13063 88C2                                  l13143 41F0  
                                l13231 571A                                  l14023 68F4  
                                l14015 68CE                                  l13073 7E58  
                                l13129 3FCC                                  l13401 007A  
                                l14201 7522                                  l14041 694A  
                                l14033 6924                                  l14009 68B2  
                                l14121 3660                                  l13067 8900  
                                l13083 7ECE                                  l13163 42A2  
                                l13219 6568                                  l13251 580A  
                                l13323 46FA                                  l15011 80B0  
                                l14211 754C                                  l14051 697A  
                                l14027 68FE                                  l14131 3856  
                                l14123 36BE                                  l13077 7E80  
                                l13261 58C4                                  l13421 00A4  
                                l13413 0086                                  l13405 007E  
                                l14221 75C2                                  l14061 69B0  
                                l14045 6954                                  l14029 691E  
                                l14133 38D0                                  l14125 371C  
                                PRLOCK 0039EF                                  l13087 7F10  
                                l13079 7E92                                  l13095 884C  
                                l13167 42D2                                  l13255 583A  
                                l13247 57CE                                  l13343 47D0  
                                l13335 4770                                  l13503 0710  
                                l13423 00F6                                  l15015 80C4  
                                l15023 811C                                  l15007 806A  
                                l14047 6974                                  l14039 6942  
                                l14135 3952                                  l14127 377A  
                                l14119 35CE                                  l13097 8878  
                                l13265 58F0                                  l13329 4734  
                                l13601 0D7E                                  l13441 01E8  
                                l13417 008A                                  l13409 0082  
                                l15017 80FC                                  l14209 752C  
                                l14233 75E6                                  l14313 6D80  
                                l14073 69E8                                  l14129 37DC  
                                l15105 4C70                                  l13179 638A  
                                l13291 4E34                                  l13283 4DD8  
                                l13515 077C                                  l14147 7B04  
                                l14219 75A2                                  l14323 6D94  
                                l14139 39F4                                  l14411 28A0  
                                l14403 287E                                  l15131 4D12  
                                l15115 4CA6                                  l15051 4AE2  
                                l13189 63EE                                  l13269 592C  
                                l13613 0E56                                  l13461 0354  
                                l13437 0198                                  l14173 7C3E  
                                l14229 75CC                                  l14341 6DE2  
                                l14317 6D8C                                  l14253 6C54  
                                l15221 3094                                  l14069 69E2  
                                l14501 2A48                                  l14405 2886  
                                l10981 5AD0                                  l10973 5A16  
                                l15133 4D16                                  l15125 4CE8  
                                l15053 4AF4                                  l15037 4A86  
                                l13383 4A12                                  l13359 48C6  
                                l13367 4940                                  l13527 0896  
                                l13463 036A                                  l13439 01D2  
                                l14335 6DA0                                  l14327 6D98  
                                l14319 6D90                                  l15231 30BA  
                                l15207 3036                                  l14431 290C  
                                l14415 28B8                                  l15135 4D1E  
                                l15127 4CF2                                  l15063 4B3E  
                                l15143 4D3E                                  l13625 0F12  
                                l14337 6DD2                                  l14281 6CCC  
                                l14273 6CBC                                  l15321 336C  
                                l15313 330E                                  l15305 32CC  
                                l14521 2A66                                  l14417 28CA  
                                l10993 5B24                                  l10985 5AEA  
                                l15073 4B96                                  l15145 4D88  
                                l13539 0988                                  l13491 05EE  
                                l13459 031A                                  l14195 74EC  
                                l14291 6D10                                  l14283 6CE8  
                                l14275 6CC0                                  l14259 6C7A  
                                l15331 33D8                                  l15251 3130  
                                l15155 2ED8                                  l14611 2C7C  
                                l14443 2948                                  l10995 5B4C  
                                l15139 4D28                                  l15083 4BEC  
                                l13733 17C6                                  l13709 1566  
                                l13637 1032                                  l13549 0AC0  
                                l13397 0060                                  l13805 1BBA  
                                l14349 6DFE                                  l14293 6D32  
                                l14277 6CC4                                  l14357 6E12  
                                l15333 33DC                                  l15317 333C  
                                l15309 32EA                                  l14525 2A80  
                                l14437 292A                                  l15069 4B6A  
                                l13719 1608                                  l13487 059A  
                                l13479 0472                                  l13399 0062  
                                l13831 545A                                  l15415 6AA4  
                                l14199 74F4                                  l14287 6CEE  
                                l14359 6E38                                  l15263 31B2  
                                l15255 3154                                  l15247 3112  
                                l14607 2C36                                  l14551 2BA0  
                                l14535 2B12                                  l14527 2ABE  
                                l14543 2B36                                  l14471 29C0  
                                l10999 5B52                                  l15095 4C44  
                                l13761 18E0                                  l13649 1120  
                                l13569 0B42                                  l13497 068C  
                                l15273 321E                                  l15193 2FD8  
                                l15169 2F32                                  l14705 2E78  
                                l14609 2C74                                  l14545 2B56  
                                l14473 29EC                                  l14457 2982  
                                l14721 2E92                                  l15521 1F08  
                                l13659 1248                                  l13579 0BF8  
                                l13851 5630                                  l13843 5582  
                                l15427 6BD0                                  l15371 34EE  
                                l15347 341A                                  l15275 3222  
                                l15259 3182                                  l14627 2CD0  
                                l15099 4C64                                  l13669 12F8  
                                l13589 0C9A                                  l13837 5518  
                                l13925 84F0                                  l13941 6182  
                                l15381 350E                                  l15373 34F2  
                                l14653 2D2C                                  l15701 280C  
                                l15621 237C                                  l13775 1A18  
                                l13679 142E                                  l13863 8568  
                                l13943 6210                                  l15375 34FA  
                                l15367 34CE                                  l14911 3C24  
                                l14591 2C2A                                  l14567 2BE0  
                                l14559 2BC0                                  l14479 2A0A  
                                l15551 2032                                  l15535 1FC6  
                                l15519 1EB6                                  l13865 85A8  
                                l13945 629E                                  l15377 34FE  
                                l15289 3274                                  l15385 3524  
                                l14673 2D78                                  l15473 1C92  
                                l13795 1B96                                  l13699 14B0  
                                l13939 60F4                                  l15379 3506  
                                l15387 356E                                  l14931 3CFA  
                                l14915 3C52                                  l14907 3C00  
                                l14843 3A40                                  l13971 6818  
                                l14683 2E12                                  l14499 2A28  
                                l15643 2488                                  l15571 2130  
                                l15555 204E                                  l15547 202A  
                                l15467 1C46                                  l13789 1B3C  
                                l13949 632C                                  l14933 3CFE  
                                l14685 2E56                                  l14589 2C04  
                                l15661 25E2                                  l15653 258C  
                                l15645 2502                                  l15637 2418  
                                l15581 21FC                                  l15469 1C4E  
                                l13799 1BA0                                  l14919 3C82  
                                l13991 6864                                  l14679 2DEE  
                                l15663 2612                                  l15559 205E  
                                l15583 2232                                  l15671 26D4  
                                l14881 3B50                                  l14865 3ADE  
                                l13993 6884                                  l13985 6854  
                                l15593 22AE                                  l15673 2700  
                                l14971 3E04                                  l14947 3D3E  
                                l13987 685C                                  l13979 6836  
                                l15683 2734                                  l15667 2650  
                                l15595 22FE                                  l14877 3B26  
                                l13997 688A                                  l14983 3E3C  
                                l14895 3BA4                                  l14879 3B3A  
                                l14991 3E4E                                  l14977 3E2C  
                                l14993 3E98                                  l15689 27D2  
                                l14979 3E30                                  l14899 3BC2  
                      __end_of___aodiv 5E7E                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 67E0                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 FE20  
                                STR_11 FDE1                                  STR_12 FDCC  
                                STR_20 FCE3                                  STR_21 FEBE  
                                STR_13 FD5E                                  STR_30 FFCA  
                                STR_22 FFC6                                  STR_14 FD46  
                                STR_31 FFCA                                  STR_15 FF07  
                                STR_23 FDF6                                  STR_40 FE98  
                                STR_24 FCE3                                  STR_32 FFCA  
                                STR_16 FE0B                                  STR_17 FE20  
                                STR_41 FF97                                  STR_33 FE5D  
                                STR_25 FC78                          __CFG_WDTE$OFF 000000  
                                STR_42 FF97                                  STR_26 FFFB  
                                STR_18 FE71                                  STR_50 FE35  
                                STR_34 FCC9                                  STR_19 FE0B  
                                STR_27 FFF8                                  STR_43 FF6D  
                                STR_51 FEE3                                  STR_35 FCAF  
                                STR_52 FE35                                  STR_60 FDA2  
                                STR_44 FF6D                                  STR_36 FDB7  
                                STR_45 FF6D                                  STR_29 FFCA  
                                STR_37 FF8B                                  STR_53 FED1  
                                STR_61 FC95                                  STR_54 FE35  
                                STR_38 FFA1                                  STR_46 FD16  
                                STR_62 FCFD                                  STR_55 FE98  
                                STR_71 FFAE                                  STR_39 FE98  
                                STR_63 FE85                                  STR_47 FD8C  
                                STR_64 FE85                                  STR_80 FFAF  
                                STR_56 FEAB                                  STR_48 FE49  
                                _ADRPT 003EEC                                  STR_65 FE85  
                                STR_73 FFB2                                  STR_49 FEF5  
                                STR_57 FD2E                                  STR_66 FE85  
                                STR_58 FDA2                                  STR_75 FFB2  
                                STR_67 FFFB                                  STR_91 FFDA  
                                STR_59 FD76                                  STR_84 FFB3  
                                STR_68 FFFB                                  STR_93 FFDA  
                                STR_69 FFAE                                  STR_87 FFD4  
                                STR_96 FFD7                                  STR_89 FFD4  
                                STR_98 FFD7                                  u10000 0D78  
                                u10020 0E54                                  u10007 0D66  
                                u10040 0F10                                  u10210 18A2  
                                u10027 0E52                                  u10060 1030  
                                u10230 1968                                  u10310 56A4  
                                u10047 0F0E                                  u11111 4B8A  
                                u10080 111E                                  u10250 1AA0  
                                u10170 1690                                  u10410 68A2  
                                u10067 100C                                  u10340 84D0  
                                u10510 6A00                                  u10430 68E6  
                                u10087 1106                                  u10450 693C  
                                u10370 6830                        __end_of___lodiv 735E  
                                u10630 6D88                                  u10470 6992  
                                u10390 684E                                  u10710 2AE0  
                                u10720 2B02                                  u10490 69C8  
                                _U1P1H 003DED                                  u10740 2B78  
                                _U1P2H 003DEF                                  u11525 345A  
                                u11630 6C36                                  u11526 345C  
                                u10750 2B9A                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  u11535 346A  
                                u11536 346C                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  u11545 347A  
                                u11546 347C                                  u10770 2DFC  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                u11648 6C38                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  u10955 3D86  
                                u10956 3D88                                  u10788 2DFE  
                                u10965 3D96                                  u10966 3D98  
                                u10975 3DA6                                  _T5CLK 003F9D  
                                u10976 3DA8                        __end_of___lomod 78A6  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _T2TMR 003FAA  
                                _U1UIR 003DF8                                  _T2RST 003FAF  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005C  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
              secs_gem_state@equipment 001D                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 9AE0  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 9724  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 8E7E  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 9992  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 0021  
                                _flags 0013                                  _msg99 FC40  
                                _fputc 79D4             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 902E                                  _fputs 88B2  
                      __end_of_isdigit 93C4                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005C                                  _srand 92CC  
                                _width 000F                                  _putch 995E  
                      __end_of_islower 9364                        __end_of_isspace 8E2A  
             _INT1_SetInterruptHandler 96AC                        __end_of_isupper 9394  
                                pclath 003FFA                                  tablat 003FF5  
                                ltemp0 0037                                  ltemp1 003B  
                                ltemp2 003F               __size_of_DMA1_Initialize 006A  
                                plusw0 003FEB                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0037  
                                ttemp1 003A                                  ttemp2 003D  
                                ttemp3 0040                                  ttemp5 0038  
                                ttemp6 003B                                  ttemp7 003F  
                       _secs_gem_state 6C52                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 9634            _UART1_SetRxInterruptHandler 960C  
                                wtemp0 0037                                  wtemp1 0039  
                                wtemp2 003B                                  wtemp3 003D  
                                wtemp4 003F                                  wtemp5 0041  
                                wtemp8 0038                        __end_of_sprintf 7E34  
                      __end_of_strncmp 704A                        __end_of_toupper 882E  
                  ??_UART1_tx_vect_isr 005C              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 9774               __size_of_SPI1_Initialize 0016  
                         __end_of_HC33 FB39               __size_of_terminal_format 0264  
                      _TMR5_Initialize 8F18                  __end_of_ringBufS_init 9594  
                      __initialization 7614                      _UART2_rx_vect_isr 979C  
                         __end_of_atoi 60F2                           __end_of_ctoa 88B2  
                         __end_of_main 281E                           __end_of_dtoa 430A  
                         __end_of_msg0 FB92                           __end_of_msg1 FBEA  
                         __end_of_msg2 FC40                           __end_of_otoa 65A0  
                         __end_of_stoa 596C                           __end_of_utoa 50C6  
           __size_of_UART2_is_rx_ready 0008                           __end_of_xtoa 4A4A  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005C  
           __size_of_UART2_is_tx_ready 0008                __end_of_TMR2_Initialize 995E  
     secs_II_monitor_message@store1_13 0058       secs_II_monitor_message@store6_11 0057  
             __size_of_DMA2_Initialize 005A               _TMR5_SetInterruptHandler 9684  
                        __activetblptr 000003                            _s10f1_opcmd 67E0  
            __size_of_DMA1_DMASCNT_ISR 0010   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005C              __end_of_UART1_tx_vect_isr 974C  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 9634  
                      _PWM8_Initialize 99DA                       _UART1_Initialize 8AEA  
                    _UART2_tx_vect_isr 9774                     _UART2_Transmit_ISR 944C  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                 __end_of_gem_messages 71DE                                 STR_100 FFDD  
                               _ADLTHL 003EDE                                 STR_102 FFDD  
                               STR_112 FFBB                                 STR_120 FFE9  
                               STR_105 FFBA                                 STR_122 FFE9  
                               STR_107 FFBA                                 STR_115 FFE6  
                               STR_132 FFB7                                 STR_140 FFE3  
                               STR_117 FFE6                                 STR_125 FFB6  
                               STR_142 FFE3                                 STR_127 FFB6  
                               STR_135 FFE0                                 STR_152 FFBF  
                               STR_160 FFEF                                 STR_137 FFE0  
                               STR_145 FFBE                                 STR_162 FFEF  
                               _ADPREH 003EF7                                 STR_171 FFAA  
                               STR_147 FFBE                                 STR_155 FFEC  
                               STR_180 FFAB                                 STR_157 FFEC  
                               STR_165 FFC2                                 _ADPREL 003EF6  
                               STR_167 FFC2                                 STR_183 FFF2  
                               STR_176 FFC3                                 STR_192 FFF5  
                               STR_185 FFF2                                 STR_169 FFAA  
                               STR_194 FFF5                                 STR_187 FFCE  
                               STR_196 FFD1                                 STR_189 FFCE  
                               STR_198 FFD1                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                   _PWM8_LoadDutyValue 902E                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005C  
               __end_of_secs_gem_state 6E4E                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003C                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1038 8E76  
                       __CFG_WDTCCS$SC 000000                                 u305_48 983C  
                     _mode_lamp_bright 9A4A                                 u307_48 985E  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 u716_40 999A  
                               _OSCFRQ 0039DF                                 u716_46 999C  
                               u760_48 97F6                                 _NVMDAT 0039E3  
                               u763_48 981A              _MyeaDogM_WriteStringAtPos 803C  
             __end_of_send_lcd_cmd_dma 8DD8                    ??_UART2_tx_vect_isr 005C  
            __end_of_UART2_rx_vect_isr 97C2             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                    __end_of_s6f11_opcmd 8C72  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 9A76  
                     _UART2_Initialize 8C72                                 _WaitMs 9260  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 8688  
                               _memset 53C2                   __size_of_help_button 003C  
                               clear_0 76F0                                 clear_1 7704  
                               clear_2 7718                                 clear_3 772A  
                               clear_4 7736                                 clear_5 7742  
                               clear_6 774E                                 _printf 8BB2  
                   _eaDogM_WriteString 8496                       __end_of_parse_ll 89A4  
                            ?_ADCC_ISR 005C                                 _strlen 85E6  
                   __size_of_TimerDone 0024                           __pdataBIGRAM 0C1A  
                      _ADCC_Initialize 8ECE                         _PMD_Initialize 9A06  
                         __pdataCOMRAM 0057              __end_of_UART2_tx_vect_isr 979A  
                               lltemp0 0037                                 lltemp1 003F  
                               lltemp2 0047                                 lltemp3 004F  
                         __mediumconst FAF0                _secs_II_monitor_message 74C0  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 8D84  
                     __end_of_vfprintf 85E6                             _StartTimer 9224  
        __size_of_INTERRUPT_Initialize 0064                __end_of_TMR5_Initialize 8F5E  
                    _SYSTEM_Initialize 9070                             __accesstop 0060  
              __end_of__initialization 7760                              ?_INT0_ISR 005C  
                            ?_INT1_ISR 005C                   __end_of_display_help 9AD2  
                 __end_of_display_info 9ACA              __end_of_CLKREF_Initialize 9A80  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0028  
                      _TMR5_WriteTimer 90F2                  _set_temp_display_help 9A1A  
               __end_of_ringBufS_flush 871A                         __pcstackCOMRAM 005C  
                           ___inthi_sp 153A                           __pidataBANK0 9478  
                         __pidataBANK1 8132                           __pidataBANK2 990A  
                         __pidataBANK6 7F3C                              ?_TMR5_ISR 005C  
                            ?_TMR6_ISR 005C                          __end_of_msg99 FC78  
                     _DATAEE_WriteByte 8A82                         ivt0x8_undefint 00AC  
                        __end_of_fputc 7AF8                          __end_of_fputs 8930  
                   __size_of_ee_logger 0122        secs_II_monitor_message@store1_1 0059  
                        __end_of_srand 9300                  __end_of_TMR5_CallBack 982E  
                        __end_of_putch 9978                __end_of_PWM8_Initialize 99F0  
              __end_of_TMR6_Initialize 965C                 __end_of_PMD_Initialize 9A1A  
              __size_of_block_checksum 00E2                             ??_ADCC_ISR 005C  
                __end_of_TMR6_CallBack 980A            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0028                          _DMA1_DMAA_ISR 9A8C  
               __size_of_mode_lamp_dim 0018               _UART2_RxInterruptHandler 0004  
            __end_of_SYSTEM_Initialize 90B2                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000            __end_of_format_display_text 74C0  
                           __pbssBANK0 0060                             __pbssBANK2 0200  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                           __pbssBANK5 0500                             _check_help 6A1E  
                          _s6f11_opcmd 8C14                  _INT0_InterruptHandler 000A  
                           ??_INT0_ISR 005C                             ??_INT1_ISR 005C  
                    __end_of_TimerDone 97E6                       _DMA1_DMADCNT_ISR 9A80  
            __size_of_UART1_put_buffer 0028             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                             _hb_message 8E7E  
                __end_of_wait_lcd_done 9944                     __size_of_parse_sid 0074  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 9684  
              __end_of_ADCC_Initialize 8F18                             ??_TMR5_ISR 01EE  
                           ??_TMR6_ISR 005C                     __size_of_secs_send 0292  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
                              _DMA1SSZ 003BF7                                _DMA2SSZ 003BD7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                    _UART1_Receive_ISR 98CE                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                         ?_DMA1_DMAA_ISR 005C  
                     _DMA1_DMASCNT_ISR 9A2C                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001E                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 005C  
                 __size_of_UART1_Write 0040                  __size_of_gem_messages 0194  
            __size_of_UART2_put_buffer 0028             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 1C18                                _SPI1CLK 003D1C  
                          r_protocol@d 005A                                _SPI1RXB 003D10  
                              _NVMADRH 0039E1                                _NVMADRL 0039E0  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
                              _NVMCON2 0039E6                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 9132  
                    __end_of_ee_logger 7C1A                     __end_of_UART1_Read 91E8  
                   __end_of_UART2_Read 91AC      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                          _mode_lamp_dim 99AC  
                              __Lparam 0000               __end_of_UART1_Initialize 8B4E  
                      __size_of_WaitMs 0036                                ___aodiv 5BFE  
                              ___aomod 65A0     __size_of_MyeaDogM_WriteStringAtPos 00F6  
                           _m_protocol 2ED4                                ___lodiv 71DE  
                         _gem_messages 704A                                ___lomod 7766  
            __end_of_UART1_Receive_ISR 98EC                   __end_of_init_display 830A  
                              __pcinit 7614               __end_of_mode_lamp_bright 9A58  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 9A3C  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 1C18                                __ptext1 4A4A  
                              __ptext2 596C                                __ptext3 830A  
                              __ptext4 94A4                                __ptext5 9AA2  
                              __ptext6 9132                                __ptext7 94CC  
                              __ptext8 9AAA                                __ptext9 281E  
                    _UART2_Receive_ISR 98EC                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us502999 7348                                us507999 7896  
                _OSCILLATOR_Initialize 99F0                           __size_of_abs 0046  
                              _r_block 007A                           __size_of_pad 0108  
                              us485999 5E68                                _isalpha 8FEA  
                              _isdigit 9394                                us496999 67CE  
                              us906999 3ECE                                us925999 63BC  
                              us934999 56C0                                us946999 4E0A  
                              _mode_sw 0023                                us955999 4746  
                              _islower 9334                                _isspace 8DD8  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 8CD0                                _isupper 9364  
                   m_protocol@rxData_l 0022                      __end_of_parse_sid 8A18  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 7D2A  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _strncmp 6E4E                                _toupper 87AA  
                 end_of_initialization 7760                      __end_of_secs_send 5BFE  
             __size_of_secs_II_message 06B6                             _r_protocol 3A3C  
  __end_of_UART1_SetTxInterruptHandler 960C            _UART1_SetTxInterruptHandler 95E4  
      __end_of_secs_II_monitor_message 7614    __end_of_UART2_SetRxInterruptHandler 95E4  
          _UART2_SetRxInterruptHandler 95BC                      __end_of_set_vterm 98CE  
                           _t_protocol 4A4A                      __end_of_vfpfcnvrt 1C18  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 9ADE  
            __end_of_UART2_Receive_ISR 990A                         wdtdelay@dcount 009A  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005D  
                       _block_checksum 830A                  _INT1_InterruptHandler 0007  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 965C  
                         _display_help 9ACA                  _TMR5_InterruptHandler 009E  
                         _display_info 9AC2   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002C    __end_of_ADCC_SetADIInterruptHandler 9724  
          _ADCC_SetADIInterruptHandler 96FC                             _update_lcd 7C1A  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
              __size_of_vterm_sequence 04B2               __end_of_DATAEE_WriteByte 8AEA  
                      _DMA1_Initialize 8A18                        _SPI1_Initialize 99C4  
                __end_of_get_vterm_ptr 93F2                        _terminal_format 60F2  
                     _UART1_put_buffer 94CC                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      r_protocol@b_block 0015  
                    _sequence_messages 50C6                         __end_of_WaitMs 9296  
         __end_of_INTERRUPT_Initialize 8BB2                 __end_of_block_checksum 83EC  
                           _vterm_dump 78A6   __end_of_INT0_DefaultInterruptHandler 9AEE  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 9AEC  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 8CD0  
                        __pidataBIGRAM 430A                          __pidataCOMRAM 9AE6  
                    __size_of_TMR5_ISR 0052                      __size_of_TMR6_ISR 001A  
                  __size_of_check_help 0234            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 56AE                         __end_of_printf 8C14  
             __end_of_DMA1_DMADCNT_ISR 9A8A            __size_of_PWM8_LoadDutyValue 0042  
                     _UART2_put_buffer 94A4                  __end_of_INT0_CallBack 9850  
                       __end_of_strlen 8688                    start_initialization 7614  
 __end_of_TMR5_DefaultInterruptHandler 99AC  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 9992        __size_of_PIN_MANAGER_Initialize 0090  
                          __end_of_abs 8FA4                  __end_of_INT1_CallBack 9872  
            __size_of_set_display_info 0020                            __end_of_pad 7F3C  
                 __size_of_Default_ISR 0006                    __size_of_hb_message 0050  
                 __end_of_send_lcd_cmd 956C                             ivt0x8_base 0008  
                 secs_II_message@block 0030                          _uart1RxBuffer 0400  
                        _uart2RxBuffer 0500                          _uart1TxBuffer 0240  
             __end_of_DMA1_DMASCNT_ISR 9A3C                          _uart2TxBuffer 0200  
                       _DMA1_DMAOR_ISR 9A98              __end_of_sequence_messages 53C2  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A8                              _TimerDone 97C2  
                        _ringBufS_init 956C                            __pdataBANK0 00D5  
                          __pdataBANK1 0100                            __pdataBANK2 02C3  
                          __pdataBANK6 0600             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 9334                        run_checksum@sum 0017  
                  __end_of_help_button 9224        __end_of_eaDogM_WriteStringAtPos 92CC  
                          __pbssBIGRAM 0700                __end_of_DMA1_Initialize 8A82  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 96FC  
                 __size_of_s10f1_opcmd 023E                          __pcstackBANK1 01EE  
             __size_of_TMR2_Initialize 001A                __end_of_SPI1_Initialize 99DA  
             _UART1_RxInterruptHandler 00AA               _UART2_TxInterruptHandler 0001  
              __end_of_terminal_format 6356                    __size_of_m_protocol 06B6  
            __size_of_ringBufS_put_dma 00AA                           _init_display 8220  
               __end_of_DMA1_DMAOR_ISR 9AA2                 __size_of_TMR5_CallBack 0024  
                _TMR6_InterruptHandler 00A1                              _ee_logger 7AF8  
               __size_of_TMR6_CallBack 0024                __end_of_DMA2_Initialize 8D2A  
         __size_of_format_display_text 0162                 _PIN_MANAGER_Initialize 871A  
                    __size_of_parse_ll 0074                   __end_of_wait_lcd_set 9AD8  
                        __pmediumconst FAF0                              __ptext100 71DE  
                            __ptext101 6E4E                              __ptext110 85E6  
                            __ptext102 56AE                              __ptext111 88B2  
                            __ptext103 6356                              __ptext120 9A58  
                            __ptext112 79D4                              __ptext104 3EB4  
                            __ptext121 982E                              __ptext113 995E  
                            __ptext105 8F5E                              __ptext130 9420  
                            __ptext122 9AEC                              __ptext114 83EC  
                            __ptext106 65A0                              __ptext131 974C  
                            __ptext123 9A68                              __ptext115 5E7E  
                            __ptext107 5BFE                              __ptext140 9A2C  
                            __ptext132 98CE                              __ptext124 9850  
                            __ptext116 8DD8                              __ptext108 882E  
                            __ptext141 9A80                              __ptext133 9774  
                            __ptext125 9AEE                              __ptext117 9394  
                            __ptext109 7E34                              __ptext142 9A8C  
                            __ptext134 944C                              __ptext126 9AE0  
                            __ptext118 93C4                              __ptext143 9A98  
                            __ptext135 979C                              __ptext127 93F4  
                            __ptext119 97C2                              __ptext144 8E2C  
                            __ptext136 98EC                              __ptext128 9AF0  
                            __ptext145 90F2                              __ptext137 9978  
                            __ptext129 9724                              __ptext146 980A  
                            __ptext138 97E6                              __ptext147 9992  
                            __ptext139 8FA4                              __ptext148 0000  
                   __end_of_StartTimer 9260                      __size_of_wdtdelay 005A  
                    __size_of_vfprintf 00A8                               _ADCC_ISR 93F4  
                  __size_of_r_protocol 0478                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
                  __size_of_t_protocol 035A                         _vterm_sequence 358A  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 0124  
                             _T2CLKCON 003FAE                         __size_of_fputs 007E  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 8B4E                               _T6CLKCON 003F96  
                            _parse_sid 89A4                        ?_DMA1_DMAOR_ISR 005C  
                             _INT0_ISR 9A58                               _INT1_ISR 9A68  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 596C                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0060                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999             __size_of_sequence_messages 02FC  
                            _ring_buf1 0280                              _ring_buf2 0300  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               _PIR4bits 0039A4  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
                             i2u860_48 97AE                               i2u852_48 940C  
                             i2u854_48 9738                               i2u856_48 9760  
                             i2u858_48 9786               __size_of_TMR5_Initialize 0046  
                            _set_vterm 98B0                    __size_of_update_lcd 0110  
                          _help_button 91E8             __end_of_UART1_Transmit_ISR 944C  
                             _TMR5_ISR 8E2C                               _TMR6_ISR 9978  
                            _port_data 01DE                              _vfpfcnvrt 0000  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 980A  
                   __end_of_check_help 6C52                              _start_lcd 9AD8  
            __size_of_send_lcd_cmd_dma 0054                          _TMR6_CallBack 97E6  
             __end_of_UART1_put_buffer 94F4                  __size_of_send_lcd_cmd 0028  
               __end_of_vterm_sequence 3A3C      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 90F2                    __end_of_UART2_Write 9170  
                     _set_display_info 9872               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 0028                     __end_of_hb_message 8ECE  
                          _INTCON0bits 003FD2                              copy_data0 7628  
                            copy_data1 764E                              copy_data2 7674  
                            copy_data3 7696                              copy_data4 76B8  
                            copy_data5 76DA               _INT0_SetInterruptHandler 96D4  
                  __size_of_vterm_dump 012E                 _uart1TxBufferRemaining 002D  
  __end_of_UART2_SetTxInterruptHandler 95BC            _UART2_SetTxInterruptHandler 9594  
                 __size_of_s6f11_opcmd 005E                           _uart1RxCount 002A  
             __end_of_UART2_put_buffer 94CC                           _uart2RxCount 0024  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 951C  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 9928                           _send_lcd_cmd 9544  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                     __size_of___lodiv 0180                       __size_of___lomod 0140  
                __end_of_DMA1_DMAA_ISR 9A96   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005C               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 9A4A                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 005D                               __ptext10 358A  
                             __ptext11 8C14                               __ptext20 6C52  
                             __ptext12 67E0                               __ptext21 60F2  
                             __ptext13 8930                               __ptext30 9ABA  
                             __ptext22 50C6                               __ptext14 89A4  
                             __ptext31 91AC                               __ptext23 735E  
                             __ptext15 704A                               __ptext40 78A6  
                             __ptext32 8220                               __ptext24 74C0  
                             __ptext16 92CC                               __ptext41 9260  
                             __ptext33 951C                               __ptext25 7AF8  
                             __ptext17 3A3C                               __ptext50 9AC2  
                             __ptext42 98B0                               __ptext34 9544  
                             __ptext26 8A82                               __ptext18 90B2  
                             __ptext51 9ACA                               __ptext43 9A1A  
                             __ptext35 9892                               __ptext27 94F4  
                             __ptext19 2ED4                               __ptext60 965C  
                             __ptext52 9070                               __ptext44 9872  
                             __ptext36 956C                               __ptext28 9AB2  
                             __ptext61 8F18                               __ptext53 8C72  
                             __ptext45 99AC                               __ptext37 8E7E  
                             __ptext29 9170                               __ptext70 9300  
                             __ptext62 9684                               __ptext54 9594  
                             __ptext46 9A4A                               __ptext38 9A3C  
                             __ptext71 96AC                               __ptext63 9944  
                             __ptext55 95BC                               __ptext47 902E  
                             __ptext39 6A1E                               __ptext80 9296  
                             __ptext72 96D4                               __ptext64 99C4  
                             __ptext56 8AEA                               __ptext48 91E8  
                             __ptext81 8D84                               __ptext73 8CD0  
                             __ptext65 99DA                               __ptext57 95E4  
                             __ptext49 9224                               __ptext90 7D2A  
                             __ptext82 9928                               __ptext74 8A18  
                             __ptext66 9A06                               __ptext58 960C  
                             __ptext91 853E                               __ptext83 8D2A  
                             __ptext75 9A76                               __ptext67 871A  
                             __ptext59 9634                               __ptext92 0000  
                             __ptext84 8496                               __ptext76 8ECE  
                             __ptext68 99F0                               __ptext93 46C6  
                             __ptext85 9AD2                               __ptext77 96FC  
                             __ptext69 8B4E                               __ptext94 87AA  
                             __ptext86 9AD8                               __ptext78 803C  
                             __ptext95 9334                               __ptext87 8688  
                             __ptext79 7C1A                               __ptext96 9364  
                             __ptext88 53C2                               __ptext97 8FEA  
                             __ptext89 8BB2                               __ptext98 4DA4  
                             __ptext99 7766                       __size_of_isupper 0030  
                      _secs_II_message 281E                               us1070999 28AA  
                     __size_of_sprintf 010A                       __size_of_strncmp 01FC  
                     __size_of_toupper 0084                       _ringBufS_put_dma 83EC  
                   __end_of_m_protocol 358A                          __size_of_atoi 0274  
                        __size_of_ctoa 0084                          __size_of_main 0C06  
                        __size_of_dtoa 0456                  __size_of_wait_lcd_set 0006  
                        __size_of_otoa 024A                          __size_of_stoa 02BE  
                        __size_of_utoa 0322                          __size_of_xtoa 0384  
                             _parse_ll 8930                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005C                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 00A4  
                            stoa@F1152 00D5                     ??_DMA1_DMASCNT_ISR 005D  
                             _spi_link 0087                               _wdtdelay 8D2A  
           __end_of_UART2_Transmit_ISR 9478                               _vfprintf 853E  
                  secs_gem_state@block 001E                      _UART1_is_rx_ready 9ABA  
           __end_of_PWM8_LoadDutyValue 9070                            _UART1_Write 90B2  
 __end_of_INT1_DefaultInterruptHandler 9AF0  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 9AEE                            _UART2_Write 9132  
                    _UART1_is_tx_ready 9AAA                        r_protocol@retry 005B  
                    t_protocol@requeue 001F      __end_of_MyeaDogM_WriteStringAtPos 8132  
                        ??_Default_ISR 005C                     __end_of_r_protocol 3EB4  
                          _uart1RxHead 002C                 __size_of_get_vterm_ptr 002E  
                          _uart1TxHead 002F                            _uart2RxHead 0026  
                          _uart1RxTail 002B                            _NVMCON1bits 0039E5  
                  _format_display_text 735E                            _uart2TxHead 0029  
                          _uart1TxTail 002E                            _uart2RxTail 0025  
                             mconfig@D 0700                            _uart2TxTail 0028  
                         _wait_lcd_set 9AD2                     _EXT_INT_Initialize 9300  
 __end_of_TMR6_DefaultInterruptHandler 8FEA  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 8FA4                     __end_of_t_protocol 4DA4  
 __end_of_ADCC_DefaultInterruptHandler 9AF2  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 9AF0                               intlevel2 0000  
                    _send_lcd_cmd_long 951C         __size_of_set_temp_display_help 0012  
        __end_of_set_temp_display_help 9A2C                __size_of_secs_gem_state 01FC  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 853E  
                __end_of_mode_lamp_dim 99C4                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 9AC2                             _UART1_Read 91AC  
               __size_of_INT1_CallBack 0022                             _UART2_Read 9170  
                   __end_of_update_lcd 7D2A              __end_of_UART1_is_tx_ready 9AB2  
                    _UART2_is_rx_ready 9AB2                 _uart2TxBufferRemaining 0027  
                    _UART2_is_tx_ready 9AA2                       _send_lcd_cmd_dma 8D84  
                TMR5_ISR@CountCallBack 0019                __end_of_secs_II_message 2ED4  
     __end_of_INT1_SetInterruptHandler 96D4              __size_of_UART1_Initialize 0064  
                      t_protocol@block 0093                       ??_DMA1_DMAOR_ISR 005D  
             _UART1_TxInterruptHandler 00A7                        t_protocol@retry 0020  
            __end_of_send_lcd_cmd_long 9544                    __end_of_Default_ISR 9AE6  
       __end_of_PIN_MANAGER_Initialize 87AA              __size_of_mode_lamp_bright 000E  
                   __end_of_vterm_dump 79D4                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 9296                          _get_vterm_ptr 93C4  
            __size_of_UART2_Initialize 005E  
