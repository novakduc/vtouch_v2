

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 23:44:03 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=4,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=4,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=4,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=4,class=CODE,delta=1
   139                           	psect	text118,global,reloc=4,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=4,class=CODE,delta=1
   144                           	psect	text123,global,reloc=4,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=4,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=4,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   160                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   161                           	psect	text138,global,reloc=4,class=CODE,delta=1
   162                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   163                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   164  0000                     
   165                           ; Version 2.10
   166                           ; Generated 31/07/2019 GMT
   167                           ; 
   168                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   169                           ; All rights reserved.
   170                           ; 
   171                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   172                           ; 
   173                           ; Redistribution and use in source and binary forms, with or without modification, are
   174                           ; permitted provided that the following conditions are met:
   175                           ; 
   176                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   177                           ;        conditions and the following disclaimer.
   178                           ; 
   179                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   180                           ;        of conditions and the following disclaimer in the documentation and/or other
   181                           ;        materials provided with the distribution.
   182                           ; 
   183                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   184                           ;        software without specific prior written permission.
   185                           ; 
   186                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   187                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   188                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   189                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   190                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   191                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   192                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   193                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   194                           ; 
   195                           ; 
   196                           ; Code-generator required, PIC18F57K42 Definitions
   197                           ; 
   198                           ; SFR Addresses
   199  0000                     
   200 ;;_mode	offset	0
   201 ;;_channel	offset=-1 (param)
   202 ;;_s	offset=-2 (param)
   203 ;;_cmd	offset=-1 (param)
   204 ;;_cmd	offset=-1 (param)
   205 ;;_data	offset=-1 (param)
   206 ;;__this	offset=-2 (param)
   207 ;;_index	offset=-1 (param)
   208 ;;_cmd	offset=-1 (param)
   209 ;;_flipper	offset=-1 (param)
   210 ;;_f	offset	0
   211 ;;_ap	offset	6
   212 ;;_s	offset=-3 (param)
   213 ;;_fmt	offset=-5 (param)
   214 ;;_line	offset=-1 (param)
   215 ;;_vterm	offset=-2 (param)
   216 ;;_numMilliseconds	offset=-2 (param)
   217 ;;_vterm	offset=-1 (param)
   218 ;;_r	offset=-1 (param)
   219 ;;_c	offset=-2 (param)
   220 ;;_strPtr	offset=-4 (param)
   221 ;;_strPtr	offset=-1 (param)
   222 ;;_delay	offset=-4 (param)
   223 ;;_strPtr	offset=-2 (param)
   224 ;;__this	offset=-2 (param)
   225 ;;_clearBuffer	offset=-3 (param)
   226 ;;_s	offset	0
   227 ;;_k	offset	2
   228 ;;_dest	offset=-2 (param)
   229 ;;_c	offset=-4 (param)
   230 ;;_n	offset=-6 (param)
   231 ;;_ap	offset	0
   232 ;;_fmt	offset=-3 (param)
   233 ;;_cfmt	offset	0
   234 ;;_fp	offset=-2 (param)
   235 ;;_fmt	offset=-4 (param)
   236 ;;_ap	offset=-6 (param)
   237 ;;_vfpfcnvrt$4119	offset	0
   238 ;;_vfpfcnvrt$4125	offset	2
   239 ;;_vfpfcnvrt$4118	offset	4
   240 ;;_llu	offset	6
   241 ;;_ll	offset	14
   242 ;;_f	offset	22
   243 ;;_ct	offset	26
   244 ;;_cp	offset	29
   245 ;;_c	offset	31
   246 ;;_fp	offset=-2 (param)
   247 ;;_fmt	offset=-4 (param)
   248 ;;_ap	offset=-6 (param)
   249 ;;_xtoa$4104	offset	0
   250 ;;_xtoa$4103	offset	2
   251 ;;_n	offset	4
   252 ;;_c	offset	12
   253 ;;_i	offset	14
   254 ;;_w	offset	16
   255 ;;_p	offset	18
   256 ;;_fp	offset=-2 (param)
   257 ;;_d	offset=-10 (param)
   258 ;;_x	offset=-11 (param)
   259 ;;_toupper$4756	offset	0
   260 ;;_c	offset=-2 (param)
   261 ;;_c	offset=-2 (param)
   262 ;;_c	offset=-2 (param)
   263 ;;_r	offset	0
   264 ;;_l	offset	2
   265 ;;__l	offset=-2 (param)
   266 ;;__r	offset=-4 (param)
   267 ;;_n	offset=-6 (param)
   268 ;;_nuls	offset	0
   269 ;;_l	offset	7
   270 ;;_p	offset	9
   271 ;;_cp	offset	11
   272 ;;_w	offset	13
   273 ;;_i	offset	15
   274 ;;_fp	offset=-2 (param)
   275 ;;_s	offset=-4 (param)
   276 ;;_efgtoa$4083	offset	0
   277 ;;_efgtoa$4082	offset	2
   278 ;;_efgtoa$4081	offset	4
   279 ;;_efgtoa$4077	offset	6
   280 ;;_efgtoa$4073	offset	8
   281 ;;_efgtoa$4072	offset	10
   282 ;;_u	offset	12
   283 ;;_g	offset	16
   284 ;;_l	offset	20
   285 ;;_h	offset	24
   286 ;;_ou	offset	28
   287 ;;_n	offset	32
   288 ;;_e	offset	34
   289 ;;_i	offset	36
   290 ;;_w	offset	38
   291 ;;_p	offset	40
   292 ;;_sign	offset	42
   293 ;;_d	offset	44
   294 ;;_ne	offset	46
   295 ;;_m	offset	48
   296 ;;_pp	offset	50
   297 ;;_t	offset	52
   298 ;;_mode	offset	54
   299 ;;_nmode	offset	55
   300 ;;_fp	offset=-2 (param)
   301 ;;_f	offset=-6 (param)
   302 ;;_c	offset=-7 (param)
   303 ;;_tolower$4741	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_d	offset	0
   307 ;;_s	offset	2
   308 ;;_dest	offset=-2 (param)
   309 ;;_src	offset=-4 (param)
   310 ;;_u	offset	0
   311 ;;_m	offset	4
   312 ;;_e	offset	8
   313 ;;_x	offset=-4 (param)
   314 ;;_u	offset	0
   315 ;;_e	offset	4
   316 ;;_x	offset=-4 (param)
   317 ;;_exp1	offset	0
   318 ;;_sign1	offset	1
   319 ;;_f1	offset=-4 (param)
   320 ;;_b	offset=-4 (param)
   321 ;;_a	offset=-8 (param)
   322 ;;_grs	offset	0
   323 ;;_bexp	offset	1
   324 ;;_aexp	offset	2
   325 ;;_signs	offset	3
   326 ;;_b	offset=-4 (param)
   327 ;;_a	offset=-8 (param)
   328 ;;_f1	offset=-4 (param)
   329 ;;_prod	offset	0
   330 ;;_grs	offset	4
   331 ;;_temp	offset	8
   332 ;;_bexp	offset	10
   333 ;;_aexp	offset	11
   334 ;;_sign	offset	12
   335 ;;_b	offset=-4 (param)
   336 ;;_a	offset=-8 (param)
   337 ;;_ff1	offset=-4 (param)
   338 ;;_ff2	offset=-8 (param)
   339 ;;_ff1	offset=-4 (param)
   340 ;;_ff2	offset=-8 (param)
   341 ;;_grs	offset	0
   342 ;;_rem	offset	4
   343 ;;_new_exp	offset	8
   344 ;;_aexp	offset	10
   345 ;;_bexp	offset	11
   346 ;;_sign	offset	12
   347 ;;_b	offset=-4 (param)
   348 ;;_a	offset=-8 (param)
   349 ;;_sign	offset	0
   350 ;;_counter	offset	1
   351 ;;_dividend	offset=-2 (param)
   352 ;;_divisor	offset=-4 (param)
   353 ;;_quotient	offset	0
   354 ;;_sign	offset	2
   355 ;;_counter	offset	3
   356 ;;_dividend	offset=-2 (param)
   357 ;;_divisor	offset=-4 (param)
   358 ;;_dtoa$4049	offset	0
   359 ;;_n	offset	2
   360 ;;_i	offset	10
   361 ;;_s	offset	12
   362 ;;_w	offset	14
   363 ;;_p	offset	16
   364 ;;_fp	offset=-2 (param)
   365 ;;_d	offset=-10 (param)
   366 ;;_a	offset=-2 (param)
   367 ;;_sign	offset	0
   368 ;;_counter	offset	1
   369 ;;_dividend	offset=-8 (param)
   370 ;;_divisor	offset=-16 (param)
   371 ;;_quotient	offset	0
   372 ;;_sign	offset	8
   373 ;;_counter	offset	9
   374 ;;_dividend	offset=-8 (param)
   375 ;;_divisor	offset=-16 (param)
   376 ;;_w	offset	0
   377 ;;_fp	offset=-2 (param)
   378 ;;_c	offset=-3 (param)
   379 ;;_w	offset	0
   380 ;;_i	offset	2
   381 ;;_fp	offset=-2 (param)
   382 ;;_buf	offset=-4 (param)
   383 ;;_p	offset=-6 (param)
   384 ;;_a	offset	0
   385 ;;_s	offset=-2 (param)
   386 ;;_i	offset	0
   387 ;;_c	offset	2
   388 ;;_s	offset=-2 (param)
   389 ;;_fp	offset=-4 (param)
   390 ;;_c	offset=-2 (param)
   391 ;;_fp	offset=-4 (param)
   392 ;;_c	offset=-1 (param)
   393 ;;__this	offset=-2 (param)
   394 ;;_c	offset=-3 (param)
   395 ;;_atoi$4602	offset	0
   396 ;;_atoi$4600	offset	2
   397 ;;_atoi$4601	offset	4
   398 ;;_n	offset	5
   399 ;;_neg	offset	7
   400 ;;_s	offset=-2 (param)
   401 ;;_isspace$4640	offset	0
   402 ;;_c	offset=-2 (param)
   403 ;;_c	offset=-2 (param)
   404 ;;_vterm	offset=-1 (param)
   405 ;;_new_response_info	offset=-1 (param)
   406 ;;_new_response_info	offset=-1 (param)
   407 ;;_level	offset=-2 (param)
   408 ;;_dutyValue	offset=-2 (param)
   409 ;;_timer	offset=-1 (param)
   410 ;;_timer	offset=-1 (param)
   411 ;;_count	offset=-3 (param)
   412 ;;_arg	offset	0
   413 ;;_exp	offset	4
   414 ;;_sign	offset=-1 (param)
   415 ;;_val	offset=-5 (param)
   416 ;;_InterruptHandler	offset=-3 (param)
   417 ;;_InterruptHandler	offset=-3 (param)
   418 ;;_InterruptHandler	offset=-3 (param)
   419 ;;_InterruptHandler	offset=-3 (param)
   420 ;;_InterruptHandler	offset=-3 (param)
   421 ;;_InterruptHandler	offset=-3 (param)
   422 ;;_state	offset	0
   423 ;;_InterruptHandler	offset=-3 (param)
   424 ;;_InterruptHandler	offset=-3 (param)
   425 ;;_InterruptHandler	offset=-3 (param)
   426 ;;_InterruptHandler	offset=-3 (param)
   427 ;;_timerVal	offset=-2 (param)
   428 ;;_channel	offset=-1 (param)
   429 ;;_i	offset	0
   430                           
   431                           	psect	idataBANK0
   432  017BE2                     __pidataBANK0:
   433                           	opt callstack 0
   434                           
   435                           ;initializer for stoa@F1166
   436  017BE2  28                 	db	40
   437  017BE3  6E                 	db	110
   438  017BE4  75                 	db	117
   439  017BE5  6C                 	db	108
   440  017BE6  6C                 	db	108
   441  017BE7  29                 	db	41
   442  017BE8  00                 	db	0
   443                           
   444                           ;initializer for _port_data
   445  017BE9  FF                 	db	255
   446  017BEA  00                 	db	0
   447  017BEB  FF                 	db	255
   448  017BEC  00                 	db	0
   449  017BED  FF                 	db	255
   450  017BEE  00                 	db	0
   451  017BEF  FF                 	db	255
   452  017BF0  00                 	db	0
   453  017BF1  FF                 	db	255
   454  017BF2  00                 	db	0
   455  017BF3  FF                 	db	255
   456  017BF4  00                 	db	0
   457  017BF5  FF                 	db	255
   458  017BF6  00                 	db	0
   459  017BF7  FF                 	db	255
   460  017BF8  00                 	db	0
   461                           
   462                           	psect	idataBANK2
   463  0165E0                     __pidataBANK2:
   464                           	opt callstack 0
   465                           
   466                           ;initializer for _V
   467  0165E0  00                 	db	0
   468  0165E1  00                 	db	0
   469  0165E2  00                 	db	0
   470  0165E3  00                 	db	0
   471  0165E4  00                 	db	0
   472  0165E5  00                 	db	0
   473  0165E6  00                 	db	0
   474  0165E7  00                 	db	0
   475  0165E8  00                 	db	0
   476  0165E9  00                 	db	0
   477  0165EA  00                 	db	0
   478  0165EB  00                 	db	0
   479  0165EC  00                 	db	0
   480  0165ED  00                 	db	0
   481  0165EE  00                 	db	0
   482  0165EF  00                 	db	0
   483  0165F0  00                 	db	0
   484  0165F1  00                 	db	0
   485  0165F2  00                 	db	0
   486  0165F3  00                 	db	0
   487  0165F4  00                 	db	0
   488  0165F5  00                 	db	0
   489  0165F6  00                 	db	0
   490  0165F7  00                 	db	0
   491  0165F8  00                 	db	0
   492  0165F9  00                 	db	0
   493  0165FA  00                 	db	0
   494  0165FB  00                 	db	0
   495  0165FC  00                 	db	0
   496  0165FD  00                 	db	0
   497  0165FE  00                 	db	0
   498  0165FF  00                 	db	0
   499  016600  00                 	db	0
   500  016601  00                 	db	0
   501  016602  00                 	db	0
   502  016603  00                 	db	0
   503  016604  00                 	db	0
   504  016605  00                 	db	0
   505  016606  00                 	db	0
   506  016607  00                 	db	0
   507  016608  00                 	db	0
   508  016609  00                 	db	0
   509  01660A  00                 	db	0
   510  01660B  00                 	db	0
   511  01660C  00                 	db	0
   512  01660D  00                 	db	0
   513  01660E  00                 	db	0
   514  01660F  00                 	db	0
   515  016610  00                 	db	0
   516  016611  00                 	db	0
   517  016612  00                 	db	0
   518  016613  00                 	db	0
   519  016614  00                 	db	0
   520  016615  00                 	db	0
   521  016616  00                 	db	0
   522  016617  00                 	db	0
   523  016618  00                 	db	0
   524  016619  00                 	db	0
   525  01661A  00                 	db	0
   526  01661B  00                 	db	0
   527  01661C  00                 	db	0
   528  01661D  00                 	db	0
   529  01661E  00                 	db	0
   530  01661F  00                 	db	0
   531  016620  00                 	db	0
   532  016621  00                 	db	0
   533  016622  00                 	db	0
   534  016623  00                 	db	0
   535  016624  00                 	db	0
   536  016625  00                 	db	0
   537  016626  00                 	db	0
   538  016627  00                 	db	0
   539  016628  00                 	db	0
   540  016629  00                 	db	0
   541  01662A  00                 	db	0
   542  01662B  00                 	db	0
   543  01662C  00                 	db	0
   544  01662D  00                 	db	0
   545  01662E  00                 	db	0
   546  01662F  00                 	db	0
   547  016630  00                 	db	0
   548  016631  00                 	db	0
   549  016632  00                 	db	0
   550  016633  00                 	db	0
   551  016634  00                 	db	0
   552  016635  00                 	db	0
   553  016636  00                 	db	0
   554  016637  00                 	db	0
   555  016638  00                 	db	0
   556  016639  00                 	db	0
   557  01663A  00                 	db	0
   558  01663B  00                 	db	0
   559  01663C  00                 	db	0
   560  01663D  00                 	db	0
   561  01663E  00                 	db	0
   562  01663F  00                 	db	0
   563  016640  00                 	db	0
   564  016641  00                 	db	0
   565  016642  00                 	db	0
   566  016643  00                 	db	0
   567  016644  00                 	db	0
   568  016645  00                 	db	0
   569  016646  00                 	db	0
   570  016647  00                 	db	0
   571  016648  00                 	db	0
   572  016649  00                 	db	0
   573  01664A  00                 	db	0
   574  01664B  00                 	db	0
   575  01664C  00                 	db	0
   576  01664D  00                 	db	0
   577  01664E  00                 	db	0
   578  01664F  00                 	db	0
   579  016650  00                 	db	0
   580  016651  00                 	db	0
   581  016652  00                 	db	0
   582  016653  00                 	db	0
   583  016654  00                 	db	0
   584  016655  00                 	db	0
   585  016656  00                 	db	0
   586  016657  00                 	db	0
   587  016658  00                 	db	0
   588  016659  00                 	db	0
   589  01665A  00                 	db	0
   590  01665B  00                 	db	0
   591  01665C  00                 	db	0
   592  01665D  00                 	db	0
   593  01665E  00                 	db	0
   594  01665F  00                 	db	0
   595  016660  00                 	db	0
   596  016661  0000               	dw	0
   597  016663  0000               	dw	0
   598  016665  0000               	dw	0
   599  016667  0000               	dw	0
   600  016669  0000               	dw	0
   601  01666B  0000               	dw	0
   602  01666D  00                 	db	0
   603  01666E  00                 	db	0
   604  01666F  00                 	db	0
   605  016670  00                 	db	0
   606  016671  00                 	db	0
   607  016672  00                 	db	0
   608  016673  00                 	db	0
   609  016674  00                 	db	0
   610  016675  0000               	dw	0
   611  016677  0000               	dw	0
   612  016679  0000               	dw	0
   613  01667B  0000               	dw	0
   614  01667D  0000               	dw	0
   615  01667F  0000               	dw	0
   616  016681  0000               	dw	0
   617  016683  0000               	dw	0
   618  016685  0000               	dw	0
   619  016687  00                 	db	0
   620  016688  00                 	db	0
   621  016689  00                 	db	0
   622  01668A  00                 	db	0
   623  01668B  00                 	db	0
   624  01668C  00                 	db	0
   625  01668D  00                 	db	0
   626  01668E  00                 	db	0
   627  01668F  00                 	db	0
   628  016690  00                 	db	0
   629  016691  00                 	db	0
   630  016692  00                 	db	0
   631  016693  0000               	dw	0
   632  016695  0000               	dw	0
   633  016697  01                 	db	1
   634  016698  00                 	db	0
   635  016699  01                 	db	1
   636  01669A  00                 	db	0
   637  01669B  2D                 	db	45
   638  01669C  00                 	db	0
   639                           
   640                           	psect	mediumconst
   641  00FE72                     __pmediumconst:
   642                           	opt callstack 0
   643  00FE72  00                 	db	0
   644  00FE73                     _T:
   645                           	opt callstack 0
   646  00FE73  63                 	db	99
   647  00FE74  6F                 	db	111
   648  00FE75  6D                 	db	109
   649  00FE76  6D                 	db	109
   650  00FE77  61                 	db	97
   651  00FE78  6E                 	db	110
   652  00FE79  64                 	db	100
   653  00FE7A  73                 	db	115
   654  00FE7B  20                 	db	32
   655  00FE7C  31                 	db	49
   656  00FE7D  00                 	db	0
   657  00FE7E  00                 	db	0
   658  00FE7F  00                 	db	0
   659  00FE80  00                 	db	0
   660  00FE81  00                 	db	0
   661  00FE82  00                 	db	0
   662  00FE83  00                 	db	0
   663  00FE84  00                 	db	0
   664  00FE85  64                 	db	100
   665  00FE86  69                 	db	105
   666  00FE87  73                 	db	115
   667  00FE88  70                 	db	112
   668  00FE89  6C                 	db	108
   669  00FE8A  61                 	db	97
   670  00FE8B  79                 	db	121
   671  00FE8C  73                 	db	115
   672  00FE8D  20                 	db	32
   673  00FE8E  31                 	db	49
   674  00FE8F  00                 	db	0
   675  00FE90  00                 	db	0
   676  00FE91  00                 	db	0
   677  00FE92  00                 	db	0
   678  00FE93  00                 	db	0
   679  00FE94  00                 	db	0
   680  00FE95  00                 	db	0
   681  00FE96  00                 	db	0
   682  00FE97  63                 	db	99
   683  00FE98  6F                 	db	111
   684  00FE99  6D                 	db	109
   685  00FE9A  6D                 	db	109
   686  00FE9B  61                 	db	97
   687  00FE9C  6E                 	db	110
   688  00FE9D  64                 	db	100
   689  00FE9E  73                 	db	115
   690  00FE9F  20                 	db	32
   691  00FEA0  32                 	db	50
   692  00FEA1  00                 	db	0
   693  00FEA2  00                 	db	0
   694  00FEA3  00                 	db	0
   695  00FEA4  00                 	db	0
   696  00FEA5  00                 	db	0
   697  00FEA6  00                 	db	0
   698  00FEA7  00                 	db	0
   699  00FEA8  00                 	db	0
   700  00FEA9  64                 	db	100
   701  00FEAA  69                 	db	105
   702  00FEAB  73                 	db	115
   703  00FEAC  70                 	db	112
   704  00FEAD  6C                 	db	108
   705  00FEAE  61                 	db	97
   706  00FEAF  79                 	db	121
   707  00FEB0  73                 	db	115
   708  00FEB1  20                 	db	32
   709  00FEB2  32                 	db	50
   710  00FEB3  00                 	db	0
   711  00FEB4  00                 	db	0
   712  00FEB5  00                 	db	0
   713  00FEB6  00                 	db	0
   714  00FEB7  00                 	db	0
   715  00FEB8  00                 	db	0
   716  00FEB9  00                 	db	0
   717  00FEBA  00                 	db	0
   718  00FEBB  63                 	db	99
   719  00FEBC  6F                 	db	111
   720  00FEBD  6D                 	db	109
   721  00FEBE  6D                 	db	109
   722  00FEBF  61                 	db	97
   723  00FEC0  6E                 	db	110
   724  00FEC1  64                 	db	100
   725  00FEC2  73                 	db	115
   726  00FEC3  20                 	db	32
   727  00FEC4  33                 	db	51
   728  00FEC5  00                 	db	0
   729  00FEC6  00                 	db	0
   730  00FEC7  00                 	db	0
   731  00FEC8  00                 	db	0
   732  00FEC9  00                 	db	0
   733  00FECA  00                 	db	0
   734  00FECB  00                 	db	0
   735  00FECC  00                 	db	0
   736  00FECD  64                 	db	100
   737  00FECE  69                 	db	105
   738  00FECF  73                 	db	115
   739  00FED0  70                 	db	112
   740  00FED1  6C                 	db	108
   741  00FED2  61                 	db	97
   742  00FED3  79                 	db	121
   743  00FED4  73                 	db	115
   744  00FED5  20                 	db	32
   745  00FED6  33                 	db	51
   746  00FED7  00                 	db	0
   747  00FED8  00                 	db	0
   748  00FED9  00                 	db	0
   749  00FEDA  00                 	db	0
   750  00FEDB  00                 	db	0
   751  00FEDC  00                 	db	0
   752  00FEDD  00                 	db	0
   753  00FEDE  00                 	db	0
   754  00FEDF  63                 	db	99
   755  00FEE0  6F                 	db	111
   756  00FEE1  6D                 	db	109
   757  00FEE2  6D                 	db	109
   758  00FEE3  61                 	db	97
   759  00FEE4  6E                 	db	110
   760  00FEE5  64                 	db	100
   761  00FEE6  73                 	db	115
   762  00FEE7  20                 	db	32
   763  00FEE8  34                 	db	52
   764  00FEE9  00                 	db	0
   765  00FEEA  00                 	db	0
   766  00FEEB  00                 	db	0
   767  00FEEC  00                 	db	0
   768  00FEED  00                 	db	0
   769  00FEEE  00                 	db	0
   770  00FEEF  00                 	db	0
   771  00FEF0  00                 	db	0
   772  00FEF1  64                 	db	100
   773  00FEF2  69                 	db	105
   774  00FEF3  73                 	db	115
   775  00FEF4  70                 	db	112
   776  00FEF5  6C                 	db	108
   777  00FEF6  61                 	db	97
   778  00FEF7  79                 	db	121
   779  00FEF8  73                 	db	115
   780  00FEF9  20                 	db	32
   781  00FEFA  34                 	db	52
   782  00FEFB  00                 	db	0
   783  00FEFC  00                 	db	0
   784  00FEFD  00                 	db	0
   785  00FEFE  00                 	db	0
   786  00FEFF  00                 	db	0
   787  00FF00  00                 	db	0
   788  00FF01  00                 	db	0
   789  00FF02  00                 	db	0
   790  00FF03                     __end_of_T:
   791                           	opt callstack 0
   792  0000                     _IVTADL	set	14493
   793  0000                     _IVTADH	set	14494
   794  0000                     _IVTADU	set	14495
   795  0000                     _PIR4bits	set	14756
   796  0000                     _PIE8bits	set	14744
   797  0000                     _PIR8bits	set	14760
   798  0000                     _SCANPR	set	14839
   799  0000                     _DMA2PR	set	14836
   800  0000                     _DMA1PR	set	14835
   801  0000                     _MAINPR	set	14834
   802  0000                     _ISRPR	set	14833
   803  0000                     _PIE2bits	set	14738
   804  0000                     _PIR2bits	set	14754
   805  0000                     _PIE9bits	set	14745
   806  0000                     _PIR9bits	set	14761
   807  0000                     _PIE6bits	set	14742
   808  0000                     _PIE3bits	set	14739
   809  0000                     _PMD7	set	14791
   810  0000                     _PMD6	set	14790
   811  0000                     _PMD5	set	14789
   812  0000                     _PMD4	set	14788
   813  0000                     _PMD3	set	14787
   814  0000                     _PMD2	set	14786
   815  0000                     _PMD1	set	14785
   816  0000                     _PMD0	set	14784
   817  0000                     _OSCTUNE	set	14814
   818  0000                     _OSCFRQ	set	14815
   819  0000                     _OSCEN	set	14813
   820  0000                     _OSCCON3	set	14811
   821  0000                     _OSCCON1	set	14809
   822  0000                     _IPR8bits	set	14728
   823  0000                     _IPR9bits	set	14729
   824  0000                     _IPR5bits	set	14725
   825  0000                     _IPR1bits	set	14721
   826  0000                     _IPR3bits	set	14723
   827  0000                     _IPR6bits	set	14726
   828  0000                     _IPR2bits	set	14722
   829  0000                     _PIE5bits	set	14741
   830  0000                     _PIE1bits	set	14737
   831  0000                     _PIR5bits	set	14757
   832  0000                     _PIR1bits	set	14753
   833  0000                     _PLLR	set	118496
   834  0000                     _SPI1SDIPPS	set	15071
   835  0000                     _U1RXPPS	set	15077
   836  0000                     _RC6PPS	set	14870
   837  0000                     _RC5PPS	set	14869
   838  0000                     _INT1PPS	set	15041
   839  0000                     _RD1PPS	set	14873
   840  0000                     _INT0PPS	set	15040
   841  0000                     _RC3PPS	set	14867
   842  0000                     _RB6PPS	set	14862
   843  0000                     _SPI1SCKPPS	set	15070
   844  0000                     _U2RXPPS	set	15080
   845  0000                     _SLRCONF	set	14995
   846  0000                     _SLRCONE	set	14979
   847  0000                     _SLRCOND	set	14963
   848  0000                     _SLRCONC	set	14947
   849  0000                     _SLRCONB	set	14931
   850  0000                     _SLRCONA	set	14915
   851  0000                     _ODCOND	set	14962
   852  0000                     _ODCONC	set	14946
   853  0000                     _ODCONB	set	14930
   854  0000                     _ODCONA	set	14914
   855  0000                     _ODCONF	set	14994
   856  0000                     _ODCONE	set	14978
   857  0000                     _WPUC	set	14945
   858  0000                     _WPUA	set	14913
   859  0000                     _WPUB	set	14929
   860  0000                     _WPUE	set	14977
   861  0000                     _WPUF	set	14993
   862  0000                     _WPUD	set	14961
   863  0000                     _ANSELA	set	14912
   864  0000                     _ANSELF	set	14992
   865  0000                     _ANSELE	set	14976
   866  0000                     _ANSELB	set	14928
   867  0000                     _ANSELC	set	14944
   868  0000                     _ANSELD	set	14960
   869  0000                     _DMA2SSA	set	15321
   870  0000                     _DMA1SSA	set	15353
   871  0000                     _DMA2DSZ	set	15310
   872  0000                     _DMA2SSZ	set	15319
   873  0000                     _DMA2DSA	set	15312
   874  0000                     _DMA1DSZ	set	15342
   875  0000                     _DMA1SSZ	set	15351
   876  0000                     _DMA1DSA	set	15344
   877  0000                     _DMA1CON0bits	set	15356
   878  0000                     _DMA1CON1bits	set	15357
   879  0000                     _DMA2CON0	set	15324
   880  0000                     _DMA2AIRQ	set	15326
   881  0000                     _DMA2SIRQ	set	15327
   882  0000                     _DMA2CON1	set	15325
   883  0000                     _DMA1CON0	set	15356
   884  0000                     _DMA1AIRQ	set	15358
   885  0000                     _DMA1SIRQ	set	15359
   886  0000                     _DMA1CON1	set	15357
   887  0000                     _CLKRCON	set	15589
   888  0000                     _CLKRCLK	set	15590
   889  0000                     _SPI1INTFbits	set	15642
   890  0000                     _SPI1RXB	set	15632
   891  0000                     _SPI1TXB	set	15633
   892  0000                     _SPI1TCNTL	set	15634
   893  0000                     _SPI1CON0	set	15636
   894  0000                     _SPI1CLK	set	15644
   895  0000                     _SPI1BAUD	set	15641
   896  0000                     _SPI1CON2	set	15638
   897  0000                     _SPI1CON1	set	15637
   898  0000                     _U2RXB	set	15824
   899  0000                     _U2TXB	set	15826
   900  0000                     _U2ERRIE	set	15842
   901  0000                     _U2ERRIR	set	15841
   902  0000                     _U2UIR	set	15840
   903  0000                     _U2FIFO	set	15839
   904  0000                     _U2BRGH	set	15838
   905  0000                     _U2BRGL	set	15837
   906  0000                     _U2CON2	set	15836
   907  0000                     _U2CON1	set	15835
   908  0000                     _U2CON0	set	15834
   909  0000                     _U2P3L	set	15832
   910  0000                     _U2P2L	set	15830
   911  0000                     _U2P1L	set	15828
   912  0000                     _U1RXB	set	15848
   913  0000                     _U1TXB	set	15850
   914  0000                     _U1ERRIE	set	15866
   915  0000                     _U1ERRIR	set	15865
   916  0000                     _U1UIR	set	15864
   917  0000                     _U1FIFO	set	15863
   918  0000                     _U1BRGH	set	15862
   919  0000                     _U1BRGL	set	15861
   920  0000                     _U1CON2	set	15860
   921  0000                     _U1CON1	set	15859
   922  0000                     _U1CON0	set	15858
   923  0000                     _U1P3H	set	15857
   924  0000                     _U1P3L	set	15856
   925  0000                     _U1P2H	set	15855
   926  0000                     _U1P2L	set	15854
   927  0000                     _U1P1H	set	15853
   928  0000                     _U1P1L	set	15852
   929  0000                     _FVRCON	set	16065
   930  0000                     _ADFLTRL	set	16102
   931  0000                     _ADFLTRH	set	16103
   932  0000                     _ADCON0bits	set	16120
   933  0000                     _ADCON0	set	16120
   934  0000                     _ADCLK	set	16127
   935  0000                     _ADACT	set	16126
   936  0000                     _ADREF	set	16125
   937  0000                     _ADSTAT	set	16124
   938  0000                     _ADCON3	set	16123
   939  0000                     _ADCON2	set	16122
   940  0000                     _ADCON1	set	16121
   941  0000                     _ADPREH	set	16119
   942  0000                     _ADPREL	set	16118
   943  0000                     _ADCAP	set	16117
   944  0000                     _ADACQH	set	16116
   945  0000                     _ADACQL	set	16115
   946  0000                     _ADPCH	set	16113
   947  0000                     _ADRPT	set	16108
   948  0000                     _ADACCU	set	16106
   949  0000                     _ADSTPTH	set	16101
   950  0000                     _ADSTPTL	set	16100
   951  0000                     _ADUTHH	set	16097
   952  0000                     _ADUTHL	set	16096
   953  0000                     _ADLTHH	set	16095
   954  0000                     _ADLTHL	set	16094
   955  0000                     _CCPTMRS1bits	set	16223
   956  0000                     _LATCbits	set	16316
   957  0000                     _LATDbits	set	16317
   958  0000                     _PORTBbits	set	16331
   959  0000                     _T2CON	set	16300
   960  0000                     _T2TMR	set	16298
   961  0000                     _T2PR	set	16299
   962  0000                     _T2RST	set	16303
   963  0000                     _T2HLT	set	16301
   964  0000                     _T2CLKCON	set	16302
   965  0000                     _PWM8DCL	set	16224
   966  0000                     _PWM8DCH	set	16225
   967  0000                     _PWM8CON	set	16226
   968  0000                     _LATEbits	set	16318
   969  0000                     _T5CONbits	set	16282
   970  0000                     _T5CON	set	16282
   971  0000                     _TMR5L	set	16280
   972  0000                     _TMR5H	set	16281
   973  0000                     _T5CLK	set	16285
   974  0000                     _T5GATE	set	16284
   975  0000                     _T5GCON	set	16283
   976  0000                     _T6CON	set	16276
   977  0000                     _T6TMR	set	16274
   978  0000                     _T6PR	set	16275
   979  0000                     _T6RST	set	16279
   980  0000                     _T6HLT	set	16277
   981  0000                     _T6CLKCON	set	16278
   982  0000                     _TRISD	set	16325
   983  0000                     _TRISC	set	16324
   984  0000                     _TRISB	set	16323
   985  0000                     _TRISA	set	16322
   986  0000                     _TRISF	set	16327
   987  0000                     _TRISE	set	16326
   988  0000                     _LATC	set	16316
   989  0000                     _LATB	set	16315
   990  0000                     _LATF	set	16319
   991  0000                     _LATA	set	16314
   992  0000                     _LATD	set	16317
   993  0000                     _LATE	set	16318
   994  0000                     _IVTLOCKbits	set	16340
   995  0000                     _IVTLOCK	set	16340
   996  0000                     _INTCON0bits	set	16338
   997  0000                     _GIE	set	130711
   998  00FF03                     
   999                           ; BSR set to: 57
  1000  00FF03  20                 	db	32
  1001  00FF04  4D                 	db	77	;'M'
  1002  00FF05  65                 	db	101	;'e'
  1003  00FF06  73                 	db	115	;'s'
  1004  00FF07  67                 	db	103	;'g'
  1005  00FF08  20                 	db	32
  1006  00FF09  25                 	db	37
  1007  00FF0A  64                 	db	100	;'d'
  1008  00FF0B  20                 	db	32
  1009  00FF0C  53                 	db	83	;'S'
  1010  00FF0D  74                 	db	116	;'t'
  1011  00FF0E  61                 	db	97	;'a'
  1012  00FF0F  63                 	db	99	;'c'
  1013  00FF10  6B                 	db	107	;'k'
  1014  00FF11  20                 	db	32
  1015  00FF12  25                 	db	37
  1016  00FF13  64                 	db	100	;'d'
  1017  00FF14  20                 	db	32
  1018  00FF15  20                 	db	32
  1019  00FF16  20                 	db	32
  1020  00FF17  20                 	db	32
  1021  00FF18  20                 	db	32
  1022  00FF19  20                 	db	32
  1023  00FF1A  00                 	db	0
  1024  00FF1B                     STR_26:
  1025                           
  1026                           ; BSR set to: 57
  1027  00FF1B  20                 	db	32
  1028  00FF1C  20                 	db	32
  1029  00FF1D  20                 	db	32
  1030  00FF1E  20                 	db	32
  1031  00FF1F  20                 	db	32
  1032  00FF20  20                 	db	32
  1033  00FF21  20                 	db	32
  1034  00FF22  20                 	db	32
  1035  00FF23  20                 	db	32
  1036  00FF24  20                 	db	32
  1037  00FF25  20                 	db	32
  1038  00FF26  20                 	db	32
  1039  00FF27  20                 	db	32
  1040  00FF28  20                 	db	32
  1041  00FF29  20                 	db	32
  1042  00FF2A  20                 	db	32
  1043  00FF2B  20                 	db	32
  1044  00FF2C  20                 	db	32
  1045  00FF2D  00                 	db	0
  1046  00FF2E                     STR_16:
  1047                           
  1048                           ; BSR set to: 57
  1049  00FF2E  48                 	db	72	;'H'
  1050  00FF2F  45                 	db	69	;'E'
  1051  00FF30  4C                 	db	76	;'L'
  1052  00FF31  50                 	db	80	;'P'
  1053  00FF32  20                 	db	32
  1054  00FF33  25                 	db	37
  1055  00FF34  73                 	db	115	;'s'
  1056  00FF35  20                 	db	32
  1057  00FF36  20                 	db	32
  1058  00FF37  20                 	db	32
  1059  00FF38  20                 	db	32
  1060  00FF39  20                 	db	32
  1061  00FF3A  20                 	db	32
  1062  00FF3B  20                 	db	32
  1063  00FF3C  20                 	db	32
  1064  00FF3D  20                 	db	32
  1065  00FF3E  20                 	db	32
  1066  00FF3F  20                 	db	32
  1067  00FF40  00                 	db	0
  1068  00FF41                     
  1069                           ; BSR set to: 57
  1070  00FF41  44                 	db	68	;'D'
  1071  00FF42  49                 	db	73	;'I'
  1072  00FF43  53                 	db	83	;'S'
  1073  00FF44  50                 	db	80	;'P'
  1074  00FF45  4C                 	db	76	;'L'
  1075  00FF46  41                 	db	65	;'A'
  1076  00FF47  59                 	db	89	;'Y'
  1077  00FF48  20                 	db	32
  1078  00FF49  25                 	db	37
  1079  00FF4A  73                 	db	115	;'s'
  1080  00FF4B  20                 	db	32
  1081  00FF4C  20                 	db	32
  1082  00FF4D  20                 	db	32
  1083  00FF4E  20                 	db	32
  1084  00FF4F  20                 	db	32
  1085  00FF50  20                 	db	32
  1086  00FF51  20                 	db	32
  1087  00FF52  20                 	db	32
  1088  00FF53  00                 	db	0
  1089  00FF54                     STR_8:
  1090                           
  1091                           ; BSR set to: 57
  1092  00FF54  20                 	db	32
  1093  00FF55  56                 	db	86	;'V'
  1094  00FF56  54                 	db	84	;'T'
  1095  00FF57  45                 	db	69	;'E'
  1096  00FF58  52                 	db	82	;'R'
  1097  00FF59  4D                 	db	77	;'M'
  1098  00FF5A  20                 	db	32
  1099  00FF5B  23                 	db	35
  1100  00FF5C  32                 	db	50	;'2'
  1101  00FF5D  20                 	db	32
  1102  00FF5E  20                 	db	32
  1103  00FF5F  20                 	db	32
  1104  00FF60  20                 	db	32
  1105  00FF61  20                 	db	32
  1106  00FF62  20                 	db	32
  1107  00FF63  20                 	db	32
  1108  00FF64  00                 	db	0
  1109  00FF65                     STR_4:
  1110                           
  1111                           ; BSR set to: 57
  1112  00FF65  20                 	db	32
  1113  00FF66  4E                 	db	78	;'N'
  1114  00FF67  53                 	db	83	;'S'
  1115  00FF68  41                 	db	65	;'A'
  1116  00FF69  53                 	db	83	;'S'
  1117  00FF6A  50                 	db	80	;'P'
  1118  00FF6B  4F                 	db	79	;'O'
  1119  00FF6C  4F                 	db	79	;'O'
  1120  00FF6D  4B                 	db	75	;'K'
  1121  00FF6E  20                 	db	32
  1122  00FF6F  20                 	db	32
  1123  00FF70  20                 	db	32
  1124  00FF71  20                 	db	32
  1125  00FF72  20                 	db	32
  1126  00FF73  20                 	db	32
  1127  00FF74  20                 	db	32
  1128  00FF75  00                 	db	0
  1129  00FF76                     STR_1:
  1130                           
  1131                           ; BSR set to: 57
  1132  00FF76  20                 	db	32
  1133  00FF77  4D                 	db	77	;'M'
  1134  00FF78  42                 	db	66	;'B'
  1135  00FF79  4D                 	db	77	;'M'
  1136  00FF7A  43                 	db	67	;'C'
  1137  00FF7B  20                 	db	32
  1138  00FF7C  53                 	db	83	;'S'
  1139  00FF7D  4F                 	db	79	;'O'
  1140  00FF7E  4C                 	db	76	;'L'
  1141  00FF7F  41                 	db	65	;'A'
  1142  00FF80  52                 	db	82	;'R'
  1143  00FF81  4D                 	db	77	;'M'
  1144  00FF82  4F                 	db	79	;'O'
  1145  00FF83  4E                 	db	78	;'N'
  1146  00FF84  20                 	db	32
  1147  00FF85  20                 	db	32
  1148  00FF86  00                 	db	0
  1149  00FF87                     STR_5:
  1150                           
  1151                           ; BSR set to: 57
  1152  00FF87  20                 	db	32
  1153  00FF88  53                 	db	83	;'S'
  1154  00FF89  45                 	db	69	;'E'
  1155  00FF8A  51                 	db	81	;'Q'
  1156  00FF8B  55                 	db	85	;'U'
  1157  00FF8C  45                 	db	69	;'E'
  1158  00FF8D  4E                 	db	78	;'N'
  1159  00FF8E  43                 	db	67	;'C'
  1160  00FF8F  45                 	db	69	;'E'
  1161  00FF90  20                 	db	32
  1162  00FF91  54                 	db	84	;'T'
  1163  00FF92  45                 	db	69	;'E'
  1164  00FF93  53                 	db	83	;'S'
  1165  00FF94  54                 	db	84	;'T'
  1166  00FF95  20                 	db	32
  1167  00FF96  20                 	db	32
  1168  00FF97  00                 	db	0
  1169  00FF98                     STR_20:
  1170                           
  1171                           ; BSR set to: 57
  1172  00FF98  76                 	db	118	;'v'
  1173  00FF99  74                 	db	116	;'t'
  1174  00FF9A  65                 	db	101	;'e'
  1175  00FF9B  72                 	db	114	;'r'
  1176  00FF9C  6D                 	db	109	;'m'
  1177  00FF9D  20                 	db	32
  1178  00FF9E  25                 	db	37
  1179  00FF9F  78                 	db	120	;'x'
  1180  00FFA0  3A                 	db	58	;':'
  1181  00FFA1  25                 	db	37
  1182  00FFA2  78                 	db	120	;'x'
  1183  00FFA3  20                 	db	32
  1184  00FFA4  20                 	db	32
  1185  00FFA5  20                 	db	32
  1186  00FFA6  00                 	db	0
  1187  00FFA7                     STR_2:
  1188                           
  1189                           ; BSR set to: 57
  1190  00FFA7  20                 	db	32
  1191  00FFA8  56                 	db	86	;'V'
  1192  00FFA9  65                 	db	101	;'e'
  1193  00FFAA  72                 	db	114	;'r'
  1194  00FFAB  73                 	db	115	;'s'
  1195  00FFAC  69                 	db	105	;'i'
  1196  00FFAD  6F                 	db	111	;'o'
  1197  00FFAE  6E                 	db	110	;'n'
  1198  00FFAF  20                 	db	32
  1199  00FFB0  25                 	db	37
  1200  00FFB1  73                 	db	115	;'s'
  1201  00FFB2  20                 	db	32
  1202  00FFB3  20                 	db	32
  1203  00FFB4  20                 	db	32
  1204  00FFB5  00                 	db	0
  1205  00FFB6                     STR_9:
  1206                           
  1207                           ; BSR set to: 57
  1208  00FFB6  25                 	db	37
  1209  00FFB7  64                 	db	100	;'d'
  1210  00FFB8  20                 	db	32
  1211  00FFB9  25                 	db	37
  1212  00FFBA  32                 	db	50	;'2'
  1213  00FFBB  2E                 	db	46
  1214  00FFBC  32                 	db	50	;'2'
  1215  00FFBD  66                 	db	102	;'f'
  1216  00FFBE  20                 	db	32
  1217  00FFBF  20                 	db	32
  1218  00FFC0  20                 	db	32
  1219  00FFC1  23                 	db	35
  1220  00FFC2  00                 	db	0
  1221  00FFC3                     STR_14:
  1222                           
  1223                           ; BSR set to: 57
  1224  00FFC3  4E                 	db	78	;'N'
  1225  00FFC4  6F                 	db	111	;'o'
  1226  00FFC5  76                 	db	118	;'v'
  1227  00FFC6  20                 	db	32
  1228  00FFC7  20                 	db	32
  1229  00FFC8  33                 	db	51	;'3'
  1230  00FFC9  20                 	db	32
  1231  00FFCA  32                 	db	50	;'2'
  1232  00FFCB  30                 	db	48	;'0'
  1233  00FFCC  31                 	db	49	;'1'
  1234  00FFCD  39                 	db	57	;'9'
  1235  00FFCE  00                 	db	0
  1236  00FFCF                     STR_18:
  1237                           
  1238                           ; BSR set to: 57
  1239  00FFCF  25                 	db	37
  1240  00FFD0  73                 	db	115	;'s'
  1241  00FFD1  20                 	db	32
  1242  00FFD2  20                 	db	32
  1243  00FFD3  20                 	db	32
  1244  00FFD4  20                 	db	32
  1245  00FFD5  20                 	db	32
  1246  00FFD6  20                 	db	32
  1247  00FFD7  20                 	db	32
  1248  00FFD8  00                 	db	0
  1249  00FFD9                     STR_15:
  1250                           
  1251                           ; BSR set to: 57
  1252  00FFD9  31                 	db	49	;'1'
  1253  00FFDA  35                 	db	53	;'5'
  1254  00FFDB  3A                 	db	58	;':'
  1255  00FFDC  34                 	db	52	;'4'
  1256  00FFDD  33                 	db	51	;'3'
  1257  00FFDE  3A                 	db	58	;':'
  1258  00FFDF  35                 	db	53	;'5'
  1259  00FFE0  38                 	db	56	;'8'
  1260  00FFE1  00                 	db	0
  1261  00FFE2                     STR_32:
  1262                           
  1263                           ; BSR set to: 57
  1264  00FFE2  49                 	db	73	;'I'
  1265  00FFE3  4E                 	db	78	;'N'
  1266  00FFE4  46                 	db	70	;'F'
  1267  00FFE5  00                 	db	0
  1268  00FFE6                     STR_36:
  1269                           
  1270                           ; BSR set to: 57
  1271  00FFE6  4E                 	db	78	;'N'
  1272  00FFE7  41                 	db	65	;'A'
  1273  00FFE8  4E                 	db	78	;'N'
  1274  00FFE9  00                 	db	0
  1275  00FFEA                     STR_33:
  1276                           
  1277                           ; BSR set to: 57
  1278  00FFEA  69                 	db	105	;'i'
  1279  00FFEB  6E                 	db	110	;'n'
  1280  00FFEC  66                 	db	102	;'f'
  1281  00FFED  00                 	db	0
  1282  00FFEE                     STR_37:
  1283                           
  1284                           ; BSR set to: 57
  1285  00FFEE  6E                 	db	110	;'n'
  1286  00FFEF  61                 	db	97	;'a'
  1287  00FFF0  6E                 	db	110	;'n'
  1288  00FFF1  00                 	db	0
  1289  00FFF2                     STR_3:
  1290                           
  1291                           ; BSR set to: 57
  1292  00FFF2  30                 	db	48	;'0'
  1293  00FFF3  2E                 	db	46
  1294  00FFF4  36                 	db	54	;'6'
  1295  00FFF5  00                 	db	0
  1296  00FFF6                     STR_40:
  1297                           
  1298                           ; BSR set to: 57
  1299  00FFF6  6C                 	db	108	;'l'
  1300  00FFF7  66                 	db	102	;'f'
  1301  00FFF8  00                 	db	0
  1302  00FFF9                     STR_12:
  1303                           
  1304                           ; BSR set to: 57
  1305  00FFF9  25                 	db	37
  1306  00FFFA  63                 	db	99	;'c'
  1307  00FFFB  00                 	db	0
  1308  00FFFC                     STR_11:
  1309                           
  1310                           ; BSR set to: 57
  1311  00FFFC  25                 	db	37
  1312  00FFFD  73                 	db	115	;'s'
  1313  00FFFE  00                 	db	0
  1314  0000                     
  1315                           ; #config settings
  1316  00FFFF  00                 	db	0	; dummy byte at the end
  1317  0000                     
  1318                           	psect	cinit
  1319  016456                     __pcinit:
  1320                           	opt callstack 0
  1321  016456                     start_initialization:
  1322                           	opt callstack 0
  1323  016456                     __initialization:
  1324                           	opt callstack 0
  1325                           
  1326                           ; Initialize objects allocated to BANK2 (189 bytes)
  1327                           ; load TBLPTR registers with __pidataBANK2
  1328  016456  0EE0               	movlw	low __pidataBANK2
  1329  016458  6EF6               	movwf	tblptrl,c
  1330  01645A  0E65               	movlw	high __pidataBANK2
  1331  01645C  6EF7               	movwf	tblptrh,c
  1332  01645E  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1333  016460  6EF8               	movwf	tblptru,c
  1334  016462  EE00  F200         	lfsr	0,__pdataBANK2
  1335  016466  EE20 F0BD          	lfsr	2,189
  1336  01646A                     copy_data0:
  1337  01646A  0009               	tblrd		*+
  1338  01646C  006F FFD7 FFEE     	movff	tablat,postinc0
  1339  016472  50DD               	movf	postdec2,w,c
  1340  016474  50D9               	movf	fsr2l,w,c
  1341  016476  E1F9               	bnz	copy_data0
  1342                           
  1343                           ; Initialize objects allocated to BANK0 (23 bytes)
  1344                           ; load TBLPTR registers with __pidataBANK0
  1345  016478  0EE2               	movlw	low __pidataBANK0
  1346  01647A  6EF6               	movwf	tblptrl,c
  1347  01647C  0E7B               	movlw	high __pidataBANK0
  1348  01647E  6EF7               	movwf	tblptrh,c
  1349  016480  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1350  016482  6EF8               	movwf	tblptru,c
  1351  016484  EE00  F0BD         	lfsr	0,__pdataBANK0
  1352  016488  EE20 F017          	lfsr	2,23
  1353  01648C                     copy_data1:
  1354  01648C  0009               	tblrd		*+
  1355  01648E  006F FFD7 FFEE     	movff	tablat,postinc0
  1356  016494  50DD               	movf	postdec2,w,c
  1357  016496  50D9               	movf	fsr2l,w,c
  1358  016498  E1F9               	bnz	copy_data1
  1359                           
  1360                           ; Clear objects allocated to BANK6 (255 bytes)
  1361  01649A  EE01  F200         	lfsr	0,__pbssBANK6
  1362  01649E  EE20 F0FF          	lfsr	2,255
  1363  0164A2                     clear_0:
  1364  0164A2  6AEE               	clrf	postinc0,c
  1365  0164A4  50DD               	movf	postdec2,w,c
  1366  0164A6  50D9               	movf	fsr2l,w,c
  1367  0164A8  E1FC               	bnz	clear_0
  1368  0164AA  50DA               	movf	fsr2h,w,c
  1369  0164AC  E1FA               	bnz	clear_0
  1370                           
  1371                           ; Clear objects allocated to BANK5 (255 bytes)
  1372  0164AE  EE01  F100         	lfsr	0,__pbssBANK5
  1373  0164B2  EE20 F0FF          	lfsr	2,255
  1374  0164B6                     clear_1:
  1375  0164B6  6AEE               	clrf	postinc0,c
  1376  0164B8  50DD               	movf	postdec2,w,c
  1377  0164BA  50D9               	movf	fsr2l,w,c
  1378  0164BC  E1FC               	bnz	clear_1
  1379  0164BE  50DA               	movf	fsr2h,w,c
  1380  0164C0  E1FA               	bnz	clear_1
  1381                           
  1382                           ; Clear objects allocated to BANK4 (218 bytes)
  1383  0164C2  EE01  F000         	lfsr	0,__pbssBANK4
  1384  0164C6  0EDA               	movlw	218
  1385  0164C8                     clear_2:
  1386  0164C8  6AEE               	clrf	postinc0,c
  1387  0164CA  06E8               	decf	wreg,f,c
  1388  0164CC  E1FD               	bnz	clear_2
  1389                           
  1390                           ; Clear objects allocated to BANK3 (134 bytes)
  1391  0164CE  EE00  F300         	lfsr	0,__pbssBANK3
  1392  0164D2  0E86               	movlw	134
  1393  0164D4                     clear_3:
  1394  0164D4  6AEE               	clrf	postinc0,c
  1395  0164D6  06E8               	decf	wreg,f,c
  1396  0164D8  E1FD               	bnz	clear_3
  1397                           
  1398                           ; Clear objects allocated to BANK2 (64 bytes)
  1399  0164DA  EE00  F2BD         	lfsr	0,__pbssBANK2
  1400  0164DE  0E40               	movlw	64
  1401  0164E0                     clear_4:
  1402  0164E0  6AEE               	clrf	postinc0,c
  1403  0164E2  06E8               	decf	wreg,f,c
  1404  0164E4  E1FD               	bnz	clear_4
  1405                           
  1406                           ; Clear objects allocated to BANK1 (248 bytes)
  1407  0164E6  EE00  F100         	lfsr	0,__pbssBANK1
  1408  0164EA  0EF8               	movlw	248
  1409  0164EC                     clear_5:
  1410  0164EC  6AEE               	clrf	postinc0,c
  1411  0164EE  06E8               	decf	wreg,f,c
  1412  0164F0  E1FD               	bnz	clear_5
  1413                           
  1414                           ; Clear objects allocated to BANK0 (93 bytes)
  1415  0164F2  EE00  F060         	lfsr	0,__pbssBANK0
  1416  0164F6  0E5D               	movlw	93
  1417  0164F8                     clear_6:
  1418  0164F8  6AEE               	clrf	postinc0,c
  1419  0164FA  06E8               	decf	wreg,f,c
  1420  0164FC  E1FD               	bnz	clear_6
  1421                           
  1422                           ; Clear objects allocated to COMRAM (52 bytes)
  1423  0164FE  EE00  F001         	lfsr	0,__pbssCOMRAM
  1424  016502  0E34               	movlw	52
  1425  016504                     clear_7:
  1426  016504  6AEE               	clrf	postinc0,c
  1427  016506  06E8               	decf	wreg,f,c
  1428  016508  E1FD               	bnz	clear_7
  1429                           
  1430                           ;
  1431                           ; Setup IVTBASE
  1432                           ;
  1433  01650A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1434  01650C  6ED5               	movwf	213,c
  1435  01650E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1436  016510  6ED6               	movwf	214,c
  1437  016512  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1438  016514  6ED7               	movwf	215,c
  1439  016516                     end_of_initialization:
  1440                           	opt callstack 0
  1441  016516                     __end_of__initialization:
  1442                           	opt callstack 0
  1443  016516  0100               	movlb	0
  1444  016518  EF71  F099         	goto	_main	;jump to C main() function
  1445                           
  1446                           	psect	bssCOMRAM
  1447  000001                     __pbssCOMRAM:
  1448                           	opt callstack 0
  1449  000001                     _TMR6_InterruptHandler:
  1450                           	opt callstack 0
  1451  000001                     	ds	3
  1452  000004                     _ADCC_ADTI_InterruptHandler:
  1453                           	opt callstack 0
  1454  000004                     	ds	3
  1455  000007                     _ADCC_ADI_InterruptHandler:
  1456                           	opt callstack 0
  1457  000007                     	ds	3
  1458  00000A                     _UART1_TxInterruptHandler:
  1459                           	opt callstack 0
  1460  00000A                     	ds	3
  1461  00000D                     _UART1_RxInterruptHandler:
  1462                           	opt callstack 0
  1463  00000D                     	ds	3
  1464  000010                     _UART2_TxInterruptHandler:
  1465                           	opt callstack 0
  1466  000010                     	ds	3
  1467  000013                     _UART2_RxInterruptHandler:
  1468                           	opt callstack 0
  1469  000013                     	ds	3
  1470  000016                     _INT1_InterruptHandler:
  1471                           	opt callstack 0
  1472  000016                     	ds	3
  1473  000019                     _INT0_InterruptHandler:
  1474                           	opt callstack 0
  1475  000019                     	ds	3
  1476  00001C                     _nout:
  1477                           	opt callstack 0
  1478  00001C                     	ds	2
  1479  00001E                     _width:
  1480                           	opt callstack 0
  1481  00001E                     	ds	2
  1482  000020                     _prec:
  1483                           	opt callstack 0
  1484  000020                     	ds	2
  1485  000022                     _flags:
  1486                           	opt callstack 0
  1487  000022                     	ds	2
  1488  000024                     TMR5_ISR@CountCallBack:
  1489                           	opt callstack 0
  1490  000024                     	ds	2
  1491  000026                     _timer5ReloadVal:
  1492                           	opt callstack 0
  1493  000026                     	ds	2
  1494  000028                     _mode_sw:
  1495                           	opt callstack 0
  1496  000028                     	ds	1
  1497  000029                     _uart2RxCount:
  1498                           	opt callstack 0
  1499  000029                     	ds	1
  1500  00002A                     _uart2RxTail:
  1501                           	opt callstack 0
  1502  00002A                     	ds	1
  1503  00002B                     _uart2RxHead:
  1504                           	opt callstack 0
  1505  00002B                     	ds	1
  1506  00002C                     _uart2TxBufferRemaining:
  1507                           	opt callstack 0
  1508  00002C                     	ds	1
  1509  00002D                     _uart2TxTail:
  1510                           	opt callstack 0
  1511  00002D                     	ds	1
  1512  00002E                     _uart2TxHead:
  1513                           	opt callstack 0
  1514  00002E                     	ds	1
  1515  00002F                     _uart1RxCount:
  1516                           	opt callstack 0
  1517  00002F                     	ds	1
  1518  000030                     _uart1RxTail:
  1519                           	opt callstack 0
  1520  000030                     	ds	1
  1521  000031                     _uart1RxHead:
  1522                           	opt callstack 0
  1523  000031                     	ds	1
  1524  000032                     _uart1TxBufferRemaining:
  1525                           	opt callstack 0
  1526  000032                     	ds	1
  1527  000033                     _uart1TxTail:
  1528                           	opt callstack 0
  1529  000033                     	ds	1
  1530  000034                     _uart1TxHead:
  1531                           	opt callstack 0
  1532  000034                     	ds	1
  1533                           
  1534                           	psect	bssBANK0
  1535  000060                     __pbssBANK0:
  1536                           	opt callstack 0
  1537  000060                     _R:
  1538                           	opt callstack 0
  1539  000060                     	ds	34
  1540  000082                     _tickCount:
  1541                           	opt callstack 0
  1542  000082                     	ds	24
  1543  00009A                     _spi_link:
  1544                           	opt callstack 0
  1545  00009A                     	ds	12
  1546  0000A6                     floorf@F524:
  1547                           	opt callstack 0
  1548  0000A6                     	ds	4
  1549  0000AA                     ___fpclassifyf@F463:
  1550                           	opt callstack 0
  1551  0000AA                     	ds	4
  1552  0000AE                     wdtdelay@dcount:
  1553                           	opt callstack 0
  1554  0000AE                     	ds	4
  1555  0000B2                     _TMR5_InterruptHandler:
  1556                           	opt callstack 0
  1557  0000B2                     	ds	3
  1558  0000B5                     _seed:
  1559                           	opt callstack 0
  1560  0000B5                     	ds	8
  1561                           
  1562                           	psect	dataBANK0
  1563  0000BD                     __pdataBANK0:
  1564                           	opt callstack 0
  1565  0000BD                     stoa@F1166:
  1566                           	opt callstack 0
  1567  0000BD                     	ds	7
  1568  0000C4                     _port_data:
  1569                           	opt callstack 0
  1570  0000C4                     	ds	16
  1571                           
  1572                           	psect	bssBANK1
  1573  000100                     __pbssBANK1:
  1574                           	opt callstack 0
  1575  000100                     _C:
  1576                           	opt callstack 0
  1577  000100                     	ds	104
  1578  000168                     _uart1TxBuffer:
  1579                           	opt callstack 0
  1580  000168                     	ds	64
  1581  0001A8                     _dbuf:
  1582                           	opt callstack 0
  1583  0001A8                     	ds	80
  1584                           
  1585                           	psect	bssBANK2
  1586  0002BD                     __pbssBANK2:
  1587                           	opt callstack 0
  1588  0002BD                     _uart2TxBuffer:
  1589                           	opt callstack 0
  1590  0002BD                     	ds	64
  1591                           
  1592                           	psect	dataBANK2
  1593  000200                     __pdataBANK2:
  1594                           	opt callstack 0
  1595  000200                     _V:
  1596                           	opt callstack 0
  1597  000200                     	ds	189
  1598                           
  1599                           	psect	bssBANK3
  1600  000300                     __pbssBANK3:
  1601                           	opt callstack 0
  1602  000300                     _ring_buf2:
  1603                           	opt callstack 0
  1604  000300                     	ds	67
  1605  000343                     _ring_buf1:
  1606                           	opt callstack 0
  1607  000343                     	ds	67
  1608                           
  1609                           	psect	bssBANK4
  1610  000400                     __pbssBANK4:
  1611                           	opt callstack 0
  1612  000400                     _D:
  1613                           	opt callstack 0
  1614  000400                     	ds	218
  1615                           
  1616                           	psect	bssBANK5
  1617  000500                     __pbssBANK5:
  1618                           	opt callstack 0
  1619  000500                     _uart1RxBuffer:
  1620                           	opt callstack 0
  1621  000500                     	ds	255
  1622                           
  1623                           	psect	bssBANK6
  1624  000600                     __pbssBANK6:
  1625                           	opt callstack 0
  1626  000600                     _uart2RxBuffer:
  1627                           	opt callstack 0
  1628  000600                     	ds	255
  1629                           
  1630                           	psect	cstackBANK0
  1631  0000D4                     __pcstackBANK0:
  1632                           	opt callstack 0
  1633  0000D4                     ??_TMR6_ISR:
  1634                           
  1635                           ; 1 bytes @ 0x0
  1636  0000D4                     	ds	1
  1637  0000D5                     ??_TMR5_ISR:
  1638                           
  1639                           ; 1 bytes @ 0x1
  1640  0000D5                     	ds	4
  1641                           
  1642                           	psect	cstackCOMRAM
  1643  000055                     __pcstackCOMRAM:
  1644                           	opt callstack 0
  1645  000055                     ??_ADCC_ISR:
  1646  000055                     
  1647                           ; 1 bytes @ 0x0
  1648  000055                     	ds	1
  1649  000056                     ??_ADCC_ThresholdISR:
  1650                           
  1651                           ; 1 bytes @ 0x1
  1652  000056                     	ds	5
  1653                           
  1654 ;;
  1655 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1656 ;;
  1657 ;; *************** function _main *****************
  1658 ;; Defined at:
  1659 ;;		line 149 in file "main.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  mode            1  [STACK] enum E17005
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1  [STACK] void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels required when called:   19
  1679 ;; This function calls:
  1680 ;;		_SYSTEM_Initialize
  1681 ;;		_StartTimer
  1682 ;;		_TimerDone
  1683 ;;		_WaitMs
  1684 ;;		___fldiv
  1685 ;;		___flmul
  1686 ;;		___xxtofl
  1687 ;;		_check_adc_scan
  1688 ;;		_check_help
  1689 ;;		_clear_adc_scan
  1690 ;;		_eaDogM_WriteCommand
  1691 ;;		_get_raw_result
  1692 ;;		_get_vterm_ptr
  1693 ;;		_init_display
  1694 ;;		_mode_lamp_dim
  1695 ;;		_set_display_info
  1696 ;;		_set_vterm
  1697 ;;		_sprintf
  1698 ;;		_srand
  1699 ;;		_start_adc_scan
  1700 ;;		_update_lcd
  1701 ;; This function is called by:
  1702 ;;		Startup code after reset
  1703 ;; This function uses a reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text0
  1707  0132E2                     __ptext0:
  1708                           	opt callstack 0
  1709  0132E2                     _main:
  1710                           	opt callstack 0
  1711                           
  1712                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1713  0132E2  52E6               	movf	postinc1,f,c
  1714                           
  1715                           ;main.c: 151:  UI_STATES mode;;main.c: 154:  SYSTEM_Initialize();
  1716                           
  1717                           ;incstack = 0
  1718  0132E4  EC66  F0B9         	call	_SYSTEM_Initialize	;wreg free
  1719                           
  1720                           ; BSR set to: 60
  1721                           ;main.c: 157:  (INTCON0bits.GIEH = 1);
  1722  0132E8  8ED2               	bsf	210,7,c	;volatile
  1723                           
  1724                           ; BSR set to: 60
  1725                           ;main.c: 160:  (INTCON0bits.GIEL = 1);
  1726  0132EA  8CD2               	bsf	210,6,c	;volatile
  1727                           
  1728                           ; BSR set to: 60
  1729                           ;main.c: 162:  V.ui_state = UI_STATE_INIT;
  1730  0132EC  0102               	movlb	2	; () banked
  1731  0132EE  6B00               	clrf	_V& (0+255),b	;volatile
  1732                           
  1733                           ; BSR set to: 2
  1734                           ;main.c: 167:  WaitMs(300);
  1735  0132F0  0E2C               	movlw	44
  1736  0132F2  6EE6               	movwf	postinc1,c
  1737  0132F4  0E01               	movlw	1
  1738  0132F6  6EE6               	movwf	postinc1,c
  1739  0132F8  EC88  F0BA         	call	_WaitMs	;wreg free
  1740                           
  1741                           ;main.c: 168:  if (PORTBbits.RB0) {
  1742  0132FC  A0CB               	btfss	203,0,c	;volatile
  1743  0132FE  D004               	goto	l9713
  1744                           
  1745                           ;main.c: 169:   mode = UI_STATE_HOST;
  1746                           ;stkvar	_mode @ sp[(-1)+0]
  1747  013300  0EFF               	movlw	-1
  1748  013302  6AE3               	clrf	plusw1,c
  1749  013304  2AE3               	incf	plusw1,f,c
  1750                           
  1751                           ;main.c: 170:  } else {
  1752  013306  D004               	goto	l9715
  1753  013308                     l9713:
  1754                           
  1755                           ;main.c: 171:   mode = UI_STATE_LOG;
  1756                           ;stkvar	_mode @ sp[(-1)+0]
  1757  013308  0EFF               	movlw	-1
  1758  01330A  6AE3               	clrf	plusw1,c
  1759  01330C  80E3               	bsf	plusw1,0,c
  1760  01330E  82E3               	bsf	plusw1,1,c	;indir
  1761  013310                     l9715:
  1762                           
  1763                           ;main.c: 174:  if (mode == UI_STATE_HOST) {
  1764                           ;stkvar	_mode @ sp[(-1)+0]
  1765  013310  0EFF               	movlw	-1
  1766  013312  04E3               	decf	plusw1,w,c
  1767  013314  A4D8               	btfss	status,2,c
  1768  013316  D007               	goto	l1238
  1769                           
  1770                           ;main.c: 175:   do { LATDbits.LATD0 = 1; } while(0);
  1771  013318  80BD               	bsf	189,0,c	;volatile
  1772                           
  1773                           ;main.c: 176:   V.mode_pwm = 70;
  1774  01331A  0E00               	movlw	0
  1775  01331C  0102               	movlb	2	; () banked
  1776  01331E  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1777  013320  0E46               	movlw	70
  1778  013322  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1779                           
  1780                           ;main.c: 177:  } else {
  1781  013324  D004               	goto	l9719
  1782  013326                     l1238:
  1783  013326  90BD               	bcf	189,0,c	;volatile
  1784                           
  1785                           ;main.c: 179:   V.mode_pwm = 0;
  1786  013328  0102               	movlb	2	; () banked
  1787  01332A  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1788  01332C  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1789  01332E                     l9719:
  1790                           
  1791                           ; BSR set to: 2
  1792                           ;main.c: 181:  mode_lamp_dim(V.mode_pwm);
  1793  01332E  0060  FA7F  FFE6   	movff	_V+159,postinc1
  1794  013334  0060  FA83  FFE6   	movff	_V+160,postinc1
  1795  01333A  ECD9  F0BD         	call	_mode_lamp_dim	;wreg free
  1796  01333E  D0CB               	goto	l9761
  1797  013340                     l9721:
  1798                           
  1799                           ; BSR set to: 2
  1800                           ;main.c: 192:    init_display();
  1801  013340  EC4C  F0B1         	call	_init_display	;wreg free
  1802                           
  1803                           ; BSR set to: 61
  1804                           ;main.c: 193:    eaDogM_WriteCommand(0b00001100);
  1805  013344  0E0C               	movlw	12
  1806  013346  6EE6               	movwf	postinc1,c
  1807  013348  EC39  F0BE         	call	_eaDogM_WriteCommand	;wreg free
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;main.c: 195:    V.ui_state = mode;
  1811                           ;stkvar	_mode @ sp[(-1)+0]
  1812  01334C  0EFF               	movlw	-1
  1813  01334E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 196:    srand(1957);
  1817  013354  0EA5               	movlw	165
  1818  013356  6EE6               	movwf	postinc1,c
  1819  013358  0E07               	movlw	7
  1820  01335A  6EE6               	movwf	postinc1,c
  1821  01335C  ECBE  F0BA         	call	_srand	;wreg free
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;main.c: 197:    set_vterm(0);
  1825  013360  0E00               	movlw	0
  1826  013362  6EE6               	movwf	postinc1,c
  1827  013364  ECA4  F0BD         	call	_set_vterm	;wreg free
  1828                           
  1829                           ; BSR set to: 4
  1830                           ;main.c: 198:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1831  013368  0E76               	movlw	low STR_1
  1832  01336A  6EE6               	movwf	postinc1,c
  1833  01336C  0EFF               	movlw	high STR_1
  1834  01336E  6EE6               	movwf	postinc1,c
  1835  013370  0E00               	movlw	0
  1836  013372  6EE6               	movwf	postinc1,c
  1837  013374  0E00               	movlw	0
  1838  013376  6EE6               	movwf	postinc1,c
  1839  013378  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  1840  01337C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1841  013382  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1842  013388  0E04               	movlw	4
  1843  01338A  6EE6               	movwf	postinc1,c
  1844  01338C  ECC7  F0B0         	call	_sprintf	;wreg free
  1845                           
  1846                           ;main.c: 199:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.6");
  1847  013390  0EF2               	movlw	low STR_3
  1848  013392  6EE6               	movwf	postinc1,c
  1849  013394  0EFF               	movlw	high STR_3
  1850  013396  6EE6               	movwf	postinc1,c
  1851  013398  0EA7               	movlw	low STR_2
  1852  01339A  6EE6               	movwf	postinc1,c
  1853  01339C  0EFF               	movlw	high STR_2
  1854  01339E  6EE6               	movwf	postinc1,c
  1855  0133A0  0E00               	movlw	0
  1856  0133A2  6EE6               	movwf	postinc1,c
  1857  0133A4  0E01               	movlw	1
  1858  0133A6  6EE6               	movwf	postinc1,c
  1859  0133A8  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  1860  0133AC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1861  0133B2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1862  0133B8  0E06               	movlw	6
  1863  0133BA  6EE6               	movwf	postinc1,c
  1864  0133BC  ECC7  F0B0         	call	_sprintf	;wreg free
  1865                           
  1866                           ;main.c: 200:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1867  0133C0  0E65               	movlw	low STR_4
  1868  0133C2  6EE6               	movwf	postinc1,c
  1869  0133C4  0EFF               	movlw	high STR_4
  1870  0133C6  6EE6               	movwf	postinc1,c
  1871  0133C8  0E00               	movlw	0
  1872  0133CA  6EE6               	movwf	postinc1,c
  1873  0133CC  0E02               	movlw	2
  1874  0133CE  6EE6               	movwf	postinc1,c
  1875  0133D0  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  1876  0133D4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1877  0133DA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1878  0133E0  0E04               	movlw	4
  1879  0133E2  6EE6               	movwf	postinc1,c
  1880  0133E4  ECC7  F0B0         	call	_sprintf	;wreg free
  1881                           
  1882                           ;main.c: 201:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1883  0133E8  0E87               	movlw	low STR_5
  1884  0133EA  6EE6               	movwf	postinc1,c
  1885  0133EC  0EFF               	movlw	high STR_5
  1886  0133EE  6EE6               	movwf	postinc1,c
  1887  0133F0  0E02               	movlw	2
  1888  0133F2  6EE6               	movwf	postinc1,c
  1889  0133F4  0E00               	movlw	0
  1890  0133F6  6EE6               	movwf	postinc1,c
  1891  0133F8  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  1892  0133FC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1893  013402  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1894  013408  0E04               	movlw	4
  1895  01340A  6EE6               	movwf	postinc1,c
  1896  01340C  ECC7  F0B0         	call	_sprintf	;wreg free
  1897                           
  1898                           ;main.c: 202:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.6");
  1899  013410  0EF2               	movlw	low STR_3
  1900  013412  6EE6               	movwf	postinc1,c
  1901  013414  0EFF               	movlw	high STR_3
  1902  013416  6EE6               	movwf	postinc1,c
  1903  013418  0EA7               	movlw	low STR_2
  1904  01341A  6EE6               	movwf	postinc1,c
  1905  01341C  0EFF               	movlw	high STR_2
  1906  01341E  6EE6               	movwf	postinc1,c
  1907  013420  0E02               	movlw	2
  1908  013422  6EE6               	movwf	postinc1,c
  1909  013424  0E01               	movlw	1
  1910  013426  6EE6               	movwf	postinc1,c
  1911  013428  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  1912  01342C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1913  013432  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1914  013438  0E06               	movlw	6
  1915  01343A  6EE6               	movwf	postinc1,c
  1916  01343C  ECC7  F0B0         	call	_sprintf	;wreg free
  1917                           
  1918                           ;main.c: 203:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1919  013440  0E54               	movlw	low STR_8
  1920  013442  6EE6               	movwf	postinc1,c
  1921  013444  0EFF               	movlw	high STR_8
  1922  013446  6EE6               	movwf	postinc1,c
  1923  013448  0E02               	movlw	2
  1924  01344A  6EE6               	movwf	postinc1,c
  1925  01344C  0E02               	movlw	2
  1926  01344E  6EE6               	movwf	postinc1,c
  1927  013450  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  1928  013454  0060  F0D7  FFE6   	movff	btemp,postinc1
  1929  01345A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1930  013460  0E04               	movlw	4
  1931  013462  6EE6               	movwf	postinc1,c
  1932  013464  ECC7  F0B0         	call	_sprintf	;wreg free
  1933                           
  1934                           ;main.c: 204:    update_lcd(0);
  1935  013468  0E00               	movlw	0
  1936  01346A  6EE6               	movwf	postinc1,c
  1937  01346C  EC40  F0B0         	call	_update_lcd	;wreg free
  1938                           
  1939                           ;main.c: 205:    WaitMs(3000);
  1940  013470  0EB8               	movlw	184
  1941  013472  6EE6               	movwf	postinc1,c
  1942  013474  0E0B               	movlw	11
  1943  013476  6EE6               	movwf	postinc1,c
  1944  013478  EC88  F0BA         	call	_WaitMs	;wreg free
  1945                           
  1946                           ;main.c: 206:    StartTimer(TMR_DISPLAY, 100);
  1947  01347C  0E64               	movlw	100
  1948  01347E  6EE6               	movwf	postinc1,c
  1949  013480  0E00               	movlw	0
  1950  013482  6EE6               	movwf	postinc1,c
  1951  013484  0E0A               	movlw	10
  1952  013486  6EE6               	movwf	postinc1,c
  1953  013488  EC32  F0BA         	call	_StartTimer	;wreg free
  1954                           
  1955                           ;main.c: 207:    StartTimer(TMR_ADC, 200);
  1956  01348C  0EC8               	movlw	200
  1957  01348E  6EE6               	movwf	postinc1,c
  1958  013490  0E00               	movlw	0
  1959  013492  6EE6               	movwf	postinc1,c
  1960  013494  0E01               	movlw	1
  1961  013496  6EE6               	movwf	postinc1,c
  1962  013498  EC32  F0BA         	call	_StartTimer	;wreg free
  1963                           
  1964                           ;main.c: 208:    StartTimer(TMR_INFO, 3000);
  1965  01349C  0EB8               	movlw	184
  1966  01349E  6EE6               	movwf	postinc1,c
  1967  0134A0  0E0B               	movlw	11
  1968  0134A2  6EE6               	movwf	postinc1,c
  1969  0134A4  0E07               	movlw	7
  1970  0134A6  6EE6               	movwf	postinc1,c
  1971  0134A8  EC32  F0BA         	call	_StartTimer	;wreg free
  1972                           
  1973                           ;main.c: 209:    StartTimer(TMR_FLIPPER, 1500);
  1974  0134AC  0EDC               	movlw	220
  1975  0134AE  6EE6               	movwf	postinc1,c
  1976  0134B0  0E05               	movlw	5
  1977  0134B2  6EE6               	movwf	postinc1,c
  1978  0134B4  0E0B               	movlw	11
  1979  0134B6  6EE6               	movwf	postinc1,c
  1980  0134B8  EC32  F0BA         	call	_StartTimer	;wreg free
  1981                           
  1982                           ;main.c: 210:    StartTimer(TMR_HELPDIS, 3000);
  1983  0134BC  0EB8               	movlw	184
  1984  0134BE  6EE6               	movwf	postinc1,c
  1985  0134C0  0E0B               	movlw	11
  1986  0134C2  6EE6               	movwf	postinc1,c
  1987  0134C4  0E09               	movlw	9
  1988  0134C6  6EE6               	movwf	postinc1,c
  1989  0134C8  EC32  F0BA         	call	_StartTimer	;wreg free
  1990                           
  1991                           ;main.c: 212:    start_adc_scan();
  1992  0134CC  EC5D  F0B7         	call	_start_adc_scan	;wreg free
  1993                           
  1994                           ;main.c: 214:    break;
  1995  0134D0  D016               	goto	l9763
  1996  0134D2                     l1247:
  1997                           
  1998                           ; BSR set to: 2
  1999                           ;main.c: 221:    V.ui_state = UI_STATE_INIT;
  2000  0134D2  6B00               	clrf	_V& (0+255),b	;volatile
  2001                           
  2002                           ;main.c: 222:    break;
  2003  0134D4  D014               	goto	l9763
  2004  0134D6                     l9761:
  2005  0134D6  0102               	movlb	2	; () banked
  2006  0134D8  5100               	movf	_V& (0+255),w,b	;volatile
  2007  0134DA  6E3F               	movwf	(btemp+10)^0,c
  2008  0134DC  6A40               	clrf	(btemp+11)^0,c
  2009                           
  2010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2011                           ; Switch size 1, requested type "simple"
  2012                           ; Number of cases is 1, Range of values is 0 to 0
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte            4     3 (average)
  2016                           ;	Chosen strategy is simple_byte
  2017  0134DE  5040               	movf	(btemp+11)^0,w,c
  2018  0134E0  0A00               	xorlw	0	; case 0
  2019  0134E2  A4D8               	btfss	status,2,c
  2020  0134E4  D7F6               	goto	l1247
  2021                           
  2022                           ; BSR set to: 2
  2023                           ; Switch size 1, requested type "simple"
  2024                           ; Number of cases is 4, Range of values is 0 to 4
  2025                           ; switch strategies available:
  2026                           ; Name         Instructions Cycles
  2027                           ; simple_byte           13     7 (average)
  2028                           ;	Chosen strategy is simple_byte
  2029  0134E6  503F               	movf	(btemp+10)^0,w,c
  2030  0134E8  0A00               	xorlw	0	; case 0
  2031  0134EA  B4D8               	btfsc	status,2,c
  2032  0134EC  D729               	goto	l9721
  2033  0134EE  0A01               	xorlw	1	; case 1
  2034  0134F0  B4D8               	btfsc	status,2,c
  2035  0134F2  D005               	goto	l9763
  2036  0134F4  0A02               	xorlw	2	; case 3
  2037  0134F6  B4D8               	btfsc	status,2,c
  2038  0134F8  D002               	goto	l9763
  2039  0134FA  0A07               	xorlw	7	; case 4
  2040  0134FC  D7EA               	goto	l1247
  2041  0134FE                     l9763:
  2042                           
  2043                           ;main.c: 225:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2044  0134FE  0E01               	movlw	1
  2045  013500  6EE6               	movwf	postinc1,c
  2046  013502  ECE5  F0BC         	call	_TimerDone	;wreg free
  2047  013506  5035               	movf	btemp^0,w,c
  2048  013508  B4D8               	btfsc	status,2,c
  2049  01350A  D011               	goto	l9773
  2050  01350C  EC7D  F0BE         	call	_check_adc_scan	;wreg free
  2051  013510  5035               	movf	btemp^0,w,c
  2052  013512  B4D8               	btfsc	status,2,c
  2053  013514  D00C               	goto	l9773
  2054                           
  2055                           ;main.c: 226:    clear_adc_scan();
  2056  013516  EC85  F0BE         	call	_clear_adc_scan	;wreg free
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 227:    start_adc_scan();
  2060  01351A  EC5D  F0B7         	call	_start_adc_scan	;wreg free
  2061                           
  2062                           ;main.c: 228:    StartTimer(TMR_ADC, 200);
  2063  01351E  0EC8               	movlw	200
  2064  013520  6EE6               	movwf	postinc1,c
  2065  013522  0E00               	movlw	0
  2066  013524  6EE6               	movwf	postinc1,c
  2067  013526  0E01               	movlw	1
  2068  013528  6EE6               	movwf	postinc1,c
  2069  01352A  EC32  F0BA         	call	_StartTimer	;wreg free
  2070  01352E                     l9773:
  2071                           
  2072                           ;main.c: 235:   if (TimerDone(TMR_DISPLAY)) {
  2073                           
  2074                           ;main.c: 231:   if (V.ticks) {
  2075  01352E  0E0A               	movlw	10
  2076  013530  6EE6               	movwf	postinc1,c
  2077  013532  ECE5  F0BC         	call	_TimerDone	;wreg free
  2078  013536  5035               	movf	btemp^0,w,c
  2079  013538  B4D8               	btfsc	status,2,c
  2080  01353A  D133               	goto	l9797
  2081                           
  2082                           ;main.c: 236:    if (TimerDone(TMR_HELPDIS)) {
  2083  01353C  0E09               	movlw	9
  2084  01353E  6EE6               	movwf	postinc1,c
  2085  013540  ECE5  F0BC         	call	_TimerDone	;wreg free
  2086  013544  5035               	movf	btemp^0,w,c
  2087  013546  B4D8               	btfsc	status,2,c
  2088  013548  D004               	goto	l9781
  2089                           
  2090                           ;main.c: 237:     set_display_info(DIS_STR);
  2091  01354A  0E00               	movlw	0
  2092  01354C  6EE6               	movwf	postinc1,c
  2093  01354E  EC5A  F0BD         	call	_set_display_info	;wreg free
  2094  013552                     l9781:
  2095                           
  2096                           ;main.c: 239:    C.calc[C_BATT] = get_raw_result(C_BATT);
  2097  013552  0E00               	movlw	0
  2098  013554  6EE6               	movwf	postinc1,c
  2099  013556  EC4B  F0BD         	call	_get_raw_result	;wreg free
  2100  01355A  0060  F0D4  F03F   	movff	btemp,btemp+10
  2101  013560  0060  F0D8  F040   	movff	btemp+1,btemp+11
  2102  013566  503F               	movf	(btemp+10)^0,w,c
  2103  013568  6E39               	movwf	(btemp+4)^0,c
  2104  01356A  5040               	movf	(btemp+11)^0,w,c
  2105  01356C  6E3A               	movwf	(btemp+5)^0,c
  2106  01356E  6A3B               	clrf	(btemp+6)^0,c
  2107  013570  6A3C               	clrf	(btemp+7)^0,c
  2108  013572  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  2109  013578  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  2110  01357E  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  2111  013584  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  2112  01358A  0E00               	movlw	0
  2113  01358C  6EE6               	movwf	postinc1,c
  2114  01358E  EC3F  F0A9         	call	___xxtofl	;wreg free
  2115  013592  0060  F0D4  F100   	movff	btemp,_C
  2116  013598  0060  F0D8  F101   	movff	btemp+1,_C+1
  2117  01359E  0060  F0DC  F102   	movff	btemp+2,_C+2
  2118  0135A4  0060  F0E0  F103   	movff	btemp+3,_C+3
  2119                           
  2120                           ;main.c: 240:    C.calc[V_CC] = get_raw_result(V_CC);
  2121  0135AA  0E02               	movlw	2
  2122  0135AC  6EE6               	movwf	postinc1,c
  2123  0135AE  EC4B  F0BD         	call	_get_raw_result	;wreg free
  2124  0135B2  0060  F0D4  F03F   	movff	btemp,btemp+10
  2125  0135B8  0060  F0D8  F040   	movff	btemp+1,btemp+11
  2126  0135BE  503F               	movf	(btemp+10)^0,w,c
  2127  0135C0  6E39               	movwf	(btemp+4)^0,c
  2128  0135C2  5040               	movf	(btemp+11)^0,w,c
  2129  0135C4  6E3A               	movwf	(btemp+5)^0,c
  2130  0135C6  6A3B               	clrf	(btemp+6)^0,c
  2131  0135C8  6A3C               	clrf	(btemp+7)^0,c
  2132  0135CA  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  2133  0135D0  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  2134  0135D6  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  2135  0135DC  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  2136  0135E2  0E00               	movlw	0
  2137  0135E4  6EE6               	movwf	postinc1,c
  2138  0135E6  EC3F  F0A9         	call	___xxtofl	;wreg free
  2139  0135EA  0060  F0D4  F108   	movff	btemp,_C+8
  2140  0135F0  0060  F0D8  F109   	movff	btemp+1,_C+9
  2141  0135F6  0060  F0DC  F10A   	movff	btemp+2,_C+10
  2142  0135FC  0060  F0E0  F10B   	movff	btemp+3,_C+11
  2143                           
  2144                           ;main.c: 241:    C.calc[C_BATT] = (C.calc[C_BATT]*1.25)/1000.0;
  2145  013602  0E00               	movlw	0
  2146  013604  6EE6               	movwf	postinc1,c
  2147  013606  0E00               	movlw	0
  2148  013608  6EE6               	movwf	postinc1,c
  2149  01360A  0E7A               	movlw	122
  2150  01360C  6EE6               	movwf	postinc1,c
  2151  01360E  0E44               	movlw	68
  2152  013610  6EE6               	movwf	postinc1,c
  2153  013612  0E00               	movlw	0
  2154  013614  6EE6               	movwf	postinc1,c
  2155  013616  0E00               	movlw	0
  2156  013618  6EE6               	movwf	postinc1,c
  2157  01361A  0EA0               	movlw	160
  2158  01361C  6EE6               	movwf	postinc1,c
  2159  01361E  0E3F               	movlw	63
  2160  013620  6EE6               	movwf	postinc1,c
  2161  013622  0060  F403  FFE6   	movff	_C,postinc1
  2162  013628  0060  F407  FFE6   	movff	_C+1,postinc1
  2163  01362E  0060  F40B  FFE6   	movff	_C+2,postinc1
  2164  013634  0060  F40F  FFE6   	movff	_C+3,postinc1
  2165  01363A  ECC1  F08E         	call	___flmul	;wreg free
  2166  01363E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2167  013644  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2168  01364A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2169  013650  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2170  013656  ECB4  F096         	call	___fldiv	;wreg free
  2171  01365A  0060  F0D4  F100   	movff	btemp,_C
  2172  013660  0060  F0D8  F101   	movff	btemp+1,_C+1
  2173  013666  0060  F0DC  F102   	movff	btemp+2,_C+2
  2174  01366C  0060  F0E0  F103   	movff	btemp+3,_C+3
  2175                           
  2176                           ;main.c: 242:    C.calc[V_CC] = (C.calc[V_CC]*8.250825)/1000.0;
  2177  013672  0E00               	movlw	0
  2178  013674  6EE6               	movwf	postinc1,c
  2179  013676  0E00               	movlw	0
  2180  013678  6EE6               	movwf	postinc1,c
  2181  01367A  0E7A               	movlw	122
  2182  01367C  6EE6               	movwf	postinc1,c
  2183  01367E  0E44               	movlw	68
  2184  013680  6EE6               	movwf	postinc1,c
  2185  013682  0E61               	movlw	97
  2186  013684  6EE6               	movwf	postinc1,c
  2187  013686  0E03               	movlw	3
  2188  013688  6EE6               	movwf	postinc1,c
  2189  01368A  0E04               	movlw	4
  2190  01368C  6EE6               	movwf	postinc1,c
  2191  01368E  0E41               	movlw	65
  2192  013690  6EE6               	movwf	postinc1,c
  2193  013692  0060  F423  FFE6   	movff	_C+8,postinc1
  2194  013698  0060  F427  FFE6   	movff	_C+9,postinc1
  2195  01369E  0060  F42B  FFE6   	movff	_C+10,postinc1
  2196  0136A4  0060  F42F  FFE6   	movff	_C+11,postinc1
  2197  0136AA  ECC1  F08E         	call	___flmul	;wreg free
  2198  0136AE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2199  0136B4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2200  0136BA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2201  0136C0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2202  0136C6  ECB4  F096         	call	___fldiv	;wreg free
  2203  0136CA  0060  F0D4  F108   	movff	btemp,_C+8
  2204  0136D0  0060  F0D8  F109   	movff	btemp+1,_C+9
  2205  0136D6  0060  F0DC  F10A   	movff	btemp+2,_C+10
  2206  0136DC  0060  F0E0  F10B   	movff	btemp+3,_C+11
  2207                           
  2208                           ;main.c: 243:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2209  0136E2  0060  F403  FFE6   	movff	_C,postinc1
  2210  0136E8  0060  F407  FFE6   	movff	_C+1,postinc1
  2211  0136EE  0060  F40B  FFE6   	movff	_C+2,postinc1
  2212  0136F4  0060  F40F  FFE6   	movff	_C+3,postinc1
  2213  0136FA  0E00               	movlw	0
  2214  0136FC  6EE6               	movwf	postinc1,c
  2215  0136FE  EC4B  F0BD         	call	_get_raw_result	;wreg free
  2216  013702  0060  F0D7  FFE6   	movff	btemp,postinc1
  2217  013708  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2218  01370E  0EB6               	movlw	low STR_9
  2219  013710  6EE6               	movwf	postinc1,c
  2220  013712  0EFF               	movlw	high STR_9
  2221  013714  6EE6               	movwf	postinc1,c
  2222  013716  0E00               	movlw	0
  2223  013718  6EE6               	movwf	postinc1,c
  2224  01371A  0E01               	movlw	1
  2225  01371C  6EE6               	movwf	postinc1,c
  2226  01371E  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  2227  013722  0060  F0D7  FFE6   	movff	btemp,postinc1
  2228  013728  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2229  01372E  0E0A               	movlw	10
  2230  013730  6EE6               	movwf	postinc1,c
  2231  013732  ECC7  F0B0         	call	_sprintf	;wreg free
  2232                           
  2233                           ;main.c: 244:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2234  013736  0060  F423  FFE6   	movff	_C+8,postinc1
  2235  01373C  0060  F427  FFE6   	movff	_C+9,postinc1
  2236  013742  0060  F42B  FFE6   	movff	_C+10,postinc1
  2237  013748  0060  F42F  FFE6   	movff	_C+11,postinc1
  2238  01374E  0E02               	movlw	2
  2239  013750  6EE6               	movwf	postinc1,c
  2240  013752  EC4B  F0BD         	call	_get_raw_result	;wreg free
  2241  013756  0060  F0D7  FFE6   	movff	btemp,postinc1
  2242  01375C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2243  013762  0EB6               	movlw	low STR_9
  2244  013764  6EE6               	movwf	postinc1,c
  2245  013766  0EFF               	movlw	high STR_9
  2246  013768  6EE6               	movwf	postinc1,c
  2247  01376A  0E00               	movlw	0
  2248  01376C  6EE6               	movwf	postinc1,c
  2249  01376E  0E02               	movlw	2
  2250  013770  6EE6               	movwf	postinc1,c
  2251  013772  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  2252  013776  0060  F0D7  FFE6   	movff	btemp,postinc1
  2253  01377C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2254  013782  0E0A               	movlw	10
  2255  013784  6EE6               	movwf	postinc1,c
  2256  013786  ECC7  F0B0         	call	_sprintf	;wreg free
  2257                           
  2258                           ;main.c: 245:    StartTimer(TMR_DISPLAY, 100);
  2259  01378A  0E64               	movlw	100
  2260  01378C  6EE6               	movwf	postinc1,c
  2261  01378E  0E00               	movlw	0
  2262  013790  6EE6               	movwf	postinc1,c
  2263  013792  0E0A               	movlw	10
  2264  013794  6EE6               	movwf	postinc1,c
  2265  013796  EC32  F0BA         	call	_StartTimer	;wreg free
  2266                           
  2267                           ;main.c: 246:    update_lcd(0);
  2268  01379A  0E00               	movlw	0
  2269  01379C  6EE6               	movwf	postinc1,c
  2270  01379E  EC40  F0B0         	call	_update_lcd	;wreg free
  2271  0137A2                     l9797:
  2272                           
  2273                           ;main.c: 252:   check_help(V.flipper);
  2274  0137A2  0102               	movlb	2	; () banked
  2275  0137A4  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  2276  0137A6  6EE6               	movwf	postinc1,c
  2277  0137A8  EC36  F0A8         	call	_check_help	;wreg free
  2278                           
  2279                           ;main.c: 257:   if (V.set_sequ) {
  2280  0137AC  0102               	movlb	2	; () banked
  2281  0137AE  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  2282  0137B0  D692               	goto	l9761
  2283                           
  2284                           ; BSR set to: 2
  2285                           ;main.c: 258:    if (TimerDone(TMR_INFO)) {
  2286  0137B2  0E07               	movlw	7
  2287  0137B4  6EE6               	movwf	postinc1,c
  2288  0137B6  ECE5  F0BC         	call	_TimerDone	;wreg free
  2289  0137BA  5035               	movf	btemp^0,w,c
  2290  0137BC  B4D8               	btfsc	status,2,c
  2291  0137BE  D00B               	goto	l9809
  2292                           
  2293                           ;main.c: 259:     V.set_sequ = 0;
  2294  0137C0  0102               	movlb	2	; () banked
  2295  0137C2  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  2296                           
  2297                           ; BSR set to: 2
  2298                           ;main.c: 260:     set_vterm(0);
  2299  0137C4  0E00               	movlw	0
  2300  0137C6  6EE6               	movwf	postinc1,c
  2301  0137C8  ECA4  F0BD         	call	_set_vterm	;wreg free
  2302                           
  2303                           ; BSR set to: 4
  2304                           ;main.c: 261:     update_lcd(0);
  2305  0137CC  0E00               	movlw	0
  2306  0137CE  6EE6               	movwf	postinc1,c
  2307  0137D0  EC40  F0B0         	call	_update_lcd	;wreg free
  2308                           
  2309                           ;main.c: 262:    } else {
  2310  0137D4  D680               	goto	l9761
  2311  0137D6                     l9809:
  2312                           
  2313                           ;main.c: 263:     set_vterm(2);
  2314  0137D6  0E02               	movlw	2
  2315  0137D8  6EE6               	movwf	postinc1,c
  2316  0137DA  ECA4  F0BD         	call	_set_vterm	;wreg free
  2317                           
  2318                           ; BSR set to: 4
  2319                           ;main.c: 264:     update_lcd(2);
  2320  0137DE  0E02               	movlw	2
  2321  0137E0  6EE6               	movwf	postinc1,c
  2322  0137E2  EC40  F0B0         	call	_update_lcd	;wreg free
  2323  0137E6  D677               	goto	l9761
  2324  0137E8                     __end_of_main:
  2325                           	opt callstack 0
  2326                           
  2327 ;; *************** function _start_adc_scan *****************
  2328 ;; Defined at:
  2329 ;;		line 29 in file "daq.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1  [STACK] _Bool 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/4
  2340 ;;		On exit  : 1/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    7
  2350 ;; This function calls:
  2351 ;;		_ADCC_SetADIInterruptHandler
  2352 ;;		_ADCC_SetADTIInterruptHandler
  2353 ;;		_ADCC_StartConversion
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text1
  2360  016EBA                     __ptext1:
  2361                           	opt callstack 0
  2362  016EBA                     _start_adc_scan:
  2363                           	opt callstack 23
  2364                           
  2365                           ;daq.c: 31:  if (R.done)
  2366                           
  2367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2368                           ;incstack = 0
  2369  016EBA  0100               	movlb	0	; () banked
  2370  016EBC  5181               	movf	(_R+33)& (0+255),w,b	;volatile
  2371  016EBE  A4D8               	btfss	status,2,c
  2372  016EC0  0012               	return	
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;daq.c: 34:  R.scan_index = 0;
  2376  016EC2  6B7E               	clrf	(_R+30)& (0+255),b	;volatile
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;daq.c: 35:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2380  016EC4  013A               	movlb	58	; () banked
  2381  016EC6  5140               	movf	64,w,b	;volatile
  2382  016EC8  006E F940  F035    	movff	14928,btemp	;volatile
  2383  016ECE  6A36               	clrf	(btemp+1)^0,c
  2384  016ED0  0060  F0D4  F036   	movff	btemp,btemp+1
  2385  016ED6  6A35               	clrf	btemp^0,c
  2386  016ED8  2635               	addwf	btemp^0,f,c
  2387  016EDA  0E00               	movlw	0
  2388  016EDC  2236               	addwfc	(btemp+1)^0,f,c
  2389  016EDE  0E77               	movlw	119
  2390  016EE0  1435               	andwf	btemp^0,w,c
  2391  016EE2  0100               	movlb	0	; () banked
  2392  016EE4  6F7F               	movwf	(_R+31)& (0+255),b	;volatile
  2393  016EE6  0E3C               	movlw	60
  2394  016EE8  1436               	andwf	(btemp+1)^0,w,c
  2395  016EEA  6F80               	movwf	(_R+32)& (0+255),b	;volatile
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;daq.c: 36:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2399  016EEC  0ED2               	movlw	low _adc_int_handler
  2400  016EEE  6EE6               	movwf	postinc1,c
  2401  016EF0  0E7A               	movlw	high _adc_int_handler
  2402  016EF2  6EE6               	movwf	postinc1,c
  2403  016EF4  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2404  016EF6  6EE6               	movwf	postinc1,c
  2405  016EF8  EC82  F0BC         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2406                           
  2407                           ;daq.c: 37:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2408  016EFC  0ED0               	movlw	low _adc_int_t_handler
  2409  016EFE  6EE6               	movwf	postinc1,c
  2410  016F00  0E69               	movlw	high _adc_int_t_handler
  2411  016F02  6EE6               	movwf	postinc1,c
  2412  016F04  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2413  016F06  6EE6               	movwf	postinc1,c
  2414  016F08  EC6E  F0BC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2415                           
  2416                           ;daq.c: 38:  ADCC_StartConversion(R.scan_index & 0xf);
  2417  016F0C  0100               	movlb	0	; () banked
  2418  016F0E  517E               	movf	(_R+30)& (0+255),w,b	;volatile
  2419  016F10  0B0F               	andlw	15
  2420  016F12  6EE6               	movwf	postinc1,c
  2421  016F14  EC28  F0BE         	call	_ADCC_StartConversion	;wreg free
  2422                           
  2423                           ; BSR set to: 62
  2424  016F18  82BE               	bsf	190,1,c	;volatile
  2425                           
  2426                           ; BSR set to: 62
  2427  016F1A  84BE               	bsf	190,2,c	;volatile
  2428                           
  2429                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2430  016F1C  0012               	return		;funcret
  2431  016F1E                     __end_of_start_adc_scan:
  2432                           	opt callstack 0
  2433                           
  2434 ;; *************** function _ADCC_StartConversion *****************
  2435 ;; Defined at:
  2436 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  channel         1  [STACK] enum E16136
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1  [STACK] void 
  2443 ;; Registers used:
  2444 ;;		fsr1l, fsr1h
  2445 ;; Tracked objects:
  2446 ;;		On entry : 3F/0
  2447 ;;		On exit  : 3F/3E
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    6
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_start_adc_scan
  2461 ;;		_adc_int_t_handler
  2462 ;; This function uses a reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text2
  2466  017C50                     __ptext2:
  2467                           	opt callstack 0
  2468  017C50                     _ADCC_StartConversion:
  2469                           	opt callstack 6
  2470                           
  2471                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2472                           ;stkvar	_channel @ sp[(0)+-1]
  2473                           
  2474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2475                           ;incstack = 0
  2476  017C50  0EFF               	movlw	-1
  2477  017C52  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2478                           
  2479                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2480  017C58  013E               	movlb	62	; () banked
  2481  017C5A  8FF8               	bsf	248,7,b	;volatile
  2482                           
  2483                           ; BSR set to: 62
  2484                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2485  017C5C  81F8               	bsf	248,0,b	;volatile
  2486                           
  2487                           ; BSR set to: 62
  2488                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2489  017C5E  52E5               	movf	postdec1,f,c
  2490  017C60  0012               	return		;funcret
  2491  017C62                     __end_of_ADCC_StartConversion:
  2492                           	opt callstack 0
  2493                           
  2494 ;; *************** function _srand *****************
  2495 ;; Defined at:
  2496 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  s               2  [STACK] unsigned int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1  [STACK] void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2505 ;; Tracked objects:
  2506 ;;		On entry : 3F/0
  2507 ;;		On exit  : 3F/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    6
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text3
  2525  01757C                     __ptext3:
  2526                           	opt callstack 0
  2527  01757C                     _srand:
  2528                           	opt callstack 24
  2529                           
  2530                           ;stkvar	_s @ sp[(0)+-2]
  2531                           
  2532                           ; BSR set to: 62
  2533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2534                           ;incstack = 0
  2535  01757C  0EFE               	movlw	-2
  2536  01757E  50E3               	movf	plusw1,w,c
  2537  017580  0FFF               	addlw	255
  2538  017582  6E3F               	movwf	(btemp+10)^0,c
  2539  017584  0EFF               	movlw	-1
  2540  017586  006F FF8C  F040    	movff	plusw1,btemp+11
  2541  01758C  0EFF               	movlw	255
  2542  01758E  2240               	addwfc	(btemp+11)^0,f,c
  2543  017590  0060  F0FC  F0B5   	movff	btemp+10,_seed
  2544  017596  0060  F100  F0B6   	movff	btemp+11,_seed+1
  2545  01759C  0100               	movlb	0	; () banked
  2546  01759E  6BB7               	clrf	(_seed+2)& (0+255),b
  2547  0175A0  6BB8               	clrf	(_seed+3)& (0+255),b
  2548  0175A2  6BB9               	clrf	(_seed+4)& (0+255),b
  2549  0175A4  6BBA               	clrf	(_seed+5)& (0+255),b
  2550  0175A6  6BBB               	clrf	(_seed+6)& (0+255),b
  2551  0175A8  6BBC               	clrf	(_seed+7)& (0+255),b
  2552                           
  2553                           ; BSR set to: 0
  2554                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2555  0175AA  52E5               	movf	postdec1,f,c
  2556  0175AC  52E5               	movf	postdec1,f,c
  2557  0175AE  0012               	return		;funcret
  2558  0175B0                     __end_of_srand:
  2559                           	opt callstack 0
  2560                           
  2561 ;; *************** function _init_display *****************
  2562 ;; Defined at:
  2563 ;;		line 37 in file "eadog.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1  [STACK] void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/2
  2574 ;;		On exit  : 3F/3D
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    8
  2584 ;; This function calls:
  2585 ;;		_ringBufS_init
  2586 ;;		_send_lcd_cmd
  2587 ;;		_send_lcd_cmd_long
  2588 ;;		_wdtdelay
  2589 ;; This function is called by:
  2590 ;;		_main
  2591 ;; This function uses a reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text4
  2595  016298                     __ptext4:
  2596                           	opt callstack 0
  2597  016298                     _init_display:
  2598                           	opt callstack 22
  2599                           
  2600                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2601                           
  2602                           ; BSR set to: 0
  2603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2604                           ;incstack = 0
  2605  016298  0E43               	movlw	low _ring_buf1
  2606  01629A  0100               	movlb	0	; () banked
  2607  01629C  6FA0               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2608  01629E  0E03               	movlw	high _ring_buf1
  2609  0162A0  6FA1               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2610                           
  2611                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2612  0162A2  0E00               	movlw	low _ring_buf2
  2613  0162A4  6F9E               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2614  0162A6  0E03               	movlw	high _ring_buf2
  2615  0162A8  6F9F               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2619  0162AA  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  2620  0162B0  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  2621  0162B6  ECBA  F0BB         	call	_ringBufS_init	;wreg free
  2622                           
  2623                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2624  0162BA  0060  F27B  FFE6   	movff	_spi_link+4,postinc1
  2625  0162C0  0060  F27F  FFE6   	movff	_spi_link+5,postinc1
  2626  0162C6  ECBA  F0BB         	call	_ringBufS_init	;wreg free
  2627                           
  2628                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2629  0162CA  84BE               	bsf	190,2,c	;volatile
  2630  0162CC  84BC               	bsf	188,2,c	;volatile
  2631                           
  2632                           ;eadog.c: 46:  wdtdelay(350000);
  2633  0162CE  0E30               	movlw	48
  2634  0162D0  6EE6               	movwf	postinc1,c
  2635  0162D2  0E57               	movlw	87
  2636  0162D4  6EE6               	movwf	postinc1,c
  2637  0162D6  0E05               	movlw	5
  2638  0162D8  6EE6               	movwf	postinc1,c
  2639  0162DA  0E00               	movlw	0
  2640  0162DC  6EE6               	movwf	postinc1,c
  2641  0162DE  EC50  F0B8         	call	_wdtdelay	;wreg free
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2645  0162E2  0E39               	movlw	57
  2646  0162E4  6EE6               	movwf	postinc1,c
  2647  0162E6  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2651  0162EA  0E1D               	movlw	29
  2652  0162EC  6EE6               	movwf	postinc1,c
  2653  0162EE  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2657  0162F2  0E50               	movlw	80
  2658  0162F4  6EE6               	movwf	postinc1,c
  2659  0162F6  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2663  0162FA  0E6C               	movlw	108
  2664  0162FC  6EE6               	movwf	postinc1,c
  2665  0162FE  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2669  016302  0E76               	movlw	118
  2670  016304  6EE6               	movwf	postinc1,c
  2671  016306  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2675  01630A  0E38               	movlw	56
  2676  01630C  6EE6               	movwf	postinc1,c
  2677  01630E  EC92  F0BB         	call	_send_lcd_cmd_long	;wreg free
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2681  016312  0E0F               	movlw	15
  2682  016314  6EE6               	movwf	postinc1,c
  2683  016316  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2687  01631A  0E01               	movlw	1
  2688  01631C  6EE6               	movwf	postinc1,c
  2689  01631E  EC92  F0BB         	call	_send_lcd_cmd_long	;wreg free
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2693  016322  0E02               	movlw	2
  2694  016324  6EE6               	movwf	postinc1,c
  2695  016326  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2699  01632A  0E06               	movlw	6
  2700  01632C  6EE6               	movwf	postinc1,c
  2701  01632E  ECA6  F0BB         	call	_send_lcd_cmd	;wreg free
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;eadog.c: 57:  wdtdelay(30);
  2705  016332  0E1E               	movlw	30
  2706  016334  6EE6               	movwf	postinc1,c
  2707  016336  0E00               	movlw	0
  2708  016338  6EE6               	movwf	postinc1,c
  2709  01633A  0E00               	movlw	0
  2710  01633C  6EE6               	movwf	postinc1,c
  2711  01633E  0E00               	movlw	0
  2712  016340  6EE6               	movwf	postinc1,c
  2713  016342  EC50  F0B8         	call	_wdtdelay	;wreg free
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2717  016346  0E02               	movlw	2
  2718  016348  013D               	movlb	61	; () banked
  2719  01634A  6F16               	movwf	22,b	;volatile
  2720                           
  2721                           ; BSR set to: 61
  2722                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2723  01634C  0E40               	movlw	64
  2724  01634E  6F15               	movwf	21,b	;volatile
  2725                           
  2726                           ; BSR set to: 61
  2727                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2728  016350  0E83               	movlw	131
  2729  016352  6F14               	movwf	20,b	;volatile
  2730                           
  2731                           ; BSR set to: 61
  2732                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2733  016354  931A               	bcf	26,1,b	;volatile
  2734                           
  2735                           ; BSR set to: 61
  2736                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2737  016356  0E3F               	movlw	-193
  2738  016358  013B               	movlb	59	; () banked
  2739  01635A  17FD               	andwf	253,f,b	;volatile
  2740                           
  2741                           ; BSR set to: 59
  2742                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2743  01635C  9BFD               	bcf	253,5,b	;volatile
  2744                           
  2745                           ; BSR set to: 59
  2746                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2747  01635E  51FD               	movf	253,w,b	;volatile
  2748  016360  0BF9               	andlw	-7
  2749  016362  0902               	iorlw	2
  2750  016364  6FFD               	movwf	253,b	;volatile
  2751                           
  2752                           ; BSR set to: 59
  2753                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2754  016366  0EE7               	movlw	-25
  2755  016368  17FD               	andwf	253,f,b	;volatile
  2756                           
  2757                           ; BSR set to: 59
  2758                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2759  01636A  81FD               	bsf	253,0,b	;volatile
  2760                           
  2761                           ; BSR set to: 59
  2762                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2763  01636C  0E43               	movlw	low _ring_buf1
  2764  01636E  6FF9               	movwf	249,b	;volatile
  2765  016370  0E03               	movlw	high _ring_buf1
  2766  016372  6FFA               	movwf	250,b	;volatile
  2767  016374  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2768  016376  6FFB               	movwf	251,b	;volatile
  2769                           
  2770                           ; BSR set to: 59
  2771                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2772  016378  9BFC               	bcf	252,5,b	;volatile
  2773                           
  2774                           ; BSR set to: 59
  2775                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2776  01637A  013D               	movlb	61	; () banked
  2777  01637C  831A               	bsf	26,1,b	;volatile
  2778                           
  2779                           ; BSR set to: 61
  2780                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2781  01637E  94BE               	bcf	190,2,c	;volatile
  2782                           
  2783                           ; BSR set to: 61
  2784                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2785  016380  0012               	return		;funcret
  2786  016382                     __end_of_init_display:
  2787                           	opt callstack 0
  2788                           
  2789 ;; *************** function _send_lcd_cmd_long *****************
  2790 ;; Defined at:
  2791 ;;		line 114 in file "eadog.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  cmd             1  [STACK] const unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1  [STACK] void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2800 ;; Tracked objects:
  2801 ;;		On entry : 3F/0
  2802 ;;		On exit  : 3F/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    7
  2812 ;; This function calls:
  2813 ;;		_SPI1_Exchange8bit
  2814 ;;		_wdtdelay
  2815 ;; This function is called by:
  2816 ;;		_init_display
  2817 ;; This function uses a reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text5
  2821  017724                     __ptext5:
  2822                           	opt callstack 0
  2823  017724                     _send_lcd_cmd_long:
  2824                           	opt callstack 22
  2825                           
  2826                           ; BSR set to: 61
  2827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2828                           ;incstack = 0
  2829                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2830  017724  92BC               	bcf	188,1,c	;volatile
  2831                           
  2832                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2833  017726  94BC               	bcf	188,2,c	;volatile
  2834                           
  2835                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2836                           ;stkvar	_cmd @ sp[(0)+-1]
  2837  017728  0EFF               	movlw	-1
  2838  01772A  50E3               	movf	plusw1,w,c
  2839  01772C  6EE6               	movwf	postinc1,c
  2840  01772E  EC3C  F0BD         	call	_SPI1_Exchange8bit	;wreg free
  2841                           
  2842                           ; BSR set to: 57
  2843                           ;eadog.c: 119:  wdtdelay(800);
  2844  017732  0E20               	movlw	32
  2845  017734  6EE6               	movwf	postinc1,c
  2846  017736  0E03               	movlw	3
  2847  017738  6EE6               	movwf	postinc1,c
  2848  01773A  0E00               	movlw	0
  2849  01773C  6EE6               	movwf	postinc1,c
  2850  01773E  0E00               	movlw	0
  2851  017740  6EE6               	movwf	postinc1,c
  2852  017742  EC50  F0B8         	call	_wdtdelay	;wreg free
  2853                           
  2854                           ; BSR set to: 0
  2855  017746  82BC               	bsf	188,1,c	;volatile
  2856                           
  2857                           ; BSR set to: 0
  2858                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2859  017748  52E5               	movf	postdec1,f,c
  2860  01774A  0012               	return		;funcret
  2861  01774C                     __end_of_send_lcd_cmd_long:
  2862                           	opt callstack 0
  2863                           
  2864 ;; *************** function _send_lcd_cmd *****************
  2865 ;; Defined at:
  2866 ;;		line 102 in file "eadog.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  cmd             1  [STACK] const unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1  [STACK] void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2875 ;; Tracked objects:
  2876 ;;		On entry : 3F/0
  2877 ;;		On exit  : 3F/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    7
  2887 ;; This function calls:
  2888 ;;		_SPI1_Exchange8bit
  2889 ;;		_wdtdelay
  2890 ;; This function is called by:
  2891 ;;		_init_display
  2892 ;; This function uses a reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text6
  2896  01774C                     __ptext6:
  2897                           	opt callstack 0
  2898  01774C                     _send_lcd_cmd:
  2899                           	opt callstack 22
  2900                           
  2901                           ; BSR set to: 0
  2902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2903                           ;incstack = 0
  2904                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2905  01774C  92BC               	bcf	188,1,c	;volatile
  2906                           
  2907                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2908  01774E  94BC               	bcf	188,2,c	;volatile
  2909                           
  2910                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2911                           ;stkvar	_cmd @ sp[(0)+-1]
  2912  017750  0EFF               	movlw	-1
  2913  017752  50E3               	movf	plusw1,w,c
  2914  017754  6EE6               	movwf	postinc1,c
  2915  017756  EC3C  F0BD         	call	_SPI1_Exchange8bit	;wreg free
  2916                           
  2917                           ; BSR set to: 57
  2918                           ;eadog.c: 107:  wdtdelay(30);
  2919  01775A  0E1E               	movlw	30
  2920  01775C  6EE6               	movwf	postinc1,c
  2921  01775E  0E00               	movlw	0
  2922  017760  6EE6               	movwf	postinc1,c
  2923  017762  0E00               	movlw	0
  2924  017764  6EE6               	movwf	postinc1,c
  2925  017766  0E00               	movlw	0
  2926  017768  6EE6               	movwf	postinc1,c
  2927  01776A  EC50  F0B8         	call	_wdtdelay	;wreg free
  2928                           
  2929                           ; BSR set to: 0
  2930  01776E  82BC               	bsf	188,1,c	;volatile
  2931                           
  2932                           ; BSR set to: 0
  2933                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2934  017770  52E5               	movf	postdec1,f,c
  2935  017772  0012               	return		;funcret
  2936  017774                     __end_of_send_lcd_cmd:
  2937                           	opt callstack 0
  2938                           
  2939 ;; *************** function _SPI1_Exchange8bit *****************
  2940 ;; Defined at:
  2941 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  data            1  [STACK] unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1  [STACK] unsigned char 
  2948 ;; Registers used:
  2949 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 3F/39
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    6
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_send_lcd_cmd
  2966 ;;		_send_lcd_cmd_long
  2967 ;; This function uses a reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text7
  2971  017A78                     __ptext7:
  2972                           	opt callstack 0
  2973  017A78                     _SPI1_Exchange8bit:
  2974                           	opt callstack 22
  2975                           
  2976                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2977                           
  2978                           ; BSR set to: 0
  2979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2980                           ;incstack = 0
  2981  017A78  0E01               	movlw	1
  2982  017A7A  013D               	movlb	61	; () banked
  2983  017A7C  6F12               	movwf	18,b	;volatile
  2984                           
  2985                           ; BSR set to: 61
  2986                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2987                           ;stkvar	_data @ sp[(0)+-1]
  2988  017A7E  0EFF               	movlw	-1
  2989  017A80  006F FF8F FD11     	movff	plusw1,15633	;volatile
  2990  017A86                     l835:
  2991                           
  2992                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2993  017A86  0139               	movlb	57	; () banked
  2994  017A88  A9A2               	btfss	162,4,b	;volatile
  2995  017A8A  D7FD               	goto	l835
  2996                           
  2997                           ; BSR set to: 57
  2998                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2999  017A8C  006F F440  F035    	movff	15632,btemp	;volatile
  3000                           
  3001                           ; BSR set to: 57
  3002                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3003  017A92  52E5               	movf	postdec1,f,c
  3004  017A94  0012               	return		;funcret
  3005  017A96                     __end_of_SPI1_Exchange8bit:
  3006                           	opt callstack 0
  3007                           
  3008 ;; *************** function _ringBufS_init *****************
  3009 ;; Defined at:
  3010 ;;		line 22 in file "ringbufs.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  _this           2  [STACK] PTR volatile struct ring
  3013 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1  [STACK] void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    7
  3032 ;; This function calls:
  3033 ;;		_memset
  3034 ;; This function is called by:
  3035 ;;		_init_display
  3036 ;; This function uses a reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text8
  3040  017774                     __ptext8:
  3041                           	opt callstack 0
  3042  017774                     _ringBufS_init:
  3043                           	opt callstack 22
  3044                           
  3045                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3046                           
  3047                           ; BSR set to: 57
  3048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3049                           ;incstack = 0
  3050  017774  0E43               	movlw	67
  3051  017776  6EE6               	movwf	postinc1,c
  3052  017778  0E00               	movlw	0
  3053  01777A  6EE6               	movwf	postinc1,c
  3054  01777C  0E00               	movlw	0
  3055  01777E  6EE6               	movwf	postinc1,c
  3056  017780  0E00               	movlw	0
  3057  017782  6EE6               	movwf	postinc1,c
  3058                           
  3059                           ;stkvar	__this @ sp[(-4)+-2]
  3060  017784  0EFA               	movlw	-6
  3061  017786  006F FF8F FFE6     	movff	plusw1,postinc1
  3062  01778C  006F FF8F FFE6     	movff	plusw1,postinc1
  3063  017792  ECC7  F0A1         	call	_memset	;wreg free
  3064                           
  3065                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3066  017796  52E5               	movf	postdec1,f,c
  3067  017798  52E5               	movf	postdec1,f,c
  3068  01779A  0012               	return		;funcret
  3069  01779C                     __end_of_ringBufS_init:
  3070                           	opt callstack 0
  3071                           
  3072 ;; *************** function _get_raw_result *****************
  3073 ;; Defined at:
  3074 ;;		line 63 in file "daq.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  index           1  [STACK] enum E16136
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  2  [STACK] unsigned short 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/4
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    6
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text9
  3103  017A96                     __ptext9:
  3104                           	opt callstack 0
  3105  017A96                     _get_raw_result:
  3106                           	opt callstack 24
  3107                           
  3108                           ;daq.c: 63: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 64: {;daq.c: 65:  r
      +                          eturn R.raw_adc[index];
  3109                           ;stkvar	_index @ sp[(0)+-1]
  3110                           
  3111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3112                           ;incstack = 0
  3113  017A96  0EFF               	movlw	-1
  3114  017A98  50E3               	movf	plusw1,w,c
  3115  017A9A  0D02               	mullw	2
  3116  017A9C  50F3               	movf	243,w,c
  3117  017A9E  0F60               	addlw	low _R
  3118  017AA0  6ED9               	movwf	fsr2l,c
  3119  017AA2  6ADA               	clrf	fsr2h,c
  3120  017AA4  006F FF78  F035    	movff	postinc2,btemp
  3121  017AAA  006F FF74  F036    	movff	postdec2,btemp+1
  3122                           
  3123                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  3124  017AB0  52E5               	movf	postdec1,f,c
  3125  017AB2  0012               	return		;funcret
  3126  017AB4                     __end_of_get_raw_result:
  3127                           	opt callstack 0
  3128                           
  3129 ;; *************** function _eaDogM_WriteCommand *****************
  3130 ;; Defined at:
  3131 ;;		line 160 in file "eadog.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  cmd             1  [STACK] const unsigned char 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1  [STACK] void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3140 ;; Tracked objects:
  3141 ;;		On entry : 3F/3D
  3142 ;;		On exit  : 3F/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:   16
  3152 ;; This function calls:
  3153 ;;		_send_lcd_cmd_dma
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text10
  3160  017C72                     __ptext10:
  3161                           	opt callstack 0
  3162  017C72                     _eaDogM_WriteCommand:
  3163                           	opt callstack 14
  3164                           
  3165                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3166                           ;stkvar	_cmd @ sp[(0)+-1]
  3167                           
  3168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3169                           ;incstack = 0
  3170  017C72  0EFF               	movlw	-1
  3171  017C74  50E3               	movf	plusw1,w,c
  3172  017C76  6EE6               	movwf	postinc1,c
  3173  017C78  ECAA  F0B8         	call	_send_lcd_cmd_dma	;wreg free
  3174                           
  3175                           ; BSR set to: 0
  3176                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3177  017C7C  52E5               	movf	postdec1,f,c
  3178  017C7E  0012               	return		;funcret
  3179  017C80                     __end_of_eaDogM_WriteCommand:
  3180                           	opt callstack 0
  3181                           
  3182 ;; *************** function _clear_adc_scan *****************
  3183 ;; Defined at:
  3184 ;;		line 55 in file "daq.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1  [STACK] void 
  3191 ;; Registers used:
  3192 ;;		None
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/4
  3195 ;;		On exit  : 3F/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    6
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text11
  3213  017D0A                     __ptext11:
  3214                           	opt callstack 0
  3215  017D0A                     _clear_adc_scan:
  3216                           	opt callstack 24
  3217                           
  3218                           ;daq.c: 57:  R.done = 0;
  3219                           
  3220                           ; BSR set to: 0
  3221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3222                           ;incstack = 0
  3223  017D0A  0100               	movlb	0	; () banked
  3224  017D0C  6B81               	clrf	(_R+33)& (0+255),b	;volatile
  3225                           
  3226                           ; BSR set to: 0
  3227                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3228  017D0E  0012               	return		;funcret
  3229  017D10                     __end_of_clear_adc_scan:
  3230                           	opt callstack 0
  3231                           
  3232 ;; *************** function _check_help *****************
  3233 ;; Defined at:
  3234 ;;		line 40 in file "mconfig.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  flipper         1  [STACK] _Bool 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1  [STACK] void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3243 ;; Tracked objects:
  3244 ;;		On entry : 3F/2
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:   18
  3255 ;; This function calls:
  3256 ;;		_StartTimer
  3257 ;;		_TimerDone
  3258 ;;		_display_help
  3259 ;;		_display_info
  3260 ;;		_get_vterm_ptr
  3261 ;;		_help_button
  3262 ;;		_mode_lamp_bright
  3263 ;;		_mode_lamp_dim
  3264 ;;		_set_display_info
  3265 ;;		_set_temp_display_help
  3266 ;;		_set_vterm
  3267 ;;		_sprintf
  3268 ;;		_update_lcd
  3269 ;;		_vterm_dump
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text12
  3276  01506C                     __ptext12:
  3277                           	opt callstack 0
  3278  01506C                     _check_help:
  3279                           	opt callstack 12
  3280                           
  3281                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  3282                           
  3283                           ; BSR set to: 0
  3284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3285                           ;incstack = 0
  3286  01506C  EC50  F0BA         	call	_help_button	;wreg free
  3287  015070  5035               	movf	btemp^0,w,c
  3288  015072  B4D8               	btfsc	status,2,c
  3289  015074  D0D0               	goto	l9645
  3290  015076  EC75  F0BE         	call	_display_info	;wreg free
  3291  01507A  0435               	decf	btemp^0,w,c
  3292  01507C  B4D8               	btfsc	status,2,c
  3293  01507E  D0CB               	goto	l9645
  3294                           
  3295                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  3296  015080  0EDC               	movlw	220
  3297  015082  6EE6               	movwf	postinc1,c
  3298  015084  0E05               	movlw	5
  3299  015086  6EE6               	movwf	postinc1,c
  3300  015088  0E0B               	movlw	11
  3301  01508A  6EE6               	movwf	postinc1,c
  3302  01508C  EC32  F0BA         	call	_StartTimer	;wreg free
  3303                           
  3304                           ;mconfig.c: 47:   if (V.debug)
  3305  015090  0102               	movlb	2	; () banked
  3306  015092  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  3307                           
  3308                           ; BSR set to: 2
  3309                           ;mconfig.c: 48:    vterm_dump();
  3310  015094  EC01  F0AE         	call	_vterm_dump	;wreg free
  3311                           
  3312                           ;mconfig.c: 50:   set_vterm(1);
  3313  015098  0E01               	movlw	1
  3314  01509A  6EE6               	movwf	postinc1,c
  3315  01509C  ECA4  F0BD         	call	_set_vterm	;wreg free
  3316                           
  3317                           ; BSR set to: 4
  3318                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  3319  0150A0  EC75  F0BE         	call	_display_info	;wreg free
  3320  0150A4  5035               	movf	btemp^0,w,c
  3321  0150A6  6EE6               	movwf	postinc1,c
  3322  0150A8  EC31  F0BE         	call	_set_temp_display_help	;wreg free
  3323                           
  3324                           ; BSR set to: 2
  3325                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  3326  0150AC  0E01               	movlw	1
  3327  0150AE  6EE6               	movwf	postinc1,c
  3328  0150B0  EC5A  F0BD         	call	_set_display_info	;wreg free
  3329                           
  3330                           ;mconfig.c: 53:   if (flipper) {
  3331                           ;stkvar	_flipper @ sp[(0)+-1]
  3332  0150B4  0EFF               	movlw	-1
  3333  0150B6  50E3               	movf	plusw1,w,c
  3334  0150B8  B4D8               	btfsc	status,2,c
  3335  0150BA  D019               	goto	l9633
  3336                           
  3337                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  3338  0150BC  0EC3               	movlw	low STR_14
  3339  0150BE  6EE6               	movwf	postinc1,c
  3340  0150C0  0EFF               	movlw	high STR_14
  3341  0150C2  6EE6               	movwf	postinc1,c
  3342  0150C4  0E2E               	movlw	low STR_16
  3343  0150C6  6EE6               	movwf	postinc1,c
  3344  0150C8  0EFF               	movlw	high STR_16
  3345  0150CA  6EE6               	movwf	postinc1,c
  3346  0150CC  0E01               	movlw	1
  3347  0150CE  6EE6               	movwf	postinc1,c
  3348  0150D0  0E00               	movlw	0
  3349  0150D2  6EE6               	movwf	postinc1,c
  3350  0150D4  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3351  0150D8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3352  0150DE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3353  0150E4  0E06               	movlw	6
  3354  0150E6  6EE6               	movwf	postinc1,c
  3355  0150E8  ECC7  F0B0         	call	_sprintf	;wreg free
  3356                           
  3357                           ;mconfig.c: 55:   } else {
  3358  0150EC  D018               	goto	l1549
  3359  0150EE                     l9633:
  3360                           
  3361                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  3362  0150EE  0ED9               	movlw	low STR_15
  3363  0150F0  6EE6               	movwf	postinc1,c
  3364  0150F2  0EFF               	movlw	high STR_15
  3365  0150F4  6EE6               	movwf	postinc1,c
  3366  0150F6  0E2E               	movlw	low STR_16
  3367  0150F8  6EE6               	movwf	postinc1,c
  3368  0150FA  0EFF               	movlw	high STR_16
  3369  0150FC  6EE6               	movwf	postinc1,c
  3370  0150FE  0E01               	movlw	1
  3371  015100  6EE6               	movwf	postinc1,c
  3372  015102  0E00               	movlw	0
  3373  015104  6EE6               	movwf	postinc1,c
  3374  015106  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3375  01510A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3376  015110  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3377  015116  0E06               	movlw	6
  3378  015118  6EE6               	movwf	postinc1,c
  3379  01511A  ECC7  F0B0         	call	_sprintf	;wreg free
  3380  01511E                     l1549:
  3381                           
  3382                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  3383  01511E  0102               	movlb	2	; () banked
  3384  015120  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3385  015122  32E8               	rrcf	wreg,f,c
  3386  015124  32E8               	rrcf	wreg,f,c
  3387  015126  0B03               	andlw	3
  3388  015128  0D24               	mullw	36
  3389  01512A  0E12               	movlw	18
  3390  01512C  26F3               	addwf	243,f,c
  3391  01512E  0E00               	movlw	0
  3392  015130  22F4               	addwfc	244,f,c
  3393  015132  0E73               	movlw	low _T
  3394  015134  6E3F               	movwf	(btemp+10)^0,c
  3395  015136  0EFE               	movlw	high _T
  3396  015138  6E40               	movwf	(btemp+11)^0,c
  3397  01513A  50F3               	movf	243,w,c
  3398  01513C  263F               	addwf	(btemp+10)^0,f,c
  3399  01513E  50F4               	movf	244,w,c
  3400  015140  2240               	addwfc	(btemp+11)^0,f,c
  3401  015142  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3402  015148  0060  F103  FFE6   	movff	btemp+11,postinc1
  3403  01514E  0ECF               	movlw	low STR_18
  3404  015150  6EE6               	movwf	postinc1,c
  3405  015152  0EFF               	movlw	high STR_18
  3406  015154  6EE6               	movwf	postinc1,c
  3407  015156  0E01               	movlw	1
  3408  015158  6EE6               	movwf	postinc1,c
  3409  01515A  0E01               	movlw	1
  3410  01515C  6EE6               	movwf	postinc1,c
  3411  01515E  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3412  015162  0060  F0D7  FFE6   	movff	btemp,postinc1
  3413  015168  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3414  01516E  0E06               	movlw	6
  3415  015170  6EE6               	movwf	postinc1,c
  3416  015172  ECC7  F0B0         	call	_sprintf	;wreg free
  3417                           
  3418                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  3419  015176  0102               	movlb	2	; () banked
  3420  015178  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3421  01517A  32E8               	rrcf	wreg,f,c
  3422  01517C  32E8               	rrcf	wreg,f,c
  3423  01517E  0B03               	andlw	3
  3424  015180  0D24               	mullw	36
  3425  015182  0E73               	movlw	low _T
  3426  015184  6E3F               	movwf	(btemp+10)^0,c
  3427  015186  0EFE               	movlw	high _T
  3428  015188  6E40               	movwf	(btemp+11)^0,c
  3429  01518A  50F3               	movf	243,w,c
  3430  01518C  263F               	addwf	(btemp+10)^0,f,c
  3431  01518E  50F4               	movf	244,w,c
  3432  015190  2240               	addwfc	(btemp+11)^0,f,c
  3433  015192  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3434  015198  0060  F103  FFE6   	movff	btemp+11,postinc1
  3435  01519E  0ECF               	movlw	low STR_18
  3436  0151A0  6EE6               	movwf	postinc1,c
  3437  0151A2  0EFF               	movlw	high STR_18
  3438  0151A4  6EE6               	movwf	postinc1,c
  3439  0151A6  0E01               	movlw	1
  3440  0151A8  6EE6               	movwf	postinc1,c
  3441  0151AA  0E02               	movlw	2
  3442  0151AC  6EE6               	movwf	postinc1,c
  3443  0151AE  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3444  0151B2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3445  0151B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3446  0151BE  0E06               	movlw	6
  3447  0151C0  6EE6               	movwf	postinc1,c
  3448  0151C2  ECC7  F0B0         	call	_sprintf	;wreg free
  3449                           
  3450                           ;mconfig.c: 60:   V.help_id++;
  3451  0151C6  EE20  F2A9         	lfsr	2,_V+169	;volatile
  3452  0151CA  30DF               	rrcf	223,w,c
  3453  0151CC  6E40               	movwf	(btemp+11)^0,c
  3454  0151CE  3240               	rrcf	(btemp+11)^0,f,c
  3455  0151D0  3040               	rrcf	(btemp+11)^0,w,c
  3456  0151D2  0B03               	andlw	3
  3457  0151D4  6E40               	movwf	(btemp+11)^0,c
  3458  0151D6  2A40               	incf	(btemp+11)^0,f,c
  3459  0151D8  3640               	rlcf	(btemp+11)^0,f,c
  3460  0151DA  3640               	rlcf	(btemp+11)^0,f,c
  3461  0151DC  3640               	rlcf	(btemp+11)^0,f,c
  3462  0151DE  50DF               	movf	223,w,c
  3463  0151E0  1840               	xorwf	(btemp+11)^0,w,c
  3464  0151E2  0BE7               	andlw	-25
  3465  0151E4  1840               	xorwf	(btemp+11)^0,w,c
  3466  0151E6  6EDF               	movwf	223,c
  3467                           
  3468                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  3469  0151E8  0EB8               	movlw	184
  3470  0151EA  6EE6               	movwf	postinc1,c
  3471  0151EC  0E0B               	movlw	11
  3472  0151EE  6EE6               	movwf	postinc1,c
  3473  0151F0  0E09               	movlw	9
  3474  0151F2  6EE6               	movwf	postinc1,c
  3475  0151F4  EC32  F0BA         	call	_StartTimer	;wreg free
  3476                           
  3477                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  3478  0151F8  0EB8               	movlw	184
  3479  0151FA  6EE6               	movwf	postinc1,c
  3480  0151FC  0E0B               	movlw	11
  3481  0151FE  6EE6               	movwf	postinc1,c
  3482  015200  0E07               	movlw	7
  3483  015202  6EE6               	movwf	postinc1,c
  3484  015204  EC32  F0BA         	call	_StartTimer	;wreg free
  3485                           
  3486                           ;mconfig.c: 63:   mode_lamp_bright();
  3487  015208  EC40  F0BE         	call	_mode_lamp_bright	;wreg free
  3488                           
  3489                           ;mconfig.c: 64:   update_lcd(1);
  3490  01520C  0E01               	movlw	1
  3491  01520E  6EE6               	movwf	postinc1,c
  3492  015210  EC40  F0B0         	call	_update_lcd	;wreg free
  3493                           
  3494                           ;mconfig.c: 65:  } else {
  3495  015214  D032               	goto	l1553
  3496  015216                     l9645:
  3497                           
  3498                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  3499  015216  0E09               	movlw	9
  3500  015218  6EE6               	movwf	postinc1,c
  3501  01521A  ECE5  F0BC         	call	_TimerDone	;wreg free
  3502  01521E  5035               	movf	btemp^0,w,c
  3503  015220  B4D8               	btfsc	status,2,c
  3504  015222  D02B               	goto	l1553
  3505                           
  3506                           ;mconfig.c: 67:    set_vterm(0);
  3507  015224  0E00               	movlw	0
  3508  015226  6EE6               	movwf	postinc1,c
  3509  015228  ECA4  F0BD         	call	_set_vterm	;wreg free
  3510                           
  3511                           ; BSR set to: 4
  3512                           ;mconfig.c: 68:    V.help = 0;
  3513  01522C  0102               	movlb	2	; () banked
  3514  01522E  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  3515                           
  3516                           ; BSR set to: 2
  3517                           ;mconfig.c: 69:    set_display_info(display_help());
  3518  015230  EC79  F0BE         	call	_display_help	;wreg free
  3519  015234  5035               	movf	btemp^0,w,c
  3520  015236  6EE6               	movwf	postinc1,c
  3521  015238  EC5A  F0BD         	call	_set_display_info	;wreg free
  3522                           
  3523                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  3524  01523C  0060  FA7F  FFE6   	movff	_V+159,postinc1
  3525  015242  0060  FA83  FFE6   	movff	_V+160,postinc1
  3526  015248  ECD9  F0BD         	call	_mode_lamp_dim	;wreg free
  3527                           
  3528                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  3529  01524C  0E0B               	movlw	11
  3530  01524E  6EE6               	movwf	postinc1,c
  3531  015250  ECE5  F0BC         	call	_TimerDone	;wreg free
  3532  015254  5035               	movf	btemp^0,w,c
  3533  015256  B4D8               	btfsc	status,2,c
  3534  015258  D010               	goto	l1553
  3535                           
  3536                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  3537  01525A  0102               	movlb	2	; () banked
  3538  01525C  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  3539  01525E  A4D8               	btfss	status,2,c
  3540  015260  D002               	goto	u9730
  3541  015262  0E01               	movlw	1
  3542  015264  D001               	goto	u9740
  3543  015266                     u9730:
  3544  015266  0E00               	movlw	0
  3545  015268                     u9740:
  3546  015268  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  3547                           
  3548                           ; BSR set to: 2
  3549                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  3550  01526A  0EDC               	movlw	220
  3551  01526C  6EE6               	movwf	postinc1,c
  3552  01526E  0E05               	movlw	5
  3553  015270  6EE6               	movwf	postinc1,c
  3554  015272  0E0B               	movlw	11
  3555  015274  6EE6               	movwf	postinc1,c
  3556  015276  EC32  F0BA         	call	_StartTimer	;wreg free
  3557  01527A                     l1553:
  3558                           
  3559                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3560  01527A  52E5               	movf	postdec1,f,c
  3561  01527C  0012               	return		;funcret
  3562  01527E                     __end_of_check_help:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _vterm_dump *****************
  3566 ;; Defined at:
  3567 ;;		line 118 in file "mconfig.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1  [STACK] void 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3576 ;; Tracked objects:
  3577 ;;		On entry : 3F/2
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:   17
  3588 ;; This function calls:
  3589 ;;		_WaitMs
  3590 ;;		_eaDogM_WriteStringAtPos
  3591 ;;		_get_vterm_ptr
  3592 ;;		_sprintf
  3593 ;;		_wait_lcd_done
  3594 ;; This function is called by:
  3595 ;;		_check_help
  3596 ;; This function uses a reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text13
  3600  015C02                     __ptext13:
  3601                           	opt callstack 0
  3602  015C02                     _vterm_dump:
  3603                           	opt callstack 12
  3604                           
  3605                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  3606                           
  3607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3608                           ;incstack = 0
  3609  015C02  0E01               	movlw	1
  3610  015C04  6EE6               	movwf	postinc1,c
  3611  015C06  0E00               	movlw	0
  3612  015C08  6EE6               	movwf	postinc1,c
  3613  015C0A  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3614  015C0E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3615  015C14  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3616  015C1A  0E00               	movlw	0
  3617  015C1C  6EE6               	movwf	postinc1,c
  3618  015C1E  0E00               	movlw	0
  3619  015C20  6EE6               	movwf	postinc1,c
  3620  015C22  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3621  015C26  0060  F0D7  FFE6   	movff	btemp,postinc1
  3622  015C2C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3623  015C32  0E98               	movlw	low STR_20
  3624  015C34  6EE6               	movwf	postinc1,c
  3625  015C36  0EFF               	movlw	high STR_20
  3626  015C38  6EE6               	movwf	postinc1,c
  3627  015C3A  0E01               	movlw	low (_V+1)
  3628  015C3C  6EE6               	movwf	postinc1,c
  3629  015C3E  0E02               	movlw	high (_V+1)
  3630  015C40  6EE6               	movwf	postinc1,c
  3631  015C42  0E08               	movlw	8
  3632  015C44  6EE6               	movwf	postinc1,c
  3633  015C46  ECC7  F0B0         	call	_sprintf	;wreg free
  3634                           
  3635                           ;mconfig.c: 121:  wait_lcd_done();
  3636  015C4A  EC96  F0BD         	call	_wait_lcd_done	;wreg free
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  3640  015C4E  0E01               	movlw	low (_V+1)
  3641  015C50  6EE6               	movwf	postinc1,c
  3642  015C52  0E02               	movlw	high (_V+1)
  3643  015C54  6EE6               	movwf	postinc1,c
  3644  015C56  0E00               	movlw	0
  3645  015C58  6EE6               	movwf	postinc1,c
  3646  015C5A  0E00               	movlw	0
  3647  015C5C  6EE6               	movwf	postinc1,c
  3648  015C5E  ECA3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  3649                           
  3650                           ; BSR set to: 59
  3651                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  3652  015C62  0E01               	movlw	1
  3653  015C64  6EE6               	movwf	postinc1,c
  3654  015C66  0E01               	movlw	1
  3655  015C68  6EE6               	movwf	postinc1,c
  3656  015C6A  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3657  015C6E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3658  015C74  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3659  015C7A  0E00               	movlw	0
  3660  015C7C  6EE6               	movwf	postinc1,c
  3661  015C7E  0E01               	movlw	1
  3662  015C80  6EE6               	movwf	postinc1,c
  3663  015C82  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3664  015C86  0060  F0D7  FFE6   	movff	btemp,postinc1
  3665  015C8C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3666  015C92  0E98               	movlw	low STR_20
  3667  015C94  6EE6               	movwf	postinc1,c
  3668  015C96  0EFF               	movlw	high STR_20
  3669  015C98  6EE6               	movwf	postinc1,c
  3670  015C9A  0E01               	movlw	low (_V+1)
  3671  015C9C  6EE6               	movwf	postinc1,c
  3672  015C9E  0E02               	movlw	high (_V+1)
  3673  015CA0  6EE6               	movwf	postinc1,c
  3674  015CA2  0E08               	movlw	8
  3675  015CA4  6EE6               	movwf	postinc1,c
  3676  015CA6  ECC7  F0B0         	call	_sprintf	;wreg free
  3677                           
  3678                           ;mconfig.c: 124:  wait_lcd_done();
  3679  015CAA  EC96  F0BD         	call	_wait_lcd_done	;wreg free
  3680                           
  3681                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  3682  015CAE  0E01               	movlw	low (_V+1)
  3683  015CB0  6EE6               	movwf	postinc1,c
  3684  015CB2  0E02               	movlw	high (_V+1)
  3685  015CB4  6EE6               	movwf	postinc1,c
  3686  015CB6  0E00               	movlw	0
  3687  015CB8  6EE6               	movwf	postinc1,c
  3688  015CBA  0E01               	movlw	1
  3689  015CBC  6EE6               	movwf	postinc1,c
  3690  015CBE  ECA3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  3691                           
  3692                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  3693  015CC2  0E01               	movlw	1
  3694  015CC4  6EE6               	movwf	postinc1,c
  3695  015CC6  0E02               	movlw	2
  3696  015CC8  6EE6               	movwf	postinc1,c
  3697  015CCA  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3698  015CCE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3699  015CD4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3700  015CDA  0E00               	movlw	0
  3701  015CDC  6EE6               	movwf	postinc1,c
  3702  015CDE  0E02               	movlw	2
  3703  015CE0  6EE6               	movwf	postinc1,c
  3704  015CE2  EC3A  F0BB         	call	_get_vterm_ptr	;wreg free
  3705  015CE6  0060  F0D7  FFE6   	movff	btemp,postinc1
  3706  015CEC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3707  015CF2  0E98               	movlw	low STR_20
  3708  015CF4  6EE6               	movwf	postinc1,c
  3709  015CF6  0EFF               	movlw	high STR_20
  3710  015CF8  6EE6               	movwf	postinc1,c
  3711  015CFA  0E01               	movlw	low (_V+1)
  3712  015CFC  6EE6               	movwf	postinc1,c
  3713  015CFE  0E02               	movlw	high (_V+1)
  3714  015D00  6EE6               	movwf	postinc1,c
  3715  015D02  0E08               	movlw	8
  3716  015D04  6EE6               	movwf	postinc1,c
  3717  015D06  ECC7  F0B0         	call	_sprintf	;wreg free
  3718                           
  3719                           ;mconfig.c: 127:  wait_lcd_done();
  3720  015D0A  EC96  F0BD         	call	_wait_lcd_done	;wreg free
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  3724  015D0E  0E01               	movlw	low (_V+1)
  3725  015D10  6EE6               	movwf	postinc1,c
  3726  015D12  0E02               	movlw	high (_V+1)
  3727  015D14  6EE6               	movwf	postinc1,c
  3728  015D16  0E00               	movlw	0
  3729  015D18  6EE6               	movwf	postinc1,c
  3730  015D1A  0E02               	movlw	2
  3731  015D1C  6EE6               	movwf	postinc1,c
  3732  015D1E  ECA3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  3733                           
  3734                           ; BSR set to: 59
  3735                           ;mconfig.c: 129:  WaitMs(3000);
  3736  015D22  0EB8               	movlw	184
  3737  015D24  6EE6               	movwf	postinc1,c
  3738  015D26  0E0B               	movlw	11
  3739  015D28  6EE6               	movwf	postinc1,c
  3740  015D2A  EC88  F0BA         	call	_WaitMs	;wreg free
  3741                           
  3742                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3743  015D2E  0012               	return		;funcret
  3744  015D30                     __end_of_vterm_dump:
  3745                           	opt callstack 0
  3746                           
  3747 ;; *************** function _sprintf *****************
  3748 ;; Defined at:
  3749 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  s               2  [STACK] PTR unsigned char 
  3752 ;;		 -> D.lcd(216), D(218), V(189), 
  3753 ;;  fmt             2  [STACK] PTR const unsigned char 
  3754 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  3755 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  3756 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  3757 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  3758 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  3759 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  f               6  [STACK] struct _IO_FILE
  3762 ;;  ap              2  [STACK] PTR void [1]
  3763 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3764 ;;  ret             2    0        int 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  2  [STACK] int 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/4
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3778 ;;Total ram usage:        0 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:   14
  3781 ;; This function calls:
  3782 ;;		_vfprintf
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;;		_check_help
  3786 ;;		_vterm_dump
  3787 ;; This function uses a reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text14
  3791  01618E                     __ptext14:
  3792                           	opt callstack 0
  3793  01618E                     _sprintf:
  3794                           	opt callstack 0
  3795                           
  3796                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3797  01618E  0E08               	movlw	8
  3798  016190  26E1               	addwf	fsr1l,f,c
  3799  016192  0E00               	movlw	0
  3800  016194  22E2               	addwfc	fsr1h,f,c
  3801                           
  3802                           ;incstack = 0
  3803  016196  0EFE               	movlw	254
  3804  016198  6E3F               	movwf	(btemp+10)^0,c
  3805  01619A  0EFF               	movlw	255
  3806  01619C  6E40               	movwf	(btemp+11)^0,c
  3807                           
  3808                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  3809  01619E  0EF5               	movlw	245
  3810  0161A0  24E1               	addwf	fsr1l,w,c
  3811  0161A2  6E3D               	movwf	(btemp+8)^0,c
  3812  0161A4  0EFF               	movlw	255
  3813  0161A6  20E2               	addwfc	fsr1h,w,c
  3814  0161A8  6E3E               	movwf	(btemp+9)^0,c
  3815  0161AA  503F               	movf	(btemp+10)^0,w,c
  3816  0161AC  263D               	addwf	(btemp+8)^0,f,c
  3817  0161AE  5040               	movf	(btemp+11)^0,w,c
  3818  0161B0  223E               	addwfc	(btemp+9)^0,f,c
  3819                           
  3820                           ;stkvar	_ap @ sp[(-8)+6]
  3821  0161B2  0EFF               	movlw	-1
  3822  0161B4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3823  0161BA  0EFE               	movlw	-2
  3824  0161BC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3825                           
  3826                           ;stkvar	_s @ sp[(-8)+-3]
  3827  0161C2  0EF5               	movlw	-11
  3828  0161C4  006F FF8C  F03F    	movff	plusw1,btemp+10
  3829  0161CA  0EF6               	movlw	-10
  3830  0161CC  006F FF8C  F040    	movff	plusw1,btemp+11
  3831                           
  3832                           ;stkvar	_f @ sp[(-8)+0]
  3833  0161D2  0EF9               	movlw	-7
  3834  0161D4  0060  F103  FFE3   	movff	btemp+11,plusw1
  3835  0161DA  0EF8               	movlw	-8
  3836  0161DC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3837                           
  3838                           ;stkvar	_f @ sp[(-8)+0]
  3839  0161E2  0EFA               	movlw	250
  3840  0161E4  24E1               	addwf	fsr1l,w,c
  3841  0161E6  6ED9               	movwf	fsr2l,c
  3842  0161E8  0EFF               	movlw	255
  3843  0161EA  20E2               	addwfc	fsr1h,w,c
  3844  0161EC  6EDA               	movwf	fsr2h,c
  3845  0161EE  0E00               	movlw	0
  3846  0161F0  6EDE               	movwf	postinc2,c
  3847  0161F2  0E00               	movlw	0
  3848  0161F4  6EDD               	movwf	postdec2,c
  3849                           
  3850                           ;stkvar	_f @ sp[(-8)+0]
  3851  0161F6  0EFC               	movlw	252
  3852  0161F8  24E1               	addwf	fsr1l,w,c
  3853  0161FA  6ED9               	movwf	fsr2l,c
  3854  0161FC  0EFF               	movlw	255
  3855  0161FE  20E2               	addwfc	fsr1h,w,c
  3856  016200  6EDA               	movwf	fsr2h,c
  3857  016202  0E00               	movlw	0
  3858  016204  6EDE               	movwf	postinc2,c
  3859  016206  0E00               	movlw	0
  3860  016208  6EDD               	movwf	postdec2,c
  3861                           
  3862                           ;stkvar	_ap @ sp[(-8)+6]
  3863  01620A  0EFE               	movlw	254
  3864  01620C  24E1               	addwf	fsr1l,w,c
  3865  01620E  6E35               	movwf	btemp^0,c
  3866  016210  0EFF               	movlw	255
  3867  016212  20E2               	addwfc	fsr1h,w,c
  3868  016214  6E36               	movwf	(btemp+1)^0,c
  3869  016216  0060  F0D7  FFE6   	movff	btemp,postinc1
  3870  01621C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3871                           
  3872                           ;stkvar	_fmt @ sp[(-10)+-5]
  3873  016222  0EF1               	movlw	-15
  3874  016224  006F FF8F FFE6     	movff	plusw1,postinc1
  3875  01622A  006F FF8F FFE6     	movff	plusw1,postinc1
  3876                           
  3877                           ;stkvar	_f @ sp[(-12)+0]
  3878  016230  0EF4               	movlw	244
  3879  016232  24E1               	addwf	fsr1l,w,c
  3880  016234  6E35               	movwf	btemp^0,c
  3881  016236  0EFF               	movlw	255
  3882  016238  20E2               	addwfc	fsr1h,w,c
  3883  01623A  6E36               	movwf	(btemp+1)^0,c
  3884  01623C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3885  016242  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3886  016248  ECA4  F0B3         	call	_vfprintf	;wreg free
  3887                           
  3888                           ;stkvar	_f @ sp[(-8)+0]
  3889  01624C  0EFA               	movlw	250
  3890  01624E  24E1               	addwf	fsr1l,w,c
  3891  016250  6ED9               	movwf	fsr2l,c
  3892  016252  0EFF               	movlw	255
  3893  016254  20E2               	addwfc	fsr1h,w,c
  3894  016256  6EDA               	movwf	fsr2h,c
  3895  016258  006F FF78  F03F    	movff	postinc2,btemp+10
  3896  01625E  006F FF74  F040    	movff	postdec2,btemp+11
  3897                           
  3898                           ;stkvar	_s @ sp[(-8)+-3]
  3899  016264  0EF5               	movlw	-11
  3900  016266  006F FF8C  F03D    	movff	plusw1,btemp+8
  3901  01626C  0EF6               	movlw	-10
  3902  01626E  006F FF8C  F03E    	movff	plusw1,btemp+9
  3903  016274  503F               	movf	(btemp+10)^0,w,c
  3904  016276  243D               	addwf	(btemp+8)^0,w,c
  3905  016278  6ED9               	movwf	fsr2l,c
  3906  01627A  5040               	movf	(btemp+11)^0,w,c
  3907  01627C  203E               	addwfc	(btemp+9)^0,w,c
  3908  01627E  6EDA               	movwf	fsr2h,c
  3909  016280  0E00               	movlw	0
  3910  016282  6EDF               	movwf	indf2,c
  3911                           
  3912                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  3913  016284  0EF8               	movlw	248
  3914  016286  26E1               	addwf	fsr1l,f,c
  3915  016288  0EFF               	movlw	255
  3916  01628A  22E2               	addwfc	fsr1h,f,c
  3917  01628C  52E5               	movf	postdec1,f,c
  3918  01628E  50E7               	movf	indf1,w,c
  3919  016290  5EE1               	subwf	fsr1l,f,c
  3920  016292  0E00               	movlw	0
  3921  016294  5AE2               	subwfb	fsr1h,f,c
  3922  016296  0012               	return		;funcret
  3923  016298                     __end_of_sprintf:
  3924                           	opt callstack 0
  3925                           
  3926 ;; *************** function _get_vterm_ptr *****************
  3927 ;; Defined at:
  3928 ;;		line 113 in file "mconfig.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  line            1  [STACK] unsigned char 
  3931 ;;  vterm           1  [STACK] unsigned char 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  2  [STACK] PTR unsigned char 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/4
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3947 ;;Total ram usage:        0 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    6
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;;		_check_help
  3955 ;;		_vterm_dump
  3956 ;; This function uses a reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text15
  3960  017674                     __ptext15:
  3961                           	opt callstack 0
  3962  017674                     _get_vterm_ptr:
  3963                           	opt callstack 24
  3964                           
  3965                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  3966                           ;stkvar	_vterm @ sp[(0)+-2]
  3967                           
  3968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3969                           ;incstack = 0
  3970  017674  0EFE               	movlw	-2
  3971  017676  50E3               	movf	plusw1,w,c
  3972  017678  0B03               	andlw	3
  3973  01767A  0D36               	mullw	54
  3974  01767C  0E00               	movlw	low _D
  3975  01767E  6E35               	movwf	btemp^0,c
  3976  017680  0E04               	movlw	high _D
  3977  017682  6E36               	movwf	(btemp+1)^0,c
  3978  017684  50F3               	movf	243,w,c
  3979  017686  2635               	addwf	btemp^0,f,c
  3980  017688  50F4               	movf	244,w,c
  3981  01768A  2236               	addwfc	(btemp+1)^0,f,c
  3982                           
  3983                           ;stkvar	_line @ sp[(0)+-1]
  3984  01768C  0EFF               	movlw	-1
  3985  01768E  50E3               	movf	plusw1,w,c
  3986  017690  0B03               	andlw	3
  3987  017692  0D12               	mullw	18
  3988  017694  50F3               	movf	243,w,c
  3989  017696  2635               	addwf	btemp^0,f,c
  3990  017698  50F4               	movf	244,w,c
  3991  01769A  2236               	addwfc	(btemp+1)^0,f,c
  3992                           
  3993                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3994  01769C  52E5               	movf	postdec1,f,c
  3995  01769E  52E5               	movf	postdec1,f,c
  3996  0176A0  0012               	return		;funcret
  3997  0176A2                     __end_of_get_vterm_ptr:
  3998                           	opt callstack 0
  3999                           
  4000 ;; *************** function _WaitMs *****************
  4001 ;; Defined at:
  4002 ;;		line 32 in file "timers.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  numMilliseco    2  [STACK] const unsigned short 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1  [STACK] void 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/2
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    7
  4023 ;; This function calls:
  4024 ;;		_StartTimer
  4025 ;;		_TimerDone
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;;		_vterm_dump
  4029 ;; This function uses a reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text16
  4033  017510                     __ptext16:
  4034                           	opt callstack 0
  4035  017510                     _WaitMs:
  4036                           	opt callstack 21
  4037                           
  4038                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  4039                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4040                           
  4041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4042                           ;incstack = 0
  4043  017510  0EFE               	movlw	-2
  4044  017512  006F FF8F FFE6     	movff	plusw1,postinc1
  4045  017518  006F FF8F FFE6     	movff	plusw1,postinc1
  4046  01751E  0E00               	movlw	0
  4047  017520  6EE6               	movwf	postinc1,c
  4048  017522  EC32  F0BA         	call	_StartTimer	;wreg free
  4049                           
  4050                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4051  017526  D005               	goto	l7657
  4052  017528                     l1479:
  4053                           
  4054                           ;timers.c: 36:   __nop();
  4055  017528  F000               	nop	
  4056                           
  4057                           ;timers.c: 37:   __nop();
  4058  01752A  F000               	nop	
  4059                           
  4060                           ;timers.c: 38:   __nop();
  4061  01752C  F000               	nop	
  4062                           
  4063                           ;timers.c: 39:   __nop();
  4064  01752E  F000               	nop	
  4065  017530  0004               	clrwdt		;# 
  4066  017532                     l7657:
  4067                           
  4068                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4069  017532  0E00               	movlw	0
  4070  017534  6EE6               	movwf	postinc1,c
  4071  017536  ECE5  F0BC         	call	_TimerDone	;wreg free
  4072  01753A  5035               	movf	btemp^0,w,c
  4073  01753C  B4D8               	btfsc	status,2,c
  4074  01753E  D7F4               	goto	l1479
  4075                           
  4076                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4077  017540  52E5               	movf	postdec1,f,c
  4078  017542  52E5               	movf	postdec1,f,c
  4079  017544  0012               	return		;funcret
  4080  017546                     __end_of_WaitMs:
  4081                           	opt callstack 0
  4082                           
  4083 ;; *************** function _update_lcd *****************
  4084 ;; Defined at:
  4085 ;;		line 82 in file "mconfig.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  vterm           1  [STACK] unsigned char 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1  [STACK] unsigned char 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/4
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:   17
  4106 ;; This function calls:
  4107 ;;		_eaDogM_WriteStringAtPos
  4108 ;;		_wait_lcd_done
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;;		_check_help
  4112 ;; This function uses a reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text17
  4116  016080                     __ptext17:
  4117                           	opt callstack 0
  4118  016080                     _update_lcd:
  4119                           	opt callstack 13
  4120                           
  4121                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  4122                           ;stkvar	_vterm @ sp[(0)+-1]
  4123                           
  4124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4125                           ;incstack = 0
  4126  016080  0EFF               	movlw	-1
  4127  016082  006F FF8C  F035    	movff	plusw1,btemp
  4128  016088  0E03               	movlw	3
  4129  01608A  1635               	andwf	btemp^0,f,c
  4130  01608C  0EFF               	movlw	-1
  4131  01608E  0060  F0D7  FFE3   	movff	btemp,plusw1
  4132                           
  4133                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  4134  016094  0104               	movlb	4	; () banked
  4135  016096  A1D8               	btfss	(_D+216)& (0+255),0,b
  4136  016098  D004               	goto	l9517
  4137                           
  4138                           ; BSR set to: 4
  4139                           ;stkvar	_vterm @ sp[(0)+-1]
  4140  01609A  0EFF               	movlw	-1
  4141  01609C  50E3               	movf	plusw1,w,c
  4142  01609E  B4D8               	btfsc	status,2,c
  4143  0160A0  D074               	goto	l1557
  4144  0160A2                     l9517:
  4145                           
  4146                           ; BSR set to: 4
  4147                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  4148                           ;stkvar	_vterm @ sp[(0)+-1]
  4149  0160A2  0EFF               	movlw	-1
  4150  0160A4  50E3               	movf	plusw1,w,c
  4151  0160A6  0D36               	mullw	54
  4152  0160A8  0E10               	movlw	low (_D+16)
  4153  0160AA  24F3               	addwf	243,w,c
  4154  0160AC  6ED9               	movwf	fsr2l,c
  4155  0160AE  0E04               	movlw	high (_D+16)
  4156  0160B0  20F4               	addwfc	prodh,w,c
  4157  0160B2  6EDA               	movwf	fsr2h,c
  4158  0160B4  0E00               	movlw	0
  4159  0160B6  6EDF               	movwf	indf2,c
  4160                           
  4161                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  4162                           ;stkvar	_vterm @ sp[(0)+-1]
  4163  0160B8  0EFF               	movlw	-1
  4164  0160BA  50E3               	movf	plusw1,w,c
  4165  0160BC  0D36               	mullw	54
  4166  0160BE  0E22               	movlw	low (_D+34)
  4167  0160C0  24F3               	addwf	243,w,c
  4168  0160C2  6ED9               	movwf	fsr2l,c
  4169  0160C4  0E04               	movlw	high (_D+34)
  4170  0160C6  20F4               	addwfc	prodh,w,c
  4171  0160C8  6EDA               	movwf	fsr2h,c
  4172  0160CA  0E00               	movlw	0
  4173  0160CC  6EDF               	movwf	indf2,c
  4174                           
  4175                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  4176                           ;stkvar	_vterm @ sp[(0)+-1]
  4177  0160CE  0EFF               	movlw	-1
  4178  0160D0  50E3               	movf	plusw1,w,c
  4179  0160D2  0D36               	mullw	54
  4180  0160D4  0E34               	movlw	low (_D+52)
  4181  0160D6  24F3               	addwf	243,w,c
  4182  0160D8  6ED9               	movwf	fsr2l,c
  4183  0160DA  0E04               	movlw	high (_D+52)
  4184  0160DC  20F4               	addwfc	prodh,w,c
  4185  0160DE  6EDA               	movwf	fsr2h,c
  4186  0160E0  0E00               	movlw	0
  4187  0160E2  6EDF               	movwf	indf2,c
  4188                           
  4189                           ; BSR set to: 4
  4190                           ;mconfig.c: 92:  wait_lcd_done();
  4191  0160E4  EC96  F0BD         	call	_wait_lcd_done	;wreg free
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  4195                           ;stkvar	_vterm @ sp[(0)+-1]
  4196  0160E8  0EFF               	movlw	-1
  4197  0160EA  50E3               	movf	plusw1,w,c
  4198  0160EC  0D36               	mullw	54
  4199  0160EE  0E00               	movlw	low _D
  4200  0160F0  6E3F               	movwf	(btemp+10)^0,c
  4201  0160F2  0E04               	movlw	high _D
  4202  0160F4  6E40               	movwf	(btemp+11)^0,c
  4203  0160F6  50F3               	movf	243,w,c
  4204  0160F8  263F               	addwf	(btemp+10)^0,f,c
  4205  0160FA  50F4               	movf	244,w,c
  4206  0160FC  2240               	addwfc	(btemp+11)^0,f,c
  4207  0160FE  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4208  016104  0060  F103  FFE6   	movff	btemp+11,postinc1
  4209  01610A  0E00               	movlw	0
  4210  01610C  6EE6               	movwf	postinc1,c
  4211  01610E  0E00               	movlw	0
  4212  016110  6EE6               	movwf	postinc1,c
  4213  016112  ECA3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4214                           
  4215                           ; BSR set to: 59
  4216                           ;mconfig.c: 94:  wait_lcd_done();
  4217  016116  EC96  F0BD         	call	_wait_lcd_done	;wreg free
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  4221                           ;stkvar	_vterm @ sp[(0)+-1]
  4222  01611A  0EFF               	movlw	-1
  4223  01611C  50E3               	movf	plusw1,w,c
  4224  01611E  0D36               	mullw	54
  4225  016120  0E00               	movlw	low _D
  4226  016122  6E3F               	movwf	(btemp+10)^0,c
  4227  016124  0E04               	movlw	high _D
  4228  016126  6E40               	movwf	(btemp+11)^0,c
  4229  016128  0E12               	movlw	18
  4230  01612A  263F               	addwf	(btemp+10)^0,f,c
  4231  01612C  0E00               	movlw	0
  4232  01612E  2240               	addwfc	(btemp+11)^0,f,c
  4233  016130  50F3               	movf	243,w,c
  4234  016132  263F               	addwf	(btemp+10)^0,f,c
  4235  016134  50F4               	movf	244,w,c
  4236  016136  2240               	addwfc	(btemp+11)^0,f,c
  4237  016138  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4238  01613E  0060  F103  FFE6   	movff	btemp+11,postinc1
  4239  016144  0E00               	movlw	0
  4240  016146  6EE6               	movwf	postinc1,c
  4241  016148  0E01               	movlw	1
  4242  01614A  6EE6               	movwf	postinc1,c
  4243  01614C  ECA3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4244                           
  4245                           ; BSR set to: 59
  4246                           ;mconfig.c: 96:  wait_lcd_done();
  4247  016150  EC96  F0BD         	call	_wait_lcd_done	;wreg free
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  4251                           ;stkvar	_vterm @ sp[(0)+-1]
  4252  016154  0EFF               	movlw	-1
  4253  016156  50E3               	movf	plusw1,w,c
  4254  016158  0D36               	mullw	54
  4255  01615A  0E00               	movlw	low _D
  4256  01615C  6E3F               	movwf	(btemp+10)^0,c
  4257  01615E  0E04               	movlw	high _D
  4258  016160  6E40               	movwf	(btemp+11)^0,c
  4259  016162  0E24               	movlw	36
  4260  016164  263F               	addwf	(btemp+10)^0,f,c
  4261  016166  0E00               	movlw	0
  4262  016168  2240               	addwfc	(btemp+11)^0,f,c
  4263  01616A  50F3               	movf	243,w,c
  4264  01616C  263F               	addwf	(btemp+10)^0,f,c
  4265  01616E  50F4               	movf	244,w,c
  4266  016170  2240               	addwfc	(btemp+11)^0,f,c
  4267  016172  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4268  016178  0060  F103  FFE6   	movff	btemp+11,postinc1
  4269  01617E  0E00               	movlw	0
  4270  016180  6EE6               	movwf	postinc1,c
  4271  016182  0E02               	movlw	2
  4272  016184  6EE6               	movwf	postinc1,c
  4273  016186  ECA3  F0BA         	call	_eaDogM_WriteStringAtPos	;wreg free
  4274  01618A                     l1557:
  4275                           
  4276                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4277  01618A  52E5               	movf	postdec1,f,c
  4278  01618C  0012               	return		;funcret
  4279  01618E                     __end_of_update_lcd:
  4280                           	opt callstack 0
  4281                           
  4282 ;; *************** function _eaDogM_WriteStringAtPos *****************
  4283 ;; Defined at:
  4284 ;;		line 252 in file "eadog.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  r               1  [STACK] const unsigned char 
  4287 ;;  c               1  [STACK] const unsigned char 
  4288 ;;  strPtr          2  [STACK] PTR unsigned char 
  4289 ;;		 -> D.lcd(216), D(218), V(189), 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1  [STACK] void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4296 ;; Tracked objects:
  4297 ;;		On entry : 3F/0
  4298 ;;		On exit  : 3F/3B
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:   16
  4308 ;; This function calls:
  4309 ;;		_eaDogM_WriteString
  4310 ;;		_send_lcd_cmd_dma
  4311 ;; This function is called by:
  4312 ;;		_update_lcd
  4313 ;;		_vterm_dump
  4314 ;; This function uses a reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text18
  4318  017546                     __ptext18:
  4319                           	opt callstack 0
  4320  017546                     _eaDogM_WriteStringAtPos:
  4321                           	opt callstack 13
  4322                           
  4323                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  4324                           ;stkvar	_c @ sp[(0)+-2]
  4325                           
  4326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4327                           ;incstack = 0
  4328  017546  0EFE               	movlw	-2
  4329  017548  006F FF8C  F040    	movff	plusw1,btemp+11
  4330                           
  4331                           ;stkvar	_r @ sp[(0)+-1]
  4332  01754E  0EFF               	movlw	-1
  4333  017550  50E3               	movf	plusw1,w,c
  4334  017552  0D10               	mullw	16
  4335  017554  50F3               	movf	243,w,c
  4336  017556  2440               	addwf	(btemp+11)^0,w,c
  4337  017558  0F80               	addlw	128
  4338  01755A  6EE6               	movwf	postinc1,c
  4339  01755C  ECAA  F0B8         	call	_send_lcd_cmd_dma	;wreg free
  4340                           
  4341                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  4342                           ;stkvar	_strPtr @ sp[(0)+-4]
  4343  017560  0EFC               	movlw	-4
  4344  017562  006F FF8F FFE6     	movff	plusw1,postinc1
  4345  017568  006F FF8F FFE6     	movff	plusw1,postinc1
  4346  01756E  ECF8  F0B3         	call	_eaDogM_WriteString	;wreg free
  4347                           
  4348                           ; BSR set to: 59
  4349                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  4350  017572  52E5               	movf	postdec1,f,c
  4351  017574  52E5               	movf	postdec1,f,c
  4352  017576  52E5               	movf	postdec1,f,c
  4353  017578  52E5               	movf	postdec1,f,c
  4354  01757A  0012               	return		;funcret
  4355  01757C                     __end_of_eaDogM_WriteStringAtPos:
  4356                           	opt callstack 0
  4357                           
  4358 ;; *************** function _send_lcd_cmd_dma *****************
  4359 ;; Defined at:
  4360 ;;		line 205 in file "eadog.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  strPtr          1  [STACK] unsigned char 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1  [STACK] void 
  4367 ;; Registers used:
  4368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/3D
  4371 ;;		On exit  : 3F/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4378 ;;Total ram usage:        0 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:   15
  4381 ;; This function calls:
  4382 ;;		_printf
  4383 ;;		_ringBufS_flush
  4384 ;;		_start_lcd
  4385 ;;		_wait_lcd_done
  4386 ;;		_wait_lcd_set
  4387 ;; This function is called by:
  4388 ;;		_eaDogM_WriteCommand
  4389 ;;		_eaDogM_WriteStringAtPos
  4390 ;; This function uses a reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text19
  4394  017154                     __ptext19:
  4395                           	opt callstack 0
  4396  017154                     _send_lcd_cmd_dma:
  4397                           	opt callstack 13
  4398                           
  4399                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  4400                           
  4401                           ; BSR set to: 59
  4402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4403                           ;incstack = 0
  4404  017154  EC88  F0BE         	call	_wait_lcd_set	;wreg free
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  4408  017158  0E00               	movlw	0
  4409  01715A  6EE6               	movwf	postinc1,c
  4410  01715C  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  4411  017162  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  4412  017168  EC33  F0B5         	call	_ringBufS_flush	;wreg free
  4413  01716C  92BC               	bcf	188,1,c	;volatile
  4414  01716E  94BC               	bcf	188,2,c	;volatile
  4415                           
  4416                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  4417  017170  013B               	movlb	59	; () banked
  4418  017172  9FFC               	bcf	252,7,b	;volatile
  4419                           
  4420                           ; BSR set to: 59
  4421                           ;eadog.c: 214:  DMA1SSZ = 1;
  4422  017174  0E00               	movlw	0
  4423  017176  6FF8               	movwf	248,b	;volatile
  4424  017178  0E01               	movlw	1
  4425  01717A  6FF7               	movwf	247,b	;volatile
  4426                           
  4427                           ; BSR set to: 59
  4428                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  4429  01717C  8FFC               	bsf	252,7,b	;volatile
  4430                           
  4431                           ; BSR set to: 59
  4432                           ;eadog.c: 216:  printf("%c", strPtr);
  4433                           ;stkvar	_strPtr @ sp[(0)+-1]
  4434  01717E  0EFF               	movlw	-1
  4435  017180  50E3               	movf	plusw1,w,c
  4436  017182  6EE6               	movwf	postinc1,c
  4437  017184  0E00               	movlw	0
  4438  017186  6EE6               	movwf	postinc1,c
  4439  017188  0EF9               	movlw	low STR_12
  4440  01718A  6EE6               	movwf	postinc1,c
  4441  01718C  0EFF               	movlw	high STR_12
  4442  01718E  6EE6               	movwf	postinc1,c
  4443  017190  0E04               	movlw	4
  4444  017192  6EE6               	movwf	postinc1,c
  4445  017194  ECC1  F0B7         	call	_printf	;wreg free
  4446                           
  4447                           ;eadog.c: 217:  start_lcd();
  4448  017198  EC8B  F0BE         	call	_start_lcd	;wreg free
  4449                           
  4450                           ; BSR set to: 59
  4451                           ;eadog.c: 218:  wait_lcd_done();
  4452  01719C  EC96  F0BD         	call	_wait_lcd_done	;wreg free
  4453                           
  4454                           ; BSR set to: 0
  4455  0171A0  82BC               	bsf	188,1,c	;volatile
  4456                           
  4457                           ; BSR set to: 0
  4458                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4459  0171A2  52E5               	movf	postdec1,f,c
  4460  0171A4  0012               	return		;funcret
  4461  0171A6                     __end_of_send_lcd_cmd_dma:
  4462                           	opt callstack 0
  4463                           
  4464 ;; *************** function _wait_lcd_done *****************
  4465 ;; Defined at:
  4466 ;;		line 141 in file "eadog.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1  [STACK] void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/2
  4477 ;;		On exit  : 3F/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    7
  4487 ;; This function calls:
  4488 ;;		_wdtdelay
  4489 ;; This function is called by:
  4490 ;;		_send_lcd_cmd_dma
  4491 ;;		_update_lcd
  4492 ;;		_vterm_dump
  4493 ;; This function uses a reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text20
  4497  017B2C                     __ptext20:
  4498                           	opt callstack 0
  4499  017B2C                     _wait_lcd_done:
  4500                           	opt callstack 22
  4501                           
  4502                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  4503                           
  4504                           ; BSR set to: 0
  4505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4506                           ;incstack = 0
  4507  017B2C  0100               	movlb	0	; () banked
  4508  017B2E  B79A               	btfsc	_spi_link& (0+255),3,b	;volatile
  4509  017B30  D7FD               	goto	_wait_lcd_done
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;eadog.c: 144:  wdtdelay(50);
  4513  017B32  0E32               	movlw	50
  4514  017B34  6EE6               	movwf	postinc1,c
  4515  017B36  0E00               	movlw	0
  4516  017B38  6EE6               	movwf	postinc1,c
  4517  017B3A  0E00               	movlw	0
  4518  017B3C  6EE6               	movwf	postinc1,c
  4519  017B3E  0E00               	movlw	0
  4520  017B40  6EE6               	movwf	postinc1,c
  4521  017B42  EC50  F0B8         	call	_wdtdelay	;wreg free
  4522                           
  4523                           ; BSR set to: 0
  4524                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4525  017B46  0012               	return		;funcret
  4526  017B48                     __end_of_wait_lcd_done:
  4527                           	opt callstack 0
  4528                           
  4529 ;; *************** function _wdtdelay *****************
  4530 ;; Defined at:
  4531 ;;		line 22 in file "eadog.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  delay           4  [STACK] const unsigned long 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1  [STACK] void 
  4538 ;; Registers used:
  4539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 3F/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    6
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_init_display
  4556 ;;		_send_lcd_cmd
  4557 ;;		_send_lcd_cmd_long
  4558 ;;		_wait_lcd_done
  4559 ;; This function uses a reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text21
  4563  0170A0                     __ptext21:
  4564                           	opt callstack 0
  4565  0170A0                     _wdtdelay:
  4566                           	opt callstack 22
  4567                           
  4568                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  4569                           
  4570                           ; BSR set to: 0
  4571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4572                           ;incstack = 0
  4573  0170A0  0100               	movlb	0	; () banked
  4574  0170A2  6BAE               	clrf	wdtdelay@dcount& (0+255),b
  4575  0170A4  6BAF               	clrf	(wdtdelay@dcount+1)& (0+255),b
  4576  0170A6  6BB0               	clrf	(wdtdelay@dcount+2)& (0+255),b
  4577  0170A8  6BB1               	clrf	(wdtdelay@dcount+3)& (0+255),b
  4578  0170AA                     l1324:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;eadog.c: 27:   __nop();
  4582  0170AA  F000               	nop	
  4583  0170AC  0004               	clrwdt		;# 
  4584                           
  4585                           ;eadog.c: 29:  };
  4586  0170AE  0E01               	movlw	1
  4587  0170B0  0100               	movlb	0	; () banked
  4588  0170B2  27AE               	addwf	wdtdelay@dcount& (0+255),f,b
  4589  0170B4  0E00               	movlw	0
  4590  0170B6  23AF               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  4591  0170B8  23B0               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  4592  0170BA  23B1               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;stkvar	_delay @ sp[(0)+-4]
  4596  0170BC  0EFC               	movlw	-4
  4597  0170BE  006F FF8C  F035    	movff	plusw1,btemp
  4598  0170C4  51AE               	movf	wdtdelay@dcount& (0+255),w,b
  4599  0170C6  5C35               	subwf	btemp^0,w,c
  4600  0170C8  0EFD               	movlw	-3
  4601  0170CA  006F FF8C  F035    	movff	plusw1,btemp
  4602  0170D0  51AF               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  4603  0170D2  5835               	subwfb	btemp^0,w,c
  4604  0170D4  0EFE               	movlw	-2
  4605  0170D6  006F FF8C  F035    	movff	plusw1,btemp
  4606  0170DC  51B0               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  4607  0170DE  5835               	subwfb	btemp^0,w,c
  4608  0170E0  0EFF               	movlw	-1
  4609  0170E2  006F FF8C  F035    	movff	plusw1,btemp
  4610  0170E8  51B1               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  4611  0170EA  5835               	subwfb	btemp^0,w,c
  4612  0170EC  B0D8               	btfsc	status,0,c
  4613  0170EE  D7DD               	goto	l1324
  4614                           
  4615                           ; BSR set to: 0
  4616                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  4617  0170F0  52E5               	movf	postdec1,f,c
  4618  0170F2  52E5               	movf	postdec1,f,c
  4619  0170F4  52E5               	movf	postdec1,f,c
  4620  0170F6  52E5               	movf	postdec1,f,c
  4621  0170F8  0012               	return		;funcret
  4622  0170FA                     __end_of_wdtdelay:
  4623                           	opt callstack 0
  4624                           
  4625 ;; *************** function _eaDogM_WriteString *****************
  4626 ;; Defined at:
  4627 ;;		line 184 in file "eadog.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  strPtr          2  [STACK] PTR unsigned char 
  4630 ;;		 -> D.lcd(216), D(218), V(189), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1  [STACK] void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4637 ;; Tracked objects:
  4638 ;;		On entry : 3F/0
  4639 ;;		On exit  : 3F/3B
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:   15
  4649 ;; This function calls:
  4650 ;;		_printf
  4651 ;;		_ringBufS_flush
  4652 ;;		_start_lcd
  4653 ;;		_strlen
  4654 ;;		_wait_lcd_set
  4655 ;; This function is called by:
  4656 ;;		_eaDogM_WriteStringAtPos
  4657 ;; This function uses a reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text22
  4661  0167F0                     __ptext22:
  4662                           	opt callstack 0
  4663  0167F0                     _eaDogM_WriteString:
  4664                           	opt callstack 13
  4665                           
  4666                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  4667                           
  4668                           ; BSR set to: 0
  4669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4670                           ;incstack = 0
  4671  0167F0  EC88  F0BE         	call	_wait_lcd_set	;wreg free
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  4675  0167F4  0E00               	movlw	0
  4676  0167F6  6EE6               	movwf	postinc1,c
  4677  0167F8  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  4678  0167FE  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  4679  016804  EC33  F0B5         	call	_ringBufS_flush	;wreg free
  4680  016808  94BC               	bcf	188,2,c	;volatile
  4681                           
  4682                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4683                           ;stkvar	_strPtr @ sp[(0)+-2]
  4684  01680A  0EFE               	movlw	-2
  4685  01680C  006F FF8F FFE6     	movff	plusw1,postinc1
  4686  016812  006F FF8F FFE6     	movff	plusw1,postinc1
  4687  016818  EC4B  F0B4         	call	_strlen	;wreg free
  4688  01681C  5036               	movf	(btemp+1)^0,w,c
  4689  01681E  E104               	bnz	u9640
  4690  016820  0E41               	movlw	65
  4691  016822  5C35               	subwf	btemp^0,w,c
  4692  016824  A0D8               	btfss	status,0,c
  4693  016826  D010               	goto	l9483
  4694  016828                     u9640:
  4695                           
  4696                           ;stkvar	_strPtr @ sp[(0)+-2]
  4697  016828  0EFE               	movlw	-2
  4698  01682A  006F FF8C  F03F    	movff	plusw1,btemp+10
  4699  016830  0EFF               	movlw	-1
  4700  016832  006F FF8C  F040    	movff	plusw1,btemp+11
  4701  016838  0E40               	movlw	64
  4702  01683A  243F               	addwf	(btemp+10)^0,w,c
  4703  01683C  6ED9               	movwf	fsr2l,c
  4704  01683E  0E00               	movlw	0
  4705  016840  2040               	addwfc	(btemp+11)^0,w,c
  4706  016842  6EDA               	movwf	fsr2h,c
  4707  016844  0E00               	movlw	0
  4708  016846  6EDF               	movwf	indf2,c
  4709  016848                     l9483:
  4710                           
  4711                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  4712  016848  013B               	movlb	59	; () banked
  4713  01684A  9FFC               	bcf	252,7,b	;volatile
  4714                           
  4715                           ; BSR set to: 59
  4716                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  4717                           ;stkvar	_strPtr @ sp[(0)+-2]
  4718  01684C  0EFE               	movlw	-2
  4719  01684E  006F FF8F FFE6     	movff	plusw1,postinc1
  4720  016854  006F FF8F FFE6     	movff	plusw1,postinc1
  4721  01685A  EC4B  F0B4         	call	_strlen	;wreg free
  4722  01685E  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  4723  016864  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  4724                           
  4725                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  4726  01686A  013B               	movlb	59	; () banked
  4727  01686C  8FFC               	bsf	252,7,b	;volatile
  4728                           
  4729                           ; BSR set to: 59
  4730                           ;eadog.c: 195:  printf("%s", strPtr);
  4731                           ;stkvar	_strPtr @ sp[(0)+-2]
  4732  01686E  0EFE               	movlw	-2
  4733  016870  006F FF8F FFE6     	movff	plusw1,postinc1
  4734  016876  006F FF8F FFE6     	movff	plusw1,postinc1
  4735  01687C  0EFC               	movlw	low STR_11
  4736  01687E  6EE6               	movwf	postinc1,c
  4737  016880  0EFF               	movlw	high STR_11
  4738  016882  6EE6               	movwf	postinc1,c
  4739  016884  0E04               	movlw	4
  4740  016886  6EE6               	movwf	postinc1,c
  4741  016888  ECC1  F0B7         	call	_printf	;wreg free
  4742                           
  4743                           ;eadog.c: 196:  start_lcd();
  4744  01688C  EC8B  F0BE         	call	_start_lcd	;wreg free
  4745                           
  4746                           ; BSR set to: 59
  4747                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  4748  016890  52E5               	movf	postdec1,f,c
  4749  016892  52E5               	movf	postdec1,f,c
  4750  016894  0012               	return		;funcret
  4751  016896                     __end_of_eaDogM_WriteString:
  4752                           	opt callstack 0
  4753                           
  4754 ;; *************** function _wait_lcd_set *****************
  4755 ;; Defined at:
  4756 ;;		line 131 in file "eadog.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1  [STACK] void 
  4763 ;; Registers used:
  4764 ;;		None
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/3D
  4767 ;;		On exit  : 3F/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4774 ;;Total ram usage:        0 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    6
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_eaDogM_WriteString
  4781 ;;		_send_lcd_cmd_dma
  4782 ;; This function uses a reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text23
  4786  017D10                     __ptext23:
  4787                           	opt callstack 0
  4788  017D10                     _wait_lcd_set:
  4789                           	opt callstack 21
  4790                           
  4791                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  4792                           
  4793                           ; BSR set to: 59
  4794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4795                           ;incstack = 0
  4796  017D10  0100               	movlb	0	; () banked
  4797  017D12  879A               	bsf	_spi_link& (0+255),3,b	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4801  017D14  0012               	return		;funcret
  4802  017D16                     __end_of_wait_lcd_set:
  4803                           	opt callstack 0
  4804                           
  4805 ;; *************** function _start_lcd *****************
  4806 ;; Defined at:
  4807 ;;		line 126 in file "eadog.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1  [STACK] void 
  4814 ;; Registers used:
  4815 ;;		None
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/3B
  4818 ;;		On exit  : 3F/3B
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4825 ;;Total ram usage:        0 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    6
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_eaDogM_WriteString
  4832 ;;		_send_lcd_cmd_dma
  4833 ;; This function uses a reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text24
  4837  017D16                     __ptext24:
  4838                           	opt callstack 0
  4839  017D16                     _start_lcd:
  4840                           	opt callstack 21
  4841                           
  4842                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  4843                           
  4844                           ; BSR set to: 0
  4845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4846                           ;incstack = 0
  4847  017D16  013B               	movlb	59	; () banked
  4848  017D18  8DFC               	bsf	252,6,b	;volatile
  4849                           
  4850                           ; BSR set to: 59
  4851                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4852  017D1A  0012               	return		;funcret
  4853  017D1C                     __end_of_start_lcd:
  4854                           	opt callstack 0
  4855                           
  4856 ;; *************** function _ringBufS_flush *****************
  4857 ;; Defined at:
  4858 ;;		line 76 in file "ringbufs.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  _this           2  [STACK] PTR struct ringBufS_t
  4861 ;;		 -> ring_buf1(67), 
  4862 ;;  clearBuffer     1  [STACK] const char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1  [STACK] void 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4869 ;; Tracked objects:
  4870 ;;		On entry : 3F/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    7
  4881 ;; This function calls:
  4882 ;;		_memset
  4883 ;; This function is called by:
  4884 ;;		_eaDogM_WriteString
  4885 ;;		_send_lcd_cmd_dma
  4886 ;; This function uses a reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text25
  4890  016A66                     __ptext25:
  4891                           	opt callstack 0
  4892  016A66                     _ringBufS_flush:
  4893                           	opt callstack 20
  4894                           
  4895                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  4896                           ;stkvar	__this @ sp[(0)+-2]
  4897                           
  4898                           ; BSR set to: 59
  4899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4900                           ;incstack = 0
  4901  016A66  0EFE               	movlw	-2
  4902  016A68  006F FF8C  F03F    	movff	plusw1,btemp+10
  4903  016A6E  0EFF               	movlw	-1
  4904  016A70  006F FF8C  F040    	movff	plusw1,btemp+11
  4905  016A76  0E42               	movlw	66
  4906  016A78  243F               	addwf	(btemp+10)^0,w,c
  4907  016A7A  6ED9               	movwf	fsr2l,c
  4908  016A7C  0E00               	movlw	0
  4909  016A7E  2040               	addwfc	(btemp+11)^0,w,c
  4910  016A80  6EDA               	movwf	fsr2h,c
  4911  016A82  0E00               	movlw	0
  4912  016A84  6EDF               	movwf	indf2,c
  4913                           
  4914                           ;ringbufs.c: 79:  _this->head = 0;
  4915                           ;stkvar	__this @ sp[(0)+-2]
  4916  016A86  0EFE               	movlw	-2
  4917  016A88  006F FF8C  F03F    	movff	plusw1,btemp+10
  4918  016A8E  0EFF               	movlw	-1
  4919  016A90  006F FF8C  F040    	movff	plusw1,btemp+11
  4920  016A96  0E40               	movlw	64
  4921  016A98  243F               	addwf	(btemp+10)^0,w,c
  4922  016A9A  6ED9               	movwf	fsr2l,c
  4923  016A9C  0E00               	movlw	0
  4924  016A9E  2040               	addwfc	(btemp+11)^0,w,c
  4925  016AA0  6EDA               	movwf	fsr2h,c
  4926  016AA2  0E00               	movlw	0
  4927  016AA4  6EDF               	movwf	indf2,c
  4928                           
  4929                           ;ringbufs.c: 80:  _this->tail = 0;
  4930                           ;stkvar	__this @ sp[(0)+-2]
  4931  016AA6  0EFE               	movlw	-2
  4932  016AA8  006F FF8C  F03F    	movff	plusw1,btemp+10
  4933  016AAE  0EFF               	movlw	-1
  4934  016AB0  006F FF8C  F040    	movff	plusw1,btemp+11
  4935  016AB6  0E41               	movlw	65
  4936  016AB8  243F               	addwf	(btemp+10)^0,w,c
  4937  016ABA  6ED9               	movwf	fsr2l,c
  4938  016ABC  0E00               	movlw	0
  4939  016ABE  2040               	addwfc	(btemp+11)^0,w,c
  4940  016AC0  6EDA               	movwf	fsr2h,c
  4941  016AC2  0E00               	movlw	0
  4942  016AC4  6EDF               	movwf	indf2,c
  4943                           
  4944                           ;ringbufs.c: 81:  if (clearBuffer) {
  4945                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  4946  016AC6  0EFD               	movlw	-3
  4947  016AC8  50E3               	movf	plusw1,w,c
  4948  016ACA  B4D8               	btfsc	status,2,c
  4949  016ACC  D011               	goto	l1464
  4950                           
  4951                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  4952  016ACE  0E40               	movlw	64
  4953  016AD0  6EE6               	movwf	postinc1,c
  4954  016AD2  0E00               	movlw	0
  4955  016AD4  6EE6               	movwf	postinc1,c
  4956  016AD6  0E00               	movlw	0
  4957  016AD8  6EE6               	movwf	postinc1,c
  4958  016ADA  0E00               	movlw	0
  4959  016ADC  6EE6               	movwf	postinc1,c
  4960                           
  4961                           ;stkvar	__this @ sp[(-4)+-2]
  4962  016ADE  0EFA               	movlw	-6
  4963  016AE0  006F FF8F FFE6     	movff	plusw1,postinc1
  4964  016AE6  006F FF8F FFE6     	movff	plusw1,postinc1
  4965  016AEC  ECC7  F0A1         	call	_memset	;wreg free
  4966  016AF0                     l1464:
  4967                           
  4968                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  4969  016AF0  52E5               	movf	postdec1,f,c
  4970  016AF2  52E5               	movf	postdec1,f,c
  4971  016AF4  52E5               	movf	postdec1,f,c
  4972  016AF6  0012               	return		;funcret
  4973  016AF8                     __end_of_ringBufS_flush:
  4974                           	opt callstack 0
  4975                           
  4976 ;; *************** function _memset *****************
  4977 ;; Defined at:
  4978 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  dest            2  [STACK] PTR void 
  4981 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4982 ;;  c               2  [STACK] int 
  4983 ;;  n               2  [STACK] unsigned int 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  s               2  [STACK] PTR unsigned char 
  4986 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4987 ;;  k               2  [STACK] unsigned int 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  2  [STACK] PTR void 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    6
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_ringBufS_init
  5008 ;;		_ringBufS_flush
  5009 ;; This function uses a reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text26
  5013  01438E                     __ptext26:
  5014                           	opt callstack 0
  5015  01438E                     _memset:
  5016                           	opt callstack 0
  5017                           
  5018                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5019  01438E  52E6               	movf	postinc1,f,c
  5020  014390  52E6               	movf	postinc1,f,c
  5021  014392  52E6               	movf	postinc1,f,c
  5022  014394  52E6               	movf	postinc1,f,c
  5023                           
  5024                           ;stkvar	_dest @ sp[(-4)+-2]
  5025                           
  5026                           ;incstack = 0
  5027  014396  0EFA               	movlw	-6
  5028  014398  006F FF8C  F03F    	movff	plusw1,btemp+10
  5029  01439E  0EFB               	movlw	-5
  5030  0143A0  006F FF8C  F040    	movff	plusw1,btemp+11
  5031                           
  5032                           ;stkvar	_s @ sp[(-4)+0]
  5033  0143A6  0EFD               	movlw	-3
  5034  0143A8  0060  F103  FFE3   	movff	btemp+11,plusw1
  5035  0143AE  0EFC               	movlw	-4
  5036  0143B0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5037                           
  5038                           ;stkvar	_n @ sp[(-4)+-6]
  5039  0143B6  0EF6               	movlw	-10
  5040  0143B8  006F FF8C  F035    	movff	plusw1,btemp
  5041  0143BE  0EF7               	movlw	-9
  5042  0143C0  50E3               	movf	plusw1,w,c
  5043  0143C2  1035               	iorwf	btemp^0,w,c
  5044  0143C4  B4D8               	btfsc	status,2,c
  5045  0143C6  D154               	goto	u9610
  5046                           
  5047                           ;stkvar	_c @ sp[(-4)+-4]
  5048                           ;stkvar	_s @ sp[(-4)+0]
  5049  0143C8  0EFC               	movlw	-4
  5050  0143CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  5051  0143D0  0EFD               	movlw	-3
  5052  0143D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  5053  0143D8  0EF8               	movlw	-8
  5054  0143DA  006F FF8F FFDF     	movff	plusw1,indf2
  5055                           
  5056                           ;stkvar	_c @ sp[(-4)+-4]
  5057                           ;stkvar	_n @ sp[(-4)+-6]
  5058                           ;stkvar	_s @ sp[(-4)+0]
  5059  0143E0  0EFC               	movlw	-4
  5060  0143E2  006F FF8C  F03F    	movff	plusw1,btemp+10
  5061  0143E8  0EFD               	movlw	-3
  5062  0143EA  006F FF8C  F040    	movff	plusw1,btemp+11
  5063  0143F0  0EF6               	movlw	-10
  5064  0143F2  50E3               	movf	plusw1,w,c
  5065  0143F4  263F               	addwf	(btemp+10)^0,f,c
  5066  0143F6  0EF7               	movlw	-9
  5067  0143F8  50E3               	movf	plusw1,w,c
  5068  0143FA  2240               	addwfc	(btemp+11)^0,f,c
  5069  0143FC  0EFF               	movlw	255
  5070  0143FE  243F               	addwf	(btemp+10)^0,w,c
  5071  014400  6ED9               	movwf	fsr2l,c
  5072  014402  0EFF               	movlw	255
  5073  014404  2040               	addwfc	(btemp+11)^0,w,c
  5074  014406  6EDA               	movwf	fsr2h,c
  5075  014408  0EF8               	movlw	-8
  5076  01440A  006F FF8F FFDF     	movff	plusw1,indf2
  5077                           
  5078                           ;stkvar	_n @ sp[(-4)+-6]
  5079  014410  0EF7               	movlw	-9
  5080  014412  50E3               	movf	plusw1,w,c
  5081  014414  E108               	bnz	l9399
  5082  014416  0EF6               	movlw	-10
  5083  014418  006F FF8C  F035    	movff	plusw1,btemp
  5084  01441E  0E03               	movlw	3
  5085  014420  5E35               	subwf	btemp^0,f,c
  5086  014422  A0D8               	btfss	status,0,c
  5087  014424  D125               	goto	u9610
  5088  014426                     l9399:
  5089                           
  5090                           ;stkvar	_c @ sp[(-4)+-4]
  5091                           ;stkvar	_s @ sp[(-4)+0]
  5092  014426  0EFC               	movlw	-4
  5093  014428  006F FF8C  F03F    	movff	plusw1,btemp+10
  5094  01442E  0EFD               	movlw	-3
  5095  014430  006F FF8C  F040    	movff	plusw1,btemp+11
  5096  014436  0E01               	movlw	1
  5097  014438  243F               	addwf	(btemp+10)^0,w,c
  5098  01443A  6ED9               	movwf	fsr2l,c
  5099  01443C  0E00               	movlw	0
  5100  01443E  2040               	addwfc	(btemp+11)^0,w,c
  5101  014440  6EDA               	movwf	fsr2h,c
  5102  014442  0EF8               	movlw	-8
  5103  014444  006F FF8F FFDF     	movff	plusw1,indf2
  5104                           
  5105                           ;stkvar	_c @ sp[(-4)+-4]
  5106                           ;stkvar	_s @ sp[(-4)+0]
  5107  01444A  0EFC               	movlw	-4
  5108  01444C  006F FF8C  F03F    	movff	plusw1,btemp+10
  5109  014452  0EFD               	movlw	-3
  5110  014454  006F FF8C  F040    	movff	plusw1,btemp+11
  5111  01445A  0E02               	movlw	2
  5112  01445C  243F               	addwf	(btemp+10)^0,w,c
  5113  01445E  6ED9               	movwf	fsr2l,c
  5114  014460  0E00               	movlw	0
  5115  014462  2040               	addwfc	(btemp+11)^0,w,c
  5116  014464  6EDA               	movwf	fsr2h,c
  5117  014466  0EF8               	movlw	-8
  5118  014468  006F FF8F FFDF     	movff	plusw1,indf2
  5119                           
  5120                           ;stkvar	_c @ sp[(-4)+-4]
  5121                           ;stkvar	_n @ sp[(-4)+-6]
  5122                           ;stkvar	_s @ sp[(-4)+0]
  5123  01446E  0EFC               	movlw	-4
  5124  014470  006F FF8C  F03F    	movff	plusw1,btemp+10
  5125  014476  0EFD               	movlw	-3
  5126  014478  006F FF8C  F040    	movff	plusw1,btemp+11
  5127  01447E  0EF6               	movlw	-10
  5128  014480  50E3               	movf	plusw1,w,c
  5129  014482  263F               	addwf	(btemp+10)^0,f,c
  5130  014484  0EF7               	movlw	-9
  5131  014486  50E3               	movf	plusw1,w,c
  5132  014488  2240               	addwfc	(btemp+11)^0,f,c
  5133  01448A  0EFE               	movlw	254
  5134  01448C  243F               	addwf	(btemp+10)^0,w,c
  5135  01448E  6ED9               	movwf	fsr2l,c
  5136  014490  0EFF               	movlw	255
  5137  014492  2040               	addwfc	(btemp+11)^0,w,c
  5138  014494  6EDA               	movwf	fsr2h,c
  5139  014496  0EF8               	movlw	-8
  5140  014498  006F FF8F FFDF     	movff	plusw1,indf2
  5141                           
  5142                           ;stkvar	_c @ sp[(-4)+-4]
  5143                           ;stkvar	_n @ sp[(-4)+-6]
  5144                           ;stkvar	_s @ sp[(-4)+0]
  5145  01449E  0EFC               	movlw	-4
  5146  0144A0  006F FF8C  F03F    	movff	plusw1,btemp+10
  5147  0144A6  0EFD               	movlw	-3
  5148  0144A8  006F FF8C  F040    	movff	plusw1,btemp+11
  5149  0144AE  0EF6               	movlw	-10
  5150  0144B0  50E3               	movf	plusw1,w,c
  5151  0144B2  263F               	addwf	(btemp+10)^0,f,c
  5152  0144B4  0EF7               	movlw	-9
  5153  0144B6  50E3               	movf	plusw1,w,c
  5154  0144B8  2240               	addwfc	(btemp+11)^0,f,c
  5155  0144BA  0EFD               	movlw	253
  5156  0144BC  243F               	addwf	(btemp+10)^0,w,c
  5157  0144BE  6ED9               	movwf	fsr2l,c
  5158  0144C0  0EFF               	movlw	255
  5159  0144C2  2040               	addwfc	(btemp+11)^0,w,c
  5160  0144C4  6EDA               	movwf	fsr2h,c
  5161  0144C6  0EF8               	movlw	-8
  5162  0144C8  006F FF8F FFDF     	movff	plusw1,indf2
  5163                           
  5164                           ;stkvar	_n @ sp[(-4)+-6]
  5165  0144CE  0EF7               	movlw	-9
  5166  0144D0  50E3               	movf	plusw1,w,c
  5167  0144D2  E108               	bnz	l9405
  5168  0144D4  0EF6               	movlw	-10
  5169  0144D6  006F FF8C  F035    	movff	plusw1,btemp
  5170  0144DC  0E07               	movlw	7
  5171  0144DE  5E35               	subwf	btemp^0,f,c
  5172  0144E0  A0D8               	btfss	status,0,c
  5173  0144E2  D0C6               	goto	u9610
  5174  0144E4                     l9405:
  5175                           
  5176                           ;stkvar	_c @ sp[(-4)+-4]
  5177                           ;stkvar	_s @ sp[(-4)+0]
  5178  0144E4  0EFC               	movlw	-4
  5179  0144E6  006F FF8C  F03F    	movff	plusw1,btemp+10
  5180  0144EC  0EFD               	movlw	-3
  5181  0144EE  006F FF8C  F040    	movff	plusw1,btemp+11
  5182  0144F4  0E03               	movlw	3
  5183  0144F6  243F               	addwf	(btemp+10)^0,w,c
  5184  0144F8  6ED9               	movwf	fsr2l,c
  5185  0144FA  0E00               	movlw	0
  5186  0144FC  2040               	addwfc	(btemp+11)^0,w,c
  5187  0144FE  6EDA               	movwf	fsr2h,c
  5188  014500  0EF8               	movlw	-8
  5189  014502  006F FF8F FFDF     	movff	plusw1,indf2
  5190                           
  5191                           ;stkvar	_c @ sp[(-4)+-4]
  5192                           ;stkvar	_n @ sp[(-4)+-6]
  5193                           ;stkvar	_s @ sp[(-4)+0]
  5194  014508  0EFC               	movlw	-4
  5195  01450A  006F FF8C  F03F    	movff	plusw1,btemp+10
  5196  014510  0EFD               	movlw	-3
  5197  014512  006F FF8C  F040    	movff	plusw1,btemp+11
  5198  014518  0EF6               	movlw	-10
  5199  01451A  50E3               	movf	plusw1,w,c
  5200  01451C  263F               	addwf	(btemp+10)^0,f,c
  5201  01451E  0EF7               	movlw	-9
  5202  014520  50E3               	movf	plusw1,w,c
  5203  014522  2240               	addwfc	(btemp+11)^0,f,c
  5204  014524  0EFC               	movlw	252
  5205  014526  243F               	addwf	(btemp+10)^0,w,c
  5206  014528  6ED9               	movwf	fsr2l,c
  5207  01452A  0EFF               	movlw	255
  5208  01452C  2040               	addwfc	(btemp+11)^0,w,c
  5209  01452E  6EDA               	movwf	fsr2h,c
  5210  014530  0EF8               	movlw	-8
  5211  014532  006F FF8F FFDF     	movff	plusw1,indf2
  5212                           
  5213                           ;stkvar	_n @ sp[(-4)+-6]
  5214  014538  0EF7               	movlw	-9
  5215  01453A  50E3               	movf	plusw1,w,c
  5216  01453C  E108               	bnz	l9411
  5217  01453E  0EF6               	movlw	-10
  5218  014540  006F FF8C  F035    	movff	plusw1,btemp
  5219  014546  0E09               	movlw	9
  5220  014548  5E35               	subwf	btemp^0,f,c
  5221  01454A  A0D8               	btfss	status,0,c
  5222  01454C  D091               	goto	u9610
  5223  01454E                     l9411:
  5224                           
  5225                           ;stkvar	_s @ sp[(-4)+0]
  5226  01454E  0EFC               	movlw	-4
  5227  014550  006F FF8C  F03F    	movff	plusw1,btemp+10
  5228  014556  1E3F               	comf	(btemp+10)^0,f,c
  5229  014558  0EFD               	movlw	-3
  5230  01455A  006F FF8C  F040    	movff	plusw1,btemp+11
  5231  014560  1E40               	comf	(btemp+11)^0,f,c
  5232  014562  2A3F               	incf	(btemp+10)^0,f,c
  5233  014564  B4D8               	btfsc	status,2,c
  5234  014566  2A40               	incf	(btemp+11)^0,f,c
  5235  014568  0E03               	movlw	3
  5236  01456A  163F               	andwf	(btemp+10)^0,f,c
  5237  01456C  0E00               	movlw	0
  5238  01456E  1640               	andwf	(btemp+11)^0,f,c
  5239                           
  5240                           ;stkvar	_k @ sp[(-4)+2]
  5241  014570  0EFE               	movlw	-2
  5242  014572  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5243  014578  0EFF               	movlw	-1
  5244  01457A  0060  F103  FFE3   	movff	btemp+11,plusw1
  5245                           
  5246                           ;stkvar	_k @ sp[(-4)+2]
  5247                           ;stkvar	_s @ sp[(-4)+0]
  5248  014580  0EFC               	movlw	-4
  5249  014582  50E3               	movf	plusw1,w,c
  5250  014584  6E35               	movwf	btemp^0,c
  5251  014586  0EFE               	movlw	-2
  5252  014588  50E3               	movf	plusw1,w,c
  5253  01458A  2635               	addwf	btemp^0,f,c
  5254  01458C  0EFC               	movlw	-4
  5255  01458E  0060  F0D7  FFE3   	movff	btemp,plusw1
  5256  014594  0EFD               	movlw	-3
  5257  014596  50E3               	movf	plusw1,w,c
  5258  014598  6E35               	movwf	btemp^0,c
  5259  01459A  0EFF               	movlw	-1
  5260  01459C  50E3               	movf	plusw1,w,c
  5261  01459E  2235               	addwfc	btemp^0,f,c
  5262  0145A0  0EFD               	movlw	-3
  5263  0145A2  0060  F0D7  FFE3   	movff	btemp,plusw1
  5264                           
  5265                           ;stkvar	_k @ sp[(-4)+2]
  5266                           ;stkvar	_n @ sp[(-4)+-6]
  5267  0145A8  0EF6               	movlw	-10
  5268  0145AA  50E3               	movf	plusw1,w,c
  5269  0145AC  6E35               	movwf	btemp^0,c
  5270  0145AE  0EFE               	movlw	-2
  5271  0145B0  50E3               	movf	plusw1,w,c
  5272  0145B2  5E35               	subwf	btemp^0,f,c
  5273  0145B4  0EF6               	movlw	-10
  5274  0145B6  0060  F0D7  FFE3   	movff	btemp,plusw1
  5275  0145BC  0EF7               	movlw	-9
  5276  0145BE  50E3               	movf	plusw1,w,c
  5277  0145C0  6E35               	movwf	btemp^0,c
  5278  0145C2  0EFF               	movlw	-1
  5279  0145C4  50E3               	movf	plusw1,w,c
  5280  0145C6  5A35               	subwfb	btemp^0,f,c
  5281  0145C8  0EF7               	movlw	-9
  5282  0145CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  5283  0145D0  0EFC               	movlw	252
  5284  0145D2  6E3F               	movwf	(btemp+10)^0,c
  5285  0145D4  0EFF               	movlw	255
  5286  0145D6  6E40               	movwf	(btemp+11)^0,c
  5287                           
  5288                           ;stkvar	_n @ sp[(-4)+-6]
  5289  0145D8  0EF6               	movlw	-10
  5290  0145DA  006F FF8C  F035    	movff	plusw1,btemp
  5291  0145E0  503F               	movf	(btemp+10)^0,w,c
  5292  0145E2  1635               	andwf	btemp^0,f,c
  5293  0145E4  0EF6               	movlw	-10
  5294  0145E6  0060  F0D7  FFE3   	movff	btemp,plusw1
  5295  0145EC  0EF7               	movlw	-9
  5296  0145EE  006F FF8C  F035    	movff	plusw1,btemp
  5297  0145F4  5040               	movf	(btemp+11)^0,w,c
  5298  0145F6  1635               	andwf	btemp^0,f,c
  5299  0145F8  0EF7               	movlw	-9
  5300  0145FA  D02E               	goto	L1
  5301  0145FC                     l9419:
  5302                           
  5303                           ;stkvar	_c @ sp[(-4)+-4]
  5304                           ;stkvar	_s @ sp[(-4)+0]
  5305  0145FC  0EFC               	movlw	-4
  5306  0145FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  5307  014604  0EFD               	movlw	-3
  5308  014606  006F FF8F FFDA     	movff	plusw1,fsr2h
  5309  01460C  0EF8               	movlw	-8
  5310  01460E  006F FF8F FFDF     	movff	plusw1,indf2
  5311                           
  5312                           ;stkvar	_n @ sp[(-4)+-6]
  5313  014614  0EF6               	movlw	-10
  5314  014616  006F FF8C  F035    	movff	plusw1,btemp
  5315  01461C  0E01               	movlw	1
  5316  01461E  5E35               	subwf	btemp^0,f,c
  5317  014620  0EF6               	movlw	-10
  5318  014622  0060  F0D7  FFE3   	movff	btemp,plusw1
  5319  014628  0EF7               	movlw	-9
  5320  01462A  006F FF8C  F035    	movff	plusw1,btemp
  5321  014630  0E00               	movlw	0
  5322  014632  5A35               	subwfb	btemp^0,f,c
  5323  014634  0EF7               	movlw	-9
  5324  014636  0060  F0D7  FFE3   	movff	btemp,plusw1
  5325                           
  5326                           ;stkvar	_s @ sp[(-4)+0]
  5327  01463C  0EFC               	movlw	-4
  5328  01463E  50E3               	movf	plusw1,w,c
  5329  014640  0F01               	addlw	1
  5330  014642  6E35               	movwf	btemp^0,c
  5331  014644  0EFC               	movlw	-4
  5332  014646  0060  F0D7  FFE3   	movff	btemp,plusw1
  5333  01464C  6A35               	clrf	btemp^0,c
  5334  01464E  0EFD               	movlw	-3
  5335  014650  50E3               	movf	plusw1,w,c
  5336  014652  2035               	addwfc	btemp^0,w,c
  5337  014654  6E35               	movwf	btemp^0,c
  5338  014656  0EFD               	movlw	-3
  5339  014658                     L1:
  5340  014658  0060  F0D7  FFE3   	movff	btemp,plusw1
  5341                           
  5342                           ;stkvar	_n @ sp[(-4)+-6]
  5343  01465E  0EF6               	movlw	-10
  5344  014660  006F FF8C  F035    	movff	plusw1,btemp
  5345  014666  0EF7               	movlw	-9
  5346  014668  50E3               	movf	plusw1,w,c
  5347  01466A  1035               	iorwf	btemp^0,w,c
  5348  01466C  A4D8               	btfss	status,2,c
  5349  01466E  D7C6               	goto	l9419
  5350  014670                     u9610:
  5351                           
  5352                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  5353  014670  0EF6               	movlw	246
  5354  014672  26E1               	addwf	fsr1l,f,c
  5355  014674  0EFF               	movlw	255
  5356  014676  22E2               	addwfc	fsr1h,f,c
  5357  014678  0012               	return		;funcret
  5358  01467A                     __end_of_memset:
  5359                           	opt callstack 0
  5360                           
  5361 ;; *************** function _printf *****************
  5362 ;; Defined at:
  5363 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  fmt             2  [STACK] PTR const unsigned char 
  5366 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  ap              2  [STACK] PTR void [1]
  5369 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5370 ;;  ret             2    0        int 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  2  [STACK] int 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5375 ;; Tracked objects:
  5376 ;;		On entry : 3F/3B
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:   14
  5387 ;; This function calls:
  5388 ;;		_vfprintf
  5389 ;; This function is called by:
  5390 ;;		_eaDogM_WriteString
  5391 ;;		_send_lcd_cmd_dma
  5392 ;; This function uses a reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text27
  5396  016F82                     __ptext27:
  5397                           	opt callstack 0
  5398  016F82                     _printf:
  5399                           	opt callstack 0
  5400                           
  5401                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5402  016F82  52E6               	movf	postinc1,f,c
  5403  016F84  52E6               	movf	postinc1,f,c
  5404                           
  5405                           ;stkvar	?_printf @ sp[(-2)+-3]
  5406                           
  5407                           ;incstack = 0
  5408  016F86  0EFB               	movlw	251
  5409  016F88  24E1               	addwf	fsr1l,w,c
  5410  016F8A  6E3F               	movwf	(btemp+10)^0,c
  5411  016F8C  0EFF               	movlw	255
  5412  016F8E  20E2               	addwfc	fsr1h,w,c
  5413  016F90  6E40               	movwf	(btemp+11)^0,c
  5414                           
  5415                           ;stkvar	_ap @ sp[(-2)+0]
  5416  016F92  0EFF               	movlw	-1
  5417  016F94  0060  F103  FFE3   	movff	btemp+11,plusw1
  5418  016F9A  0EFE               	movlw	-2
  5419  016F9C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5420                           
  5421                           ;stkvar	_ap @ sp[(-2)+0]
  5422  016FA2  0EFE               	movlw	254
  5423  016FA4  24E1               	addwf	fsr1l,w,c
  5424  016FA6  6E35               	movwf	btemp^0,c
  5425  016FA8  0EFF               	movlw	255
  5426  016FAA  20E2               	addwfc	fsr1h,w,c
  5427  016FAC  6E36               	movwf	(btemp+1)^0,c
  5428  016FAE  0060  F0D7  FFE6   	movff	btemp,postinc1
  5429  016FB4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5430                           
  5431                           ;stkvar	_fmt @ sp[(-4)+-3]
  5432  016FBA  0EF9               	movlw	-7
  5433  016FBC  006F FF8F FFE6     	movff	plusw1,postinc1
  5434  016FC2  006F FF8F FFE6     	movff	plusw1,postinc1
  5435  016FC8  0E00               	movlw	0
  5436  016FCA  6EE6               	movwf	postinc1,c
  5437  016FCC  0E00               	movlw	0
  5438  016FCE  6EE6               	movwf	postinc1,c
  5439  016FD0  ECA4  F0B3         	call	_vfprintf	;wreg free
  5440                           
  5441                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  5442  016FD4  52E5               	movf	postdec1,f,c
  5443  016FD6  52E5               	movf	postdec1,f,c
  5444  016FD8  52E5               	movf	postdec1,f,c
  5445  016FDA  50E7               	movf	indf1,w,c
  5446  016FDC  5EE1               	subwf	fsr1l,f,c
  5447  016FDE  0E00               	movlw	0
  5448  016FE0  5AE2               	subwfb	fsr1h,f,c
  5449  016FE2  0012               	return		;funcret
  5450  016FE4                     __end_of_printf:
  5451                           	opt callstack 0
  5452                           
  5453 ;; *************** function _vfprintf *****************
  5454 ;; Defined at:
  5455 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5458 ;;		 -> f(6), NULL(0), 
  5459 ;;  fmt             2  [STACK] PTR const unsigned char 
  5460 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  5461 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  5462 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  5463 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  5464 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  5465 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  5466 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  5467 ;;  ap              2  [STACK] PTR PTR void 
  5468 ;;		 -> ap(2), ap(2), 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  cfmt            2  [STACK] PTR unsigned char 
  5471 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  5472 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  5473 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  5474 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  5475 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  5476 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  5477 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  2  [STACK] int 
  5480 ;; Registers used:
  5481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/4
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:   13
  5494 ;; This function calls:
  5495 ;;		_vfpfcnvrt
  5496 ;; This function is called by:
  5497 ;;		_sprintf
  5498 ;;		_printf
  5499 ;; This function uses a reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text28
  5503  016748                     __ptext28:
  5504                           	opt callstack 0
  5505  016748                     _vfprintf:
  5506                           	opt callstack 0
  5507                           
  5508                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5509  016748  52E6               	movf	postinc1,f,c
  5510  01674A  52E6               	movf	postinc1,f,c
  5511                           
  5512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5513                           ;stkvar	_fmt @ sp[(-2)+-4]
  5514                           
  5515                           ;incstack = 0
  5516  01674C  0EFA               	movlw	-6
  5517  01674E  006F FF8C  F03F    	movff	plusw1,btemp+10
  5518  016754  0EFB               	movlw	-5
  5519  016756  006F FF8C  F040    	movff	plusw1,btemp+11
  5520                           
  5521                           ;stkvar	_cfmt @ sp[(-2)+0]
  5522  01675C  0EFF               	movlw	-1
  5523  01675E  0060  F103  FFE3   	movff	btemp+11,plusw1
  5524  016764  0EFE               	movlw	-2
  5525  016766  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5526                           
  5527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5528  01676C  6A1C               	clrf	_nout^0,c
  5529  01676E  6A1D               	clrf	(_nout+1)^0,c
  5530                           
  5531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5532  016770  D020               	goto	l9433
  5533  016772                     l9431:
  5534                           
  5535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5536                           ;stkvar	_ap @ sp[(-2)+-6]
  5537  016772  0EF8               	movlw	-8
  5538  016774  006F FF8F FFE6     	movff	plusw1,postinc1
  5539  01677A  006F FF8F FFE6     	movff	plusw1,postinc1
  5540                           
  5541                           ;stkvar	_cfmt @ sp[(-4)+0]
  5542  016780  0EFC               	movlw	252
  5543  016782  24E1               	addwf	fsr1l,w,c
  5544  016784  6E35               	movwf	btemp^0,c
  5545  016786  0EFF               	movlw	255
  5546  016788  20E2               	addwfc	fsr1h,w,c
  5547  01678A  6E36               	movwf	(btemp+1)^0,c
  5548  01678C  0060  F0D7  FFE6   	movff	btemp,postinc1
  5549  016792  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5550                           
  5551                           ;stkvar	_fp @ sp[(-6)+-2]
  5552  016798  0EF8               	movlw	-8
  5553  01679A  006F FF8F FFE6     	movff	plusw1,postinc1
  5554  0167A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5555  0167A6  EC22  F089         	call	_vfpfcnvrt	;wreg free
  5556  0167AA  5035               	movf	btemp^0,w,c
  5557  0167AC  261C               	addwf	_nout^0,f,c
  5558  0167AE  5036               	movf	(btemp+1)^0,w,c
  5559  0167B0  221D               	addwfc	(_nout+1)^0,f,c
  5560  0167B2                     l9433:
  5561                           
  5562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5563                           ;stkvar	_cfmt @ sp[(-2)+0]
  5564  0167B2  50E1               	movf	fsr1l,w,c
  5565  0167B4  0FFE               	addlw	-2
  5566  0167B6  6ED9               	movwf	fsr2l,c
  5567  0167B8  50E2               	movf	fsr1h,w,c
  5568  0167BA  6EDA               	movwf	fsr2h,c
  5569  0167BC  0EFF               	movlw	255
  5570  0167BE  22DA               	addwfc	fsr2h,f,c
  5571  0167C0  006F FF7B FFF6     	movff	postinc2,tblptrl
  5572  0167C6  006F FF77 FFF7     	movff	postdec2,tblptrh
  5573  0167CC                     	if	0	;tblptru may be non-zero
  5574  0167CC                     	endif
  5575  0167CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5576  0167CC  0E00               	movlw	low (__mediumconst shr (0+16))
  5577  0167CE  6EF8               	movwf	tblptru,c
  5578  0167D0                     	endif
  5579  0167D0  0008               	tblrd		*
  5580  0167D2  50F5               	movf	tablat,w,c
  5581  0167D4  0900               	iorlw	0
  5582  0167D6  A4D8               	btfss	status,2,c
  5583  0167D8  D7CC               	goto	l9431
  5584                           
  5585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  5586  0167DA  0060  F070  F035   	movff	_nout,btemp
  5587  0167E0  0060  F074  F036   	movff	_nout+1,btemp+1
  5588                           
  5589                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  5590  0167E6  0EF8               	movlw	248
  5591  0167E8  26E1               	addwf	fsr1l,f,c
  5592  0167EA  0EFF               	movlw	255
  5593  0167EC  22E2               	addwfc	fsr1h,f,c
  5594  0167EE  0012               	return		;funcret
  5595  0167F0                     __end_of_vfprintf:
  5596                           	opt callstack 0
  5597                           
  5598 ;; *************** function _vfpfcnvrt *****************
  5599 ;; Defined at:
  5600 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5603 ;;		 -> f(6), NULL(0), 
  5604 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  5605 ;;		 -> cfmt(2), 
  5606 ;;  ap              2  [STACK] PTR PTR void 
  5607 ;;		 -> ap(2), ap(2), 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  llu             8  [STACK] unsigned long long 
  5610 ;;  ll              8  [STACK] long long 
  5611 ;;  f               4  [STACK] long long 
  5612 ;;  ct              3  [STACK] unsigned char [3]
  5613 ;;  vp              3    0        PTR void 
  5614 ;;  cp              2  [STACK] PTR unsigned char 
  5615 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  5616 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  5617 ;;		 -> STR_3(4), V(189), 
  5618 ;;  i               2    0        int 
  5619 ;;  done            2    0        int 
  5620 ;;  c               1  [STACK] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  2  [STACK] int 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/4
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5634 ;;Total ram usage:        0 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:   12
  5637 ;; This function calls:
  5638 ;;		_atoi
  5639 ;;		_ctoa
  5640 ;;		_dtoa
  5641 ;;		_efgtoa
  5642 ;;		_fputc
  5643 ;;		_isdigit
  5644 ;;		_isupper
  5645 ;;		_stoa
  5646 ;;		_strncmp
  5647 ;;		_tolower
  5648 ;;		_xtoa
  5649 ;; This function is called by:
  5650 ;;		_vfprintf
  5651 ;; This function uses a reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text29
  5655  011244                     __ptext29:
  5656                           	opt callstack 0
  5657  011244                     _vfpfcnvrt:
  5658                           	opt callstack 0
  5659                           
  5660                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5661  011244  0E20               	movlw	32
  5662  011246  26E1               	addwf	fsr1l,f,c
  5663  011248  0E00               	movlw	0
  5664  01124A  22E2               	addwfc	fsr1h,f,c
  5665                           
  5666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  5667                           ;stkvar	_fmt @ sp[(-32)+-4]
  5668                           
  5669                           ;incstack = 0
  5670  01124C  0EDC               	movlw	-36
  5671  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5672  011254  0EDD               	movlw	-35
  5673  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  5674  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5675  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  5676  011268                     	if	0	;tblptru may be non-zero
  5677  011268                     	endif
  5678  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5679  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  5680  01126A  6EF8               	movwf	tblptru,c
  5681  01126C                     	endif
  5682  01126C  0008               	tblrd		*
  5683  01126E  50F5               	movf	tablat,w,c
  5684  011270  0A25               	xorlw	37
  5685  011272  A4D8               	btfss	status,2,c
  5686  011274  EF92  F08E         	goto	l9377
  5687                           
  5688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5689                           ;stkvar	_fmt @ sp[(-32)+-4]
  5690  011278  0EDC               	movlw	-36
  5691  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5692  011280  0EDD               	movlw	-35
  5693  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  5694  011288  2ADE               	incf	postinc2,f,c
  5695  01128A  0E00               	movlw	0
  5696  01128C  22DD               	addwfc	postdec2,f,c
  5697                           
  5698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5699  01128E  6A1E               	clrf	_width^0,c
  5700  011290  6A1F               	clrf	(_width+1)^0,c
  5701  011292  6A22               	clrf	_flags^0,c
  5702  011294  6A23               	clrf	(_flags+1)^0,c
  5703                           
  5704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5705  011296  6820               	setf	_prec^0,c
  5706  011298  6821               	setf	(_prec+1)^0,c
  5707                           
  5708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  5709                           ;stkvar	_fmt @ sp[(-32)+-4]
  5710  01129A  0EDC               	movlw	-36
  5711  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5712  0112A2  0EDD               	movlw	-35
  5713  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5714  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  5715  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  5716  0112B6                     	if	0	;tblptru may be non-zero
  5717  0112B6                     	endif
  5718  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5719  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  5720  0112B8  6EF8               	movwf	tblptru,c
  5721  0112BA                     	endif
  5722  0112BA  0008               	tblrd		*
  5723  0112BC  50F5               	movf	tablat,w,c
  5724  0112BE  0A2A               	xorlw	42
  5725  0112C0  A4D8               	btfss	status,2,c
  5726  0112C2  D031               	goto	l9241
  5727                           
  5728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  5729                           ;stkvar	_fmt @ sp[(-32)+-4]
  5730  0112C4  0EDC               	movlw	-36
  5731  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5732  0112CC  0EDD               	movlw	-35
  5733  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5734  0112D4  2ADE               	incf	postinc2,f,c
  5735  0112D6  0E00               	movlw	0
  5736  0112D8  22DD               	addwfc	postdec2,f,c
  5737                           
  5738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  5739                           ;stkvar	_ap @ sp[(-32)+-6]
  5740  0112DA  0EDA               	movlw	-38
  5741  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  5742  0112E2  0EDB               	movlw	-37
  5743  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5744  0112EA  0E02               	movlw	2
  5745  0112EC  5EDE               	subwf	postinc2,f,c
  5746  0112EE  0E00               	movlw	0
  5747  0112F0  5ADD               	subwfb	postdec2,f,c
  5748  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  5749  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  5750  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  5751  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  5752  01130A  006F FF78  F01E    	movff	postinc2,_width
  5753  011310  006F FF74  F01F    	movff	postdec2,_width+1
  5754                           
  5755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  5756  011316  AE1F               	btfss	(_width+1)^0,7,c
  5757  011318  D066               	goto	u9370
  5758                           
  5759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  5760  01131A  8022               	bsf	_flags^0,0,c
  5761                           
  5762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  5763  01131C  6C1E               	negf	_width^0,c
  5764  01131E  1E1F               	comf	(_width+1)^0,f,c
  5765  011320  B0D8               	btfsc	status,0,c
  5766  011322  2A1F               	incf	(_width+1)^0,f,c
  5767  011324  D060               	goto	u9370
  5768  011326                     l9241:
  5769                           
  5770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  5771                           ;stkvar	_fmt @ sp[(-32)+-4]
  5772  011326  0EDC               	movlw	-36
  5773  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  5774  01132E  0EDD               	movlw	-35
  5775  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  5776  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  5777  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  5778  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5779  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  5780  01134E  ECDC  F0A5         	call	_atoi	;wreg free
  5781  011352  0060  F0D4  F01E   	movff	btemp,_width
  5782  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  5783                           
  5784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5785  01135E  D00B               	goto	l9245
  5786  011360                     l9243:
  5787                           
  5788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  5789                           ;stkvar	_fmt @ sp[(-32)+-4]
  5790  011360  0EDC               	movlw	-36
  5791  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  5792  011368  0EDD               	movlw	-35
  5793  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5794  011370  2ADE               	incf	postinc2,f,c
  5795  011372  0E00               	movlw	0
  5796  011374  22DD               	addwfc	postdec2,f,c
  5797  011376                     l9245:
  5798  011376  0ED0               	movlw	208
  5799  011378  6E3F               	movwf	(btemp+10)^0,c
  5800  01137A  0EFF               	movlw	255
  5801  01137C  6E40               	movwf	(btemp+11)^0,c
  5802                           
  5803                           ;stkvar	_fmt @ sp[(-32)+-4]
  5804  01137E  0EDC               	movlw	-36
  5805  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  5806  011386  0EDD               	movlw	-35
  5807  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  5808  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  5809  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  5810  01139A                     	if	0	;tblptru may be non-zero
  5811  01139A                     	endif
  5812  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5813  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  5814  01139C  6EF8               	movwf	tblptru,c
  5815  01139E                     	endif
  5816  01139E  0008               	tblrd		*
  5817  0113A0  50F5               	movf	tablat,w,c
  5818  0113A2  6E3D               	movwf	(btemp+8)^0,c
  5819  0113A4  6A3E               	clrf	(btemp+9)^0,c
  5820  0113A6  503F               	movf	(btemp+10)^0,w,c
  5821  0113A8  263D               	addwf	(btemp+8)^0,f,c
  5822  0113AA  5040               	movf	(btemp+11)^0,w,c
  5823  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  5824  0113AE  503E               	movf	(btemp+9)^0,w,c
  5825  0113B0  E106               	bnz	u9350
  5826  0113B2  0E0A               	movlw	10
  5827  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  5828  0113B6  B0D8               	btfsc	status,0,c
  5829  0113B8  D002               	goto	u9350
  5830  0113BA  0E01               	movlw	1
  5831  0113BC  D001               	goto	u9360
  5832  0113BE                     u9350:
  5833  0113BE  0E00               	movlw	0
  5834  0113C0                     u9360:
  5835  0113C0  6E3F               	movwf	(btemp+10)^0,c
  5836  0113C2  6A40               	clrf	(btemp+11)^0,c
  5837                           
  5838                           ;stkvar	_vfpfcnvrt$4118 @ sp[(-32)+4]
  5839  0113C4  0EE4               	movlw	-28
  5840  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5841  0113CC  0EE5               	movlw	-27
  5842  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  5843                           
  5844                           ;stkvar	_vfpfcnvrt$4118 @ sp[(-32)+4]
  5845  0113D4  0EE4               	movlw	-28
  5846  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  5847  0113DC  0EE5               	movlw	-27
  5848  0113DE  50E3               	movf	plusw1,w,c
  5849  0113E0  1035               	iorwf	btemp^0,w,c
  5850  0113E2  A4D8               	btfss	status,2,c
  5851  0113E4  D7BD               	goto	l9243
  5852  0113E6                     u9370:
  5853                           
  5854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  5855                           ;stkvar	_fmt @ sp[(-32)+-4]
  5856  0113E6  0EDC               	movlw	-36
  5857  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  5858  0113EE  0EDD               	movlw	-35
  5859  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5860  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  5861  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  5862  011402                     	if	0	;tblptru may be non-zero
  5863  011402                     	endif
  5864  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5865  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  5866  011404  6EF8               	movwf	tblptru,c
  5867  011406                     	endif
  5868  011406  0008               	tblrd		*
  5869  011408  50F5               	movf	tablat,w,c
  5870  01140A  0A2E               	xorlw	46
  5871  01140C  A4D8               	btfss	status,2,c
  5872  01140E  D0AC               	goto	u9420
  5873                           
  5874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  5875  011410  6A20               	clrf	_prec^0,c
  5876  011412  6A21               	clrf	(_prec+1)^0,c
  5877                           
  5878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  5879                           ;stkvar	_fmt @ sp[(-32)+-4]
  5880  011414  0EDC               	movlw	-36
  5881  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  5882  01141C  0EDD               	movlw	-35
  5883  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5884  011424  2ADE               	incf	postinc2,f,c
  5885  011426  0E00               	movlw	0
  5886  011428  22DD               	addwfc	postdec2,f,c
  5887                           
  5888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  5889                           ;stkvar	_fmt @ sp[(-32)+-4]
  5890  01142A  0EDC               	movlw	-36
  5891  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5892  011432  0EDD               	movlw	-35
  5893  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  5894  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  5895  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  5896  011446                     	if	0	;tblptru may be non-zero
  5897  011446                     	endif
  5898  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5899  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  5900  011448  6EF8               	movwf	tblptru,c
  5901  01144A                     	endif
  5902  01144A  0008               	tblrd		*
  5903  01144C  50F5               	movf	tablat,w,c
  5904  01144E  0A2A               	xorlw	42
  5905  011450  A4D8               	btfss	status,2,c
  5906  011452  D02A               	goto	l9263
  5907                           
  5908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  5909                           ;stkvar	_fmt @ sp[(-32)+-4]
  5910  011454  0EDC               	movlw	-36
  5911  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  5912  01145C  0EDD               	movlw	-35
  5913  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5914  011464  2ADE               	incf	postinc2,f,c
  5915  011466  0E00               	movlw	0
  5916  011468  22DD               	addwfc	postdec2,f,c
  5917                           
  5918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  5919                           ;stkvar	_ap @ sp[(-32)+-6]
  5920  01146A  0EDA               	movlw	-38
  5921  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5922  011472  0EDB               	movlw	-37
  5923  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  5924  01147A  0E02               	movlw	2
  5925  01147C  5EDE               	subwf	postinc2,f,c
  5926  01147E  0E00               	movlw	0
  5927  011480  5ADD               	subwfb	postdec2,f,c
  5928  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  5929  011488  006F FF74  F040    	movff	postdec2,btemp+11
  5930  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  5931  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  5932  01149A  006F FF78  F020    	movff	postinc2,_prec
  5933  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  5934                           
  5935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  5936  0114A6  D060               	goto	u9420
  5937  0114A8                     l9263:
  5938                           
  5939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  5940                           ;stkvar	_fmt @ sp[(-32)+-4]
  5941  0114A8  0EDC               	movlw	-36
  5942  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  5943  0114B0  0EDD               	movlw	-35
  5944  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  5945  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  5946  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  5947  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5948  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  5949  0114D0  ECDC  F0A5         	call	_atoi	;wreg free
  5950  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  5951  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  5952                           
  5953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5954  0114E0  D00B               	goto	l9267
  5955  0114E2                     l9265:
  5956                           
  5957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  5958                           ;stkvar	_fmt @ sp[(-32)+-4]
  5959  0114E2  0EDC               	movlw	-36
  5960  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  5961  0114EA  0EDD               	movlw	-35
  5962  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  5963  0114F2  2ADE               	incf	postinc2,f,c
  5964  0114F4  0E00               	movlw	0
  5965  0114F6  22DD               	addwfc	postdec2,f,c
  5966  0114F8                     l9267:
  5967  0114F8  0ED0               	movlw	208
  5968  0114FA  6E3F               	movwf	(btemp+10)^0,c
  5969  0114FC  0EFF               	movlw	255
  5970  0114FE  6E40               	movwf	(btemp+11)^0,c
  5971                           
  5972                           ;stkvar	_fmt @ sp[(-32)+-4]
  5973  011500  0EDC               	movlw	-36
  5974  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  5975  011508  0EDD               	movlw	-35
  5976  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5977  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  5978  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  5979  01151C                     	if	0	;tblptru may be non-zero
  5980  01151C                     	endif
  5981  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5982  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  5983  01151E  6EF8               	movwf	tblptru,c
  5984  011520                     	endif
  5985  011520  0008               	tblrd		*
  5986  011522  50F5               	movf	tablat,w,c
  5987  011524  6E3D               	movwf	(btemp+8)^0,c
  5988  011526  6A3E               	clrf	(btemp+9)^0,c
  5989  011528  503F               	movf	(btemp+10)^0,w,c
  5990  01152A  263D               	addwf	(btemp+8)^0,f,c
  5991  01152C  5040               	movf	(btemp+11)^0,w,c
  5992  01152E  223E               	addwfc	(btemp+9)^0,f,c
  5993  011530  503E               	movf	(btemp+9)^0,w,c
  5994  011532  E106               	bnz	u9400
  5995  011534  0E0A               	movlw	10
  5996  011536  5C3D               	subwf	(btemp+8)^0,w,c
  5997  011538  B0D8               	btfsc	status,0,c
  5998  01153A  D002               	goto	u9400
  5999  01153C  0E01               	movlw	1
  6000  01153E  D001               	goto	u9410
  6001  011540                     u9400:
  6002  011540  0E00               	movlw	0
  6003  011542                     u9410:
  6004  011542  6E3F               	movwf	(btemp+10)^0,c
  6005  011544  6A40               	clrf	(btemp+11)^0,c
  6006                           
  6007                           ;stkvar	_vfpfcnvrt$4119 @ sp[(-32)+0]
  6008  011546  0EE0               	movlw	-32
  6009  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6010  01154E  0EE1               	movlw	-31
  6011  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  6012                           
  6013                           ;stkvar	_vfpfcnvrt$4119 @ sp[(-32)+0]
  6014  011556  0EE0               	movlw	-32
  6015  011558  006F FF8C  F035    	movff	plusw1,btemp
  6016  01155E  0EE1               	movlw	-31
  6017  011560  50E3               	movf	plusw1,w,c
  6018  011562  1035               	iorwf	btemp^0,w,c
  6019  011564  A4D8               	btfss	status,2,c
  6020  011566  D7BD               	goto	l9265
  6021  011568                     u9420:
  6022                           
  6023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  6024                           ;stkvar	_fmt @ sp[(-32)+-4]
  6025  011568  0EDC               	movlw	-36
  6026  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6027  011570  0EDD               	movlw	-35
  6028  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  6029  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  6030  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6031  011584                     	if	0	;tblptru may be non-zero
  6032  011584                     	endif
  6033  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6034  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  6035  011586  6EF8               	movwf	tblptru,c
  6036  011588                     	endif
  6037  011588  0008               	tblrd		*
  6038  01158A  50F5               	movf	tablat,w,c
  6039  01158C  6EE6               	movwf	postinc1,c
  6040  01158E  0E00               	movlw	0
  6041  011590  6EE6               	movwf	postinc1,c
  6042  011592  EC4A  F0B6         	call	_tolower	;wreg free
  6043                           
  6044                           ;stkvar	_ct @ sp[(-32)+26]
  6045  011596  0EFA               	movlw	-6
  6046  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  6047                           
  6048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  6049                           ;stkvar	_ct @ sp[(-32)+26]
  6050  01159E  0EFA               	movlw	-6
  6051  0115A0  50E3               	movf	plusw1,w,c
  6052  0115A2  B4D8               	btfsc	status,2,c
  6053  0115A4  D05B               	goto	l9283
  6054                           
  6055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  6056                           ;stkvar	_ct @ sp[(-32)+26]
  6057  0115A6  0EFB               	movlw	251
  6058  0115A8  24E1               	addwf	fsr1l,w,c
  6059  0115AA  6ED9               	movwf	fsr2l,c
  6060  0115AC  0EFF               	movlw	255
  6061  0115AE  20E2               	addwfc	fsr1h,w,c
  6062  0115B0  6EDA               	movwf	fsr2h,c
  6063                           
  6064                           ;stkvar	_fmt @ sp[(-32)+-4]
  6065  0115B2  0EDC               	movlw	-36
  6066  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  6067  0115BA  0EDD               	movlw	-35
  6068  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  6069  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  6070  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  6071  0115CE  0E01               	movlw	1
  6072  0115D0  263F               	addwf	(btemp+10)^0,f,c
  6073  0115D2  0E00               	movlw	0
  6074  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  6075  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6076  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6077  0115E2                     	if	0	;tblptru may be non-zero
  6078  0115E2                     	endif
  6079  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6080  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  6081  0115E4  6EF8               	movwf	tblptru,c
  6082  0115E6                     	endif
  6083  0115E6  0008               	tblrd		*
  6084  0115E8  50F5               	movf	tablat,w,c
  6085  0115EA  6EE6               	movwf	postinc1,c
  6086  0115EC  0E00               	movlw	0
  6087  0115EE  6EE6               	movwf	postinc1,c
  6088  0115F0  EC4A  F0B6         	call	_tolower	;wreg free
  6089  0115F4  5035               	movf	btemp^0,w,c
  6090  0115F6  6EDF               	movwf	indf2,c
  6091                           
  6092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  6093                           ;stkvar	_ct @ sp[(-32)+26]
  6094  0115F8  0EFB               	movlw	251
  6095  0115FA  24E1               	addwf	fsr1l,w,c
  6096  0115FC  6ED9               	movwf	fsr2l,c
  6097  0115FE  0EFF               	movlw	255
  6098  011600  20E2               	addwfc	fsr1h,w,c
  6099  011602  6EDA               	movwf	fsr2h,c
  6100  011604  50DF               	movf	indf2,w,c
  6101  011606  B4D8               	btfsc	status,2,c
  6102  011608  D029               	goto	l9283
  6103                           
  6104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  6105                           ;stkvar	_ct @ sp[(-32)+26]
  6106  01160A  0EFC               	movlw	252
  6107  01160C  24E1               	addwf	fsr1l,w,c
  6108  01160E  6ED9               	movwf	fsr2l,c
  6109  011610  0EFF               	movlw	255
  6110  011612  20E2               	addwfc	fsr1h,w,c
  6111  011614  6EDA               	movwf	fsr2h,c
  6112                           
  6113                           ;stkvar	_fmt @ sp[(-32)+-4]
  6114  011616  0EDC               	movlw	-36
  6115  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  6116  01161E  0EDD               	movlw	-35
  6117  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  6118  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  6119  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  6120  011632  0E02               	movlw	2
  6121  011634  263F               	addwf	(btemp+10)^0,f,c
  6122  011636  0E00               	movlw	0
  6123  011638  2240               	addwfc	(btemp+11)^0,f,c
  6124  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6125  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6126  011646                     	if	0	;tblptru may be non-zero
  6127  011646                     	endif
  6128  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6129  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  6130  011648  6EF8               	movwf	tblptru,c
  6131  01164A                     	endif
  6132  01164A  0008               	tblrd		*
  6133  01164C  50F5               	movf	tablat,w,c
  6134  01164E  6EE6               	movwf	postinc1,c
  6135  011650  0E00               	movlw	0
  6136  011652  6EE6               	movwf	postinc1,c
  6137  011654  EC4A  F0B6         	call	_tolower	;wreg free
  6138  011658  5035               	movf	btemp^0,w,c
  6139  01165A  6EDF               	movwf	indf2,c
  6140  01165C                     l9283:
  6141                           
  6142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6143                           ;stkvar	_fmt @ sp[(-32)+-4]
  6144  01165C  0EDC               	movlw	-36
  6145  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6146  011664  0EDD               	movlw	-35
  6147  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  6148  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6149  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  6150  011678                     	if	0	;tblptru may be non-zero
  6151  011678                     	endif
  6152  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6153  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  6154  01167A  6EF8               	movwf	tblptru,c
  6155  01167C                     	endif
  6156  01167C  0008               	tblrd		*
  6157  01167E  50F5               	movf	tablat,w,c
  6158  011680  0A63               	xorlw	99
  6159  011682  A4D8               	btfss	status,2,c
  6160  011684  D036               	goto	l9293
  6161                           
  6162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6163                           ;stkvar	_fmt @ sp[(-32)+-4]
  6164  011686  0EDC               	movlw	-36
  6165  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  6166  01168E  0EDD               	movlw	-35
  6167  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  6168  011696  2ADE               	incf	postinc2,f,c
  6169  011698  0E00               	movlw	0
  6170  01169A  22DD               	addwfc	postdec2,f,c
  6171                           
  6172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6173                           ;stkvar	_ap @ sp[(-32)+-6]
  6174  01169C  0EDA               	movlw	-38
  6175  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6176  0116A4  0EDB               	movlw	-37
  6177  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6178  0116AC  0E02               	movlw	2
  6179  0116AE  5EDE               	subwf	postinc2,f,c
  6180  0116B0  0E00               	movlw	0
  6181  0116B2  5ADD               	subwfb	postdec2,f,c
  6182  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  6183  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  6184  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6185  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6186  0116CC  50DF               	movf	indf2,w,c
  6187  0116CE  6E40               	movwf	(btemp+11)^0,c
  6188                           
  6189                           ;stkvar	_c @ sp[(-32)+31]
  6190  0116D0  0EFF               	movlw	-1
  6191  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6192                           
  6193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6194                           ;stkvar	_c @ sp[(-32)+31]
  6195  0116D8  0EFF               	movlw	-1
  6196  0116DA  50E3               	movf	plusw1,w,c
  6197  0116DC  6EE6               	movwf	postinc1,c
  6198                           
  6199                           ;stkvar	_fp @ sp[(-33)+-2]
  6200  0116DE  0EDD               	movlw	-35
  6201  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  6202  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  6203  0116EC  ECC4  F0B5         	call	_ctoa	;wreg free
  6204  0116F0  D343               	goto	l1912
  6205  0116F2                     l9293:
  6206                           
  6207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6208                           ;stkvar	_fmt @ sp[(-32)+-4]
  6209  0116F2  0EDC               	movlw	-36
  6210  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6211  0116FA  0EDD               	movlw	-35
  6212  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6213  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  6214  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  6215  01170E                     	if	0	;tblptru may be non-zero
  6216  01170E                     	endif
  6217  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6218  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  6219  011710  6EF8               	movwf	tblptru,c
  6220  011712                     	endif
  6221  011712  0008               	tblrd		*
  6222  011714  50F5               	movf	tablat,w,c
  6223  011716  0A64               	xorlw	100
  6224  011718  B4D8               	btfsc	status,2,c
  6225  01171A  D015               	goto	u9470
  6226                           
  6227                           ;stkvar	_fmt @ sp[(-32)+-4]
  6228  01171C  0EDC               	movlw	-36
  6229  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6230  011724  0EDD               	movlw	-35
  6231  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  6232  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6233  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  6234  011738                     	if	0	;tblptru may be non-zero
  6235  011738                     	endif
  6236  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6237  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  6238  01173A  6EF8               	movwf	tblptru,c
  6239  01173C                     	endif
  6240  01173C  0008               	tblrd		*
  6241  01173E  50F5               	movf	tablat,w,c
  6242  011740  0A69               	xorlw	105
  6243  011742  A4D8               	btfss	status,2,c
  6244  011744  D075               	goto	l9305
  6245  011746                     u9470:
  6246                           
  6247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6248                           ;stkvar	_fmt @ sp[(-32)+-4]
  6249  011746  0EDC               	movlw	-36
  6250  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  6251  01174E  0EDD               	movlw	-35
  6252  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  6253  011756  2ADE               	incf	postinc2,f,c
  6254  011758  0E00               	movlw	0
  6255  01175A  22DD               	addwfc	postdec2,f,c
  6256                           
  6257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6258                           ;stkvar	_ap @ sp[(-32)+-6]
  6259  01175C  0EDA               	movlw	-38
  6260  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6261  011764  0EDB               	movlw	-37
  6262  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  6263  01176C  0E02               	movlw	2
  6264  01176E  5EDE               	subwf	postinc2,f,c
  6265  011770  0E00               	movlw	0
  6266  011772  5ADD               	subwfb	postdec2,f,c
  6267  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  6268  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  6269  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6270  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6271  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  6272  011792  006F FF74  F040    	movff	postdec2,btemp+11
  6273                           
  6274                           ;stkvar	_ll @ sp[(-32)+14]
  6275  011798  0EEE               	movlw	-18
  6276  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6277  0117A0  0EEF               	movlw	-17
  6278  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6279  0117A8  6A35               	clrf	btemp^0,c
  6280  0117AA  BEE3               	btfsc	plusw1,7,c
  6281  0117AC  6835               	setf	btemp^0,c
  6282  0117AE  0EF0               	movlw	-16
  6283  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6284  0117B6  0EF1               	movlw	-15
  6285  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6286  0117BE  0EF2               	movlw	-14
  6287  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6288  0117C6  0EF3               	movlw	-13
  6289  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6290  0117CE  0EF4               	movlw	-12
  6291  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6292  0117D6  0EF5               	movlw	-11
  6293  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6294                           
  6295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6296                           ;stkvar	_ll @ sp[(-32)+14]
  6297  0117DE  50E1               	movf	fsr1l,w,c
  6298  0117E0  0FEE               	addlw	-18
  6299  0117E2  6ED9               	movwf	fsr2l,c
  6300  0117E4  50E2               	movf	fsr1h,w,c
  6301  0117E6  6EDA               	movwf	fsr2h,c
  6302  0117E8  0EFF               	movlw	255
  6303  0117EA  22DA               	addwfc	fsr2h,f,c
  6304  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  6305  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  6306  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  6307  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  6308  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  6309  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  6310  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  6311  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  6312                           
  6313                           ;stkvar	_fp @ sp[(-40)+-2]
  6314  01181C  0ED6               	movlw	-42
  6315  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  6316  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  6317  01182A  ECF4  F09B         	call	_dtoa	;wreg free
  6318  01182E  D2A4               	goto	l1912
  6319  011830                     l9305:
  6320                           
  6321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  6322                           ;stkvar	_ct @ sp[(-32)+26]
  6323  011830  0EFA               	movlw	-6
  6324  011832  006F FF8C  F035    	movff	plusw1,btemp
  6325  011838  0E66               	movlw	102
  6326  01183A  1835               	xorwf	btemp^0,w,c
  6327  01183C  A4D8               	btfss	status,2,c
  6328  01183E  D06E               	goto	l9317
  6329                           
  6330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  6331                           ;stkvar	_fmt @ sp[(-32)+-4]
  6332  011840  0EDC               	movlw	-36
  6333  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  6334  011848  0EDD               	movlw	-35
  6335  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6336  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  6337  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  6338  01185C                     	if	0	;tblptru may be non-zero
  6339  01185C                     	endif
  6340  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6341  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  6342  01185E  6EF8               	movwf	tblptru,c
  6343  011860                     	endif
  6344                           
  6345                           ;stkvar	_c @ sp[(-32)+31]
  6346  011860  0008               	tblrd		*
  6347  011862  0EFF               	movlw	-1
  6348  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  6349                           
  6350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  6351                           ;stkvar	_fmt @ sp[(-32)+-4]
  6352  01186A  0EDC               	movlw	-36
  6353  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6354  011872  0EDD               	movlw	-35
  6355  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  6356  01187A  2ADE               	incf	postinc2,f,c
  6357  01187C  0E00               	movlw	0
  6358  01187E  22DD               	addwfc	postdec2,f,c
  6359                           
  6360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  6361                           ;stkvar	_ap @ sp[(-32)+-6]
  6362  011880  0EDA               	movlw	-38
  6363  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  6364  011888  0EDB               	movlw	-37
  6365  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6366  011890  0E04               	movlw	4
  6367  011892  5EDE               	subwf	postinc2,f,c
  6368  011894  0E00               	movlw	0
  6369  011896  5ADD               	subwfb	postdec2,f,c
  6370  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  6371  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  6372  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6373  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6374  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  6375  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  6376  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  6377  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  6378                           
  6379                           ;stkvar	_f @ sp[(-32)+22]
  6380  0118C8  0EF6               	movlw	-10
  6381  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  6382  0118D0  0EF7               	movlw	-9
  6383  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  6384  0118D8  0EF8               	movlw	-8
  6385  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6386  0118E0  0EF9               	movlw	-7
  6387  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6388  0118E8                     l9313:
  6389                           
  6390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  6391                           ;stkvar	_c @ sp[(-32)+31]
  6392  0118E8  0EFF               	movlw	-1
  6393  0118EA  50E3               	movf	plusw1,w,c
  6394  0118EC  6EE6               	movwf	postinc1,c
  6395                           
  6396                           ;stkvar	_f @ sp[(-33)+22]
  6397  0118EE  0EF5               	movlw	-11
  6398  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  6399  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  6400  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  6401  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  6402                           
  6403                           ;stkvar	_fp @ sp[(-37)+-2]
  6404  011908  0ED9               	movlw	-39
  6405  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  6406  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  6407  011916  EC00  F080         	call	_efgtoa	;wreg free
  6408  01191A  D22E               	goto	l1912
  6409  01191C                     l9317:
  6410                           
  6411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6412  01191C  0E02               	movlw	2
  6413  01191E  6EE6               	movwf	postinc1,c
  6414  011920  0E00               	movlw	0
  6415  011922  6EE6               	movwf	postinc1,c
  6416  011924  0EF6               	movlw	low STR_40
  6417  011926  6EE6               	movwf	postinc1,c
  6418  011928  0EFF               	movlw	high STR_40
  6419  01192A  6EE6               	movwf	postinc1,c
  6420                           
  6421                           ;stkvar	_ct @ sp[(-36)+26]
  6422  01192C  0EF6               	movlw	246
  6423  01192E  24E1               	addwf	fsr1l,w,c
  6424  011930  6E35               	movwf	btemp^0,c
  6425  011932  0EFF               	movlw	255
  6426  011934  20E2               	addwfc	fsr1h,w,c
  6427  011936  6E36               	movwf	(btemp+1)^0,c
  6428  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  6429  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6430  011944  EC41  F0AA         	call	_strncmp	;wreg free
  6431  011948  5035               	movf	btemp^0,w,c
  6432  01194A  1036               	iorwf	(btemp+1)^0,w,c
  6433  01194C  A4D8               	btfss	status,2,c
  6434  01194E  D096               	goto	l9337
  6435                           
  6436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6437                           ;stkvar	_fmt @ sp[(-32)+-4]
  6438  011950  0EDC               	movlw	-36
  6439  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  6440  011958  0EDD               	movlw	-35
  6441  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6442  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  6443  011966  006F FF74  F040    	movff	postdec2,btemp+11
  6444  01196C  0E01               	movlw	1
  6445  01196E  263F               	addwf	(btemp+10)^0,f,c
  6446  011970  0E00               	movlw	0
  6447  011972  2240               	addwfc	(btemp+11)^0,f,c
  6448  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6449  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6450  011980                     	if	0	;tblptru may be non-zero
  6451  011980                     	endif
  6452  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6453  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  6454  011982  6EF8               	movwf	tblptru,c
  6455  011984                     	endif
  6456                           
  6457                           ;stkvar	_c @ sp[(-32)+31]
  6458  011984  0008               	tblrd		*
  6459  011986  0EFF               	movlw	-1
  6460  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  6461  01198E  0EBF               	movlw	191
  6462  011990  6E3F               	movwf	(btemp+10)^0,c
  6463  011992  0EFF               	movlw	255
  6464  011994  6E40               	movwf	(btemp+11)^0,c
  6465                           
  6466                           ;stkvar	_fmt @ sp[(-32)+-4]
  6467  011996  0EDC               	movlw	-36
  6468  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  6469  01199E  0EDD               	movlw	-35
  6470  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6471  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6472  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6473  0119B2                     	if	0	;tblptru may be non-zero
  6474  0119B2                     	endif
  6475  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6476  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  6477  0119B4  6EF8               	movwf	tblptru,c
  6478  0119B6                     	endif
  6479  0119B6  0008               	tblrd		*
  6480  0119B8  50F5               	movf	tablat,w,c
  6481  0119BA  6E3D               	movwf	(btemp+8)^0,c
  6482  0119BC  6A3E               	clrf	(btemp+9)^0,c
  6483  0119BE  503F               	movf	(btemp+10)^0,w,c
  6484  0119C0  263D               	addwf	(btemp+8)^0,f,c
  6485  0119C2  5040               	movf	(btemp+11)^0,w,c
  6486  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  6487  0119C6  503E               	movf	(btemp+9)^0,w,c
  6488  0119C8  E106               	bnz	u9500
  6489  0119CA  0E1A               	movlw	26
  6490  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  6491  0119CE  B0D8               	btfsc	status,0,c
  6492  0119D0  D002               	goto	u9500
  6493  0119D2  0E01               	movlw	1
  6494  0119D4  D001               	goto	u9510
  6495  0119D6                     u9500:
  6496  0119D6  0E00               	movlw	0
  6497  0119D8                     u9510:
  6498  0119D8  6E3F               	movwf	(btemp+10)^0,c
  6499  0119DA  6A40               	clrf	(btemp+11)^0,c
  6500                           
  6501                           ;stkvar	_vfpfcnvrt$4125 @ sp[(-32)+2]
  6502  0119DC  0EE2               	movlw	-30
  6503  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6504  0119E4  0EE3               	movlw	-29
  6505  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  6506                           
  6507                           ;stkvar	_vfpfcnvrt$4125 @ sp[(-32)+2]
  6508  0119EC  0EE2               	movlw	-30
  6509  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  6510  0119F4  0EE3               	movlw	-29
  6511  0119F6  50E3               	movf	plusw1,w,c
  6512  0119F8  1035               	iorwf	btemp^0,w,c
  6513                           
  6514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6515                           ;stkvar	_ap @ sp[(-32)+-6]
  6516                           
  6517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  6518                           
  6519                           ;stkvar	_f @ sp[(-32)+22]
  6520                           
  6521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  6522                           ;stkvar	_ap @ sp[(-32)+-6]
  6523  0119FA  0EDA               	movlw	-38
  6524  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6525  011A02  0EDB               	movlw	-37
  6526  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  6527  011A0A  0E04               	movlw	4
  6528  011A0C  5EDE               	subwf	postinc2,f,c
  6529  011A0E  0E00               	movlw	0
  6530  011A10  5ADD               	subwfb	postdec2,f,c
  6531  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  6532  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  6533  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6534  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6535  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  6536  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  6537  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  6538  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  6539                           
  6540                           ;stkvar	_f @ sp[(-32)+22]
  6541  011A42  0EF6               	movlw	-10
  6542  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  6543  011A4A  0EF7               	movlw	-9
  6544  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  6545  011A52  0EF8               	movlw	-8
  6546  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6547  011A5A  0EF9               	movlw	-7
  6548  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  6549                           
  6550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  6551                           ;stkvar	_fmt @ sp[(-32)+-4]
  6552  011A62  0EDC               	movlw	-36
  6553  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  6554  011A6A  0EDD               	movlw	-35
  6555  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6556  011A72  0E02               	movlw	2
  6557  011A74  26DE               	addwf	postinc2,f,c
  6558  011A76  0E00               	movlw	0
  6559  011A78  22DD               	addwfc	postdec2,f,c
  6560  011A7A  D736               	goto	l9313
  6561  011A7C                     l9337:
  6562                           
  6563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6564                           ;stkvar	_fmt @ sp[(-32)+-4]
  6565  011A7C  0EDC               	movlw	-36
  6566  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6567  011A84  0EDD               	movlw	-35
  6568  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  6569  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6570  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  6571  011A98                     	if	0	;tblptru may be non-zero
  6572  011A98                     	endif
  6573  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6574  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  6575  011A9A  6EF8               	movwf	tblptru,c
  6576  011A9C                     	endif
  6577  011A9C  0008               	tblrd		*
  6578  011A9E  50F5               	movf	tablat,w,c
  6579  011AA0  0A73               	xorlw	115
  6580  011AA2  A4D8               	btfss	status,2,c
  6581  011AA4  D042               	goto	l9347
  6582                           
  6583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6584                           ;stkvar	_fmt @ sp[(-32)+-4]
  6585  011AA6  0EDC               	movlw	-36
  6586  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6587  011AAE  0EDD               	movlw	-35
  6588  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6589  011AB6  2ADE               	incf	postinc2,f,c
  6590  011AB8  0E00               	movlw	0
  6591  011ABA  22DD               	addwfc	postdec2,f,c
  6592                           
  6593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6594                           ;stkvar	_ap @ sp[(-32)+-6]
  6595  011ABC  0EDA               	movlw	-38
  6596  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6597  011AC4  0EDB               	movlw	-37
  6598  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6599  011ACC  0E02               	movlw	2
  6600  011ACE  5EDE               	subwf	postinc2,f,c
  6601  011AD0  0E00               	movlw	0
  6602  011AD2  5ADD               	subwfb	postdec2,f,c
  6603  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  6604  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  6605  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6606  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6607  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  6608  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  6609                           
  6610                           ;stkvar	_cp @ sp[(-32)+29]
  6611  011AF8  0EFE               	movlw	-2
  6612  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  6613  011B00  0EFD               	movlw	-3
  6614  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6615                           
  6616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6617                           ;stkvar	_cp @ sp[(-32)+29]
  6618  011B08  0EFD               	movlw	-3
  6619  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  6620  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  6621                           
  6622                           ;stkvar	_fp @ sp[(-34)+-2]
  6623  011B16  0EDC               	movlw	-36
  6624  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  6625  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  6626  011B24  EC3D  F0A3         	call	_stoa	;wreg free
  6627  011B28  D127               	goto	l1912
  6628  011B2A                     l9347:
  6629                           
  6630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6631                           ;stkvar	_fmt @ sp[(-32)+-4]
  6632  011B2A  0EDC               	movlw	-36
  6633  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6634  011B32  0EDD               	movlw	-35
  6635  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  6636  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  6637  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  6638  011B46                     	if	0	;tblptru may be non-zero
  6639  011B46                     	endif
  6640  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6641  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  6642  011B48  6EF8               	movwf	tblptru,c
  6643  011B4A                     	endif
  6644  011B4A  0008               	tblrd		*
  6645  011B4C  50F5               	movf	tablat,w,c
  6646  011B4E  0A78               	xorlw	120
  6647  011B50  B4D8               	btfsc	status,2,c
  6648  011B52  D015               	goto	u9550
  6649                           
  6650                           ;stkvar	_fmt @ sp[(-32)+-4]
  6651  011B54  0EDC               	movlw	-36
  6652  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  6653  011B5C  0EDD               	movlw	-35
  6654  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6655  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  6656  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  6657  011B70                     	if	0	;tblptru may be non-zero
  6658  011B70                     	endif
  6659  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6660  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  6661  011B72  6EF8               	movwf	tblptru,c
  6662  011B74                     	endif
  6663  011B74  0008               	tblrd		*
  6664  011B76  50F5               	movf	tablat,w,c
  6665  011B78  0A58               	xorlw	88
  6666  011B7A  A4D8               	btfss	status,2,c
  6667  011B7C  D094               	goto	l9361
  6668  011B7E                     u9550:
  6669                           
  6670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6671                           ;stkvar	_fmt @ sp[(-32)+-4]
  6672  011B7E  0EDC               	movlw	-36
  6673  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  6674  011B86  0EDD               	movlw	-35
  6675  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  6676  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6677  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  6678  011B9A                     	if	0	;tblptru may be non-zero
  6679  011B9A                     	endif
  6680  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6681  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  6682  011B9C  6EF8               	movwf	tblptru,c
  6683  011B9E                     	endif
  6684                           
  6685                           ;stkvar	_c @ sp[(-32)+31]
  6686  011B9E  0008               	tblrd		*
  6687  011BA0  0EFF               	movlw	-1
  6688  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  6689                           
  6690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6691                           ;stkvar	_fmt @ sp[(-32)+-4]
  6692  011BA8  0EDC               	movlw	-36
  6693  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6694  011BB0  0EDD               	movlw	-35
  6695  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6696  011BB8  2ADE               	incf	postinc2,f,c
  6697  011BBA  0E00               	movlw	0
  6698  011BBC  22DD               	addwfc	postdec2,f,c
  6699                           
  6700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  6701                           ;stkvar	_ap @ sp[(-32)+-6]
  6702  011BBE  0EDA               	movlw	-38
  6703  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  6704  011BC6  0EDB               	movlw	-37
  6705  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  6706  011BCE  0E02               	movlw	2
  6707  011BD0  5EDE               	subwf	postinc2,f,c
  6708  011BD2  0E00               	movlw	0
  6709  011BD4  5ADD               	subwfb	postdec2,f,c
  6710  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  6711  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  6712  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6713  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6714  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  6715  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  6716  011BFA  503F               	movf	(btemp+10)^0,w,c
  6717  011BFC  6E45               	movwf	(btemp+16)^0,c
  6718  011BFE  5040               	movf	(btemp+11)^0,w,c
  6719  011C00  6E46               	movwf	(btemp+17)^0,c
  6720  011C02  6A47               	clrf	(btemp+18)^0,c
  6721  011C04  6A48               	clrf	(btemp+19)^0,c
  6722  011C06  6A49               	clrf	(btemp+20)^0,c
  6723  011C08  6A4A               	clrf	(btemp+21)^0,c
  6724  011C0A  6A4B               	clrf	(btemp+22)^0,c
  6725  011C0C  6A4C               	clrf	(btemp+23)^0,c
  6726                           
  6727                           ;stkvar	_llu @ sp[(-32)+6]
  6728  011C0E  0EE6               	movlw	-26
  6729  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  6730  011C16  0EE7               	movlw	-25
  6731  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  6732  011C1E  0EE8               	movlw	-24
  6733  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  6734  011C26  0EE9               	movlw	-23
  6735  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  6736  011C2E  0EEA               	movlw	-22
  6737  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  6738  011C36  0EEB               	movlw	-21
  6739  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  6740  011C3E  0EEC               	movlw	-20
  6741  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  6742  011C46  0EED               	movlw	-19
  6743  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  6744                           
  6745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  6746                           ;stkvar	_c @ sp[(-32)+31]
  6747  011C4E  0EFF               	movlw	-1
  6748  011C50  50E3               	movf	plusw1,w,c
  6749  011C52  6EE6               	movwf	postinc1,c
  6750                           
  6751                           ;stkvar	_llu @ sp[(-33)+6]
  6752  011C54  50E1               	movf	fsr1l,w,c
  6753  011C56  0FE5               	addlw	-27
  6754  011C58  6ED9               	movwf	fsr2l,c
  6755  011C5A  50E2               	movf	fsr1h,w,c
  6756  011C5C  6EDA               	movwf	fsr2h,c
  6757  011C5E  0EFF               	movlw	255
  6758  011C60  22DA               	addwfc	fsr2h,f,c
  6759  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  6760  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  6761  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6762  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  6763  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6764  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  6765  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  6766  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6767                           
  6768                           ;stkvar	_fp @ sp[(-41)+-2]
  6769  011C92  0ED5               	movlw	-43
  6770  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  6771  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  6772  011CA0  EC34  F09E         	call	_xtoa	;wreg free
  6773  011CA4  D069               	goto	l1912
  6774  011CA6                     l9361:
  6775                           
  6776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6777                           ;stkvar	_fmt @ sp[(-32)+-4]
  6778  011CA6  0EDC               	movlw	-36
  6779  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6780  011CAE  0EDD               	movlw	-35
  6781  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6782  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6783  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6784  011CC2                     	if	0	;tblptru may be non-zero
  6785  011CC2                     	endif
  6786  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6787  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  6788  011CC4  6EF8               	movwf	tblptru,c
  6789  011CC6                     	endif
  6790  011CC6  0008               	tblrd		*
  6791  011CC8  50F5               	movf	tablat,w,c
  6792  011CCA  0A25               	xorlw	37
  6793  011CCC  A4D8               	btfss	status,2,c
  6794  011CCE  D01A               	goto	l9371
  6795                           
  6796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6797                           ;stkvar	_fmt @ sp[(-32)+-4]
  6798  011CD0  0EDC               	movlw	-36
  6799  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6800  011CD8  0EDD               	movlw	-35
  6801  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6802  011CE0  2ADE               	incf	postinc2,f,c
  6803  011CE2  0E00               	movlw	0
  6804  011CE4  22DD               	addwfc	postdec2,f,c
  6805                           
  6806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6807                           ;stkvar	_fp @ sp[(-32)+-2]
  6808  011CE6  0EDE               	movlw	-34
  6809  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  6810  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6811  011CF4  0E25               	movlw	37
  6812  011CF6  6EE6               	movwf	postinc1,c
  6813  011CF8  0E00               	movlw	0
  6814  011CFA  6EE6               	movwf	postinc1,c
  6815  011CFC  EC98  F0AE         	call	_fputc	;wreg free
  6816  011D00                     l9367:
  6817                           
  6818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6819  011D00  0E01               	movlw	1
  6820  011D02  D00C               	goto	L2
  6821  011D04                     l9371:
  6822                           
  6823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6824                           ;stkvar	_fmt @ sp[(-32)+-4]
  6825  011D04  0EDC               	movlw	-36
  6826  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  6827  011D0C  0EDD               	movlw	-35
  6828  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6829  011D14  2ADE               	incf	postinc2,f,c
  6830  011D16  0E00               	movlw	0
  6831  011D18  22DD               	addwfc	postdec2,f,c
  6832                           
  6833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6834  011D1A  0E00               	movlw	0
  6835  011D1C                     L2:
  6836  011D1C  6E35               	movwf	btemp^0,c
  6837  011D1E  0E00               	movlw	0
  6838  011D20  6E36               	movwf	(btemp+1)^0,c
  6839  011D22  D02A               	goto	l1912
  6840  011D24                     l9377:
  6841                           
  6842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6843                           ;stkvar	_fp @ sp[(-32)+-2]
  6844  011D24  0EDE               	movlw	-34
  6845  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  6846  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  6847                           
  6848                           ;stkvar	_fmt @ sp[(-34)+-4]
  6849  011D32  0EDA               	movlw	-38
  6850  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  6851  011D3A  0EDB               	movlw	-37
  6852  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6853  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  6854  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  6855  011D4E                     	if	0	;tblptru may be non-zero
  6856  011D4E                     	endif
  6857  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6858  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  6859  011D50  6EF8               	movwf	tblptru,c
  6860  011D52                     	endif
  6861  011D52  0008               	tblrd		*
  6862  011D54  50F5               	movf	tablat,w,c
  6863  011D56  6EE6               	movwf	postinc1,c
  6864  011D58  0E00               	movlw	0
  6865  011D5A  6EE6               	movwf	postinc1,c
  6866  011D5C  EC98  F0AE         	call	_fputc	;wreg free
  6867                           
  6868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6869                           ;stkvar	_fmt @ sp[(-32)+-4]
  6870  011D60  0EDC               	movlw	-36
  6871  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  6872  011D68  0EDD               	movlw	-35
  6873  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6874  011D70  2ADE               	incf	postinc2,f,c
  6875  011D72  0E00               	movlw	0
  6876  011D74  22DD               	addwfc	postdec2,f,c
  6877  011D76  D7C4               	goto	l9367
  6878  011D78                     l1912:
  6879                           
  6880                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  6881  011D78  0EDA               	movlw	218
  6882  011D7A  26E1               	addwf	fsr1l,f,c
  6883  011D7C  0EFF               	movlw	255
  6884  011D7E  22E2               	addwfc	fsr1h,f,c
  6885  011D80  0012               	return		;funcret
  6886  011D82                     __end_of_vfpfcnvrt:
  6887                           	opt callstack 0
  6888                           
  6889 ;; *************** function _xtoa *****************
  6890 ;; Defined at:
  6891 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6894 ;;		 -> f(6), NULL(0), 
  6895 ;;  d               8  [STACK] unsigned long long 
  6896 ;;  x               1  [STACK] unsigned char 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  n               8  [STACK] unsigned long long 
  6899 ;;  c               2  [STACK] int 
  6900 ;;  i               2  [STACK] int 
  6901 ;;  w               2  [STACK] int 
  6902 ;;  p               2  [STACK] int 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  2  [STACK] int 
  6905 ;; Registers used:
  6906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/4
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6916 ;;Total ram usage:        0 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:   11
  6919 ;; This function calls:
  6920 ;;		_isalpha
  6921 ;;		_isupper
  6922 ;;		_pad
  6923 ;;		_toupper
  6924 ;; This function is called by:
  6925 ;;		_vfpfcnvrt
  6926 ;; This function uses a reentrant model
  6927 ;;
  6928                           
  6929                           	psect	text30
  6930  013C68                     __ptext30:
  6931                           	opt callstack 0
  6932  013C68                     _xtoa:
  6933                           	opt callstack 0
  6934                           
  6935                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  6936  013C68  0E14               	movlw	20
  6937  013C6A  26E1               	addwf	fsr1l,f,c
  6938  013C6C  0E00               	movlw	0
  6939  013C6E  22E2               	addwfc	fsr1h,f,c
  6940                           
  6941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6942                           
  6943                           ;incstack = 0
  6944  013C70  AE21               	btfss	(_prec+1)^0,7,c
  6945                           
  6946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6947  013C72  9222               	bcf	_flags^0,1,c
  6948                           
  6949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6950  013C74  BE21               	btfsc	(_prec+1)^0,7,c
  6951  013C76  D005               	goto	u9150
  6952  013C78  5021               	movf	(_prec+1)^0,w,c
  6953  013C7A  E110               	bnz	l9159
  6954  013C7C  0420               	decf	_prec^0,w,c
  6955  013C7E  B0D8               	btfsc	status,0,c
  6956  013C80  D00D               	goto	l9159
  6957  013C82                     u9150:
  6958  013C82  0E01               	movlw	1
  6959  013C84  6E3F               	movwf	(btemp+10)^0,c
  6960  013C86  0E00               	movlw	0
  6961  013C88  6E40               	movwf	(btemp+11)^0,c
  6962                           
  6963                           ;stkvar	_p @ sp[(-20)+18]
  6964  013C8A  0EFE               	movlw	-2
  6965  013C8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6966  013C92  0EFF               	movlw	-1
  6967  013C94  0060  F103  FFE3   	movff	btemp+11,plusw1
  6968  013C9A  D008               	goto	l1862
  6969  013C9C                     l9159:
  6970                           
  6971                           ;stkvar	_p @ sp[(-20)+18]
  6972  013C9C  0EFE               	movlw	-2
  6973  013C9E  0060  F083  FFE3   	movff	_prec,plusw1
  6974  013CA4  0EFF               	movlw	-1
  6975  013CA6  0060  F087  FFE3   	movff	_prec+1,plusw1
  6976  013CAC                     l1862:
  6977                           
  6978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6979                           ;stkvar	_w @ sp[(-20)+16]
  6980  013CAC  0EFC               	movlw	-4
  6981  013CAE  0060  F07B  FFE3   	movff	_width,plusw1
  6982  013CB4  0EFD               	movlw	-3
  6983  013CB6  0060  F07F  FFE3   	movff	_width+1,plusw1
  6984                           
  6985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6986  013CBC  A822               	btfss	_flags^0,4,c
  6987  013CBE  D00B               	goto	l9165
  6988                           
  6989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6990                           ;stkvar	_w @ sp[(-20)+16]
  6991  013CC0  50E1               	movf	fsr1l,w,c
  6992  013CC2  0FFC               	addlw	-4
  6993  013CC4  6ED9               	movwf	fsr2l,c
  6994  013CC6  50E2               	movf	fsr1h,w,c
  6995  013CC8  6EDA               	movwf	fsr2h,c
  6996  013CCA  0EFF               	movlw	255
  6997  013CCC  22DA               	addwfc	fsr2h,f,c
  6998  013CCE  0EFE               	movlw	254
  6999  013CD0  26DE               	addwf	postinc2,f,c
  7000  013CD2  0EFF               	movlw	255
  7001  013CD4  22DD               	addwfc	postdec2,f,c
  7002  013CD6                     l9165:
  7003                           
  7004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7005                           ;stkvar	_d @ sp[(-20)+-10]
  7006  013CD6  0EE2               	movlw	226
  7007  013CD8  24E1               	addwf	fsr1l,w,c
  7008  013CDA  6ED9               	movwf	fsr2l,c
  7009  013CDC  0EFF               	movlw	255
  7010  013CDE  20E2               	addwfc	fsr1h,w,c
  7011  013CE0  6EDA               	movwf	fsr2h,c
  7012                           
  7013                           ;stkvar	_n @ sp[(-20)+4]
  7014  013CE2  0E08               	movlw	8
  7015  013CE4  6E35               	movwf	btemp^0,c
  7016  013CE6  0EF0               	movlw	-16
  7017  013CE8                     us917999:
  7018  013CE8  006F FF7B FFE3     	movff	postinc2,plusw1
  7019  013CEE  28E8               	incf	wreg,w,c
  7020  013CF0  2E35               	decfsz	btemp^0,f,c
  7021  013CF2  D7FA               	bra	us917999
  7022                           
  7023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7024  013CF4  0E4F               	movlw	79
  7025  013CF6  6E3F               	movwf	(btemp+10)^0,c
  7026  013CF8  0E00               	movlw	0
  7027  013CFA  6E40               	movwf	(btemp+11)^0,c
  7028                           
  7029                           ;stkvar	_i @ sp[(-20)+14]
  7030  013CFC  0EFA               	movlw	-6
  7031  013CFE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7032  013D04  0EFB               	movlw	-5
  7033  013D06  0060  F103  FFE3   	movff	btemp+11,plusw1
  7034                           
  7035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7036  013D0C  0101               	movlb	1	; () banked
  7037  013D0E  6BF7               	clrf	(_dbuf+79)& (0+255),b
  7038                           
  7039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7040  013D10  D0EE               	goto	l9203
  7041  013D12                     l9171:
  7042                           
  7043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  7044                           ;stkvar	_i @ sp[(-20)+14]
  7045  013D12  50E1               	movf	fsr1l,w,c
  7046  013D14  0FFA               	addlw	-6
  7047  013D16  6ED9               	movwf	fsr2l,c
  7048  013D18  50E2               	movf	fsr1h,w,c
  7049  013D1A  6EDA               	movwf	fsr2h,c
  7050  013D1C  0EFF               	movlw	255
  7051  013D1E  22DA               	addwfc	fsr2h,f,c
  7052  013D20  06DE               	decf	postinc2,f,c
  7053  013D22  0E00               	movlw	0
  7054  013D24  5ADD               	subwfb	postdec2,f,c
  7055                           
  7056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7057                           ;stkvar	_n @ sp[(-20)+4]
  7058  013D26  0EF0               	movlw	-16
  7059  013D28  006F FF8C  F03F    	movff	plusw1,btemp+10
  7060  013D2E  0EF1               	movlw	-15
  7061  013D30  006F FF8C  F040    	movff	plusw1,btemp+11
  7062  013D36  0E0F               	movlw	15
  7063  013D38  163F               	andwf	(btemp+10)^0,f,c
  7064  013D3A  0E00               	movlw	0
  7065  013D3C  1640               	andwf	(btemp+11)^0,f,c
  7066                           
  7067                           ;stkvar	_c @ sp[(-20)+12]
  7068  013D3E  0EF8               	movlw	-8
  7069  013D40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7070  013D46  0EF9               	movlw	-7
  7071  013D48  0060  F103  FFE3   	movff	btemp+11,plusw1
  7072                           
  7073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7074                           ;stkvar	_c @ sp[(-20)+12]
  7075  013D4E  0EF9               	movlw	-7
  7076  013D50  BEE3               	btfsc	plusw1,7,c
  7077  013D52  D00F               	goto	l9179
  7078  013D54  0EF9               	movlw	-7
  7079  013D56  50E3               	movf	plusw1,w,c
  7080  013D58  E108               	bnz	u9180
  7081  013D5A  0EF8               	movlw	-8
  7082  013D5C  006F FF8C  F035    	movff	plusw1,btemp
  7083  013D62  0E0A               	movlw	10
  7084  013D64  5E35               	subwf	btemp^0,f,c
  7085  013D66  A0D8               	btfss	status,0,c
  7086  013D68  D004               	goto	l9179
  7087  013D6A                     u9180:
  7088                           
  7089                           ;stkvar	_c @ sp[(-20)+12]
  7090  013D6A  0EF8               	movlw	-8
  7091  013D6C  50E3               	movf	plusw1,w,c
  7092  013D6E  0F57               	addlw	87
  7093  013D70  D003               	goto	L3
  7094  013D72                     l9179:
  7095                           
  7096                           ;stkvar	_c @ sp[(-20)+12]
  7097  013D72  0EF8               	movlw	-8
  7098  013D74  50E3               	movf	plusw1,w,c
  7099  013D76  0F30               	addlw	48
  7100  013D78                     L3:
  7101  013D78  6E3F               	movwf	(btemp+10)^0,c
  7102  013D7A  0EF9               	movlw	-7
  7103  013D7C  006F FF8C  F040    	movff	plusw1,btemp+11
  7104  013D82  0E00               	movlw	0
  7105  013D84  2240               	addwfc	(btemp+11)^0,f,c
  7106                           
  7107                           ;stkvar	_c @ sp[(-20)+12]
  7108  013D86  0EF8               	movlw	-8
  7109  013D88  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7110  013D8E  0EF9               	movlw	-7
  7111  013D90  0060  F103  FFE3   	movff	btemp+11,plusw1
  7112  013D96  0EBF               	movlw	191
  7113  013D98  6E3F               	movwf	(btemp+10)^0,c
  7114  013D9A  0EFF               	movlw	255
  7115  013D9C  6E40               	movwf	(btemp+11)^0,c
  7116                           
  7117                           ;stkvar	_x @ sp[(-20)+-11]
  7118  013D9E  0EE1               	movlw	-31
  7119  013DA0  50E3               	movf	plusw1,w,c
  7120  013DA2  6E3D               	movwf	(btemp+8)^0,c
  7121  013DA4  6A3E               	clrf	(btemp+9)^0,c
  7122  013DA6  503F               	movf	(btemp+10)^0,w,c
  7123  013DA8  263D               	addwf	(btemp+8)^0,f,c
  7124  013DAA  5040               	movf	(btemp+11)^0,w,c
  7125  013DAC  223E               	addwfc	(btemp+9)^0,f,c
  7126  013DAE  503E               	movf	(btemp+9)^0,w,c
  7127  013DB0  E106               	bnz	u9190
  7128  013DB2  0E1A               	movlw	26
  7129  013DB4  5C3D               	subwf	(btemp+8)^0,w,c
  7130  013DB6  B0D8               	btfsc	status,0,c
  7131  013DB8  D002               	goto	u9190
  7132  013DBA  0E01               	movlw	1
  7133  013DBC  D001               	goto	u9200
  7134  013DBE                     u9190:
  7135  013DBE  0E00               	movlw	0
  7136  013DC0                     u9200:
  7137  013DC0  6E3F               	movwf	(btemp+10)^0,c
  7138  013DC2  6A40               	clrf	(btemp+11)^0,c
  7139                           
  7140                           ;stkvar	_xtoa$4103 @ sp[(-20)+2]
  7141  013DC4  0EEE               	movlw	-18
  7142  013DC6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7143  013DCC  0EEF               	movlw	-17
  7144  013DCE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7145                           
  7146                           ;stkvar	_xtoa$4103 @ sp[(-20)+2]
  7147  013DD4  0EEE               	movlw	-18
  7148  013DD6  006F FF8C  F035    	movff	plusw1,btemp
  7149  013DDC  0EEF               	movlw	-17
  7150  013DDE  50E3               	movf	plusw1,w,c
  7151  013DE0  1035               	iorwf	btemp^0,w,c
  7152  013DE2  B4D8               	btfsc	status,2,c
  7153  013DE4  D041               	goto	l9195
  7154  013DE6  0E9F               	movlw	159
  7155  013DE8  6E3F               	movwf	(btemp+10)^0,c
  7156  013DEA  0EFF               	movlw	255
  7157  013DEC  6E40               	movwf	(btemp+11)^0,c
  7158                           
  7159                           ;stkvar	_c @ sp[(-20)+12]
  7160  013DEE  0EF8               	movlw	-8
  7161  013DF0  006F FF8C  F03D    	movff	plusw1,btemp+8
  7162  013DF6  0EF9               	movlw	-7
  7163  013DF8  006F FF8C  F03E    	movff	plusw1,btemp+9
  7164  013DFE  0E20               	movlw	32
  7165  013E00  123D               	iorwf	(btemp+8)^0,f,c
  7166  013E02  0E00               	movlw	0
  7167  013E04  123E               	iorwf	(btemp+9)^0,f,c
  7168  013E06  503F               	movf	(btemp+10)^0,w,c
  7169  013E08  263D               	addwf	(btemp+8)^0,f,c
  7170  013E0A  5040               	movf	(btemp+11)^0,w,c
  7171  013E0C  223E               	addwfc	(btemp+9)^0,f,c
  7172  013E0E  503E               	movf	(btemp+9)^0,w,c
  7173  013E10  E106               	bnz	u9220
  7174  013E12  0E1A               	movlw	26
  7175  013E14  5C3D               	subwf	(btemp+8)^0,w,c
  7176  013E16  B0D8               	btfsc	status,0,c
  7177  013E18  D002               	goto	u9220
  7178  013E1A  0E01               	movlw	1
  7179  013E1C  D001               	goto	u9230
  7180  013E1E                     u9220:
  7181  013E1E  0E00               	movlw	0
  7182  013E20                     u9230:
  7183  013E20  6E3F               	movwf	(btemp+10)^0,c
  7184  013E22  6A40               	clrf	(btemp+11)^0,c
  7185                           
  7186                           ;stkvar	_xtoa$4104 @ sp[(-20)+0]
  7187  013E24  0EEC               	movlw	-20
  7188  013E26  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7189  013E2C  0EED               	movlw	-19
  7190  013E2E  0060  F103  FFE3   	movff	btemp+11,plusw1
  7191                           
  7192                           ;stkvar	_xtoa$4104 @ sp[(-20)+0]
  7193  013E34  0EEC               	movlw	-20
  7194  013E36  006F FF8C  F035    	movff	plusw1,btemp
  7195  013E3C  0EED               	movlw	-19
  7196  013E3E  50E3               	movf	plusw1,w,c
  7197  013E40  1035               	iorwf	btemp^0,w,c
  7198  013E42  B4D8               	btfsc	status,2,c
  7199  013E44  D011               	goto	l9195
  7200                           
  7201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7202                           ;stkvar	_c @ sp[(-20)+12]
  7203  013E46  0EF8               	movlw	-8
  7204  013E48  006F FF8F FFE6     	movff	plusw1,postinc1
  7205  013E4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7206  013E54  EC08  F0B6         	call	_toupper	;wreg free
  7207                           
  7208                           ;stkvar	_c @ sp[(-20)+12]
  7209  013E58  0EF8               	movlw	-8
  7210  013E5A  0060  F0D7  FFE3   	movff	btemp,plusw1
  7211  013E60  0EF9               	movlw	-7
  7212  013E62  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  7213  013E68                     l9195:
  7214                           
  7215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7216                           ;stkvar	_c @ sp[(-20)+12]
  7217                           ;stkvar	_i @ sp[(-20)+14]
  7218  013E68  0EFA               	movlw	-6
  7219  013E6A  006F FF8C  F03F    	movff	plusw1,btemp+10
  7220  013E70  0EFB               	movlw	-5
  7221  013E72  006F FF8C  F040    	movff	plusw1,btemp+11
  7222  013E78  0EA8               	movlw	low _dbuf
  7223  013E7A  243F               	addwf	(btemp+10)^0,w,c
  7224  013E7C  6ED9               	movwf	fsr2l,c
  7225  013E7E  0E01               	movlw	high _dbuf
  7226  013E80  2040               	addwfc	(btemp+11)^0,w,c
  7227  013E82  6EDA               	movwf	fsr2h,c
  7228  013E84  0EF8               	movlw	-8
  7229  013E86  006F FF8F FFDF     	movff	plusw1,indf2
  7230                           
  7231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  7232                           ;stkvar	_p @ sp[(-20)+18]
  7233  013E8C  50E1               	movf	fsr1l,w,c
  7234  013E8E  0FFE               	addlw	-2
  7235  013E90  6ED9               	movwf	fsr2l,c
  7236  013E92  50E2               	movf	fsr1h,w,c
  7237  013E94  6EDA               	movwf	fsr2h,c
  7238  013E96  0EFF               	movlw	255
  7239  013E98  22DA               	addwfc	fsr2h,f,c
  7240  013E9A  06DE               	decf	postinc2,f,c
  7241  013E9C  0E00               	movlw	0
  7242  013E9E  5ADD               	subwfb	postdec2,f,c
  7243                           
  7244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  7245                           ;stkvar	_w @ sp[(-20)+16]
  7246  013EA0  50E1               	movf	fsr1l,w,c
  7247  013EA2  0FFC               	addlw	-4
  7248  013EA4  6ED9               	movwf	fsr2l,c
  7249  013EA6  50E2               	movf	fsr1h,w,c
  7250  013EA8  6EDA               	movwf	fsr2h,c
  7251  013EAA  0EFF               	movlw	255
  7252  013EAC  22DA               	addwfc	fsr2h,f,c
  7253  013EAE  06DE               	decf	postinc2,f,c
  7254  013EB0  0E00               	movlw	0
  7255  013EB2  5ADD               	subwfb	postdec2,f,c
  7256                           
  7257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7258  013EB4  0E04               	movlw	4
  7259  013EB6  6E40               	movwf	(btemp+11)^0,c
  7260                           
  7261                           ;stkvar	_n @ sp[(-20)+4]
  7262  013EB8  50E1               	movf	fsr1l,w,c
  7263  013EBA  0FF0               	addlw	-16
  7264  013EBC  6ED9               	movwf	fsr2l,c
  7265  013EBE  50E2               	movf	fsr1h,w,c
  7266  013EC0  6EDA               	movwf	fsr2h,c
  7267  013EC2  0EFF               	movlw	255
  7268  013EC4  22DA               	addwfc	fsr2h,f,c
  7269  013EC6  2840               	incf	(btemp+11)^0,w,c
  7270  013EC8  52DE               	movf	postinc2,f,c
  7271  013ECA  D00F               	goto	u9250
  7272  013ECC                     u9255:
  7273  013ECC  52DE               	movf	postinc2,f,c
  7274  013ECE  52DE               	movf	postinc2,f,c
  7275  013ED0  52DE               	movf	postinc2,f,c
  7276  013ED2  52DE               	movf	postinc2,f,c
  7277  013ED4  52DE               	movf	postinc2,f,c
  7278  013ED6  52DE               	movf	postinc2,f,c
  7279  013ED8  90D8               	bcf	status,0,c
  7280  013EDA  32DD               	rrcf	postdec2,f,c
  7281  013EDC  32DD               	rrcf	postdec2,f,c
  7282  013EDE  32DD               	rrcf	postdec2,f,c
  7283  013EE0  32DD               	rrcf	postdec2,f,c
  7284  013EE2  32DD               	rrcf	postdec2,f,c
  7285  013EE4  32DD               	rrcf	postdec2,f,c
  7286  013EE6  32DD               	rrcf	postdec2,f,c
  7287  013EE8  32DE               	rrcf	postinc2,f,c
  7288  013EEA                     u9250:
  7289  013EEA  2EE8               	decfsz	wreg,f,c
  7290  013EEC  D7EF               	goto	u9255
  7291  013EEE                     l9203:
  7292                           
  7293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7294                           ;stkvar	_i @ sp[(-20)+14]
  7295  013EEE  0EFB               	movlw	-5
  7296  013EF0  BEE3               	btfsc	plusw1,7,c
  7297  013EF2  D03A               	goto	u9300
  7298  013EF4  0EFB               	movlw	-5
  7299  013EF6  50E3               	movf	plusw1,w,c
  7300  013EF8  E108               	bnz	u9260
  7301  013EFA  0EFA               	movlw	-6
  7302  013EFC  006F FF8C  F035    	movff	plusw1,btemp
  7303  013F02  0E02               	movlw	2
  7304  013F04  5E35               	subwf	btemp^0,f,c
  7305  013F06  A0D8               	btfss	status,0,c
  7306  013F08  D02F               	goto	u9300
  7307  013F0A                     u9260:
  7308                           
  7309                           ;stkvar	_n @ sp[(-20)+4]
  7310  013F0A  0EF0               	movlw	-16
  7311  013F0C  50E3               	movf	plusw1,w,c
  7312  013F0E  E115               	bnz	u9271
  7313  013F10  0EF1               	movlw	-15
  7314  013F12  50E3               	movf	plusw1,w,c
  7315  013F14  E112               	bnz	u9271
  7316  013F16  0EF2               	movlw	-14
  7317  013F18  50E3               	movf	plusw1,w,c
  7318  013F1A  E10F               	bnz	u9271
  7319  013F1C  0EF3               	movlw	-13
  7320  013F1E  50E3               	movf	plusw1,w,c
  7321  013F20  E10C               	bnz	u9271
  7322  013F22  0EF4               	movlw	-12
  7323  013F24  50E3               	movf	plusw1,w,c
  7324  013F26  E109               	bnz	u9271
  7325  013F28  0EF5               	movlw	-11
  7326  013F2A  50E3               	movf	plusw1,w,c
  7327  013F2C  E106               	bnz	u9271
  7328  013F2E  0EF6               	movlw	-10
  7329  013F30  50E3               	movf	plusw1,w,c
  7330  013F32  E103               	bnz	u9271
  7331  013F34  0EF7               	movlw	-9
  7332  013F36  50E3               	movf	plusw1,w,c
  7333  013F38  A4D8               	btfss	status,2,c
  7334  013F3A                     u9271:
  7335  013F3A  D6EB               	goto	l9171
  7336                           
  7337                           ;stkvar	_p @ sp[(-20)+18]
  7338  013F3C  0EFF               	movlw	-1
  7339  013F3E  BEE3               	btfsc	plusw1,7,c
  7340  013F40  D007               	goto	u9280
  7341  013F42  0EFF               	movlw	-1
  7342  013F44  50E3               	movf	plusw1,w,c
  7343  013F46  E103               	bnz	u9281
  7344  013F48  0EFE               	movlw	-2
  7345  013F4A  04E3               	decf	plusw1,w,c
  7346  013F4C  B0D8               	btfsc	status,0,c
  7347  013F4E                     u9281:
  7348  013F4E  D6E1               	goto	l9171
  7349  013F50                     u9280:
  7350                           
  7351                           ;stkvar	_w @ sp[(-20)+16]
  7352  013F50  0EFD               	movlw	-3
  7353  013F52  BEE3               	btfsc	plusw1,7,c
  7354  013F54  D009               	goto	u9300
  7355  013F56  0EFD               	movlw	-3
  7356  013F58  50E3               	movf	plusw1,w,c
  7357  013F5A  E104               	bnz	u9290
  7358  013F5C  0EFC               	movlw	-4
  7359  013F5E  04E3               	decf	plusw1,w,c
  7360  013F60  A0D8               	btfss	status,0,c
  7361  013F62  D002               	goto	u9300
  7362  013F64                     u9290:
  7363  013F64  B222               	btfsc	_flags^0,1,c
  7364  013F66  D6D5               	goto	l9171
  7365  013F68                     u9300:
  7366                           
  7367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7368  013F68  A822               	btfss	_flags^0,4,c
  7369  013F6A  D036               	goto	l9219
  7370                           
  7371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  7372                           ;stkvar	_i @ sp[(-20)+14]
  7373  013F6C  50E1               	movf	fsr1l,w,c
  7374  013F6E  0FFA               	addlw	-6
  7375  013F70  6ED9               	movwf	fsr2l,c
  7376  013F72  50E2               	movf	fsr1h,w,c
  7377  013F74  6EDA               	movwf	fsr2h,c
  7378  013F76  0EFF               	movlw	255
  7379  013F78  22DA               	addwfc	fsr2h,f,c
  7380  013F7A  06DE               	decf	postinc2,f,c
  7381  013F7C  0E00               	movlw	0
  7382  013F7E  5ADD               	subwfb	postdec2,f,c
  7383                           
  7384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7385                           ;stkvar	_x @ sp[(-20)+-11]
  7386                           ;stkvar	_i @ sp[(-20)+14]
  7387  013F80  0EFA               	movlw	-6
  7388  013F82  006F FF8C  F03F    	movff	plusw1,btemp+10
  7389  013F88  0EFB               	movlw	-5
  7390  013F8A  006F FF8C  F040    	movff	plusw1,btemp+11
  7391  013F90  0EA8               	movlw	low _dbuf
  7392  013F92  243F               	addwf	(btemp+10)^0,w,c
  7393  013F94  6ED9               	movwf	fsr2l,c
  7394  013F96  0E01               	movlw	high _dbuf
  7395  013F98  2040               	addwfc	(btemp+11)^0,w,c
  7396  013F9A  6EDA               	movwf	fsr2h,c
  7397  013F9C  0EE1               	movlw	-31
  7398  013F9E  006F FF8F FFDF     	movff	plusw1,indf2
  7399                           
  7400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  7401                           ;stkvar	_i @ sp[(-20)+14]
  7402  013FA4  50E1               	movf	fsr1l,w,c
  7403  013FA6  0FFA               	addlw	-6
  7404  013FA8  6ED9               	movwf	fsr2l,c
  7405  013FAA  50E2               	movf	fsr1h,w,c
  7406  013FAC  6EDA               	movwf	fsr2h,c
  7407  013FAE  0EFF               	movlw	255
  7408  013FB0  22DA               	addwfc	fsr2h,f,c
  7409  013FB2  06DE               	decf	postinc2,f,c
  7410  013FB4  0E00               	movlw	0
  7411  013FB6  5ADD               	subwfb	postdec2,f,c
  7412                           
  7413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7414                           ;stkvar	_i @ sp[(-20)+14]
  7415  013FB8  0EFA               	movlw	-6
  7416  013FBA  006F FF8C  F03F    	movff	plusw1,btemp+10
  7417  013FC0  0EFB               	movlw	-5
  7418  013FC2  006F FF8C  F040    	movff	plusw1,btemp+11
  7419  013FC8  0EA8               	movlw	low _dbuf
  7420  013FCA  243F               	addwf	(btemp+10)^0,w,c
  7421  013FCC  6ED9               	movwf	fsr2l,c
  7422  013FCE  0E01               	movlw	high _dbuf
  7423  013FD0  2040               	addwfc	(btemp+11)^0,w,c
  7424  013FD2  6EDA               	movwf	fsr2h,c
  7425  013FD4  0E30               	movlw	48
  7426  013FD6  6EDF               	movwf	indf2,c
  7427  013FD8                     l9219:
  7428                           
  7429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7430                           ;stkvar	_w @ sp[(-20)+16]
  7431  013FD8  0EFC               	movlw	-4
  7432  013FDA  006F FF8F FFE6     	movff	plusw1,postinc1
  7433  013FE0  006F FF8F FFE6     	movff	plusw1,postinc1
  7434                           
  7435                           ;stkvar	_i @ sp[(-22)+14]
  7436  013FE6  0EA8               	movlw	low _dbuf
  7437  013FE8  6E3F               	movwf	(btemp+10)^0,c
  7438  013FEA  0E01               	movlw	high _dbuf
  7439  013FEC  6E40               	movwf	(btemp+11)^0,c
  7440  013FEE  0EF8               	movlw	-8
  7441  013FF0  50E3               	movf	plusw1,w,c
  7442  013FF2  263F               	addwf	(btemp+10)^0,f,c
  7443  013FF4  0EF9               	movlw	-7
  7444  013FF6  50E3               	movf	plusw1,w,c
  7445  013FF8  2240               	addwfc	(btemp+11)^0,f,c
  7446  013FFA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7447  014000  0060  F103  FFE6   	movff	btemp+11,postinc1
  7448                           
  7449                           ;stkvar	_fp @ sp[(-24)+-2]
  7450  014006  0EE6               	movlw	-26
  7451  014008  006F FF8F FFE6     	movff	plusw1,postinc1
  7452  01400E  006F FF8F FFE6     	movff	plusw1,postinc1
  7453  014014  ECB6  F0AF         	call	_pad	;wreg free
  7454                           
  7455                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  7456  014018  0EE1               	movlw	225
  7457  01401A  26E1               	addwf	fsr1l,f,c
  7458  01401C  0EFF               	movlw	255
  7459  01401E  22E2               	addwfc	fsr1h,f,c
  7460  014020  0012               	return		;funcret
  7461  014022                     __end_of_xtoa:
  7462                           	opt callstack 0
  7463                           
  7464 ;; *************** function _toupper *****************
  7465 ;; Defined at:
  7466 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  c               2  [STACK] int 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  2  [STACK] int 
  7473 ;; Registers used:
  7474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/1
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7484 ;;Total ram usage:        0 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:    7
  7487 ;; This function calls:
  7488 ;;		_islower
  7489 ;; This function is called by:
  7490 ;;		_xtoa
  7491 ;; This function uses a reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text31
  7495  016C10                     __ptext31:
  7496                           	opt callstack 0
  7497  016C10                     _toupper:
  7498                           	opt callstack 0
  7499                           
  7500                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7501  016C10  52E6               	movf	postinc1,f,c
  7502  016C12  52E6               	movf	postinc1,f,c
  7503                           
  7504                           ;stkvar	_c @ sp[(-2)+-2]
  7505                           
  7506                           ;incstack = 0
  7507  016C14  0EFC               	movlw	-4
  7508  016C16  50E3               	movf	plusw1,w,c
  7509  016C18  0F9F               	addlw	159
  7510  016C1A  6E3F               	movwf	(btemp+10)^0,c
  7511  016C1C  0EFD               	movlw	-3
  7512  016C1E  006F FF8C  F040    	movff	plusw1,btemp+11
  7513  016C24  0EFF               	movlw	255
  7514  016C26  2240               	addwfc	(btemp+11)^0,f,c
  7515  016C28  5040               	movf	(btemp+11)^0,w,c
  7516  016C2A  E106               	bnz	u4980
  7517  016C2C  0E1A               	movlw	26
  7518  016C2E  5C3F               	subwf	(btemp+10)^0,w,c
  7519  016C30  B0D8               	btfsc	status,0,c
  7520  016C32  D002               	goto	u4980
  7521  016C34  0E01               	movlw	1
  7522  016C36  D001               	goto	u4990
  7523  016C38                     u4980:
  7524  016C38  0E00               	movlw	0
  7525  016C3A                     u4990:
  7526  016C3A  6E3F               	movwf	(btemp+10)^0,c
  7527  016C3C  6A40               	clrf	(btemp+11)^0,c
  7528                           
  7529                           ;stkvar	_toupper$4756 @ sp[(-2)+0]
  7530  016C3E  0EFE               	movlw	-2
  7531  016C40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7532  016C46  0EFF               	movlw	-1
  7533  016C48  0060  F103  FFE3   	movff	btemp+11,plusw1
  7534                           
  7535                           ;stkvar	_toupper$4756 @ sp[(-2)+0]
  7536  016C4E  0EFE               	movlw	-2
  7537  016C50  006F FF8C  F035    	movff	plusw1,btemp
  7538  016C56  0EFF               	movlw	-1
  7539  016C58  50E3               	movf	plusw1,w,c
  7540  016C5A  1035               	iorwf	btemp^0,w,c
  7541  016C5C  B4D8               	btfsc	status,2,c
  7542  016C5E  D00D               	goto	l6151
  7543                           
  7544                           ;stkvar	_c @ sp[(-2)+-2]
  7545  016C60  0EFC               	movlw	-4
  7546  016C62  006F FF8C  F035    	movff	plusw1,btemp
  7547  016C68  0EFD               	movlw	-3
  7548  016C6A  006F FF8C  F036    	movff	plusw1,btemp+1
  7549  016C70  0E5F               	movlw	95
  7550  016C72  1635               	andwf	btemp^0,f,c
  7551  016C74  0E00               	movlw	0
  7552  016C76  1636               	andwf	(btemp+1)^0,f,c
  7553  016C78  D008               	goto	l2792
  7554  016C7A                     l6151:
  7555                           
  7556                           ;stkvar	_c @ sp[(-2)+-2]
  7557  016C7A  0EFC               	movlw	-4
  7558  016C7C  006F FF8C  F035    	movff	plusw1,btemp
  7559  016C82  0EFD               	movlw	-3
  7560  016C84  006F FF8C  F036    	movff	plusw1,btemp+1
  7561  016C8A                     l2792:
  7562                           
  7563                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7564  016C8A  52E5               	movf	postdec1,f,c
  7565  016C8C  52E5               	movf	postdec1,f,c
  7566  016C8E  52E5               	movf	postdec1,f,c
  7567  016C90  52E5               	movf	postdec1,f,c
  7568  016C92  0012               	return		;funcret
  7569  016C94                     __end_of_toupper:
  7570                           	opt callstack 0
  7571                           
  7572 ;; *************** function _islower *****************
  7573 ;; Defined at:
  7574 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  c               2  [STACK] int 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;		None
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  2  [STACK] int 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7592 ;;Total ram usage:        0 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    6
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_toupper
  7599 ;; This function uses a reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text32
  7603  0175E4                     __ptext32:
  7604                           	opt callstack 0
  7605  0175E4                     _islower:
  7606                           	opt callstack 16
  7607                           
  7608                           ;stkvar	_c @ sp[(0)+-2]
  7609                           
  7610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7611                           ;incstack = 0
  7612  0175E4  0EFE               	movlw	-2
  7613  0175E6  50E3               	movf	plusw1,w,c
  7614  0175E8  0F9F               	addlw	159
  7615  0175EA  6E3F               	movwf	(btemp+10)^0,c
  7616  0175EC  0EFF               	movlw	-1
  7617  0175EE  006F FF8C  F040    	movff	plusw1,btemp+11
  7618  0175F4  0EFF               	movlw	255
  7619  0175F6  2240               	addwfc	(btemp+11)^0,f,c
  7620  0175F8  5040               	movf	(btemp+11)^0,w,c
  7621  0175FA  E106               	bnz	u4670
  7622  0175FC  0E1A               	movlw	26
  7623  0175FE  5C3F               	subwf	(btemp+10)^0,w,c
  7624  017600  B0D8               	btfsc	status,0,c
  7625  017602  D002               	goto	u4670
  7626  017604  0E01               	movlw	1
  7627  017606  D001               	goto	u4680
  7628  017608                     u4670:
  7629  017608  0E00               	movlw	0
  7630  01760A                     u4680:
  7631  01760A  6E35               	movwf	btemp^0,c
  7632  01760C  6A36               	clrf	(btemp+1)^0,c
  7633                           
  7634                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7635  01760E  52E5               	movf	postdec1,f,c
  7636  017610  52E5               	movf	postdec1,f,c
  7637  017612  0012               	return		;funcret
  7638  017614                     __end_of_islower:
  7639                           	opt callstack 0
  7640                           
  7641 ;; *************** function _isalpha *****************
  7642 ;; Defined at:
  7643 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  c               2  [STACK] int 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  2  [STACK] int 
  7650 ;; Registers used:
  7651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    6
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_xtoa
  7668 ;; This function uses a reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text33
  7672  01739E                     __ptext33:
  7673                           	opt callstack 0
  7674  01739E                     _isalpha:
  7675                           	opt callstack 17
  7676                           
  7677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7678                           ;incstack = 0
  7679  01739E  0E9F               	movlw	159
  7680  0173A0  6E3F               	movwf	(btemp+10)^0,c
  7681  0173A2  0EFF               	movlw	255
  7682  0173A4  6E40               	movwf	(btemp+11)^0,c
  7683                           
  7684                           ;stkvar	_c @ sp[(0)+-2]
  7685  0173A6  0EFE               	movlw	-2
  7686  0173A8  006F FF8C  F03D    	movff	plusw1,btemp+8
  7687  0173AE  0EFF               	movlw	-1
  7688  0173B0  006F FF8C  F03E    	movff	plusw1,btemp+9
  7689  0173B6  0E20               	movlw	32
  7690  0173B8  123D               	iorwf	(btemp+8)^0,f,c
  7691  0173BA  0E00               	movlw	0
  7692  0173BC  123E               	iorwf	(btemp+9)^0,f,c
  7693  0173BE  503F               	movf	(btemp+10)^0,w,c
  7694  0173C0  263D               	addwf	(btemp+8)^0,f,c
  7695  0173C2  5040               	movf	(btemp+11)^0,w,c
  7696  0173C4  223E               	addwfc	(btemp+9)^0,f,c
  7697  0173C6  503E               	movf	(btemp+9)^0,w,c
  7698  0173C8  E106               	bnz	u4960
  7699  0173CA  0E1A               	movlw	26
  7700  0173CC  5C3D               	subwf	(btemp+8)^0,w,c
  7701  0173CE  B0D8               	btfsc	status,0,c
  7702  0173D0  D002               	goto	u4960
  7703  0173D2  0E01               	movlw	1
  7704  0173D4  D001               	goto	u4970
  7705  0173D6                     u4960:
  7706  0173D6  0E00               	movlw	0
  7707  0173D8                     u4970:
  7708  0173D8  6E35               	movwf	btemp^0,c
  7709  0173DA  6A36               	clrf	(btemp+1)^0,c
  7710                           
  7711                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7712  0173DC  52E5               	movf	postdec1,f,c
  7713  0173DE  52E5               	movf	postdec1,f,c
  7714  0173E0  0012               	return		;funcret
  7715  0173E2                     __end_of_isalpha:
  7716                           	opt callstack 0
  7717                           
  7718 ;; *************** function _strncmp *****************
  7719 ;; Defined at:
  7720 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  _l              2  [STACK] PTR const unsigned char 
  7723 ;;		 -> ct(3), 
  7724 ;;  _r              2  [STACK] PTR const unsigned char 
  7725 ;;		 -> STR_42(3), 
  7726 ;;  n               2  [STACK] unsigned int 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  r               2  [STACK] PTR const unsigned char 
  7729 ;;		 -> STR_42(3), 
  7730 ;;  l               2  [STACK] PTR const unsigned char 
  7731 ;;		 -> ct(3), 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  2  [STACK] int 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/4
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    6
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_vfpfcnvrt
  7752 ;; This function uses a reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text34
  7756  015482                     __ptext34:
  7757                           	opt callstack 0
  7758  015482                     _strncmp:
  7759                           	opt callstack 0
  7760                           
  7761                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7762  015482  52E6               	movf	postinc1,f,c
  7763  015484  52E6               	movf	postinc1,f,c
  7764  015486  52E6               	movf	postinc1,f,c
  7765  015488  52E6               	movf	postinc1,f,c
  7766                           
  7767                           ;stkvar	__l @ sp[(-4)+-2]
  7768                           
  7769                           ;incstack = 0
  7770  01548A  0EFA               	movlw	-6
  7771  01548C  006F FF8C  F03F    	movff	plusw1,btemp+10
  7772  015492  0EFB               	movlw	-5
  7773  015494  006F FF8C  F040    	movff	plusw1,btemp+11
  7774                           
  7775                           ;stkvar	_l @ sp[(-4)+2]
  7776  01549A  0EFF               	movlw	-1
  7777  01549C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7778  0154A2  0EFE               	movlw	-2
  7779  0154A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7780                           
  7781                           ;stkvar	__r @ sp[(-4)+-4]
  7782  0154AA  0EF8               	movlw	-8
  7783  0154AC  006F FF8C  F03F    	movff	plusw1,btemp+10
  7784  0154B2  0EF9               	movlw	-7
  7785  0154B4  006F FF8C  F040    	movff	plusw1,btemp+11
  7786                           
  7787                           ;stkvar	_r @ sp[(-4)+0]
  7788  0154BA  0EFD               	movlw	-3
  7789  0154BC  0060  F103  FFE3   	movff	btemp+11,plusw1
  7790  0154C2  0EFC               	movlw	-4
  7791  0154C4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7792                           
  7793                           ;stkvar	_n @ sp[(-4)+-6]
  7794  0154CA  0EF6               	movlw	-10
  7795  0154CC  006F FF8C  F035    	movff	plusw1,btemp
  7796  0154D2  0E01               	movlw	1
  7797  0154D4  5E35               	subwf	btemp^0,f,c
  7798  0154D6  0EF6               	movlw	-10
  7799  0154D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7800  0154DE  0EF7               	movlw	-9
  7801  0154E0  006F FF8C  F035    	movff	plusw1,btemp
  7802  0154E6  0E00               	movlw	0
  7803  0154E8  5A35               	subwfb	btemp^0,f,c
  7804  0154EA  0EF7               	movlw	-9
  7805  0154EC  0060  F0D7  FFE3   	movff	btemp,plusw1
  7806  0154F2  0EF6               	movlw	-10
  7807  0154F4  28E3               	incf	plusw1,w,c
  7808  0154F6  E13F               	bnz	l7309
  7809  0154F8  0EF7               	movlw	-9
  7810  0154FA  28E3               	incf	plusw1,w,c
  7811  0154FC  A4D8               	btfss	status,2,c
  7812  0154FE  D03B               	goto	l7309
  7813  015500  0E00               	movlw	0
  7814  015502  6E35               	movwf	btemp^0,c
  7815  015504  0E00               	movlw	0
  7816  015506  6E36               	movwf	(btemp+1)^0,c
  7817  015508  D09B               	goto	l2764
  7818  01550A                     l7307:
  7819                           
  7820                           ;stkvar	_l @ sp[(-4)+2]
  7821  01550A  0EFE               	movlw	-2
  7822  01550C  50E3               	movf	plusw1,w,c
  7823  01550E  0F01               	addlw	1
  7824  015510  6E35               	movwf	btemp^0,c
  7825  015512  0EFE               	movlw	-2
  7826  015514  0060  F0D7  FFE3   	movff	btemp,plusw1
  7827  01551A  6A35               	clrf	btemp^0,c
  7828  01551C  0EFF               	movlw	-1
  7829  01551E  50E3               	movf	plusw1,w,c
  7830  015520  2035               	addwfc	btemp^0,w,c
  7831  015522  6E35               	movwf	btemp^0,c
  7832  015524  0EFF               	movlw	-1
  7833  015526  0060  F0D7  FFE3   	movff	btemp,plusw1
  7834                           
  7835                           ;stkvar	_r @ sp[(-4)+0]
  7836  01552C  0EFC               	movlw	-4
  7837  01552E  50E3               	movf	plusw1,w,c
  7838  015530  0F01               	addlw	1
  7839  015532  6E35               	movwf	btemp^0,c
  7840  015534  0EFC               	movlw	-4
  7841  015536  0060  F0D7  FFE3   	movff	btemp,plusw1
  7842  01553C  6A35               	clrf	btemp^0,c
  7843  01553E  0EFD               	movlw	-3
  7844  015540  50E3               	movf	plusw1,w,c
  7845  015542  2035               	addwfc	btemp^0,w,c
  7846  015544  6E35               	movwf	btemp^0,c
  7847  015546  0EFD               	movlw	-3
  7848  015548  0060  F0D7  FFE3   	movff	btemp,plusw1
  7849                           
  7850                           ;stkvar	_n @ sp[(-4)+-6]
  7851  01554E  0EF6               	movlw	-10
  7852  015550  006F FF8C  F035    	movff	plusw1,btemp
  7853  015556  0E01               	movlw	1
  7854  015558  5E35               	subwf	btemp^0,f,c
  7855  01555A  0EF6               	movlw	-10
  7856  01555C  0060  F0D7  FFE3   	movff	btemp,plusw1
  7857  015562  0EF7               	movlw	-9
  7858  015564  006F FF8C  F035    	movff	plusw1,btemp
  7859  01556A  0E00               	movlw	0
  7860  01556C  5A35               	subwfb	btemp^0,f,c
  7861  01556E  0EF7               	movlw	-9
  7862  015570  0060  F0D7  FFE3   	movff	btemp,plusw1
  7863  015576                     l7309:
  7864                           
  7865                           ;stkvar	_l @ sp[(-4)+2]
  7866  015576  0EFE               	movlw	-2
  7867  015578  006F FF8F FFD9     	movff	plusw1,fsr2l
  7868  01557E  0EFF               	movlw	-1
  7869  015580  006F FF8F FFDA     	movff	plusw1,fsr2h
  7870  015586  50DF               	movf	indf2,w,c
  7871  015588  B4D8               	btfsc	status,2,c
  7872  01558A  D03B               	goto	u7160
  7873                           
  7874                           ;stkvar	_r @ sp[(-4)+0]
  7875  01558C  50E1               	movf	fsr1l,w,c
  7876  01558E  0FFC               	addlw	-4
  7877  015590  6ED9               	movwf	fsr2l,c
  7878  015592  50E2               	movf	fsr1h,w,c
  7879  015594  6EDA               	movwf	fsr2h,c
  7880  015596  0EFF               	movlw	255
  7881  015598  22DA               	addwfc	fsr2h,f,c
  7882  01559A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7883  0155A0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7884  0155A6                     	if	0	;tblptru may be non-zero
  7885  0155A6                     	endif
  7886  0155A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7887  0155A6  0E00               	movlw	low (__mediumconst shr (0+16))
  7888  0155A8  6EF8               	movwf	tblptru,c
  7889  0155AA                     	endif
  7890  0155AA  0008               	tblrd		*
  7891  0155AC  50F5               	movf	tablat,w,c
  7892  0155AE  0900               	iorlw	0
  7893  0155B0  B4D8               	btfsc	status,2,c
  7894  0155B2  D027               	goto	u7160
  7895                           
  7896                           ;stkvar	_n @ sp[(-4)+-6]
  7897  0155B4  0EF6               	movlw	-10
  7898  0155B6  006F FF8C  F035    	movff	plusw1,btemp
  7899  0155BC  0EF7               	movlw	-9
  7900  0155BE  50E3               	movf	plusw1,w,c
  7901  0155C0  1035               	iorwf	btemp^0,w,c
  7902  0155C2  B4D8               	btfsc	status,2,c
  7903  0155C4  D01E               	goto	u7160
  7904                           
  7905                           ;stkvar	_l @ sp[(-4)+2]
  7906  0155C6  0EFE               	movlw	-2
  7907  0155C8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7908  0155CE  0EFF               	movlw	-1
  7909  0155D0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7910  0155D6  50DF               	movf	indf2,w,c
  7911  0155D8  6E40               	movwf	(btemp+11)^0,c
  7912                           
  7913                           ;stkvar	_r @ sp[(-4)+0]
  7914  0155DA  50E1               	movf	fsr1l,w,c
  7915  0155DC  0FFC               	addlw	-4
  7916  0155DE  6ED9               	movwf	fsr2l,c
  7917  0155E0  50E2               	movf	fsr1h,w,c
  7918  0155E2  6EDA               	movwf	fsr2h,c
  7919  0155E4  0EFF               	movlw	255
  7920  0155E6  22DA               	addwfc	fsr2h,f,c
  7921  0155E8  006F FF7B FFF6     	movff	postinc2,tblptrl
  7922  0155EE  006F FF77 FFF7     	movff	postdec2,tblptrh
  7923  0155F4                     	if	0	;tblptru may be non-zero
  7924  0155F4                     	endif
  7925  0155F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7926  0155F4  0E00               	movlw	low (__mediumconst shr (0+16))
  7927  0155F6  6EF8               	movwf	tblptru,c
  7928  0155F8                     	endif
  7929  0155F8  0008               	tblrd		*
  7930  0155FA  50F5               	movf	tablat,w,c
  7931  0155FC  1840               	xorwf	(btemp+11)^0,w,c
  7932  0155FE  B4D8               	btfsc	status,2,c
  7933  015600  D784               	goto	l7307
  7934  015602                     u7160:
  7935                           
  7936                           ;stkvar	_l @ sp[(-4)+2]
  7937  015602  0EFE               	movlw	-2
  7938  015604  006F FF8F FFD9     	movff	plusw1,fsr2l
  7939  01560A  0EFF               	movlw	-1
  7940  01560C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7941  015612  50DF               	movf	indf2,w,c
  7942  015614  6E35               	movwf	btemp^0,c
  7943  015616  6A36               	clrf	(btemp+1)^0,c
  7944                           
  7945                           ;stkvar	_r @ sp[(-4)+0]
  7946  015618  50E1               	movf	fsr1l,w,c
  7947  01561A  0FFC               	addlw	-4
  7948  01561C  6ED9               	movwf	fsr2l,c
  7949  01561E  50E2               	movf	fsr1h,w,c
  7950  015620  6EDA               	movwf	fsr2h,c
  7951  015622  0EFF               	movlw	255
  7952  015624  22DA               	addwfc	fsr2h,f,c
  7953  015626  006F FF7B FFF6     	movff	postinc2,tblptrl
  7954  01562C  006F FF77 FFF7     	movff	postdec2,tblptrh
  7955  015632                     	if	0	;tblptru may be non-zero
  7956  015632                     	endif
  7957  015632                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7958  015632  0E00               	movlw	low (__mediumconst shr (0+16))
  7959  015634  6EF8               	movwf	tblptru,c
  7960  015636                     	endif
  7961  015636  0008               	tblrd		*
  7962  015638  50F5               	movf	tablat,w,c
  7963  01563A  5E35               	subwf	btemp^0,f,c
  7964  01563C  0E00               	movlw	0
  7965  01563E  5A36               	subwfb	(btemp+1)^0,f,c
  7966  015640                     l2764:
  7967                           
  7968                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  7969  015640  0EF6               	movlw	246
  7970  015642  26E1               	addwf	fsr1l,f,c
  7971  015644  0EFF               	movlw	255
  7972  015646  22E2               	addwfc	fsr1h,f,c
  7973  015648  0012               	return		;funcret
  7974  01564A                     __end_of_strncmp:
  7975                           	opt callstack 0
  7976                           
  7977 ;; *************** function _stoa *****************
  7978 ;; Defined at:
  7979 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7982 ;;		 -> f(6), NULL(0), 
  7983 ;;  s               2  [STACK] PTR unsigned char 
  7984 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  7985 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  7986 ;;		 -> STR_3(4), V(189), 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  nuls            7  [STACK] unsigned char [7]
  7989 ;;  l               2  [STACK] int 
  7990 ;;  p               2  [STACK] int 
  7991 ;;  cp              2  [STACK] PTR unsigned char 
  7992 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  7993 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  7994 ;;		 -> STR_7(4), STR_3(4), V(189), 
  7995 ;;  w               2  [STACK] int 
  7996 ;;  i               2  [STACK] int 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  2  [STACK] int 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/4
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8010 ;;Total ram usage:        0 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    9
  8013 ;; This function calls:
  8014 ;;		_fputc
  8015 ;;		_strlen
  8016 ;; This function is called by:
  8017 ;;		_vfpfcnvrt
  8018 ;; This function uses a reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text35
  8022  01467A                     __ptext35:
  8023                           	opt callstack 0
  8024  01467A                     _stoa:
  8025                           	opt callstack 0
  8026                           
  8027                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8028  01467A  0E11               	movlw	17
  8029  01467C  26E1               	addwf	fsr1l,f,c
  8030  01467E  0E00               	movlw	0
  8031  014680  22E2               	addwfc	fsr1h,f,c
  8032                           
  8033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8034                           
  8035                           ;incstack = 0
  8036  014682  EE20  F0BD         	lfsr	2,stoa@F1166
  8037                           
  8038                           ;stkvar	_nuls @ sp[(-17)+0]
  8039  014686  0E07               	movlw	7
  8040  014688  6E35               	movwf	btemp^0,c
  8041  01468A  0EEF               	movlw	-17
  8042  01468C                     us904999:
  8043  01468C  006F FF7B FFE3     	movff	postinc2,plusw1
  8044  014692  28E8               	incf	wreg,w,c
  8045  014694  2E35               	decfsz	btemp^0,f,c
  8046  014696  D7FA               	bra	us904999
  8047                           
  8048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8049                           ;stkvar	_s @ sp[(-17)+-4]
  8050  014698  0EEB               	movlw	-21
  8051  01469A  006F FF8C  F03F    	movff	plusw1,btemp+10
  8052  0146A0  0EEC               	movlw	-20
  8053  0146A2  006F FF8C  F040    	movff	plusw1,btemp+11
  8054                           
  8055                           ;stkvar	_cp @ sp[(-17)+11]
  8056  0146A8  0EFB               	movlw	-5
  8057  0146AA  0060  F103  FFE3   	movff	btemp+11,plusw1
  8058  0146B0  0EFA               	movlw	-6
  8059  0146B2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8060                           
  8061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8062                           ;stkvar	_cp @ sp[(-17)+11]
  8063  0146B8  0EFA               	movlw	-6
  8064  0146BA  006F FF8C  F035    	movff	plusw1,btemp
  8065  0146C0  0EFB               	movlw	-5
  8066  0146C2  50E3               	movf	plusw1,w,c
  8067  0146C4  1035               	iorwf	btemp^0,w,c
  8068  0146C6  A4D8               	btfss	status,2,c
  8069  0146C8  D00E               	goto	l9107
  8070                           
  8071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8072                           ;stkvar	_nuls @ sp[(-17)+0]
  8073  0146CA  0EEF               	movlw	239
  8074  0146CC  24E1               	addwf	fsr1l,w,c
  8075  0146CE  6E3F               	movwf	(btemp+10)^0,c
  8076  0146D0  0EFF               	movlw	255
  8077  0146D2  20E2               	addwfc	fsr1h,w,c
  8078  0146D4  6E40               	movwf	(btemp+11)^0,c
  8079                           
  8080                           ;stkvar	_cp @ sp[(-17)+11]
  8081  0146D6  0EFB               	movlw	-5
  8082  0146D8  0060  F103  FFE3   	movff	btemp+11,plusw1
  8083  0146DE  0EFA               	movlw	-6
  8084  0146E0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8085  0146E6                     l9107:
  8086                           
  8087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8088                           ;stkvar	_cp @ sp[(-17)+11]
  8089  0146E6  0EFA               	movlw	-6
  8090  0146E8  006F FF8F FFE6     	movff	plusw1,postinc1
  8091  0146EE  006F FF8F FFE6     	movff	plusw1,postinc1
  8092  0146F4  EC4B  F0B4         	call	_strlen	;wreg free
  8093                           
  8094                           ;stkvar	_l @ sp[(-17)+7]
  8095  0146F8  0EF6               	movlw	-10
  8096  0146FA  0060  F0D7  FFE3   	movff	btemp,plusw1
  8097  014700  0EF7               	movlw	-9
  8098  014702  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8099                           
  8100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8101                           ;stkvar	_p @ sp[(-17)+9]
  8102  014708  0EF8               	movlw	-8
  8103  01470A  0060  F083  FFE3   	movff	_prec,plusw1
  8104  014710  0EF9               	movlw	-7
  8105  014712  0060  F087  FFE3   	movff	_prec+1,plusw1
  8106                           
  8107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8108                           ;stkvar	_p @ sp[(-17)+9]
  8109  014718  0EF9               	movlw	-7
  8110  01471A  BEE3               	btfsc	plusw1,7,c
  8111  01471C  D023               	goto	l1841
  8112                           
  8113                           ;stkvar	_l @ sp[(-17)+7]
  8114                           ;stkvar	_p @ sp[(-17)+9]
  8115  01471E  50E1               	movf	fsr1l,w,c
  8116  014720  0FF8               	addlw	-8
  8117  014722  6ED9               	movwf	fsr2l,c
  8118  014724  50E2               	movf	fsr1h,w,c
  8119  014726  6EDA               	movwf	fsr2h,c
  8120  014728  0EFF               	movlw	255
  8121  01472A  22DA               	addwfc	fsr2h,f,c
  8122  01472C  0EF6               	movlw	-10
  8123  01472E  50E3               	movf	plusw1,w,c
  8124  014730  5CDE               	subwf	postinc2,w,c
  8125  014732  50DE               	movf	postinc2,w,c
  8126  014734  0A80               	xorlw	128
  8127  014736  6E35               	movwf	btemp^0,c
  8128  014738  0EF7               	movlw	-9
  8129  01473A  50E3               	movf	plusw1,w,c
  8130  01473C  0A80               	xorlw	128
  8131  01473E  5835               	subwfb	btemp^0,w,c
  8132  014740  B0D8               	btfsc	status,0,c
  8133  014742  D010               	goto	l1841
  8134                           
  8135                           ;stkvar	_p @ sp[(-17)+9]
  8136                           ;stkvar	_l @ sp[(-17)+7]
  8137  014744  0EF8               	movlw	-8
  8138  014746  006F FF8C  F035    	movff	plusw1,btemp
  8139  01474C  0EF6               	movlw	-10
  8140  01474E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8141  014754  0EF9               	movlw	-7
  8142  014756  006F FF8C  F035    	movff	plusw1,btemp
  8143  01475C  0EF7               	movlw	-9
  8144  01475E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8145  014764                     l1841:
  8146                           
  8147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8148                           ;stkvar	_l @ sp[(-17)+7]
  8149                           ;stkvar	_p @ sp[(-17)+9]
  8150  014764  0EF6               	movlw	-10
  8151  014766  006F FF8C  F035    	movff	plusw1,btemp
  8152  01476C  0EF8               	movlw	-8
  8153  01476E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8154  014774  0EF7               	movlw	-9
  8155  014776  006F FF8C  F035    	movff	plusw1,btemp
  8156  01477C  0EF9               	movlw	-7
  8157  01477E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8158                           
  8159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8160                           ;stkvar	_w @ sp[(-17)+13]
  8161  014784  0EFC               	movlw	-4
  8162  014786  0060  F07B  FFE3   	movff	_width,plusw1
  8163  01478C  0EFD               	movlw	-3
  8164  01478E  0060  F07F  FFE3   	movff	_width+1,plusw1
  8165                           
  8166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8167  014794  A022               	btfss	_flags^0,0,c
  8168  014796  D01F               	goto	l9127
  8169  014798  D031               	goto	u9090
  8170  01479A                     l9123:
  8171                           
  8172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8173                           ;stkvar	_fp @ sp[(-17)+-2]
  8174  01479A  0EED               	movlw	-19
  8175  01479C  006F FF8F FFE6     	movff	plusw1,postinc1
  8176  0147A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8177  0147A8  0E20               	movlw	32
  8178  0147AA  6EE6               	movwf	postinc1,c
  8179  0147AC  0E00               	movlw	0
  8180  0147AE  6EE6               	movwf	postinc1,c
  8181  0147B0  EC98  F0AE         	call	_fputc	;wreg free
  8182                           
  8183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8184                           ;stkvar	_l @ sp[(-17)+7]
  8185  0147B4  0EF6               	movlw	-10
  8186  0147B6  50E3               	movf	plusw1,w,c
  8187  0147B8  0F01               	addlw	1
  8188  0147BA  6E35               	movwf	btemp^0,c
  8189  0147BC  0EF6               	movlw	-10
  8190  0147BE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8191  0147C4  6A35               	clrf	btemp^0,c
  8192  0147C6  0EF7               	movlw	-9
  8193  0147C8  50E3               	movf	plusw1,w,c
  8194  0147CA  2035               	addwfc	btemp^0,w,c
  8195  0147CC  6E35               	movwf	btemp^0,c
  8196  0147CE  0EF7               	movlw	-9
  8197  0147D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  8198  0147D6                     l9127:
  8199                           
  8200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8201                           ;stkvar	_w @ sp[(-17)+13]
  8202                           ;stkvar	_l @ sp[(-17)+7]
  8203  0147D6  50E1               	movf	fsr1l,w,c
  8204  0147D8  0FF6               	addlw	-10
  8205  0147DA  6ED9               	movwf	fsr2l,c
  8206  0147DC  50E2               	movf	fsr1h,w,c
  8207  0147DE  6EDA               	movwf	fsr2h,c
  8208  0147E0  0EFF               	movlw	255
  8209  0147E2  22DA               	addwfc	fsr2h,f,c
  8210  0147E4  0EFC               	movlw	-4
  8211  0147E6  50E3               	movf	plusw1,w,c
  8212  0147E8  5CDE               	subwf	postinc2,w,c
  8213  0147EA  50DE               	movf	postinc2,w,c
  8214  0147EC  0A80               	xorlw	128
  8215  0147EE  6E35               	movwf	btemp^0,c
  8216  0147F0  0EFD               	movlw	-3
  8217  0147F2  50E3               	movf	plusw1,w,c
  8218  0147F4  0A80               	xorlw	128
  8219  0147F6  5835               	subwfb	btemp^0,w,c
  8220  0147F8  A0D8               	btfss	status,0,c
  8221  0147FA  D7CF               	goto	l9123
  8222  0147FC                     u9090:
  8223                           
  8224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8225                           ;stkvar	_i @ sp[(-17)+15]
  8226  0147FC  0EFE               	movlw	-2
  8227  0147FE  6AE3               	clrf	plusw1,c
  8228  014800  0EFF               	movlw	-1
  8229  014802  6AE3               	clrf	plusw1,c
  8230                           
  8231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8232  014804  D045               	goto	l9137
  8233  014806                     l9131:
  8234                           
  8235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8236                           ;stkvar	_fp @ sp[(-17)+-2]
  8237  014806  0EED               	movlw	-19
  8238  014808  006F FF8F FFE6     	movff	plusw1,postinc1
  8239  01480E  006F FF8F FFE6     	movff	plusw1,postinc1
  8240                           
  8241                           ;stkvar	_cp @ sp[(-19)+11]
  8242  014814  0EF8               	movlw	-8
  8243  014816  006F FF8F FFF6     	movff	plusw1,tblptrl
  8244  01481C  0EF9               	movlw	-7
  8245  01481E  006F FF8F FFF7     	movff	plusw1,tblptrh
  8246  014824  0E00               	movlw	low (__mediumconst shr (0+16))
  8247  014826  6EF8               	movwf	tblptru,c
  8248  014828  0E1F               	movlw	(high __ramtop+-1)
  8249  01482A  64F7               	cpfsgt	tblptrh,c
  8250  01482C  D003               	bra	u9107
  8251  01482E  0008               	tblrd		*
  8252  014830  50F5               	movf	tablat,w,c
  8253  014832  D007               	bra	u9100
  8254  014834                     u9107:
  8255  014834  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8256  01483A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8257  014840  50EF               	movf	indf0,w,c
  8258  014842                     u9100:
  8259  014842  6EE6               	movwf	postinc1,c
  8260  014844  0E00               	movlw	0
  8261  014846  6EE6               	movwf	postinc1,c
  8262  014848  EC98  F0AE         	call	_fputc	;wreg free
  8263                           
  8264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8265                           ;stkvar	_cp @ sp[(-17)+11]
  8266  01484C  0EFA               	movlw	-6
  8267  01484E  50E3               	movf	plusw1,w,c
  8268  014850  0F01               	addlw	1
  8269  014852  6E35               	movwf	btemp^0,c
  8270  014854  0EFA               	movlw	-6
  8271  014856  0060  F0D7  FFE3   	movff	btemp,plusw1
  8272  01485C  6A35               	clrf	btemp^0,c
  8273  01485E  0EFB               	movlw	-5
  8274  014860  50E3               	movf	plusw1,w,c
  8275  014862  2035               	addwfc	btemp^0,w,c
  8276  014864  6E35               	movwf	btemp^0,c
  8277  014866  0EFB               	movlw	-5
  8278  014868  0060  F0D7  FFE3   	movff	btemp,plusw1
  8279                           
  8280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8281                           ;stkvar	_i @ sp[(-17)+15]
  8282  01486E  0EFE               	movlw	-2
  8283  014870  50E3               	movf	plusw1,w,c
  8284  014872  0F01               	addlw	1
  8285  014874  6E35               	movwf	btemp^0,c
  8286  014876  0EFE               	movlw	-2
  8287  014878  0060  F0D7  FFE3   	movff	btemp,plusw1
  8288  01487E  6A35               	clrf	btemp^0,c
  8289  014880  0EFF               	movlw	-1
  8290  014882  50E3               	movf	plusw1,w,c
  8291  014884  2035               	addwfc	btemp^0,w,c
  8292  014886  6E35               	movwf	btemp^0,c
  8293  014888  0EFF               	movlw	-1
  8294  01488A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8295  014890                     l9137:
  8296                           
  8297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8298                           ;stkvar	_p @ sp[(-17)+9]
  8299                           ;stkvar	_i @ sp[(-17)+15]
  8300  014890  50E1               	movf	fsr1l,w,c
  8301  014892  0FFE               	addlw	-2
  8302  014894  6ED9               	movwf	fsr2l,c
  8303  014896  50E2               	movf	fsr1h,w,c
  8304  014898  6EDA               	movwf	fsr2h,c
  8305  01489A  0EFF               	movlw	255
  8306  01489C  22DA               	addwfc	fsr2h,f,c
  8307  01489E  0EF8               	movlw	-8
  8308  0148A0  50E3               	movf	plusw1,w,c
  8309  0148A2  5CDE               	subwf	postinc2,w,c
  8310  0148A4  50DE               	movf	postinc2,w,c
  8311  0148A6  0A80               	xorlw	128
  8312  0148A8  6E35               	movwf	btemp^0,c
  8313  0148AA  0EF9               	movlw	-7
  8314  0148AC  50E3               	movf	plusw1,w,c
  8315  0148AE  0A80               	xorlw	128
  8316  0148B0  5835               	subwfb	btemp^0,w,c
  8317  0148B2  A0D8               	btfss	status,0,c
  8318  0148B4  D7A8               	goto	l9131
  8319                           
  8320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8321  0148B6  B022               	btfsc	_flags^0,0,c
  8322  0148B8  D01F               	goto	l9145
  8323  0148BA  D031               	goto	u9130
  8324  0148BC                     l9141:
  8325                           
  8326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8327                           ;stkvar	_fp @ sp[(-17)+-2]
  8328  0148BC  0EED               	movlw	-19
  8329  0148BE  006F FF8F FFE6     	movff	plusw1,postinc1
  8330  0148C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8331  0148CA  0E20               	movlw	32
  8332  0148CC  6EE6               	movwf	postinc1,c
  8333  0148CE  0E00               	movlw	0
  8334  0148D0  6EE6               	movwf	postinc1,c
  8335  0148D2  EC98  F0AE         	call	_fputc	;wreg free
  8336                           
  8337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8338                           ;stkvar	_l @ sp[(-17)+7]
  8339  0148D6  0EF6               	movlw	-10
  8340  0148D8  50E3               	movf	plusw1,w,c
  8341  0148DA  0F01               	addlw	1
  8342  0148DC  6E35               	movwf	btemp^0,c
  8343  0148DE  0EF6               	movlw	-10
  8344  0148E0  0060  F0D7  FFE3   	movff	btemp,plusw1
  8345  0148E6  6A35               	clrf	btemp^0,c
  8346  0148E8  0EF7               	movlw	-9
  8347  0148EA  50E3               	movf	plusw1,w,c
  8348  0148EC  2035               	addwfc	btemp^0,w,c
  8349  0148EE  6E35               	movwf	btemp^0,c
  8350  0148F0  0EF7               	movlw	-9
  8351  0148F2  0060  F0D7  FFE3   	movff	btemp,plusw1
  8352  0148F8                     l9145:
  8353                           
  8354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8355                           ;stkvar	_w @ sp[(-17)+13]
  8356                           ;stkvar	_l @ sp[(-17)+7]
  8357  0148F8  50E1               	movf	fsr1l,w,c
  8358  0148FA  0FF6               	addlw	-10
  8359  0148FC  6ED9               	movwf	fsr2l,c
  8360  0148FE  50E2               	movf	fsr1h,w,c
  8361  014900  6EDA               	movwf	fsr2h,c
  8362  014902  0EFF               	movlw	255
  8363  014904  22DA               	addwfc	fsr2h,f,c
  8364  014906  0EFC               	movlw	-4
  8365  014908  50E3               	movf	plusw1,w,c
  8366  01490A  5CDE               	subwf	postinc2,w,c
  8367  01490C  50DE               	movf	postinc2,w,c
  8368  01490E  0A80               	xorlw	128
  8369  014910  6E35               	movwf	btemp^0,c
  8370  014912  0EFD               	movlw	-3
  8371  014914  50E3               	movf	plusw1,w,c
  8372  014916  0A80               	xorlw	128
  8373  014918  5835               	subwfb	btemp^0,w,c
  8374  01491A  A0D8               	btfss	status,0,c
  8375  01491C  D7CF               	goto	l9141
  8376  01491E                     u9130:
  8377                           
  8378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  8379                           ;stkvar	_l @ sp[(-17)+7]
  8380  01491E  0EF6               	movlw	-10
  8381  014920  006F FF8C  F035    	movff	plusw1,btemp
  8382  014926  0EF7               	movlw	-9
  8383  014928  006F FF8C  F036    	movff	plusw1,btemp+1
  8384                           
  8385                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8386  01492E  0EEB               	movlw	235
  8387  014930  26E1               	addwf	fsr1l,f,c
  8388  014932  0EFF               	movlw	255
  8389  014934  22E2               	addwfc	fsr1h,f,c
  8390  014936  0012               	return		;funcret
  8391  014938                     __end_of_stoa:
  8392                           	opt callstack 0
  8393                           
  8394 ;; *************** function _efgtoa *****************
  8395 ;; Defined at:
  8396 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8399 ;;		 -> f(6), NULL(0), 
  8400 ;;  f               4  [STACK] PTR struct _IO_FILE
  8401 ;;  c               1  [STACK] unsigned char 
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;  u               4  [STACK] unsigned char 
  8404 ;;  g               4  [STACK] unsigned char 
  8405 ;;  l               4  [STACK] unsigned char 
  8406 ;;  h               4  [STACK] unsigned char 
  8407 ;;  ou              4  [STACK] unsigned char 
  8408 ;;  n               2  [STACK] int 
  8409 ;;  e               2  [STACK] int 
  8410 ;;  i               2  [STACK] int 
  8411 ;;  w               2  [STACK] int 
  8412 ;;  p               2  [STACK] int 
  8413 ;;  sign            2  [STACK] int 
  8414 ;;  d               2  [STACK] int 
  8415 ;;  ne              2  [STACK] int 
  8416 ;;  m               2  [STACK] int 
  8417 ;;  pp              2  [STACK] int 
  8418 ;;  t               2  [STACK] int 
  8419 ;;  mode            1  [STACK] unsigned char 
  8420 ;;  nmode           1  [STACK] unsigned char 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  2  [STACK] int 
  8423 ;; Registers used:
  8424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/4
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8434 ;;Total ram usage:        0 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:   11
  8437 ;; This function calls:
  8438 ;;		___awdiv
  8439 ;;		___awmod
  8440 ;;		___fladd
  8441 ;;		___fldiv
  8442 ;;		___fleq
  8443 ;;		___flge
  8444 ;;		___flmul
  8445 ;;		___flneg
  8446 ;;		___flsub
  8447 ;;		___fltol
  8448 ;;		___fpclassifyf
  8449 ;;		_floorf
  8450 ;;		_isupper
  8451 ;;		_pad
  8452 ;;		_strcpy
  8453 ;;		_tolower
  8454 ;; This function is called by:
  8455 ;;		_vfpfcnvrt
  8456 ;; This function uses a reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text36
  8460  010000                     __ptext36:
  8461                           	opt callstack 0
  8462  010000                     _efgtoa:
  8463                           	opt callstack 0
  8464                           
  8465                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8466  010000  0E38               	movlw	56
  8467  010002  26E1               	addwf	fsr1l,f,c
  8468  010004  0E00               	movlw	0
  8469  010006  22E2               	addwfc	fsr1h,f,c
  8470                           
  8471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  8472                           ;stkvar	_sign @ sp[(-56)+42]
  8473                           
  8474                           ;incstack = 0
  8475  010008  0EF2               	movlw	-14
  8476  01000A  6AE3               	clrf	plusw1,c
  8477  01000C  0EF3               	movlw	-13
  8478  01000E  6AE3               	clrf	plusw1,c
  8479                           
  8480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  8481                           ;stkvar	_f @ sp[(-56)+-6]
  8482  010010  0EC2               	movlw	-62
  8483  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  8484  010018  0EC3               	movlw	-61
  8485  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  8486  010020  0EC4               	movlw	-60
  8487  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  8488  010028  0EC5               	movlw	-59
  8489  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  8490                           
  8491                           ;stkvar	_g @ sp[(-56)+16]
  8492  010030  0ED8               	movlw	-40
  8493  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  8494  010038  0ED9               	movlw	-39
  8495  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  8496  010040  0EDA               	movlw	-38
  8497  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8498  010048  0EDB               	movlw	-37
  8499  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  8500                           
  8501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  8502                           ;stkvar	_g @ sp[(-56)+16]
  8503  010050  0EDB               	movlw	-37
  8504  010052  AEE3               	btfss	plusw1,7,c
  8505  010054  D02B               	goto	l8805
  8506                           
  8507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  8508  010056  0E01               	movlw	1
  8509  010058  6E3F               	movwf	(btemp+10)^0,c
  8510  01005A  0E00               	movlw	0
  8511  01005C  6E40               	movwf	(btemp+11)^0,c
  8512                           
  8513                           ;stkvar	_sign @ sp[(-56)+42]
  8514  01005E  0EF2               	movlw	-14
  8515  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8516  010066  0EF3               	movlw	-13
  8517  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  8518                           
  8519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  8520                           ;stkvar	_g @ sp[(-56)+16]
  8521  01006E  0ED8               	movlw	-40
  8522  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  8523  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  8524  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  8525  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  8526  010088  ECFC  F0B8         	call	___flneg	;wreg free
  8527                           
  8528                           ;stkvar	_g @ sp[(-56)+16]
  8529  01008C  0ED8               	movlw	-40
  8530  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8531  010094  0ED9               	movlw	-39
  8532  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8533  01009C  0EDA               	movlw	-38
  8534  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  8535  0100A4  0EDB               	movlw	-37
  8536  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  8537  0100AC                     l8805:
  8538                           
  8539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  8540                           ;stkvar	_n @ sp[(-56)+32]
  8541  0100AC  0EE8               	movlw	-24
  8542  0100AE  6AE3               	clrf	plusw1,c
  8543  0100B0  0EE9               	movlw	-23
  8544  0100B2  6AE3               	clrf	plusw1,c
  8545                           
  8546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  8547                           ;stkvar	_w @ sp[(-56)+38]
  8548  0100B4  0EEE               	movlw	-18
  8549  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  8550  0100BC  0EEF               	movlw	-17
  8551  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  8552                           
  8553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  8554                           ;stkvar	_sign @ sp[(-56)+42]
  8555  0100C4  0EF2               	movlw	-14
  8556  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  8557  0100CC  0EF3               	movlw	-13
  8558  0100CE  50E3               	movf	plusw1,w,c
  8559  0100D0  1035               	iorwf	btemp^0,w,c
  8560  0100D2  A4D8               	btfss	status,2,c
  8561  0100D4  D002               	goto	u8540
  8562  0100D6  A422               	btfss	_flags^0,2,c
  8563  0100D8  D036               	goto	l8825
  8564  0100DA                     u8540:
  8565                           
  8566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  8567                           ;stkvar	_sign @ sp[(-56)+42]
  8568  0100DA  0EF2               	movlw	-14
  8569  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  8570  0100E2  0EF3               	movlw	-13
  8571  0100E4  50E3               	movf	plusw1,w,c
  8572  0100E6  1035               	iorwf	btemp^0,w,c
  8573  0100E8  A4D8               	btfss	status,2,c
  8574  0100EA  D002               	goto	l8817
  8575  0100EC  0E2B               	movlw	43
  8576  0100EE  D001               	goto	L4
  8577  0100F0                     l8817:
  8578  0100F0  0E2D               	movlw	45
  8579  0100F2                     L4:
  8580  0100F2  6E3F               	movwf	(btemp+10)^0,c
  8581  0100F4  0E00               	movlw	0
  8582  0100F6  6E40               	movwf	(btemp+11)^0,c
  8583                           
  8584                           ;stkvar	_efgtoa$4072 @ sp[(-56)+10]
  8585  0100F8  0ED2               	movlw	-46
  8586  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8587  010100  0ED3               	movlw	-45
  8588  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  8589                           
  8590                           ;stkvar	_efgtoa$4072 @ sp[(-56)+10]
  8591  010108  0ED2               	movlw	-46
  8592  01010A  006F FF8C  F1A8    	movff	plusw1,_dbuf
  8593                           
  8594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  8595                           ;stkvar	_n @ sp[(-56)+32]
  8596  010110  0EE8               	movlw	-24
  8597  010112  50E3               	movf	plusw1,w,c
  8598  010114  0F01               	addlw	1
  8599  010116  6E35               	movwf	btemp^0,c
  8600  010118  0EE8               	movlw	-24
  8601  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8602  010120  6A35               	clrf	btemp^0,c
  8603  010122  0EE9               	movlw	-23
  8604  010124  50E3               	movf	plusw1,w,c
  8605  010126  2035               	addwfc	btemp^0,w,c
  8606  010128  6E35               	movwf	btemp^0,c
  8607  01012A  0EE9               	movlw	-23
  8608  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  8609                           
  8610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  8611                           ;stkvar	_w @ sp[(-56)+38]
  8612  010132  50E1               	movf	fsr1l,w,c
  8613  010134  0FEE               	addlw	-18
  8614  010136  6ED9               	movwf	fsr2l,c
  8615  010138  50E2               	movf	fsr1h,w,c
  8616  01013A  6EDA               	movwf	fsr2h,c
  8617  01013C  0EFF               	movlw	255
  8618  01013E  22DA               	addwfc	fsr2h,f,c
  8619  010140  06DE               	decf	postinc2,f,c
  8620  010142  0E00               	movlw	0
  8621  010144  5ADD               	subwfb	postdec2,f,c
  8622  010146                     l8825:
  8623                           
  8624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8625                           ;stkvar	_g @ sp[(-56)+16]
  8626  010146  0ED8               	movlw	-40
  8627  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  8628  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  8629  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  8630  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  8631  010160  EC25  F0AB         	call	___fpclassifyf	;wreg free
  8632  010164  0435               	decf	btemp^0,w,c
  8633  010166  1036               	iorwf	(btemp+1)^0,w,c
  8634  010168  A4D8               	btfss	status,2,c
  8635  01016A  D076               	goto	l8843
  8636  01016C  0EBF               	movlw	191
  8637  01016E  6E3F               	movwf	(btemp+10)^0,c
  8638  010170  0EFF               	movlw	255
  8639  010172  6E40               	movwf	(btemp+11)^0,c
  8640                           
  8641                           ;stkvar	_c @ sp[(-56)+-7]
  8642  010174  0EC1               	movlw	-63
  8643  010176  50E3               	movf	plusw1,w,c
  8644  010178  6E3D               	movwf	(btemp+8)^0,c
  8645  01017A  6A3E               	clrf	(btemp+9)^0,c
  8646  01017C  503F               	movf	(btemp+10)^0,w,c
  8647  01017E  263D               	addwf	(btemp+8)^0,f,c
  8648  010180  5040               	movf	(btemp+11)^0,w,c
  8649  010182  223E               	addwfc	(btemp+9)^0,f,c
  8650  010184  503E               	movf	(btemp+9)^0,w,c
  8651  010186  E106               	bnz	u8570
  8652  010188  0E1A               	movlw	26
  8653  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  8654  01018C  B0D8               	btfsc	status,0,c
  8655  01018E  D002               	goto	u8570
  8656  010190  0E01               	movlw	1
  8657  010192  D001               	goto	u8580
  8658  010194                     u8570:
  8659  010194  0E00               	movlw	0
  8660  010196                     u8580:
  8661  010196  6E3F               	movwf	(btemp+10)^0,c
  8662  010198  6A40               	clrf	(btemp+11)^0,c
  8663                           
  8664                           ;stkvar	_efgtoa$4073 @ sp[(-56)+8]
  8665  01019A  0ED0               	movlw	-48
  8666  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8667  0101A2  0ED1               	movlw	-47
  8668  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  8669                           
  8670                           ;stkvar	_efgtoa$4073 @ sp[(-56)+8]
  8671  0101AA  0ED0               	movlw	-48
  8672  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  8673  0101B2  0ED1               	movlw	-47
  8674  0101B4  50E3               	movf	plusw1,w,c
  8675  0101B6  1035               	iorwf	btemp^0,w,c
  8676  0101B8  B4D8               	btfsc	status,2,c
  8677  0101BA  D017               	goto	l8835
  8678                           
  8679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  8680  0101BC  0EE2               	movlw	low STR_32
  8681  0101BE  6EE6               	movwf	postinc1,c
  8682  0101C0  0EFF               	movlw	high STR_32
  8683  0101C2  6EE6               	movwf	postinc1,c
  8684                           
  8685                           ;stkvar	_n @ sp[(-58)+32]
  8686  0101C4  0EA8               	movlw	low _dbuf
  8687  0101C6  6E3F               	movwf	(btemp+10)^0,c
  8688  0101C8  0E01               	movlw	high _dbuf
  8689  0101CA  6E40               	movwf	(btemp+11)^0,c
  8690  0101CC  0EE6               	movlw	-26
  8691  0101CE  50E3               	movf	plusw1,w,c
  8692  0101D0  263F               	addwf	(btemp+10)^0,f,c
  8693  0101D2  0EE7               	movlw	-25
  8694  0101D4  50E3               	movf	plusw1,w,c
  8695  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  8696  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8697  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  8698  0101E4  ECC1  F0B1         	call	_strcpy	;wreg free
  8699                           
  8700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  8701  0101E8  D016               	goto	l8837
  8702  0101EA                     l8835:
  8703                           
  8704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  8705  0101EA  0EEA               	movlw	low STR_33
  8706  0101EC  6EE6               	movwf	postinc1,c
  8707  0101EE  0EFF               	movlw	high STR_33
  8708  0101F0  6EE6               	movwf	postinc1,c
  8709                           
  8710                           ;stkvar	_n @ sp[(-58)+32]
  8711  0101F2  0EA8               	movlw	low _dbuf
  8712  0101F4  6E3F               	movwf	(btemp+10)^0,c
  8713  0101F6  0E01               	movlw	high _dbuf
  8714  0101F8  6E40               	movwf	(btemp+11)^0,c
  8715  0101FA  0EE6               	movlw	-26
  8716  0101FC  50E3               	movf	plusw1,w,c
  8717  0101FE  263F               	addwf	(btemp+10)^0,f,c
  8718  010200  0EE7               	movlw	-25
  8719  010202  50E3               	movf	plusw1,w,c
  8720  010204  2240               	addwfc	(btemp+11)^0,f,c
  8721  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8722  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  8723  010212  ECC1  F0B1         	call	_strcpy	;wreg free
  8724  010216                     l8837:
  8725                           
  8726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  8727                           ;stkvar	_w @ sp[(-56)+38]
  8728  010216  50E1               	movf	fsr1l,w,c
  8729  010218  0FEE               	addlw	-18
  8730  01021A  6ED9               	movwf	fsr2l,c
  8731  01021C  50E2               	movf	fsr1h,w,c
  8732  01021E  6EDA               	movwf	fsr2h,c
  8733  010220  0EFF               	movlw	255
  8734  010222  22DA               	addwfc	fsr2h,f,c
  8735  010224  0EFD               	movlw	253
  8736  010226  26DE               	addwf	postinc2,f,c
  8737  010228  0EFF               	movlw	255
  8738  01022A  22DD               	addwfc	postdec2,f,c
  8739  01022C                     l8839:
  8740                           
  8741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  8742                           ;stkvar	_w @ sp[(-56)+38]
  8743  01022C  0EEE               	movlw	-18
  8744  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
  8745  010234  006F FF8F FFE6     	movff	plusw1,postinc1
  8746  01023A  0EA8               	movlw	low _dbuf
  8747  01023C  6EE6               	movwf	postinc1,c
  8748  01023E  0E01               	movlw	high _dbuf
  8749  010240  6EE6               	movwf	postinc1,c
  8750                           
  8751                           ;stkvar	_fp @ sp[(-60)+-2]
  8752  010242  0EC2               	movlw	-62
  8753  010244  006F FF8F FFE6     	movff	plusw1,postinc1
  8754  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
  8755  010250  ECB6  F0AF         	call	_pad	;wreg free
  8756  010254  EF1D  F089         	goto	l1759
  8757  010258                     l8843:
  8758                           
  8759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8760                           ;stkvar	_g @ sp[(-56)+16]
  8761  010258  0ED8               	movlw	-40
  8762  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
  8763  010260  006F FF8F FFE6     	movff	plusw1,postinc1
  8764  010266  006F FF8F FFE6     	movff	plusw1,postinc1
  8765  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
  8766  010272  EC25  F0AB         	call	___fpclassifyf	;wreg free
  8767  010276  5035               	movf	btemp^0,w,c
  8768  010278  1036               	iorwf	(btemp+1)^0,w,c
  8769  01027A  A4D8               	btfss	status,2,c
  8770  01027C  D056               	goto	l8861
  8771  01027E  0EBF               	movlw	191
  8772  010280  6E3F               	movwf	(btemp+10)^0,c
  8773  010282  0EFF               	movlw	255
  8774  010284  6E40               	movwf	(btemp+11)^0,c
  8775                           
  8776                           ;stkvar	_c @ sp[(-56)+-7]
  8777  010286  0EC1               	movlw	-63
  8778  010288  50E3               	movf	plusw1,w,c
  8779  01028A  6E3D               	movwf	(btemp+8)^0,c
  8780  01028C  6A3E               	clrf	(btemp+9)^0,c
  8781  01028E  503F               	movf	(btemp+10)^0,w,c
  8782  010290  263D               	addwf	(btemp+8)^0,f,c
  8783  010292  5040               	movf	(btemp+11)^0,w,c
  8784  010294  223E               	addwfc	(btemp+9)^0,f,c
  8785  010296  503E               	movf	(btemp+9)^0,w,c
  8786  010298  E106               	bnz	u8610
  8787  01029A  0E1A               	movlw	26
  8788  01029C  5C3D               	subwf	(btemp+8)^0,w,c
  8789  01029E  B0D8               	btfsc	status,0,c
  8790  0102A0  D002               	goto	u8610
  8791  0102A2  0E01               	movlw	1
  8792  0102A4  D001               	goto	u8620
  8793  0102A6                     u8610:
  8794  0102A6  0E00               	movlw	0
  8795  0102A8                     u8620:
  8796  0102A8  6E3F               	movwf	(btemp+10)^0,c
  8797  0102AA  6A40               	clrf	(btemp+11)^0,c
  8798                           
  8799                           ;stkvar	_efgtoa$4077 @ sp[(-56)+6]
  8800  0102AC  0ECE               	movlw	-50
  8801  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8802  0102B4  0ECF               	movlw	-49
  8803  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
  8804                           
  8805                           ;stkvar	_efgtoa$4077 @ sp[(-56)+6]
  8806  0102BC  0ECE               	movlw	-50
  8807  0102BE  006F FF8C  F035    	movff	plusw1,btemp
  8808  0102C4  0ECF               	movlw	-49
  8809  0102C6  50E3               	movf	plusw1,w,c
  8810  0102C8  1035               	iorwf	btemp^0,w,c
  8811  0102CA  B4D8               	btfsc	status,2,c
  8812  0102CC  D017               	goto	l8853
  8813                           
  8814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  8815  0102CE  0EE6               	movlw	low STR_36
  8816  0102D0  6EE6               	movwf	postinc1,c
  8817  0102D2  0EFF               	movlw	high STR_36
  8818  0102D4  6EE6               	movwf	postinc1,c
  8819                           
  8820                           ;stkvar	_n @ sp[(-58)+32]
  8821  0102D6  0EA8               	movlw	low _dbuf
  8822  0102D8  6E3F               	movwf	(btemp+10)^0,c
  8823  0102DA  0E01               	movlw	high _dbuf
  8824  0102DC  6E40               	movwf	(btemp+11)^0,c
  8825  0102DE  0EE6               	movlw	-26
  8826  0102E0  50E3               	movf	plusw1,w,c
  8827  0102E2  263F               	addwf	(btemp+10)^0,f,c
  8828  0102E4  0EE7               	movlw	-25
  8829  0102E6  50E3               	movf	plusw1,w,c
  8830  0102E8  2240               	addwfc	(btemp+11)^0,f,c
  8831  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8832  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  8833  0102F6  ECC1  F0B1         	call	_strcpy	;wreg free
  8834                           
  8835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  8836  0102FA  D78D               	goto	l8837
  8837  0102FC                     l8853:
  8838                           
  8839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  8840  0102FC  0EEE               	movlw	low STR_37
  8841  0102FE  6EE6               	movwf	postinc1,c
  8842  010300  0EFF               	movlw	high STR_37
  8843  010302  6EE6               	movwf	postinc1,c
  8844                           
  8845                           ;stkvar	_n @ sp[(-58)+32]
  8846  010304  0EA8               	movlw	low _dbuf
  8847  010306  6E3F               	movwf	(btemp+10)^0,c
  8848  010308  0E01               	movlw	high _dbuf
  8849  01030A  6E40               	movwf	(btemp+11)^0,c
  8850  01030C  0EE6               	movlw	-26
  8851  01030E  50E3               	movf	plusw1,w,c
  8852  010310  263F               	addwf	(btemp+10)^0,f,c
  8853  010312  0EE7               	movlw	-25
  8854  010314  50E3               	movf	plusw1,w,c
  8855  010316  2240               	addwfc	(btemp+11)^0,f,c
  8856  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8857  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
  8858  010324  ECC1  F0B1         	call	_strcpy	;wreg free
  8859  010328  D776               	goto	l8837
  8860  01032A                     l8861:
  8861                           
  8862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  8863  01032A  0E00               	movlw	0
  8864  01032C  6E3D               	movwf	(btemp+8)^0,c
  8865  01032E  0E00               	movlw	0
  8866  010330  6E3E               	movwf	(btemp+9)^0,c
  8867  010332  0E80               	movlw	128
  8868  010334  6E3F               	movwf	(btemp+10)^0,c
  8869  010336  0E3F               	movlw	63
  8870  010338  6E40               	movwf	(btemp+11)^0,c
  8871                           
  8872                           ;stkvar	_u @ sp[(-56)+12]
  8873  01033A  0ED4               	movlw	-44
  8874  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  8875  010342  0ED5               	movlw	-43
  8876  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  8877  01034A  0ED6               	movlw	-42
  8878  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8879  010352  0ED7               	movlw	-41
  8880  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
  8881                           
  8882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  8883                           ;stkvar	_e @ sp[(-56)+34]
  8884  01035A  0EEA               	movlw	-22
  8885  01035C  6AE3               	clrf	plusw1,c
  8886  01035E  0EEB               	movlw	-21
  8887  010360  6AE3               	clrf	plusw1,c
  8888                           
  8889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  8890  010362  0E00               	movlw	0
  8891  010364  6EE6               	movwf	postinc1,c
  8892  010366  0E00               	movlw	0
  8893  010368  6EE6               	movwf	postinc1,c
  8894  01036A  0E00               	movlw	0
  8895  01036C  6EE6               	movwf	postinc1,c
  8896  01036E  0E00               	movlw	0
  8897  010370  6EE6               	movwf	postinc1,c
  8898                           
  8899                           ;stkvar	_g @ sp[(-60)+16]
  8900  010372  0ED4               	movlw	-44
  8901  010374  006F FF8F FFE6     	movff	plusw1,postinc1
  8902  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
  8903  010380  006F FF8F FFE6     	movff	plusw1,postinc1
  8904  010386  006F FF8F FFE6     	movff	plusw1,postinc1
  8905  01038C  EC8E  F0B2         	call	___fleq	;wreg free
  8906  010390  A035               	btfss	btemp& (0+255),0,c
  8907  010392  D039               	goto	l8873
  8908  010394  D0BC               	goto	u8660
  8909  010396                     l8869:
  8910                           
  8911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  8912  010396  0E00               	movlw	0
  8913  010398  6EE6               	movwf	postinc1,c
  8914  01039A  0E00               	movlw	0
  8915  01039C  6EE6               	movwf	postinc1,c
  8916  01039E  0E20               	movlw	32
  8917  0103A0  6EE6               	movwf	postinc1,c
  8918  0103A2  0E41               	movlw	65
  8919  0103A4  6EE6               	movwf	postinc1,c
  8920                           
  8921                           ;stkvar	_u @ sp[(-60)+12]
  8922  0103A6  0ED0               	movlw	-48
  8923  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
  8924  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
  8925  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
  8926  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
  8927  0103C0  ECC1  F08E         	call	___flmul	;wreg free
  8928                           
  8929                           ;stkvar	_u @ sp[(-56)+12]
  8930  0103C4  0ED4               	movlw	-44
  8931  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
  8932  0103CC  0ED5               	movlw	-43
  8933  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8934  0103D4  0ED6               	movlw	-42
  8935  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  8936  0103DC  0ED7               	movlw	-41
  8937  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  8938                           
  8939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  8940                           ;stkvar	_e @ sp[(-56)+34]
  8941  0103E4  0EEA               	movlw	-22
  8942  0103E6  50E3               	movf	plusw1,w,c
  8943  0103E8  0F01               	addlw	1
  8944  0103EA  6E35               	movwf	btemp^0,c
  8945  0103EC  0EEA               	movlw	-22
  8946  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8947  0103F4  6A35               	clrf	btemp^0,c
  8948  0103F6  0EEB               	movlw	-21
  8949  0103F8  50E3               	movf	plusw1,w,c
  8950  0103FA  2035               	addwfc	btemp^0,w,c
  8951  0103FC  6E35               	movwf	btemp^0,c
  8952  0103FE  0EEB               	movlw	-21
  8953  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
  8954  010406                     l8873:
  8955                           
  8956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  8957  010406  0E00               	movlw	0
  8958  010408  6EE6               	movwf	postinc1,c
  8959  01040A  0E00               	movlw	0
  8960  01040C  6EE6               	movwf	postinc1,c
  8961  01040E  0E20               	movlw	32
  8962  010410  6EE6               	movwf	postinc1,c
  8963  010412  0E41               	movlw	65
  8964  010414  6EE6               	movwf	postinc1,c
  8965                           
  8966                           ;stkvar	_u @ sp[(-60)+12]
  8967  010416  0ED0               	movlw	-48
  8968  010418  006F FF8F FFE6     	movff	plusw1,postinc1
  8969  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
  8970  010424  006F FF8F FFE6     	movff	plusw1,postinc1
  8971  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
  8972  010430  ECC1  F08E         	call	___flmul	;wreg free
  8973  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
  8974  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  8975  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  8976  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  8977                           
  8978                           ;stkvar	_g @ sp[(-60)+16]
  8979  01044C  0ED4               	movlw	-44
  8980  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
  8981  010454  006F FF8F FFE6     	movff	plusw1,postinc1
  8982  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
  8983  010460  006F FF8F FFE6     	movff	plusw1,postinc1
  8984  010466  ECA9  F0AC         	call	___flge	;wreg free
  8985  01046A  A035               	btfss	btemp& (0+255),0,c
  8986  01046C  D032               	goto	l8879
  8987  01046E  D793               	goto	l8869
  8988  010470                     l8875:
  8989                           
  8990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  8991  010470  0E00               	movlw	0
  8992  010472  6EE6               	movwf	postinc1,c
  8993  010474  0E00               	movlw	0
  8994  010476  6EE6               	movwf	postinc1,c
  8995  010478  0E20               	movlw	32
  8996  01047A  6EE6               	movwf	postinc1,c
  8997  01047C  0E41               	movlw	65
  8998  01047E  6EE6               	movwf	postinc1,c
  8999                           
  9000                           ;stkvar	_u @ sp[(-60)+12]
  9001  010480  0ED0               	movlw	-48
  9002  010482  006F FF8F FFE6     	movff	plusw1,postinc1
  9003  010488  006F FF8F FFE6     	movff	plusw1,postinc1
  9004  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
  9005  010494  006F FF8F FFE6     	movff	plusw1,postinc1
  9006  01049A  ECB4  F096         	call	___fldiv	;wreg free
  9007                           
  9008                           ;stkvar	_u @ sp[(-56)+12]
  9009  01049E  0ED4               	movlw	-44
  9010  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9011  0104A6  0ED5               	movlw	-43
  9012  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9013  0104AE  0ED6               	movlw	-42
  9014  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9015  0104B6  0ED7               	movlw	-41
  9016  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9017                           
  9018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
  9019                           ;stkvar	_e @ sp[(-56)+34]
  9020  0104BE  50E1               	movf	fsr1l,w,c
  9021  0104C0  0FEA               	addlw	-22
  9022  0104C2  6ED9               	movwf	fsr2l,c
  9023  0104C4  50E2               	movf	fsr1h,w,c
  9024  0104C6  6EDA               	movwf	fsr2h,c
  9025  0104C8  0EFF               	movlw	255
  9026  0104CA  22DA               	addwfc	fsr2h,f,c
  9027  0104CC  06DE               	decf	postinc2,f,c
  9028  0104CE  0E00               	movlw	0
  9029  0104D0  5ADD               	subwfb	postdec2,f,c
  9030  0104D2                     l8879:
  9031                           
  9032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  9033                           ;stkvar	_u @ sp[(-56)+12]
  9034  0104D2  0ED4               	movlw	-44
  9035  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9036  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9037  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9038  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9039                           
  9040                           ;stkvar	_g @ sp[(-60)+16]
  9041  0104EC  0ED4               	movlw	-44
  9042  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9043  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9044  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9045  010500  006F FF8F FFE6     	movff	plusw1,postinc1
  9046  010506  ECA9  F0AC         	call	___flge	;wreg free
  9047  01050A  A035               	btfss	btemp& (0+255),0,c
  9048  01050C  D7B1               	goto	l8875
  9049  01050E                     u8660:
  9050                           
  9051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  9052                           ;stkvar	_c @ sp[(-56)+-7]
  9053  01050E  0EC1               	movlw	-63
  9054  010510  50E3               	movf	plusw1,w,c
  9055  010512  6EE6               	movwf	postinc1,c
  9056  010514  0E00               	movlw	0
  9057  010516  6EE6               	movwf	postinc1,c
  9058  010518  EC4A  F0B6         	call	_tolower	;wreg free
  9059                           
  9060                           ;stkvar	_mode @ sp[(-56)+54]
  9061  01051C  0EFE               	movlw	-2
  9062  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9063                           
  9064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  9065                           ;stkvar	_mode @ sp[(-56)+54]
  9066                           ;stkvar	_nmode @ sp[(-56)+55]
  9067  010524  0EFE               	movlw	-2
  9068  010526  006F FF8C  F035    	movff	plusw1,btemp
  9069  01052C  0EFF               	movlw	-1
  9070  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9071                           
  9072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  9073                           ;stkvar	_mode @ sp[(-56)+54]
  9074  010534  0EFE               	movlw	-2
  9075  010536  006F FF8C  F035    	movff	plusw1,btemp
  9076  01053C  0E67               	movlw	103
  9077  01053E  1835               	xorwf	btemp^0,w,c
  9078  010540  A4D8               	btfss	status,2,c
  9079  010542  D025               	goto	l8897
  9080                           
  9081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  9082  010544  5020               	movf	_prec^0,w,c
  9083  010546  1021               	iorwf	(_prec+1)^0,w,c
  9084  010548  A4D8               	btfss	status,2,c
  9085  01054A  D004               	goto	l8891
  9086                           
  9087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  9088  01054C  0E00               	movlw	0
  9089  01054E  6E21               	movwf	(_prec+1)^0,c
  9090  010550  0E01               	movlw	1
  9091  010552  6E20               	movwf	_prec^0,c
  9092  010554                     l8891:
  9093                           
  9094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  9095  010554  BE21               	btfsc	(_prec+1)^0,7,c
  9096  010556  D005               	goto	u8690
  9097  010558  5021               	movf	(_prec+1)^0,w,c
  9098  01055A  E110               	bnz	l8895
  9099  01055C  0420               	decf	_prec^0,w,c
  9100  01055E  B0D8               	btfsc	status,0,c
  9101  010560  D00D               	goto	l8895
  9102  010562                     u8690:
  9103  010562  0E06               	movlw	6
  9104  010564  6E3F               	movwf	(btemp+10)^0,c
  9105  010566  0E00               	movlw	0
  9106  010568  6E40               	movwf	(btemp+11)^0,c
  9107                           
  9108                           ;stkvar	_p @ sp[(-56)+40]
  9109  01056A  0EF0               	movlw	-16
  9110  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9111  010572  0EF1               	movlw	-15
  9112  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
  9113  01057A  D00C               	goto	l8903
  9114  01057C                     l8895:
  9115                           
  9116                           ;stkvar	_p @ sp[(-56)+40]
  9117  01057C  0EF0               	movlw	-16
  9118  01057E  0060  F083  FFE3   	movff	_prec,plusw1
  9119  010584  0EF1               	movlw	-15
  9120  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
  9121  01058C  D003               	goto	l8903
  9122  01058E                     l8897:
  9123                           
  9124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  9125  01058E  AE21               	btfss	(_prec+1)^0,7,c
  9126  010590  D7F5               	goto	l8895
  9127  010592  D7E7               	goto	u8690
  9128  010594                     l8903:
  9129                           
  9130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  9131                           ;stkvar	_mode @ sp[(-56)+54]
  9132  010594  0EFE               	movlw	-2
  9133  010596  006F FF8C  F035    	movff	plusw1,btemp
  9134  01059C  0E67               	movlw	103
  9135  01059E  1835               	xorwf	btemp^0,w,c
  9136  0105A0  A4D8               	btfss	status,2,c
  9137  0105A2  D02F               	goto	l8913
  9138                           
  9139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  9140                           ;stkvar	_e @ sp[(-56)+34]
  9141  0105A4  0EEB               	movlw	-21
  9142  0105A6  AEE3               	btfss	plusw1,7,c
  9143  0105A8  D00E               	goto	u8720
  9144  0105AA  0EEA               	movlw	-22
  9145  0105AC  006F FF8C  F035    	movff	plusw1,btemp
  9146  0105B2  0EFC               	movlw	252
  9147  0105B4  5E35               	subwf	btemp^0,f,c
  9148  0105B6  0EEB               	movlw	-21
  9149  0105B8  006F FF8C  F035    	movff	plusw1,btemp
  9150  0105BE  0EFF               	movlw	255
  9151  0105C0  5A35               	subwfb	btemp^0,f,c
  9152  0105C2  A0D8               	btfss	status,0,c
  9153  0105C4  D018               	goto	l8911
  9154  0105C6                     u8720:
  9155                           
  9156                           ;stkvar	_e @ sp[(-56)+34]
  9157                           ;stkvar	_p @ sp[(-56)+40]
  9158  0105C6  0EF0               	movlw	-16
  9159  0105C8  50E3               	movf	plusw1,w,c
  9160  0105CA  0FFF               	addlw	255
  9161  0105CC  6E3F               	movwf	(btemp+10)^0,c
  9162  0105CE  0EF1               	movlw	-15
  9163  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
  9164  0105D6  0EFF               	movlw	255
  9165  0105D8  2240               	addwfc	(btemp+11)^0,f,c
  9166  0105DA  0EEA               	movlw	-22
  9167  0105DC  50E3               	movf	plusw1,w,c
  9168  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
  9169  0105E0  5040               	movf	(btemp+11)^0,w,c
  9170  0105E2  0A80               	xorlw	128
  9171  0105E4  6E35               	movwf	btemp^0,c
  9172  0105E6  0EEB               	movlw	-21
  9173  0105E8  50E3               	movf	plusw1,w,c
  9174  0105EA  0A80               	xorlw	128
  9175  0105EC  5835               	subwfb	btemp^0,w,c
  9176  0105EE  A0D8               	btfss	status,0,c
  9177  0105F0  D002               	goto	l8911
  9178                           
  9179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  9180  0105F2  0E66               	movlw	102
  9181  0105F4  D001               	goto	L5
  9182  0105F6                     l8911:
  9183                           
  9184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  9185  0105F6  0E65               	movlw	101
  9186  0105F8                     L5:
  9187  0105F8  6E40               	movwf	(btemp+11)^0,c
  9188                           
  9189                           ;stkvar	_nmode @ sp[(-56)+55]
  9190  0105FA  0EFF               	movlw	-1
  9191  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
  9192  010602                     l8913:
  9193                           
  9194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  9195                           ;stkvar	_p @ sp[(-56)+40]
  9196                           ;stkvar	_m @ sp[(-56)+48]
  9197  010602  0EF0               	movlw	-16
  9198  010604  006F FF8C  F035    	movff	plusw1,btemp
  9199  01060A  0EF8               	movlw	-8
  9200  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9201  010612  0EF1               	movlw	-15
  9202  010614  006F FF8C  F035    	movff	plusw1,btemp
  9203  01061A  0EF9               	movlw	-7
  9204  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9205                           
  9206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  9207                           ;stkvar	_mode @ sp[(-56)+54]
  9208  010622  0EFE               	movlw	-2
  9209  010624  006F FF8C  F035    	movff	plusw1,btemp
  9210  01062A  0E67               	movlw	103
  9211  01062C  1835               	xorwf	btemp^0,w,c
  9212  01062E  A4D8               	btfss	status,2,c
  9213  010630  D00B               	goto	u8760
  9214                           
  9215                           ;stkvar	_nmode @ sp[(-56)+55]
  9216  010632  0EFF               	movlw	-1
  9217  010634  006F FF8C  F035    	movff	plusw1,btemp
  9218  01063A  0E66               	movlw	102
  9219  01063C  1835               	xorwf	btemp^0,w,c
  9220  01063E  A4D8               	btfss	status,2,c
  9221  010640  D014               	goto	l1788
  9222                           
  9223                           ;stkvar	_e @ sp[(-56)+34]
  9224  010642  0EEB               	movlw	-21
  9225  010644  AEE3               	btfss	plusw1,7,c
  9226  010646  D011               	goto	l1788
  9227  010648                     u8760:
  9228                           
  9229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
  9230                           ;stkvar	_m @ sp[(-56)+48]
  9231  010648  0EF8               	movlw	-8
  9232  01064A  50E3               	movf	plusw1,w,c
  9233  01064C  0F01               	addlw	1
  9234  01064E  6E35               	movwf	btemp^0,c
  9235  010650  0EF8               	movlw	-8
  9236  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
  9237  010658  6A35               	clrf	btemp^0,c
  9238  01065A  0EF9               	movlw	-7
  9239  01065C  50E3               	movf	plusw1,w,c
  9240  01065E  2035               	addwfc	btemp^0,w,c
  9241  010660  6E35               	movwf	btemp^0,c
  9242  010662  0EF9               	movlw	-7
  9243  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
  9244  01066A                     l1788:
  9245                           
  9246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  9247                           ;stkvar	_nmode @ sp[(-56)+55]
  9248  01066A  0EFF               	movlw	-1
  9249  01066C  006F FF8C  F035    	movff	plusw1,btemp
  9250  010672  0E66               	movlw	102
  9251  010674  1835               	xorwf	btemp^0,w,c
  9252  010676  A4D8               	btfss	status,2,c
  9253  010678  D03B               	goto	l8933
  9254                           
  9255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  9256                           ;stkvar	_e @ sp[(-56)+34]
  9257  01067A  0EEB               	movlw	-21
  9258  01067C  AEE3               	btfss	plusw1,7,c
  9259  01067E  D01C               	goto	l8929
  9260                           
  9261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  9262  010680  0E00               	movlw	0
  9263  010682  6E3D               	movwf	(btemp+8)^0,c
  9264  010684  0E00               	movlw	0
  9265  010686  6E3E               	movwf	(btemp+9)^0,c
  9266  010688  0E80               	movlw	128
  9267  01068A  6E3F               	movwf	(btemp+10)^0,c
  9268  01068C  0E3F               	movlw	63
  9269  01068E  6E40               	movwf	(btemp+11)^0,c
  9270                           
  9271                           ;stkvar	_u @ sp[(-56)+12]
  9272  010690  0ED4               	movlw	-44
  9273  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9274  010698  0ED5               	movlw	-43
  9275  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9276  0106A0  0ED6               	movlw	-42
  9277  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9278  0106A8  0ED7               	movlw	-41
  9279  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
  9280                           
  9281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  9282                           ;stkvar	_e @ sp[(-56)+34]
  9283  0106B0  0EEA               	movlw	-22
  9284  0106B2  6AE3               	clrf	plusw1,c
  9285  0106B4  0EEB               	movlw	-21
  9286  0106B6  6AE3               	clrf	plusw1,c
  9287  0106B8                     l8929:
  9288                           
  9289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  9290                           ;stkvar	_mode @ sp[(-56)+54]
  9291  0106B8  0EFE               	movlw	-2
  9292  0106BA  006F FF8C  F035    	movff	plusw1,btemp
  9293  0106C0  0E67               	movlw	103
  9294  0106C2  1835               	xorwf	btemp^0,w,c
  9295  0106C4  B4D8               	btfsc	status,2,c
  9296  0106C6  D014               	goto	l8933
  9297                           
  9298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
  9299                           ;stkvar	_e @ sp[(-56)+34]
  9300                           ;stkvar	_m @ sp[(-56)+48]
  9301  0106C8  0EF8               	movlw	-8
  9302  0106CA  50E3               	movf	plusw1,w,c
  9303  0106CC  6E35               	movwf	btemp^0,c
  9304  0106CE  0EEA               	movlw	-22
  9305  0106D0  50E3               	movf	plusw1,w,c
  9306  0106D2  2635               	addwf	btemp^0,f,c
  9307  0106D4  0EF8               	movlw	-8
  9308  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9309  0106DC  0EF9               	movlw	-7
  9310  0106DE  50E3               	movf	plusw1,w,c
  9311  0106E0  6E35               	movwf	btemp^0,c
  9312  0106E2  0EEB               	movlw	-21
  9313  0106E4  50E3               	movf	plusw1,w,c
  9314  0106E6  2235               	addwfc	btemp^0,f,c
  9315  0106E8  0EF9               	movlw	-7
  9316  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9317  0106F0                     l8933:
  9318                           
  9319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  9320                           ;stkvar	_i @ sp[(-56)+36]
  9321  0106F0  0EEC               	movlw	-20
  9322  0106F2  6AE3               	clrf	plusw1,c
  9323  0106F4  0EED               	movlw	-19
  9324  0106F6  6AE3               	clrf	plusw1,c
  9325                           
  9326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
  9327                           ;stkvar	_g @ sp[(-56)+16]
  9328  0106F8  0ED8               	movlw	-40
  9329  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
  9330  010700  0ED9               	movlw	-39
  9331  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
  9332  010708  0EDA               	movlw	-38
  9333  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9334  010710  0EDB               	movlw	-37
  9335  010712  006F FF8C  F040    	movff	plusw1,btemp+11
  9336                           
  9337                           ;stkvar	_h @ sp[(-56)+24]
  9338  010718  0EE0               	movlw	-32
  9339  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9340  010720  0EE1               	movlw	-31
  9341  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9342  010728  0EE2               	movlw	-30
  9343  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9344  010730  0EE3               	movlw	-29
  9345  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
  9346                           
  9347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  9348                           ;stkvar	_u @ sp[(-56)+12]
  9349  010738  0ED4               	movlw	-44
  9350  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
  9351  010740  0ED5               	movlw	-43
  9352  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
  9353  010748  0ED6               	movlw	-42
  9354  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9355  010750  0ED7               	movlw	-41
  9356  010752  006F FF8C  F040    	movff	plusw1,btemp+11
  9357                           
  9358                           ;stkvar	_ou @ sp[(-56)+28]
  9359  010758  0EE4               	movlw	-28
  9360  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9361  010760  0EE5               	movlw	-27
  9362  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9363  010768  0EE6               	movlw	-26
  9364  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9365  010770  0EE7               	movlw	-25
  9366  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
  9367                           
  9368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  9369  010778  D0D6               	goto	l8949
  9370  01077A                     l8939:
  9371                           
  9372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  9373                           ;stkvar	_u @ sp[(-56)+12]
  9374  01077A  0ED4               	movlw	-44
  9375  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
  9376  010782  006F FF8F FFE6     	movff	plusw1,postinc1
  9377  010788  006F FF8F FFE6     	movff	plusw1,postinc1
  9378  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
  9379                           
  9380                           ;stkvar	_h @ sp[(-60)+24]
  9381  010794  0EDC               	movlw	-36
  9382  010796  006F FF8F FFE6     	movff	plusw1,postinc1
  9383  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
  9384  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9385  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9386  0107AE  ECB4  F096         	call	___fldiv	;wreg free
  9387  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
  9388  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9389  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9390  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9391  0107CA  EC11  F0A0         	call	_floorf	;wreg free
  9392                           
  9393                           ;stkvar	_l @ sp[(-56)+20]
  9394  0107CE  0EDC               	movlw	-36
  9395  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9396  0107D6  0EDD               	movlw	-35
  9397  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9398  0107DE  0EDE               	movlw	-34
  9399  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9400  0107E6  0EDF               	movlw	-33
  9401  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9402                           
  9403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  9404                           ;stkvar	_l @ sp[(-56)+20]
  9405  0107EE  0EDC               	movlw	-36
  9406  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9407  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9408  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9409  010802  006F FF8F FFE6     	movff	plusw1,postinc1
  9410  010808  ECF0  F0AB         	call	___fltol	;wreg free
  9411  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
  9412  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
  9413                           
  9414                           ;stkvar	_d @ sp[(-56)+44]
  9415  010818  0EF4               	movlw	-12
  9416  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9417  010820  0EF5               	movlw	-11
  9418  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
  9419                           
  9420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  9421                           ;stkvar	_u @ sp[(-56)+12]
  9422  010828  0ED4               	movlw	-44
  9423  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
  9424  010830  006F FF8F FFE6     	movff	plusw1,postinc1
  9425  010836  006F FF8F FFE6     	movff	plusw1,postinc1
  9426  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
  9427                           
  9428                           ;stkvar	_l @ sp[(-60)+20]
  9429  010842  0ED8               	movlw	-40
  9430  010844  006F FF8F FFE6     	movff	plusw1,postinc1
  9431  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
  9432  010850  006F FF8F FFE6     	movff	plusw1,postinc1
  9433  010856  006F FF8F FFE6     	movff	plusw1,postinc1
  9434  01085C  ECC1  F08E         	call	___flmul	;wreg free
  9435  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
  9436  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9437  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9438  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9439                           
  9440                           ;stkvar	_h @ sp[(-60)+24]
  9441  010878  0EDC               	movlw	-36
  9442  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
  9443  010880  006F FF8F FFE6     	movff	plusw1,postinc1
  9444  010886  006F FF8F FFE6     	movff	plusw1,postinc1
  9445  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
  9446  010892  EC20  F0B9         	call	___flsub	;wreg free
  9447                           
  9448                           ;stkvar	_h @ sp[(-56)+24]
  9449  010896  0EE0               	movlw	-32
  9450  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
  9451  01089E  0EE1               	movlw	-31
  9452  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9453  0108A6  0EE2               	movlw	-30
  9454  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9455  0108AE  0EE3               	movlw	-29
  9456  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9457                           
  9458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  9459  0108B6  0E00               	movlw	0
  9460  0108B8  6EE6               	movwf	postinc1,c
  9461  0108BA  0E00               	movlw	0
  9462  0108BC  6EE6               	movwf	postinc1,c
  9463  0108BE  0E20               	movlw	32
  9464  0108C0  6EE6               	movwf	postinc1,c
  9465  0108C2  0E41               	movlw	65
  9466  0108C4  6EE6               	movwf	postinc1,c
  9467                           
  9468                           ;stkvar	_u @ sp[(-60)+12]
  9469  0108C6  0ED0               	movlw	-48
  9470  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9471  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9472  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9473  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9474  0108E0  ECB4  F096         	call	___fldiv	;wreg free
  9475                           
  9476                           ;stkvar	_u @ sp[(-56)+12]
  9477  0108E4  0ED4               	movlw	-44
  9478  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9479  0108EC  0ED5               	movlw	-43
  9480  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9481  0108F4  0ED6               	movlw	-42
  9482  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9483  0108FC  0ED7               	movlw	-41
  9484  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9485                           
  9486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
  9487                           ;stkvar	_i @ sp[(-56)+36]
  9488  010904  0EEC               	movlw	-20
  9489  010906  50E3               	movf	plusw1,w,c
  9490  010908  0F01               	addlw	1
  9491  01090A  6E35               	movwf	btemp^0,c
  9492  01090C  0EEC               	movlw	-20
  9493  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9494  010914  6A35               	clrf	btemp^0,c
  9495  010916  0EED               	movlw	-19
  9496  010918  50E3               	movf	plusw1,w,c
  9497  01091A  2035               	addwfc	btemp^0,w,c
  9498  01091C  6E35               	movwf	btemp^0,c
  9499  01091E  0EED               	movlw	-19
  9500  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
  9501  010926                     l8949:
  9502                           
  9503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  9504                           ;stkvar	_m @ sp[(-56)+48]
  9505                           ;stkvar	_i @ sp[(-56)+36]
  9506  010926  50E1               	movf	fsr1l,w,c
  9507  010928  0FEC               	addlw	-20
  9508  01092A  6ED9               	movwf	fsr2l,c
  9509  01092C  50E2               	movf	fsr1h,w,c
  9510  01092E  6EDA               	movwf	fsr2h,c
  9511  010930  0EFF               	movlw	255
  9512  010932  22DA               	addwfc	fsr2h,f,c
  9513  010934  0EF8               	movlw	-8
  9514  010936  50E3               	movf	plusw1,w,c
  9515  010938  5CDE               	subwf	postinc2,w,c
  9516  01093A  50DE               	movf	postinc2,w,c
  9517  01093C  0A80               	xorlw	128
  9518  01093E  6E35               	movwf	btemp^0,c
  9519  010940  0EF9               	movlw	-7
  9520  010942  50E3               	movf	plusw1,w,c
  9521  010944  0A80               	xorlw	128
  9522  010946  5835               	subwfb	btemp^0,w,c
  9523  010948  A0D8               	btfss	status,0,c
  9524  01094A  D717               	goto	l8939
  9525                           
  9526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  9527  01094C  0E00               	movlw	0
  9528  01094E  6EE6               	movwf	postinc1,c
  9529  010950  0E00               	movlw	0
  9530  010952  6EE6               	movwf	postinc1,c
  9531  010954  0EA0               	movlw	160
  9532  010956  6EE6               	movwf	postinc1,c
  9533  010958  0E40               	movlw	64
  9534  01095A  6EE6               	movwf	postinc1,c
  9535                           
  9536                           ;stkvar	_u @ sp[(-60)+12]
  9537  01095C  0ED0               	movlw	-48
  9538  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
  9539  010964  006F FF8F FFE6     	movff	plusw1,postinc1
  9540  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
  9541  010970  006F FF8F FFE6     	movff	plusw1,postinc1
  9542  010976  ECC1  F08E         	call	___flmul	;wreg free
  9543                           
  9544                           ;stkvar	_l @ sp[(-56)+20]
  9545  01097A  0EDC               	movlw	-36
  9546  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9547  010982  0EDD               	movlw	-35
  9548  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9549  01098A  0EDE               	movlw	-34
  9550  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9551  010992  0EDF               	movlw	-33
  9552  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9553                           
  9554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  9555                           ;stkvar	_l @ sp[(-56)+20]
  9556  01099A  0EDC               	movlw	-36
  9557  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
  9558  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9559  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9560  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9561                           
  9562                           ;stkvar	_h @ sp[(-60)+24]
  9563  0109B4  0EDC               	movlw	-36
  9564  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
  9565  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
  9566  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
  9567  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9568  0109CE  ECA9  F0AC         	call	___flge	;wreg free
  9569  0109D2  A035               	btfss	btemp& (0+255),0,c
  9570  0109D4  D021               	goto	u8830
  9571                           
  9572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  9573                           ;stkvar	_l @ sp[(-56)+20]
  9574                           
  9575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
  9576                           
  9577                           ;stkvar	_l @ sp[(-56)+20]
  9578                           
  9579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  9580  0109D6  0EDC               	movlw	-36
  9581  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
  9582  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
  9583  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
  9584  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
  9585                           
  9586                           ;stkvar	_h @ sp[(-60)+24]
  9587  0109F0  0EDC               	movlw	-36
  9588  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
  9589  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
  9590  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
  9591  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
  9592  010A0A  EC8E  F0B2         	call	___fleq	;wreg free
  9593  010A0E  A035               	btfss	btemp& (0+255),0,c
  9594  010A10  D01B               	goto	l8963
  9595                           
  9596                           ;stkvar	_d @ sp[(-56)+44]
  9597  010A12  0EF4               	movlw	-12
  9598  010A14  B0E3               	btfsc	plusw1,0,c
  9599  010A16  D018               	goto	l8963
  9600  010A18                     u8830:
  9601                           
  9602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  9603  010A18  0E00               	movlw	0
  9604  010A1A  6E3D               	movwf	(btemp+8)^0,c
  9605  010A1C  0E00               	movlw	0
  9606  010A1E  6E3E               	movwf	(btemp+9)^0,c
  9607  010A20  0E00               	movlw	0
  9608  010A22  6E3F               	movwf	(btemp+10)^0,c
  9609  010A24  0E00               	movlw	0
  9610  010A26  6E40               	movwf	(btemp+11)^0,c
  9611                           
  9612                           ;stkvar	_l @ sp[(-56)+20]
  9613  010A28  0EDC               	movlw	-36
  9614  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9615  010A30  0EDD               	movlw	-35
  9616  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9617  010A38  0EDE               	movlw	-34
  9618  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9619  010A40  0EDF               	movlw	-33
  9620  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
  9621  010A48                     l8963:
  9622                           
  9623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  9624                           ;stkvar	_l @ sp[(-56)+20]
  9625  010A48  0EDC               	movlw	-36
  9626  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
  9627  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
  9628  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
  9629  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
  9630                           
  9631                           ;stkvar	_g @ sp[(-60)+16]
  9632  010A62  0ED4               	movlw	-44
  9633  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
  9634  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
  9635  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
  9636  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
  9637  010A7C  ECD6  F092         	call	___fladd	;wreg free
  9638                           
  9639                           ;stkvar	_h @ sp[(-56)+24]
  9640  010A80  0EE0               	movlw	-32
  9641  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
  9642  010A88  0EE1               	movlw	-31
  9643  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9644  010A90  0EE2               	movlw	-30
  9645  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9646  010A98  0EE3               	movlw	-29
  9647  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9648                           
  9649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  9650                           ;stkvar	_ou @ sp[(-56)+28]
  9651  010AA0  0EE4               	movlw	-28
  9652  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
  9653  010AA8  0EE5               	movlw	-27
  9654  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
  9655  010AB0  0EE6               	movlw	-26
  9656  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
  9657  010AB8  0EE7               	movlw	-25
  9658  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
  9659                           
  9660                           ;stkvar	_u @ sp[(-56)+12]
  9661  010AC0  0ED4               	movlw	-44
  9662  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9663  010AC8  0ED5               	movlw	-43
  9664  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9665  010AD0  0ED6               	movlw	-42
  9666  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9667  010AD8  0ED7               	movlw	-41
  9668  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
  9669                           
  9670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  9671                           ;stkvar	_nmode @ sp[(-56)+55]
  9672  010AE0  0EFF               	movlw	-1
  9673  010AE2  006F FF8C  F035    	movff	plusw1,btemp
  9674  010AE8  0E65               	movlw	101
  9675  010AEA  1835               	xorwf	btemp^0,w,c
  9676  010AEC  B4D8               	btfsc	status,2,c
  9677  010AEE  D011               	goto	l8971
  9678                           
  9679                           ;stkvar	_e @ sp[(-56)+34]
  9680                           ;stkvar	_ne @ sp[(-56)+46]
  9681  010AF0  0EEA               	movlw	-22
  9682  010AF2  006F FF8C  F035    	movff	plusw1,btemp
  9683  010AF8  0EF6               	movlw	-10
  9684  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9685  010B00  0EEB               	movlw	-21
  9686  010B02  006F FF8C  F035    	movff	plusw1,btemp
  9687  010B08  0EF7               	movlw	-9
  9688  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9689  010B10  D004               	goto	l1803
  9690  010B12                     l8971:
  9691                           
  9692                           ;stkvar	_ne @ sp[(-56)+46]
  9693  010B12  0EF6               	movlw	-10
  9694  010B14  6AE3               	clrf	plusw1,c
  9695  010B16  0EF7               	movlw	-9
  9696  010B18  6AE3               	clrf	plusw1,c
  9697  010B1A                     l1803:
  9698                           
  9699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  9700                           ;stkvar	_pp @ sp[(-56)+50]
  9701  010B1A  0EFA               	movlw	-6
  9702  010B1C  6AE3               	clrf	plusw1,c
  9703  010B1E  0EFB               	movlw	-5
  9704  010B20  6AE3               	clrf	plusw1,c
  9705                           
  9706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  9707                           ;stkvar	_t @ sp[(-56)+52]
  9708  010B22  0EFC               	movlw	-4
  9709  010B24  6AE3               	clrf	plusw1,c
  9710  010B26  0EFD               	movlw	-3
  9711  010B28  6AE3               	clrf	plusw1,c
  9712                           
  9713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  9714                           ;stkvar	_i @ sp[(-56)+36]
  9715  010B2A  0EEC               	movlw	-20
  9716  010B2C  6AE3               	clrf	plusw1,c
  9717  010B2E  0EED               	movlw	-19
  9718  010B30  6AE3               	clrf	plusw1,c
  9719                           
  9720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  9721  010B32  D1B7               	goto	l9023
  9722  010B34                     l8973:
  9723                           
  9724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  9725                           ;stkvar	_u @ sp[(-56)+12]
  9726  010B34  0ED4               	movlw	-44
  9727  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
  9728  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
  9729  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
  9730  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
  9731                           
  9732                           ;stkvar	_h @ sp[(-60)+24]
  9733  010B4E  0EDC               	movlw	-36
  9734  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
  9735  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
  9736  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
  9737  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
  9738  010B68  ECB4  F096         	call	___fldiv	;wreg free
  9739  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
  9740  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9741  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9742  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9743  010B84  EC11  F0A0         	call	_floorf	;wreg free
  9744                           
  9745                           ;stkvar	_l @ sp[(-56)+20]
  9746  010B88  0EDC               	movlw	-36
  9747  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9748  010B90  0EDD               	movlw	-35
  9749  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9750  010B98  0EDE               	movlw	-34
  9751  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9752  010BA0  0EDF               	movlw	-33
  9753  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9754                           
  9755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  9756                           ;stkvar	_l @ sp[(-56)+20]
  9757  010BA8  0EDC               	movlw	-36
  9758  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
  9759  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
  9760  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
  9761  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
  9762  010BC2  ECF0  F0AB         	call	___fltol	;wreg free
  9763  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
  9764  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
  9765                           
  9766                           ;stkvar	_d @ sp[(-56)+44]
  9767  010BD2  0EF4               	movlw	-12
  9768  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9769  010BDA  0EF5               	movlw	-11
  9770  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
  9771                           
  9772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9773  010BE2  B822               	btfsc	_flags^0,4,c
  9774  010BE4  D026               	goto	l8987
  9775                           
  9776                           ;stkvar	_d @ sp[(-56)+44]
  9777  010BE6  0EF4               	movlw	-12
  9778  010BE8  006F FF8C  F035    	movff	plusw1,btemp
  9779  010BEE  0EF5               	movlw	-11
  9780  010BF0  50E3               	movf	plusw1,w,c
  9781  010BF2  1035               	iorwf	btemp^0,w,c
  9782  010BF4  A4D8               	btfss	status,2,c
  9783  010BF6  D01D               	goto	l8987
  9784                           
  9785                           ;stkvar	_mode @ sp[(-56)+54]
  9786  010BF8  0EFE               	movlw	-2
  9787  010BFA  006F FF8C  F035    	movff	plusw1,btemp
  9788  010C00  0E67               	movlw	103
  9789  010C02  1835               	xorwf	btemp^0,w,c
  9790  010C04  A4D8               	btfss	status,2,c
  9791  010C06  D015               	goto	l8987
  9792                           
  9793                           ;stkvar	_ne @ sp[(-56)+46]
  9794  010C08  0EF7               	movlw	-9
  9795  010C0A  AEE3               	btfss	plusw1,7,c
  9796  010C0C  D012               	goto	l8987
  9797                           
  9798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
  9799                           ;stkvar	_t @ sp[(-56)+52]
  9800  010C0E  0EFC               	movlw	-4
  9801  010C10  50E3               	movf	plusw1,w,c
  9802  010C12  0F01               	addlw	1
  9803  010C14  6E35               	movwf	btemp^0,c
  9804  010C16  0EFC               	movlw	-4
  9805  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
  9806  010C1E  6A35               	clrf	btemp^0,c
  9807  010C20  0EFD               	movlw	-3
  9808  010C22  50E3               	movf	plusw1,w,c
  9809  010C24  2035               	addwfc	btemp^0,w,c
  9810  010C26  6E35               	movwf	btemp^0,c
  9811  010C28  0EFD               	movlw	-3
  9812  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9813                           
  9814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
  9815  010C30  D0AF               	goto	l9015
  9816  010C32                     l8987:
  9817                           
  9818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  9819                           ;stkvar	_pp @ sp[(-56)+50]
  9820  010C32  0EFA               	movlw	-6
  9821  010C34  006F FF8C  F035    	movff	plusw1,btemp
  9822  010C3A  0EFB               	movlw	-5
  9823  010C3C  50E3               	movf	plusw1,w,c
  9824  010C3E  1035               	iorwf	btemp^0,w,c
  9825  010C40  A4D8               	btfss	status,2,c
  9826  010C42  D070               	goto	l9007
  9827                           
  9828                           ;stkvar	_ne @ sp[(-56)+46]
  9829  010C44  0EF7               	movlw	-9
  9830  010C46  AEE3               	btfss	plusw1,7,c
  9831  010C48  D06D               	goto	l9007
  9832                           
  9833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  9834                           ;stkvar	_n @ sp[(-56)+32]
  9835  010C4A  0EE8               	movlw	-24
  9836  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
  9837  010C52  0EE9               	movlw	-23
  9838  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
  9839  010C5A  0EA8               	movlw	low _dbuf
  9840  010C5C  243F               	addwf	(btemp+10)^0,w,c
  9841  010C5E  6ED9               	movwf	fsr2l,c
  9842  010C60  0E01               	movlw	high _dbuf
  9843  010C62  2040               	addwfc	(btemp+11)^0,w,c
  9844  010C64  6EDA               	movwf	fsr2h,c
  9845  010C66  0E2E               	movlw	46
  9846  010C68  6EDF               	movwf	indf2,c
  9847                           
  9848                           ;stkvar	_n @ sp[(-56)+32]
  9849  010C6A  0EE8               	movlw	-24
  9850  010C6C  50E3               	movf	plusw1,w,c
  9851  010C6E  0F01               	addlw	1
  9852  010C70  6E35               	movwf	btemp^0,c
  9853  010C72  0EE8               	movlw	-24
  9854  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
  9855  010C7A  6A35               	clrf	btemp^0,c
  9856  010C7C  0EE9               	movlw	-23
  9857  010C7E  50E3               	movf	plusw1,w,c
  9858  010C80  2035               	addwfc	btemp^0,w,c
  9859  010C82  6E35               	movwf	btemp^0,c
  9860  010C84  0EE9               	movlw	-23
  9861  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
  9862                           
  9863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
  9864                           ;stkvar	_w @ sp[(-56)+38]
  9865  010C8C  50E1               	movf	fsr1l,w,c
  9866  010C8E  0FEE               	addlw	-18
  9867  010C90  6ED9               	movwf	fsr2l,c
  9868  010C92  50E2               	movf	fsr1h,w,c
  9869  010C94  6EDA               	movwf	fsr2h,c
  9870  010C96  0EFF               	movlw	255
  9871  010C98  22DA               	addwfc	fsr2h,f,c
  9872  010C9A  06DE               	decf	postinc2,f,c
  9873  010C9C  0E00               	movlw	0
  9874  010C9E  5ADD               	subwfb	postdec2,f,c
  9875                           
  9876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  9877  010CA0  0E01               	movlw	1
  9878  010CA2  6E3F               	movwf	(btemp+10)^0,c
  9879  010CA4  0E00               	movlw	0
  9880  010CA6  6E40               	movwf	(btemp+11)^0,c
  9881                           
  9882                           ;stkvar	_pp @ sp[(-56)+50]
  9883  010CA8  0EFA               	movlw	-6
  9884  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9885  010CB0  0EFB               	movlw	-5
  9886  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
  9887  010CB8  D035               	goto	l9007
  9888  010CBA                     l8999:
  9889                           
  9890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  9891                           ;stkvar	_n @ sp[(-56)+32]
  9892  010CBA  0EE8               	movlw	-24
  9893  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
  9894  010CC2  0EE9               	movlw	-23
  9895  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
  9896  010CCA  0EA8               	movlw	low _dbuf
  9897  010CCC  243F               	addwf	(btemp+10)^0,w,c
  9898  010CCE  6ED9               	movwf	fsr2l,c
  9899  010CD0  0E01               	movlw	high _dbuf
  9900  010CD2  2040               	addwfc	(btemp+11)^0,w,c
  9901  010CD4  6EDA               	movwf	fsr2h,c
  9902  010CD6  0E30               	movlw	48
  9903  010CD8  6EDF               	movwf	indf2,c
  9904                           
  9905                           ;stkvar	_n @ sp[(-56)+32]
  9906  010CDA  0EE8               	movlw	-24
  9907  010CDC  50E3               	movf	plusw1,w,c
  9908  010CDE  0F01               	addlw	1
  9909  010CE0  6E35               	movwf	btemp^0,c
  9910  010CE2  0EE8               	movlw	-24
  9911  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
  9912  010CEA  6A35               	clrf	btemp^0,c
  9913  010CEC  0EE9               	movlw	-23
  9914  010CEE  50E3               	movf	plusw1,w,c
  9915  010CF0  2035               	addwfc	btemp^0,w,c
  9916  010CF2  6E35               	movwf	btemp^0,c
  9917  010CF4  0EE9               	movlw	-23
  9918  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9919                           
  9920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
  9921                           ;stkvar	_w @ sp[(-56)+38]
  9922  010CFC  50E1               	movf	fsr1l,w,c
  9923  010CFE  0FEE               	addlw	-18
  9924  010D00  6ED9               	movwf	fsr2l,c
  9925  010D02  50E2               	movf	fsr1h,w,c
  9926  010D04  6EDA               	movwf	fsr2h,c
  9927  010D06  0EFF               	movlw	255
  9928  010D08  22DA               	addwfc	fsr2h,f,c
  9929  010D0A  06DE               	decf	postinc2,f,c
  9930  010D0C  0E00               	movlw	0
  9931  010D0E  5ADD               	subwfb	postdec2,f,c
  9932                           
  9933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
  9934                           ;stkvar	_t @ sp[(-56)+52]
  9935  010D10  50E1               	movf	fsr1l,w,c
  9936  010D12  0FFC               	addlw	-4
  9937  010D14  6ED9               	movwf	fsr2l,c
  9938  010D16  50E2               	movf	fsr1h,w,c
  9939  010D18  6EDA               	movwf	fsr2h,c
  9940  010D1A  0EFF               	movlw	255
  9941  010D1C  22DA               	addwfc	fsr2h,f,c
  9942  010D1E  06DE               	decf	postinc2,f,c
  9943  010D20  0E00               	movlw	0
  9944  010D22  5ADD               	subwfb	postdec2,f,c
  9945  010D24                     l9007:
  9946                           
  9947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  9948                           ;stkvar	_t @ sp[(-56)+52]
  9949  010D24  0EFC               	movlw	-4
  9950  010D26  006F FF8C  F035    	movff	plusw1,btemp
  9951  010D2C  0EFD               	movlw	-3
  9952  010D2E  50E3               	movf	plusw1,w,c
  9953  010D30  1035               	iorwf	btemp^0,w,c
  9954  010D32  A4D8               	btfss	status,2,c
  9955  010D34  D7C2               	goto	l8999
  9956                           
  9957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  9958                           ;stkvar	_n @ sp[(-56)+32]
  9959  010D36  0EE8               	movlw	-24
  9960  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
  9961  010D3E  0EE9               	movlw	-23
  9962  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
  9963  010D46  0EA8               	movlw	low _dbuf
  9964  010D48  243F               	addwf	(btemp+10)^0,w,c
  9965  010D4A  6ED9               	movwf	fsr2l,c
  9966  010D4C  0E01               	movlw	high _dbuf
  9967  010D4E  2040               	addwfc	(btemp+11)^0,w,c
  9968  010D50  6EDA               	movwf	fsr2h,c
  9969                           
  9970                           ;stkvar	_d @ sp[(-56)+44]
  9971  010D52  0EF4               	movlw	-12
  9972  010D54  50E3               	movf	plusw1,w,c
  9973  010D56  0F30               	addlw	48
  9974  010D58  6EDF               	movwf	indf2,c
  9975                           
  9976                           ;stkvar	_n @ sp[(-56)+32]
  9977  010D5A  0EE8               	movlw	-24
  9978  010D5C  50E3               	movf	plusw1,w,c
  9979  010D5E  0F01               	addlw	1
  9980  010D60  6E35               	movwf	btemp^0,c
  9981  010D62  0EE8               	movlw	-24
  9982  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
  9983  010D6A  6A35               	clrf	btemp^0,c
  9984  010D6C  0EE9               	movlw	-23
  9985  010D6E  50E3               	movf	plusw1,w,c
  9986  010D70  2035               	addwfc	btemp^0,w,c
  9987  010D72  6E35               	movwf	btemp^0,c
  9988  010D74  0EE9               	movlw	-23
  9989  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
  9990                           
  9991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
  9992                           ;stkvar	_w @ sp[(-56)+38]
  9993  010D7C  50E1               	movf	fsr1l,w,c
  9994  010D7E  0FEE               	addlw	-18
  9995  010D80  6ED9               	movwf	fsr2l,c
  9996  010D82  50E2               	movf	fsr1h,w,c
  9997  010D84  6EDA               	movwf	fsr2h,c
  9998  010D86  0EFF               	movlw	255
  9999  010D88  22DA               	addwfc	fsr2h,f,c
 10000  010D8A  06DE               	decf	postinc2,f,c
 10001  010D8C  0E00               	movlw	0
 10002  010D8E  5ADD               	subwfb	postdec2,f,c
 10003  010D90                     l9015:
 10004                           
 10005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 10006                           ;stkvar	_u @ sp[(-56)+12]
 10007  010D90  0ED4               	movlw	-44
 10008  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 10009  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 10010  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10011  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 10012                           
 10013                           ;stkvar	_l @ sp[(-60)+20]
 10014  010DAA  0ED8               	movlw	-40
 10015  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10016  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10017  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 10018  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 10019  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 10020  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 10021  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10022  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10023  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10024                           
 10025                           ;stkvar	_h @ sp[(-60)+24]
 10026  010DE0  0EDC               	movlw	-36
 10027  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 10028  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10029  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10030  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10031  010DFA  EC20  F0B9         	call	___flsub	;wreg free
 10032                           
 10033                           ;stkvar	_h @ sp[(-56)+24]
 10034  010DFE  0EE0               	movlw	-32
 10035  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 10036  010E06  0EE1               	movlw	-31
 10037  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10038  010E0E  0EE2               	movlw	-30
 10039  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10040  010E16  0EE3               	movlw	-29
 10041  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10042                           
 10043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 10044  010E1E  0E00               	movlw	0
 10045  010E20  6EE6               	movwf	postinc1,c
 10046  010E22  0E00               	movlw	0
 10047  010E24  6EE6               	movwf	postinc1,c
 10048  010E26  0E20               	movlw	32
 10049  010E28  6EE6               	movwf	postinc1,c
 10050  010E2A  0E41               	movlw	65
 10051  010E2C  6EE6               	movwf	postinc1,c
 10052                           
 10053                           ;stkvar	_u @ sp[(-60)+12]
 10054  010E2E  0ED0               	movlw	-48
 10055  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 10056  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 10057  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10058  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 10059  010E48  ECB4  F096         	call	___fldiv	;wreg free
 10060                           
 10061                           ;stkvar	_u @ sp[(-56)+12]
 10062  010E4C  0ED4               	movlw	-44
 10063  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10064  010E54  0ED5               	movlw	-43
 10065  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10066  010E5C  0ED6               	movlw	-42
 10067  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10068  010E64  0ED7               	movlw	-41
 10069  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10070                           
 10071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 10072                           ;stkvar	_ne @ sp[(-56)+46]
 10073  010E6C  50E1               	movf	fsr1l,w,c
 10074  010E6E  0FF6               	addlw	-10
 10075  010E70  6ED9               	movwf	fsr2l,c
 10076  010E72  50E2               	movf	fsr1h,w,c
 10077  010E74  6EDA               	movwf	fsr2h,c
 10078  010E76  0EFF               	movlw	255
 10079  010E78  22DA               	addwfc	fsr2h,f,c
 10080  010E7A  06DE               	decf	postinc2,f,c
 10081  010E7C  0E00               	movlw	0
 10082  010E7E  5ADD               	subwfb	postdec2,f,c
 10083                           
 10084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 10085                           ;stkvar	_i @ sp[(-56)+36]
 10086  010E80  0EEC               	movlw	-20
 10087  010E82  50E3               	movf	plusw1,w,c
 10088  010E84  0F01               	addlw	1
 10089  010E86  6E35               	movwf	btemp^0,c
 10090  010E88  0EEC               	movlw	-20
 10091  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10092  010E90  6A35               	clrf	btemp^0,c
 10093  010E92  0EED               	movlw	-19
 10094  010E94  50E3               	movf	plusw1,w,c
 10095  010E96  2035               	addwfc	btemp^0,w,c
 10096  010E98  6E35               	movwf	btemp^0,c
 10097  010E9A  0EED               	movlw	-19
 10098  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10099  010EA2                     l9023:
 10100                           
 10101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10102                           ;stkvar	_m @ sp[(-56)+48]
 10103                           ;stkvar	_i @ sp[(-56)+36]
 10104  010EA2  50E1               	movf	fsr1l,w,c
 10105  010EA4  0FEC               	addlw	-20
 10106  010EA6  6ED9               	movwf	fsr2l,c
 10107  010EA8  50E2               	movf	fsr1h,w,c
 10108  010EAA  6EDA               	movwf	fsr2h,c
 10109  010EAC  0EFF               	movlw	255
 10110  010EAE  22DA               	addwfc	fsr2h,f,c
 10111  010EB0  0EF8               	movlw	-8
 10112  010EB2  50E3               	movf	plusw1,w,c
 10113  010EB4  5CDE               	subwf	postinc2,w,c
 10114  010EB6  50DE               	movf	postinc2,w,c
 10115  010EB8  0A80               	xorlw	128
 10116  010EBA  6E35               	movwf	btemp^0,c
 10117  010EBC  0EF9               	movlw	-7
 10118  010EBE  50E3               	movf	plusw1,w,c
 10119  010EC0  0A80               	xorlw	128
 10120  010EC2  5835               	subwfb	btemp^0,w,c
 10121  010EC4  B0D8               	btfsc	status,0,c
 10122  010EC6  D00E               	goto	u8930
 10123                           
 10124                           ;stkvar	_n @ sp[(-56)+32]
 10125  010EC8  0EE9               	movlw	-23
 10126  010ECA  BEE3               	btfsc	plusw1,7,c
 10127  010ECC  D633               	goto	l8973
 10128  010ECE  0EE9               	movlw	-23
 10129  010ED0  50E3               	movf	plusw1,w,c
 10130  010ED2  E108               	bnz	u8930
 10131  010ED4  0EE8               	movlw	-24
 10132  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 10133  010EDC  0E4B               	movlw	75
 10134  010EDE  5E35               	subwf	btemp^0,f,c
 10135  010EE0  A0D8               	btfss	status,0,c
 10136  010EE2  D628               	goto	l8973
 10137  010EE4                     u8930:
 10138                           
 10139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 10140                           ;stkvar	_pp @ sp[(-56)+50]
 10141  010EE4  0EFA               	movlw	-6
 10142  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 10143  010EEC  0EFB               	movlw	-5
 10144  010EEE  50E3               	movf	plusw1,w,c
 10145  010EF0  1035               	iorwf	btemp^0,w,c
 10146  010EF2  B4D8               	btfsc	status,2,c
 10147  010EF4  A822               	btfss	_flags^0,4,c
 10148  010EF6  D021               	goto	l9035
 10149                           
 10150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 10151                           ;stkvar	_n @ sp[(-56)+32]
 10152  010EF8  0EE8               	movlw	-24
 10153  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 10154  010F00  0EE9               	movlw	-23
 10155  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 10156  010F08  0EA8               	movlw	low _dbuf
 10157  010F0A  243F               	addwf	(btemp+10)^0,w,c
 10158  010F0C  6ED9               	movwf	fsr2l,c
 10159  010F0E  0E01               	movlw	high _dbuf
 10160  010F10  2040               	addwfc	(btemp+11)^0,w,c
 10161  010F12  6EDA               	movwf	fsr2h,c
 10162  010F14  0E2E               	movlw	46
 10163  010F16  6EDF               	movwf	indf2,c
 10164                           
 10165                           ;stkvar	_n @ sp[(-56)+32]
 10166  010F18  0EE8               	movlw	-24
 10167  010F1A  50E3               	movf	plusw1,w,c
 10168  010F1C  0F01               	addlw	1
 10169  010F1E  6E35               	movwf	btemp^0,c
 10170  010F20  0EE8               	movlw	-24
 10171  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 10172  010F28  6A35               	clrf	btemp^0,c
 10173  010F2A  0EE9               	movlw	-23
 10174  010F2C  50E3               	movf	plusw1,w,c
 10175  010F2E  2035               	addwfc	btemp^0,w,c
 10176  010F30  6E35               	movwf	btemp^0,c
 10177  010F32  0EE9               	movlw	-23
 10178  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 10179  010F3A                     l9035:
 10180                           
 10181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 10182                           ;stkvar	_n @ sp[(-56)+32]
 10183  010F3A  0EE8               	movlw	-24
 10184  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10185  010F42  0EE9               	movlw	-23
 10186  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 10187  010F4A  0EA8               	movlw	low _dbuf
 10188  010F4C  243F               	addwf	(btemp+10)^0,w,c
 10189  010F4E  6ED9               	movwf	fsr2l,c
 10190  010F50  0E01               	movlw	high _dbuf
 10191  010F52  2040               	addwfc	(btemp+11)^0,w,c
 10192  010F54  6EDA               	movwf	fsr2h,c
 10193  010F56  0E00               	movlw	0
 10194  010F58  6EDF               	movwf	indf2,c
 10195                           
 10196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 10197                           ;stkvar	_nmode @ sp[(-56)+55]
 10198  010F5A  0EFF               	movlw	-1
 10199  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 10200  010F62  0E65               	movlw	101
 10201  010F64  1835               	xorwf	btemp^0,w,c
 10202  010F66  A4D8               	btfss	status,2,c
 10203  010F68  EF16  F081         	goto	l8839
 10204                           
 10205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 10206  010F6C  0E4F               	movlw	79
 10207  010F6E  6E3F               	movwf	(btemp+10)^0,c
 10208  010F70  0E00               	movlw	0
 10209  010F72  6E40               	movwf	(btemp+11)^0,c
 10210                           
 10211                           ;stkvar	_i @ sp[(-56)+36]
 10212  010F74  0EEC               	movlw	-20
 10213  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10214  010F7C  0EED               	movlw	-19
 10215  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 10216                           
 10217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 10218                           ;stkvar	_i @ sp[(-56)+36]
 10219  010F84  0EEC               	movlw	-20
 10220  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 10221  010F8C  0EED               	movlw	-19
 10222  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 10223  010F94  0EA8               	movlw	low _dbuf
 10224  010F96  243F               	addwf	(btemp+10)^0,w,c
 10225  010F98  6ED9               	movwf	fsr2l,c
 10226  010F9A  0E01               	movlw	high _dbuf
 10227  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 10228  010F9E  6EDA               	movwf	fsr2h,c
 10229  010FA0  0E00               	movlw	0
 10230  010FA2  6EDF               	movwf	indf2,c
 10231                           
 10232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 10233                           ;stkvar	_sign @ sp[(-56)+42]
 10234  010FA4  0EF2               	movlw	-14
 10235  010FA6  6AE3               	clrf	plusw1,c
 10236  010FA8  0EF3               	movlw	-13
 10237  010FAA  6AE3               	clrf	plusw1,c
 10238                           
 10239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 10240                           ;stkvar	_e @ sp[(-56)+34]
 10241  010FAC  0EEB               	movlw	-21
 10242  010FAE  AEE3               	btfss	plusw1,7,c
 10243  010FB0  D012               	goto	l9049
 10244                           
 10245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 10246  010FB2  0E01               	movlw	1
 10247  010FB4  6E3F               	movwf	(btemp+10)^0,c
 10248  010FB6  0E00               	movlw	0
 10249  010FB8  6E40               	movwf	(btemp+11)^0,c
 10250                           
 10251                           ;stkvar	_sign @ sp[(-56)+42]
 10252  010FBA  0EF2               	movlw	-14
 10253  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10254  010FC2  0EF3               	movlw	-13
 10255  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 10256                           
 10257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 10258                           ;stkvar	_e @ sp[(-56)+34]
 10259                           ;stkvar	_e @ sp[(-56)+34]
 10260  010FCA  0EEA               	movlw	-22
 10261  010FCC  6CE3               	negf	plusw1,c
 10262  010FCE  0EEB               	movlw	-21
 10263  010FD0  1EE3               	comf	plusw1,f,c
 10264  010FD2  B0D8               	btfsc	status,0,c
 10265  010FD4  2AE3               	incf	plusw1,f,c
 10266  010FD6                     l9049:
 10267                           
 10268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 10269  010FD6  0E02               	movlw	2
 10270  010FD8  6E3F               	movwf	(btemp+10)^0,c
 10271  010FDA  0E00               	movlw	0
 10272  010FDC  6E40               	movwf	(btemp+11)^0,c
 10273                           
 10274                           ;stkvar	_p @ sp[(-56)+40]
 10275  010FDE  0EF0               	movlw	-16
 10276  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10277  010FE6  0EF1               	movlw	-15
 10278  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 10279                           
 10280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 10281  010FEE  D051               	goto	l9061
 10282  010FF0                     l9051:
 10283                           
 10284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 10285                           ;stkvar	_i @ sp[(-56)+36]
 10286  010FF0  50E1               	movf	fsr1l,w,c
 10287  010FF2  0FEC               	addlw	-20
 10288  010FF4  6ED9               	movwf	fsr2l,c
 10289  010FF6  50E2               	movf	fsr1h,w,c
 10290  010FF8  6EDA               	movwf	fsr2h,c
 10291  010FFA  0EFF               	movlw	255
 10292  010FFC  22DA               	addwfc	fsr2h,f,c
 10293  010FFE  06DE               	decf	postinc2,f,c
 10294  011000  0E00               	movlw	0
 10295  011002  5ADD               	subwfb	postdec2,f,c
 10296                           
 10297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 10298                           ;stkvar	_i @ sp[(-56)+36]
 10299  011004  0EEC               	movlw	-20
 10300  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 10301  01100C  0EED               	movlw	-19
 10302  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 10303  011014  0EA8               	movlw	low _dbuf
 10304  011016  243F               	addwf	(btemp+10)^0,w,c
 10305  011018  6ED9               	movwf	fsr2l,c
 10306  01101A  0E01               	movlw	high _dbuf
 10307  01101C  2040               	addwfc	(btemp+11)^0,w,c
 10308  01101E  6EDA               	movwf	fsr2h,c
 10309  011020  0E0A               	movlw	10
 10310  011022  6EE6               	movwf	postinc1,c
 10311  011024  0E00               	movlw	0
 10312  011026  6EE6               	movwf	postinc1,c
 10313                           
 10314                           ;stkvar	_e @ sp[(-58)+34]
 10315  011028  0EE8               	movlw	-24
 10316  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 10317  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 10318  011036  EC2A  F0AF         	call	___awmod	;wreg free
 10319  01103A  5035               	movf	btemp^0,w,c
 10320  01103C  0F30               	addlw	48
 10321  01103E  6EDF               	movwf	indf2,c
 10322                           
 10323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 10324  011040  0E0A               	movlw	10
 10325  011042  6EE6               	movwf	postinc1,c
 10326  011044  0E00               	movlw	0
 10327  011046  6EE6               	movwf	postinc1,c
 10328                           
 10329                           ;stkvar	_e @ sp[(-58)+34]
 10330  011048  0EE8               	movlw	-24
 10331  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 10332  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 10333  011056  EC5A  F0AD         	call	___awdiv	;wreg free
 10334                           
 10335                           ;stkvar	_e @ sp[(-56)+34]
 10336  01105A  0EEA               	movlw	-22
 10337  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10338  011062  0EEB               	movlw	-21
 10339  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10340                           
 10341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 10342                           ;stkvar	_p @ sp[(-56)+40]
 10343  01106A  50E1               	movf	fsr1l,w,c
 10344  01106C  0FF0               	addlw	-16
 10345  01106E  6ED9               	movwf	fsr2l,c
 10346  011070  50E2               	movf	fsr1h,w,c
 10347  011072  6EDA               	movwf	fsr2h,c
 10348  011074  0EFF               	movlw	255
 10349  011076  22DA               	addwfc	fsr2h,f,c
 10350  011078  06DE               	decf	postinc2,f,c
 10351  01107A  0E00               	movlw	0
 10352  01107C  5ADD               	subwfb	postdec2,f,c
 10353                           
 10354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 10355                           ;stkvar	_w @ sp[(-56)+38]
 10356  01107E  50E1               	movf	fsr1l,w,c
 10357  011080  0FEE               	addlw	-18
 10358  011082  6ED9               	movwf	fsr2l,c
 10359  011084  50E2               	movf	fsr1h,w,c
 10360  011086  6EDA               	movwf	fsr2h,c
 10361  011088  0EFF               	movlw	255
 10362  01108A  22DA               	addwfc	fsr2h,f,c
 10363  01108C  06DE               	decf	postinc2,f,c
 10364  01108E  0E00               	movlw	0
 10365  011090  5ADD               	subwfb	postdec2,f,c
 10366  011092                     l9061:
 10367                           
 10368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 10369                           ;stkvar	_e @ sp[(-56)+34]
 10370  011092  0EEA               	movlw	-22
 10371  011094  006F FF8C  F035    	movff	plusw1,btemp
 10372  01109A  0EEB               	movlw	-21
 10373  01109C  50E3               	movf	plusw1,w,c
 10374  01109E  1035               	iorwf	btemp^0,w,c
 10375  0110A0  A4D8               	btfss	status,2,c
 10376  0110A2  D7A6               	goto	l9051
 10377                           
 10378                           ;stkvar	_p @ sp[(-56)+40]
 10379  0110A4  0EF1               	movlw	-15
 10380  0110A6  BEE3               	btfsc	plusw1,7,c
 10381  0110A8  D007               	goto	u8990
 10382  0110AA  0EF1               	movlw	-15
 10383  0110AC  50E3               	movf	plusw1,w,c
 10384  0110AE  E1A0               	bnz	l9051
 10385  0110B0  0EF0               	movlw	-16
 10386  0110B2  04E3               	decf	plusw1,w,c
 10387  0110B4  B0D8               	btfsc	status,0,c
 10388  0110B6  D79C               	goto	l9051
 10389  0110B8                     u8990:
 10390                           
 10391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 10392                           ;stkvar	_i @ sp[(-56)+36]
 10393  0110B8  50E1               	movf	fsr1l,w,c
 10394  0110BA  0FEC               	addlw	-20
 10395  0110BC  6ED9               	movwf	fsr2l,c
 10396  0110BE  50E2               	movf	fsr1h,w,c
 10397  0110C0  6EDA               	movwf	fsr2h,c
 10398  0110C2  0EFF               	movlw	255
 10399  0110C4  22DA               	addwfc	fsr2h,f,c
 10400  0110C6  06DE               	decf	postinc2,f,c
 10401  0110C8  0E00               	movlw	0
 10402  0110CA  5ADD               	subwfb	postdec2,f,c
 10403                           
 10404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 10405                           ;stkvar	_sign @ sp[(-56)+42]
 10406  0110CC  0EF2               	movlw	-14
 10407  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 10408  0110D4  0EF3               	movlw	-13
 10409  0110D6  50E3               	movf	plusw1,w,c
 10410  0110D8  1035               	iorwf	btemp^0,w,c
 10411  0110DA  A4D8               	btfss	status,2,c
 10412  0110DC  D002               	goto	l9071
 10413  0110DE  0E2B               	movlw	43
 10414  0110E0  D001               	goto	L6
 10415  0110E2                     l9071:
 10416  0110E2  0E2D               	movlw	45
 10417  0110E4                     L6:
 10418  0110E4  6E3F               	movwf	(btemp+10)^0,c
 10419  0110E6  0E00               	movlw	0
 10420  0110E8  6E40               	movwf	(btemp+11)^0,c
 10421                           
 10422                           ;stkvar	_efgtoa$4081 @ sp[(-56)+4]
 10423  0110EA  0ECC               	movlw	-52
 10424  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10425  0110F2  0ECD               	movlw	-51
 10426  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 10427                           
 10428                           ;stkvar	_efgtoa$4081 @ sp[(-56)+4]
 10429                           ;stkvar	_i @ sp[(-56)+36]
 10430  0110FA  0EEC               	movlw	-20
 10431  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10432  011102  0EED               	movlw	-19
 10433  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 10434  01110A  0EA8               	movlw	low _dbuf
 10435  01110C  243F               	addwf	(btemp+10)^0,w,c
 10436  01110E  6ED9               	movwf	fsr2l,c
 10437  011110  0E01               	movlw	high _dbuf
 10438  011112  2040               	addwfc	(btemp+11)^0,w,c
 10439  011114  6EDA               	movwf	fsr2h,c
 10440  011116  0ECC               	movlw	-52
 10441  011118  006F FF8F FFDF     	movff	plusw1,indf2
 10442                           
 10443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 10444                           ;stkvar	_w @ sp[(-56)+38]
 10445  01111E  50E1               	movf	fsr1l,w,c
 10446  011120  0FEE               	addlw	-18
 10447  011122  6ED9               	movwf	fsr2l,c
 10448  011124  50E2               	movf	fsr1h,w,c
 10449  011126  6EDA               	movwf	fsr2h,c
 10450  011128  0EFF               	movlw	255
 10451  01112A  22DA               	addwfc	fsr2h,f,c
 10452  01112C  06DE               	decf	postinc2,f,c
 10453  01112E  0E00               	movlw	0
 10454  011130  5ADD               	subwfb	postdec2,f,c
 10455                           
 10456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10457                           ;stkvar	_i @ sp[(-56)+36]
 10458  011132  50E1               	movf	fsr1l,w,c
 10459  011134  0FEC               	addlw	-20
 10460  011136  6ED9               	movwf	fsr2l,c
 10461  011138  50E2               	movf	fsr1h,w,c
 10462  01113A  6EDA               	movwf	fsr2h,c
 10463  01113C  0EFF               	movlw	255
 10464  01113E  22DA               	addwfc	fsr2h,f,c
 10465  011140  06DE               	decf	postinc2,f,c
 10466  011142  0E00               	movlw	0
 10467  011144  5ADD               	subwfb	postdec2,f,c
 10468  011146  0EBF               	movlw	191
 10469  011148  6E3F               	movwf	(btemp+10)^0,c
 10470  01114A  0EFF               	movlw	255
 10471  01114C  6E40               	movwf	(btemp+11)^0,c
 10472                           
 10473                           ;stkvar	_c @ sp[(-56)+-7]
 10474  01114E  0EC1               	movlw	-63
 10475  011150  50E3               	movf	plusw1,w,c
 10476  011152  6E3D               	movwf	(btemp+8)^0,c
 10477  011154  6A3E               	clrf	(btemp+9)^0,c
 10478  011156  503F               	movf	(btemp+10)^0,w,c
 10479  011158  263D               	addwf	(btemp+8)^0,f,c
 10480  01115A  5040               	movf	(btemp+11)^0,w,c
 10481  01115C  223E               	addwfc	(btemp+9)^0,f,c
 10482  01115E  503E               	movf	(btemp+9)^0,w,c
 10483  011160  E106               	bnz	u9010
 10484  011162  0E1A               	movlw	26
 10485  011164  5C3D               	subwf	(btemp+8)^0,w,c
 10486  011166  B0D8               	btfsc	status,0,c
 10487  011168  D002               	goto	u9010
 10488  01116A  0E01               	movlw	1
 10489  01116C  D001               	goto	u9020
 10490  01116E                     u9010:
 10491  01116E  0E00               	movlw	0
 10492  011170                     u9020:
 10493  011170  6E3F               	movwf	(btemp+10)^0,c
 10494  011172  6A40               	clrf	(btemp+11)^0,c
 10495                           
 10496                           ;stkvar	_efgtoa$4083 @ sp[(-56)+0]
 10497  011174  0EC8               	movlw	-56
 10498  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10499  01117C  0EC9               	movlw	-55
 10500  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 10501                           
 10502                           ;stkvar	_efgtoa$4083 @ sp[(-56)+0]
 10503  011184  0EC8               	movlw	-56
 10504  011186  006F FF8C  F035    	movff	plusw1,btemp
 10505  01118C  0EC9               	movlw	-55
 10506  01118E  50E3               	movf	plusw1,w,c
 10507  011190  1035               	iorwf	btemp^0,w,c
 10508  011192  A4D8               	btfss	status,2,c
 10509  011194  D002               	goto	l9087
 10510  011196  0E65               	movlw	101
 10511  011198  D001               	goto	L7
 10512  01119A                     l9087:
 10513  01119A  0E45               	movlw	69
 10514  01119C                     L7:
 10515  01119C  6E3F               	movwf	(btemp+10)^0,c
 10516  01119E  0E00               	movlw	0
 10517  0111A0  6E40               	movwf	(btemp+11)^0,c
 10518                           
 10519                           ;stkvar	_efgtoa$4082 @ sp[(-56)+2]
 10520  0111A2  0ECA               	movlw	-54
 10521  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10522  0111AA  0ECB               	movlw	-53
 10523  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10524                           
 10525                           ;stkvar	_efgtoa$4082 @ sp[(-56)+2]
 10526                           ;stkvar	_i @ sp[(-56)+36]
 10527  0111B2  0EEC               	movlw	-20
 10528  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 10529  0111BA  0EED               	movlw	-19
 10530  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 10531  0111C2  0EA8               	movlw	low _dbuf
 10532  0111C4  243F               	addwf	(btemp+10)^0,w,c
 10533  0111C6  6ED9               	movwf	fsr2l,c
 10534  0111C8  0E01               	movlw	high _dbuf
 10535  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 10536  0111CC  6EDA               	movwf	fsr2h,c
 10537  0111CE  0ECA               	movlw	-54
 10538  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 10539                           
 10540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 10541                           ;stkvar	_w @ sp[(-56)+38]
 10542  0111D6  50E1               	movf	fsr1l,w,c
 10543  0111D8  0FEE               	addlw	-18
 10544  0111DA  6ED9               	movwf	fsr2l,c
 10545  0111DC  50E2               	movf	fsr1h,w,c
 10546  0111DE  6EDA               	movwf	fsr2h,c
 10547  0111E0  0EFF               	movlw	255
 10548  0111E2  22DA               	addwfc	fsr2h,f,c
 10549  0111E4  06DE               	decf	postinc2,f,c
 10550  0111E6  0E00               	movlw	0
 10551  0111E8  5ADD               	subwfb	postdec2,f,c
 10552                           
 10553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 10554                           ;stkvar	_i @ sp[(-56)+36]
 10555  0111EA  0EEC               	movlw	-20
 10556  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10557  0111F2  0EED               	movlw	-19
 10558  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 10559  0111FA  0EA8               	movlw	low _dbuf
 10560  0111FC  243F               	addwf	(btemp+10)^0,w,c
 10561  0111FE  6E3D               	movwf	(btemp+8)^0,c
 10562  011200  0E01               	movlw	high _dbuf
 10563  011202  2040               	addwfc	(btemp+11)^0,w,c
 10564  011204  6E3E               	movwf	(btemp+9)^0,c
 10565  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 10566  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 10567                           
 10568                           ;stkvar	_n @ sp[(-58)+32]
 10569  011212  0EA8               	movlw	low _dbuf
 10570  011214  6E3F               	movwf	(btemp+10)^0,c
 10571  011216  0E01               	movlw	high _dbuf
 10572  011218  6E40               	movwf	(btemp+11)^0,c
 10573  01121A  0EE6               	movlw	-26
 10574  01121C  50E3               	movf	plusw1,w,c
 10575  01121E  263F               	addwf	(btemp+10)^0,f,c
 10576  011220  0EE7               	movlw	-25
 10577  011222  50E3               	movf	plusw1,w,c
 10578  011224  2240               	addwfc	(btemp+11)^0,f,c
 10579  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 10580  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 10581  011232  ECC1  F0B1         	call	_strcpy	;wreg free
 10582  011236  EF16  F081         	goto	l8839
 10583  01123A                     l1759:
 10584                           
 10585                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 10586  01123A  0EC1               	movlw	193
 10587  01123C  26E1               	addwf	fsr1l,f,c
 10588  01123E  0EFF               	movlw	255
 10589  011240  22E2               	addwfc	fsr1h,f,c
 10590  011242  0012               	return		;funcret
 10591  011244                     __end_of_efgtoa:
 10592                           	opt callstack 0
 10593                           
 10594 ;; *************** function _tolower *****************
 10595 ;; Defined at:
 10596 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 10597 ;; Parameters:    Size  Location     Type
 10598 ;;  c               2  [STACK] int 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;		None
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  2  [STACK] int 
 10603 ;; Registers used:
 10604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10605 ;; Tracked objects:
 10606 ;;		On entry : 0/4
 10607 ;;		On exit  : 0/0
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10614 ;;Total ram usage:        0 bytes
 10615 ;; Hardware stack levels used:    1
 10616 ;; Hardware stack levels required when called:    7
 10617 ;; This function calls:
 10618 ;;		_isupper
 10619 ;; This function is called by:
 10620 ;;		_efgtoa
 10621 ;;		_vfpfcnvrt
 10622 ;; This function uses a reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text37
 10626  016C94                     __ptext37:
 10627                           	opt callstack 0
 10628  016C94                     _tolower:
 10629                           	opt callstack 0
 10630                           
 10631                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10632  016C94  52E6               	movf	postinc1,f,c
 10633  016C96  52E6               	movf	postinc1,f,c
 10634                           
 10635                           ;stkvar	_c @ sp[(-2)+-2]
 10636                           
 10637                           ;incstack = 0
 10638  016C98  0EFC               	movlw	-4
 10639  016C9A  50E3               	movf	plusw1,w,c
 10640  016C9C  0FBF               	addlw	191
 10641  016C9E  6E3F               	movwf	(btemp+10)^0,c
 10642  016CA0  0EFD               	movlw	-3
 10643  016CA2  006F FF8C  F040    	movff	plusw1,btemp+11
 10644  016CA8  0EFF               	movlw	255
 10645  016CAA  2240               	addwfc	(btemp+11)^0,f,c
 10646  016CAC  5040               	movf	(btemp+11)^0,w,c
 10647  016CAE  E106               	bnz	u4830
 10648  016CB0  0E1A               	movlw	26
 10649  016CB2  5C3F               	subwf	(btemp+10)^0,w,c
 10650  016CB4  B0D8               	btfsc	status,0,c
 10651  016CB6  D002               	goto	u4830
 10652  016CB8  0E01               	movlw	1
 10653  016CBA  D001               	goto	u4840
 10654  016CBC                     u4830:
 10655  016CBC  0E00               	movlw	0
 10656  016CBE                     u4840:
 10657  016CBE  6E3F               	movwf	(btemp+10)^0,c
 10658  016CC0  6A40               	clrf	(btemp+11)^0,c
 10659                           
 10660                           ;stkvar	_tolower$4741 @ sp[(-2)+0]
 10661  016CC2  0EFE               	movlw	-2
 10662  016CC4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10663  016CCA  0EFF               	movlw	-1
 10664  016CCC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10665                           
 10666                           ;stkvar	_tolower$4741 @ sp[(-2)+0]
 10667  016CD2  0EFE               	movlw	-2
 10668  016CD4  006F FF8C  F035    	movff	plusw1,btemp
 10669  016CDA  0EFF               	movlw	-1
 10670  016CDC  50E3               	movf	plusw1,w,c
 10671  016CDE  1035               	iorwf	btemp^0,w,c
 10672  016CE0  B4D8               	btfsc	status,2,c
 10673  016CE2  D00D               	goto	l6095
 10674                           
 10675                           ;stkvar	_c @ sp[(-2)+-2]
 10676  016CE4  0EFC               	movlw	-4
 10677  016CE6  006F FF8C  F035    	movff	plusw1,btemp
 10678  016CEC  0EFD               	movlw	-3
 10679  016CEE  006F FF8C  F036    	movff	plusw1,btemp+1
 10680  016CF4  0E20               	movlw	32
 10681  016CF6  1235               	iorwf	btemp^0,f,c
 10682  016CF8  0E00               	movlw	0
 10683  016CFA  1236               	iorwf	(btemp+1)^0,f,c
 10684  016CFC  D008               	goto	l2779
 10685  016CFE                     l6095:
 10686                           
 10687                           ;stkvar	_c @ sp[(-2)+-2]
 10688  016CFE  0EFC               	movlw	-4
 10689  016D00  006F FF8C  F035    	movff	plusw1,btemp
 10690  016D06  0EFD               	movlw	-3
 10691  016D08  006F FF8C  F036    	movff	plusw1,btemp+1
 10692  016D0E                     l2779:
 10693                           
 10694                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10695  016D0E  52E5               	movf	postdec1,f,c
 10696  016D10  52E5               	movf	postdec1,f,c
 10697  016D12  52E5               	movf	postdec1,f,c
 10698  016D14  52E5               	movf	postdec1,f,c
 10699  016D16  0012               	return		;funcret
 10700  016D18                     __end_of_tolower:
 10701                           	opt callstack 0
 10702                           
 10703 ;; *************** function _isupper *****************
 10704 ;; Defined at:
 10705 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  c               2  [STACK] int 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;		None
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  2  [STACK] int 
 10712 ;; Registers used:
 10713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10723 ;;Total ram usage:        0 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:    6
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_efgtoa
 10730 ;;		_xtoa
 10731 ;;		_vfpfcnvrt
 10732 ;;		_tolower
 10733 ;; This function uses a reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text38
 10737  017614                     __ptext38:
 10738                           	opt callstack 0
 10739  017614                     _isupper:
 10740                           	opt callstack 17
 10741                           
 10742                           ;stkvar	_c @ sp[(0)+-2]
 10743                           
 10744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10745                           ;incstack = 0
 10746  017614  0EFE               	movlw	-2
 10747  017616  50E3               	movf	plusw1,w,c
 10748  017618  0FBF               	addlw	191
 10749  01761A  6E3F               	movwf	(btemp+10)^0,c
 10750  01761C  0EFF               	movlw	-1
 10751  01761E  006F FF8C  F040    	movff	plusw1,btemp+11
 10752  017624  0EFF               	movlw	255
 10753  017626  2240               	addwfc	(btemp+11)^0,f,c
 10754  017628  5040               	movf	(btemp+11)^0,w,c
 10755  01762A  E106               	bnz	u4230
 10756  01762C  0E1A               	movlw	26
 10757  01762E  5C3F               	subwf	(btemp+10)^0,w,c
 10758  017630  B0D8               	btfsc	status,0,c
 10759  017632  D002               	goto	u4230
 10760  017634  0E01               	movlw	1
 10761  017636  D001               	goto	u4240
 10762  017638                     u4230:
 10763  017638  0E00               	movlw	0
 10764  01763A                     u4240:
 10765  01763A  6E35               	movwf	btemp^0,c
 10766  01763C  6A36               	clrf	(btemp+1)^0,c
 10767                           
 10768                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10769  01763E  52E5               	movf	postdec1,f,c
 10770  017640  52E5               	movf	postdec1,f,c
 10771  017642  0012               	return		;funcret
 10772  017644                     __end_of_isupper:
 10773                           	opt callstack 0
 10774                           
 10775 ;; *************** function _strcpy *****************
 10776 ;; Defined at:
 10777 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  dest            2  [STACK] PTR unsigned char 
 10780 ;;		 -> dbuf(80), 
 10781 ;;  src             2  [STACK] PTR const unsigned char 
 10782 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 10783 ;;		 -> dbuf(80), 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  d               2  [STACK] PTR unsigned char 
 10786 ;;		 -> dbuf(80), 
 10787 ;;  s               2  [STACK] PTR const unsigned char 
 10788 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 10789 ;;		 -> dbuf(80), 
 10790 ;; Return value:  Size  Location     Type
 10791 ;;                  2  [STACK] PTR unsigned char 
 10792 ;; Registers used:
 10793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/4
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10803 ;;Total ram usage:        0 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:    6
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_efgtoa
 10810 ;; This function uses a reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text39
 10814  016382                     __ptext39:
 10815                           	opt callstack 0
 10816  016382                     _strcpy:
 10817                           	opt callstack 0
 10818                           
 10819                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10820  016382  52E6               	movf	postinc1,f,c
 10821  016384  52E6               	movf	postinc1,f,c
 10822  016386  52E6               	movf	postinc1,f,c
 10823  016388  52E6               	movf	postinc1,f,c
 10824                           
 10825                           ;stkvar	_src @ sp[(-4)+-4]
 10826                           
 10827                           ;incstack = 0
 10828  01638A  0EF8               	movlw	-8
 10829  01638C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10830  016392  0EF9               	movlw	-7
 10831  016394  006F FF8C  F040    	movff	plusw1,btemp+11
 10832                           
 10833                           ;stkvar	_s @ sp[(-4)+2]
 10834  01639A  0EFF               	movlw	-1
 10835  01639C  0060  F103  FFE3   	movff	btemp+11,plusw1
 10836  0163A2  0EFE               	movlw	-2
 10837  0163A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10838                           
 10839                           ;stkvar	_dest @ sp[(-4)+-2]
 10840  0163AA  0EFA               	movlw	-6
 10841  0163AC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10842  0163B2  0EFB               	movlw	-5
 10843  0163B4  006F FF8C  F040    	movff	plusw1,btemp+11
 10844                           
 10845                           ;stkvar	_d @ sp[(-4)+0]
 10846  0163BA  0EFD               	movlw	-3
 10847  0163BC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10848  0163C2  0EFC               	movlw	-4
 10849  0163C4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10850  0163CA                     l8713:
 10851                           
 10852                           ;stkvar	_s @ sp[(-4)+2]
 10853  0163CA  50E1               	movf	fsr1l,w,c
 10854  0163CC  0FFE               	addlw	-2
 10855  0163CE  6ED9               	movwf	fsr2l,c
 10856  0163D0  50E2               	movf	fsr1h,w,c
 10857  0163D2  6EDA               	movwf	fsr2h,c
 10858  0163D4  0EFF               	movlw	255
 10859  0163D6  22DA               	addwfc	fsr2h,f,c
 10860  0163D8  006F FF7C  F03F    	movff	indf2,btemp+10
 10861  0163DE  0E01               	movlw	1
 10862  0163E0  26DE               	addwf	postinc2,f,c
 10863  0163E2  006F FF7C  F040    	movff	indf2,btemp+11
 10864  0163E8  0E00               	movlw	0
 10865  0163EA  22DD               	addwfc	postdec2,f,c
 10866  0163EC  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 10867  0163F2  0060  F103  FFF7   	movff	btemp+11,tblptrh
 10868  0163F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10869  0163FA  6EF8               	movwf	tblptru,c
 10870                           
 10871                           ;stkvar	_d @ sp[(-4)+0]
 10872  0163FC  50E1               	movf	fsr1l,w,c
 10873  0163FE  0FFC               	addlw	-4
 10874  016400  6ED9               	movwf	fsr2l,c
 10875  016402  50E2               	movf	fsr1h,w,c
 10876  016404  6EDA               	movwf	fsr2h,c
 10877  016406  0EFF               	movlw	255
 10878  016408  22DA               	addwfc	fsr2h,f,c
 10879  01640A  006F FF7C  F03F    	movff	indf2,btemp+10
 10880  016410  0E01               	movlw	1
 10881  016412  26DE               	addwf	postinc2,f,c
 10882  016414  006F FF7C  F040    	movff	indf2,btemp+11
 10883  01641A  0E00               	movlw	0
 10884  01641C  22DD               	addwfc	postdec2,f,c
 10885  01641E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 10886  016424  0060  F103  FFDA   	movff	btemp+11,fsr2h
 10887  01642A  0E1F               	movlw	(high __ramtop+-1)
 10888  01642C  64F7               	cpfsgt	tblptrh,c
 10889  01642E  D003               	bra	u8327
 10890  016430  0008               	tblrd		*
 10891  016432  50F5               	movf	tablat,w,c
 10892  016434  D007               	bra	u8320
 10893  016436                     u8327:
 10894  016436  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10895  01643C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10896  016442  50EF               	movf	indf0,w,c
 10897  016444                     u8320:
 10898  016444  6EDF               	movwf	indf2,c
 10899  016446  50DF               	movf	indf2,w,c
 10900  016448  A4D8               	btfss	status,2,c
 10901  01644A  D7BF               	goto	l8713
 10902                           
 10903                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 10904  01644C  0EF8               	movlw	248
 10905  01644E  26E1               	addwf	fsr1l,f,c
 10906  016450  0EFF               	movlw	255
 10907  016452  22E2               	addwfc	fsr1h,f,c
 10908  016454  0012               	return		;funcret
 10909  016456                     __end_of_strcpy:
 10910                           	opt callstack 0
 10911                           
 10912 ;; *************** function _floorf *****************
 10913 ;; Defined at:
 10914 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  x               4  [STACK] float 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;  u               4  [STACK] struct .
 10919 ;;  m               4  [STACK] unsigned long 
 10920 ;;  e               2  [STACK] int 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  4  [STACK] float 
 10923 ;; Registers used:
 10924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/4
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10934 ;;Total ram usage:        0 bytes
 10935 ;; Hardware stack levels used:    1
 10936 ;; Hardware stack levels required when called:    6
 10937 ;; This function calls:
 10938 ;;		Nothing
 10939 ;; This function is called by:
 10940 ;;		_efgtoa
 10941 ;; This function uses a reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text40
 10945  014022                     __ptext40:
 10946                           	opt callstack 0
 10947  014022                     _floorf:
 10948                           	opt callstack 0
 10949                           
 10950                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10951  014022  0E0A               	movlw	10
 10952  014024  26E1               	addwf	fsr1l,f,c
 10953  014026  0E00               	movlw	0
 10954  014028  22E2               	addwfc	fsr1h,f,c
 10955                           
 10956                           ;incstack = 0
 10957  01402A  0060  F298  F03D   	movff	floorf@F524,btemp+8
 10958  014030  0060  F29C  F03E   	movff	floorf@F524+1,btemp+9
 10959  014036  0060  F2A0  F03F   	movff	floorf@F524+2,btemp+10
 10960  01403C  0060  F2A4  F040   	movff	floorf@F524+3,btemp+11
 10961                           
 10962                           ;stkvar	_u @ sp[(-10)+0]
 10963  014042  0EF6               	movlw	-10
 10964  014044  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10965  01404A  0EF7               	movlw	-9
 10966  01404C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10967  014052  0EF8               	movlw	-8
 10968  014054  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10969  01405A  0EF9               	movlw	-7
 10970  01405C  0060  F103  FFE3   	movff	btemp+11,plusw1
 10971                           
 10972                           ;stkvar	_x @ sp[(-10)+-4]
 10973  014062  0EF2               	movlw	-14
 10974  014064  006F FF8C  F03D    	movff	plusw1,btemp+8
 10975  01406A  0EF3               	movlw	-13
 10976  01406C  006F FF8C  F03E    	movff	plusw1,btemp+9
 10977  014072  0EF4               	movlw	-12
 10978  014074  006F FF8C  F03F    	movff	plusw1,btemp+10
 10979  01407A  0EF5               	movlw	-11
 10980  01407C  006F FF8C  F040    	movff	plusw1,btemp+11
 10981                           
 10982                           ;stkvar	_u @ sp[(-10)+0]
 10983  014082  0EF6               	movlw	-10
 10984  014084  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10985  01408A  0EF7               	movlw	-9
 10986  01408C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10987  014092  0EF8               	movlw	-8
 10988  014094  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10989  01409A  0EF9               	movlw	-7
 10990  01409C  0060  F103  FFE3   	movff	btemp+11,plusw1
 10991  0140A2  0E81               	movlw	129
 10992  0140A4  6E3F               	movwf	(btemp+10)^0,c
 10993  0140A6  0EFF               	movlw	255
 10994  0140A8  6E40               	movwf	(btemp+11)^0,c
 10995                           
 10996                           ;stkvar	_u @ sp[(-10)+0]
 10997  0140AA  0EF6               	movlw	-10
 10998  0140AC  006F FF8C  F039    	movff	plusw1,btemp+4
 10999  0140B2  0EF7               	movlw	-9
 11000  0140B4  006F FF8C  F03A    	movff	plusw1,btemp+5
 11001  0140BA  0EF8               	movlw	-8
 11002  0140BC  006F FF8C  F03B    	movff	plusw1,btemp+6
 11003  0140C2  0EF9               	movlw	-7
 11004  0140C4  006F FF8C  F03C    	movff	plusw1,btemp+7
 11005  0140CA  0E18               	movlw	24
 11006  0140CC  D005               	goto	u4860
 11007  0140CE                     u4865:
 11008  0140CE  90D8               	bcf	status,0,c
 11009  0140D0  323C               	rrcf	(btemp+7)^0,f,c
 11010  0140D2  323B               	rrcf	(btemp+6)^0,f,c
 11011  0140D4  323A               	rrcf	(btemp+5)^0,f,c
 11012  0140D6  3239               	rrcf	(btemp+4)^0,f,c
 11013  0140D8                     u4860:
 11014  0140D8  2EE8               	decfsz	wreg,f,c
 11015  0140DA  D7F9               	goto	u4865
 11016  0140DC  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 11017  0140E2  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 11018  0140E8  0EFF               	movlw	255
 11019  0140EA  163D               	andwf	(btemp+8)^0,f,c
 11020  0140EC  0E00               	movlw	0
 11021  0140EE  163E               	andwf	(btemp+9)^0,f,c
 11022  0140F0  503F               	movf	(btemp+10)^0,w,c
 11023  0140F2  263D               	addwf	(btemp+8)^0,f,c
 11024  0140F4  5040               	movf	(btemp+11)^0,w,c
 11025  0140F6  223E               	addwfc	(btemp+9)^0,f,c
 11026                           
 11027                           ;stkvar	_e @ sp[(-10)+8]
 11028  0140F8  0EFE               	movlw	-2
 11029  0140FA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11030  014100  0EFF               	movlw	-1
 11031  014102  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11032                           
 11033                           ;stkvar	_e @ sp[(-10)+8]
 11034  014108  0EFF               	movlw	-1
 11035  01410A  BEE3               	btfsc	plusw1,7,c
 11036  01410C  D019               	goto	l6109
 11037  01410E  0EFF               	movlw	-1
 11038  014110  50E3               	movf	plusw1,w,c
 11039  014112  E108               	bnz	u4870
 11040  014114  0EFE               	movlw	-2
 11041  014116  006F FF8C  F035    	movff	plusw1,btemp
 11042  01411C  0E17               	movlw	23
 11043  01411E  5E35               	subwf	btemp^0,f,c
 11044  014120  A0D8               	btfss	status,0,c
 11045  014122  D00E               	goto	l6109
 11046  014124                     u4870:
 11047                           
 11048                           ;stkvar	_x @ sp[(-10)+-4]
 11049  014124  0EF2               	movlw	-14
 11050  014126  006F FF8C  F035    	movff	plusw1,btemp
 11051  01412C  0EF3               	movlw	-13
 11052  01412E  006F FF8C  F036    	movff	plusw1,btemp+1
 11053  014134  0EF4               	movlw	-12
 11054  014136  006F FF8C  F037    	movff	plusw1,btemp+2
 11055  01413C  0EF5               	movlw	-11
 11056  01413E  D11F               	goto	L8
 11057  014140                     l6109:
 11058                           
 11059                           ;stkvar	_e @ sp[(-10)+8]
 11060  014140  0EFF               	movlw	-1
 11061  014142  BEE3               	btfsc	plusw1,7,c
 11062  014144  D0B4               	goto	l6125
 11063                           
 11064                           ;stkvar	_e @ sp[(-10)+8]
 11065  014146  0EFE               	movlw	-2
 11066  014148  006F FF8C  F040    	movff	plusw1,btemp+11
 11067  01414E  0EFF               	movlw	255
 11068  014150  6E39               	movwf	(btemp+4)^0,c
 11069  014152  0EFF               	movlw	255
 11070  014154  6E3A               	movwf	(btemp+5)^0,c
 11071  014156  0E7F               	movlw	127
 11072  014158  6E3B               	movwf	(btemp+6)^0,c
 11073  01415A  0E00               	movlw	0
 11074  01415C  6E3C               	movwf	(btemp+7)^0,c
 11075  01415E                     u4895:
 11076  01415E  6640               	tstfsz	(btemp+11)^0,c
 11077  014160  D001               	goto	u4896
 11078  014162  D007               	goto	u4897
 11079  014164                     u4896:
 11080  014164  343C               	rlcf	(btemp+7)^0,w,c
 11081  014166  323C               	rrcf	(btemp+7)^0,f,c
 11082  014168  323B               	rrcf	(btemp+6)^0,f,c
 11083  01416A  323A               	rrcf	(btemp+5)^0,f,c
 11084  01416C  3239               	rrcf	(btemp+4)^0,f,c
 11085  01416E  2E40               	decfsz	(btemp+11)^0,f,c
 11086  014170  D7F6               	goto	u4895
 11087  014172                     u4897:
 11088                           
 11089                           ;stkvar	_m @ sp[(-10)+4]
 11090  014172  0EFA               	movlw	-6
 11091  014174  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 11092  01417A  0EFB               	movlw	-5
 11093  01417C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 11094  014182  0EFC               	movlw	-4
 11095  014184  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 11096  01418A  0EFD               	movlw	-3
 11097  01418C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 11098                           
 11099                           ;stkvar	_m @ sp[(-10)+4]
 11100                           ;stkvar	_u @ sp[(-10)+0]
 11101  014192  0EF6               	movlw	-10
 11102  014194  006F FF8C  F03D    	movff	plusw1,btemp+8
 11103  01419A  0EF7               	movlw	-9
 11104  01419C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11105  0141A2  0EF8               	movlw	-8
 11106  0141A4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11107  0141AA  0EF9               	movlw	-7
 11108  0141AC  006F FF8C  F040    	movff	plusw1,btemp+11
 11109  0141B2  0EFA               	movlw	-6
 11110  0141B4  50E3               	movf	plusw1,w,c
 11111  0141B6  163D               	andwf	(btemp+8)^0,f,c
 11112  0141B8  0EFB               	movlw	-5
 11113  0141BA  50E3               	movf	plusw1,w,c
 11114  0141BC  163E               	andwf	(btemp+9)^0,f,c
 11115  0141BE  0EFC               	movlw	-4
 11116  0141C0  50E3               	movf	plusw1,w,c
 11117  0141C2  163F               	andwf	(btemp+10)^0,f,c
 11118  0141C4  0EFD               	movlw	-3
 11119  0141C6  50E3               	movf	plusw1,w,c
 11120  0141C8  1640               	andwf	(btemp+11)^0,f,c
 11121  0141CA  503D               	movf	(btemp+8)^0,w,c
 11122  0141CC  103E               	iorwf	(btemp+9)^0,w,c
 11123  0141CE  103F               	iorwf	(btemp+10)^0,w,c
 11124  0141D0  1040               	iorwf	(btemp+11)^0,w,c
 11125  0141D2  B4D8               	btfsc	status,2,c
 11126  0141D4  D7A7               	goto	u4870
 11127                           
 11128                           ;stkvar	_u @ sp[(-10)+0]
 11129  0141D6  0EF6               	movlw	-10
 11130  0141D8  006F FF8C  F03D    	movff	plusw1,btemp+8
 11131  0141DE  0EF7               	movlw	-9
 11132  0141E0  006F FF8C  F03E    	movff	plusw1,btemp+9
 11133  0141E6  0EF8               	movlw	-8
 11134  0141E8  006F FF8C  F03F    	movff	plusw1,btemp+10
 11135  0141EE  0EF9               	movlw	-7
 11136  0141F0  006F FF8C  F040    	movff	plusw1,btemp+11
 11137  0141F6  0E20               	movlw	32
 11138  0141F8  D005               	goto	u4910
 11139  0141FA                     u4915:
 11140  0141FA  90D8               	bcf	status,0,c
 11141  0141FC  3240               	rrcf	(btemp+11)^0,f,c
 11142  0141FE  323F               	rrcf	(btemp+10)^0,f,c
 11143  014200  323E               	rrcf	(btemp+9)^0,f,c
 11144  014202  323D               	rrcf	(btemp+8)^0,f,c
 11145  014204                     u4910:
 11146  014204  2EE8               	decfsz	wreg,f,c
 11147  014206  D7F9               	goto	u4915
 11148  014208  503D               	movf	(btemp+8)^0,w,c
 11149  01420A  B4D8               	btfsc	status,2,c
 11150  01420C  D028               	goto	l6123
 11151                           
 11152                           ;stkvar	_m @ sp[(-10)+4]
 11153                           ;stkvar	_u @ sp[(-10)+0]
 11154  01420E  0EF6               	movlw	-10
 11155  014210  50E3               	movf	plusw1,w,c
 11156  014212  6E35               	movwf	btemp^0,c
 11157  014214  0EFA               	movlw	-6
 11158  014216  50E3               	movf	plusw1,w,c
 11159  014218  2635               	addwf	btemp^0,f,c
 11160  01421A  0EF6               	movlw	-10
 11161  01421C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11162  014222  0EF7               	movlw	-9
 11163  014224  50E3               	movf	plusw1,w,c
 11164  014226  6E35               	movwf	btemp^0,c
 11165  014228  0EFB               	movlw	-5
 11166  01422A  50E3               	movf	plusw1,w,c
 11167  01422C  2235               	addwfc	btemp^0,f,c
 11168  01422E  0EF7               	movlw	-9
 11169  014230  0060  F0D7  FFE3   	movff	btemp,plusw1
 11170  014236  0EF8               	movlw	-8
 11171  014238  50E3               	movf	plusw1,w,c
 11172  01423A  6E35               	movwf	btemp^0,c
 11173  01423C  0EFC               	movlw	-4
 11174  01423E  50E3               	movf	plusw1,w,c
 11175  014240  2235               	addwfc	btemp^0,f,c
 11176  014242  0EF8               	movlw	-8
 11177  014244  0060  F0D7  FFE3   	movff	btemp,plusw1
 11178  01424A  0EF9               	movlw	-7
 11179  01424C  50E3               	movf	plusw1,w,c
 11180  01424E  6E35               	movwf	btemp^0,c
 11181  014250  0EFD               	movlw	-3
 11182  014252  50E3               	movf	plusw1,w,c
 11183  014254  2235               	addwfc	btemp^0,f,c
 11184  014256  0EF9               	movlw	-7
 11185  014258  0060  F0D7  FFE3   	movff	btemp,plusw1
 11186  01425E                     l6123:
 11187                           
 11188                           ;stkvar	_m @ sp[(-10)+4]
 11189  01425E  0EFA               	movlw	-6
 11190  014260  006F FF8C  F03D    	movff	plusw1,btemp+8
 11191  014266  0EFB               	movlw	-5
 11192  014268  006F FF8C  F03E    	movff	plusw1,btemp+9
 11193  01426E  0EFC               	movlw	-4
 11194  014270  006F FF8C  F03F    	movff	plusw1,btemp+10
 11195  014276  0EFD               	movlw	-3
 11196  014278  006F FF8C  F040    	movff	plusw1,btemp+11
 11197  01427E  1C3D               	comf	(btemp+8)^0,w,c
 11198  014280  6E39               	movwf	(btemp+4)^0,c
 11199  014282  1C3E               	comf	(btemp+9)^0,w,c
 11200  014284  6E3A               	movwf	(btemp+5)^0,c
 11201  014286  1C3F               	comf	(btemp+10)^0,w,c
 11202  014288  6E3B               	movwf	(btemp+6)^0,c
 11203  01428A  1C40               	comf	(btemp+11)^0,w,c
 11204  01428C  6E3C               	movwf	(btemp+7)^0,c
 11205                           
 11206                           ;stkvar	_u @ sp[(-10)+0]
 11207  01428E  50E1               	movf	fsr1l,w,c
 11208  014290  0FF6               	addlw	-10
 11209  014292  6ED9               	movwf	fsr2l,c
 11210  014294  50E2               	movf	fsr1h,w,c
 11211  014296  6EDA               	movwf	fsr2h,c
 11212  014298  0EFF               	movlw	255
 11213  01429A  22DA               	addwfc	fsr2h,f,c
 11214  01429C  5039               	movf	(btemp+4)^0,w,c
 11215  01429E  16DE               	andwf	postinc2,f,c
 11216  0142A0  503A               	movf	(btemp+5)^0,w,c
 11217  0142A2  16DE               	andwf	postinc2,f,c
 11218  0142A4  503B               	movf	(btemp+6)^0,w,c
 11219  0142A6  16DE               	andwf	postinc2,f,c
 11220  0142A8  503C               	movf	(btemp+7)^0,w,c
 11221  0142AA  16DE               	andwf	postinc2,f,c
 11222  0142AC  D05B               	goto	l6133
 11223  0142AE                     l6125:
 11224                           
 11225                           ;stkvar	_u @ sp[(-10)+0]
 11226  0142AE  0EF6               	movlw	-10
 11227  0142B0  006F FF8C  F03D    	movff	plusw1,btemp+8
 11228  0142B6  0EF7               	movlw	-9
 11229  0142B8  006F FF8C  F03E    	movff	plusw1,btemp+9
 11230  0142BE  0EF8               	movlw	-8
 11231  0142C0  006F FF8C  F03F    	movff	plusw1,btemp+10
 11232  0142C6  0EF9               	movlw	-7
 11233  0142C8  006F FF8C  F040    	movff	plusw1,btemp+11
 11234  0142CE  0E20               	movlw	32
 11235  0142D0  D005               	goto	u4930
 11236  0142D2                     u4935:
 11237  0142D2  90D8               	bcf	status,0,c
 11238  0142D4  3240               	rrcf	(btemp+11)^0,f,c
 11239  0142D6  323F               	rrcf	(btemp+10)^0,f,c
 11240  0142D8  323E               	rrcf	(btemp+9)^0,f,c
 11241  0142DA  323D               	rrcf	(btemp+8)^0,f,c
 11242  0142DC                     u4930:
 11243  0142DC  2EE8               	decfsz	wreg,f,c
 11244  0142DE  D7F9               	goto	u4935
 11245  0142E0  663D               	tstfsz	(btemp+8)^0,c
 11246  0142E2  D009               	goto	l6129
 11247                           
 11248                           ;stkvar	_u @ sp[(-10)+0]
 11249  0142E4  0EF6               	movlw	-10
 11250  0142E6  6AE3               	clrf	plusw1,c
 11251  0142E8  0EF7               	movlw	-9
 11252  0142EA  6AE3               	clrf	plusw1,c
 11253  0142EC  0EF8               	movlw	-8
 11254  0142EE  6AE3               	clrf	plusw1,c
 11255  0142F0  0EF9               	movlw	-7
 11256  0142F2  6AE3               	clrf	plusw1,c
 11257  0142F4  D037               	goto	l6133
 11258  0142F6                     l6129:
 11259                           
 11260                           ;stkvar	_u @ sp[(-10)+0]
 11261  0142F6  0EF6               	movlw	-10
 11262  0142F8  006F FF8C  F03D    	movff	plusw1,btemp+8
 11263  0142FE  0EF7               	movlw	-9
 11264  014300  006F FF8C  F03E    	movff	plusw1,btemp+9
 11265  014306  0EF8               	movlw	-8
 11266  014308  006F FF8C  F03F    	movff	plusw1,btemp+10
 11267  01430E  0EF9               	movlw	-7
 11268  014310  006F FF8C  F040    	movff	plusw1,btemp+11
 11269  014316  90D8               	bcf	status,0,c
 11270  014318  343D               	rlcf	(btemp+8)^0,w,c
 11271  01431A  6E39               	movwf	(btemp+4)^0,c
 11272  01431C  343E               	rlcf	(btemp+9)^0,w,c
 11273  01431E  6E3A               	movwf	(btemp+5)^0,c
 11274  014320  343F               	rlcf	(btemp+10)^0,w,c
 11275  014322  6E3B               	movwf	(btemp+6)^0,c
 11276  014324  3440               	rlcf	(btemp+11)^0,w,c
 11277  014326  6E3C               	movwf	(btemp+7)^0,c
 11278  014328  5039               	movf	(btemp+4)^0,w,c
 11279  01432A  103A               	iorwf	(btemp+5)^0,w,c
 11280  01432C  103B               	iorwf	(btemp+6)^0,w,c
 11281  01432E  103C               	iorwf	(btemp+7)^0,w,c
 11282  014330  B4D8               	btfsc	status,2,c
 11283  014332  D018               	goto	l6133
 11284  014334  0E00               	movlw	0
 11285  014336  6E3D               	movwf	(btemp+8)^0,c
 11286  014338  0E00               	movlw	0
 11287  01433A  6E3E               	movwf	(btemp+9)^0,c
 11288  01433C  0E80               	movlw	128
 11289  01433E  6E3F               	movwf	(btemp+10)^0,c
 11290  014340  0EBF               	movlw	191
 11291  014342  6E40               	movwf	(btemp+11)^0,c
 11292                           
 11293                           ;stkvar	_u @ sp[(-10)+0]
 11294  014344  0EF6               	movlw	-10
 11295  014346  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11296  01434C  0EF7               	movlw	-9
 11297  01434E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11298  014354  0EF8               	movlw	-8
 11299  014356  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11300  01435C  0EF9               	movlw	-7
 11301  01435E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11302  014364                     l6133:
 11303                           
 11304                           ;stkvar	_u @ sp[(-10)+0]
 11305  014364  0EF6               	movlw	-10
 11306  014366  006F FF8C  F035    	movff	plusw1,btemp
 11307  01436C  0EF7               	movlw	-9
 11308  01436E  006F FF8C  F036    	movff	plusw1,btemp+1
 11309  014374  0EF8               	movlw	-8
 11310  014376  006F FF8C  F037    	movff	plusw1,btemp+2
 11311  01437C  0EF9               	movlw	-7
 11312  01437E                     L8:
 11313  01437E  006F FF8C  F038    	movff	plusw1,btemp+3
 11314                           
 11315                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11316  014384  0EF2               	movlw	242
 11317  014386  26E1               	addwf	fsr1l,f,c
 11318  014388  0EFF               	movlw	255
 11319  01438A  22E2               	addwfc	fsr1h,f,c
 11320  01438C  0012               	return		;funcret
 11321  01438E                     __end_of_floorf:
 11322                           	opt callstack 0
 11323                           
 11324 ;; *************** function ___fpclassifyf *****************
 11325 ;; Defined at:
 11326 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 11327 ;; Parameters:    Size  Location     Type
 11328 ;;  x               4  [STACK] float 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  u               4  [STACK] struct .
 11331 ;;  e               2  [STACK] int 
 11332 ;; Return value:  Size  Location     Type
 11333 ;;                  2  [STACK] int 
 11334 ;; Registers used:
 11335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 11336 ;; Tracked objects:
 11337 ;;		On entry : 0/4
 11338 ;;		On exit  : 0/0
 11339 ;;		Unchanged: 0/0
 11340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;Total ram usage:        0 bytes
 11346 ;; Hardware stack levels used:    1
 11347 ;; Hardware stack levels required when called:    6
 11348 ;; This function calls:
 11349 ;;		Nothing
 11350 ;; This function is called by:
 11351 ;;		_efgtoa
 11352 ;; This function uses a reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text41
 11356  01564A                     __ptext41:
 11357                           	opt callstack 0
 11358  01564A                     ___fpclassifyf:
 11359                           	opt callstack 0
 11360                           
 11361                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11362  01564A  0E06               	movlw	6
 11363  01564C  26E1               	addwf	fsr1l,f,c
 11364  01564E  0E00               	movlw	0
 11365  015650  22E2               	addwfc	fsr1h,f,c
 11366                           
 11367                           ;incstack = 0
 11368  015652  0060  F2A8  F03D   	movff	___fpclassifyf@F463,btemp+8
 11369  015658  0060  F2AC  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 11370  01565E  0060  F2B0  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 11371  015664  0060  F2B4  F040   	movff	___fpclassifyf@F463+3,btemp+11
 11372                           
 11373                           ;stkvar	_u @ sp[(-6)+0]
 11374  01566A  0EFA               	movlw	-6
 11375  01566C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11376  015672  0EFB               	movlw	-5
 11377  015674  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11378  01567A  0EFC               	movlw	-4
 11379  01567C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11380  015682  0EFD               	movlw	-3
 11381  015684  0060  F103  FFE3   	movff	btemp+11,plusw1
 11382                           
 11383                           ;stkvar	_x @ sp[(-6)+-4]
 11384  01568A  0EF6               	movlw	-10
 11385  01568C  006F FF8C  F03D    	movff	plusw1,btemp+8
 11386  015692  0EF7               	movlw	-9
 11387  015694  006F FF8C  F03E    	movff	plusw1,btemp+9
 11388  01569A  0EF8               	movlw	-8
 11389  01569C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11390  0156A2  0EF9               	movlw	-7
 11391  0156A4  006F FF8C  F040    	movff	plusw1,btemp+11
 11392                           
 11393                           ;stkvar	_u @ sp[(-6)+0]
 11394  0156AA  0EFA               	movlw	-6
 11395  0156AC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11396  0156B2  0EFB               	movlw	-5
 11397  0156B4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11398  0156BA  0EFC               	movlw	-4
 11399  0156BC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11400  0156C2  0EFD               	movlw	-3
 11401  0156C4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11402                           
 11403                           ;stkvar	_u @ sp[(-6)+0]
 11404  0156CA  0EFA               	movlw	-6
 11405  0156CC  006F FF8C  F03D    	movff	plusw1,btemp+8
 11406  0156D2  0EFB               	movlw	-5
 11407  0156D4  006F FF8C  F03E    	movff	plusw1,btemp+9
 11408  0156DA  0EFC               	movlw	-4
 11409  0156DC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11410  0156E2  0EFD               	movlw	-3
 11411  0156E4  006F FF8C  F040    	movff	plusw1,btemp+11
 11412  0156EA  0E18               	movlw	24
 11413  0156EC  D005               	goto	u4740
 11414  0156EE                     u4745:
 11415  0156EE  90D8               	bcf	status,0,c
 11416  0156F0  3240               	rrcf	(btemp+11)^0,f,c
 11417  0156F2  323F               	rrcf	(btemp+10)^0,f,c
 11418  0156F4  323E               	rrcf	(btemp+9)^0,f,c
 11419  0156F6  323D               	rrcf	(btemp+8)^0,f,c
 11420  0156F8                     u4740:
 11421  0156F8  2EE8               	decfsz	wreg,f,c
 11422  0156FA  D7F9               	goto	u4745
 11423  0156FC  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 11424  015702  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 11425  015708  0EFF               	movlw	255
 11426  01570A  163B               	andwf	(btemp+6)^0,f,c
 11427  01570C  0E00               	movlw	0
 11428  01570E  163C               	andwf	(btemp+7)^0,f,c
 11429                           
 11430                           ;stkvar	_e @ sp[(-6)+4]
 11431  015710  0EFE               	movlw	-2
 11432  015712  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 11433  015718  0EFF               	movlw	-1
 11434  01571A  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 11435                           
 11436                           ;stkvar	_e @ sp[(-6)+4]
 11437  015720  0EFE               	movlw	-2
 11438  015722  006F FF8C  F035    	movff	plusw1,btemp
 11439  015728  0EFF               	movlw	-1
 11440  01572A  50E3               	movf	plusw1,w,c
 11441  01572C  1035               	iorwf	btemp^0,w,c
 11442  01572E  A4D8               	btfss	status,2,c
 11443  015730  D023               	goto	l6071
 11444                           
 11445                           ;stkvar	_u @ sp[(-6)+0]
 11446  015732  0EFA               	movlw	-6
 11447  015734  006F FF8C  F03D    	movff	plusw1,btemp+8
 11448  01573A  0EFB               	movlw	-5
 11449  01573C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11450  015742  0EFC               	movlw	-4
 11451  015744  006F FF8C  F03F    	movff	plusw1,btemp+10
 11452  01574A  0EFD               	movlw	-3
 11453  01574C  006F FF8C  F040    	movff	plusw1,btemp+11
 11454  015752  90D8               	bcf	status,0,c
 11455  015754  343D               	rlcf	(btemp+8)^0,w,c
 11456  015756  6E39               	movwf	(btemp+4)^0,c
 11457  015758  343E               	rlcf	(btemp+9)^0,w,c
 11458  01575A  6E3A               	movwf	(btemp+5)^0,c
 11459  01575C  343F               	rlcf	(btemp+10)^0,w,c
 11460  01575E  6E3B               	movwf	(btemp+6)^0,c
 11461  015760  3440               	rlcf	(btemp+11)^0,w,c
 11462  015762  6E3C               	movwf	(btemp+7)^0,c
 11463  015764  5039               	movf	(btemp+4)^0,w,c
 11464  015766  103A               	iorwf	(btemp+5)^0,w,c
 11465  015768  103B               	iorwf	(btemp+6)^0,w,c
 11466  01576A  103C               	iorwf	(btemp+7)^0,w,c
 11467  01576C  A4D8               	btfss	status,2,c
 11468  01576E  D002               	goto	l6067
 11469  015770  0E02               	movlw	2
 11470  015772  D02E               	goto	L9
 11471  015774                     l6067:
 11472  015774  0E03               	movlw	3
 11473  015776  D02C               	goto	L9
 11474  015778                     l6071:
 11475                           
 11476                           ;stkvar	_e @ sp[(-6)+4]
 11477  015778  0EFE               	movlw	-2
 11478  01577A  28E3               	incf	plusw1,w,c
 11479  01577C  E128               	bnz	l6077
 11480  01577E  0EFF               	movlw	-1
 11481  015780  50E3               	movf	plusw1,w,c
 11482  015782  A4D8               	btfss	status,2,c
 11483  015784  D024               	goto	l6077
 11484                           
 11485                           ;stkvar	_u @ sp[(-6)+0]
 11486  015786  0EFA               	movlw	-6
 11487  015788  006F FF8C  F03D    	movff	plusw1,btemp+8
 11488  01578E  0EFB               	movlw	-5
 11489  015790  006F FF8C  F03E    	movff	plusw1,btemp+9
 11490  015796  0EFC               	movlw	-4
 11491  015798  006F FF8C  F03F    	movff	plusw1,btemp+10
 11492  01579E  0EFD               	movlw	-3
 11493  0157A0  006F FF8C  F040    	movff	plusw1,btemp+11
 11494  0157A6  0E09               	movlw	9
 11495  0157A8                     u4785:
 11496  0157A8  90D8               	bcf	status,0,c
 11497  0157AA  363D               	rlcf	(btemp+8)^0,f,c
 11498  0157AC  363E               	rlcf	(btemp+9)^0,f,c
 11499  0157AE  363F               	rlcf	(btemp+10)^0,f,c
 11500  0157B0  3640               	rlcf	(btemp+11)^0,f,c
 11501  0157B2  2EE8               	decfsz	wreg,f,c
 11502  0157B4  D7F9               	goto	u4785
 11503  0157B6  503D               	movf	(btemp+8)^0,w,c
 11504  0157B8  103E               	iorwf	(btemp+9)^0,w,c
 11505  0157BA  103F               	iorwf	(btemp+10)^0,w,c
 11506  0157BC  1040               	iorwf	(btemp+11)^0,w,c
 11507  0157BE  A4D8               	btfss	status,2,c
 11508  0157C0  D002               	goto	u4790
 11509  0157C2  0E01               	movlw	1
 11510  0157C4  D001               	goto	u4800
 11511  0157C6                     u4790:
 11512  0157C6  0E00               	movlw	0
 11513  0157C8                     u4800:
 11514  0157C8  6E35               	movwf	btemp^0,c
 11515  0157CA  6A36               	clrf	(btemp+1)^0,c
 11516  0157CC  D004               	goto	l2618
 11517  0157CE                     l6077:
 11518  0157CE  0E04               	movlw	4
 11519  0157D0                     L9:
 11520  0157D0  6E35               	movwf	btemp^0,c
 11521  0157D2  0E00               	movlw	0
 11522  0157D4  6E36               	movwf	(btemp+1)^0,c
 11523  0157D6                     l2618:
 11524                           
 11525                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 11526  0157D6  0EF6               	movlw	246
 11527  0157D8  26E1               	addwf	fsr1l,f,c
 11528  0157DA  0EFF               	movlw	255
 11529  0157DC  22E2               	addwfc	fsr1h,f,c
 11530  0157DE  0012               	return		;funcret
 11531  0157E0                     __end_of___fpclassifyf:
 11532                           	opt callstack 0
 11533                           
 11534 ;; *************** function ___fltol *****************
 11535 ;; Defined at:
 11536 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;  f1              4  [STACK] int 
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;  exp1            1  [STACK] unsigned char 
 11541 ;;  sign1           1  [STACK] unsigned char 
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  4  [STACK] long 
 11544 ;; Registers used:
 11545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/4
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11555 ;;Total ram usage:        0 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; Hardware stack levels required when called:    6
 11558 ;; This function calls:
 11559 ;;		Nothing
 11560 ;; This function is called by:
 11561 ;;		_efgtoa
 11562 ;; This function uses a reentrant model
 11563 ;;
 11564                           
 11565                           	psect	text42
 11566  0157E0                     __ptext42:
 11567                           	opt callstack 0
 11568  0157E0                     ___fltol:
 11569                           	opt callstack 0
 11570                           
 11571                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11572  0157E0  52E6               	movf	postinc1,f,c
 11573  0157E2  52E6               	movf	postinc1,f,c
 11574                           
 11575                           ;stkvar	_f1 @ sp[(-2)+-4]
 11576                           
 11577                           ;incstack = 0
 11578  0157E4  0EFA               	movlw	-6
 11579  0157E6  006F FF8C  F03D    	movff	plusw1,btemp+8
 11580  0157EC  0EFB               	movlw	-5
 11581  0157EE  006F FF8C  F03E    	movff	plusw1,btemp+9
 11582  0157F4  0EFC               	movlw	-4
 11583  0157F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 11584  0157FC  0EFD               	movlw	-3
 11585  0157FE  006F FF8C  F040    	movff	plusw1,btemp+11
 11586  015804  0E18               	movlw	24
 11587  015806  D005               	goto	u5950
 11588  015808                     u5955:
 11589  015808  90D8               	bcf	status,0,c
 11590  01580A  3240               	rrcf	(btemp+11)^0,f,c
 11591  01580C  323F               	rrcf	(btemp+10)^0,f,c
 11592  01580E  323E               	rrcf	(btemp+9)^0,f,c
 11593  015810  323D               	rrcf	(btemp+8)^0,f,c
 11594  015812                     u5950:
 11595  015812  2EE8               	decfsz	wreg,f,c
 11596  015814  D7F9               	goto	u5955
 11597                           
 11598                           ;stkvar	_exp1 @ sp[(-2)+0]
 11599  015816  0EFE               	movlw	-2
 11600  015818  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11601  01581E  0EFE               	movlw	-2
 11602  015820  50E3               	movf	plusw1,w,c
 11603  015822  A4D8               	btfss	status,2,c
 11604  015824  D006               	goto	l6697
 11605  015826                     u5960:
 11606  015826  0E00               	movlw	0
 11607  015828  6E35               	movwf	btemp^0,c
 11608  01582A  6A36               	clrf	(btemp+1)^0,c
 11609  01582C  6A37               	clrf	(btemp+2)^0,c
 11610  01582E  6A38               	clrf	(btemp+3)^0,c
 11611  015830  D08B               	goto	l2234
 11612  015832                     l6697:
 11613                           
 11614                           ;stkvar	_f1 @ sp[(-2)+-4]
 11615  015832  0EFA               	movlw	-6
 11616  015834  006F FF8C  F03D    	movff	plusw1,btemp+8
 11617  01583A  0EFB               	movlw	-5
 11618  01583C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11619  015842  0EFC               	movlw	-4
 11620  015844  006F FF8C  F03F    	movff	plusw1,btemp+10
 11621  01584A  0EFD               	movlw	-3
 11622  01584C  006F FF8C  F040    	movff	plusw1,btemp+11
 11623  015852  0E20               	movlw	32
 11624  015854  D005               	goto	u5970
 11625  015856                     u5975:
 11626  015856  90D8               	bcf	status,0,c
 11627  015858  3240               	rrcf	(btemp+11)^0,f,c
 11628  01585A  323F               	rrcf	(btemp+10)^0,f,c
 11629  01585C  323E               	rrcf	(btemp+9)^0,f,c
 11630  01585E  323D               	rrcf	(btemp+8)^0,f,c
 11631  015860                     u5970:
 11632  015860  2EE8               	decfsz	wreg,f,c
 11633  015862  D7F9               	goto	u5975
 11634                           
 11635                           ;stkvar	_sign1 @ sp[(-2)+1]
 11636  015864  0EFF               	movlw	-1
 11637  015866  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11638                           
 11639                           ;stkvar	_f1 @ sp[(-2)+-4]
 11640  01586C  0EFC               	movlw	-4
 11641  01586E  8EE3               	bsf	plusw1,7,c
 11642                           
 11643                           ;stkvar	_f1 @ sp[(-2)+-4]
 11644  015870  50E1               	movf	fsr1l,w,c
 11645  015872  0FFA               	addlw	-6
 11646  015874  6ED9               	movwf	fsr2l,c
 11647  015876  50E2               	movf	fsr1h,w,c
 11648  015878  6EDA               	movwf	fsr2h,c
 11649  01587A  0EFF               	movlw	255
 11650  01587C  22DA               	addwfc	fsr2h,f,c
 11651  01587E  0EFF               	movlw	255
 11652  015880  16DE               	andwf	postinc2,f,c
 11653  015882  0EFF               	movlw	255
 11654  015884  16DE               	andwf	postinc2,f,c
 11655  015886  0EFF               	movlw	255
 11656  015888  16DE               	andwf	postinc2,f,c
 11657  01588A  0E00               	movlw	0
 11658  01588C  16DE               	andwf	postinc2,f,c
 11659                           
 11660                           ;stkvar	_exp1 @ sp[(-2)+0]
 11661  01588E  0EFE               	movlw	-2
 11662  015890  006F FF8C  F035    	movff	plusw1,btemp
 11663  015896  0E96               	movlw	150
 11664  015898  5E35               	subwf	btemp^0,f,c
 11665  01589A  0EFE               	movlw	-2
 11666  01589C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11667                           
 11668                           ;stkvar	_exp1 @ sp[(-2)+0]
 11669  0158A2  0EFE               	movlw	-2
 11670  0158A4  AEE3               	btfss	plusw1,7,c
 11671  0158A6  D014               	goto	l6715
 11672                           
 11673                           ;stkvar	_exp1 @ sp[(-2)+0]
 11674  0158A8  0EFE               	movlw	-2
 11675  0158AA  50E3               	movf	plusw1,w,c
 11676  0158AC  0A80               	xorlw	128
 11677  0158AE  0F97               	addlw	151
 11678  0158B0  A0D8               	btfss	status,0,c
 11679  0158B2  D7B9               	goto	u5960
 11680  0158B4                     l6713:
 11681                           
 11682                           ;stkvar	_f1 @ sp[(-2)+-4]
 11683  0158B4  90D8               	bcf	status,0,c
 11684  0158B6  0EFD               	movlw	-3
 11685  0158B8  32E3               	rrcf	plusw1,f,c
 11686  0158BA  0EFC               	movlw	-4
 11687  0158BC  32E3               	rrcf	plusw1,f,c
 11688  0158BE  0EFB               	movlw	-5
 11689  0158C0  32E3               	rrcf	plusw1,f,c
 11690  0158C2  0EFA               	movlw	-6
 11691  0158C4  32E3               	rrcf	plusw1,f,c
 11692                           
 11693                           ;stkvar	_exp1 @ sp[(-2)+0]
 11694  0158C6  0EFE               	movlw	-2
 11695  0158C8  2AE3               	incf	plusw1,f,c
 11696  0158CA  B4D8               	btfsc	status,2,c
 11697  0158CC  D018               	goto	u6020
 11698  0158CE  D7F2               	goto	l6713
 11699  0158D0                     l6715:
 11700                           
 11701                           ;stkvar	_exp1 @ sp[(-2)+0]
 11702  0158D0  0EFE               	movlw	-2
 11703  0158D2  006F FF8C  F035    	movff	plusw1,btemp
 11704  0158D8  0E1F               	movlw	31
 11705  0158DA  6435               	cpfsgt	btemp^0,c
 11706  0158DC  D00C               	goto	l6723
 11707  0158DE  D7A3               	goto	u5960
 11708  0158E0                     l6721:
 11709                           
 11710                           ;stkvar	_f1 @ sp[(-2)+-4]
 11711  0158E0  90D8               	bcf	status,0,c
 11712  0158E2  0EFA               	movlw	-6
 11713  0158E4  36E3               	rlcf	plusw1,f,c
 11714  0158E6  0EFB               	movlw	-5
 11715  0158E8  36E3               	rlcf	plusw1,f,c
 11716  0158EA  0EFC               	movlw	-4
 11717  0158EC  36E3               	rlcf	plusw1,f,c
 11718  0158EE  0EFD               	movlw	-3
 11719  0158F0  36E3               	rlcf	plusw1,f,c
 11720                           
 11721                           ;stkvar	_exp1 @ sp[(-2)+0]
 11722  0158F2  0EFE               	movlw	-2
 11723  0158F4  06E3               	decf	plusw1,f,c
 11724  0158F6                     l6723:
 11725                           
 11726                           ;stkvar	_exp1 @ sp[(-2)+0]
 11727  0158F6  0EFE               	movlw	-2
 11728  0158F8  50E3               	movf	plusw1,w,c
 11729  0158FA  A4D8               	btfss	status,2,c
 11730  0158FC  D7F1               	goto	l6721
 11731  0158FE                     u6020:
 11732                           
 11733                           ;stkvar	_sign1 @ sp[(-2)+1]
 11734  0158FE  0EFF               	movlw	-1
 11735  015900  50E3               	movf	plusw1,w,c
 11736  015902  B4D8               	btfsc	status,2,c
 11737  015904  D011               	goto	u6040
 11738                           
 11739                           ;stkvar	_f1 @ sp[(-2)+-4]
 11740                           ;stkvar	_f1 @ sp[(-2)+-4]
 11741  015906  0EFA               	movlw	-6
 11742  015908  6CE3               	negf	plusw1,c
 11743  01590A  0EFB               	movlw	-5
 11744  01590C  1EE3               	comf	plusw1,f,c
 11745  01590E  0EFC               	movlw	-4
 11746  015910  1EE3               	comf	plusw1,f,c
 11747  015912  0EFD               	movlw	-3
 11748  015914  1EE3               	comf	plusw1,f,c
 11749  015916  E308               	bnc	u6040
 11750  015918  0EFB               	movlw	-5
 11751  01591A  2AE3               	incf	plusw1,f,c
 11752  01591C  E305               	bnc	u6040
 11753  01591E  0EFC               	movlw	-4
 11754  015920  2AE3               	incf	plusw1,f,c
 11755  015922  E302               	bnc	u6040
 11756  015924  0EFD               	movlw	-3
 11757  015926  2AE3               	incf	plusw1,f,c
 11758  015928                     u6040:
 11759                           
 11760                           ;stkvar	_f1 @ sp[(-2)+-4]
 11761  015928  0EFA               	movlw	-6
 11762  01592A  006F FF8C  F035    	movff	plusw1,btemp
 11763  015930  0EFB               	movlw	-5
 11764  015932  006F FF8C  F036    	movff	plusw1,btemp+1
 11765  015938  0EFC               	movlw	-4
 11766  01593A  006F FF8C  F037    	movff	plusw1,btemp+2
 11767  015940  0EFD               	movlw	-3
 11768  015942  006F FF8C  F038    	movff	plusw1,btemp+3
 11769  015948                     l2234:
 11770                           
 11771                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11772  015948  0EFA               	movlw	250
 11773  01594A  26E1               	addwf	fsr1l,f,c
 11774  01594C  0EFF               	movlw	255
 11775  01594E  22E2               	addwfc	fsr1h,f,c
 11776  015950  0012               	return		;funcret
 11777  015952                     __end_of___fltol:
 11778                           	opt callstack 0
 11779                           
 11780 ;; *************** function ___flsub *****************
 11781 ;; Defined at:
 11782 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;  b               4  [STACK] long 
 11785 ;;  a               4  [STACK] long 
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;		None
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  4  [STACK] long 
 11790 ;; Registers used:
 11791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/4
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11801 ;;Total ram usage:        0 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    7
 11804 ;; This function calls:
 11805 ;;		___fladd
 11806 ;; This function is called by:
 11807 ;;		_efgtoa
 11808 ;; This function uses a reentrant model
 11809 ;;
 11810                           
 11811                           	psect	text43
 11812  017240                     __ptext43:
 11813                           	opt callstack 0
 11814  017240                     ___flsub:
 11815                           	opt callstack 16
 11816                           
 11817                           ;stkvar	_a @ sp[(0)+-8]
 11818                           
 11819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11820                           ;incstack = 0
 11821  017240  0EFB               	movlw	-5
 11822  017242  7EE3               	btg	plusw1,7,c
 11823                           
 11824                           ;stkvar	_a @ sp[(0)+-8]
 11825  017244  0EF8               	movlw	-8
 11826  017246  006F FF8F FFE6     	movff	plusw1,postinc1
 11827  01724C  006F FF8F FFE6     	movff	plusw1,postinc1
 11828  017252  006F FF8F FFE6     	movff	plusw1,postinc1
 11829  017258  006F FF8F FFE6     	movff	plusw1,postinc1
 11830                           
 11831                           ;stkvar	_b @ sp[(-4)+-4]
 11832  01725E  0EF8               	movlw	-8
 11833  017260  006F FF8F FFE6     	movff	plusw1,postinc1
 11834  017266  006F FF8F FFE6     	movff	plusw1,postinc1
 11835  01726C  006F FF8F FFE6     	movff	plusw1,postinc1
 11836  017272  006F FF8F FFE6     	movff	plusw1,postinc1
 11837  017278  ECD6  F092         	call	___fladd	;wreg free
 11838                           
 11839                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 11840  01727C  0EF8               	movlw	248
 11841  01727E  26E1               	addwf	fsr1l,f,c
 11842  017280  0EFF               	movlw	255
 11843  017282  22E2               	addwfc	fsr1h,f,c
 11844  017284  0012               	return		;funcret
 11845  017286                     __end_of___flsub:
 11846                           	opt callstack 0
 11847                           
 11848 ;; *************** function ___fladd *****************
 11849 ;; Defined at:
 11850 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  b               4  [STACK] long 
 11853 ;;  a               4  [STACK] long 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;  grs             1  [STACK] unsigned char 
 11856 ;;  bexp            1  [STACK] unsigned char 
 11857 ;;  aexp            1  [STACK] unsigned char 
 11858 ;;  signs           1  [STACK] unsigned char 
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  4  [STACK] unsigned char 
 11861 ;; Registers used:
 11862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/4
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11872 ;;Total ram usage:        0 bytes
 11873 ;; Hardware stack levels used:    1
 11874 ;; Hardware stack levels required when called:    6
 11875 ;; This function calls:
 11876 ;;		Nothing
 11877 ;; This function is called by:
 11878 ;;		_efgtoa
 11879 ;;		___flsub
 11880 ;; This function uses a reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text44
 11884  0125AC                     __ptext44:
 11885                           	opt callstack 0
 11886  0125AC                     ___fladd:
 11887                           	opt callstack 0
 11888                           
 11889                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11890  0125AC  52E6               	movf	postinc1,f,c
 11891  0125AE  52E6               	movf	postinc1,f,c
 11892  0125B0  52E6               	movf	postinc1,f,c
 11893  0125B2  52E6               	movf	postinc1,f,c
 11894                           
 11895                           ;stkvar	_b @ sp[(-4)+-4]
 11896                           
 11897                           ;incstack = 0
 11898  0125B4  0EFB               	movlw	251
 11899  0125B6  24E1               	addwf	fsr1l,w,c
 11900  0125B8  6ED9               	movwf	fsr2l,c
 11901  0125BA  0EFF               	movlw	255
 11902  0125BC  20E2               	addwfc	fsr1h,w,c
 11903  0125BE  6EDA               	movwf	fsr2h,c
 11904  0125C0  50DF               	movf	indf2,w,c
 11905  0125C2  6E40               	movwf	(btemp+11)^0,c
 11906  0125C4  0E80               	movlw	128
 11907  0125C6  1640               	andwf	(btemp+11)^0,f,c
 11908                           
 11909                           ;stkvar	_signs @ sp[(-4)+3]
 11910  0125C8  0EFF               	movlw	-1
 11911  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 11912                           
 11913                           ;stkvar	_b @ sp[(-4)+-4]
 11914  0125D0  0EFB               	movlw	251
 11915  0125D2  24E1               	addwf	fsr1l,w,c
 11916  0125D4  6ED9               	movwf	fsr2l,c
 11917  0125D6  0EFF               	movlw	255
 11918  0125D8  20E2               	addwfc	fsr1h,w,c
 11919  0125DA  6EDA               	movwf	fsr2h,c
 11920  0125DC  50DF               	movf	indf2,w,c
 11921  0125DE  6E40               	movwf	(btemp+11)^0,c
 11922  0125E0  90D8               	bcf	status,0,c
 11923  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 11924  0125E4  6E3F               	movwf	(btemp+10)^0,c
 11925                           
 11926                           ;stkvar	_bexp @ sp[(-4)+1]
 11927  0125E6  0EFD               	movlw	-3
 11928  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11929                           
 11930                           ;stkvar	_b @ sp[(-4)+-4]
 11931  0125EE  0EFA               	movlw	250
 11932  0125F0  24E1               	addwf	fsr1l,w,c
 11933  0125F2  6ED9               	movwf	fsr2l,c
 11934  0125F4  0EFF               	movlw	255
 11935  0125F6  20E2               	addwfc	fsr1h,w,c
 11936  0125F8  6EDA               	movwf	fsr2h,c
 11937  0125FA  AEDF               	btfss	indf2,7,c
 11938  0125FC  D002               	goto	l5811
 11939                           
 11940                           ;stkvar	_bexp @ sp[(-4)+1]
 11941  0125FE  0EFD               	movlw	-3
 11942  012600  80E3               	bsf	plusw1,0,c
 11943  012602                     l5811:
 11944                           
 11945                           ;stkvar	_bexp @ sp[(-4)+1]
 11946  012602  0EFD               	movlw	-3
 11947  012604  50E3               	movf	plusw1,w,c
 11948  012606  B4D8               	btfsc	status,2,c
 11949  012608  D027               	goto	l5821
 11950                           
 11951                           ;stkvar	_bexp @ sp[(-4)+1]
 11952  01260A  0EFD               	movlw	-3
 11953  01260C  28E3               	incf	plusw1,w,c
 11954  01260E  A4D8               	btfss	status,2,c
 11955  012610  D018               	goto	l5817
 11956  012612  0E00               	movlw	0
 11957  012614  6E3D               	movwf	(btemp+8)^0,c
 11958  012616  0E00               	movlw	0
 11959  012618  6E3E               	movwf	(btemp+9)^0,c
 11960  01261A  0E00               	movlw	0
 11961  01261C  6E3F               	movwf	(btemp+10)^0,c
 11962  01261E  0E00               	movlw	0
 11963  012620  6E40               	movwf	(btemp+11)^0,c
 11964                           
 11965                           ;stkvar	_b @ sp[(-4)+-4]
 11966  012622  0EF8               	movlw	-8
 11967  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11968  01262A  0EF9               	movlw	-7
 11969  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11970  012632  0EFA               	movlw	-6
 11971  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11972  01263A  0EFB               	movlw	-5
 11973  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11974  012642                     l5817:
 11975                           
 11976                           ;stkvar	_b @ sp[(-4)+-4]
 11977  012642  0EFA               	movlw	-6
 11978  012644  8EE3               	bsf	plusw1,7,c
 11979                           
 11980                           ;stkvar	_b @ sp[(-4)+-4]
 11981  012646  0EFB               	movlw	251
 11982  012648  24E1               	addwf	fsr1l,w,c
 11983  01264A  6ED9               	movwf	fsr2l,c
 11984  01264C  0EFF               	movlw	255
 11985  01264E  20E2               	addwfc	fsr1h,w,c
 11986  012650  6EDA               	movwf	fsr2h,c
 11987  012652  0E00               	movlw	0
 11988  012654  6EDF               	movwf	indf2,c
 11989  012656  D018               	goto	l5823
 11990  012658                     l5821:
 11991  012658  0E00               	movlw	0
 11992  01265A  6E3D               	movwf	(btemp+8)^0,c
 11993  01265C  0E00               	movlw	0
 11994  01265E  6E3E               	movwf	(btemp+9)^0,c
 11995  012660  0E00               	movlw	0
 11996  012662  6E3F               	movwf	(btemp+10)^0,c
 11997  012664  0E00               	movlw	0
 11998  012666  6E40               	movwf	(btemp+11)^0,c
 11999                           
 12000                           ;stkvar	_b @ sp[(-4)+-4]
 12001  012668  0EF8               	movlw	-8
 12002  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12003  012670  0EF9               	movlw	-7
 12004  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12005  012678  0EFA               	movlw	-6
 12006  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12007  012680  0EFB               	movlw	-5
 12008  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 12009  012688                     l5823:
 12010                           
 12011                           ;stkvar	_a @ sp[(-4)+-8]
 12012  012688  0EF7               	movlw	247
 12013  01268A  24E1               	addwf	fsr1l,w,c
 12014  01268C  6ED9               	movwf	fsr2l,c
 12015  01268E  0EFF               	movlw	255
 12016  012690  20E2               	addwfc	fsr1h,w,c
 12017  012692  6EDA               	movwf	fsr2h,c
 12018  012694  50DF               	movf	indf2,w,c
 12019  012696  6E40               	movwf	(btemp+11)^0,c
 12020  012698  0E80               	movlw	128
 12021  01269A  1640               	andwf	(btemp+11)^0,f,c
 12022                           
 12023                           ;stkvar	_aexp @ sp[(-4)+2]
 12024  01269C  0EFE               	movlw	-2
 12025  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12026                           
 12027                           ;stkvar	_signs @ sp[(-4)+3]
 12028                           ;stkvar	_aexp @ sp[(-4)+2]
 12029  0126A4  50E1               	movf	fsr1l,w,c
 12030  0126A6  0FFE               	addlw	-2
 12031  0126A8  6ED9               	movwf	fsr2l,c
 12032  0126AA  50E2               	movf	fsr1h,w,c
 12033  0126AC  6EDA               	movwf	fsr2h,c
 12034  0126AE  0EFF               	movlw	255
 12035  0126B0  22DA               	addwfc	fsr2h,f,c
 12036  0126B2  0EFF               	movlw	-1
 12037  0126B4  50E3               	movf	plusw1,w,c
 12038  0126B6  18DE               	xorwf	postinc2,w,c
 12039  0126B8  B4D8               	btfsc	status,2,c
 12040  0126BA  D002               	goto	l5829
 12041                           
 12042                           ;stkvar	_signs @ sp[(-4)+3]
 12043  0126BC  0EFF               	movlw	-1
 12044  0126BE  8CE3               	bsf	plusw1,6,c
 12045  0126C0                     l5829:
 12046                           
 12047                           ;stkvar	_a @ sp[(-4)+-8]
 12048  0126C0  0EF7               	movlw	247
 12049  0126C2  24E1               	addwf	fsr1l,w,c
 12050  0126C4  6ED9               	movwf	fsr2l,c
 12051  0126C6  0EFF               	movlw	255
 12052  0126C8  20E2               	addwfc	fsr1h,w,c
 12053  0126CA  6EDA               	movwf	fsr2h,c
 12054  0126CC  50DF               	movf	indf2,w,c
 12055  0126CE  6E40               	movwf	(btemp+11)^0,c
 12056  0126D0  90D8               	bcf	status,0,c
 12057  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 12058  0126D4  6E3F               	movwf	(btemp+10)^0,c
 12059                           
 12060                           ;stkvar	_aexp @ sp[(-4)+2]
 12061  0126D6  0EFE               	movlw	-2
 12062  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12063                           
 12064                           ;stkvar	_a @ sp[(-4)+-8]
 12065  0126DE  0EF6               	movlw	246
 12066  0126E0  24E1               	addwf	fsr1l,w,c
 12067  0126E2  6ED9               	movwf	fsr2l,c
 12068  0126E4  0EFF               	movlw	255
 12069  0126E6  20E2               	addwfc	fsr1h,w,c
 12070  0126E8  6EDA               	movwf	fsr2h,c
 12071  0126EA  AEDF               	btfss	indf2,7,c
 12072  0126EC  D002               	goto	l5835
 12073                           
 12074                           ;stkvar	_aexp @ sp[(-4)+2]
 12075  0126EE  0EFE               	movlw	-2
 12076  0126F0  80E3               	bsf	plusw1,0,c
 12077  0126F2                     l5835:
 12078                           
 12079                           ;stkvar	_aexp @ sp[(-4)+2]
 12080  0126F2  0EFE               	movlw	-2
 12081  0126F4  50E3               	movf	plusw1,w,c
 12082  0126F6  B4D8               	btfsc	status,2,c
 12083  0126F8  D027               	goto	l5845
 12084                           
 12085                           ;stkvar	_aexp @ sp[(-4)+2]
 12086  0126FA  0EFE               	movlw	-2
 12087  0126FC  28E3               	incf	plusw1,w,c
 12088  0126FE  A4D8               	btfss	status,2,c
 12089  012700  D018               	goto	l5841
 12090  012702  0E00               	movlw	0
 12091  012704  6E3D               	movwf	(btemp+8)^0,c
 12092  012706  0E00               	movlw	0
 12093  012708  6E3E               	movwf	(btemp+9)^0,c
 12094  01270A  0E00               	movlw	0
 12095  01270C  6E3F               	movwf	(btemp+10)^0,c
 12096  01270E  0E00               	movlw	0
 12097  012710  6E40               	movwf	(btemp+11)^0,c
 12098                           
 12099                           ;stkvar	_a @ sp[(-4)+-8]
 12100  012712  0EF4               	movlw	-12
 12101  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12102  01271A  0EF5               	movlw	-11
 12103  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12104  012722  0EF6               	movlw	-10
 12105  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12106  01272A  0EF7               	movlw	-9
 12107  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12108  012732                     l5841:
 12109                           
 12110                           ;stkvar	_a @ sp[(-4)+-8]
 12111  012732  0EF6               	movlw	-10
 12112  012734  8EE3               	bsf	plusw1,7,c
 12113                           
 12114                           ;stkvar	_a @ sp[(-4)+-8]
 12115  012736  0EF7               	movlw	247
 12116  012738  24E1               	addwf	fsr1l,w,c
 12117  01273A  6ED9               	movwf	fsr2l,c
 12118  01273C  0EFF               	movlw	255
 12119  01273E  20E2               	addwfc	fsr1h,w,c
 12120  012740  6EDA               	movwf	fsr2h,c
 12121  012742  0E00               	movlw	0
 12122  012744  6EDF               	movwf	indf2,c
 12123  012746  D018               	goto	l5847
 12124  012748                     l5845:
 12125  012748  0E00               	movlw	0
 12126  01274A  6E3D               	movwf	(btemp+8)^0,c
 12127  01274C  0E00               	movlw	0
 12128  01274E  6E3E               	movwf	(btemp+9)^0,c
 12129  012750  0E00               	movlw	0
 12130  012752  6E3F               	movwf	(btemp+10)^0,c
 12131  012754  0E00               	movlw	0
 12132  012756  6E40               	movwf	(btemp+11)^0,c
 12133                           
 12134                           ;stkvar	_a @ sp[(-4)+-8]
 12135  012758  0EF4               	movlw	-12
 12136  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12137  012760  0EF5               	movlw	-11
 12138  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12139  012768  0EF6               	movlw	-10
 12140  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12141  012770  0EF7               	movlw	-9
 12142  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 12143  012778                     l5847:
 12144                           
 12145                           ;stkvar	_bexp @ sp[(-4)+1]
 12146                           ;stkvar	_aexp @ sp[(-4)+2]
 12147  012778  50E1               	movf	fsr1l,w,c
 12148  01277A  0FFE               	addlw	-2
 12149  01277C  6ED9               	movwf	fsr2l,c
 12150  01277E  50E2               	movf	fsr1h,w,c
 12151  012780  6EDA               	movwf	fsr2h,c
 12152  012782  0EFF               	movlw	255
 12153  012784  22DA               	addwfc	fsr2h,f,c
 12154  012786  0EFD               	movlw	-3
 12155  012788  50E3               	movf	plusw1,w,c
 12156  01278A  5CDE               	subwf	postinc2,w,c
 12157  01278C  B0D8               	btfsc	status,0,c
 12158  01278E  D0A4               	goto	l5883
 12159                           
 12160                           ;stkvar	_signs @ sp[(-4)+3]
 12161  012790  0EFF               	movlw	-1
 12162  012792  ACE3               	btfss	plusw1,6,c
 12163  012794  D002               	goto	l5853
 12164                           
 12165                           ;stkvar	_signs @ sp[(-4)+3]
 12166  012796  0EFF               	movlw	-1
 12167  012798  7EE3               	btg	plusw1,7,c
 12168  01279A                     l5853:
 12169                           
 12170                           ;stkvar	_bexp @ sp[(-4)+1]
 12171                           ;stkvar	_grs @ sp[(-4)+0]
 12172  01279A  0EFD               	movlw	-3
 12173  01279C  006F FF8C  F035    	movff	plusw1,btemp
 12174  0127A2  0EFC               	movlw	-4
 12175  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12176                           
 12177                           ;stkvar	_aexp @ sp[(-4)+2]
 12178                           ;stkvar	_bexp @ sp[(-4)+1]
 12179  0127AA  0EFE               	movlw	-2
 12180  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 12181  0127B2  0EFD               	movlw	-3
 12182  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12183                           
 12184                           ;stkvar	_grs @ sp[(-4)+0]
 12185                           ;stkvar	_aexp @ sp[(-4)+2]
 12186  0127BA  0EFC               	movlw	-4
 12187  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 12188  0127C2  0EFE               	movlw	-2
 12189  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12190                           
 12191                           ;stkvar	_b @ sp[(-4)+-4]
 12192                           ;stkvar	_grs @ sp[(-4)+0]
 12193  0127CA  0EF8               	movlw	-8
 12194  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 12195  0127D2  0EFC               	movlw	-4
 12196  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12197                           
 12198                           ;stkvar	_a @ sp[(-4)+-8]
 12199                           ;stkvar	_b @ sp[(-4)+-4]
 12200  0127DA  0EF4               	movlw	-12
 12201  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 12202  0127E2  0EF8               	movlw	-8
 12203  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12204                           
 12205                           ;stkvar	_grs @ sp[(-4)+0]
 12206                           ;stkvar	_a @ sp[(-4)+-8]
 12207  0127EA  0EFC               	movlw	-4
 12208  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 12209  0127F2  0EF4               	movlw	-12
 12210  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12211                           
 12212                           ;stkvar	_b @ sp[(-4)+-4]
 12213  0127FA  0EF9               	movlw	249
 12214  0127FC  24E1               	addwf	fsr1l,w,c
 12215  0127FE  6ED9               	movwf	fsr2l,c
 12216  012800  0EFF               	movlw	255
 12217  012802  20E2               	addwfc	fsr1h,w,c
 12218  012804  6EDA               	movwf	fsr2h,c
 12219  012806  50DF               	movf	indf2,w,c
 12220  012808  6E40               	movwf	(btemp+11)^0,c
 12221                           
 12222                           ;stkvar	_grs @ sp[(-4)+0]
 12223  01280A  0EFC               	movlw	-4
 12224  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12225                           
 12226                           ;stkvar	_a @ sp[(-4)+-8]
 12227  012812  0EF5               	movlw	245
 12228  012814  24E1               	addwf	fsr1l,w,c
 12229  012816  6ED9               	movwf	fsr2l,c
 12230  012818  0EFF               	movlw	255
 12231  01281A  20E2               	addwfc	fsr1h,w,c
 12232  01281C  6EDA               	movwf	fsr2h,c
 12233                           
 12234                           ;stkvar	_b @ sp[(-4)+-4]
 12235  01281E  0EF9               	movlw	249
 12236  012820  24E1               	addwf	fsr1l,w,c
 12237  012822  6EE9               	movwf	fsr0l,c
 12238  012824  0EFF               	movlw	255
 12239  012826  20E2               	addwfc	fsr1h,w,c
 12240  012828  6EEA               	movwf	fsr0h,c
 12241  01282A  006F FF7F FFEF     	movff	indf2,indf0
 12242                           
 12243                           ;stkvar	_grs @ sp[(-4)+0]
 12244                           ;stkvar	_a @ sp[(-4)+-8]
 12245  012830  0EF5               	movlw	245
 12246  012832  24E1               	addwf	fsr1l,w,c
 12247  012834  6ED9               	movwf	fsr2l,c
 12248  012836  0EFF               	movlw	255
 12249  012838  20E2               	addwfc	fsr1h,w,c
 12250  01283A  6EDA               	movwf	fsr2h,c
 12251  01283C  0EFC               	movlw	-4
 12252  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 12253                           
 12254                           ;stkvar	_b @ sp[(-4)+-4]
 12255  012844  0EFA               	movlw	250
 12256  012846  24E1               	addwf	fsr1l,w,c
 12257  012848  6ED9               	movwf	fsr2l,c
 12258  01284A  0EFF               	movlw	255
 12259  01284C  20E2               	addwfc	fsr1h,w,c
 12260  01284E  6EDA               	movwf	fsr2h,c
 12261  012850  50DF               	movf	indf2,w,c
 12262  012852  6E40               	movwf	(btemp+11)^0,c
 12263                           
 12264                           ;stkvar	_grs @ sp[(-4)+0]
 12265  012854  0EFC               	movlw	-4
 12266  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 12267                           
 12268                           ;stkvar	_a @ sp[(-4)+-8]
 12269  01285C  0EF6               	movlw	246
 12270  01285E  24E1               	addwf	fsr1l,w,c
 12271  012860  6ED9               	movwf	fsr2l,c
 12272  012862  0EFF               	movlw	255
 12273  012864  20E2               	addwfc	fsr1h,w,c
 12274  012866  6EDA               	movwf	fsr2h,c
 12275                           
 12276                           ;stkvar	_b @ sp[(-4)+-4]
 12277  012868  0EFA               	movlw	250
 12278  01286A  24E1               	addwf	fsr1l,w,c
 12279  01286C  6EE9               	movwf	fsr0l,c
 12280  01286E  0EFF               	movlw	255
 12281  012870  20E2               	addwfc	fsr1h,w,c
 12282  012872  6EEA               	movwf	fsr0h,c
 12283  012874  006F FF7F FFEF     	movff	indf2,indf0
 12284                           
 12285                           ;stkvar	_grs @ sp[(-4)+0]
 12286                           ;stkvar	_a @ sp[(-4)+-8]
 12287  01287A  0EF6               	movlw	246
 12288  01287C  24E1               	addwf	fsr1l,w,c
 12289  01287E  6ED9               	movwf	fsr2l,c
 12290  012880  0EFF               	movlw	255
 12291  012882  20E2               	addwfc	fsr1h,w,c
 12292  012884  6EDA               	movwf	fsr2h,c
 12293  012886  0EFC               	movlw	-4
 12294  012888  006F FF8F FFDF     	movff	plusw1,indf2
 12295                           
 12296                           ;stkvar	_b @ sp[(-4)+-4]
 12297  01288E  0EFB               	movlw	251
 12298  012890  24E1               	addwf	fsr1l,w,c
 12299  012892  6ED9               	movwf	fsr2l,c
 12300  012894  0EFF               	movlw	255
 12301  012896  20E2               	addwfc	fsr1h,w,c
 12302  012898  6EDA               	movwf	fsr2h,c
 12303  01289A  50DF               	movf	indf2,w,c
 12304  01289C  6E40               	movwf	(btemp+11)^0,c
 12305                           
 12306                           ;stkvar	_grs @ sp[(-4)+0]
 12307  01289E  0EFC               	movlw	-4
 12308  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 12309                           
 12310                           ;stkvar	_a @ sp[(-4)+-8]
 12311  0128A6  0EF7               	movlw	247
 12312  0128A8  24E1               	addwf	fsr1l,w,c
 12313  0128AA  6ED9               	movwf	fsr2l,c
 12314  0128AC  0EFF               	movlw	255
 12315  0128AE  20E2               	addwfc	fsr1h,w,c
 12316  0128B0  6EDA               	movwf	fsr2h,c
 12317                           
 12318                           ;stkvar	_b @ sp[(-4)+-4]
 12319  0128B2  0EFB               	movlw	251
 12320  0128B4  24E1               	addwf	fsr1l,w,c
 12321  0128B6  6EE9               	movwf	fsr0l,c
 12322  0128B8  0EFF               	movlw	255
 12323  0128BA  20E2               	addwfc	fsr1h,w,c
 12324  0128BC  6EEA               	movwf	fsr0h,c
 12325  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 12326                           
 12327                           ;stkvar	_grs @ sp[(-4)+0]
 12328                           ;stkvar	_a @ sp[(-4)+-8]
 12329  0128C4  0EF7               	movlw	247
 12330  0128C6  24E1               	addwf	fsr1l,w,c
 12331  0128C8  6ED9               	movwf	fsr2l,c
 12332  0128CA  0EFF               	movlw	255
 12333  0128CC  20E2               	addwfc	fsr1h,w,c
 12334  0128CE  6EDA               	movwf	fsr2h,c
 12335  0128D0  0EFC               	movlw	-4
 12336  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 12337  0128D8                     l5883:
 12338                           
 12339                           ;stkvar	_grs @ sp[(-4)+0]
 12340  0128D8  0EFC               	movlw	-4
 12341  0128DA  6AE3               	clrf	plusw1,c
 12342                           
 12343                           ;stkvar	_aexp @ sp[(-4)+2]
 12344  0128DC  0EFE               	movlw	-2
 12345  0128DE  50E3               	movf	plusw1,w,c
 12346  0128E0  6E3F               	movwf	(btemp+10)^0,c
 12347  0128E2  6A40               	clrf	(btemp+11)^0,c
 12348                           
 12349                           ;stkvar	_bexp @ sp[(-4)+1]
 12350  0128E4  0EFD               	movlw	-3
 12351  0128E6  50E3               	movf	plusw1,w,c
 12352  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 12353  0128EA  0E00               	movlw	0
 12354  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 12355  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 12356  0128F0  D062               	goto	l5907
 12357  0128F2  5040               	movf	(btemp+11)^0,w,c
 12358  0128F4  E104               	bnz	u4340
 12359  0128F6  0E1A               	movlw	26
 12360  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 12361  0128FA  A0D8               	btfss	status,0,c
 12362  0128FC  D05C               	goto	l5907
 12363  0128FE                     u4340:
 12364                           
 12365                           ;stkvar	_b @ sp[(-4)+-4]
 12366  0128FE  0EF8               	movlw	-8
 12367  012900  50E3               	movf	plusw1,w,c
 12368  012902  E10A               	bnz	u4351
 12369  012904  0EF9               	movlw	-7
 12370  012906  50E3               	movf	plusw1,w,c
 12371  012908  E107               	bnz	u4351
 12372  01290A  0EFA               	movlw	-6
 12373  01290C  50E3               	movf	plusw1,w,c
 12374  01290E  E104               	bnz	u4351
 12375  012910  0EFB               	movlw	-5
 12376  012912  50E3               	movf	plusw1,w,c
 12377  012914  B4D8               	btfsc	status,2,c
 12378  012916  D003               	goto	u4350
 12379  012918                     u4351:
 12380  012918  6A40               	clrf	(btemp+11)^0,c
 12381  01291A  2A40               	incf	(btemp+11)^0,f,c
 12382  01291C  D001               	goto	u4368
 12383  01291E                     u4350:
 12384  01291E  6A40               	clrf	(btemp+11)^0,c
 12385  012920                     u4368:
 12386                           
 12387                           ;stkvar	_grs @ sp[(-4)+0]
 12388  012920  0EFC               	movlw	-4
 12389  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 12390                           
 12391                           ;stkvar	_b @ sp[(-4)+-4]
 12392  012928  0EF8               	movlw	-8
 12393  01292A  6AE3               	clrf	plusw1,c
 12394  01292C  0EF9               	movlw	-7
 12395  01292E  6AE3               	clrf	plusw1,c
 12396  012930  0EFA               	movlw	-6
 12397  012932  6AE3               	clrf	plusw1,c
 12398  012934  0EFB               	movlw	-5
 12399  012936  6AE3               	clrf	plusw1,c
 12400                           
 12401                           ;stkvar	_aexp @ sp[(-4)+2]
 12402                           ;stkvar	_bexp @ sp[(-4)+1]
 12403  012938  0EFE               	movlw	-2
 12404  01293A  006F FF8C  F035    	movff	plusw1,btemp
 12405  012940  0EFD               	movlw	-3
 12406  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 12407  012948  D042               	goto	u4400
 12408  01294A                     l5893:
 12409                           
 12410                           ;stkvar	_grs @ sp[(-4)+0]
 12411  01294A  0EFC               	movlw	-4
 12412  01294C  A0E3               	btfss	plusw1,0,c
 12413  01294E  D00D               	goto	l5897
 12414                           
 12415                           ;stkvar	_grs @ sp[(-4)+0]
 12416  012950  0EFC               	movlw	-4
 12417  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 12418  012958  90D8               	bcf	status,0,c
 12419  01295A  3240               	rrcf	(btemp+11)^0,f,c
 12420  01295C  0E01               	movlw	1
 12421  01295E  1240               	iorwf	(btemp+11)^0,f,c
 12422                           
 12423                           ;stkvar	_grs @ sp[(-4)+0]
 12424  012960  0EFC               	movlw	-4
 12425  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 12426  012968  D009               	goto	l5899
 12427  01296A                     l5897:
 12428                           
 12429                           ;stkvar	_grs @ sp[(-4)+0]
 12430  01296A  50E1               	movf	fsr1l,w,c
 12431  01296C  0FFC               	addlw	-4
 12432  01296E  6ED9               	movwf	fsr2l,c
 12433  012970  50E2               	movf	fsr1h,w,c
 12434  012972  6EDA               	movwf	fsr2h,c
 12435  012974  0EFF               	movlw	255
 12436  012976  22DA               	addwfc	fsr2h,f,c
 12437  012978  90D8               	bcf	status,0,c
 12438  01297A  32DF               	rrcf	indf2,f,c
 12439  01297C                     l5899:
 12440                           
 12441                           ;stkvar	_b @ sp[(-4)+-4]
 12442  01297C  0EF8               	movlw	-8
 12443  01297E  A0E3               	btfss	plusw1,0,c
 12444  012980  D002               	goto	l5903
 12445                           
 12446                           ;stkvar	_grs @ sp[(-4)+0]
 12447  012982  0EFC               	movlw	-4
 12448  012984  8EE3               	bsf	plusw1,7,c
 12449  012986                     l5903:
 12450  012986  0E01               	movlw	1
 12451  012988  6E40               	movwf	(btemp+11)^0,c
 12452                           
 12453                           ;stkvar	_b @ sp[(-4)+-4]
 12454  01298A  50E1               	movf	fsr1l,w,c
 12455  01298C  0FF8               	addlw	-8
 12456  01298E  6ED9               	movwf	fsr2l,c
 12457  012990  50E2               	movf	fsr1h,w,c
 12458  012992  6EDA               	movwf	fsr2h,c
 12459  012994  0EFF               	movlw	255
 12460  012996  22DA               	addwfc	fsr2h,f,c
 12461  012998  2840               	incf	(btemp+11)^0,w,c
 12462  01299A  52DE               	movf	postinc2,f,c
 12463  01299C  D008               	goto	u4390
 12464  01299E                     u4395:
 12465  01299E  52DE               	movf	postinc2,f,c
 12466  0129A0  90D8               	bcf	status,0,c
 12467  0129A2  BEDC               	btfsc	preinc2,7,c
 12468  0129A4  80D8               	bsf	status,0,c
 12469  0129A6  32DD               	rrcf	postdec2,f,c
 12470  0129A8  32DD               	rrcf	postdec2,f,c
 12471  0129AA  32DD               	rrcf	postdec2,f,c
 12472  0129AC  32DE               	rrcf	postinc2,f,c
 12473  0129AE                     u4390:
 12474  0129AE  2EE8               	decfsz	wreg,f,c
 12475  0129B0  D7F6               	goto	u4395
 12476                           
 12477                           ;stkvar	_bexp @ sp[(-4)+1]
 12478  0129B2  0EFD               	movlw	-3
 12479  0129B4  2AE3               	incf	plusw1,f,c
 12480  0129B6                     l5907:
 12481                           
 12482                           ;stkvar	_aexp @ sp[(-4)+2]
 12483                           ;stkvar	_bexp @ sp[(-4)+1]
 12484  0129B6  50E1               	movf	fsr1l,w,c
 12485  0129B8  0FFD               	addlw	-3
 12486  0129BA  6ED9               	movwf	fsr2l,c
 12487  0129BC  50E2               	movf	fsr1h,w,c
 12488  0129BE  6EDA               	movwf	fsr2h,c
 12489  0129C0  0EFF               	movlw	255
 12490  0129C2  22DA               	addwfc	fsr2h,f,c
 12491  0129C4  0EFE               	movlw	-2
 12492  0129C6  50E3               	movf	plusw1,w,c
 12493  0129C8  5CDE               	subwf	postinc2,w,c
 12494  0129CA  A0D8               	btfss	status,0,c
 12495  0129CC  D7BE               	goto	l5893
 12496  0129CE                     u4400:
 12497                           
 12498                           ;stkvar	_signs @ sp[(-4)+3]
 12499  0129CE  0EFF               	movlw	-1
 12500  0129D0  BCE3               	btfsc	plusw1,6,c
 12501  0129D2  D066               	goto	l5935
 12502                           
 12503                           ;stkvar	_bexp @ sp[(-4)+1]
 12504  0129D4  0EFD               	movlw	-3
 12505  0129D6  50E3               	movf	plusw1,w,c
 12506  0129D8  B4D8               	btfsc	status,2,c
 12507  0129DA  D0F2               	goto	u4500
 12508                           
 12509                           ;stkvar	_a @ sp[(-4)+-8]
 12510                           ;stkvar	_b @ sp[(-4)+-4]
 12511  0129DC  0EF8               	movlw	-8
 12512  0129DE  50E3               	movf	plusw1,w,c
 12513  0129E0  6E35               	movwf	btemp^0,c
 12514  0129E2  0EF4               	movlw	-12
 12515  0129E4  50E3               	movf	plusw1,w,c
 12516  0129E6  2635               	addwf	btemp^0,f,c
 12517  0129E8  0EF8               	movlw	-8
 12518  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12519  0129F0  0EF9               	movlw	-7
 12520  0129F2  50E3               	movf	plusw1,w,c
 12521  0129F4  6E35               	movwf	btemp^0,c
 12522  0129F6  0EF5               	movlw	-11
 12523  0129F8  50E3               	movf	plusw1,w,c
 12524  0129FA  2235               	addwfc	btemp^0,f,c
 12525  0129FC  0EF9               	movlw	-7
 12526  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 12527  012A04  0EFA               	movlw	-6
 12528  012A06  50E3               	movf	plusw1,w,c
 12529  012A08  6E35               	movwf	btemp^0,c
 12530  012A0A  0EF6               	movlw	-10
 12531  012A0C  50E3               	movf	plusw1,w,c
 12532  012A0E  2235               	addwfc	btemp^0,f,c
 12533  012A10  0EFA               	movlw	-6
 12534  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 12535  012A18  0EFB               	movlw	-5
 12536  012A1A  50E3               	movf	plusw1,w,c
 12537  012A1C  6E35               	movwf	btemp^0,c
 12538  012A1E  0EF7               	movlw	-9
 12539  012A20  50E3               	movf	plusw1,w,c
 12540  012A22  2235               	addwfc	btemp^0,f,c
 12541  012A24  0EFB               	movlw	-5
 12542  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 12543                           
 12544                           ;stkvar	_b @ sp[(-4)+-4]
 12545  012A2C  0EFB               	movlw	-5
 12546  012A2E  A0E3               	btfss	plusw1,0,c
 12547  012A30  D101               	goto	u4540
 12548                           
 12549                           ;stkvar	_grs @ sp[(-4)+0]
 12550  012A32  0EFC               	movlw	-4
 12551  012A34  A0E3               	btfss	plusw1,0,c
 12552  012A36  D00D               	goto	l5925
 12553                           
 12554                           ;stkvar	_grs @ sp[(-4)+0]
 12555  012A38  0EFC               	movlw	-4
 12556  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 12557  012A40  90D8               	bcf	status,0,c
 12558  012A42  3240               	rrcf	(btemp+11)^0,f,c
 12559  012A44  0E01               	movlw	1
 12560  012A46  1240               	iorwf	(btemp+11)^0,f,c
 12561                           
 12562                           ;stkvar	_grs @ sp[(-4)+0]
 12563  012A48  0EFC               	movlw	-4
 12564  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 12565  012A50  D009               	goto	l5927
 12566  012A52                     l5925:
 12567                           
 12568                           ;stkvar	_grs @ sp[(-4)+0]
 12569  012A52  50E1               	movf	fsr1l,w,c
 12570  012A54  0FFC               	addlw	-4
 12571  012A56  6ED9               	movwf	fsr2l,c
 12572  012A58  50E2               	movf	fsr1h,w,c
 12573  012A5A  6EDA               	movwf	fsr2h,c
 12574  012A5C  0EFF               	movlw	255
 12575  012A5E  22DA               	addwfc	fsr2h,f,c
 12576  012A60  90D8               	bcf	status,0,c
 12577  012A62  32DF               	rrcf	indf2,f,c
 12578  012A64                     l5927:
 12579                           
 12580                           ;stkvar	_b @ sp[(-4)+-4]
 12581  012A64  0EF8               	movlw	-8
 12582  012A66  A0E3               	btfss	plusw1,0,c
 12583  012A68  D002               	goto	l5931
 12584                           
 12585                           ;stkvar	_grs @ sp[(-4)+0]
 12586  012A6A  0EFC               	movlw	-4
 12587  012A6C  8EE3               	bsf	plusw1,7,c
 12588  012A6E                     l5931:
 12589  012A6E  0E01               	movlw	1
 12590  012A70  6E40               	movwf	(btemp+11)^0,c
 12591                           
 12592                           ;stkvar	_b @ sp[(-4)+-4]
 12593  012A72  50E1               	movf	fsr1l,w,c
 12594  012A74  0FF8               	addlw	-8
 12595  012A76  6ED9               	movwf	fsr2l,c
 12596  012A78  50E2               	movf	fsr1h,w,c
 12597  012A7A  6EDA               	movwf	fsr2h,c
 12598  012A7C  0EFF               	movlw	255
 12599  012A7E  22DA               	addwfc	fsr2h,f,c
 12600  012A80  2840               	incf	(btemp+11)^0,w,c
 12601  012A82  52DE               	movf	postinc2,f,c
 12602  012A84  D008               	goto	u4460
 12603  012A86                     u4465:
 12604  012A86  52DE               	movf	postinc2,f,c
 12605  012A88  90D8               	bcf	status,0,c
 12606  012A8A  BEDC               	btfsc	preinc2,7,c
 12607  012A8C  80D8               	bsf	status,0,c
 12608  012A8E  32DD               	rrcf	postdec2,f,c
 12609  012A90  32DD               	rrcf	postdec2,f,c
 12610  012A92  32DD               	rrcf	postdec2,f,c
 12611  012A94  32DE               	rrcf	postinc2,f,c
 12612  012A96                     u4460:
 12613  012A96  2EE8               	decfsz	wreg,f,c
 12614  012A98  D7F6               	goto	u4465
 12615                           
 12616                           ;stkvar	_bexp @ sp[(-4)+1]
 12617  012A9A  0EFD               	movlw	-3
 12618  012A9C  2AE3               	incf	plusw1,f,c
 12619  012A9E  D0CA               	goto	u4540
 12620  012AA0                     l5935:
 12621                           
 12622                           ;stkvar	_a @ sp[(-4)+-8]
 12623                           ;stkvar	_b @ sp[(-4)+-4]
 12624  012AA0  50E1               	movf	fsr1l,w,c
 12625  012AA2  0FF8               	addlw	-8
 12626  012AA4  6ED9               	movwf	fsr2l,c
 12627  012AA6  50E2               	movf	fsr1h,w,c
 12628  012AA8  6EDA               	movwf	fsr2h,c
 12629  012AAA  0EFF               	movlw	255
 12630  012AAC  22DA               	addwfc	fsr2h,f,c
 12631  012AAE  0EF4               	movlw	-12
 12632  012AB0  50E3               	movf	plusw1,w,c
 12633  012AB2  5CDE               	subwf	postinc2,w,c
 12634  012AB4  0EF5               	movlw	-11
 12635  012AB6  50E3               	movf	plusw1,w,c
 12636  012AB8  58DE               	subwfb	postinc2,w,c
 12637  012ABA  0EF6               	movlw	-10
 12638  012ABC  50E3               	movf	plusw1,w,c
 12639  012ABE  58DE               	subwfb	postinc2,w,c
 12640  012AC0  50DE               	movf	postinc2,w,c
 12641  012AC2  0A80               	xorlw	128
 12642  012AC4  6E35               	movwf	btemp^0,c
 12643  012AC6  0EF7               	movlw	-9
 12644  012AC8  50E3               	movf	plusw1,w,c
 12645  012ACA  0A80               	xorlw	128
 12646  012ACC  5835               	subwfb	btemp^0,w,c
 12647  012ACE  B0D8               	btfsc	status,0,c
 12648  012AD0  D053               	goto	l5947
 12649                           
 12650                           ;stkvar	_b @ sp[(-4)+-4]
 12651                           ;stkvar	_a @ sp[(-4)+-8]
 12652  012AD2  0EF4               	movlw	-12
 12653  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 12654  012ADA  0EF5               	movlw	-11
 12655  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 12656  012AE2  0EF6               	movlw	-10
 12657  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 12658  012AEA  0EF7               	movlw	-9
 12659  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 12660  012AF2  0EF8               	movlw	-8
 12661  012AF4  50E3               	movf	plusw1,w,c
 12662  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 12663  012AF8  0EF9               	movlw	-7
 12664  012AFA  50E3               	movf	plusw1,w,c
 12665  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 12666  012AFE  0EFA               	movlw	-6
 12667  012B00  50E3               	movf	plusw1,w,c
 12668  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 12669  012B04  0EFB               	movlw	-5
 12670  012B06  50E3               	movf	plusw1,w,c
 12671  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 12672  012B0A  0EFF               	movlw	255
 12673  012B0C  243D               	addwf	(btemp+8)^0,w,c
 12674  012B0E  6E39               	movwf	(btemp+4)^0,c
 12675  012B10  0EFF               	movlw	255
 12676  012B12  203E               	addwfc	(btemp+9)^0,w,c
 12677  012B14  6E3A               	movwf	(btemp+5)^0,c
 12678  012B16  0EFF               	movlw	255
 12679  012B18  203F               	addwfc	(btemp+10)^0,w,c
 12680  012B1A  6E3B               	movwf	(btemp+6)^0,c
 12681  012B1C  0EFF               	movlw	255
 12682  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 12683  012B20  6E3C               	movwf	(btemp+7)^0,c
 12684                           
 12685                           ;stkvar	_b @ sp[(-4)+-4]
 12686  012B22  0EF8               	movlw	-8
 12687  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 12688  012B2A  0EF9               	movlw	-7
 12689  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 12690  012B32  0EFA               	movlw	-6
 12691  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12692  012B3A  0EFB               	movlw	-5
 12693  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12694                           
 12695                           ;stkvar	_signs @ sp[(-4)+3]
 12696  012B42  0EFF               	movlw	-1
 12697  012B44  7EE3               	btg	plusw1,7,c
 12698                           
 12699                           ;stkvar	_grs @ sp[(-4)+0]
 12700  012B46  0EFC               	movlw	-4
 12701  012B48  50E3               	movf	plusw1,w,c
 12702  012B4A  0800               	sublw	0
 12703  012B4C  6E40               	movwf	(btemp+11)^0,c
 12704                           
 12705                           ;stkvar	_grs @ sp[(-4)+0]
 12706  012B4E  0EFC               	movlw	-4
 12707  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 12708                           
 12709                           ;stkvar	_grs @ sp[(-4)+0]
 12710  012B56  0EFC               	movlw	-4
 12711  012B58  50E3               	movf	plusw1,w,c
 12712  012B5A  A4D8               	btfss	status,2,c
 12713  012B5C  D020               	goto	l5949
 12714                           
 12715                           ;stkvar	_b @ sp[(-4)+-4]
 12716  012B5E  50E1               	movf	fsr1l,w,c
 12717  012B60  0FF8               	addlw	-8
 12718  012B62  6ED9               	movwf	fsr2l,c
 12719  012B64  50E2               	movf	fsr1h,w,c
 12720  012B66  6EDA               	movwf	fsr2h,c
 12721  012B68  0EFF               	movlw	255
 12722  012B6A  22DA               	addwfc	fsr2h,f,c
 12723  012B6C  2ADE               	incf	postinc2,f,c
 12724  012B6E  0E00               	movlw	0
 12725  012B70  22DE               	addwfc	postinc2,f,c
 12726  012B72  22DE               	addwfc	postinc2,f,c
 12727  012B74  22DE               	addwfc	postinc2,f,c
 12728  012B76  D013               	goto	l5949
 12729  012B78                     l5947:
 12730                           
 12731                           ;stkvar	_a @ sp[(-4)+-8]
 12732                           ;stkvar	_b @ sp[(-4)+-4]
 12733  012B78  50E1               	movf	fsr1l,w,c
 12734  012B7A  0FF8               	addlw	-8
 12735  012B7C  6ED9               	movwf	fsr2l,c
 12736  012B7E  50E2               	movf	fsr1h,w,c
 12737  012B80  6EDA               	movwf	fsr2h,c
 12738  012B82  0EFF               	movlw	255
 12739  012B84  22DA               	addwfc	fsr2h,f,c
 12740  012B86  0EF4               	movlw	-12
 12741  012B88  50E3               	movf	plusw1,w,c
 12742  012B8A  5EDE               	subwf	postinc2,f,c
 12743  012B8C  0EF5               	movlw	-11
 12744  012B8E  50E3               	movf	plusw1,w,c
 12745  012B90  5ADE               	subwfb	postinc2,f,c
 12746  012B92  0EF6               	movlw	-10
 12747  012B94  50E3               	movf	plusw1,w,c
 12748  012B96  5ADE               	subwfb	postinc2,f,c
 12749  012B98  0EF7               	movlw	-9
 12750  012B9A  50E3               	movf	plusw1,w,c
 12751  012B9C  5ADE               	subwfb	postinc2,f,c
 12752  012B9E                     l5949:
 12753                           
 12754                           ;stkvar	_b @ sp[(-4)+-4]
 12755  012B9E  0EF8               	movlw	-8
 12756  012BA0  50E3               	movf	plusw1,w,c
 12757  012BA2  E145               	bnz	l5971
 12758  012BA4  0EF9               	movlw	-7
 12759  012BA6  50E3               	movf	plusw1,w,c
 12760  012BA8  E142               	bnz	l5971
 12761  012BAA  0EFA               	movlw	-6
 12762  012BAC  50E3               	movf	plusw1,w,c
 12763  012BAE  E13F               	bnz	l5971
 12764  012BB0  0EFB               	movlw	-5
 12765  012BB2  50E3               	movf	plusw1,w,c
 12766  012BB4  A4D8               	btfss	status,2,c
 12767  012BB6  D03B               	goto	l5971
 12768                           
 12769                           ;stkvar	_grs @ sp[(-4)+0]
 12770  012BB8  0EFC               	movlw	-4
 12771  012BBA  50E3               	movf	plusw1,w,c
 12772  012BBC  A4D8               	btfss	status,2,c
 12773  012BBE  D037               	goto	l5971
 12774  012BC0                     u4500:
 12775  012BC0  0E00               	movlw	0
 12776  012BC2  6E35               	movwf	btemp^0,c
 12777  012BC4  0E00               	movlw	0
 12778  012BC6  6E36               	movwf	(btemp+1)^0,c
 12779  012BC8  0E00               	movlw	0
 12780  012BCA  6E37               	movwf	(btemp+2)^0,c
 12781  012BCC  0E00               	movlw	0
 12782  012BCE  6E38               	movwf	(btemp+3)^0,c
 12783  012BD0  D0C6               	goto	l2474
 12784  012BD2                     l5957:
 12785                           
 12786                           ;stkvar	_b @ sp[(-4)+-4]
 12787  012BD2  90D8               	bcf	status,0,c
 12788  012BD4  0EF8               	movlw	-8
 12789  012BD6  36E3               	rlcf	plusw1,f,c
 12790  012BD8  0EF9               	movlw	-7
 12791  012BDA  36E3               	rlcf	plusw1,f,c
 12792  012BDC  0EFA               	movlw	-6
 12793  012BDE  36E3               	rlcf	plusw1,f,c
 12794  012BE0  0EFB               	movlw	-5
 12795  012BE2  36E3               	rlcf	plusw1,f,c
 12796                           
 12797                           ;stkvar	_grs @ sp[(-4)+0]
 12798  012BE4  0EFC               	movlw	-4
 12799  012BE6  AEE3               	btfss	plusw1,7,c
 12800  012BE8  D002               	goto	l2486
 12801                           
 12802                           ;stkvar	_b @ sp[(-4)+-4]
 12803  012BEA  0EF8               	movlw	-8
 12804  012BEC  80E3               	bsf	plusw1,0,c
 12805  012BEE                     l2486:
 12806                           
 12807                           ;stkvar	_grs @ sp[(-4)+0]
 12808  012BEE  0EFC               	movlw	-4
 12809  012BF0  A0E3               	btfss	plusw1,0,c
 12810  012BF2  D00E               	goto	l5965
 12811                           
 12812                           ;stkvar	_grs @ sp[(-4)+0]
 12813  012BF4  0EFC               	movlw	-4
 12814  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 12815  012BFC  90D8               	bcf	status,0,c
 12816  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 12817  012C00  6E3F               	movwf	(btemp+10)^0,c
 12818  012C02  0E01               	movlw	1
 12819  012C04  123F               	iorwf	(btemp+10)^0,f,c
 12820                           
 12821                           ;stkvar	_grs @ sp[(-4)+0]
 12822  012C06  0EFC               	movlw	-4
 12823  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12824  012C0E  D009               	goto	l5967
 12825  012C10                     l5965:
 12826                           
 12827                           ;stkvar	_grs @ sp[(-4)+0]
 12828  012C10  50E1               	movf	fsr1l,w,c
 12829  012C12  0FFC               	addlw	-4
 12830  012C14  6ED9               	movwf	fsr2l,c
 12831  012C16  50E2               	movf	fsr1h,w,c
 12832  012C18  6EDA               	movwf	fsr2h,c
 12833  012C1A  0EFF               	movlw	255
 12834  012C1C  22DA               	addwfc	fsr2h,f,c
 12835  012C1E  90D8               	bcf	status,0,c
 12836  012C20  36DF               	rlcf	indf2,f,c
 12837  012C22                     l5967:
 12838                           
 12839                           ;stkvar	_bexp @ sp[(-4)+1]
 12840  012C22  0EFD               	movlw	-3
 12841  012C24  50E3               	movf	plusw1,w,c
 12842  012C26  B4D8               	btfsc	status,2,c
 12843  012C28  D002               	goto	l5971
 12844                           
 12845                           ;stkvar	_bexp @ sp[(-4)+1]
 12846  012C2A  0EFD               	movlw	-3
 12847  012C2C  06E3               	decf	plusw1,f,c
 12848  012C2E                     l5971:
 12849                           
 12850                           ;stkvar	_b @ sp[(-4)+-4]
 12851  012C2E  0EFA               	movlw	-6
 12852  012C30  AEE3               	btfss	plusw1,7,c
 12853  012C32  D7CF               	goto	l5957
 12854  012C34                     u4540:
 12855                           
 12856                           ;stkvar	_aexp @ sp[(-4)+2]
 12857  012C34  0EFE               	movlw	-2
 12858  012C36  6AE3               	clrf	plusw1,c
 12859                           
 12860                           ;stkvar	_grs @ sp[(-4)+0]
 12861  012C38  0EFC               	movlw	-4
 12862  012C3A  AEE3               	btfss	plusw1,7,c
 12863  012C3C  D00F               	goto	l5985
 12864                           
 12865                           ;stkvar	_grs @ sp[(-4)+0]
 12866  012C3E  0EFC               	movlw	-4
 12867  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 12868  012C46  0E7F               	movlw	127
 12869  012C48  1640               	andwf	(btemp+11)^0,f,c
 12870  012C4A  B4D8               	btfsc	status,2,c
 12871  012C4C  D004               	goto	l5981
 12872  012C4E                     u4560:
 12873                           
 12874                           ;stkvar	_aexp @ sp[(-4)+2]
 12875  012C4E  0EFE               	movlw	-2
 12876  012C50  6AE3               	clrf	plusw1,c
 12877  012C52  2AE3               	incf	plusw1,f,c
 12878  012C54  D003               	goto	l5985
 12879  012C56                     l5981:
 12880                           
 12881                           ;stkvar	_b @ sp[(-4)+-4]
 12882  012C56  0EF8               	movlw	-8
 12883  012C58  B0E3               	btfsc	plusw1,0,c
 12884  012C5A  D7F9               	goto	u4560
 12885  012C5C                     l5985:
 12886                           
 12887                           ;stkvar	_aexp @ sp[(-4)+2]
 12888  012C5C  0EFE               	movlw	-2
 12889  012C5E  50E3               	movf	plusw1,w,c
 12890  012C60  B4D8               	btfsc	status,2,c
 12891  012C62  D02B               	goto	l5997
 12892                           
 12893                           ;stkvar	_b @ sp[(-4)+-4]
 12894  012C64  50E1               	movf	fsr1l,w,c
 12895  012C66  0FF8               	addlw	-8
 12896  012C68  6ED9               	movwf	fsr2l,c
 12897  012C6A  50E2               	movf	fsr1h,w,c
 12898  012C6C  6EDA               	movwf	fsr2h,c
 12899  012C6E  0EFF               	movlw	255
 12900  012C70  22DA               	addwfc	fsr2h,f,c
 12901  012C72  2ADE               	incf	postinc2,f,c
 12902  012C74  0E00               	movlw	0
 12903  012C76  22DE               	addwfc	postinc2,f,c
 12904  012C78  22DE               	addwfc	postinc2,f,c
 12905  012C7A  22DE               	addwfc	postinc2,f,c
 12906                           
 12907                           ;stkvar	_b @ sp[(-4)+-4]
 12908  012C7C  0EFB               	movlw	-5
 12909  012C7E  A0E3               	btfss	plusw1,0,c
 12910  012C80  D01C               	goto	l5997
 12911  012C82  0E01               	movlw	1
 12912  012C84  6E40               	movwf	(btemp+11)^0,c
 12913                           
 12914                           ;stkvar	_b @ sp[(-4)+-4]
 12915  012C86  50E1               	movf	fsr1l,w,c
 12916  012C88  0FF8               	addlw	-8
 12917  012C8A  6ED9               	movwf	fsr2l,c
 12918  012C8C  50E2               	movf	fsr1h,w,c
 12919  012C8E  6EDA               	movwf	fsr2h,c
 12920  012C90  0EFF               	movlw	255
 12921  012C92  22DA               	addwfc	fsr2h,f,c
 12922  012C94  2840               	incf	(btemp+11)^0,w,c
 12923  012C96  52DE               	movf	postinc2,f,c
 12924  012C98  D008               	goto	u4600
 12925  012C9A                     u4605:
 12926  012C9A  52DE               	movf	postinc2,f,c
 12927  012C9C  90D8               	bcf	status,0,c
 12928  012C9E  BEDC               	btfsc	preinc2,7,c
 12929  012CA0  80D8               	bsf	status,0,c
 12930  012CA2  32DD               	rrcf	postdec2,f,c
 12931  012CA4  32DD               	rrcf	postdec2,f,c
 12932  012CA6  32DD               	rrcf	postdec2,f,c
 12933  012CA8  32DE               	rrcf	postinc2,f,c
 12934  012CAA                     u4600:
 12935  012CAA  2EE8               	decfsz	wreg,f,c
 12936  012CAC  D7F6               	goto	u4605
 12937                           
 12938                           ;stkvar	_bexp @ sp[(-4)+1]
 12939  012CAE  0EFD               	movlw	-3
 12940  012CB0  28E3               	incf	plusw1,w,c
 12941  012CB2  B4D8               	btfsc	status,2,c
 12942  012CB4  D002               	goto	l5997
 12943                           
 12944                           ;stkvar	_bexp @ sp[(-4)+1]
 12945  012CB6  0EFD               	movlw	-3
 12946  012CB8  2AE3               	incf	plusw1,f,c
 12947  012CBA                     l5997:
 12948                           
 12949                           ;stkvar	_bexp @ sp[(-4)+1]
 12950  012CBA  0EFD               	movlw	-3
 12951  012CBC  28E3               	incf	plusw1,w,c
 12952  012CBE  B4D8               	btfsc	status,2,c
 12953  012CC0  D004               	goto	u4630
 12954                           
 12955                           ;stkvar	_bexp @ sp[(-4)+1]
 12956  012CC2  0EFD               	movlw	-3
 12957  012CC4  50E3               	movf	plusw1,w,c
 12958  012CC6  A4D8               	btfss	status,2,c
 12959  012CC8  D00E               	goto	l6007
 12960  012CCA                     u4630:
 12961                           
 12962                           ;stkvar	_b @ sp[(-4)+-4]
 12963  012CCA  0EF8               	movlw	-8
 12964  012CCC  6AE3               	clrf	plusw1,c
 12965  012CCE  0EF9               	movlw	-7
 12966  012CD0  6AE3               	clrf	plusw1,c
 12967  012CD2  0EFA               	movlw	-6
 12968  012CD4  6AE3               	clrf	plusw1,c
 12969  012CD6  0EFB               	movlw	-5
 12970  012CD8  6AE3               	clrf	plusw1,c
 12971                           
 12972                           ;stkvar	_bexp @ sp[(-4)+1]
 12973  012CDA  0EFD               	movlw	-3
 12974  012CDC  50E3               	movf	plusw1,w,c
 12975  012CDE  A4D8               	btfss	status,2,c
 12976  012CE0  D002               	goto	l6007
 12977                           
 12978                           ;stkvar	_signs @ sp[(-4)+3]
 12979  012CE2  0EFF               	movlw	-1
 12980  012CE4  6AE3               	clrf	plusw1,c
 12981  012CE6                     l6007:
 12982                           
 12983                           ;stkvar	_bexp @ sp[(-4)+1]
 12984  012CE6  0EFD               	movlw	-3
 12985  012CE8  A0E3               	btfss	plusw1,0,c
 12986  012CEA  D009               	goto	l6011
 12987                           
 12988                           ;stkvar	_b @ sp[(-4)+-4]
 12989  012CEC  0EFA               	movlw	250
 12990  012CEE  24E1               	addwf	fsr1l,w,c
 12991  012CF0  6ED9               	movwf	fsr2l,c
 12992  012CF2  0EFF               	movlw	255
 12993  012CF4  20E2               	addwfc	fsr1h,w,c
 12994  012CF6  6EDA               	movwf	fsr2h,c
 12995  012CF8  0E00               	movlw	0
 12996  012CFA  8EDB               	bsf	plusw2,7,c
 12997  012CFC  D008               	goto	l6013
 12998  012CFE                     l6011:
 12999                           
 13000                           ;stkvar	_b @ sp[(-4)+-4]
 13001  012CFE  0EFA               	movlw	250
 13002  012D00  24E1               	addwf	fsr1l,w,c
 13003  012D02  6ED9               	movwf	fsr2l,c
 13004  012D04  0EFF               	movlw	255
 13005  012D06  20E2               	addwfc	fsr1h,w,c
 13006  012D08  6EDA               	movwf	fsr2h,c
 13007  012D0A  0E7F               	movlw	127
 13008  012D0C  16DF               	andwf	indf2,f,c
 13009  012D0E                     l6013:
 13010                           
 13011                           ;stkvar	_b @ sp[(-4)+-4]
 13012  012D0E  0EFB               	movlw	251
 13013  012D10  24E1               	addwf	fsr1l,w,c
 13014  012D12  6ED9               	movwf	fsr2l,c
 13015  012D14  0EFF               	movlw	255
 13016  012D16  20E2               	addwfc	fsr1h,w,c
 13017  012D18  6EDA               	movwf	fsr2h,c
 13018                           
 13019                           ;stkvar	_bexp @ sp[(-4)+1]
 13020  012D1A  0EFD               	movlw	-3
 13021  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 13022  012D22  90D8               	bcf	status,0,c
 13023  012D24  3040               	rrcf	(btemp+11)^0,w,c
 13024  012D26  6EDF               	movwf	indf2,c
 13025                           
 13026                           ;stkvar	_signs @ sp[(-4)+3]
 13027  012D28  0EFF               	movlw	-1
 13028  012D2A  AEE3               	btfss	plusw1,7,c
 13029  012D2C  D008               	goto	l6019
 13030                           
 13031                           ;stkvar	_b @ sp[(-4)+-4]
 13032  012D2E  0EFB               	movlw	251
 13033  012D30  24E1               	addwf	fsr1l,w,c
 13034  012D32  6ED9               	movwf	fsr2l,c
 13035  012D34  0EFF               	movlw	255
 13036  012D36  20E2               	addwfc	fsr1h,w,c
 13037  012D38  6EDA               	movwf	fsr2h,c
 13038  012D3A  0E00               	movlw	0
 13039  012D3C  8EDB               	bsf	plusw2,7,c
 13040  012D3E                     l6019:
 13041                           
 13042                           ;stkvar	_b @ sp[(-4)+-4]
 13043  012D3E  0EF8               	movlw	-8
 13044  012D40  006F FF8C  F035    	movff	plusw1,btemp
 13045  012D46  0EF9               	movlw	-7
 13046  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 13047  012D4E  0EFA               	movlw	-6
 13048  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 13049  012D56  0EFB               	movlw	-5
 13050  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 13051  012D5E                     l2474:
 13052                           
 13053                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13054  012D5E  0EF4               	movlw	244
 13055  012D60  26E1               	addwf	fsr1l,f,c
 13056  012D62  0EFF               	movlw	255
 13057  012D64  22E2               	addwfc	fsr1h,f,c
 13058  012D66  0012               	return		;funcret
 13059  012D68                     __end_of___fladd:
 13060                           	opt callstack 0
 13061                           
 13062 ;; *************** function ___flneg *****************
 13063 ;; Defined at:
 13064 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;  f1              4  [STACK] unsigned char 
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;		None
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  4  [STACK] unsigned char 
 13071 ;; Registers used:
 13072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/4
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13082 ;;Total ram usage:        0 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    6
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		_efgtoa
 13089 ;; This function uses a reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text45
 13093  0171F8                     __ptext45:
 13094                           	opt callstack 0
 13095  0171F8                     ___flneg:
 13096                           	opt callstack 17
 13097                           
 13098                           ;stkvar	_f1 @ sp[(0)+-4]
 13099                           
 13100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13101                           ;incstack = 0
 13102  0171F8  0EFC               	movlw	-4
 13103  0171FA  50E3               	movf	plusw1,w,c
 13104  0171FC  E10A               	bnz	u5940
 13105  0171FE  0EFD               	movlw	-3
 13106  017200  50E3               	movf	plusw1,w,c
 13107  017202  E107               	bnz	u5940
 13108  017204  0EFE               	movlw	-2
 13109  017206  50E3               	movf	plusw1,w,c
 13110  017208  E104               	bnz	u5940
 13111  01720A  0EFF               	movlw	-1
 13112  01720C  50E3               	movf	plusw1,w,c
 13113  01720E  B4D8               	btfsc	status,2,c
 13114  017210  D002               	goto	l6687
 13115  017212                     u5940:
 13116                           
 13117                           ;stkvar	_f1 @ sp[(0)+-4]
 13118  017212  0EFF               	movlw	-1
 13119  017214  7EE3               	btg	plusw1,7,c
 13120  017216                     l6687:
 13121                           
 13122                           ;stkvar	_f1 @ sp[(0)+-4]
 13123  017216  0EFC               	movlw	-4
 13124  017218  006F FF8C  F035    	movff	plusw1,btemp
 13125  01721E  0EFD               	movlw	-3
 13126  017220  006F FF8C  F036    	movff	plusw1,btemp+1
 13127  017226  0EFE               	movlw	-2
 13128  017228  006F FF8C  F037    	movff	plusw1,btemp+2
 13129  01722E  0EFF               	movlw	-1
 13130  017230  006F FF8C  F038    	movff	plusw1,btemp+3
 13131                           
 13132                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13133  017236  52E5               	movf	postdec1,f,c
 13134  017238  52E5               	movf	postdec1,f,c
 13135  01723A  52E5               	movf	postdec1,f,c
 13136  01723C  52E5               	movf	postdec1,f,c
 13137  01723E  0012               	return		;funcret
 13138  017240                     __end_of___flneg:
 13139                           	opt callstack 0
 13140                           
 13141 ;; *************** function ___flmul *****************
 13142 ;; Defined at:
 13143 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;  b               4  [STACK] unsigned char 
 13146 ;;  a               4  [STACK] unsigned char 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  prod            4  [STACK] struct .
 13149 ;;  grs             4  [STACK] unsigned long 
 13150 ;;  temp            2  [STACK] struct .
 13151 ;;  bexp            1  [STACK] unsigned char 
 13152 ;;  aexp            1  [STACK] unsigned char 
 13153 ;;  sign            1  [STACK] unsigned char 
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  4  [STACK] unsigned char 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/4
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;Total ram usage:        0 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:    6
 13170 ;; This function calls:
 13171 ;;		Nothing
 13172 ;; This function is called by:
 13173 ;;		_main
 13174 ;;		_efgtoa
 13175 ;; This function uses a reentrant model
 13176 ;;
 13177                           
 13178                           	psect	text46
 13179  011D82                     __ptext46:
 13180                           	opt callstack 0
 13181  011D82                     ___flmul:
 13182                           	opt callstack 0
 13183                           
 13184                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13185  011D82  0E0D               	movlw	13
 13186  011D84  26E1               	addwf	fsr1l,f,c
 13187  011D86  0E00               	movlw	0
 13188  011D88  22E2               	addwfc	fsr1h,f,c
 13189                           
 13190                           ;stkvar	_b @ sp[(-13)+-4]
 13191                           
 13192                           ;incstack = 0
 13193  011D8A  0EF2               	movlw	242
 13194  011D8C  24E1               	addwf	fsr1l,w,c
 13195  011D8E  6ED9               	movwf	fsr2l,c
 13196  011D90  0EFF               	movlw	255
 13197  011D92  20E2               	addwfc	fsr1h,w,c
 13198  011D94  6EDA               	movwf	fsr2h,c
 13199  011D96  50DF               	movf	indf2,w,c
 13200  011D98  6E40               	movwf	(btemp+11)^0,c
 13201  011D9A  0E80               	movlw	128
 13202  011D9C  1640               	andwf	(btemp+11)^0,f,c
 13203                           
 13204                           ;stkvar	_sign @ sp[(-13)+12]
 13205  011D9E  0EFF               	movlw	-1
 13206  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13207                           
 13208                           ;stkvar	_b @ sp[(-13)+-4]
 13209  011DA6  0EF2               	movlw	242
 13210  011DA8  24E1               	addwf	fsr1l,w,c
 13211  011DAA  6ED9               	movwf	fsr2l,c
 13212  011DAC  0EFF               	movlw	255
 13213  011DAE  20E2               	addwfc	fsr1h,w,c
 13214  011DB0  6EDA               	movwf	fsr2h,c
 13215  011DB2  50DF               	movf	indf2,w,c
 13216  011DB4  6E40               	movwf	(btemp+11)^0,c
 13217  011DB6  90D8               	bcf	status,0,c
 13218  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 13219  011DBA  6E3F               	movwf	(btemp+10)^0,c
 13220                           
 13221                           ;stkvar	_bexp @ sp[(-13)+10]
 13222  011DBC  0EFD               	movlw	-3
 13223  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13224                           
 13225                           ;stkvar	_b @ sp[(-13)+-4]
 13226  011DC4  0EF1               	movlw	241
 13227  011DC6  24E1               	addwf	fsr1l,w,c
 13228  011DC8  6ED9               	movwf	fsr2l,c
 13229  011DCA  0EFF               	movlw	255
 13230  011DCC  20E2               	addwfc	fsr1h,w,c
 13231  011DCE  6EDA               	movwf	fsr2h,c
 13232  011DD0  AEDF               	btfss	indf2,7,c
 13233  011DD2  D002               	goto	l6403
 13234                           
 13235                           ;stkvar	_bexp @ sp[(-13)+10]
 13236  011DD4  0EFD               	movlw	-3
 13237  011DD6  80E3               	bsf	plusw1,0,c
 13238  011DD8                     l6403:
 13239                           
 13240                           ;stkvar	_bexp @ sp[(-13)+10]
 13241  011DD8  0EFD               	movlw	-3
 13242  011DDA  50E3               	movf	plusw1,w,c
 13243  011DDC  B4D8               	btfsc	status,2,c
 13244  011DDE  D01F               	goto	l6411
 13245                           
 13246                           ;stkvar	_bexp @ sp[(-13)+10]
 13247  011DE0  0EFD               	movlw	-3
 13248  011DE2  28E3               	incf	plusw1,w,c
 13249  011DE4  A4D8               	btfss	status,2,c
 13250  011DE6  D018               	goto	l6409
 13251  011DE8  0E00               	movlw	0
 13252  011DEA  6E3D               	movwf	(btemp+8)^0,c
 13253  011DEC  0E00               	movlw	0
 13254  011DEE  6E3E               	movwf	(btemp+9)^0,c
 13255  011DF0  0E00               	movlw	0
 13256  011DF2  6E3F               	movwf	(btemp+10)^0,c
 13257  011DF4  0E00               	movlw	0
 13258  011DF6  6E40               	movwf	(btemp+11)^0,c
 13259                           
 13260                           ;stkvar	_b @ sp[(-13)+-4]
 13261  011DF8  0EEF               	movlw	-17
 13262  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13263  011E00  0EF0               	movlw	-16
 13264  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13265  011E08  0EF1               	movlw	-15
 13266  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13267  011E10  0EF2               	movlw	-14
 13268  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 13269  011E18                     l6409:
 13270                           
 13271                           ;stkvar	_b @ sp[(-13)+-4]
 13272  011E18  0EF1               	movlw	-15
 13273  011E1A  8EE3               	bsf	plusw1,7,c
 13274  011E1C  D018               	goto	l6413
 13275  011E1E                     l6411:
 13276  011E1E  0E00               	movlw	0
 13277  011E20  6E3D               	movwf	(btemp+8)^0,c
 13278  011E22  0E00               	movlw	0
 13279  011E24  6E3E               	movwf	(btemp+9)^0,c
 13280  011E26  0E00               	movlw	0
 13281  011E28  6E3F               	movwf	(btemp+10)^0,c
 13282  011E2A  0E00               	movlw	0
 13283  011E2C  6E40               	movwf	(btemp+11)^0,c
 13284                           
 13285                           ;stkvar	_b @ sp[(-13)+-4]
 13286  011E2E  0EEF               	movlw	-17
 13287  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13288  011E36  0EF0               	movlw	-16
 13289  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13290  011E3E  0EF1               	movlw	-15
 13291  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13292  011E46  0EF2               	movlw	-14
 13293  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 13294  011E4E                     l6413:
 13295                           
 13296                           ;stkvar	_a @ sp[(-13)+-8]
 13297  011E4E  0EEE               	movlw	238
 13298  011E50  24E1               	addwf	fsr1l,w,c
 13299  011E52  6ED9               	movwf	fsr2l,c
 13300  011E54  0EFF               	movlw	255
 13301  011E56  20E2               	addwfc	fsr1h,w,c
 13302  011E58  6EDA               	movwf	fsr2h,c
 13303  011E5A  50DF               	movf	indf2,w,c
 13304  011E5C  6E40               	movwf	(btemp+11)^0,c
 13305  011E5E  0E80               	movlw	128
 13306  011E60  1640               	andwf	(btemp+11)^0,f,c
 13307                           
 13308                           ;stkvar	_sign @ sp[(-13)+12]
 13309  011E62  50E1               	movf	fsr1l,w,c
 13310  011E64  0FFF               	addlw	-1
 13311  011E66  6ED9               	movwf	fsr2l,c
 13312  011E68  50E2               	movf	fsr1h,w,c
 13313  011E6A  6EDA               	movwf	fsr2h,c
 13314  011E6C  0EFF               	movlw	255
 13315  011E6E  22DA               	addwfc	fsr2h,f,c
 13316  011E70  5040               	movf	(btemp+11)^0,w,c
 13317  011E72  1ADF               	xorwf	indf2,f,c
 13318                           
 13319                           ;stkvar	_a @ sp[(-13)+-8]
 13320  011E74  0EEE               	movlw	238
 13321  011E76  24E1               	addwf	fsr1l,w,c
 13322  011E78  6ED9               	movwf	fsr2l,c
 13323  011E7A  0EFF               	movlw	255
 13324  011E7C  20E2               	addwfc	fsr1h,w,c
 13325  011E7E  6EDA               	movwf	fsr2h,c
 13326  011E80  50DF               	movf	indf2,w,c
 13327  011E82  6E40               	movwf	(btemp+11)^0,c
 13328  011E84  90D8               	bcf	status,0,c
 13329  011E86  3440               	rlcf	(btemp+11)^0,w,c
 13330  011E88  6E3F               	movwf	(btemp+10)^0,c
 13331                           
 13332                           ;stkvar	_aexp @ sp[(-13)+11]
 13333  011E8A  0EFE               	movlw	-2
 13334  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13335                           
 13336                           ;stkvar	_a @ sp[(-13)+-8]
 13337  011E92  0EED               	movlw	237
 13338  011E94  24E1               	addwf	fsr1l,w,c
 13339  011E96  6ED9               	movwf	fsr2l,c
 13340  011E98  0EFF               	movlw	255
 13341  011E9A  20E2               	addwfc	fsr1h,w,c
 13342  011E9C  6EDA               	movwf	fsr2h,c
 13343  011E9E  AEDF               	btfss	indf2,7,c
 13344  011EA0  D002               	goto	l6421
 13345                           
 13346                           ;stkvar	_aexp @ sp[(-13)+11]
 13347  011EA2  0EFE               	movlw	-2
 13348  011EA4  80E3               	bsf	plusw1,0,c
 13349  011EA6                     l6421:
 13350                           
 13351                           ;stkvar	_aexp @ sp[(-13)+11]
 13352  011EA6  0EFE               	movlw	-2
 13353  011EA8  50E3               	movf	plusw1,w,c
 13354  011EAA  B4D8               	btfsc	status,2,c
 13355  011EAC  D01F               	goto	l6429
 13356                           
 13357                           ;stkvar	_aexp @ sp[(-13)+11]
 13358  011EAE  0EFE               	movlw	-2
 13359  011EB0  28E3               	incf	plusw1,w,c
 13360  011EB2  A4D8               	btfss	status,2,c
 13361  011EB4  D018               	goto	l6427
 13362  011EB6  0E00               	movlw	0
 13363  011EB8  6E3D               	movwf	(btemp+8)^0,c
 13364  011EBA  0E00               	movlw	0
 13365  011EBC  6E3E               	movwf	(btemp+9)^0,c
 13366  011EBE  0E00               	movlw	0
 13367  011EC0  6E3F               	movwf	(btemp+10)^0,c
 13368  011EC2  0E00               	movlw	0
 13369  011EC4  6E40               	movwf	(btemp+11)^0,c
 13370                           
 13371                           ;stkvar	_a @ sp[(-13)+-8]
 13372  011EC6  0EEB               	movlw	-21
 13373  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13374  011ECE  0EEC               	movlw	-20
 13375  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13376  011ED6  0EED               	movlw	-19
 13377  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13378  011EDE  0EEE               	movlw	-18
 13379  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13380  011EE6                     l6427:
 13381                           
 13382                           ;stkvar	_a @ sp[(-13)+-8]
 13383  011EE6  0EED               	movlw	-19
 13384  011EE8  8EE3               	bsf	plusw1,7,c
 13385  011EEA  D018               	goto	l6431
 13386  011EEC                     l6429:
 13387  011EEC  0E00               	movlw	0
 13388  011EEE  6E3D               	movwf	(btemp+8)^0,c
 13389  011EF0  0E00               	movlw	0
 13390  011EF2  6E3E               	movwf	(btemp+9)^0,c
 13391  011EF4  0E00               	movlw	0
 13392  011EF6  6E3F               	movwf	(btemp+10)^0,c
 13393  011EF8  0E00               	movlw	0
 13394  011EFA  6E40               	movwf	(btemp+11)^0,c
 13395                           
 13396                           ;stkvar	_a @ sp[(-13)+-8]
 13397  011EFC  0EEB               	movlw	-21
 13398  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13399  011F04  0EEC               	movlw	-20
 13400  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13401  011F0C  0EED               	movlw	-19
 13402  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13403  011F14  0EEE               	movlw	-18
 13404  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 13405  011F1C                     l6431:
 13406                           
 13407                           ;stkvar	_aexp @ sp[(-13)+11]
 13408  011F1C  0EFE               	movlw	-2
 13409  011F1E  50E3               	movf	plusw1,w,c
 13410  011F20  B4D8               	btfsc	status,2,c
 13411  011F22  D004               	goto	u5570
 13412                           
 13413                           ;stkvar	_bexp @ sp[(-13)+10]
 13414  011F24  0EFD               	movlw	-3
 13415  011F26  50E3               	movf	plusw1,w,c
 13416  011F28  A4D8               	btfss	status,2,c
 13417  011F2A  D009               	goto	l6439
 13418  011F2C                     u5570:
 13419  011F2C  0E00               	movlw	0
 13420  011F2E  6E35               	movwf	btemp^0,c
 13421  011F30  0E00               	movlw	0
 13422  011F32  6E36               	movwf	(btemp+1)^0,c
 13423  011F34  0E00               	movlw	0
 13424  011F36  6E37               	movwf	(btemp+2)^0,c
 13425  011F38  0E00               	movlw	0
 13426  011F3A  6E38               	movwf	(btemp+3)^0,c
 13427  011F3C  D332               	goto	l2555
 13428  011F3E                     l6439:
 13429                           
 13430                           ;stkvar	_b @ sp[(-13)+-4]
 13431  011F3E  0EEF               	movlw	-17
 13432  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 13433                           
 13434                           ;stkvar	_a @ sp[(-13)+-8]
 13435  011F46  0EED               	movlw	237
 13436  011F48  24E1               	addwf	fsr1l,w,c
 13437  011F4A  6ED9               	movwf	fsr2l,c
 13438  011F4C  0EFF               	movlw	255
 13439  011F4E  20E2               	addwfc	fsr1h,w,c
 13440  011F50  6EDA               	movwf	fsr2h,c
 13441  011F52  50DF               	movf	indf2,w,c
 13442  011F54  0240               	mulwf	(btemp+11)^0,c
 13443                           
 13444                           ;stkvar	_temp @ sp[(-13)+8]
 13445  011F56  0EFB               	movlw	-5
 13446  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 13447  011F5E  0EFC               	movlw	-4
 13448  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 13449                           
 13450                           ;stkvar	_temp @ sp[(-13)+8]
 13451  011F66  0EFB               	movlw	-5
 13452  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 13453  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 13454  011F74  6A3A               	clrf	(btemp+5)^0,c
 13455  011F76  6A3B               	clrf	(btemp+6)^0,c
 13456  011F78  6A3C               	clrf	(btemp+7)^0,c
 13457                           
 13458                           ;stkvar	_grs @ sp[(-13)+4]
 13459  011F7A  0EF7               	movlw	-9
 13460  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13461  011F82  0EF8               	movlw	-8
 13462  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13463  011F8A  0EF9               	movlw	-7
 13464  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13465  011F92  0EFA               	movlw	-6
 13466  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13467                           
 13468                           ;stkvar	_temp @ sp[(-13)+8]
 13469  011F9A  0EFC               	movlw	252
 13470  011F9C  24E1               	addwf	fsr1l,w,c
 13471  011F9E  6ED9               	movwf	fsr2l,c
 13472  011FA0  0EFF               	movlw	255
 13473  011FA2  20E2               	addwfc	fsr1h,w,c
 13474  011FA4  6EDA               	movwf	fsr2h,c
 13475  011FA6  50DF               	movf	indf2,w,c
 13476  011FA8  6E40               	movwf	(btemp+11)^0,c
 13477  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 13478  011FB0  6A3A               	clrf	(btemp+5)^0,c
 13479  011FB2  6A3B               	clrf	(btemp+6)^0,c
 13480  011FB4  6A3C               	clrf	(btemp+7)^0,c
 13481                           
 13482                           ;stkvar	_prod @ sp[(-13)+0]
 13483  011FB6  0EF3               	movlw	-13
 13484  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13485  011FBE  0EF4               	movlw	-12
 13486  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13487  011FC6  0EF5               	movlw	-11
 13488  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13489  011FCE  0EF6               	movlw	-10
 13490  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13491                           
 13492                           ;stkvar	_b @ sp[(-13)+-4]
 13493  011FD6  0EF0               	movlw	240
 13494  011FD8  24E1               	addwf	fsr1l,w,c
 13495  011FDA  6ED9               	movwf	fsr2l,c
 13496  011FDC  0EFF               	movlw	255
 13497  011FDE  20E2               	addwfc	fsr1h,w,c
 13498  011FE0  6EDA               	movwf	fsr2h,c
 13499  011FE2  50DF               	movf	indf2,w,c
 13500  011FE4  6E40               	movwf	(btemp+11)^0,c
 13501                           
 13502                           ;stkvar	_a @ sp[(-13)+-8]
 13503  011FE6  0EEC               	movlw	236
 13504  011FE8  24E1               	addwf	fsr1l,w,c
 13505  011FEA  6ED9               	movwf	fsr2l,c
 13506  011FEC  0EFF               	movlw	255
 13507  011FEE  20E2               	addwfc	fsr1h,w,c
 13508  011FF0  6EDA               	movwf	fsr2h,c
 13509  011FF2  50DF               	movf	indf2,w,c
 13510  011FF4  0240               	mulwf	(btemp+11)^0,c
 13511                           
 13512                           ;stkvar	_temp @ sp[(-13)+8]
 13513  011FF6  0EFB               	movlw	-5
 13514  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 13515  011FFE  0EFC               	movlw	-4
 13516  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 13517                           
 13518                           ;stkvar	_grs @ sp[(-13)+4]
 13519  012006  50E1               	movf	fsr1l,w,c
 13520  012008  0FF7               	addlw	-9
 13521  01200A  6ED9               	movwf	fsr2l,c
 13522  01200C  50E2               	movf	fsr1h,w,c
 13523  01200E  6EDA               	movwf	fsr2h,c
 13524  012010  0EFF               	movlw	255
 13525  012012  22DA               	addwfc	fsr2h,f,c
 13526                           
 13527                           ;stkvar	_temp @ sp[(-13)+8]
 13528  012014  0EFB               	movlw	-5
 13529  012016  50E3               	movf	plusw1,w,c
 13530  012018  26DE               	addwf	postinc2,f,c
 13531  01201A  0E00               	movlw	0
 13532  01201C  22DE               	addwfc	postinc2,f,c
 13533  01201E  22DE               	addwfc	postinc2,f,c
 13534  012020  22DE               	addwfc	postinc2,f,c
 13535                           
 13536                           ;stkvar	_prod @ sp[(-13)+0]
 13537  012022  50E1               	movf	fsr1l,w,c
 13538  012024  0FF3               	addlw	-13
 13539  012026  6ED9               	movwf	fsr2l,c
 13540  012028  50E2               	movf	fsr1h,w,c
 13541  01202A  6EDA               	movwf	fsr2h,c
 13542  01202C  0EFF               	movlw	255
 13543  01202E  22DA               	addwfc	fsr2h,f,c
 13544                           
 13545                           ;stkvar	_temp @ sp[(-13)+8]
 13546  012030  0EFC               	movlw	252
 13547  012032  24E1               	addwf	fsr1l,w,c
 13548  012034  6EE9               	movwf	fsr0l,c
 13549  012036  0EFF               	movlw	255
 13550  012038  20E2               	addwfc	fsr1h,w,c
 13551  01203A  6EEA               	movwf	fsr0h,c
 13552  01203C  50EF               	movf	indf0,w,c
 13553  01203E  26DE               	addwf	postinc2,f,c
 13554  012040  0E00               	movlw	0
 13555  012042  22DE               	addwfc	postinc2,f,c
 13556  012044  22DE               	addwfc	postinc2,f,c
 13557  012046  22DE               	addwfc	postinc2,f,c
 13558                           
 13559                           ;stkvar	_b @ sp[(-13)+-4]
 13560  012048  0EF1               	movlw	241
 13561  01204A  24E1               	addwf	fsr1l,w,c
 13562  01204C  6ED9               	movwf	fsr2l,c
 13563  01204E  0EFF               	movlw	255
 13564  012050  20E2               	addwfc	fsr1h,w,c
 13565  012052  6EDA               	movwf	fsr2h,c
 13566  012054  50DF               	movf	indf2,w,c
 13567  012056  6E40               	movwf	(btemp+11)^0,c
 13568                           
 13569                           ;stkvar	_a @ sp[(-13)+-8]
 13570  012058  0EEB               	movlw	-21
 13571  01205A  50E3               	movf	plusw1,w,c
 13572  01205C  0240               	mulwf	(btemp+11)^0,c
 13573                           
 13574                           ;stkvar	_temp @ sp[(-13)+8]
 13575  01205E  0EFB               	movlw	-5
 13576  012060  006F FFCF FFE3     	movff	prodl,plusw1
 13577  012066  0EFC               	movlw	-4
 13578  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 13579                           
 13580                           ;stkvar	_grs @ sp[(-13)+4]
 13581  01206E  50E1               	movf	fsr1l,w,c
 13582  012070  0FF7               	addlw	-9
 13583  012072  6ED9               	movwf	fsr2l,c
 13584  012074  50E2               	movf	fsr1h,w,c
 13585  012076  6EDA               	movwf	fsr2h,c
 13586  012078  0EFF               	movlw	255
 13587  01207A  22DA               	addwfc	fsr2h,f,c
 13588                           
 13589                           ;stkvar	_temp @ sp[(-13)+8]
 13590  01207C  0EFB               	movlw	-5
 13591  01207E  50E3               	movf	plusw1,w,c
 13592  012080  26DE               	addwf	postinc2,f,c
 13593  012082  0E00               	movlw	0
 13594  012084  22DE               	addwfc	postinc2,f,c
 13595  012086  22DE               	addwfc	postinc2,f,c
 13596  012088  22DE               	addwfc	postinc2,f,c
 13597                           
 13598                           ;stkvar	_prod @ sp[(-13)+0]
 13599  01208A  50E1               	movf	fsr1l,w,c
 13600  01208C  0FF3               	addlw	-13
 13601  01208E  6ED9               	movwf	fsr2l,c
 13602  012090  50E2               	movf	fsr1h,w,c
 13603  012092  6EDA               	movwf	fsr2h,c
 13604  012094  0EFF               	movlw	255
 13605  012096  22DA               	addwfc	fsr2h,f,c
 13606                           
 13607                           ;stkvar	_temp @ sp[(-13)+8]
 13608  012098  0EFC               	movlw	252
 13609  01209A  24E1               	addwf	fsr1l,w,c
 13610  01209C  6EE9               	movwf	fsr0l,c
 13611  01209E  0EFF               	movlw	255
 13612  0120A0  20E2               	addwfc	fsr1h,w,c
 13613  0120A2  6EEA               	movwf	fsr0h,c
 13614  0120A4  50EF               	movf	indf0,w,c
 13615  0120A6  26DE               	addwf	postinc2,f,c
 13616  0120A8  0E00               	movlw	0
 13617  0120AA  22DE               	addwfc	postinc2,f,c
 13618  0120AC  22DE               	addwfc	postinc2,f,c
 13619  0120AE  22DE               	addwfc	postinc2,f,c
 13620                           
 13621                           ;stkvar	_grs @ sp[(-13)+4]
 13622  0120B0  50E1               	movf	fsr1l,w,c
 13623  0120B2  0FF7               	addlw	-9
 13624  0120B4  6ED9               	movwf	fsr2l,c
 13625  0120B6  50E2               	movf	fsr1h,w,c
 13626  0120B8  6EDA               	movwf	fsr2h,c
 13627  0120BA  0EFF               	movlw	255
 13628  0120BC  22DA               	addwfc	fsr2h,f,c
 13629  0120BE  0E08               	movlw	8
 13630  0120C0                     u5585:
 13631  0120C0  90D8               	bcf	status,0,c
 13632  0120C2  36DE               	rlcf	postinc2,f,c
 13633  0120C4  36DE               	rlcf	postinc2,f,c
 13634  0120C6  36DE               	rlcf	postinc2,f,c
 13635  0120C8  36DD               	rlcf	postdec2,f,c
 13636  0120CA  52DD               	movf	postdec2,f,c
 13637  0120CC  52DD               	movf	postdec2,f,c
 13638  0120CE  2EE8               	decfsz	wreg,f,c
 13639  0120D0  D7F7               	goto	u5585
 13640                           
 13641                           ;stkvar	_b @ sp[(-13)+-4]
 13642  0120D2  0EF0               	movlw	240
 13643  0120D4  24E1               	addwf	fsr1l,w,c
 13644  0120D6  6ED9               	movwf	fsr2l,c
 13645  0120D8  0EFF               	movlw	255
 13646  0120DA  20E2               	addwfc	fsr1h,w,c
 13647  0120DC  6EDA               	movwf	fsr2h,c
 13648  0120DE  50DF               	movf	indf2,w,c
 13649  0120E0  6E40               	movwf	(btemp+11)^0,c
 13650                           
 13651                           ;stkvar	_a @ sp[(-13)+-8]
 13652  0120E2  0EEB               	movlw	-21
 13653  0120E4  50E3               	movf	plusw1,w,c
 13654  0120E6  0240               	mulwf	(btemp+11)^0,c
 13655                           
 13656                           ;stkvar	_temp @ sp[(-13)+8]
 13657  0120E8  0EFB               	movlw	-5
 13658  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 13659  0120F0  0EFC               	movlw	-4
 13660  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 13661                           
 13662                           ;stkvar	_temp @ sp[(-13)+8]
 13663  0120F8  0EFB               	movlw	-5
 13664  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 13665  012100  0EFC               	movlw	-4
 13666  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 13667                           
 13668                           ;stkvar	_grs @ sp[(-13)+4]
 13669  012108  50E1               	movf	fsr1l,w,c
 13670  01210A  0FF7               	addlw	-9
 13671  01210C  6ED9               	movwf	fsr2l,c
 13672  01210E  50E2               	movf	fsr1h,w,c
 13673  012110  6EDA               	movwf	fsr2h,c
 13674  012112  0EFF               	movlw	255
 13675  012114  22DA               	addwfc	fsr2h,f,c
 13676  012116  503F               	movf	(btemp+10)^0,w,c
 13677  012118  26DE               	addwf	postinc2,f,c
 13678  01211A  5040               	movf	(btemp+11)^0,w,c
 13679  01211C  22DE               	addwfc	postinc2,f,c
 13680  01211E  0E00               	movlw	0
 13681  012120  22DE               	addwfc	postinc2,f,c
 13682  012122  22DE               	addwfc	postinc2,f,c
 13683                           
 13684                           ;stkvar	_b @ sp[(-13)+-4]
 13685  012124  0EEF               	movlw	-17
 13686  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 13687                           
 13688                           ;stkvar	_a @ sp[(-13)+-8]
 13689  01212C  0EEC               	movlw	236
 13690  01212E  24E1               	addwf	fsr1l,w,c
 13691  012130  6ED9               	movwf	fsr2l,c
 13692  012132  0EFF               	movlw	255
 13693  012134  20E2               	addwfc	fsr1h,w,c
 13694  012136  6EDA               	movwf	fsr2h,c
 13695  012138  50DF               	movf	indf2,w,c
 13696  01213A  0240               	mulwf	(btemp+11)^0,c
 13697                           
 13698                           ;stkvar	_temp @ sp[(-13)+8]
 13699  01213C  0EFB               	movlw	-5
 13700  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 13701  012144  0EFC               	movlw	-4
 13702  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 13703                           
 13704                           ;stkvar	_temp @ sp[(-13)+8]
 13705  01214C  0EFB               	movlw	-5
 13706  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 13707  012154  0EFC               	movlw	-4
 13708  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 13709                           
 13710                           ;stkvar	_grs @ sp[(-13)+4]
 13711  01215C  50E1               	movf	fsr1l,w,c
 13712  01215E  0FF7               	addlw	-9
 13713  012160  6ED9               	movwf	fsr2l,c
 13714  012162  50E2               	movf	fsr1h,w,c
 13715  012164  6EDA               	movwf	fsr2h,c
 13716  012166  0EFF               	movlw	255
 13717  012168  22DA               	addwfc	fsr2h,f,c
 13718  01216A  503F               	movf	(btemp+10)^0,w,c
 13719  01216C  26DE               	addwf	postinc2,f,c
 13720  01216E  5040               	movf	(btemp+11)^0,w,c
 13721  012170  22DE               	addwfc	postinc2,f,c
 13722  012172  0E00               	movlw	0
 13723  012174  22DE               	addwfc	postinc2,f,c
 13724  012176  22DE               	addwfc	postinc2,f,c
 13725                           
 13726                           ;stkvar	_grs @ sp[(-13)+4]
 13727  012178  50E1               	movf	fsr1l,w,c
 13728  01217A  0FF7               	addlw	-9
 13729  01217C  6ED9               	movwf	fsr2l,c
 13730  01217E  50E2               	movf	fsr1h,w,c
 13731  012180  6EDA               	movwf	fsr2h,c
 13732  012182  0EFF               	movlw	255
 13733  012184  22DA               	addwfc	fsr2h,f,c
 13734  012186  0E08               	movlw	8
 13735  012188                     u5595:
 13736  012188  90D8               	bcf	status,0,c
 13737  01218A  36DE               	rlcf	postinc2,f,c
 13738  01218C  36DE               	rlcf	postinc2,f,c
 13739  01218E  36DE               	rlcf	postinc2,f,c
 13740  012190  36DD               	rlcf	postdec2,f,c
 13741  012192  52DD               	movf	postdec2,f,c
 13742  012194  52DD               	movf	postdec2,f,c
 13743  012196  2EE8               	decfsz	wreg,f,c
 13744  012198  D7F7               	goto	u5595
 13745                           
 13746                           ;stkvar	_b @ sp[(-13)+-4]
 13747  01219A  0EEF               	movlw	-17
 13748  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 13749                           
 13750                           ;stkvar	_a @ sp[(-13)+-8]
 13751  0121A2  0EEB               	movlw	-21
 13752  0121A4  50E3               	movf	plusw1,w,c
 13753  0121A6  0240               	mulwf	(btemp+11)^0,c
 13754                           
 13755                           ;stkvar	_temp @ sp[(-13)+8]
 13756  0121A8  0EFB               	movlw	-5
 13757  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 13758  0121B0  0EFC               	movlw	-4
 13759  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 13760                           
 13761                           ;stkvar	_temp @ sp[(-13)+8]
 13762  0121B8  0EFB               	movlw	-5
 13763  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 13764  0121C0  0EFC               	movlw	-4
 13765  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 13766                           
 13767                           ;stkvar	_grs @ sp[(-13)+4]
 13768  0121C8  50E1               	movf	fsr1l,w,c
 13769  0121CA  0FF7               	addlw	-9
 13770  0121CC  6ED9               	movwf	fsr2l,c
 13771  0121CE  50E2               	movf	fsr1h,w,c
 13772  0121D0  6EDA               	movwf	fsr2h,c
 13773  0121D2  0EFF               	movlw	255
 13774  0121D4  22DA               	addwfc	fsr2h,f,c
 13775  0121D6  503F               	movf	(btemp+10)^0,w,c
 13776  0121D8  26DE               	addwf	postinc2,f,c
 13777  0121DA  5040               	movf	(btemp+11)^0,w,c
 13778  0121DC  22DE               	addwfc	postinc2,f,c
 13779  0121DE  0E00               	movlw	0
 13780  0121E0  22DE               	addwfc	postinc2,f,c
 13781  0121E2  22DE               	addwfc	postinc2,f,c
 13782                           
 13783                           ;stkvar	_b @ sp[(-13)+-4]
 13784  0121E4  0EF0               	movlw	240
 13785  0121E6  24E1               	addwf	fsr1l,w,c
 13786  0121E8  6ED9               	movwf	fsr2l,c
 13787  0121EA  0EFF               	movlw	255
 13788  0121EC  20E2               	addwfc	fsr1h,w,c
 13789  0121EE  6EDA               	movwf	fsr2h,c
 13790  0121F0  50DF               	movf	indf2,w,c
 13791  0121F2  6E40               	movwf	(btemp+11)^0,c
 13792                           
 13793                           ;stkvar	_a @ sp[(-13)+-8]
 13794  0121F4  0EED               	movlw	237
 13795  0121F6  24E1               	addwf	fsr1l,w,c
 13796  0121F8  6ED9               	movwf	fsr2l,c
 13797  0121FA  0EFF               	movlw	255
 13798  0121FC  20E2               	addwfc	fsr1h,w,c
 13799  0121FE  6EDA               	movwf	fsr2h,c
 13800  012200  50DF               	movf	indf2,w,c
 13801  012202  0240               	mulwf	(btemp+11)^0,c
 13802                           
 13803                           ;stkvar	_temp @ sp[(-13)+8]
 13804  012204  0EFB               	movlw	-5
 13805  012206  006F FFCF FFE3     	movff	prodl,plusw1
 13806  01220C  0EFC               	movlw	-4
 13807  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 13808                           
 13809                           ;stkvar	_temp @ sp[(-13)+8]
 13810  012214  0EFB               	movlw	-5
 13811  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 13812  01221C  0EFC               	movlw	-4
 13813  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 13814                           
 13815                           ;stkvar	_prod @ sp[(-13)+0]
 13816  012224  50E1               	movf	fsr1l,w,c
 13817  012226  0FF3               	addlw	-13
 13818  012228  6ED9               	movwf	fsr2l,c
 13819  01222A  50E2               	movf	fsr1h,w,c
 13820  01222C  6EDA               	movwf	fsr2h,c
 13821  01222E  0EFF               	movlw	255
 13822  012230  22DA               	addwfc	fsr2h,f,c
 13823  012232  503F               	movf	(btemp+10)^0,w,c
 13824  012234  26DE               	addwf	postinc2,f,c
 13825  012236  5040               	movf	(btemp+11)^0,w,c
 13826  012238  22DE               	addwfc	postinc2,f,c
 13827  01223A  0E00               	movlw	0
 13828  01223C  22DE               	addwfc	postinc2,f,c
 13829  01223E  22DE               	addwfc	postinc2,f,c
 13830                           
 13831                           ;stkvar	_b @ sp[(-13)+-4]
 13832  012240  0EF1               	movlw	241
 13833  012242  24E1               	addwf	fsr1l,w,c
 13834  012244  6ED9               	movwf	fsr2l,c
 13835  012246  0EFF               	movlw	255
 13836  012248  20E2               	addwfc	fsr1h,w,c
 13837  01224A  6EDA               	movwf	fsr2h,c
 13838  01224C  50DF               	movf	indf2,w,c
 13839  01224E  6E40               	movwf	(btemp+11)^0,c
 13840                           
 13841                           ;stkvar	_a @ sp[(-13)+-8]
 13842  012250  0EEC               	movlw	236
 13843  012252  24E1               	addwf	fsr1l,w,c
 13844  012254  6ED9               	movwf	fsr2l,c
 13845  012256  0EFF               	movlw	255
 13846  012258  20E2               	addwfc	fsr1h,w,c
 13847  01225A  6EDA               	movwf	fsr2h,c
 13848  01225C  50DF               	movf	indf2,w,c
 13849  01225E  0240               	mulwf	(btemp+11)^0,c
 13850                           
 13851                           ;stkvar	_temp @ sp[(-13)+8]
 13852  012260  0EFB               	movlw	-5
 13853  012262  006F FFCF FFE3     	movff	prodl,plusw1
 13854  012268  0EFC               	movlw	-4
 13855  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 13856                           
 13857                           ;stkvar	_temp @ sp[(-13)+8]
 13858  012270  0EFB               	movlw	-5
 13859  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 13860  012278  0EFC               	movlw	-4
 13861  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 13862                           
 13863                           ;stkvar	_prod @ sp[(-13)+0]
 13864  012280  50E1               	movf	fsr1l,w,c
 13865  012282  0FF3               	addlw	-13
 13866  012284  6ED9               	movwf	fsr2l,c
 13867  012286  50E2               	movf	fsr1h,w,c
 13868  012288  6EDA               	movwf	fsr2h,c
 13869  01228A  0EFF               	movlw	255
 13870  01228C  22DA               	addwfc	fsr2h,f,c
 13871  01228E  503F               	movf	(btemp+10)^0,w,c
 13872  012290  26DE               	addwf	postinc2,f,c
 13873  012292  5040               	movf	(btemp+11)^0,w,c
 13874  012294  22DE               	addwfc	postinc2,f,c
 13875  012296  0E00               	movlw	0
 13876  012298  22DE               	addwfc	postinc2,f,c
 13877  01229A  22DE               	addwfc	postinc2,f,c
 13878                           
 13879                           ;stkvar	_b @ sp[(-13)+-4]
 13880  01229C  0EF1               	movlw	241
 13881  01229E  24E1               	addwf	fsr1l,w,c
 13882  0122A0  6ED9               	movwf	fsr2l,c
 13883  0122A2  0EFF               	movlw	255
 13884  0122A4  20E2               	addwfc	fsr1h,w,c
 13885  0122A6  6EDA               	movwf	fsr2h,c
 13886  0122A8  50DF               	movf	indf2,w,c
 13887  0122AA  6E40               	movwf	(btemp+11)^0,c
 13888                           
 13889                           ;stkvar	_a @ sp[(-13)+-8]
 13890  0122AC  0EED               	movlw	237
 13891  0122AE  24E1               	addwf	fsr1l,w,c
 13892  0122B0  6ED9               	movwf	fsr2l,c
 13893  0122B2  0EFF               	movlw	255
 13894  0122B4  20E2               	addwfc	fsr1h,w,c
 13895  0122B6  6EDA               	movwf	fsr2h,c
 13896  0122B8  50DF               	movf	indf2,w,c
 13897  0122BA  0240               	mulwf	(btemp+11)^0,c
 13898                           
 13899                           ;stkvar	_temp @ sp[(-13)+8]
 13900  0122BC  0EFB               	movlw	-5
 13901  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 13902  0122C4  0EFC               	movlw	-4
 13903  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 13904                           
 13905                           ;stkvar	_temp @ sp[(-13)+8]
 13906  0122CC  0EFB               	movlw	-5
 13907  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 13908  0122D4  0EFC               	movlw	-4
 13909  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 13910  0122DC  503F               	movf	(btemp+10)^0,w,c
 13911  0122DE  6E39               	movwf	(btemp+4)^0,c
 13912  0122E0  5040               	movf	(btemp+11)^0,w,c
 13913  0122E2  6E3A               	movwf	(btemp+5)^0,c
 13914  0122E4  6A3B               	clrf	(btemp+6)^0,c
 13915  0122E6  6A3C               	clrf	(btemp+7)^0,c
 13916  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 13917  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 13918  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 13919  0122FA  6A39               	clrf	(btemp+4)^0,c
 13920                           
 13921                           ;stkvar	_prod @ sp[(-13)+0]
 13922  0122FC  50E1               	movf	fsr1l,w,c
 13923  0122FE  0FF3               	addlw	-13
 13924  012300  6ED9               	movwf	fsr2l,c
 13925  012302  50E2               	movf	fsr1h,w,c
 13926  012304  6EDA               	movwf	fsr2h,c
 13927  012306  0EFF               	movlw	255
 13928  012308  22DA               	addwfc	fsr2h,f,c
 13929  01230A  5039               	movf	(btemp+4)^0,w,c
 13930  01230C  26DE               	addwf	postinc2,f,c
 13931  01230E  503A               	movf	(btemp+5)^0,w,c
 13932  012310  22DE               	addwfc	postinc2,f,c
 13933  012312  503B               	movf	(btemp+6)^0,w,c
 13934  012314  22DE               	addwfc	postinc2,f,c
 13935  012316  503C               	movf	(btemp+7)^0,w,c
 13936  012318  22DE               	addwfc	postinc2,f,c
 13937                           
 13938                           ;stkvar	_prod @ sp[(-13)+0]
 13939  01231A  50E1               	movf	fsr1l,w,c
 13940  01231C  0FF3               	addlw	-13
 13941  01231E  6ED9               	movwf	fsr2l,c
 13942  012320  50E2               	movf	fsr1h,w,c
 13943  012322  6EDA               	movwf	fsr2h,c
 13944  012324  0EFF               	movlw	255
 13945  012326  22DA               	addwfc	fsr2h,f,c
 13946                           
 13947                           ;stkvar	_grs @ sp[(-13)+4]
 13948  012328  0EFA               	movlw	250
 13949  01232A  24E1               	addwf	fsr1l,w,c
 13950  01232C  6EE9               	movwf	fsr0l,c
 13951  01232E  0EFF               	movlw	255
 13952  012330  20E2               	addwfc	fsr1h,w,c
 13953  012332  6EEA               	movwf	fsr0h,c
 13954  012334  50EF               	movf	indf0,w,c
 13955  012336  26DE               	addwf	postinc2,f,c
 13956  012338  0E00               	movlw	0
 13957  01233A  22DE               	addwfc	postinc2,f,c
 13958  01233C  22DE               	addwfc	postinc2,f,c
 13959  01233E  22DE               	addwfc	postinc2,f,c
 13960                           
 13961                           ;stkvar	_grs @ sp[(-13)+4]
 13962  012340  50E1               	movf	fsr1l,w,c
 13963  012342  0FF7               	addlw	-9
 13964  012344  6ED9               	movwf	fsr2l,c
 13965  012346  50E2               	movf	fsr1h,w,c
 13966  012348  6EDA               	movwf	fsr2h,c
 13967  01234A  0EFF               	movlw	255
 13968  01234C  22DA               	addwfc	fsr2h,f,c
 13969  01234E  0E08               	movlw	8
 13970  012350                     u5605:
 13971  012350  90D8               	bcf	status,0,c
 13972  012352  36DE               	rlcf	postinc2,f,c
 13973  012354  36DE               	rlcf	postinc2,f,c
 13974  012356  36DE               	rlcf	postinc2,f,c
 13975  012358  36DD               	rlcf	postdec2,f,c
 13976  01235A  52DD               	movf	postdec2,f,c
 13977  01235C  52DD               	movf	postdec2,f,c
 13978  01235E  2EE8               	decfsz	wreg,f,c
 13979  012360  D7F7               	goto	u5605
 13980  012362  0E82               	movlw	130
 13981  012364  6E3F               	movwf	(btemp+10)^0,c
 13982  012366  0EFF               	movlw	255
 13983  012368  6E40               	movwf	(btemp+11)^0,c
 13984                           
 13985                           ;stkvar	_bexp @ sp[(-13)+10]
 13986  01236A  0EFD               	movlw	-3
 13987  01236C  50E3               	movf	plusw1,w,c
 13988  01236E  6E3D               	movwf	(btemp+8)^0,c
 13989  012370  6A3E               	clrf	(btemp+9)^0,c
 13990                           
 13991                           ;stkvar	_aexp @ sp[(-13)+11]
 13992  012372  0EFE               	movlw	-2
 13993  012374  50E3               	movf	plusw1,w,c
 13994  012376  263D               	addwf	(btemp+8)^0,f,c
 13995  012378  0E00               	movlw	0
 13996  01237A  223E               	addwfc	(btemp+9)^0,f,c
 13997  01237C  503F               	movf	(btemp+10)^0,w,c
 13998  01237E  263D               	addwf	(btemp+8)^0,f,c
 13999  012380  5040               	movf	(btemp+11)^0,w,c
 14000  012382  223E               	addwfc	(btemp+9)^0,f,c
 14001                           
 14002                           ;stkvar	_temp @ sp[(-13)+8]
 14003  012384  0EFB               	movlw	-5
 14004  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14005  01238C  0EFC               	movlw	-4
 14006  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14007  012394  D021               	goto	l6501
 14008  012396                     l6491:
 14009                           
 14010                           ;stkvar	_prod @ sp[(-13)+0]
 14011  012396  90D8               	bcf	status,0,c
 14012  012398  0EF3               	movlw	-13
 14013  01239A  36E3               	rlcf	plusw1,f,c
 14014  01239C  0EF4               	movlw	-12
 14015  01239E  36E3               	rlcf	plusw1,f,c
 14016  0123A0  0EF5               	movlw	-11
 14017  0123A2  36E3               	rlcf	plusw1,f,c
 14018  0123A4  0EF6               	movlw	-10
 14019  0123A6  36E3               	rlcf	plusw1,f,c
 14020                           
 14021                           ;stkvar	_grs @ sp[(-13)+4]
 14022  0123A8  0EFA               	movlw	-6
 14023  0123AA  AEE3               	btfss	plusw1,7,c
 14024  0123AC  D002               	goto	l6497
 14025                           
 14026                           ;stkvar	_prod @ sp[(-13)+0]
 14027  0123AE  0EF3               	movlw	-13
 14028  0123B0  80E3               	bsf	plusw1,0,c
 14029  0123B2                     l6497:
 14030                           
 14031                           ;stkvar	_grs @ sp[(-13)+4]
 14032  0123B2  90D8               	bcf	status,0,c
 14033  0123B4  0EF7               	movlw	-9
 14034  0123B6  36E3               	rlcf	plusw1,f,c
 14035  0123B8  0EF8               	movlw	-8
 14036  0123BA  36E3               	rlcf	plusw1,f,c
 14037  0123BC  0EF9               	movlw	-7
 14038  0123BE  36E3               	rlcf	plusw1,f,c
 14039  0123C0  0EFA               	movlw	-6
 14040  0123C2  36E3               	rlcf	plusw1,f,c
 14041                           
 14042                           ;stkvar	_temp @ sp[(-13)+8]
 14043  0123C4  50E1               	movf	fsr1l,w,c
 14044  0123C6  0FFB               	addlw	-5
 14045  0123C8  6ED9               	movwf	fsr2l,c
 14046  0123CA  50E2               	movf	fsr1h,w,c
 14047  0123CC  6EDA               	movwf	fsr2h,c
 14048  0123CE  0EFF               	movlw	255
 14049  0123D0  22DA               	addwfc	fsr2h,f,c
 14050  0123D2  06DE               	decf	postinc2,f,c
 14051  0123D4  0E00               	movlw	0
 14052  0123D6  5ADD               	subwfb	postdec2,f,c
 14053  0123D8                     l6501:
 14054                           
 14055                           ;stkvar	_prod @ sp[(-13)+0]
 14056  0123D8  0EF5               	movlw	-11
 14057  0123DA  AEE3               	btfss	plusw1,7,c
 14058  0123DC  D7DC               	goto	l6491
 14059                           
 14060                           ;stkvar	_aexp @ sp[(-13)+11]
 14061  0123DE  0EFE               	movlw	-2
 14062  0123E0  6AE3               	clrf	plusw1,c
 14063                           
 14064                           ;stkvar	_grs @ sp[(-13)+4]
 14065  0123E2  0EFA               	movlw	-6
 14066  0123E4  AEE3               	btfss	plusw1,7,c
 14067  0123E6  D020               	goto	l6515
 14068                           
 14069                           ;stkvar	_grs @ sp[(-13)+4]
 14070  0123E8  50E1               	movf	fsr1l,w,c
 14071  0123EA  0FF7               	addlw	-9
 14072  0123EC  6ED9               	movwf	fsr2l,c
 14073  0123EE  50E2               	movf	fsr1h,w,c
 14074  0123F0  6EDA               	movwf	fsr2h,c
 14075  0123F2  0EFF               	movlw	255
 14076  0123F4  22DA               	addwfc	fsr2h,f,c
 14077  0123F6  0EFF               	movlw	255
 14078  0123F8  14DE               	andwf	postinc2,w,c
 14079  0123FA  6E3D               	movwf	(btemp+8)^0,c
 14080  0123FC  0EFF               	movlw	255
 14081  0123FE  14DE               	andwf	postinc2,w,c
 14082  012400  6E3E               	movwf	(btemp+9)^0,c
 14083  012402  0EFF               	movlw	255
 14084  012404  14DE               	andwf	postinc2,w,c
 14085  012406  6E3F               	movwf	(btemp+10)^0,c
 14086  012408  0E7F               	movlw	127
 14087  01240A  14DE               	andwf	postinc2,w,c
 14088  01240C  6E40               	movwf	(btemp+11)^0,c
 14089  01240E  503D               	movf	(btemp+8)^0,w,c
 14090  012410  103E               	iorwf	(btemp+9)^0,w,c
 14091  012412  103F               	iorwf	(btemp+10)^0,w,c
 14092  012414  1040               	iorwf	(btemp+11)^0,w,c
 14093  012416  B4D8               	btfsc	status,2,c
 14094  012418  D004               	goto	l6511
 14095  01241A                     u5640:
 14096                           
 14097                           ;stkvar	_aexp @ sp[(-13)+11]
 14098  01241A  0EFE               	movlw	-2
 14099  01241C  6AE3               	clrf	plusw1,c
 14100  01241E  2AE3               	incf	plusw1,f,c
 14101  012420  D003               	goto	l6515
 14102  012422                     l6511:
 14103                           
 14104                           ;stkvar	_prod @ sp[(-13)+0]
 14105  012422  0EF3               	movlw	-13
 14106  012424  B0E3               	btfsc	plusw1,0,c
 14107  012426  D7F9               	goto	u5640
 14108  012428                     l6515:
 14109                           
 14110                           ;stkvar	_aexp @ sp[(-13)+11]
 14111  012428  0EFE               	movlw	-2
 14112  01242A  50E3               	movf	plusw1,w,c
 14113  01242C  B4D8               	btfsc	status,2,c
 14114  01242E  D036               	goto	l6525
 14115                           
 14116                           ;stkvar	_prod @ sp[(-13)+0]
 14117  012430  50E1               	movf	fsr1l,w,c
 14118  012432  0FF3               	addlw	-13
 14119  012434  6ED9               	movwf	fsr2l,c
 14120  012436  50E2               	movf	fsr1h,w,c
 14121  012438  6EDA               	movwf	fsr2h,c
 14122  01243A  0EFF               	movlw	255
 14123  01243C  22DA               	addwfc	fsr2h,f,c
 14124  01243E  2ADE               	incf	postinc2,f,c
 14125  012440  0E00               	movlw	0
 14126  012442  22DE               	addwfc	postinc2,f,c
 14127  012444  22DE               	addwfc	postinc2,f,c
 14128  012446  22DE               	addwfc	postinc2,f,c
 14129                           
 14130                           ;stkvar	_prod @ sp[(-13)+0]
 14131  012448  0EF6               	movlw	-10
 14132  01244A  A0E3               	btfss	plusw1,0,c
 14133  01244C  D027               	goto	l6525
 14134  01244E  0E01               	movlw	1
 14135  012450  6E40               	movwf	(btemp+11)^0,c
 14136                           
 14137                           ;stkvar	_prod @ sp[(-13)+0]
 14138  012452  50E1               	movf	fsr1l,w,c
 14139  012454  0FF3               	addlw	-13
 14140  012456  6ED9               	movwf	fsr2l,c
 14141  012458  50E2               	movf	fsr1h,w,c
 14142  01245A  6EDA               	movwf	fsr2h,c
 14143  01245C  0EFF               	movlw	255
 14144  01245E  22DA               	addwfc	fsr2h,f,c
 14145  012460  2840               	incf	(btemp+11)^0,w,c
 14146  012462  52DE               	movf	postinc2,f,c
 14147  012464  D008               	goto	u5680
 14148  012466                     u5685:
 14149  012466  52DE               	movf	postinc2,f,c
 14150  012468  90D8               	bcf	status,0,c
 14151  01246A  BEDC               	btfsc	preinc2,7,c
 14152  01246C  80D8               	bsf	status,0,c
 14153  01246E  32DD               	rrcf	postdec2,f,c
 14154  012470  32DD               	rrcf	postdec2,f,c
 14155  012472  32DD               	rrcf	postdec2,f,c
 14156  012474  32DE               	rrcf	postinc2,f,c
 14157  012476                     u5680:
 14158  012476  2EE8               	decfsz	wreg,f,c
 14159  012478  D7F6               	goto	u5685
 14160                           
 14161                           ;stkvar	_temp @ sp[(-13)+8]
 14162  01247A  0EFB               	movlw	-5
 14163  01247C  50E3               	movf	plusw1,w,c
 14164  01247E  0F01               	addlw	1
 14165  012480  6E35               	movwf	btemp^0,c
 14166  012482  0EFB               	movlw	-5
 14167  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 14168  01248A  6A35               	clrf	btemp^0,c
 14169  01248C  0EFC               	movlw	-4
 14170  01248E  50E3               	movf	plusw1,w,c
 14171  012490  2035               	addwfc	btemp^0,w,c
 14172  012492  6E35               	movwf	btemp^0,c
 14173  012494  0EFC               	movlw	-4
 14174  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 14175  01249C                     l6525:
 14176                           
 14177                           ;stkvar	_temp @ sp[(-13)+8]
 14178  01249C  0EFC               	movlw	-4
 14179  01249E  BEE3               	btfsc	plusw1,7,c
 14180  0124A0  D020               	goto	l6529
 14181  0124A2  0EFC               	movlw	-4
 14182  0124A4  50E3               	movf	plusw1,w,c
 14183  0124A6  E104               	bnz	u5690
 14184  0124A8  0EFB               	movlw	-5
 14185  0124AA  28E3               	incf	plusw1,w,c
 14186  0124AC  A0D8               	btfss	status,0,c
 14187  0124AE  D019               	goto	l6529
 14188  0124B0                     u5690:
 14189  0124B0  0E00               	movlw	0
 14190  0124B2  6E3D               	movwf	(btemp+8)^0,c
 14191  0124B4  0E00               	movlw	0
 14192  0124B6  6E3E               	movwf	(btemp+9)^0,c
 14193  0124B8  0E80               	movlw	128
 14194  0124BA  6E3F               	movwf	(btemp+10)^0,c
 14195  0124BC  0E7F               	movlw	127
 14196  0124BE  6E40               	movwf	(btemp+11)^0,c
 14197                           
 14198                           ;stkvar	_prod @ sp[(-13)+0]
 14199  0124C0  0EF3               	movlw	-13
 14200  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14201  0124C8  0EF4               	movlw	-12
 14202  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14203  0124D0  0EF5               	movlw	-11
 14204  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14205  0124D8  0EF6               	movlw	-10
 14206  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 14207  0124E0  D044               	goto	l6545
 14208  0124E2                     l6529:
 14209                           
 14210                           ;stkvar	_temp @ sp[(-13)+8]
 14211  0124E2  0EFC               	movlw	-4
 14212  0124E4  BEE3               	btfsc	plusw1,7,c
 14213  0124E6  D007               	goto	u5700
 14214  0124E8  0EFC               	movlw	-4
 14215  0124EA  50E3               	movf	plusw1,w,c
 14216  0124EC  E10F               	bnz	l6535
 14217  0124EE  0EFB               	movlw	-5
 14218  0124F0  04E3               	decf	plusw1,w,c
 14219  0124F2  B0D8               	btfsc	status,0,c
 14220  0124F4  D00B               	goto	l6535
 14221  0124F6                     u5700:
 14222                           
 14223                           ;stkvar	_prod @ sp[(-13)+0]
 14224  0124F6  0EF3               	movlw	-13
 14225  0124F8  6AE3               	clrf	plusw1,c
 14226  0124FA  0EF4               	movlw	-12
 14227  0124FC  6AE3               	clrf	plusw1,c
 14228  0124FE  0EF5               	movlw	-11
 14229  012500  6AE3               	clrf	plusw1,c
 14230  012502  0EF6               	movlw	-10
 14231  012504  6AE3               	clrf	plusw1,c
 14232                           
 14233                           ;stkvar	_sign @ sp[(-13)+12]
 14234  012506  0EFF               	movlw	-1
 14235  012508  6AE3               	clrf	plusw1,c
 14236  01250A  D02F               	goto	l6545
 14237  01250C                     l6535:
 14238                           
 14239                           ;stkvar	_temp @ sp[(-13)+8]
 14240                           ;stkvar	_bexp @ sp[(-13)+10]
 14241  01250C  0EFB               	movlw	-5
 14242  01250E  006F FF8C  F035    	movff	plusw1,btemp
 14243  012514  0EFD               	movlw	-3
 14244  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 14245                           
 14246                           ;stkvar	_prod @ sp[(-13)+0]
 14247  01251C  50E1               	movf	fsr1l,w,c
 14248  01251E  0FF3               	addlw	-13
 14249  012520  6ED9               	movwf	fsr2l,c
 14250  012522  50E2               	movf	fsr1h,w,c
 14251  012524  6EDA               	movwf	fsr2h,c
 14252  012526  0EFF               	movlw	255
 14253  012528  22DA               	addwfc	fsr2h,f,c
 14254  01252A  0EFF               	movlw	255
 14255  01252C  16DE               	andwf	postinc2,f,c
 14256  01252E  0EFF               	movlw	255
 14257  012530  16DE               	andwf	postinc2,f,c
 14258  012532  0E7F               	movlw	127
 14259  012534  16DE               	andwf	postinc2,f,c
 14260  012536  0E00               	movlw	0
 14261  012538  16DE               	andwf	postinc2,f,c
 14262                           
 14263                           ;stkvar	_bexp @ sp[(-13)+10]
 14264  01253A  0EFD               	movlw	-3
 14265  01253C  A0E3               	btfss	plusw1,0,c
 14266  01253E  D008               	goto	l6543
 14267                           
 14268                           ;stkvar	_prod @ sp[(-13)+0]
 14269  012540  0EF5               	movlw	245
 14270  012542  24E1               	addwf	fsr1l,w,c
 14271  012544  6ED9               	movwf	fsr2l,c
 14272  012546  0EFF               	movlw	255
 14273  012548  20E2               	addwfc	fsr1h,w,c
 14274  01254A  6EDA               	movwf	fsr2h,c
 14275  01254C  0E00               	movlw	0
 14276  01254E  8EDB               	bsf	plusw2,7,c
 14277  012550                     l6543:
 14278                           
 14279                           ;stkvar	_prod @ sp[(-13)+0]
 14280  012550  0EF6               	movlw	246
 14281  012552  24E1               	addwf	fsr1l,w,c
 14282  012554  6ED9               	movwf	fsr2l,c
 14283  012556  0EFF               	movlw	255
 14284  012558  20E2               	addwfc	fsr1h,w,c
 14285  01255A  6EDA               	movwf	fsr2h,c
 14286                           
 14287                           ;stkvar	_bexp @ sp[(-13)+10]
 14288  01255C  0EFD               	movlw	-3
 14289  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 14290  012564  90D8               	bcf	status,0,c
 14291  012566  3040               	rrcf	(btemp+11)^0,w,c
 14292  012568  6EDF               	movwf	indf2,c
 14293  01256A                     l6545:
 14294                           
 14295                           ;stkvar	_sign @ sp[(-13)+12]
 14296  01256A  0EFF               	movlw	-1
 14297  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 14298                           
 14299                           ;stkvar	_prod @ sp[(-13)+0]
 14300  012572  0EF6               	movlw	246
 14301  012574  24E1               	addwf	fsr1l,w,c
 14302  012576  6ED9               	movwf	fsr2l,c
 14303  012578  0EFF               	movlw	255
 14304  01257A  20E2               	addwfc	fsr1h,w,c
 14305  01257C  6EDA               	movwf	fsr2h,c
 14306  01257E  5040               	movf	(btemp+11)^0,w,c
 14307  012580  12DF               	iorwf	indf2,f,c
 14308                           
 14309                           ;stkvar	_prod @ sp[(-13)+0]
 14310  012582  0EF3               	movlw	-13
 14311  012584  006F FF8C  F035    	movff	plusw1,btemp
 14312  01258A  0EF4               	movlw	-12
 14313  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 14314  012592  0EF5               	movlw	-11
 14315  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 14316  01259A  0EF6               	movlw	-10
 14317  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 14318  0125A2                     l2555:
 14319                           
 14320                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 14321  0125A2  0EEB               	movlw	235
 14322  0125A4  26E1               	addwf	fsr1l,f,c
 14323  0125A6  0EFF               	movlw	255
 14324  0125A8  22E2               	addwfc	fsr1h,f,c
 14325  0125AA  0012               	return		;funcret
 14326  0125AC                     __end_of___flmul:
 14327                           	opt callstack 0
 14328                           
 14329 ;; *************** function ___flge *****************
 14330 ;; Defined at:
 14331 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14332 ;; Parameters:    Size  Location     Type
 14333 ;;  ff1             4  [STACK] unsigned char 
 14334 ;;  ff2             4  [STACK] unsigned char 
 14335 ;; Auto vars:     Size  Location     Type
 14336 ;;		None
 14337 ;; Return value:  Size  Location     Type
 14338 ;;		None               void
 14339 ;; Registers used:
 14340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14341 ;; Tracked objects:
 14342 ;;		On entry : 0/4
 14343 ;;		On exit  : 0/0
 14344 ;;		Unchanged: 0/0
 14345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;Total ram usage:        0 bytes
 14351 ;; Hardware stack levels used:    1
 14352 ;; Hardware stack levels required when called:    6
 14353 ;; This function calls:
 14354 ;;		Nothing
 14355 ;; This function is called by:
 14356 ;;		_efgtoa
 14357 ;; This function uses a reentrant model
 14358 ;;
 14359                           
 14360                           	psect	text47
 14361  015952                     __ptext47:
 14362                           	opt callstack 0
 14363  015952                     ___flge:
 14364                           	opt callstack 17
 14365                           
 14366                           ;stkvar	_ff1 @ sp[(0)+-4]
 14367                           
 14368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14369                           ;incstack = 0
 14370  015952  50E1               	movf	fsr1l,w,c
 14371  015954  0FFC               	addlw	-4
 14372  015956  6ED9               	movwf	fsr2l,c
 14373  015958  50E2               	movf	fsr1h,w,c
 14374  01595A  6EDA               	movwf	fsr2h,c
 14375  01595C  0EFF               	movlw	255
 14376  01595E  22DA               	addwfc	fsr2h,f,c
 14377  015960  0E00               	movlw	0
 14378  015962  14DE               	andwf	postinc2,w,c
 14379  015964  6E3D               	movwf	(btemp+8)^0,c
 14380  015966  0E00               	movlw	0
 14381  015968  14DE               	andwf	postinc2,w,c
 14382  01596A  6E3E               	movwf	(btemp+9)^0,c
 14383  01596C  0E80               	movlw	128
 14384  01596E  14DE               	andwf	postinc2,w,c
 14385  015970  6E3F               	movwf	(btemp+10)^0,c
 14386  015972  0E7F               	movlw	127
 14387  015974  14DE               	andwf	postinc2,w,c
 14388  015976  6E40               	movwf	(btemp+11)^0,c
 14389  015978  503D               	movf	(btemp+8)^0,w,c
 14390  01597A  103E               	iorwf	(btemp+9)^0,w,c
 14391  01597C  103F               	iorwf	(btemp+10)^0,w,c
 14392  01597E  1040               	iorwf	(btemp+11)^0,w,c
 14393  015980  A4D8               	btfss	status,2,c
 14394  015982  D008               	goto	l6661
 14395                           
 14396                           ;stkvar	_ff1 @ sp[(0)+-4]
 14397  015984  0EFC               	movlw	-4
 14398  015986  6AE3               	clrf	plusw1,c
 14399  015988  0EFD               	movlw	-3
 14400  01598A  6AE3               	clrf	plusw1,c
 14401  01598C  0EFE               	movlw	-2
 14402  01598E  6AE3               	clrf	plusw1,c
 14403  015990  0EFF               	movlw	-1
 14404  015992  6AE3               	clrf	plusw1,c
 14405  015994                     l6661:
 14406                           
 14407                           ;stkvar	_ff2 @ sp[(0)+-8]
 14408  015994  50E1               	movf	fsr1l,w,c
 14409  015996  0FF8               	addlw	-8
 14410  015998  6ED9               	movwf	fsr2l,c
 14411  01599A  50E2               	movf	fsr1h,w,c
 14412  01599C  6EDA               	movwf	fsr2h,c
 14413  01599E  0EFF               	movlw	255
 14414  0159A0  22DA               	addwfc	fsr2h,f,c
 14415  0159A2  0E00               	movlw	0
 14416  0159A4  14DE               	andwf	postinc2,w,c
 14417  0159A6  6E3D               	movwf	(btemp+8)^0,c
 14418  0159A8  0E00               	movlw	0
 14419  0159AA  14DE               	andwf	postinc2,w,c
 14420  0159AC  6E3E               	movwf	(btemp+9)^0,c
 14421  0159AE  0E80               	movlw	128
 14422  0159B0  14DE               	andwf	postinc2,w,c
 14423  0159B2  6E3F               	movwf	(btemp+10)^0,c
 14424  0159B4  0E7F               	movlw	127
 14425  0159B6  14DE               	andwf	postinc2,w,c
 14426  0159B8  6E40               	movwf	(btemp+11)^0,c
 14427  0159BA  503D               	movf	(btemp+8)^0,w,c
 14428  0159BC  103E               	iorwf	(btemp+9)^0,w,c
 14429  0159BE  103F               	iorwf	(btemp+10)^0,w,c
 14430  0159C0  1040               	iorwf	(btemp+11)^0,w,c
 14431  0159C2  A4D8               	btfss	status,2,c
 14432  0159C4  D008               	goto	l2200
 14433                           
 14434                           ;stkvar	_ff2 @ sp[(0)+-8]
 14435  0159C6  0EF8               	movlw	-8
 14436  0159C8  6AE3               	clrf	plusw1,c
 14437  0159CA  0EF9               	movlw	-7
 14438  0159CC  6AE3               	clrf	plusw1,c
 14439  0159CE  0EFA               	movlw	-6
 14440  0159D0  6AE3               	clrf	plusw1,c
 14441  0159D2  0EFB               	movlw	-5
 14442  0159D4  6AE3               	clrf	plusw1,c
 14443  0159D6                     l2200:
 14444                           
 14445                           ;stkvar	_ff1 @ sp[(0)+-4]
 14446  0159D6  0EFF               	movlw	-1
 14447  0159D8  AEE3               	btfss	plusw1,7,c
 14448  0159DA  D024               	goto	l6667
 14449                           
 14450                           ;stkvar	_ff1 @ sp[(0)+-4]
 14451  0159DC  0E00               	movlw	0
 14452  0159DE  6E3D               	movwf	(btemp+8)^0,c
 14453  0159E0  0E00               	movlw	0
 14454  0159E2  6E3E               	movwf	(btemp+9)^0,c
 14455  0159E4  0E00               	movlw	0
 14456  0159E6  6E3F               	movwf	(btemp+10)^0,c
 14457  0159E8  0E80               	movlw	128
 14458  0159EA  6E40               	movwf	(btemp+11)^0,c
 14459  0159EC  0EFC               	movlw	-4
 14460  0159EE  50E3               	movf	plusw1,w,c
 14461  0159F0  5E3D               	subwf	(btemp+8)^0,f,c
 14462  0159F2  0EFD               	movlw	-3
 14463  0159F4  50E3               	movf	plusw1,w,c
 14464  0159F6  5A3E               	subwfb	(btemp+9)^0,f,c
 14465  0159F8  0EFE               	movlw	-2
 14466  0159FA  50E3               	movf	plusw1,w,c
 14467  0159FC  5A3F               	subwfb	(btemp+10)^0,f,c
 14468  0159FE  0EFF               	movlw	-1
 14469  015A00  50E3               	movf	plusw1,w,c
 14470  015A02  5A40               	subwfb	(btemp+11)^0,f,c
 14471                           
 14472                           ;stkvar	_ff1 @ sp[(0)+-4]
 14473  015A04  0EFC               	movlw	-4
 14474  015A06  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14475  015A0C  0EFD               	movlw	-3
 14476  015A0E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14477  015A14  0EFE               	movlw	-2
 14478  015A16  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14479  015A1C  0EFF               	movlw	-1
 14480  015A1E  0060  F103  FFE3   	movff	btemp+11,plusw1
 14481  015A24                     l6667:
 14482                           
 14483                           ;stkvar	_ff2 @ sp[(0)+-8]
 14484  015A24  0EFB               	movlw	-5
 14485  015A26  AEE3               	btfss	plusw1,7,c
 14486  015A28  D024               	goto	l6671
 14487                           
 14488                           ;stkvar	_ff2 @ sp[(0)+-8]
 14489  015A2A  0E00               	movlw	0
 14490  015A2C  6E3D               	movwf	(btemp+8)^0,c
 14491  015A2E  0E00               	movlw	0
 14492  015A30  6E3E               	movwf	(btemp+9)^0,c
 14493  015A32  0E00               	movlw	0
 14494  015A34  6E3F               	movwf	(btemp+10)^0,c
 14495  015A36  0E80               	movlw	128
 14496  015A38  6E40               	movwf	(btemp+11)^0,c
 14497  015A3A  0EF8               	movlw	-8
 14498  015A3C  50E3               	movf	plusw1,w,c
 14499  015A3E  5E3D               	subwf	(btemp+8)^0,f,c
 14500  015A40  0EF9               	movlw	-7
 14501  015A42  50E3               	movf	plusw1,w,c
 14502  015A44  5A3E               	subwfb	(btemp+9)^0,f,c
 14503  015A46  0EFA               	movlw	-6
 14504  015A48  50E3               	movf	plusw1,w,c
 14505  015A4A  5A3F               	subwfb	(btemp+10)^0,f,c
 14506  015A4C  0EFB               	movlw	-5
 14507  015A4E  50E3               	movf	plusw1,w,c
 14508  015A50  5A40               	subwfb	(btemp+11)^0,f,c
 14509                           
 14510                           ;stkvar	_ff2 @ sp[(0)+-8]
 14511  015A52  0EF8               	movlw	-8
 14512  015A54  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14513  015A5A  0EF9               	movlw	-7
 14514  015A5C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14515  015A62  0EFA               	movlw	-6
 14516  015A64  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14517  015A6A  0EFB               	movlw	-5
 14518  015A6C  0060  F103  FFE3   	movff	btemp+11,plusw1
 14519  015A72                     l6671:
 14520                           
 14521                           ;stkvar	_ff1 @ sp[(0)+-4]
 14522  015A72  0EFF               	movlw	-1
 14523  015A74  7EE3               	btg	plusw1,7,c
 14524                           
 14525                           ;stkvar	_ff2 @ sp[(0)+-8]
 14526  015A76  0EFB               	movlw	-5
 14527  015A78  7EE3               	btg	plusw1,7,c
 14528                           
 14529                           ;stkvar	_ff2 @ sp[(0)+-8]
 14530                           ;stkvar	_ff1 @ sp[(0)+-4]
 14531  015A7A  50E1               	movf	fsr1l,w,c
 14532  015A7C  0FFC               	addlw	-4
 14533  015A7E  6ED9               	movwf	fsr2l,c
 14534  015A80  50E2               	movf	fsr1h,w,c
 14535  015A82  6EDA               	movwf	fsr2h,c
 14536  015A84  0EFF               	movlw	255
 14537  015A86  22DA               	addwfc	fsr2h,f,c
 14538  015A88  0EF8               	movlw	-8
 14539  015A8A  50E3               	movf	plusw1,w,c
 14540  015A8C  5CDE               	subwf	postinc2,w,c
 14541  015A8E  0EF9               	movlw	-7
 14542  015A90  50E3               	movf	plusw1,w,c
 14543  015A92  58DE               	subwfb	postinc2,w,c
 14544  015A94  0EFA               	movlw	-6
 14545  015A96  50E3               	movf	plusw1,w,c
 14546  015A98  58DE               	subwfb	postinc2,w,c
 14547  015A9A  0EFB               	movlw	-5
 14548  015A9C  50E3               	movf	plusw1,w,c
 14549  015A9E  58DE               	subwfb	postinc2,w,c
 14550  015AA0  B0D8               	btfsc	status,0,c
 14551  015AA2  D002               	goto	l6679
 14552  015AA4  9035               	bcf	btemp& (0+255),0,c
 14553  015AA6  D001               	goto	l2207
 14554  015AA8                     l6679:
 14555  015AA8  8035               	bsf	btemp& (0+255),0,c
 14556  015AAA                     l2207:
 14557                           
 14558                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14559  015AAA  0EF8               	movlw	248
 14560  015AAC  26E1               	addwf	fsr1l,f,c
 14561  015AAE  0EFF               	movlw	255
 14562  015AB0  22E2               	addwfc	fsr1h,f,c
 14563  015AB2  0012               	return		;funcret
 14564  015AB4                     __end_of___flge:
 14565                           	opt callstack 0
 14566                           
 14567 ;; *************** function ___fleq *****************
 14568 ;; Defined at:
 14569 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;  ff1             4  [STACK] unsigned char 
 14572 ;;  ff2             4  [STACK] unsigned char 
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;		None
 14575 ;; Return value:  Size  Location     Type
 14576 ;;		None               void
 14577 ;; Registers used:
 14578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14579 ;; Tracked objects:
 14580 ;;		On entry : 0/4
 14581 ;;		On exit  : 0/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14588 ;;Total ram usage:        0 bytes
 14589 ;; Hardware stack levels used:    1
 14590 ;; Hardware stack levels required when called:    6
 14591 ;; This function calls:
 14592 ;;		Nothing
 14593 ;; This function is called by:
 14594 ;;		_efgtoa
 14595 ;; This function uses a reentrant model
 14596 ;;
 14597                           
 14598                           	psect	text48
 14599  01651C                     __ptext48:
 14600                           	opt callstack 0
 14601  01651C                     ___fleq:
 14602                           	opt callstack 17
 14603                           
 14604                           ;stkvar	_ff1 @ sp[(0)+-4]
 14605                           
 14606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14607                           ;incstack = 0
 14608  01651C  50E1               	movf	fsr1l,w,c
 14609  01651E  0FFC               	addlw	-4
 14610  016520  6ED9               	movwf	fsr2l,c
 14611  016522  50E2               	movf	fsr1h,w,c
 14612  016524  6EDA               	movwf	fsr2h,c
 14613  016526  0EFF               	movlw	255
 14614  016528  22DA               	addwfc	fsr2h,f,c
 14615  01652A  0E00               	movlw	0
 14616  01652C  14DE               	andwf	postinc2,w,c
 14617  01652E  6E3D               	movwf	(btemp+8)^0,c
 14618  016530  0E00               	movlw	0
 14619  016532  14DE               	andwf	postinc2,w,c
 14620  016534  6E3E               	movwf	(btemp+9)^0,c
 14621  016536  0E80               	movlw	128
 14622  016538  14DE               	andwf	postinc2,w,c
 14623  01653A  6E3F               	movwf	(btemp+10)^0,c
 14624  01653C  0E7F               	movlw	127
 14625  01653E  14DE               	andwf	postinc2,w,c
 14626  016540  6E40               	movwf	(btemp+11)^0,c
 14627  016542  503D               	movf	(btemp+8)^0,w,c
 14628  016544  103E               	iorwf	(btemp+9)^0,w,c
 14629  016546  103F               	iorwf	(btemp+10)^0,w,c
 14630  016548  1040               	iorwf	(btemp+11)^0,w,c
 14631  01654A  A4D8               	btfss	status,2,c
 14632  01654C  D008               	goto	l6645
 14633                           
 14634                           ;stkvar	_ff1 @ sp[(0)+-4]
 14635  01654E  0EFC               	movlw	-4
 14636  016550  6AE3               	clrf	plusw1,c
 14637  016552  0EFD               	movlw	-3
 14638  016554  6AE3               	clrf	plusw1,c
 14639  016556  0EFE               	movlw	-2
 14640  016558  6AE3               	clrf	plusw1,c
 14641  01655A  0EFF               	movlw	-1
 14642  01655C  6AE3               	clrf	plusw1,c
 14643  01655E                     l6645:
 14644                           
 14645                           ;stkvar	_ff2 @ sp[(0)+-8]
 14646  01655E  50E1               	movf	fsr1l,w,c
 14647  016560  0FF8               	addlw	-8
 14648  016562  6ED9               	movwf	fsr2l,c
 14649  016564  50E2               	movf	fsr1h,w,c
 14650  016566  6EDA               	movwf	fsr2h,c
 14651  016568  0EFF               	movlw	255
 14652  01656A  22DA               	addwfc	fsr2h,f,c
 14653  01656C  0E00               	movlw	0
 14654  01656E  14DE               	andwf	postinc2,w,c
 14655  016570  6E3D               	movwf	(btemp+8)^0,c
 14656  016572  0E00               	movlw	0
 14657  016574  14DE               	andwf	postinc2,w,c
 14658  016576  6E3E               	movwf	(btemp+9)^0,c
 14659  016578  0E80               	movlw	128
 14660  01657A  14DE               	andwf	postinc2,w,c
 14661  01657C  6E3F               	movwf	(btemp+10)^0,c
 14662  01657E  0E7F               	movlw	127
 14663  016580  14DE               	andwf	postinc2,w,c
 14664  016582  6E40               	movwf	(btemp+11)^0,c
 14665  016584  503D               	movf	(btemp+8)^0,w,c
 14666  016586  103E               	iorwf	(btemp+9)^0,w,c
 14667  016588  103F               	iorwf	(btemp+10)^0,w,c
 14668  01658A  1040               	iorwf	(btemp+11)^0,w,c
 14669  01658C  A4D8               	btfss	status,2,c
 14670  01658E  D008               	goto	l6649
 14671                           
 14672                           ;stkvar	_ff2 @ sp[(0)+-8]
 14673  016590  0EF8               	movlw	-8
 14674  016592  6AE3               	clrf	plusw1,c
 14675  016594  0EF9               	movlw	-7
 14676  016596  6AE3               	clrf	plusw1,c
 14677  016598  0EFA               	movlw	-6
 14678  01659A  6AE3               	clrf	plusw1,c
 14679  01659C  0EFB               	movlw	-5
 14680  01659E  6AE3               	clrf	plusw1,c
 14681  0165A0                     l6649:
 14682                           
 14683                           ;stkvar	_ff2 @ sp[(0)+-8]
 14684                           ;stkvar	_ff1 @ sp[(0)+-4]
 14685  0165A0  50E1               	movf	fsr1l,w,c
 14686  0165A2  0FFC               	addlw	-4
 14687  0165A4  6ED9               	movwf	fsr2l,c
 14688  0165A6  50E2               	movf	fsr1h,w,c
 14689  0165A8  6EDA               	movwf	fsr2h,c
 14690  0165AA  0EFF               	movlw	255
 14691  0165AC  22DA               	addwfc	fsr2h,f,c
 14692  0165AE  0EF8               	movlw	-8
 14693  0165B0  50E3               	movf	plusw1,w,c
 14694  0165B2  18DE               	xorwf	postinc2,w,c
 14695  0165B4  E10D               	bnz	u5880
 14696  0165B6  0EF9               	movlw	-7
 14697  0165B8  50E3               	movf	plusw1,w,c
 14698  0165BA  18DE               	xorwf	postinc2,w,c
 14699  0165BC  E109               	bnz	u5880
 14700  0165BE  0EFA               	movlw	-6
 14701  0165C0  50E3               	movf	plusw1,w,c
 14702  0165C2  18DE               	xorwf	postinc2,w,c
 14703  0165C4  E105               	bnz	u5880
 14704  0165C6  0EFB               	movlw	-5
 14705  0165C8  50E3               	movf	plusw1,w,c
 14706  0165CA  18DE               	xorwf	postinc2,w,c
 14707  0165CC  B4D8               	btfsc	status,2,c
 14708  0165CE  D002               	goto	l6653
 14709  0165D0                     u5880:
 14710  0165D0  9035               	bcf	btemp& (0+255),0,c
 14711  0165D2  D001               	goto	l2196
 14712  0165D4                     l6653:
 14713  0165D4  8035               	bsf	btemp& (0+255),0,c
 14714  0165D6                     l2196:
 14715                           
 14716                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14717  0165D6  0EF8               	movlw	248
 14718  0165D8  26E1               	addwf	fsr1l,f,c
 14719  0165DA  0EFF               	movlw	255
 14720  0165DC  22E2               	addwfc	fsr1h,f,c
 14721  0165DE  0012               	return		;funcret
 14722  0165E0                     __end_of___fleq:
 14723                           	opt callstack 0
 14724                           
 14725 ;; *************** function ___fldiv *****************
 14726 ;; Defined at:
 14727 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;  b               4  [STACK] unsigned char 
 14730 ;;  a               4  [STACK] unsigned char 
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;  grs             4  [STACK] unsigned long 
 14733 ;;  rem             4  [STACK] unsigned long 
 14734 ;;  new_exp         2  [STACK] short 
 14735 ;;  aexp            1  [STACK] unsigned char 
 14736 ;;  bexp            1  [STACK] unsigned char 
 14737 ;;  sign            1  [STACK] unsigned char 
 14738 ;; Return value:  Size  Location     Type
 14739 ;;                  4  [STACK] unsigned char 
 14740 ;; Registers used:
 14741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14742 ;; Tracked objects:
 14743 ;;		On entry : 0/4
 14744 ;;		On exit  : 0/0
 14745 ;;		Unchanged: 0/0
 14746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14751 ;;Total ram usage:        0 bytes
 14752 ;; Hardware stack levels used:    1
 14753 ;; Hardware stack levels required when called:    6
 14754 ;; This function calls:
 14755 ;;		Nothing
 14756 ;; This function is called by:
 14757 ;;		_main
 14758 ;;		_efgtoa
 14759 ;; This function uses a reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text49
 14763  012D68                     __ptext49:
 14764                           	opt callstack 0
 14765  012D68                     ___fldiv:
 14766                           	opt callstack 0
 14767                           
 14768                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14769  012D68  0E0D               	movlw	13
 14770  012D6A  26E1               	addwf	fsr1l,f,c
 14771  012D6C  0E00               	movlw	0
 14772  012D6E  22E2               	addwfc	fsr1h,f,c
 14773                           
 14774                           ;stkvar	_b @ sp[(-13)+-4]
 14775                           
 14776                           ;incstack = 0
 14777  012D70  0EF2               	movlw	242
 14778  012D72  24E1               	addwf	fsr1l,w,c
 14779  012D74  6ED9               	movwf	fsr2l,c
 14780  012D76  0EFF               	movlw	255
 14781  012D78  20E2               	addwfc	fsr1h,w,c
 14782  012D7A  6EDA               	movwf	fsr2h,c
 14783  012D7C  50DF               	movf	indf2,w,c
 14784  012D7E  6E40               	movwf	(btemp+11)^0,c
 14785  012D80  0E80               	movlw	128
 14786  012D82  1640               	andwf	(btemp+11)^0,f,c
 14787                           
 14788                           ;stkvar	_sign @ sp[(-13)+12]
 14789  012D84  0EFF               	movlw	-1
 14790  012D86  0060  F103  FFE3   	movff	btemp+11,plusw1
 14791                           
 14792                           ;stkvar	_b @ sp[(-13)+-4]
 14793  012D8C  0EF2               	movlw	242
 14794  012D8E  24E1               	addwf	fsr1l,w,c
 14795  012D90  6ED9               	movwf	fsr2l,c
 14796  012D92  0EFF               	movlw	255
 14797  012D94  20E2               	addwfc	fsr1h,w,c
 14798  012D96  6EDA               	movwf	fsr2h,c
 14799  012D98  50DF               	movf	indf2,w,c
 14800  012D9A  6E40               	movwf	(btemp+11)^0,c
 14801  012D9C  90D8               	bcf	status,0,c
 14802  012D9E  3440               	rlcf	(btemp+11)^0,w,c
 14803  012DA0  6E3F               	movwf	(btemp+10)^0,c
 14804                           
 14805                           ;stkvar	_bexp @ sp[(-13)+11]
 14806  012DA2  0EFE               	movlw	-2
 14807  012DA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14808                           
 14809                           ;stkvar	_b @ sp[(-13)+-4]
 14810  012DAA  0EF1               	movlw	241
 14811  012DAC  24E1               	addwf	fsr1l,w,c
 14812  012DAE  6ED9               	movwf	fsr2l,c
 14813  012DB0  0EFF               	movlw	255
 14814  012DB2  20E2               	addwfc	fsr1h,w,c
 14815  012DB4  6EDA               	movwf	fsr2h,c
 14816  012DB6  AEDF               	btfss	indf2,7,c
 14817  012DB8  D002               	goto	l6247
 14818                           
 14819                           ;stkvar	_bexp @ sp[(-13)+11]
 14820  012DBA  0EFE               	movlw	-2
 14821  012DBC  80E3               	bsf	plusw1,0,c
 14822  012DBE                     l6247:
 14823                           
 14824                           ;stkvar	_bexp @ sp[(-13)+11]
 14825  012DBE  0EFE               	movlw	-2
 14826  012DC0  50E3               	movf	plusw1,w,c
 14827  012DC2  B4D8               	btfsc	status,2,c
 14828  012DC4  D027               	goto	l6257
 14829                           
 14830                           ;stkvar	_bexp @ sp[(-13)+11]
 14831  012DC6  0EFE               	movlw	-2
 14832  012DC8  28E3               	incf	plusw1,w,c
 14833  012DCA  A4D8               	btfss	status,2,c
 14834  012DCC  D018               	goto	l6253
 14835  012DCE  0E00               	movlw	0
 14836  012DD0  6E3D               	movwf	(btemp+8)^0,c
 14837  012DD2  0E00               	movlw	0
 14838  012DD4  6E3E               	movwf	(btemp+9)^0,c
 14839  012DD6  0E00               	movlw	0
 14840  012DD8  6E3F               	movwf	(btemp+10)^0,c
 14841  012DDA  0E00               	movlw	0
 14842  012DDC  6E40               	movwf	(btemp+11)^0,c
 14843                           
 14844                           ;stkvar	_b @ sp[(-13)+-4]
 14845  012DDE  0EEF               	movlw	-17
 14846  012DE0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14847  012DE6  0EF0               	movlw	-16
 14848  012DE8  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14849  012DEE  0EF1               	movlw	-15
 14850  012DF0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14851  012DF6  0EF2               	movlw	-14
 14852  012DF8  0060  F103  FFE3   	movff	btemp+11,plusw1
 14853  012DFE                     l6253:
 14854                           
 14855                           ;stkvar	_b @ sp[(-13)+-4]
 14856  012DFE  0EF1               	movlw	-15
 14857  012E00  8EE3               	bsf	plusw1,7,c
 14858                           
 14859                           ;stkvar	_b @ sp[(-13)+-4]
 14860  012E02  0EF2               	movlw	242
 14861  012E04  24E1               	addwf	fsr1l,w,c
 14862  012E06  6ED9               	movwf	fsr2l,c
 14863  012E08  0EFF               	movlw	255
 14864  012E0A  20E2               	addwfc	fsr1h,w,c
 14865  012E0C  6EDA               	movwf	fsr2h,c
 14866  012E0E  0E00               	movlw	0
 14867  012E10  6EDF               	movwf	indf2,c
 14868  012E12  D018               	goto	l6259
 14869  012E14                     l6257:
 14870  012E14  0E00               	movlw	0
 14871  012E16  6E3D               	movwf	(btemp+8)^0,c
 14872  012E18  0E00               	movlw	0
 14873  012E1A  6E3E               	movwf	(btemp+9)^0,c
 14874  012E1C  0E00               	movlw	0
 14875  012E1E  6E3F               	movwf	(btemp+10)^0,c
 14876  012E20  0E00               	movlw	0
 14877  012E22  6E40               	movwf	(btemp+11)^0,c
 14878                           
 14879                           ;stkvar	_b @ sp[(-13)+-4]
 14880  012E24  0EEF               	movlw	-17
 14881  012E26  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14882  012E2C  0EF0               	movlw	-16
 14883  012E2E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14884  012E34  0EF1               	movlw	-15
 14885  012E36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14886  012E3C  0EF2               	movlw	-14
 14887  012E3E  0060  F103  FFE3   	movff	btemp+11,plusw1
 14888  012E44                     l6259:
 14889                           
 14890                           ;stkvar	_a @ sp[(-13)+-8]
 14891  012E44  0EEE               	movlw	238
 14892  012E46  24E1               	addwf	fsr1l,w,c
 14893  012E48  6ED9               	movwf	fsr2l,c
 14894  012E4A  0EFF               	movlw	255
 14895  012E4C  20E2               	addwfc	fsr1h,w,c
 14896  012E4E  6EDA               	movwf	fsr2h,c
 14897  012E50  50DF               	movf	indf2,w,c
 14898  012E52  6E40               	movwf	(btemp+11)^0,c
 14899  012E54  0E80               	movlw	128
 14900  012E56  1640               	andwf	(btemp+11)^0,f,c
 14901                           
 14902                           ;stkvar	_sign @ sp[(-13)+12]
 14903  012E58  50E1               	movf	fsr1l,w,c
 14904  012E5A  0FFF               	addlw	-1
 14905  012E5C  6ED9               	movwf	fsr2l,c
 14906  012E5E  50E2               	movf	fsr1h,w,c
 14907  012E60  6EDA               	movwf	fsr2h,c
 14908  012E62  0EFF               	movlw	255
 14909  012E64  22DA               	addwfc	fsr2h,f,c
 14910  012E66  5040               	movf	(btemp+11)^0,w,c
 14911  012E68  1ADF               	xorwf	indf2,f,c
 14912                           
 14913                           ;stkvar	_a @ sp[(-13)+-8]
 14914  012E6A  0EEE               	movlw	238
 14915  012E6C  24E1               	addwf	fsr1l,w,c
 14916  012E6E  6ED9               	movwf	fsr2l,c
 14917  012E70  0EFF               	movlw	255
 14918  012E72  20E2               	addwfc	fsr1h,w,c
 14919  012E74  6EDA               	movwf	fsr2h,c
 14920  012E76  50DF               	movf	indf2,w,c
 14921  012E78  6E40               	movwf	(btemp+11)^0,c
 14922  012E7A  90D8               	bcf	status,0,c
 14923  012E7C  3440               	rlcf	(btemp+11)^0,w,c
 14924  012E7E  6E3F               	movwf	(btemp+10)^0,c
 14925                           
 14926                           ;stkvar	_aexp @ sp[(-13)+10]
 14927  012E80  0EFD               	movlw	-3
 14928  012E82  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14929                           
 14930                           ;stkvar	_a @ sp[(-13)+-8]
 14931  012E88  0EED               	movlw	237
 14932  012E8A  24E1               	addwf	fsr1l,w,c
 14933  012E8C  6ED9               	movwf	fsr2l,c
 14934  012E8E  0EFF               	movlw	255
 14935  012E90  20E2               	addwfc	fsr1h,w,c
 14936  012E92  6EDA               	movwf	fsr2h,c
 14937  012E94  AEDF               	btfss	indf2,7,c
 14938  012E96  D002               	goto	l6267
 14939                           
 14940                           ;stkvar	_aexp @ sp[(-13)+10]
 14941  012E98  0EFD               	movlw	-3
 14942  012E9A  80E3               	bsf	plusw1,0,c
 14943  012E9C                     l6267:
 14944                           
 14945                           ;stkvar	_aexp @ sp[(-13)+10]
 14946  012E9C  0EFD               	movlw	-3
 14947  012E9E  50E3               	movf	plusw1,w,c
 14948  012EA0  B4D8               	btfsc	status,2,c
 14949  012EA2  D027               	goto	l6277
 14950                           
 14951                           ;stkvar	_aexp @ sp[(-13)+10]
 14952  012EA4  0EFD               	movlw	-3
 14953  012EA6  28E3               	incf	plusw1,w,c
 14954  012EA8  A4D8               	btfss	status,2,c
 14955  012EAA  D018               	goto	l6273
 14956  012EAC  0E00               	movlw	0
 14957  012EAE  6E3D               	movwf	(btemp+8)^0,c
 14958  012EB0  0E00               	movlw	0
 14959  012EB2  6E3E               	movwf	(btemp+9)^0,c
 14960  012EB4  0E00               	movlw	0
 14961  012EB6  6E3F               	movwf	(btemp+10)^0,c
 14962  012EB8  0E00               	movlw	0
 14963  012EBA  6E40               	movwf	(btemp+11)^0,c
 14964                           
 14965                           ;stkvar	_a @ sp[(-13)+-8]
 14966  012EBC  0EEB               	movlw	-21
 14967  012EBE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14968  012EC4  0EEC               	movlw	-20
 14969  012EC6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14970  012ECC  0EED               	movlw	-19
 14971  012ECE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14972  012ED4  0EEE               	movlw	-18
 14973  012ED6  0060  F103  FFE3   	movff	btemp+11,plusw1
 14974  012EDC                     l6273:
 14975                           
 14976                           ;stkvar	_a @ sp[(-13)+-8]
 14977  012EDC  0EED               	movlw	-19
 14978  012EDE  8EE3               	bsf	plusw1,7,c
 14979                           
 14980                           ;stkvar	_a @ sp[(-13)+-8]
 14981  012EE0  0EEE               	movlw	238
 14982  012EE2  24E1               	addwf	fsr1l,w,c
 14983  012EE4  6ED9               	movwf	fsr2l,c
 14984  012EE6  0EFF               	movlw	255
 14985  012EE8  20E2               	addwfc	fsr1h,w,c
 14986  012EEA  6EDA               	movwf	fsr2h,c
 14987  012EEC  0E00               	movlw	0
 14988  012EEE  6EDF               	movwf	indf2,c
 14989  012EF0  D018               	goto	l6279
 14990  012EF2                     l6277:
 14991  012EF2  0E00               	movlw	0
 14992  012EF4  6E3D               	movwf	(btemp+8)^0,c
 14993  012EF6  0E00               	movlw	0
 14994  012EF8  6E3E               	movwf	(btemp+9)^0,c
 14995  012EFA  0E00               	movlw	0
 14996  012EFC  6E3F               	movwf	(btemp+10)^0,c
 14997  012EFE  0E00               	movlw	0
 14998  012F00  6E40               	movwf	(btemp+11)^0,c
 14999                           
 15000                           ;stkvar	_a @ sp[(-13)+-8]
 15001  012F02  0EEB               	movlw	-21
 15002  012F04  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15003  012F0A  0EEC               	movlw	-20
 15004  012F0C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15005  012F12  0EED               	movlw	-19
 15006  012F14  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15007  012F1A  0EEE               	movlw	-18
 15008  012F1C  0060  F103  FFE3   	movff	btemp+11,plusw1
 15009  012F22                     l6279:
 15010                           
 15011                           ;stkvar	_a @ sp[(-13)+-8]
 15012  012F22  0EEB               	movlw	-21
 15013  012F24  50E3               	movf	plusw1,w,c
 15014  012F26  E139               	bnz	l6291
 15015  012F28  0EEC               	movlw	-20
 15016  012F2A  50E3               	movf	plusw1,w,c
 15017  012F2C  E136               	bnz	l6291
 15018  012F2E  0EED               	movlw	-19
 15019  012F30  50E3               	movf	plusw1,w,c
 15020  012F32  E133               	bnz	l6291
 15021  012F34  0EEE               	movlw	-18
 15022  012F36  50E3               	movf	plusw1,w,c
 15023  012F38  A4D8               	btfss	status,2,c
 15024  012F3A  D02F               	goto	l6291
 15025                           
 15026                           ;stkvar	_b @ sp[(-13)+-4]
 15027  012F3C  0EEF               	movlw	-17
 15028  012F3E  6AE3               	clrf	plusw1,c
 15029  012F40  0EF0               	movlw	-16
 15030  012F42  6AE3               	clrf	plusw1,c
 15031  012F44  0EF1               	movlw	-15
 15032  012F46  6AE3               	clrf	plusw1,c
 15033  012F48  0EF2               	movlw	-14
 15034  012F4A  6AE3               	clrf	plusw1,c
 15035                           
 15036                           ;stkvar	_b @ sp[(-13)+-4]
 15037  012F4C  0EF1               	movlw	241
 15038  012F4E  24E1               	addwf	fsr1l,w,c
 15039  012F50  6ED9               	movwf	fsr2l,c
 15040  012F52  0EFF               	movlw	255
 15041  012F54  20E2               	addwfc	fsr1h,w,c
 15042  012F56  6EDA               	movwf	fsr2h,c
 15043  012F58  0E80               	movlw	128
 15044  012F5A  12DE               	iorwf	postinc2,f,c
 15045  012F5C  0E7F               	movlw	127
 15046  012F5E  12DD               	iorwf	postdec2,f,c
 15047  012F60                     l6285:
 15048                           
 15049                           ;stkvar	_sign @ sp[(-13)+12]
 15050  012F60  0EFF               	movlw	-1
 15051  012F62  006F FF8C  F040    	movff	plusw1,btemp+11
 15052                           
 15053                           ;stkvar	_b @ sp[(-13)+-4]
 15054  012F68  0EF2               	movlw	242
 15055  012F6A  24E1               	addwf	fsr1l,w,c
 15056  012F6C  6ED9               	movwf	fsr2l,c
 15057  012F6E  0EFF               	movlw	255
 15058  012F70  20E2               	addwfc	fsr1h,w,c
 15059  012F72  6EDA               	movwf	fsr2h,c
 15060  012F74  5040               	movf	(btemp+11)^0,w,c
 15061  012F76  12DF               	iorwf	indf2,f,c
 15062                           
 15063                           ;stkvar	_b @ sp[(-13)+-4]
 15064  012F78  0EEF               	movlw	-17
 15065  012F7A  006F FF8C  F035    	movff	plusw1,btemp
 15066  012F80  0EF0               	movlw	-16
 15067  012F82  006F FF8C  F036    	movff	plusw1,btemp+1
 15068  012F88  0EF1               	movlw	-15
 15069  012F8A  006F FF8C  F037    	movff	plusw1,btemp+2
 15070  012F90  0EF2               	movlw	-14
 15071  012F92  006F FF8C  F038    	movff	plusw1,btemp+3
 15072  012F98  D19F               	goto	l2519
 15073  012F9A                     l6291:
 15074                           
 15075                           ;stkvar	_bexp @ sp[(-13)+11]
 15076  012F9A  0EFE               	movlw	-2
 15077  012F9C  50E3               	movf	plusw1,w,c
 15078  012F9E  A4D8               	btfss	status,2,c
 15079  012FA0  D009               	goto	l6299
 15080  012FA2  0E00               	movlw	0
 15081  012FA4  6E35               	movwf	btemp^0,c
 15082  012FA6  0E00               	movlw	0
 15083  012FA8  6E36               	movwf	(btemp+1)^0,c
 15084  012FAA  0E00               	movlw	0
 15085  012FAC  6E37               	movwf	(btemp+2)^0,c
 15086  012FAE  0E00               	movlw	0
 15087  012FB0  6E38               	movwf	(btemp+3)^0,c
 15088  012FB2  D192               	goto	l2519
 15089  012FB4                     l6299:
 15090                           
 15091                           ;stkvar	_bexp @ sp[(-13)+11]
 15092  012FB4  0EFE               	movlw	-2
 15093  012FB6  50E3               	movf	plusw1,w,c
 15094  012FB8  6E3F               	movwf	(btemp+10)^0,c
 15095  012FBA  6A40               	clrf	(btemp+11)^0,c
 15096                           
 15097                           ;stkvar	_aexp @ sp[(-13)+10]
 15098  012FBC  0EFD               	movlw	-3
 15099  012FBE  50E3               	movf	plusw1,w,c
 15100  012FC0  5E3F               	subwf	(btemp+10)^0,f,c
 15101  012FC2  0E00               	movlw	0
 15102  012FC4  5A40               	subwfb	(btemp+11)^0,f,c
 15103  012FC6  0E7F               	movlw	127
 15104  012FC8  263F               	addwf	(btemp+10)^0,f,c
 15105  012FCA  0E00               	movlw	0
 15106  012FCC  2240               	addwfc	(btemp+11)^0,f,c
 15107                           
 15108                           ;stkvar	_new_exp @ sp[(-13)+8]
 15109  012FCE  0EFB               	movlw	-5
 15110  012FD0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15111  012FD6  0EFC               	movlw	-4
 15112  012FD8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15113                           
 15114                           ;stkvar	_b @ sp[(-13)+-4]
 15115  012FDE  0EEF               	movlw	-17
 15116  012FE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 15117  012FE6  0EF0               	movlw	-16
 15118  012FE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 15119  012FEE  0EF1               	movlw	-15
 15120  012FF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 15121  012FF6  0EF2               	movlw	-14
 15122  012FF8  006F FF8C  F040    	movff	plusw1,btemp+11
 15123                           
 15124                           ;stkvar	_rem @ sp[(-13)+4]
 15125  012FFE  0EF7               	movlw	-9
 15126  013000  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15127  013006  0EF8               	movlw	-8
 15128  013008  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15129  01300E  0EF9               	movlw	-7
 15130  013010  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15131  013016  0EFA               	movlw	-6
 15132  013018  0060  F103  FFE3   	movff	btemp+11,plusw1
 15133                           
 15134                           ;stkvar	_b @ sp[(-13)+-4]
 15135  01301E  0EEF               	movlw	-17
 15136  013020  6AE3               	clrf	plusw1,c
 15137  013022  0EF0               	movlw	-16
 15138  013024  6AE3               	clrf	plusw1,c
 15139  013026  0EF1               	movlw	-15
 15140  013028  6AE3               	clrf	plusw1,c
 15141  01302A  0EF2               	movlw	-14
 15142  01302C  6AE3               	clrf	plusw1,c
 15143                           
 15144                           ;stkvar	_grs @ sp[(-13)+0]
 15145  01302E  0EF3               	movlw	-13
 15146  013030  6AE3               	clrf	plusw1,c
 15147  013032  0EF4               	movlw	-12
 15148  013034  6AE3               	clrf	plusw1,c
 15149  013036  0EF5               	movlw	-11
 15150  013038  6AE3               	clrf	plusw1,c
 15151  01303A  0EF6               	movlw	-10
 15152  01303C  6AE3               	clrf	plusw1,c
 15153                           
 15154                           ;stkvar	_aexp @ sp[(-13)+10]
 15155  01303E  0EFD               	movlw	-3
 15156  013040  6AE3               	clrf	plusw1,c
 15157  013042  D050               	goto	l6327
 15158  013044                     l6309:
 15159                           
 15160                           ;stkvar	_aexp @ sp[(-13)+10]
 15161  013044  0EFD               	movlw	-3
 15162  013046  50E3               	movf	plusw1,w,c
 15163  013048  B4D8               	btfsc	status,2,c
 15164  01304A  D020               	goto	l6319
 15165                           
 15166                           ;stkvar	_rem @ sp[(-13)+4]
 15167  01304C  90D8               	bcf	status,0,c
 15168  01304E  0EF7               	movlw	-9
 15169  013050  36E3               	rlcf	plusw1,f,c
 15170  013052  0EF8               	movlw	-8
 15171  013054  36E3               	rlcf	plusw1,f,c
 15172  013056  0EF9               	movlw	-7
 15173  013058  36E3               	rlcf	plusw1,f,c
 15174  01305A  0EFA               	movlw	-6
 15175  01305C  36E3               	rlcf	plusw1,f,c
 15176                           
 15177                           ;stkvar	_b @ sp[(-13)+-4]
 15178  01305E  90D8               	bcf	status,0,c
 15179  013060  0EEF               	movlw	-17
 15180  013062  36E3               	rlcf	plusw1,f,c
 15181  013064  0EF0               	movlw	-16
 15182  013066  36E3               	rlcf	plusw1,f,c
 15183  013068  0EF1               	movlw	-15
 15184  01306A  36E3               	rlcf	plusw1,f,c
 15185  01306C  0EF2               	movlw	-14
 15186  01306E  36E3               	rlcf	plusw1,f,c
 15187                           
 15188                           ;stkvar	_grs @ sp[(-13)+0]
 15189  013070  0EF6               	movlw	-10
 15190  013072  AEE3               	btfss	plusw1,7,c
 15191  013074  D002               	goto	l6317
 15192                           
 15193                           ;stkvar	_b @ sp[(-13)+-4]
 15194  013076  0EEF               	movlw	-17
 15195  013078  80E3               	bsf	plusw1,0,c
 15196  01307A                     l6317:
 15197                           
 15198                           ;stkvar	_grs @ sp[(-13)+0]
 15199  01307A  90D8               	bcf	status,0,c
 15200  01307C  0EF3               	movlw	-13
 15201  01307E  36E3               	rlcf	plusw1,f,c
 15202  013080  0EF4               	movlw	-12
 15203  013082  36E3               	rlcf	plusw1,f,c
 15204  013084  0EF5               	movlw	-11
 15205  013086  36E3               	rlcf	plusw1,f,c
 15206  013088  0EF6               	movlw	-10
 15207  01308A  36E3               	rlcf	plusw1,f,c
 15208  01308C                     l6319:
 15209                           
 15210                           ;stkvar	_a @ sp[(-13)+-8]
 15211                           ;stkvar	_rem @ sp[(-13)+4]
 15212  01308C  50E1               	movf	fsr1l,w,c
 15213  01308E  0FF7               	addlw	-9
 15214  013090  6ED9               	movwf	fsr2l,c
 15215  013092  50E2               	movf	fsr1h,w,c
 15216  013094  6EDA               	movwf	fsr2h,c
 15217  013096  0EFF               	movlw	255
 15218  013098  22DA               	addwfc	fsr2h,f,c
 15219  01309A  0EEB               	movlw	-21
 15220  01309C  50E3               	movf	plusw1,w,c
 15221  01309E  5CDE               	subwf	postinc2,w,c
 15222  0130A0  0EEC               	movlw	-20
 15223  0130A2  50E3               	movf	plusw1,w,c
 15224  0130A4  58DE               	subwfb	postinc2,w,c
 15225  0130A6  0EED               	movlw	-19
 15226  0130A8  50E3               	movf	plusw1,w,c
 15227  0130AA  58DE               	subwfb	postinc2,w,c
 15228  0130AC  0EEE               	movlw	-18
 15229  0130AE  50E3               	movf	plusw1,w,c
 15230  0130B0  58DE               	subwfb	postinc2,w,c
 15231  0130B2  A0D8               	btfss	status,0,c
 15232  0130B4  D015               	goto	l6325
 15233                           
 15234                           ;stkvar	_grs @ sp[(-13)+0]
 15235  0130B6  0EF6               	movlw	-10
 15236  0130B8  8CE3               	bsf	plusw1,6,c
 15237                           
 15238                           ;stkvar	_a @ sp[(-13)+-8]
 15239                           ;stkvar	_rem @ sp[(-13)+4]
 15240  0130BA  50E1               	movf	fsr1l,w,c
 15241  0130BC  0FF7               	addlw	-9
 15242  0130BE  6ED9               	movwf	fsr2l,c
 15243  0130C0  50E2               	movf	fsr1h,w,c
 15244  0130C2  6EDA               	movwf	fsr2h,c
 15245  0130C4  0EFF               	movlw	255
 15246  0130C6  22DA               	addwfc	fsr2h,f,c
 15247  0130C8  0EEB               	movlw	-21
 15248  0130CA  50E3               	movf	plusw1,w,c
 15249  0130CC  5EDE               	subwf	postinc2,f,c
 15250  0130CE  0EEC               	movlw	-20
 15251  0130D0  50E3               	movf	plusw1,w,c
 15252  0130D2  5ADE               	subwfb	postinc2,f,c
 15253  0130D4  0EED               	movlw	-19
 15254  0130D6  50E3               	movf	plusw1,w,c
 15255  0130D8  5ADE               	subwfb	postinc2,f,c
 15256  0130DA  0EEE               	movlw	-18
 15257  0130DC  50E3               	movf	plusw1,w,c
 15258  0130DE  5ADE               	subwfb	postinc2,f,c
 15259  0130E0                     l6325:
 15260                           
 15261                           ;stkvar	_aexp @ sp[(-13)+10]
 15262  0130E0  0EFD               	movlw	-3
 15263  0130E2  2AE3               	incf	plusw1,f,c
 15264  0130E4                     l6327:
 15265                           
 15266                           ;stkvar	_aexp @ sp[(-13)+10]
 15267  0130E4  0EFD               	movlw	-3
 15268  0130E6  006F FF8C  F035    	movff	plusw1,btemp
 15269  0130EC  0E19               	movlw	25
 15270  0130EE  6435               	cpfsgt	btemp^0,c
 15271  0130F0  D7A9               	goto	l6309
 15272                           
 15273                           ;stkvar	_rem @ sp[(-13)+4]
 15274  0130F2  0EF7               	movlw	-9
 15275  0130F4  50E3               	movf	plusw1,w,c
 15276  0130F6  E10A               	bnz	u5380
 15277  0130F8  0EF8               	movlw	-8
 15278  0130FA  50E3               	movf	plusw1,w,c
 15279  0130FC  E107               	bnz	u5380
 15280  0130FE  0EF9               	movlw	-7
 15281  013100  50E3               	movf	plusw1,w,c
 15282  013102  E104               	bnz	u5380
 15283  013104  0EFA               	movlw	-6
 15284  013106  50E3               	movf	plusw1,w,c
 15285  013108  B4D8               	btfsc	status,2,c
 15286  01310A  D024               	goto	l6343
 15287  01310C                     u5380:
 15288                           
 15289                           ;stkvar	_grs @ sp[(-13)+0]
 15290  01310C  0EF3               	movlw	-13
 15291  01310E  80E3               	bsf	plusw1,0,c
 15292  013110  D021               	goto	l6343
 15293  013112                     l6333:
 15294                           
 15295                           ;stkvar	_b @ sp[(-13)+-4]
 15296  013112  90D8               	bcf	status,0,c
 15297  013114  0EEF               	movlw	-17
 15298  013116  36E3               	rlcf	plusw1,f,c
 15299  013118  0EF0               	movlw	-16
 15300  01311A  36E3               	rlcf	plusw1,f,c
 15301  01311C  0EF1               	movlw	-15
 15302  01311E  36E3               	rlcf	plusw1,f,c
 15303  013120  0EF2               	movlw	-14
 15304  013122  36E3               	rlcf	plusw1,f,c
 15305                           
 15306                           ;stkvar	_grs @ sp[(-13)+0]
 15307  013124  0EF6               	movlw	-10
 15308  013126  AEE3               	btfss	plusw1,7,c
 15309  013128  D002               	goto	l6339
 15310                           
 15311                           ;stkvar	_b @ sp[(-13)+-4]
 15312  01312A  0EEF               	movlw	-17
 15313  01312C  80E3               	bsf	plusw1,0,c
 15314  01312E                     l6339:
 15315                           
 15316                           ;stkvar	_grs @ sp[(-13)+0]
 15317  01312E  90D8               	bcf	status,0,c
 15318  013130  0EF3               	movlw	-13
 15319  013132  36E3               	rlcf	plusw1,f,c
 15320  013134  0EF4               	movlw	-12
 15321  013136  36E3               	rlcf	plusw1,f,c
 15322  013138  0EF5               	movlw	-11
 15323  01313A  36E3               	rlcf	plusw1,f,c
 15324  01313C  0EF6               	movlw	-10
 15325  01313E  36E3               	rlcf	plusw1,f,c
 15326                           
 15327                           ;stkvar	_new_exp @ sp[(-13)+8]
 15328  013140  50E1               	movf	fsr1l,w,c
 15329  013142  0FFB               	addlw	-5
 15330  013144  6ED9               	movwf	fsr2l,c
 15331  013146  50E2               	movf	fsr1h,w,c
 15332  013148  6EDA               	movwf	fsr2h,c
 15333  01314A  0EFF               	movlw	255
 15334  01314C  22DA               	addwfc	fsr2h,f,c
 15335  01314E  06DE               	decf	postinc2,f,c
 15336  013150  0E00               	movlw	0
 15337  013152  5ADD               	subwfb	postdec2,f,c
 15338  013154                     l6343:
 15339                           
 15340                           ;stkvar	_b @ sp[(-13)+-4]
 15341  013154  0EF1               	movlw	-15
 15342  013156  AEE3               	btfss	plusw1,7,c
 15343  013158  D7DC               	goto	l6333
 15344                           
 15345                           ;stkvar	_aexp @ sp[(-13)+10]
 15346  01315A  0EFD               	movlw	-3
 15347  01315C  6AE3               	clrf	plusw1,c
 15348                           
 15349                           ;stkvar	_grs @ sp[(-13)+0]
 15350  01315E  0EF6               	movlw	-10
 15351  013160  AEE3               	btfss	plusw1,7,c
 15352  013162  D020               	goto	l6357
 15353                           
 15354                           ;stkvar	_grs @ sp[(-13)+0]
 15355  013164  50E1               	movf	fsr1l,w,c
 15356  013166  0FF3               	addlw	-13
 15357  013168  6ED9               	movwf	fsr2l,c
 15358  01316A  50E2               	movf	fsr1h,w,c
 15359  01316C  6EDA               	movwf	fsr2h,c
 15360  01316E  0EFF               	movlw	255
 15361  013170  22DA               	addwfc	fsr2h,f,c
 15362  013172  0EFF               	movlw	255
 15363  013174  14DE               	andwf	postinc2,w,c
 15364  013176  6E3D               	movwf	(btemp+8)^0,c
 15365  013178  0EFF               	movlw	255
 15366  01317A  14DE               	andwf	postinc2,w,c
 15367  01317C  6E3E               	movwf	(btemp+9)^0,c
 15368  01317E  0EFF               	movlw	255
 15369  013180  14DE               	andwf	postinc2,w,c
 15370  013182  6E3F               	movwf	(btemp+10)^0,c
 15371  013184  0E7F               	movlw	127
 15372  013186  14DE               	andwf	postinc2,w,c
 15373  013188  6E40               	movwf	(btemp+11)^0,c
 15374  01318A  503D               	movf	(btemp+8)^0,w,c
 15375  01318C  103E               	iorwf	(btemp+9)^0,w,c
 15376  01318E  103F               	iorwf	(btemp+10)^0,w,c
 15377  013190  1040               	iorwf	(btemp+11)^0,w,c
 15378  013192  B4D8               	btfsc	status,2,c
 15379  013194  D004               	goto	l6353
 15380  013196                     u5420:
 15381                           
 15382                           ;stkvar	_aexp @ sp[(-13)+10]
 15383  013196  0EFD               	movlw	-3
 15384  013198  6AE3               	clrf	plusw1,c
 15385  01319A  2AE3               	incf	plusw1,f,c
 15386  01319C  D003               	goto	l6357
 15387  01319E                     l6353:
 15388                           
 15389                           ;stkvar	_b @ sp[(-13)+-4]
 15390  01319E  0EEF               	movlw	-17
 15391  0131A0  B0E3               	btfsc	plusw1,0,c
 15392  0131A2  D7F9               	goto	u5420
 15393  0131A4                     l6357:
 15394                           
 15395                           ;stkvar	_aexp @ sp[(-13)+10]
 15396  0131A4  0EFD               	movlw	-3
 15397  0131A6  50E3               	movf	plusw1,w,c
 15398  0131A8  B4D8               	btfsc	status,2,c
 15399  0131AA  D036               	goto	l6367
 15400                           
 15401                           ;stkvar	_b @ sp[(-13)+-4]
 15402  0131AC  50E1               	movf	fsr1l,w,c
 15403  0131AE  0FEF               	addlw	-17
 15404  0131B0  6ED9               	movwf	fsr2l,c
 15405  0131B2  50E2               	movf	fsr1h,w,c
 15406  0131B4  6EDA               	movwf	fsr2h,c
 15407  0131B6  0EFF               	movlw	255
 15408  0131B8  22DA               	addwfc	fsr2h,f,c
 15409  0131BA  2ADE               	incf	postinc2,f,c
 15410  0131BC  0E00               	movlw	0
 15411  0131BE  22DE               	addwfc	postinc2,f,c
 15412  0131C0  22DE               	addwfc	postinc2,f,c
 15413  0131C2  22DE               	addwfc	postinc2,f,c
 15414                           
 15415                           ;stkvar	_b @ sp[(-13)+-4]
 15416  0131C4  0EF2               	movlw	-14
 15417  0131C6  A0E3               	btfss	plusw1,0,c
 15418  0131C8  D027               	goto	l6367
 15419  0131CA  0E01               	movlw	1
 15420  0131CC  6E40               	movwf	(btemp+11)^0,c
 15421                           
 15422                           ;stkvar	_b @ sp[(-13)+-4]
 15423  0131CE  50E1               	movf	fsr1l,w,c
 15424  0131D0  0FEF               	addlw	-17
 15425  0131D2  6ED9               	movwf	fsr2l,c
 15426  0131D4  50E2               	movf	fsr1h,w,c
 15427  0131D6  6EDA               	movwf	fsr2h,c
 15428  0131D8  0EFF               	movlw	255
 15429  0131DA  22DA               	addwfc	fsr2h,f,c
 15430  0131DC  2840               	incf	(btemp+11)^0,w,c
 15431  0131DE  52DE               	movf	postinc2,f,c
 15432  0131E0  D008               	goto	u5460
 15433  0131E2                     u5465:
 15434  0131E2  52DE               	movf	postinc2,f,c
 15435  0131E4  90D8               	bcf	status,0,c
 15436  0131E6  BEDC               	btfsc	preinc2,7,c
 15437  0131E8  80D8               	bsf	status,0,c
 15438  0131EA  32DD               	rrcf	postdec2,f,c
 15439  0131EC  32DD               	rrcf	postdec2,f,c
 15440  0131EE  32DD               	rrcf	postdec2,f,c
 15441  0131F0  32DE               	rrcf	postinc2,f,c
 15442  0131F2                     u5460:
 15443  0131F2  2EE8               	decfsz	wreg,f,c
 15444  0131F4  D7F6               	goto	u5465
 15445                           
 15446                           ;stkvar	_new_exp @ sp[(-13)+8]
 15447  0131F6  0EFB               	movlw	-5
 15448  0131F8  50E3               	movf	plusw1,w,c
 15449  0131FA  0F01               	addlw	1
 15450  0131FC  6E35               	movwf	btemp^0,c
 15451  0131FE  0EFB               	movlw	-5
 15452  013200  0060  F0D7  FFE3   	movff	btemp,plusw1
 15453  013206  6A35               	clrf	btemp^0,c
 15454  013208  0EFC               	movlw	-4
 15455  01320A  50E3               	movf	plusw1,w,c
 15456  01320C  2035               	addwfc	btemp^0,w,c
 15457  01320E  6E35               	movwf	btemp^0,c
 15458  013210  0EFC               	movlw	-4
 15459  013212  0060  F0D7  FFE3   	movff	btemp,plusw1
 15460  013218                     l6367:
 15461                           
 15462                           ;stkvar	_new_exp @ sp[(-13)+8]
 15463  013218  0EFC               	movlw	-4
 15464  01321A  BEE3               	btfsc	plusw1,7,c
 15465  01321C  D01B               	goto	l6373
 15466  01321E  0EFC               	movlw	-4
 15467  013220  50E3               	movf	plusw1,w,c
 15468  013222  E104               	bnz	u5470
 15469  013224  0EFB               	movlw	-5
 15470  013226  28E3               	incf	plusw1,w,c
 15471  013228  A0D8               	btfss	status,0,c
 15472  01322A  D014               	goto	l6373
 15473  01322C                     u5470:
 15474  01322C  0EFF               	movlw	255
 15475  01322E  6E3F               	movwf	(btemp+10)^0,c
 15476  013230  0E00               	movlw	0
 15477  013232  6E40               	movwf	(btemp+11)^0,c
 15478                           
 15479                           ;stkvar	_new_exp @ sp[(-13)+8]
 15480  013234  0EFB               	movlw	-5
 15481  013236  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15482  01323C  0EFC               	movlw	-4
 15483  01323E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15484                           
 15485                           ;stkvar	_b @ sp[(-13)+-4]
 15486  013244  0EEF               	movlw	-17
 15487  013246  6AE3               	clrf	plusw1,c
 15488  013248  0EF0               	movlw	-16
 15489  01324A  6AE3               	clrf	plusw1,c
 15490  01324C  0EF1               	movlw	-15
 15491  01324E  6AE3               	clrf	plusw1,c
 15492  013250  0EF2               	movlw	-14
 15493  013252  6AE3               	clrf	plusw1,c
 15494  013254                     l6373:
 15495                           
 15496                           ;stkvar	_new_exp @ sp[(-13)+8]
 15497  013254  0EFC               	movlw	-4
 15498  013256  BEE3               	btfsc	plusw1,7,c
 15499  013258  D007               	goto	u5480
 15500  01325A  0EFC               	movlw	-4
 15501  01325C  50E3               	movf	plusw1,w,c
 15502  01325E  E112               	bnz	l6379
 15503  013260  0EFB               	movlw	-5
 15504  013262  04E3               	decf	plusw1,w,c
 15505  013264  B0D8               	btfsc	status,0,c
 15506  013266  D00E               	goto	l6379
 15507  013268                     u5480:
 15508                           
 15509                           ;stkvar	_new_exp @ sp[(-13)+8]
 15510  013268  0EFB               	movlw	-5
 15511  01326A  6AE3               	clrf	plusw1,c
 15512  01326C  0EFC               	movlw	-4
 15513  01326E  6AE3               	clrf	plusw1,c
 15514                           
 15515                           ;stkvar	_b @ sp[(-13)+-4]
 15516  013270  0EEF               	movlw	-17
 15517  013272  6AE3               	clrf	plusw1,c
 15518  013274  0EF0               	movlw	-16
 15519  013276  6AE3               	clrf	plusw1,c
 15520  013278  0EF1               	movlw	-15
 15521  01327A  6AE3               	clrf	plusw1,c
 15522  01327C  0EF2               	movlw	-14
 15523  01327E  6AE3               	clrf	plusw1,c
 15524                           
 15525                           ;stkvar	_sign @ sp[(-13)+12]
 15526  013280  0EFF               	movlw	-1
 15527  013282  6AE3               	clrf	plusw1,c
 15528  013284                     l6379:
 15529                           
 15530                           ;stkvar	_new_exp @ sp[(-13)+8]
 15531                           ;stkvar	_bexp @ sp[(-13)+11]
 15532  013284  0EFB               	movlw	-5
 15533  013286  006F FF8C  F035    	movff	plusw1,btemp
 15534  01328C  0EFE               	movlw	-2
 15535  01328E  0060  F0D7  FFE3   	movff	btemp,plusw1
 15536                           
 15537                           ;stkvar	_bexp @ sp[(-13)+11]
 15538  013294  0EFE               	movlw	-2
 15539  013296  A0E3               	btfss	plusw1,0,c
 15540  013298  D009               	goto	l6385
 15541                           
 15542                           ;stkvar	_b @ sp[(-13)+-4]
 15543  01329A  0EF1               	movlw	241
 15544  01329C  24E1               	addwf	fsr1l,w,c
 15545  01329E  6ED9               	movwf	fsr2l,c
 15546  0132A0  0EFF               	movlw	255
 15547  0132A2  20E2               	addwfc	fsr1h,w,c
 15548  0132A4  6EDA               	movwf	fsr2h,c
 15549  0132A6  0E00               	movlw	0
 15550  0132A8  8EDB               	bsf	plusw2,7,c
 15551  0132AA  D008               	goto	l6387
 15552  0132AC                     l6385:
 15553                           
 15554                           ;stkvar	_b @ sp[(-13)+-4]
 15555  0132AC  0EF1               	movlw	241
 15556  0132AE  24E1               	addwf	fsr1l,w,c
 15557  0132B0  6ED9               	movwf	fsr2l,c
 15558  0132B2  0EFF               	movlw	255
 15559  0132B4  20E2               	addwfc	fsr1h,w,c
 15560  0132B6  6EDA               	movwf	fsr2h,c
 15561  0132B8  0E7F               	movlw	127
 15562  0132BA  16DF               	andwf	indf2,f,c
 15563  0132BC                     l6387:
 15564                           
 15565                           ;stkvar	_b @ sp[(-13)+-4]
 15566  0132BC  0EF2               	movlw	242
 15567  0132BE  24E1               	addwf	fsr1l,w,c
 15568  0132C0  6ED9               	movwf	fsr2l,c
 15569  0132C2  0EFF               	movlw	255
 15570  0132C4  20E2               	addwfc	fsr1h,w,c
 15571  0132C6  6EDA               	movwf	fsr2h,c
 15572                           
 15573                           ;stkvar	_bexp @ sp[(-13)+11]
 15574  0132C8  0EFE               	movlw	-2
 15575  0132CA  006F FF8C  F040    	movff	plusw1,btemp+11
 15576  0132D0  90D8               	bcf	status,0,c
 15577  0132D2  3040               	rrcf	(btemp+11)^0,w,c
 15578  0132D4  6EDF               	movwf	indf2,c
 15579  0132D6  D644               	goto	l6285
 15580  0132D8                     l2519:
 15581                           
 15582                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15583  0132D8  0EEB               	movlw	235
 15584  0132DA  26E1               	addwf	fsr1l,f,c
 15585  0132DC  0EFF               	movlw	255
 15586  0132DE  22E2               	addwfc	fsr1h,f,c
 15587  0132E0  0012               	return		;funcret
 15588  0132E2                     __end_of___fldiv:
 15589                           	opt callstack 0
 15590                           
 15591 ;; *************** function ___awmod *****************
 15592 ;; Defined at:
 15593 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15594 ;; Parameters:    Size  Location     Type
 15595 ;;  dividend        2  [STACK] int 
 15596 ;;  divisor         2  [STACK] int 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;  sign            1  [STACK] unsigned char 
 15599 ;;  counter         1  [STACK] unsigned char 
 15600 ;; Return value:  Size  Location     Type
 15601 ;;                  2  [STACK] int 
 15602 ;; Registers used:
 15603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15604 ;; Tracked objects:
 15605 ;;		On entry : 0/4
 15606 ;;		On exit  : 0/0
 15607 ;;		Unchanged: 0/0
 15608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15613 ;;Total ram usage:        0 bytes
 15614 ;; Hardware stack levels used:    1
 15615 ;; Hardware stack levels required when called:    6
 15616 ;; This function calls:
 15617 ;;		Nothing
 15618 ;; This function is called by:
 15619 ;;		_efgtoa
 15620 ;; This function uses a reentrant model
 15621 ;;
 15622                           
 15623                           	psect	text50
 15624  015E54                     __ptext50:
 15625                           	opt callstack 0
 15626  015E54                     ___awmod:
 15627                           	opt callstack 0
 15628                           
 15629                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15630  015E54  52E6               	movf	postinc1,f,c
 15631  015E56  52E6               	movf	postinc1,f,c
 15632                           
 15633                           ;stkvar	_sign @ sp[(-2)+0]
 15634                           
 15635                           ;incstack = 0
 15636  015E58  0EFE               	movlw	-2
 15637  015E5A  6AE3               	clrf	plusw1,c
 15638                           
 15639                           ;stkvar	_dividend @ sp[(-2)+-2]
 15640  015E5C  0EFD               	movlw	-3
 15641  015E5E  AEE3               	btfss	plusw1,7,c
 15642  015E60  D009               	goto	l6611
 15643                           
 15644                           ;stkvar	_dividend @ sp[(-2)+-2]
 15645                           ;stkvar	_dividend @ sp[(-2)+-2]
 15646  015E62  0EFC               	movlw	-4
 15647  015E64  6CE3               	negf	plusw1,c
 15648  015E66  0EFD               	movlw	-3
 15649  015E68  1EE3               	comf	plusw1,f,c
 15650  015E6A  B0D8               	btfsc	status,0,c
 15651  015E6C  2AE3               	incf	plusw1,f,c
 15652                           
 15653                           ;stkvar	_sign @ sp[(-2)+0]
 15654  015E6E  0EFE               	movlw	-2
 15655  015E70  6AE3               	clrf	plusw1,c
 15656  015E72  2AE3               	incf	plusw1,f,c
 15657  015E74                     l6611:
 15658                           
 15659                           ;stkvar	_divisor @ sp[(-2)+-4]
 15660  015E74  0EFB               	movlw	-5
 15661  015E76  AEE3               	btfss	plusw1,7,c
 15662  015E78  D006               	goto	l6615
 15663                           
 15664                           ;stkvar	_divisor @ sp[(-2)+-4]
 15665                           ;stkvar	_divisor @ sp[(-2)+-4]
 15666  015E7A  0EFA               	movlw	-6
 15667  015E7C  6CE3               	negf	plusw1,c
 15668  015E7E  0EFB               	movlw	-5
 15669  015E80  1EE3               	comf	plusw1,f,c
 15670  015E82  B0D8               	btfsc	status,0,c
 15671  015E84  2AE3               	incf	plusw1,f,c
 15672  015E86                     l6615:
 15673                           
 15674                           ;stkvar	_divisor @ sp[(-2)+-4]
 15675  015E86  0EFA               	movlw	-6
 15676  015E88  006F FF8C  F035    	movff	plusw1,btemp
 15677  015E8E  0EFB               	movlw	-5
 15678  015E90  50E3               	movf	plusw1,w,c
 15679  015E92  1035               	iorwf	btemp^0,w,c
 15680  015E94  B4D8               	btfsc	status,2,c
 15681  015E96  D053               	goto	u5840
 15682                           
 15683                           ;stkvar	_counter @ sp[(-2)+1]
 15684  015E98  0EFF               	movlw	-1
 15685  015E9A  6AE3               	clrf	plusw1,c
 15686  015E9C  D012               	goto	L10
 15687  015E9E                     l6619:
 15688                           
 15689                           ;stkvar	_divisor @ sp[(-2)+-4]
 15690  015E9E  0EFA               	movlw	-6
 15691  015EA0  50E3               	movf	plusw1,w,c
 15692  015EA2  90D8               	bcf	status,0,c
 15693  015EA4  34E8               	rlcf	wreg,w,c
 15694  015EA6  6E35               	movwf	btemp^0,c
 15695  015EA8  0EFA               	movlw	-6
 15696  015EAA  0060  F0D7  FFE3   	movff	btemp,plusw1
 15697  015EB0  0EFB               	movlw	-5
 15698  015EB2  50E3               	movf	plusw1,w,c
 15699  015EB4  34E8               	rlcf	wreg,w,c
 15700  015EB6  6E35               	movwf	btemp^0,c
 15701  015EB8  0EFB               	movlw	-5
 15702  015EBA  0060  F0D7  FFE3   	movff	btemp,plusw1
 15703                           
 15704                           ;stkvar	_counter @ sp[(-2)+1]
 15705  015EC0  0EFF               	movlw	-1
 15706  015EC2                     L10:
 15707  015EC2  2AE3               	incf	plusw1,f,c
 15708                           
 15709                           ;stkvar	_divisor @ sp[(-2)+-4]
 15710  015EC4  0EFB               	movlw	-5
 15711  015EC6  AEE3               	btfss	plusw1,7,c
 15712  015EC8  D7EA               	goto	l6619
 15713  015ECA                     u5820:
 15714                           
 15715                           ;stkvar	_divisor @ sp[(-2)+-4]
 15716  015ECA  0EFA               	movlw	-6
 15717  015ECC  006F FF8C  F03F    	movff	plusw1,btemp+10
 15718  015ED2  0EFB               	movlw	-5
 15719  015ED4  006F FF8C  F040    	movff	plusw1,btemp+11
 15720                           
 15721                           ;stkvar	_dividend @ sp[(-2)+-2]
 15722  015EDA  0EFC               	movlw	-4
 15723  015EDC  006F FF8C  F03D    	movff	plusw1,btemp+8
 15724  015EE2  0EFD               	movlw	-3
 15725  015EE4  006F FF8C  F03E    	movff	plusw1,btemp+9
 15726  015EEA  503F               	movf	(btemp+10)^0,w,c
 15727  015EEC  5C3D               	subwf	(btemp+8)^0,w,c
 15728  015EEE  5040               	movf	(btemp+11)^0,w,c
 15729  015EF0  583E               	subwfb	(btemp+9)^0,w,c
 15730  015EF2  A0D8               	btfss	status,0,c
 15731  015EF4  D014               	goto	l6629
 15732                           
 15733                           ;stkvar	_divisor @ sp[(-2)+-4]
 15734                           ;stkvar	_dividend @ sp[(-2)+-2]
 15735  015EF6  0EFC               	movlw	-4
 15736  015EF8  50E3               	movf	plusw1,w,c
 15737  015EFA  6E35               	movwf	btemp^0,c
 15738  015EFC  0EFA               	movlw	-6
 15739  015EFE  50E3               	movf	plusw1,w,c
 15740  015F00  5E35               	subwf	btemp^0,f,c
 15741  015F02  0EFC               	movlw	-4
 15742  015F04  0060  F0D7  FFE3   	movff	btemp,plusw1
 15743  015F0A  0EFD               	movlw	-3
 15744  015F0C  50E3               	movf	plusw1,w,c
 15745  015F0E  6E35               	movwf	btemp^0,c
 15746  015F10  0EFB               	movlw	-5
 15747  015F12  50E3               	movf	plusw1,w,c
 15748  015F14  5A35               	subwfb	btemp^0,f,c
 15749  015F16  0EFD               	movlw	-3
 15750  015F18  0060  F0D7  FFE3   	movff	btemp,plusw1
 15751  015F1E                     l6629:
 15752                           
 15753                           ;stkvar	_divisor @ sp[(-2)+-4]
 15754  015F1E  90D8               	bcf	status,0,c
 15755  015F20  0EFB               	movlw	-5
 15756  015F22  32E3               	rrcf	plusw1,f,c
 15757  015F24  0EFA               	movlw	-6
 15758  015F26  32E3               	rrcf	plusw1,f,c
 15759                           
 15760                           ;stkvar	_counter @ sp[(-2)+1]
 15761  015F28  0EFF               	movlw	-1
 15762  015F2A  50E3               	movf	plusw1,w,c
 15763  015F2C  6E35               	movwf	btemp^0,c
 15764  015F2E  0E01               	movlw	1
 15765  015F30  5E35               	subwf	btemp^0,f,c
 15766  015F32  0EFF               	movlw	-1
 15767  015F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 15768  015F3A  A4D8               	btfss	status,2,c
 15769  015F3C  D7C6               	goto	u5820
 15770  015F3E                     u5840:
 15771                           
 15772                           ;stkvar	_sign @ sp[(-2)+0]
 15773  015F3E  0EFE               	movlw	-2
 15774  015F40  50E3               	movf	plusw1,w,c
 15775  015F42  B4D8               	btfsc	status,2,c
 15776  015F44  D006               	goto	l6637
 15777                           
 15778                           ;stkvar	_dividend @ sp[(-2)+-2]
 15779                           ;stkvar	_dividend @ sp[(-2)+-2]
 15780  015F46  0EFC               	movlw	-4
 15781  015F48  6CE3               	negf	plusw1,c
 15782  015F4A  0EFD               	movlw	-3
 15783  015F4C  1EE3               	comf	plusw1,f,c
 15784  015F4E  B0D8               	btfsc	status,0,c
 15785  015F50  2AE3               	incf	plusw1,f,c
 15786  015F52                     l6637:
 15787                           
 15788                           ;stkvar	_dividend @ sp[(-2)+-2]
 15789  015F52  0EFC               	movlw	-4
 15790  015F54  006F FF8C  F035    	movff	plusw1,btemp
 15791  015F5A  0EFD               	movlw	-3
 15792  015F5C  006F FF8C  F036    	movff	plusw1,btemp+1
 15793                           
 15794                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15795  015F62  0EFA               	movlw	250
 15796  015F64  26E1               	addwf	fsr1l,f,c
 15797  015F66  0EFF               	movlw	255
 15798  015F68  22E2               	addwfc	fsr1h,f,c
 15799  015F6A  0012               	return		;funcret
 15800  015F6C                     __end_of___awmod:
 15801                           	opt callstack 0
 15802                           
 15803 ;; *************** function ___awdiv *****************
 15804 ;; Defined at:
 15805 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15806 ;; Parameters:    Size  Location     Type
 15807 ;;  dividend        2  [STACK] int 
 15808 ;;  divisor         2  [STACK] int 
 15809 ;; Auto vars:     Size  Location     Type
 15810 ;;  quotient        2  [STACK] int 
 15811 ;;  sign            1  [STACK] unsigned char 
 15812 ;;  counter         1  [STACK] unsigned char 
 15813 ;; Return value:  Size  Location     Type
 15814 ;;                  2  [STACK] int 
 15815 ;; Registers used:
 15816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15817 ;; Tracked objects:
 15818 ;;		On entry : 0/4
 15819 ;;		On exit  : 0/0
 15820 ;;		Unchanged: 0/0
 15821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15826 ;;Total ram usage:        0 bytes
 15827 ;; Hardware stack levels used:    1
 15828 ;; Hardware stack levels required when called:    6
 15829 ;; This function calls:
 15830 ;;		Nothing
 15831 ;; This function is called by:
 15832 ;;		_efgtoa
 15833 ;; This function uses a reentrant model
 15834 ;;
 15835                           
 15836                           	psect	text51
 15837  015AB4                     __ptext51:
 15838                           	opt callstack 0
 15839  015AB4                     ___awdiv:
 15840                           	opt callstack 0
 15841                           
 15842                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15843  015AB4  52E6               	movf	postinc1,f,c
 15844  015AB6  52E6               	movf	postinc1,f,c
 15845  015AB8  52E6               	movf	postinc1,f,c
 15846  015ABA  52E6               	movf	postinc1,f,c
 15847                           
 15848                           ;stkvar	_sign @ sp[(-4)+2]
 15849                           
 15850                           ;incstack = 0
 15851  015ABC  0EFE               	movlw	-2
 15852  015ABE  6AE3               	clrf	plusw1,c
 15853                           
 15854                           ;stkvar	_divisor @ sp[(-4)+-4]
 15855  015AC0  0EF9               	movlw	-7
 15856  015AC2  AEE3               	btfss	plusw1,7,c
 15857  015AC4  D009               	goto	l6565
 15858                           
 15859                           ;stkvar	_divisor @ sp[(-4)+-4]
 15860                           ;stkvar	_divisor @ sp[(-4)+-4]
 15861  015AC6  0EF8               	movlw	-8
 15862  015AC8  6CE3               	negf	plusw1,c
 15863  015ACA  0EF9               	movlw	-7
 15864  015ACC  1EE3               	comf	plusw1,f,c
 15865  015ACE  B0D8               	btfsc	status,0,c
 15866  015AD0  2AE3               	incf	plusw1,f,c
 15867                           
 15868                           ;stkvar	_sign @ sp[(-4)+2]
 15869  015AD2  0EFE               	movlw	-2
 15870  015AD4  6AE3               	clrf	plusw1,c
 15871  015AD6  2AE3               	incf	plusw1,f,c
 15872  015AD8                     l6565:
 15873                           
 15874                           ;stkvar	_dividend @ sp[(-4)+-2]
 15875  015AD8  0EFB               	movlw	-5
 15876  015ADA  AEE3               	btfss	plusw1,7,c
 15877  015ADC  D008               	goto	l6571
 15878                           
 15879                           ;stkvar	_dividend @ sp[(-4)+-2]
 15880                           ;stkvar	_dividend @ sp[(-4)+-2]
 15881  015ADE  0EFA               	movlw	-6
 15882  015AE0  6CE3               	negf	plusw1,c
 15883  015AE2  0EFB               	movlw	-5
 15884  015AE4  1EE3               	comf	plusw1,f,c
 15885  015AE6  B0D8               	btfsc	status,0,c
 15886  015AE8  2AE3               	incf	plusw1,f,c
 15887                           
 15888                           ;stkvar	_sign @ sp[(-4)+2]
 15889  015AEA  0EFE               	movlw	-2
 15890  015AEC  70E3               	btg	plusw1,0,c
 15891  015AEE                     l6571:
 15892                           
 15893                           ;stkvar	_quotient @ sp[(-4)+0]
 15894  015AEE  0EFC               	movlw	-4
 15895  015AF0  6AE3               	clrf	plusw1,c
 15896  015AF2  0EFD               	movlw	-3
 15897  015AF4  6AE3               	clrf	plusw1,c
 15898                           
 15899                           ;stkvar	_divisor @ sp[(-4)+-4]
 15900  015AF6  0EF8               	movlw	-8
 15901  015AF8  006F FF8C  F035    	movff	plusw1,btemp
 15902  015AFE  0EF9               	movlw	-7
 15903  015B00  50E3               	movf	plusw1,w,c
 15904  015B02  1035               	iorwf	btemp^0,w,c
 15905  015B04  B4D8               	btfsc	status,2,c
 15906  015B06  D066               	goto	u5770
 15907                           
 15908                           ;stkvar	_counter @ sp[(-4)+3]
 15909  015B08  0EFF               	movlw	-1
 15910  015B0A  6AE3               	clrf	plusw1,c
 15911  015B0C  D012               	goto	L11
 15912  015B0E                     l6577:
 15913                           
 15914                           ;stkvar	_divisor @ sp[(-4)+-4]
 15915  015B0E  0EF8               	movlw	-8
 15916  015B10  50E3               	movf	plusw1,w,c
 15917  015B12  90D8               	bcf	status,0,c
 15918  015B14  34E8               	rlcf	wreg,w,c
 15919  015B16  6E35               	movwf	btemp^0,c
 15920  015B18  0EF8               	movlw	-8
 15921  015B1A  0060  F0D7  FFE3   	movff	btemp,plusw1
 15922  015B20  0EF9               	movlw	-7
 15923  015B22  50E3               	movf	plusw1,w,c
 15924  015B24  34E8               	rlcf	wreg,w,c
 15925  015B26  6E35               	movwf	btemp^0,c
 15926  015B28  0EF9               	movlw	-7
 15927  015B2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 15928                           
 15929                           ;stkvar	_counter @ sp[(-4)+3]
 15930  015B30  0EFF               	movlw	-1
 15931  015B32                     L11:
 15932  015B32  2AE3               	incf	plusw1,f,c
 15933                           
 15934                           ;stkvar	_divisor @ sp[(-4)+-4]
 15935  015B34  0EF9               	movlw	-7
 15936  015B36  AEE3               	btfss	plusw1,7,c
 15937  015B38  D7EA               	goto	l6577
 15938  015B3A                     u5750:
 15939                           
 15940                           ;stkvar	_quotient @ sp[(-4)+0]
 15941  015B3A  0EFC               	movlw	-4
 15942  015B3C  50E3               	movf	plusw1,w,c
 15943  015B3E  90D8               	bcf	status,0,c
 15944  015B40  34E8               	rlcf	wreg,w,c
 15945  015B42  6E35               	movwf	btemp^0,c
 15946  015B44  0EFC               	movlw	-4
 15947  015B46  0060  F0D7  FFE3   	movff	btemp,plusw1
 15948  015B4C  0EFD               	movlw	-3
 15949  015B4E  50E3               	movf	plusw1,w,c
 15950  015B50  34E8               	rlcf	wreg,w,c
 15951  015B52  6E35               	movwf	btemp^0,c
 15952  015B54  0EFD               	movlw	-3
 15953  015B56  0060  F0D7  FFE3   	movff	btemp,plusw1
 15954                           
 15955                           ;stkvar	_divisor @ sp[(-4)+-4]
 15956  015B5C  0EF8               	movlw	-8
 15957  015B5E  006F FF8C  F03F    	movff	plusw1,btemp+10
 15958  015B64  0EF9               	movlw	-7
 15959  015B66  006F FF8C  F040    	movff	plusw1,btemp+11
 15960                           
 15961                           ;stkvar	_dividend @ sp[(-4)+-2]
 15962  015B6C  0EFA               	movlw	-6
 15963  015B6E  006F FF8C  F03D    	movff	plusw1,btemp+8
 15964  015B74  0EFB               	movlw	-5
 15965  015B76  006F FF8C  F03E    	movff	plusw1,btemp+9
 15966  015B7C  503F               	movf	(btemp+10)^0,w,c
 15967  015B7E  5C3D               	subwf	(btemp+8)^0,w,c
 15968  015B80  5040               	movf	(btemp+11)^0,w,c
 15969  015B82  583E               	subwfb	(btemp+9)^0,w,c
 15970  015B84  A0D8               	btfss	status,0,c
 15971  015B86  D016               	goto	l6591
 15972                           
 15973                           ;stkvar	_divisor @ sp[(-4)+-4]
 15974                           ;stkvar	_dividend @ sp[(-4)+-2]
 15975  015B88  0EFA               	movlw	-6
 15976  015B8A  50E3               	movf	plusw1,w,c
 15977  015B8C  6E35               	movwf	btemp^0,c
 15978  015B8E  0EF8               	movlw	-8
 15979  015B90  50E3               	movf	plusw1,w,c
 15980  015B92  5E35               	subwf	btemp^0,f,c
 15981  015B94  0EFA               	movlw	-6
 15982  015B96  0060  F0D7  FFE3   	movff	btemp,plusw1
 15983  015B9C  0EFB               	movlw	-5
 15984  015B9E  50E3               	movf	plusw1,w,c
 15985  015BA0  6E35               	movwf	btemp^0,c
 15986  015BA2  0EF9               	movlw	-7
 15987  015BA4  50E3               	movf	plusw1,w,c
 15988  015BA6  5A35               	subwfb	btemp^0,f,c
 15989  015BA8  0EFB               	movlw	-5
 15990  015BAA  0060  F0D7  FFE3   	movff	btemp,plusw1
 15991                           
 15992                           ;stkvar	_quotient @ sp[(-4)+0]
 15993  015BB0  0EFC               	movlw	-4
 15994  015BB2  80E3               	bsf	plusw1,0,c
 15995  015BB4                     l6591:
 15996                           
 15997                           ;stkvar	_divisor @ sp[(-4)+-4]
 15998  015BB4  90D8               	bcf	status,0,c
 15999  015BB6  0EF9               	movlw	-7
 16000  015BB8  32E3               	rrcf	plusw1,f,c
 16001  015BBA  0EF8               	movlw	-8
 16002  015BBC  32E3               	rrcf	plusw1,f,c
 16003                           
 16004                           ;stkvar	_counter @ sp[(-4)+3]
 16005  015BBE  0EFF               	movlw	-1
 16006  015BC0  50E3               	movf	plusw1,w,c
 16007  015BC2  6E35               	movwf	btemp^0,c
 16008  015BC4  0E01               	movlw	1
 16009  015BC6  5E35               	subwf	btemp^0,f,c
 16010  015BC8  0EFF               	movlw	-1
 16011  015BCA  0060  F0D7  FFE3   	movff	btemp,plusw1
 16012  015BD0  A4D8               	btfss	status,2,c
 16013  015BD2  D7B3               	goto	u5750
 16014  015BD4                     u5770:
 16015                           
 16016                           ;stkvar	_sign @ sp[(-4)+2]
 16017  015BD4  0EFE               	movlw	-2
 16018  015BD6  50E3               	movf	plusw1,w,c
 16019  015BD8  B4D8               	btfsc	status,2,c
 16020  015BDA  D006               	goto	l6599
 16021                           
 16022                           ;stkvar	_quotient @ sp[(-4)+0]
 16023                           ;stkvar	_quotient @ sp[(-4)+0]
 16024  015BDC  0EFC               	movlw	-4
 16025  015BDE  6CE3               	negf	plusw1,c
 16026  015BE0  0EFD               	movlw	-3
 16027  015BE2  1EE3               	comf	plusw1,f,c
 16028  015BE4  B0D8               	btfsc	status,0,c
 16029  015BE6  2AE3               	incf	plusw1,f,c
 16030  015BE8                     l6599:
 16031                           
 16032                           ;stkvar	_quotient @ sp[(-4)+0]
 16033  015BE8  0EFC               	movlw	-4
 16034  015BEA  006F FF8C  F035    	movff	plusw1,btemp
 16035  015BF0  0EFD               	movlw	-3
 16036  015BF2  006F FF8C  F036    	movff	plusw1,btemp+1
 16037                           
 16038                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16039  015BF8  0EF8               	movlw	248
 16040  015BFA  26E1               	addwf	fsr1l,f,c
 16041  015BFC  0EFF               	movlw	255
 16042  015BFE  22E2               	addwfc	fsr1h,f,c
 16043  015C00  0012               	return		;funcret
 16044  015C02                     __end_of___awdiv:
 16045                           	opt callstack 0
 16046                           
 16047 ;; *************** function _dtoa *****************
 16048 ;; Defined at:
 16049 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16050 ;; Parameters:    Size  Location     Type
 16051 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16052 ;;		 -> f(6), NULL(0), 
 16053 ;;  d               8  [STACK] long long 
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;  n               8  [STACK] long long 
 16056 ;;  i               2  [STACK] int 
 16057 ;;  s               2  [STACK] int 
 16058 ;;  w               2  [STACK] int 
 16059 ;;  p               2  [STACK] int 
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  2  [STACK] int 
 16062 ;; Registers used:
 16063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/4
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16073 ;;Total ram usage:        0 bytes
 16074 ;; Hardware stack levels used:    1
 16075 ;; Hardware stack levels required when called:   11
 16076 ;; This function calls:
 16077 ;;		___aodiv
 16078 ;;		___aomod
 16079 ;;		_abs
 16080 ;;		_pad
 16081 ;; This function is called by:
 16082 ;;		_vfpfcnvrt
 16083 ;; This function uses a reentrant model
 16084 ;;
 16085                           
 16086                           	psect	text52
 16087  0137E8                     __ptext52:
 16088                           	opt callstack 0
 16089  0137E8                     _dtoa:
 16090                           	opt callstack 0
 16091                           
 16092                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16093  0137E8  0E12               	movlw	18
 16094  0137EA  26E1               	addwf	fsr1l,f,c
 16095  0137EC  0E00               	movlw	0
 16096  0137EE  22E2               	addwfc	fsr1h,f,c
 16097                           
 16098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16099                           ;stkvar	_d @ sp[(-18)+-10]
 16100                           
 16101                           ;incstack = 0
 16102  0137F0  0EE4               	movlw	228
 16103  0137F2  24E1               	addwf	fsr1l,w,c
 16104  0137F4  6ED9               	movwf	fsr2l,c
 16105  0137F6  0EFF               	movlw	255
 16106  0137F8  20E2               	addwfc	fsr1h,w,c
 16107  0137FA  6EDA               	movwf	fsr2h,c
 16108                           
 16109                           ;stkvar	_n @ sp[(-18)+2]
 16110  0137FC  0E08               	movlw	8
 16111  0137FE  6E35               	movwf	btemp^0,c
 16112  013800  0EF0               	movlw	-16
 16113  013802                     us835999:
 16114  013802  006F FF7B FFE3     	movff	postinc2,plusw1
 16115  013808  28E8               	incf	wreg,w,c
 16116  01380A  2E35               	decfsz	btemp^0,f,c
 16117  01380C  D7FA               	bra	us835999
 16118                           
 16119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16120                           ;stkvar	_n @ sp[(-18)+2]
 16121  01380E  0EF7               	movlw	-9
 16122  013810  AEE3               	btfss	plusw1,7,c
 16123  013812  D002               	goto	u8360
 16124  013814  0E01               	movlw	1
 16125  013816  D001               	goto	u8370
 16126  013818                     u8360:
 16127  013818  0E00               	movlw	0
 16128  01381A                     u8370:
 16129  01381A  6E3F               	movwf	(btemp+10)^0,c
 16130  01381C  6A40               	clrf	(btemp+11)^0,c
 16131                           
 16132                           ;stkvar	_s @ sp[(-18)+12]
 16133  01381E  0EFA               	movlw	-6
 16134  013820  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16135  013826  0EFB               	movlw	-5
 16136  013828  0060  F103  FFE3   	movff	btemp+11,plusw1
 16137                           
 16138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16139                           ;stkvar	_s @ sp[(-18)+12]
 16140  01382E  0EFA               	movlw	-6
 16141  013830  006F FF8C  F035    	movff	plusw1,btemp
 16142  013836  0EFB               	movlw	-5
 16143  013838  50E3               	movf	plusw1,w,c
 16144  01383A  1035               	iorwf	btemp^0,w,c
 16145  01383C  B4D8               	btfsc	status,2,c
 16146  01383E  D025               	goto	u8390
 16147                           
 16148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16149                           ;stkvar	_n @ sp[(-18)+2]
 16150                           ;stkvar	_n @ sp[(-18)+2]
 16151  013840  0EF0               	movlw	-16
 16152  013842  6CE3               	negf	plusw1,c
 16153  013844  0EF1               	movlw	-15
 16154  013846  1EE3               	comf	plusw1,f,c
 16155  013848  0EF2               	movlw	-14
 16156  01384A  1EE3               	comf	plusw1,f,c
 16157  01384C  0EF3               	movlw	-13
 16158  01384E  1EE3               	comf	plusw1,f,c
 16159  013850  0EF4               	movlw	-12
 16160  013852  1EE3               	comf	plusw1,f,c
 16161  013854  0EF5               	movlw	-11
 16162  013856  1EE3               	comf	plusw1,f,c
 16163  013858  0EF6               	movlw	-10
 16164  01385A  1EE3               	comf	plusw1,f,c
 16165  01385C  0EF7               	movlw	-9
 16166  01385E  1EE3               	comf	plusw1,f,c
 16167  013860  E314               	bnc	u8390
 16168  013862  0EF1               	movlw	-15
 16169  013864  2AE3               	incf	plusw1,f,c
 16170  013866  E311               	bnc	u8390
 16171  013868  0EF2               	movlw	-14
 16172  01386A  2AE3               	incf	plusw1,f,c
 16173  01386C  E30E               	bnc	u8390
 16174  01386E  0EF3               	movlw	-13
 16175  013870  2AE3               	incf	plusw1,f,c
 16176  013872  E30B               	bnc	u8390
 16177  013874  0EF4               	movlw	-12
 16178  013876  2AE3               	incf	plusw1,f,c
 16179  013878  E308               	bnc	u8390
 16180  01387A  0EF5               	movlw	-11
 16181  01387C  2AE3               	incf	plusw1,f,c
 16182  01387E  E305               	bnc	u8390
 16183  013880  0EF6               	movlw	-10
 16184  013882  2AE3               	incf	plusw1,f,c
 16185  013884  E302               	bnc	u8390
 16186  013886  0EF7               	movlw	-9
 16187  013888  2AE3               	incf	plusw1,f,c
 16188  01388A                     u8390:
 16189                           
 16190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16191  01388A  AE21               	btfss	(_prec+1)^0,7,c
 16192                           
 16193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16194  01388C  9222               	bcf	_flags^0,1,c
 16195                           
 16196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16197  01388E  BE21               	btfsc	(_prec+1)^0,7,c
 16198  013890  D005               	goto	u8410
 16199  013892  5021               	movf	(_prec+1)^0,w,c
 16200  013894  E110               	bnz	l8745
 16201  013896  0420               	decf	_prec^0,w,c
 16202  013898  B0D8               	btfsc	status,0,c
 16203  01389A  D00D               	goto	l8745
 16204  01389C                     u8410:
 16205  01389C  0E01               	movlw	1
 16206  01389E  6E3F               	movwf	(btemp+10)^0,c
 16207  0138A0  0E00               	movlw	0
 16208  0138A2  6E40               	movwf	(btemp+11)^0,c
 16209                           
 16210                           ;stkvar	_p @ sp[(-18)+16]
 16211  0138A4  0EFE               	movlw	-2
 16212  0138A6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16213  0138AC  0EFF               	movlw	-1
 16214  0138AE  0060  F103  FFE3   	movff	btemp+11,plusw1
 16215  0138B4  D008               	goto	l1723
 16216  0138B6                     l8745:
 16217                           
 16218                           ;stkvar	_p @ sp[(-18)+16]
 16219  0138B6  0EFE               	movlw	-2
 16220  0138B8  0060  F083  FFE3   	movff	_prec,plusw1
 16221  0138BE  0EFF               	movlw	-1
 16222  0138C0  0060  F087  FFE3   	movff	_prec+1,plusw1
 16223  0138C6                     l1723:
 16224                           
 16225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16226                           ;stkvar	_w @ sp[(-18)+14]
 16227  0138C6  0EFC               	movlw	-4
 16228  0138C8  0060  F07B  FFE3   	movff	_width,plusw1
 16229  0138CE  0EFD               	movlw	-3
 16230  0138D0  0060  F07F  FFE3   	movff	_width+1,plusw1
 16231                           
 16232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16233                           ;stkvar	_s @ sp[(-18)+12]
 16234  0138D6  0EFA               	movlw	-6
 16235  0138D8  006F FF8C  F035    	movff	plusw1,btemp
 16236  0138DE  0EFB               	movlw	-5
 16237  0138E0  50E3               	movf	plusw1,w,c
 16238  0138E2  1035               	iorwf	btemp^0,w,c
 16239  0138E4  A4D8               	btfss	status,2,c
 16240  0138E6  D002               	goto	u8430
 16241  0138E8  A422               	btfss	_flags^0,2,c
 16242  0138EA  D00A               	goto	l8753
 16243  0138EC                     u8430:
 16244                           
 16245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16246                           ;stkvar	_w @ sp[(-18)+14]
 16247  0138EC  50E1               	movf	fsr1l,w,c
 16248  0138EE  0FFC               	addlw	-4
 16249  0138F0  6ED9               	movwf	fsr2l,c
 16250  0138F2  50E2               	movf	fsr1h,w,c
 16251  0138F4  6EDA               	movwf	fsr2h,c
 16252  0138F6  0EFF               	movlw	255
 16253  0138F8  22DA               	addwfc	fsr2h,f,c
 16254  0138FA  06DE               	decf	postinc2,f,c
 16255  0138FC  0E00               	movlw	0
 16256  0138FE  5ADD               	subwfb	postdec2,f,c
 16257  013900                     l8753:
 16258                           
 16259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16260  013900  0E4F               	movlw	79
 16261  013902  6E3F               	movwf	(btemp+10)^0,c
 16262  013904  0E00               	movlw	0
 16263  013906  6E40               	movwf	(btemp+11)^0,c
 16264                           
 16265                           ;stkvar	_i @ sp[(-18)+10]
 16266  013908  0EF8               	movlw	-8
 16267  01390A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16268  013910  0EF9               	movlw	-7
 16269  013912  0060  F103  FFE3   	movff	btemp+11,plusw1
 16270                           
 16271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16272  013918  0101               	movlb	1	; () banked
 16273  01391A  6BF7               	clrf	(_dbuf+79)& (0+255),b
 16274                           
 16275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16276  01391C  D109               	goto	l8767
 16277  01391E                     l8757:
 16278                           
 16279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16280                           ;stkvar	_i @ sp[(-18)+10]
 16281  01391E  50E1               	movf	fsr1l,w,c
 16282  013920  0FF8               	addlw	-8
 16283  013922  6ED9               	movwf	fsr2l,c
 16284  013924  50E2               	movf	fsr1h,w,c
 16285  013926  6EDA               	movwf	fsr2h,c
 16286  013928  0EFF               	movlw	255
 16287  01392A  22DA               	addwfc	fsr2h,f,c
 16288  01392C  06DE               	decf	postinc2,f,c
 16289  01392E  0E00               	movlw	0
 16290  013930  5ADD               	subwfb	postdec2,f,c
 16291                           
 16292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16293  013932  0E0A               	movlw	10
 16294  013934  6EE6               	movwf	postinc1,c
 16295  013936  0E00               	movlw	0
 16296  013938  6EE6               	movwf	postinc1,c
 16297  01393A  0E00               	movlw	0
 16298  01393C  6EE6               	movwf	postinc1,c
 16299  01393E  0E00               	movlw	0
 16300  013940  6EE6               	movwf	postinc1,c
 16301  013942  0E00               	movlw	0
 16302  013944  6EE6               	movwf	postinc1,c
 16303  013946  0E00               	movlw	0
 16304  013948  6EE6               	movwf	postinc1,c
 16305  01394A  0E00               	movlw	0
 16306  01394C  6EE6               	movwf	postinc1,c
 16307  01394E  0E00               	movlw	0
 16308  013950  6EE6               	movwf	postinc1,c
 16309                           
 16310                           ;stkvar	_n @ sp[(-26)+2]
 16311  013952  50E1               	movf	fsr1l,w,c
 16312  013954  0FE8               	addlw	-24
 16313  013956  6ED9               	movwf	fsr2l,c
 16314  013958  50E2               	movf	fsr1h,w,c
 16315  01395A  6EDA               	movwf	fsr2h,c
 16316  01395C  0EFF               	movlw	255
 16317  01395E  22DA               	addwfc	fsr2h,f,c
 16318  013960  006F FF7B FFE6     	movff	postinc2,postinc1
 16319  013966  006F FF7B FFE6     	movff	postinc2,postinc1
 16320  01396C  006F FF7B FFE6     	movff	postinc2,postinc1
 16321  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 16322  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 16323  01397E  006F FF7B FFE6     	movff	postinc2,postinc1
 16324  013984  006F FF7B FFE6     	movff	postinc2,postinc1
 16325  01398A  006F FF7B FFE6     	movff	postinc2,postinc1
 16326  013990  EC16  F0A7         	call	___aomod	;wreg free
 16327  013994  52E5               	movf	postdec1,f,c
 16328  013996  006F FF9C  F04C    	movff	indf1,btemp+23
 16329  01399C  52E5               	movf	postdec1,f,c
 16330  01399E  006F FF9C  F04B    	movff	indf1,btemp+22
 16331  0139A4  52E5               	movf	postdec1,f,c
 16332  0139A6  006F FF9C  F04A    	movff	indf1,btemp+21
 16333  0139AC  52E5               	movf	postdec1,f,c
 16334  0139AE  006F FF9C  F049    	movff	indf1,btemp+20
 16335  0139B4  52E5               	movf	postdec1,f,c
 16336  0139B6  006F FF9C  F048    	movff	indf1,btemp+19
 16337  0139BC  52E5               	movf	postdec1,f,c
 16338  0139BE  006F FF9C  F047    	movff	indf1,btemp+18
 16339  0139C4  52E5               	movf	postdec1,f,c
 16340  0139C6  006F FF9C  F046    	movff	indf1,btemp+17
 16341  0139CC  52E5               	movf	postdec1,f,c
 16342  0139CE  006F FF9C  F045    	movff	indf1,btemp+16
 16343  0139D4  0EF8               	movlw	248
 16344  0139D6  26E1               	addwf	fsr1l,f,c
 16345  0139D8  0EFF               	movlw	255
 16346  0139DA  22E2               	addwfc	fsr1h,f,c
 16347  0139DC  0060  F114  F03F   	movff	btemp+16,btemp+10
 16348  0139E2  0060  F118  F040   	movff	btemp+17,btemp+11
 16349  0139E8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 16350  0139EE  0060  F103  FFE6   	movff	btemp+11,postinc1
 16351  0139F4  EC43  F0B9         	call	_abs	;wreg free
 16352  0139F8  0E30               	movlw	48
 16353  0139FA  2635               	addwf	btemp^0,f,c
 16354                           
 16355                           ;stkvar	_i @ sp[(-18)+10]
 16356  0139FC  0EF8               	movlw	-8
 16357  0139FE  006F FF8C  F03F    	movff	plusw1,btemp+10
 16358  013A04  0EF9               	movlw	-7
 16359  013A06  006F FF8C  F040    	movff	plusw1,btemp+11
 16360  013A0C  0EA8               	movlw	low _dbuf
 16361  013A0E  243F               	addwf	(btemp+10)^0,w,c
 16362  013A10  6ED9               	movwf	fsr2l,c
 16363  013A12  0E01               	movlw	high _dbuf
 16364  013A14  2040               	addwfc	(btemp+11)^0,w,c
 16365  013A16  6EDA               	movwf	fsr2h,c
 16366  013A18  0060  F0D7  FFDF   	movff	btemp,indf2
 16367                           
 16368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16369                           ;stkvar	_p @ sp[(-18)+16]
 16370  013A1E  50E1               	movf	fsr1l,w,c
 16371  013A20  0FFE               	addlw	-2
 16372  013A22  6ED9               	movwf	fsr2l,c
 16373  013A24  50E2               	movf	fsr1h,w,c
 16374  013A26  6EDA               	movwf	fsr2h,c
 16375  013A28  0EFF               	movlw	255
 16376  013A2A  22DA               	addwfc	fsr2h,f,c
 16377  013A2C  06DE               	decf	postinc2,f,c
 16378  013A2E  0E00               	movlw	0
 16379  013A30  5ADD               	subwfb	postdec2,f,c
 16380                           
 16381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16382                           ;stkvar	_w @ sp[(-18)+14]
 16383  013A32  50E1               	movf	fsr1l,w,c
 16384  013A34  0FFC               	addlw	-4
 16385  013A36  6ED9               	movwf	fsr2l,c
 16386  013A38  50E2               	movf	fsr1h,w,c
 16387  013A3A  6EDA               	movwf	fsr2h,c
 16388  013A3C  0EFF               	movlw	255
 16389  013A3E  22DA               	addwfc	fsr2h,f,c
 16390  013A40  06DE               	decf	postinc2,f,c
 16391  013A42  0E00               	movlw	0
 16392  013A44  5ADD               	subwfb	postdec2,f,c
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16395  013A46  0E0A               	movlw	10
 16396  013A48  6EE6               	movwf	postinc1,c
 16397  013A4A  0E00               	movlw	0
 16398  013A4C  6EE6               	movwf	postinc1,c
 16399  013A4E  0E00               	movlw	0
 16400  013A50  6EE6               	movwf	postinc1,c
 16401  013A52  0E00               	movlw	0
 16402  013A54  6EE6               	movwf	postinc1,c
 16403  013A56  0E00               	movlw	0
 16404  013A58  6EE6               	movwf	postinc1,c
 16405  013A5A  0E00               	movlw	0
 16406  013A5C  6EE6               	movwf	postinc1,c
 16407  013A5E  0E00               	movlw	0
 16408  013A60  6EE6               	movwf	postinc1,c
 16409  013A62  0E00               	movlw	0
 16410  013A64  6EE6               	movwf	postinc1,c
 16411                           
 16412                           ;stkvar	_n @ sp[(-26)+2]
 16413  013A66  50E1               	movf	fsr1l,w,c
 16414  013A68  0FE8               	addlw	-24
 16415  013A6A  6ED9               	movwf	fsr2l,c
 16416  013A6C  50E2               	movf	fsr1h,w,c
 16417  013A6E  6EDA               	movwf	fsr2h,c
 16418  013A70  0EFF               	movlw	255
 16419  013A72  22DA               	addwfc	fsr2h,f,c
 16420  013A74  006F FF7B FFE6     	movff	postinc2,postinc1
 16421  013A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 16422  013A80  006F FF7B FFE6     	movff	postinc2,postinc1
 16423  013A86  006F FF7B FFE6     	movff	postinc2,postinc1
 16424  013A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 16425  013A92  006F FF7B FFE6     	movff	postinc2,postinc1
 16426  013A98  006F FF7B FFE6     	movff	postinc2,postinc1
 16427  013A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 16428  013AA4  EC9C  F0A4         	call	___aodiv	;wreg free
 16429  013AA8  52E5               	movf	postdec1,f,c
 16430  013AAA  006F FF9C  F04C    	movff	indf1,btemp+23
 16431  013AB0  52E5               	movf	postdec1,f,c
 16432  013AB2  006F FF9C  F04B    	movff	indf1,btemp+22
 16433  013AB8  52E5               	movf	postdec1,f,c
 16434  013ABA  006F FF9C  F04A    	movff	indf1,btemp+21
 16435  013AC0  52E5               	movf	postdec1,f,c
 16436  013AC2  006F FF9C  F049    	movff	indf1,btemp+20
 16437  013AC8  52E5               	movf	postdec1,f,c
 16438  013ACA  006F FF9C  F048    	movff	indf1,btemp+19
 16439  013AD0  52E5               	movf	postdec1,f,c
 16440  013AD2  006F FF9C  F047    	movff	indf1,btemp+18
 16441  013AD8  52E5               	movf	postdec1,f,c
 16442  013ADA  006F FF9C  F046    	movff	indf1,btemp+17
 16443  013AE0  52E5               	movf	postdec1,f,c
 16444  013AE2  006F FF9C  F045    	movff	indf1,btemp+16
 16445  013AE8  0EF8               	movlw	248
 16446  013AEA  26E1               	addwf	fsr1l,f,c
 16447  013AEC  0EFF               	movlw	255
 16448  013AEE  22E2               	addwfc	fsr1h,f,c
 16449                           
 16450                           ;stkvar	_n @ sp[(-18)+2]
 16451  013AF0  0EF0               	movlw	-16
 16452  013AF2  0060  F117  FFE3   	movff	btemp+16,plusw1
 16453  013AF8  0EF1               	movlw	-15
 16454  013AFA  0060  F11B  FFE3   	movff	btemp+17,plusw1
 16455  013B00  0EF2               	movlw	-14
 16456  013B02  0060  F11F  FFE3   	movff	btemp+18,plusw1
 16457  013B08  0EF3               	movlw	-13
 16458  013B0A  0060  F123  FFE3   	movff	btemp+19,plusw1
 16459  013B10  0EF4               	movlw	-12
 16460  013B12  0060  F127  FFE3   	movff	btemp+20,plusw1
 16461  013B18  0EF5               	movlw	-11
 16462  013B1A  0060  F12B  FFE3   	movff	btemp+21,plusw1
 16463  013B20  0EF6               	movlw	-10
 16464  013B22  0060  F12F  FFE3   	movff	btemp+22,plusw1
 16465  013B28  0EF7               	movlw	-9
 16466  013B2A  0060  F133  FFE3   	movff	btemp+23,plusw1
 16467  013B30                     l8767:
 16468                           
 16469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16470                           ;stkvar	_i @ sp[(-18)+10]
 16471  013B30  0EF9               	movlw	-7
 16472  013B32  BEE3               	btfsc	plusw1,7,c
 16473  013B34  D036               	goto	u8480
 16474  013B36  0EF9               	movlw	-7
 16475  013B38  50E3               	movf	plusw1,w,c
 16476  013B3A  E104               	bnz	u8440
 16477  013B3C  0EF8               	movlw	-8
 16478  013B3E  04E3               	decf	plusw1,w,c
 16479  013B40  A0D8               	btfss	status,0,c
 16480  013B42  D02F               	goto	u8480
 16481  013B44                     u8440:
 16482                           
 16483                           ;stkvar	_n @ sp[(-18)+2]
 16484  013B44  0EF0               	movlw	-16
 16485  013B46  50E3               	movf	plusw1,w,c
 16486  013B48  E115               	bnz	u8451
 16487  013B4A  0EF1               	movlw	-15
 16488  013B4C  50E3               	movf	plusw1,w,c
 16489  013B4E  E112               	bnz	u8451
 16490  013B50  0EF2               	movlw	-14
 16491  013B52  50E3               	movf	plusw1,w,c
 16492  013B54  E10F               	bnz	u8451
 16493  013B56  0EF3               	movlw	-13
 16494  013B58  50E3               	movf	plusw1,w,c
 16495  013B5A  E10C               	bnz	u8451
 16496  013B5C  0EF4               	movlw	-12
 16497  013B5E  50E3               	movf	plusw1,w,c
 16498  013B60  E109               	bnz	u8451
 16499  013B62  0EF5               	movlw	-11
 16500  013B64  50E3               	movf	plusw1,w,c
 16501  013B66  E106               	bnz	u8451
 16502  013B68  0EF6               	movlw	-10
 16503  013B6A  50E3               	movf	plusw1,w,c
 16504  013B6C  E103               	bnz	u8451
 16505  013B6E  0EF7               	movlw	-9
 16506  013B70  50E3               	movf	plusw1,w,c
 16507  013B72  A4D8               	btfss	status,2,c
 16508  013B74                     u8451:
 16509  013B74  D6D4               	goto	l8757
 16510                           
 16511                           ;stkvar	_p @ sp[(-18)+16]
 16512  013B76  0EFF               	movlw	-1
 16513  013B78  BEE3               	btfsc	plusw1,7,c
 16514  013B7A  D007               	goto	u8460
 16515  013B7C  0EFF               	movlw	-1
 16516  013B7E  50E3               	movf	plusw1,w,c
 16517  013B80  E103               	bnz	u8461
 16518  013B82  0EFE               	movlw	-2
 16519  013B84  04E3               	decf	plusw1,w,c
 16520  013B86  B0D8               	btfsc	status,0,c
 16521  013B88                     u8461:
 16522  013B88  D6CA               	goto	l8757
 16523  013B8A                     u8460:
 16524                           
 16525                           ;stkvar	_w @ sp[(-18)+14]
 16526  013B8A  0EFD               	movlw	-3
 16527  013B8C  BEE3               	btfsc	plusw1,7,c
 16528  013B8E  D009               	goto	u8480
 16529  013B90  0EFD               	movlw	-3
 16530  013B92  50E3               	movf	plusw1,w,c
 16531  013B94  E104               	bnz	u8470
 16532  013B96  0EFC               	movlw	-4
 16533  013B98  04E3               	decf	plusw1,w,c
 16534  013B9A  A0D8               	btfss	status,0,c
 16535  013B9C  D002               	goto	u8480
 16536  013B9E                     u8470:
 16537  013B9E  B222               	btfsc	_flags^0,1,c
 16538  013BA0  D6BE               	goto	l8757
 16539  013BA2                     u8480:
 16540                           
 16541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16542                           ;stkvar	_s @ sp[(-18)+12]
 16543  013BA2  0EFA               	movlw	-6
 16544  013BA4  006F FF8C  F035    	movff	plusw1,btemp
 16545  013BAA  0EFB               	movlw	-5
 16546  013BAC  50E3               	movf	plusw1,w,c
 16547  013BAE  1035               	iorwf	btemp^0,w,c
 16548  013BB0  A4D8               	btfss	status,2,c
 16549  013BB2  D002               	goto	u8500
 16550  013BB4  A422               	btfss	_flags^0,2,c
 16551  013BB6  D033               	goto	l8791
 16552  013BB8                     u8500:
 16553                           
 16554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16555                           ;stkvar	_i @ sp[(-18)+10]
 16556  013BB8  50E1               	movf	fsr1l,w,c
 16557  013BBA  0FF8               	addlw	-8
 16558  013BBC  6ED9               	movwf	fsr2l,c
 16559  013BBE  50E2               	movf	fsr1h,w,c
 16560  013BC0  6EDA               	movwf	fsr2h,c
 16561  013BC2  0EFF               	movlw	255
 16562  013BC4  22DA               	addwfc	fsr2h,f,c
 16563  013BC6  06DE               	decf	postinc2,f,c
 16564  013BC8  0E00               	movlw	0
 16565  013BCA  5ADD               	subwfb	postdec2,f,c
 16566                           
 16567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16568                           ;stkvar	_s @ sp[(-18)+12]
 16569  013BCC  0EFA               	movlw	-6
 16570  013BCE  006F FF8C  F035    	movff	plusw1,btemp
 16571  013BD4  0EFB               	movlw	-5
 16572  013BD6  50E3               	movf	plusw1,w,c
 16573  013BD8  1035               	iorwf	btemp^0,w,c
 16574  013BDA  A4D8               	btfss	status,2,c
 16575  013BDC  D002               	goto	l8787
 16576  013BDE  0E2B               	movlw	43
 16577  013BE0  D001               	goto	L12
 16578  013BE2                     l8787:
 16579  013BE2  0E2D               	movlw	45
 16580  013BE4                     L12:
 16581  013BE4  6E3F               	movwf	(btemp+10)^0,c
 16582  013BE6  0E00               	movlw	0
 16583  013BE8  6E40               	movwf	(btemp+11)^0,c
 16584                           
 16585                           ;stkvar	_dtoa$4049 @ sp[(-18)+0]
 16586  013BEA  0EEE               	movlw	-18
 16587  013BEC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16588  013BF2  0EEF               	movlw	-17
 16589  013BF4  0060  F103  FFE3   	movff	btemp+11,plusw1
 16590                           
 16591                           ;stkvar	_dtoa$4049 @ sp[(-18)+0]
 16592                           ;stkvar	_i @ sp[(-18)+10]
 16593  013BFA  0EF8               	movlw	-8
 16594  013BFC  006F FF8C  F03F    	movff	plusw1,btemp+10
 16595  013C02  0EF9               	movlw	-7
 16596  013C04  006F FF8C  F040    	movff	plusw1,btemp+11
 16597  013C0A  0EA8               	movlw	low _dbuf
 16598  013C0C  243F               	addwf	(btemp+10)^0,w,c
 16599  013C0E  6ED9               	movwf	fsr2l,c
 16600  013C10  0E01               	movlw	high _dbuf
 16601  013C12  2040               	addwfc	(btemp+11)^0,w,c
 16602  013C14  6EDA               	movwf	fsr2h,c
 16603  013C16  0EEE               	movlw	-18
 16604  013C18  006F FF8F FFDF     	movff	plusw1,indf2
 16605  013C1E                     l8791:
 16606                           
 16607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16608                           ;stkvar	_w @ sp[(-18)+14]
 16609  013C1E  0EFC               	movlw	-4
 16610  013C20  006F FF8F FFE6     	movff	plusw1,postinc1
 16611  013C26  006F FF8F FFE6     	movff	plusw1,postinc1
 16612                           
 16613                           ;stkvar	_i @ sp[(-20)+10]
 16614  013C2C  0EA8               	movlw	low _dbuf
 16615  013C2E  6E3F               	movwf	(btemp+10)^0,c
 16616  013C30  0E01               	movlw	high _dbuf
 16617  013C32  6E40               	movwf	(btemp+11)^0,c
 16618  013C34  0EF6               	movlw	-10
 16619  013C36  50E3               	movf	plusw1,w,c
 16620  013C38  263F               	addwf	(btemp+10)^0,f,c
 16621  013C3A  0EF7               	movlw	-9
 16622  013C3C  50E3               	movf	plusw1,w,c
 16623  013C3E  2240               	addwfc	(btemp+11)^0,f,c
 16624  013C40  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 16625  013C46  0060  F103  FFE6   	movff	btemp+11,postinc1
 16626                           
 16627                           ;stkvar	_fp @ sp[(-22)+-2]
 16628  013C4C  0EE8               	movlw	-24
 16629  013C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 16630  013C54  006F FF8F FFE6     	movff	plusw1,postinc1
 16631  013C5A  ECB6  F0AF         	call	_pad	;wreg free
 16632                           
 16633                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16634  013C5E  0EE4               	movlw	228
 16635  013C60  26E1               	addwf	fsr1l,f,c
 16636  013C62  0EFF               	movlw	255
 16637  013C64  22E2               	addwfc	fsr1h,f,c
 16638  013C66  0012               	return		;funcret
 16639  013C68                     __end_of_dtoa:
 16640                           	opt callstack 0
 16641                           
 16642 ;; *************** function _abs *****************
 16643 ;; Defined at:
 16644 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;  a               2  [STACK] int 
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;		None
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  2  [STACK] int 
 16651 ;; Registers used:
 16652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16653 ;; Tracked objects:
 16654 ;;		On entry : 0/1
 16655 ;;		On exit  : 0/0
 16656 ;;		Unchanged: 0/0
 16657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16662 ;;Total ram usage:        0 bytes
 16663 ;; Hardware stack levels used:    1
 16664 ;; Hardware stack levels required when called:    6
 16665 ;; This function calls:
 16666 ;;		Nothing
 16667 ;; This function is called by:
 16668 ;;		_dtoa
 16669 ;; This function uses a reentrant model
 16670 ;;
 16671                           
 16672                           	psect	text53
 16673  017286                     __ptext53:
 16674                           	opt callstack 0
 16675  017286                     _abs:
 16676                           	opt callstack 17
 16677                           
 16678                           ;stkvar	_a @ sp[(0)+-2]
 16679                           
 16680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16681                           ;incstack = 0
 16682  017286  0EFF               	movlw	-1
 16683  017288  BEE3               	btfsc	plusw1,7,c
 16684  01728A  D007               	goto	u4730
 16685  01728C  0EFF               	movlw	-1
 16686  01728E  50E3               	movf	plusw1,w,c
 16687  017290  E112               	bnz	l6053
 16688  017292  0EFE               	movlw	-2
 16689  017294  04E3               	decf	plusw1,w,c
 16690  017296  B0D8               	btfsc	status,0,c
 16691  017298  D00E               	goto	l6053
 16692  01729A                     u4730:
 16693                           
 16694                           ;stkvar	_a @ sp[(0)+-2]
 16695  01729A  0EFE               	movlw	-2
 16696  01729C  006F FF8C  F035    	movff	plusw1,btemp
 16697  0172A2  1E35               	comf	btemp^0,f,c
 16698  0172A4  0EFF               	movlw	-1
 16699  0172A6  006F FF8C  F036    	movff	plusw1,btemp+1
 16700  0172AC  1E36               	comf	(btemp+1)^0,f,c
 16701  0172AE  2A35               	incf	btemp^0,f,c
 16702  0172B0  B4D8               	btfsc	status,2,c
 16703  0172B2  2A36               	incf	(btemp+1)^0,f,c
 16704  0172B4  D008               	goto	l2626
 16705  0172B6                     l6053:
 16706                           
 16707                           ;stkvar	_a @ sp[(0)+-2]
 16708  0172B6  0EFE               	movlw	-2
 16709  0172B8  006F FF8C  F035    	movff	plusw1,btemp
 16710  0172BE  0EFF               	movlw	-1
 16711  0172C0  006F FF8C  F036    	movff	plusw1,btemp+1
 16712  0172C6                     l2626:
 16713                           
 16714                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16715  0172C6  52E5               	movf	postdec1,f,c
 16716  0172C8  52E5               	movf	postdec1,f,c
 16717  0172CA  0012               	return		;funcret
 16718  0172CC                     __end_of_abs:
 16719                           	opt callstack 0
 16720                           
 16721 ;; *************** function ___aomod *****************
 16722 ;; Defined at:
 16723 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;  dividend        8  [STACK] long long 
 16726 ;;  divisor         8  [STACK] long long 
 16727 ;; Auto vars:     Size  Location     Type
 16728 ;;  sign            1  [STACK] unsigned char 
 16729 ;;  counter         1  [STACK] unsigned char 
 16730 ;; Return value:  Size  Location     Type
 16731 ;;                  8  [STACK] long long 
 16732 ;; Registers used:
 16733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16734 ;; Tracked objects:
 16735 ;;		On entry : 0/1
 16736 ;;		On exit  : 0/0
 16737 ;;		Unchanged: 0/0
 16738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16743 ;;Total ram usage:        0 bytes
 16744 ;; Hardware stack levels used:    1
 16745 ;; Hardware stack levels required when called:    6
 16746 ;; This function calls:
 16747 ;;		Nothing
 16748 ;; This function is called by:
 16749 ;;		_dtoa
 16750 ;; This function uses a reentrant model
 16751 ;;
 16752                           
 16753                           	psect	text54
 16754  014E2C                     __ptext54:
 16755                           	opt callstack 0
 16756  014E2C                     ___aomod:
 16757                           	opt callstack 0
 16758                           
 16759                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16760  014E2C  52E6               	movf	postinc1,f,c
 16761  014E2E  52E6               	movf	postinc1,f,c
 16762                           
 16763                           ;stkvar	_sign @ sp[(-2)+0]
 16764                           
 16765                           ;incstack = 0
 16766  014E30  0EFE               	movlw	-2
 16767  014E32  6AE3               	clrf	plusw1,c
 16768                           
 16769                           ;stkvar	_dividend @ sp[(-2)+-8]
 16770  014E34  0EFD               	movlw	-3
 16771  014E36  AEE3               	btfss	plusw1,7,c
 16772  014E38  D028               	goto	l6211
 16773                           
 16774                           ;stkvar	_dividend @ sp[(-2)+-8]
 16775                           ;stkvar	_dividend @ sp[(-2)+-8]
 16776  014E3A  0EF6               	movlw	-10
 16777  014E3C  6CE3               	negf	plusw1,c
 16778  014E3E  0EF7               	movlw	-9
 16779  014E40  1EE3               	comf	plusw1,f,c
 16780  014E42  0EF8               	movlw	-8
 16781  014E44  1EE3               	comf	plusw1,f,c
 16782  014E46  0EF9               	movlw	-7
 16783  014E48  1EE3               	comf	plusw1,f,c
 16784  014E4A  0EFA               	movlw	-6
 16785  014E4C  1EE3               	comf	plusw1,f,c
 16786  014E4E  0EFB               	movlw	-5
 16787  014E50  1EE3               	comf	plusw1,f,c
 16788  014E52  0EFC               	movlw	-4
 16789  014E54  1EE3               	comf	plusw1,f,c
 16790  014E56  0EFD               	movlw	-3
 16791  014E58  1EE3               	comf	plusw1,f,c
 16792  014E5A  E314               	bnc	u5160
 16793  014E5C  0EF7               	movlw	-9
 16794  014E5E  2AE3               	incf	plusw1,f,c
 16795  014E60  E311               	bnc	u5160
 16796  014E62  0EF8               	movlw	-8
 16797  014E64  2AE3               	incf	plusw1,f,c
 16798  014E66  E30E               	bnc	u5160
 16799  014E68  0EF9               	movlw	-7
 16800  014E6A  2AE3               	incf	plusw1,f,c
 16801  014E6C  E30B               	bnc	u5160
 16802  014E6E  0EFA               	movlw	-6
 16803  014E70  2AE3               	incf	plusw1,f,c
 16804  014E72  E308               	bnc	u5160
 16805  014E74  0EFB               	movlw	-5
 16806  014E76  2AE3               	incf	plusw1,f,c
 16807  014E78  E305               	bnc	u5160
 16808  014E7A  0EFC               	movlw	-4
 16809  014E7C  2AE3               	incf	plusw1,f,c
 16810  014E7E  E302               	bnc	u5160
 16811  014E80  0EFD               	movlw	-3
 16812  014E82  2AE3               	incf	plusw1,f,c
 16813  014E84                     u5160:
 16814                           
 16815                           ;stkvar	_sign @ sp[(-2)+0]
 16816  014E84  0EFE               	movlw	-2
 16817  014E86  6AE3               	clrf	plusw1,c
 16818  014E88  2AE3               	incf	plusw1,f,c
 16819  014E8A                     l6211:
 16820                           
 16821                           ;stkvar	_divisor @ sp[(-2)+-16]
 16822  014E8A  0EF5               	movlw	-11
 16823  014E8C  AEE3               	btfss	plusw1,7,c
 16824  014E8E  D025               	goto	u5180
 16825                           
 16826                           ;stkvar	_divisor @ sp[(-2)+-16]
 16827                           ;stkvar	_divisor @ sp[(-2)+-16]
 16828  014E90  0EEE               	movlw	-18
 16829  014E92  6CE3               	negf	plusw1,c
 16830  014E94  0EEF               	movlw	-17
 16831  014E96  1EE3               	comf	plusw1,f,c
 16832  014E98  0EF0               	movlw	-16
 16833  014E9A  1EE3               	comf	plusw1,f,c
 16834  014E9C  0EF1               	movlw	-15
 16835  014E9E  1EE3               	comf	plusw1,f,c
 16836  014EA0  0EF2               	movlw	-14
 16837  014EA2  1EE3               	comf	plusw1,f,c
 16838  014EA4  0EF3               	movlw	-13
 16839  014EA6  1EE3               	comf	plusw1,f,c
 16840  014EA8  0EF4               	movlw	-12
 16841  014EAA  1EE3               	comf	plusw1,f,c
 16842  014EAC  0EF5               	movlw	-11
 16843  014EAE  1EE3               	comf	plusw1,f,c
 16844  014EB0  E314               	bnc	u5180
 16845  014EB2  0EEF               	movlw	-17
 16846  014EB4  2AE3               	incf	plusw1,f,c
 16847  014EB6  E311               	bnc	u5180
 16848  014EB8  0EF0               	movlw	-16
 16849  014EBA  2AE3               	incf	plusw1,f,c
 16850  014EBC  E30E               	bnc	u5180
 16851  014EBE  0EF1               	movlw	-15
 16852  014EC0  2AE3               	incf	plusw1,f,c
 16853  014EC2  E30B               	bnc	u5180
 16854  014EC4  0EF2               	movlw	-14
 16855  014EC6  2AE3               	incf	plusw1,f,c
 16856  014EC8  E308               	bnc	u5180
 16857  014ECA  0EF3               	movlw	-13
 16858  014ECC  2AE3               	incf	plusw1,f,c
 16859  014ECE  E305               	bnc	u5180
 16860  014ED0  0EF4               	movlw	-12
 16861  014ED2  2AE3               	incf	plusw1,f,c
 16862  014ED4  E302               	bnc	u5180
 16863  014ED6  0EF5               	movlw	-11
 16864  014ED8  2AE3               	incf	plusw1,f,c
 16865  014EDA                     u5180:
 16866                           
 16867                           ;stkvar	_divisor @ sp[(-2)+-16]
 16868  014EDA  0EEE               	movlw	-18
 16869  014EDC  50E3               	movf	plusw1,w,c
 16870  014EDE  E116               	bnz	u5190
 16871  014EE0  0EEF               	movlw	-17
 16872  014EE2  50E3               	movf	plusw1,w,c
 16873  014EE4  E113               	bnz	u5190
 16874  014EE6  0EF0               	movlw	-16
 16875  014EE8  50E3               	movf	plusw1,w,c
 16876  014EEA  E110               	bnz	u5190
 16877  014EEC  0EF1               	movlw	-15
 16878  014EEE  50E3               	movf	plusw1,w,c
 16879  014EF0  E10D               	bnz	u5190
 16880  014EF2  0EF2               	movlw	-14
 16881  014EF4  50E3               	movf	plusw1,w,c
 16882  014EF6  E10A               	bnz	u5190
 16883  014EF8  0EF3               	movlw	-13
 16884  014EFA  50E3               	movf	plusw1,w,c
 16885  014EFC  E107               	bnz	u5190
 16886  014EFE  0EF4               	movlw	-12
 16887  014F00  50E3               	movf	plusw1,w,c
 16888  014F02  E104               	bnz	u5190
 16889  014F04  0EF5               	movlw	-11
 16890  014F06  50E3               	movf	plusw1,w,c
 16891  014F08  B4D8               	btfsc	status,2,c
 16892  014F0A  D075               	goto	u5220
 16893  014F0C                     u5190:
 16894                           
 16895                           ;stkvar	_counter @ sp[(-2)+1]
 16896  014F0C  0EFF               	movlw	-1
 16897  014F0E  6AE3               	clrf	plusw1,c
 16898  014F10  D012               	goto	L13
 16899  014F12                     l6219:
 16900                           
 16901                           ;stkvar	_divisor @ sp[(-2)+-16]
 16902  014F12  90D8               	bcf	status,0,c
 16903  014F14  0EEE               	movlw	-18
 16904  014F16  36E3               	rlcf	plusw1,f,c
 16905  014F18  0EEF               	movlw	-17
 16906  014F1A  36E3               	rlcf	plusw1,f,c
 16907  014F1C  0EF0               	movlw	-16
 16908  014F1E  36E3               	rlcf	plusw1,f,c
 16909  014F20  0EF1               	movlw	-15
 16910  014F22  36E3               	rlcf	plusw1,f,c
 16911  014F24  0EF2               	movlw	-14
 16912  014F26  36E3               	rlcf	plusw1,f,c
 16913  014F28  0EF3               	movlw	-13
 16914  014F2A  36E3               	rlcf	plusw1,f,c
 16915  014F2C  0EF4               	movlw	-12
 16916  014F2E  36E3               	rlcf	plusw1,f,c
 16917  014F30  0EF5               	movlw	-11
 16918  014F32  36E3               	rlcf	plusw1,f,c
 16919                           
 16920                           ;stkvar	_counter @ sp[(-2)+1]
 16921  014F34  0EFF               	movlw	-1
 16922  014F36                     L13:
 16923  014F36  2AE3               	incf	plusw1,f,c
 16924                           
 16925                           ;stkvar	_divisor @ sp[(-2)+-16]
 16926  014F38  0EF5               	movlw	-11
 16927  014F3A  AEE3               	btfss	plusw1,7,c
 16928  014F3C  D7EA               	goto	l6219
 16929  014F3E                     u5200:
 16930                           
 16931                           ;stkvar	_divisor @ sp[(-2)+-16]
 16932                           ;stkvar	_dividend @ sp[(-2)+-8]
 16933  014F3E  50E1               	movf	fsr1l,w,c
 16934  014F40  0FF6               	addlw	-10
 16935  014F42  6ED9               	movwf	fsr2l,c
 16936  014F44  50E2               	movf	fsr1h,w,c
 16937  014F46  6EDA               	movwf	fsr2h,c
 16938  014F48  0EFF               	movlw	255
 16939  014F4A  22DA               	addwfc	fsr2h,f,c
 16940  014F4C  0EEE               	movlw	-18
 16941  014F4E  50E3               	movf	plusw1,w,c
 16942  014F50  5CDE               	subwf	postinc2,w,c
 16943  014F52  0EEF               	movlw	-17
 16944  014F54  50E3               	movf	plusw1,w,c
 16945  014F56  58DE               	subwfb	postinc2,w,c
 16946  014F58  0EF0               	movlw	-16
 16947  014F5A  50E3               	movf	plusw1,w,c
 16948  014F5C  58DE               	subwfb	postinc2,w,c
 16949  014F5E  0EF1               	movlw	-15
 16950  014F60  50E3               	movf	plusw1,w,c
 16951  014F62  58DE               	subwfb	postinc2,w,c
 16952  014F64  0EF2               	movlw	-14
 16953  014F66  50E3               	movf	plusw1,w,c
 16954  014F68  58DE               	subwfb	postinc2,w,c
 16955  014F6A  0EF3               	movlw	-13
 16956  014F6C  50E3               	movf	plusw1,w,c
 16957  014F6E  58DE               	subwfb	postinc2,w,c
 16958  014F70  0EF4               	movlw	-12
 16959  014F72  50E3               	movf	plusw1,w,c
 16960  014F74  58DE               	subwfb	postinc2,w,c
 16961  014F76  0EF5               	movlw	-11
 16962  014F78  50E3               	movf	plusw1,w,c
 16963  014F7A  58DE               	subwfb	postinc2,w,c
 16964  014F7C  A0D8               	btfss	status,0,c
 16965  014F7E  D01F               	goto	l6227
 16966                           
 16967                           ;stkvar	_divisor @ sp[(-2)+-16]
 16968                           ;stkvar	_dividend @ sp[(-2)+-8]
 16969  014F80  50E1               	movf	fsr1l,w,c
 16970  014F82  0FF6               	addlw	-10
 16971  014F84  6ED9               	movwf	fsr2l,c
 16972  014F86  50E2               	movf	fsr1h,w,c
 16973  014F88  6EDA               	movwf	fsr2h,c
 16974  014F8A  0EFF               	movlw	255
 16975  014F8C  22DA               	addwfc	fsr2h,f,c
 16976  014F8E  0EEE               	movlw	-18
 16977  014F90  50E3               	movf	plusw1,w,c
 16978  014F92  5EDE               	subwf	postinc2,f,c
 16979  014F94  0EEF               	movlw	-17
 16980  014F96  50E3               	movf	plusw1,w,c
 16981  014F98  5ADE               	subwfb	postinc2,f,c
 16982  014F9A  0EF0               	movlw	-16
 16983  014F9C  50E3               	movf	plusw1,w,c
 16984  014F9E  5ADE               	subwfb	postinc2,f,c
 16985  014FA0  0EF1               	movlw	-15
 16986  014FA2  50E3               	movf	plusw1,w,c
 16987  014FA4  5ADE               	subwfb	postinc2,f,c
 16988  014FA6  0EF2               	movlw	-14
 16989  014FA8  50E3               	movf	plusw1,w,c
 16990  014FAA  5ADE               	subwfb	postinc2,f,c
 16991  014FAC  0EF3               	movlw	-13
 16992  014FAE  50E3               	movf	plusw1,w,c
 16993  014FB0  5ADE               	subwfb	postinc2,f,c
 16994  014FB2  0EF4               	movlw	-12
 16995  014FB4  50E3               	movf	plusw1,w,c
 16996  014FB6  5ADE               	subwfb	postinc2,f,c
 16997  014FB8  0EF5               	movlw	-11
 16998  014FBA  50E3               	movf	plusw1,w,c
 16999  014FBC  5ADE               	subwfb	postinc2,f,c
 17000  014FBE                     l6227:
 17001                           
 17002                           ;stkvar	_divisor @ sp[(-2)+-16]
 17003  014FBE  90D8               	bcf	status,0,c
 17004  014FC0  0EF5               	movlw	-11
 17005  014FC2  32E3               	rrcf	plusw1,f,c
 17006  014FC4  0EF4               	movlw	-12
 17007  014FC6  32E3               	rrcf	plusw1,f,c
 17008  014FC8  0EF3               	movlw	-13
 17009  014FCA  32E3               	rrcf	plusw1,f,c
 17010  014FCC  0EF2               	movlw	-14
 17011  014FCE  32E3               	rrcf	plusw1,f,c
 17012  014FD0  0EF1               	movlw	-15
 17013  014FD2  32E3               	rrcf	plusw1,f,c
 17014  014FD4  0EF0               	movlw	-16
 17015  014FD6  32E3               	rrcf	plusw1,f,c
 17016  014FD8  0EEF               	movlw	-17
 17017  014FDA  32E3               	rrcf	plusw1,f,c
 17018  014FDC  0EEE               	movlw	-18
 17019  014FDE  32E3               	rrcf	plusw1,f,c
 17020                           
 17021                           ;stkvar	_counter @ sp[(-2)+1]
 17022  014FE0  0EFF               	movlw	-1
 17023  014FE2  50E3               	movf	plusw1,w,c
 17024  014FE4  6E35               	movwf	btemp^0,c
 17025  014FE6  0E01               	movlw	1
 17026  014FE8  5E35               	subwf	btemp^0,f,c
 17027  014FEA  0EFF               	movlw	-1
 17028  014FEC  0060  F0D7  FFE3   	movff	btemp,plusw1
 17029  014FF2  A4D8               	btfss	status,2,c
 17030  014FF4  D7A4               	goto	u5200
 17031  014FF6                     u5220:
 17032                           
 17033                           ;stkvar	_sign @ sp[(-2)+0]
 17034  014FF6  0EFE               	movlw	-2
 17035  014FF8  50E3               	movf	plusw1,w,c
 17036  014FFA  B4D8               	btfsc	status,2,c
 17037  014FFC  D025               	goto	u5240
 17038                           
 17039                           ;stkvar	_dividend @ sp[(-2)+-8]
 17040                           ;stkvar	_dividend @ sp[(-2)+-8]
 17041  014FFE  0EF6               	movlw	-10
 17042  015000  6CE3               	negf	plusw1,c
 17043  015002  0EF7               	movlw	-9
 17044  015004  1EE3               	comf	plusw1,f,c
 17045  015006  0EF8               	movlw	-8
 17046  015008  1EE3               	comf	plusw1,f,c
 17047  01500A  0EF9               	movlw	-7
 17048  01500C  1EE3               	comf	plusw1,f,c
 17049  01500E  0EFA               	movlw	-6
 17050  015010  1EE3               	comf	plusw1,f,c
 17051  015012  0EFB               	movlw	-5
 17052  015014  1EE3               	comf	plusw1,f,c
 17053  015016  0EFC               	movlw	-4
 17054  015018  1EE3               	comf	plusw1,f,c
 17055  01501A  0EFD               	movlw	-3
 17056  01501C  1EE3               	comf	plusw1,f,c
 17057  01501E  E314               	bnc	u5240
 17058  015020  0EF7               	movlw	-9
 17059  015022  2AE3               	incf	plusw1,f,c
 17060  015024  E311               	bnc	u5240
 17061  015026  0EF8               	movlw	-8
 17062  015028  2AE3               	incf	plusw1,f,c
 17063  01502A  E30E               	bnc	u5240
 17064  01502C  0EF9               	movlw	-7
 17065  01502E  2AE3               	incf	plusw1,f,c
 17066  015030  E30B               	bnc	u5240
 17067  015032  0EFA               	movlw	-6
 17068  015034  2AE3               	incf	plusw1,f,c
 17069  015036  E308               	bnc	u5240
 17070  015038  0EFB               	movlw	-5
 17071  01503A  2AE3               	incf	plusw1,f,c
 17072  01503C  E305               	bnc	u5240
 17073  01503E  0EFC               	movlw	-4
 17074  015040  2AE3               	incf	plusw1,f,c
 17075  015042  E302               	bnc	u5240
 17076  015044  0EFD               	movlw	-3
 17077  015046  2AE3               	incf	plusw1,f,c
 17078  015048                     u5240:
 17079                           
 17080                           ;stkvar	_dividend @ sp[(-2)+-8]
 17081  015048  0EF6               	movlw	246
 17082  01504A  24E1               	addwf	fsr1l,w,c
 17083  01504C  6ED9               	movwf	fsr2l,c
 17084  01504E  0EFF               	movlw	255
 17085  015050  20E2               	addwfc	fsr1h,w,c
 17086  015052  6EDA               	movwf	fsr2h,c
 17087                           
 17088                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17089  015054  0E08               	movlw	8
 17090  015056  6E35               	movwf	btemp^0,c
 17091  015058  0EF6               	movlw	-10
 17092  01505A                     us525999:
 17093  01505A  006F FF7B FFE3     	movff	postinc2,plusw1
 17094  015060  28E8               	incf	wreg,w,c
 17095  015062  2E35               	decfsz	btemp^0,f,c
 17096  015064  D7FA               	bra	us525999
 17097                           
 17098                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17099  015066  52E5               	movf	postdec1,f,c
 17100  015068  52E5               	movf	postdec1,f,c
 17101  01506A  0012               	return		;funcret
 17102  01506C                     __end_of___aomod:
 17103                           	opt callstack 0
 17104                           
 17105 ;; *************** function ___aodiv *****************
 17106 ;; Defined at:
 17107 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17108 ;; Parameters:    Size  Location     Type
 17109 ;;  dividend        8  [STACK] long long 
 17110 ;;  divisor         8  [STACK] long long 
 17111 ;; Auto vars:     Size  Location     Type
 17112 ;;  quotient        8  [STACK] long long 
 17113 ;;  sign            1  [STACK] unsigned char 
 17114 ;;  counter         1  [STACK] unsigned char 
 17115 ;; Return value:  Size  Location     Type
 17116 ;;                  8  [STACK] long long 
 17117 ;; Registers used:
 17118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17119 ;; Tracked objects:
 17120 ;;		On entry : 0/1
 17121 ;;		On exit  : 0/0
 17122 ;;		Unchanged: 0/0
 17123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17128 ;;Total ram usage:        0 bytes
 17129 ;; Hardware stack levels used:    1
 17130 ;; Hardware stack levels required when called:    6
 17131 ;; This function calls:
 17132 ;;		Nothing
 17133 ;; This function is called by:
 17134 ;;		_dtoa
 17135 ;; This function uses a reentrant model
 17136 ;;
 17137                           
 17138                           	psect	text55
 17139  014938                     __ptext55:
 17140                           	opt callstack 0
 17141  014938                     ___aodiv:
 17142                           	opt callstack 0
 17143                           
 17144                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17145  014938  0E0A               	movlw	10
 17146  01493A  26E1               	addwf	fsr1l,f,c
 17147  01493C  0E00               	movlw	0
 17148  01493E  22E2               	addwfc	fsr1h,f,c
 17149                           
 17150                           ;stkvar	_sign @ sp[(-10)+8]
 17151                           
 17152                           ;incstack = 0
 17153  014940  0EFE               	movlw	-2
 17154  014942  6AE3               	clrf	plusw1,c
 17155                           
 17156                           ;stkvar	_divisor @ sp[(-10)+-16]
 17157  014944  0EED               	movlw	-19
 17158  014946  AEE3               	btfss	plusw1,7,c
 17159  014948  D028               	goto	l6167
 17160                           
 17161                           ;stkvar	_divisor @ sp[(-10)+-16]
 17162                           ;stkvar	_divisor @ sp[(-10)+-16]
 17163  01494A  0EE6               	movlw	-26
 17164  01494C  6CE3               	negf	plusw1,c
 17165  01494E  0EE7               	movlw	-25
 17166  014950  1EE3               	comf	plusw1,f,c
 17167  014952  0EE8               	movlw	-24
 17168  014954  1EE3               	comf	plusw1,f,c
 17169  014956  0EE9               	movlw	-23
 17170  014958  1EE3               	comf	plusw1,f,c
 17171  01495A  0EEA               	movlw	-22
 17172  01495C  1EE3               	comf	plusw1,f,c
 17173  01495E  0EEB               	movlw	-21
 17174  014960  1EE3               	comf	plusw1,f,c
 17175  014962  0EEC               	movlw	-20
 17176  014964  1EE3               	comf	plusw1,f,c
 17177  014966  0EED               	movlw	-19
 17178  014968  1EE3               	comf	plusw1,f,c
 17179  01496A  E314               	bnc	u5040
 17180  01496C  0EE7               	movlw	-25
 17181  01496E  2AE3               	incf	plusw1,f,c
 17182  014970  E311               	bnc	u5040
 17183  014972  0EE8               	movlw	-24
 17184  014974  2AE3               	incf	plusw1,f,c
 17185  014976  E30E               	bnc	u5040
 17186  014978  0EE9               	movlw	-23
 17187  01497A  2AE3               	incf	plusw1,f,c
 17188  01497C  E30B               	bnc	u5040
 17189  01497E  0EEA               	movlw	-22
 17190  014980  2AE3               	incf	plusw1,f,c
 17191  014982  E308               	bnc	u5040
 17192  014984  0EEB               	movlw	-21
 17193  014986  2AE3               	incf	plusw1,f,c
 17194  014988  E305               	bnc	u5040
 17195  01498A  0EEC               	movlw	-20
 17196  01498C  2AE3               	incf	plusw1,f,c
 17197  01498E  E302               	bnc	u5040
 17198  014990  0EED               	movlw	-19
 17199  014992  2AE3               	incf	plusw1,f,c
 17200  014994                     u5040:
 17201                           
 17202                           ;stkvar	_sign @ sp[(-10)+8]
 17203  014994  0EFE               	movlw	-2
 17204  014996  6AE3               	clrf	plusw1,c
 17205  014998  2AE3               	incf	plusw1,f,c
 17206  01499A                     l6167:
 17207                           
 17208                           ;stkvar	_dividend @ sp[(-10)+-8]
 17209  01499A  0EF5               	movlw	-11
 17210  01499C  AEE3               	btfss	plusw1,7,c
 17211  01499E  D027               	goto	l6173
 17212                           
 17213                           ;stkvar	_dividend @ sp[(-10)+-8]
 17214                           ;stkvar	_dividend @ sp[(-10)+-8]
 17215  0149A0  0EEE               	movlw	-18
 17216  0149A2  6CE3               	negf	plusw1,c
 17217  0149A4  0EEF               	movlw	-17
 17218  0149A6  1EE3               	comf	plusw1,f,c
 17219  0149A8  0EF0               	movlw	-16
 17220  0149AA  1EE3               	comf	plusw1,f,c
 17221  0149AC  0EF1               	movlw	-15
 17222  0149AE  1EE3               	comf	plusw1,f,c
 17223  0149B0  0EF2               	movlw	-14
 17224  0149B2  1EE3               	comf	plusw1,f,c
 17225  0149B4  0EF3               	movlw	-13
 17226  0149B6  1EE3               	comf	plusw1,f,c
 17227  0149B8  0EF4               	movlw	-12
 17228  0149BA  1EE3               	comf	plusw1,f,c
 17229  0149BC  0EF5               	movlw	-11
 17230  0149BE  1EE3               	comf	plusw1,f,c
 17231  0149C0  E314               	bnc	u5060
 17232  0149C2  0EEF               	movlw	-17
 17233  0149C4  2AE3               	incf	plusw1,f,c
 17234  0149C6  E311               	bnc	u5060
 17235  0149C8  0EF0               	movlw	-16
 17236  0149CA  2AE3               	incf	plusw1,f,c
 17237  0149CC  E30E               	bnc	u5060
 17238  0149CE  0EF1               	movlw	-15
 17239  0149D0  2AE3               	incf	plusw1,f,c
 17240  0149D2  E30B               	bnc	u5060
 17241  0149D4  0EF2               	movlw	-14
 17242  0149D6  2AE3               	incf	plusw1,f,c
 17243  0149D8  E308               	bnc	u5060
 17244  0149DA  0EF3               	movlw	-13
 17245  0149DC  2AE3               	incf	plusw1,f,c
 17246  0149DE  E305               	bnc	u5060
 17247  0149E0  0EF4               	movlw	-12
 17248  0149E2  2AE3               	incf	plusw1,f,c
 17249  0149E4  E302               	bnc	u5060
 17250  0149E6  0EF5               	movlw	-11
 17251  0149E8  2AE3               	incf	plusw1,f,c
 17252  0149EA                     u5060:
 17253                           
 17254                           ;stkvar	_sign @ sp[(-10)+8]
 17255  0149EA  0EFE               	movlw	-2
 17256  0149EC  70E3               	btg	plusw1,0,c
 17257  0149EE                     l6173:
 17258                           
 17259                           ;stkvar	_quotient @ sp[(-10)+0]
 17260  0149EE  0E07               	movlw	7
 17261  0149F0  6E35               	movwf	btemp^0,c
 17262  0149F2  0EF6               	movlw	-10
 17263  0149F4                     u5071:
 17264  0149F4  6AE3               	clrf	plusw1,c
 17265  0149F6  2AE8               	incf	wreg,f,c
 17266  0149F8  0635               	decf	btemp^0,f,c
 17267  0149FA  E2FC               	bc	u5071
 17268                           
 17269                           ;stkvar	_divisor @ sp[(-10)+-16]
 17270  0149FC  0EE6               	movlw	-26
 17271  0149FE  50E3               	movf	plusw1,w,c
 17272  014A00  E116               	bnz	u5080
 17273  014A02  0EE7               	movlw	-25
 17274  014A04  50E3               	movf	plusw1,w,c
 17275  014A06  E113               	bnz	u5080
 17276  014A08  0EE8               	movlw	-24
 17277  014A0A  50E3               	movf	plusw1,w,c
 17278  014A0C  E110               	bnz	u5080
 17279  014A0E  0EE9               	movlw	-23
 17280  014A10  50E3               	movf	plusw1,w,c
 17281  014A12  E10D               	bnz	u5080
 17282  014A14  0EEA               	movlw	-22
 17283  014A16  50E3               	movf	plusw1,w,c
 17284  014A18  E10A               	bnz	u5080
 17285  014A1A  0EEB               	movlw	-21
 17286  014A1C  50E3               	movf	plusw1,w,c
 17287  014A1E  E107               	bnz	u5080
 17288  014A20  0EEC               	movlw	-20
 17289  014A22  50E3               	movf	plusw1,w,c
 17290  014A24  E104               	bnz	u5080
 17291  014A26  0EED               	movlw	-19
 17292  014A28  50E3               	movf	plusw1,w,c
 17293  014A2A  B4D8               	btfsc	status,2,c
 17294  014A2C  D088               	goto	u5110
 17295  014A2E                     u5080:
 17296                           
 17297                           ;stkvar	_counter @ sp[(-10)+9]
 17298  014A2E  0EFF               	movlw	-1
 17299  014A30  6AE3               	clrf	plusw1,c
 17300  014A32  D012               	goto	L14
 17301  014A34                     l6179:
 17302                           
 17303                           ;stkvar	_divisor @ sp[(-10)+-16]
 17304  014A34  90D8               	bcf	status,0,c
 17305  014A36  0EE6               	movlw	-26
 17306  014A38  36E3               	rlcf	plusw1,f,c
 17307  014A3A  0EE7               	movlw	-25
 17308  014A3C  36E3               	rlcf	plusw1,f,c
 17309  014A3E  0EE8               	movlw	-24
 17310  014A40  36E3               	rlcf	plusw1,f,c
 17311  014A42  0EE9               	movlw	-23
 17312  014A44  36E3               	rlcf	plusw1,f,c
 17313  014A46  0EEA               	movlw	-22
 17314  014A48  36E3               	rlcf	plusw1,f,c
 17315  014A4A  0EEB               	movlw	-21
 17316  014A4C  36E3               	rlcf	plusw1,f,c
 17317  014A4E  0EEC               	movlw	-20
 17318  014A50  36E3               	rlcf	plusw1,f,c
 17319  014A52  0EED               	movlw	-19
 17320  014A54  36E3               	rlcf	plusw1,f,c
 17321                           
 17322                           ;stkvar	_counter @ sp[(-10)+9]
 17323  014A56  0EFF               	movlw	-1
 17324  014A58                     L14:
 17325  014A58  2AE3               	incf	plusw1,f,c
 17326                           
 17327                           ;stkvar	_divisor @ sp[(-10)+-16]
 17328  014A5A  0EED               	movlw	-19
 17329  014A5C  AEE3               	btfss	plusw1,7,c
 17330  014A5E  D7EA               	goto	l6179
 17331  014A60                     u5090:
 17332                           
 17333                           ;stkvar	_quotient @ sp[(-10)+0]
 17334  014A60  90D8               	bcf	status,0,c
 17335  014A62  0EF6               	movlw	-10
 17336  014A64  36E3               	rlcf	plusw1,f,c
 17337  014A66  0EF7               	movlw	-9
 17338  014A68  36E3               	rlcf	plusw1,f,c
 17339  014A6A  0EF8               	movlw	-8
 17340  014A6C  36E3               	rlcf	plusw1,f,c
 17341  014A6E  0EF9               	movlw	-7
 17342  014A70  36E3               	rlcf	plusw1,f,c
 17343  014A72  0EFA               	movlw	-6
 17344  014A74  36E3               	rlcf	plusw1,f,c
 17345  014A76  0EFB               	movlw	-5
 17346  014A78  36E3               	rlcf	plusw1,f,c
 17347  014A7A  0EFC               	movlw	-4
 17348  014A7C  36E3               	rlcf	plusw1,f,c
 17349  014A7E  0EFD               	movlw	-3
 17350  014A80  36E3               	rlcf	plusw1,f,c
 17351                           
 17352                           ;stkvar	_divisor @ sp[(-10)+-16]
 17353                           ;stkvar	_dividend @ sp[(-10)+-8]
 17354  014A82  50E1               	movf	fsr1l,w,c
 17355  014A84  0FEE               	addlw	-18
 17356  014A86  6ED9               	movwf	fsr2l,c
 17357  014A88  50E2               	movf	fsr1h,w,c
 17358  014A8A  6EDA               	movwf	fsr2h,c
 17359  014A8C  0EFF               	movlw	255
 17360  014A8E  22DA               	addwfc	fsr2h,f,c
 17361  014A90  0EE6               	movlw	-26
 17362  014A92  50E3               	movf	plusw1,w,c
 17363  014A94  5CDE               	subwf	postinc2,w,c
 17364  014A96  0EE7               	movlw	-25
 17365  014A98  50E3               	movf	plusw1,w,c
 17366  014A9A  58DE               	subwfb	postinc2,w,c
 17367  014A9C  0EE8               	movlw	-24
 17368  014A9E  50E3               	movf	plusw1,w,c
 17369  014AA0  58DE               	subwfb	postinc2,w,c
 17370  014AA2  0EE9               	movlw	-23
 17371  014AA4  50E3               	movf	plusw1,w,c
 17372  014AA6  58DE               	subwfb	postinc2,w,c
 17373  014AA8  0EEA               	movlw	-22
 17374  014AAA  50E3               	movf	plusw1,w,c
 17375  014AAC  58DE               	subwfb	postinc2,w,c
 17376  014AAE  0EEB               	movlw	-21
 17377  014AB0  50E3               	movf	plusw1,w,c
 17378  014AB2  58DE               	subwfb	postinc2,w,c
 17379  014AB4  0EEC               	movlw	-20
 17380  014AB6  50E3               	movf	plusw1,w,c
 17381  014AB8  58DE               	subwfb	postinc2,w,c
 17382  014ABA  0EED               	movlw	-19
 17383  014ABC  50E3               	movf	plusw1,w,c
 17384  014ABE  58DE               	subwfb	postinc2,w,c
 17385  014AC0  A0D8               	btfss	status,0,c
 17386  014AC2  D021               	goto	l6191
 17387                           
 17388                           ;stkvar	_divisor @ sp[(-10)+-16]
 17389                           ;stkvar	_dividend @ sp[(-10)+-8]
 17390  014AC4  50E1               	movf	fsr1l,w,c
 17391  014AC6  0FEE               	addlw	-18
 17392  014AC8  6ED9               	movwf	fsr2l,c
 17393  014ACA  50E2               	movf	fsr1h,w,c
 17394  014ACC  6EDA               	movwf	fsr2h,c
 17395  014ACE  0EFF               	movlw	255
 17396  014AD0  22DA               	addwfc	fsr2h,f,c
 17397  014AD2  0EE6               	movlw	-26
 17398  014AD4  50E3               	movf	plusw1,w,c
 17399  014AD6  5EDE               	subwf	postinc2,f,c
 17400  014AD8  0EE7               	movlw	-25
 17401  014ADA  50E3               	movf	plusw1,w,c
 17402  014ADC  5ADE               	subwfb	postinc2,f,c
 17403  014ADE  0EE8               	movlw	-24
 17404  014AE0  50E3               	movf	plusw1,w,c
 17405  014AE2  5ADE               	subwfb	postinc2,f,c
 17406  014AE4  0EE9               	movlw	-23
 17407  014AE6  50E3               	movf	plusw1,w,c
 17408  014AE8  5ADE               	subwfb	postinc2,f,c
 17409  014AEA  0EEA               	movlw	-22
 17410  014AEC  50E3               	movf	plusw1,w,c
 17411  014AEE  5ADE               	subwfb	postinc2,f,c
 17412  014AF0  0EEB               	movlw	-21
 17413  014AF2  50E3               	movf	plusw1,w,c
 17414  014AF4  5ADE               	subwfb	postinc2,f,c
 17415  014AF6  0EEC               	movlw	-20
 17416  014AF8  50E3               	movf	plusw1,w,c
 17417  014AFA  5ADE               	subwfb	postinc2,f,c
 17418  014AFC  0EED               	movlw	-19
 17419  014AFE  50E3               	movf	plusw1,w,c
 17420  014B00  5ADE               	subwfb	postinc2,f,c
 17421                           
 17422                           ;stkvar	_quotient @ sp[(-10)+0]
 17423  014B02  0EF6               	movlw	-10
 17424  014B04  80E3               	bsf	plusw1,0,c
 17425  014B06                     l6191:
 17426                           
 17427                           ;stkvar	_divisor @ sp[(-10)+-16]
 17428  014B06  90D8               	bcf	status,0,c
 17429  014B08  0EED               	movlw	-19
 17430  014B0A  32E3               	rrcf	plusw1,f,c
 17431  014B0C  0EEC               	movlw	-20
 17432  014B0E  32E3               	rrcf	plusw1,f,c
 17433  014B10  0EEB               	movlw	-21
 17434  014B12  32E3               	rrcf	plusw1,f,c
 17435  014B14  0EEA               	movlw	-22
 17436  014B16  32E3               	rrcf	plusw1,f,c
 17437  014B18  0EE9               	movlw	-23
 17438  014B1A  32E3               	rrcf	plusw1,f,c
 17439  014B1C  0EE8               	movlw	-24
 17440  014B1E  32E3               	rrcf	plusw1,f,c
 17441  014B20  0EE7               	movlw	-25
 17442  014B22  32E3               	rrcf	plusw1,f,c
 17443  014B24  0EE6               	movlw	-26
 17444  014B26  32E3               	rrcf	plusw1,f,c
 17445                           
 17446                           ;stkvar	_counter @ sp[(-10)+9]
 17447  014B28  0EFF               	movlw	-1
 17448  014B2A  50E3               	movf	plusw1,w,c
 17449  014B2C  6E35               	movwf	btemp^0,c
 17450  014B2E  0E01               	movlw	1
 17451  014B30  5E35               	subwf	btemp^0,f,c
 17452  014B32  0EFF               	movlw	-1
 17453  014B34  0060  F0D7  FFE3   	movff	btemp,plusw1
 17454  014B3A  A4D8               	btfss	status,2,c
 17455  014B3C  D791               	goto	u5090
 17456  014B3E                     u5110:
 17457                           
 17458                           ;stkvar	_sign @ sp[(-10)+8]
 17459  014B3E  0EFE               	movlw	-2
 17460  014B40  50E3               	movf	plusw1,w,c
 17461  014B42  B4D8               	btfsc	status,2,c
 17462  014B44  D025               	goto	u5130
 17463                           
 17464                           ;stkvar	_quotient @ sp[(-10)+0]
 17465                           ;stkvar	_quotient @ sp[(-10)+0]
 17466  014B46  0EF6               	movlw	-10
 17467  014B48  6CE3               	negf	plusw1,c
 17468  014B4A  0EF7               	movlw	-9
 17469  014B4C  1EE3               	comf	plusw1,f,c
 17470  014B4E  0EF8               	movlw	-8
 17471  014B50  1EE3               	comf	plusw1,f,c
 17472  014B52  0EF9               	movlw	-7
 17473  014B54  1EE3               	comf	plusw1,f,c
 17474  014B56  0EFA               	movlw	-6
 17475  014B58  1EE3               	comf	plusw1,f,c
 17476  014B5A  0EFB               	movlw	-5
 17477  014B5C  1EE3               	comf	plusw1,f,c
 17478  014B5E  0EFC               	movlw	-4
 17479  014B60  1EE3               	comf	plusw1,f,c
 17480  014B62  0EFD               	movlw	-3
 17481  014B64  1EE3               	comf	plusw1,f,c
 17482  014B66  E314               	bnc	u5130
 17483  014B68  0EF7               	movlw	-9
 17484  014B6A  2AE3               	incf	plusw1,f,c
 17485  014B6C  E311               	bnc	u5130
 17486  014B6E  0EF8               	movlw	-8
 17487  014B70  2AE3               	incf	plusw1,f,c
 17488  014B72  E30E               	bnc	u5130
 17489  014B74  0EF9               	movlw	-7
 17490  014B76  2AE3               	incf	plusw1,f,c
 17491  014B78  E30B               	bnc	u5130
 17492  014B7A  0EFA               	movlw	-6
 17493  014B7C  2AE3               	incf	plusw1,f,c
 17494  014B7E  E308               	bnc	u5130
 17495  014B80  0EFB               	movlw	-5
 17496  014B82  2AE3               	incf	plusw1,f,c
 17497  014B84  E305               	bnc	u5130
 17498  014B86  0EFC               	movlw	-4
 17499  014B88  2AE3               	incf	plusw1,f,c
 17500  014B8A  E302               	bnc	u5130
 17501  014B8C  0EFD               	movlw	-3
 17502  014B8E  2AE3               	incf	plusw1,f,c
 17503  014B90                     u5130:
 17504                           
 17505                           ;stkvar	_quotient @ sp[(-10)+0]
 17506  014B90  0EF6               	movlw	246
 17507  014B92  24E1               	addwf	fsr1l,w,c
 17508  014B94  6ED9               	movwf	fsr2l,c
 17509  014B96  0EFF               	movlw	255
 17510  014B98  20E2               	addwfc	fsr1h,w,c
 17511  014B9A  6EDA               	movwf	fsr2h,c
 17512                           
 17513                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17514  014B9C  0E08               	movlw	8
 17515  014B9E  6E35               	movwf	btemp^0,c
 17516  014BA0  0EEE               	movlw	-18
 17517  014BA2                     us514999:
 17518  014BA2  006F FF7B FFE3     	movff	postinc2,plusw1
 17519  014BA8  28E8               	incf	wreg,w,c
 17520  014BAA  2E35               	decfsz	btemp^0,f,c
 17521  014BAC  D7FA               	bra	us514999
 17522                           
 17523                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17524  014BAE  0EF6               	movlw	246
 17525  014BB0  26E1               	addwf	fsr1l,f,c
 17526  014BB2  0EFF               	movlw	255
 17527  014BB4  22E2               	addwfc	fsr1h,f,c
 17528  014BB6  0012               	return		;funcret
 17529  014BB8                     __end_of___aodiv:
 17530                           	opt callstack 0
 17531                           
 17532 ;; *************** function _ctoa *****************
 17533 ;; Defined at:
 17534 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17535 ;; Parameters:    Size  Location     Type
 17536 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17537 ;;		 -> f(6), NULL(0), 
 17538 ;;  c               1  [STACK] unsigned char 
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;  w               2  [STACK] int 
 17541 ;;  l               2    0        int 
 17542 ;; Return value:  Size  Location     Type
 17543 ;;                  2  [STACK] int 
 17544 ;; Registers used:
 17545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17546 ;; Tracked objects:
 17547 ;;		On entry : 0/4
 17548 ;;		On exit  : 0/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17555 ;;Total ram usage:        0 bytes
 17556 ;; Hardware stack levels used:    1
 17557 ;; Hardware stack levels required when called:   11
 17558 ;; This function calls:
 17559 ;;		_pad
 17560 ;; This function is called by:
 17561 ;;		_vfpfcnvrt
 17562 ;; This function uses a reentrant model
 17563 ;;
 17564                           
 17565                           	psect	text56
 17566  016B88                     __ptext56:
 17567                           	opt callstack 0
 17568  016B88                     _ctoa:
 17569                           	opt callstack 0
 17570                           
 17571                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17572  016B88  52E6               	movf	postinc1,f,c
 17573  016B8A  52E6               	movf	postinc1,f,c
 17574                           
 17575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17576                           
 17577                           ;incstack = 0
 17578  016B8C  501E               	movf	_width^0,w,c
 17579  016B8E  101F               	iorwf	(_width+1)^0,w,c
 17580  016B90  A4D8               	btfss	status,2,c
 17581  016B92  D009               	goto	l8719
 17582                           
 17583                           ;stkvar	_w @ sp[(-2)+0]
 17584  016B94  0EFE               	movlw	-2
 17585  016B96  0060  F07B  FFE3   	movff	_width,plusw1
 17586  016B9C  0EFF               	movlw	-1
 17587  016B9E  0060  F07F  FFE3   	movff	_width+1,plusw1
 17588  016BA4  D016               	goto	l8721
 17589  016BA6                     l8719:
 17590  016BA6  0EFF               	movlw	255
 17591  016BA8  6E3F               	movwf	(btemp+10)^0,c
 17592  016BAA  0EFF               	movlw	255
 17593  016BAC  6E40               	movwf	(btemp+11)^0,c
 17594  016BAE  0060  F078  F03D   	movff	_width,btemp+8
 17595  016BB4  0060  F07C  F03E   	movff	_width+1,btemp+9
 17596  016BBA  503F               	movf	(btemp+10)^0,w,c
 17597  016BBC  263D               	addwf	(btemp+8)^0,f,c
 17598  016BBE  5040               	movf	(btemp+11)^0,w,c
 17599  016BC0  223E               	addwfc	(btemp+9)^0,f,c
 17600                           
 17601                           ;stkvar	_w @ sp[(-2)+0]
 17602  016BC2  0EFE               	movlw	-2
 17603  016BC4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17604  016BCA  0EFF               	movlw	-1
 17605  016BCC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17606  016BD2                     l8721:
 17607                           
 17608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17609                           ;stkvar	_c @ sp[(-2)+-3]
 17610  016BD2  0EFB               	movlw	-5
 17611  016BD4  006F FF8C  F1A8    	movff	plusw1,_dbuf
 17612                           
 17613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17614  016BDA  0101               	movlb	1	; () banked
 17615  016BDC  6BA9               	clrf	(_dbuf+1)& (0+255),b
 17616                           
 17617                           ; BSR set to: 1
 17618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17619                           ;stkvar	_w @ sp[(-2)+0]
 17620  016BDE  0EFE               	movlw	-2
 17621  016BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 17622  016BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17623  016BEC  0EA8               	movlw	low _dbuf
 17624  016BEE  6EE6               	movwf	postinc1,c
 17625  016BF0  0E01               	movlw	high _dbuf
 17626  016BF2  6EE6               	movwf	postinc1,c
 17627                           
 17628                           ;stkvar	_fp @ sp[(-6)+-2]
 17629  016BF4  0EF8               	movlw	-8
 17630  016BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 17631  016BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 17632  016C02  ECB6  F0AF         	call	_pad	;wreg free
 17633                           
 17634                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17635  016C06  0EFB               	movlw	251
 17636  016C08  26E1               	addwf	fsr1l,f,c
 17637  016C0A  0EFF               	movlw	255
 17638  016C0C  22E2               	addwfc	fsr1h,f,c
 17639  016C0E  0012               	return		;funcret
 17640  016C10                     __end_of_ctoa:
 17641                           	opt callstack 0
 17642                           
 17643 ;; *************** function _pad *****************
 17644 ;; Defined at:
 17645 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17648 ;;		 -> f(6), NULL(0), 
 17649 ;;  buf             2  [STACK] PTR unsigned char 
 17650 ;;		 -> dbuf(80), 
 17651 ;;  p               2  [STACK] int 
 17652 ;; Auto vars:     Size  Location     Type
 17653 ;;  w               2  [STACK] int 
 17654 ;;  i               2  [STACK] int 
 17655 ;; Return value:  Size  Location     Type
 17656 ;;                  2  [STACK] int 
 17657 ;; Registers used:
 17658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17659 ;; Tracked objects:
 17660 ;;		On entry : 0/1
 17661 ;;		On exit  : 0/0
 17662 ;;		Unchanged: 0/0
 17663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17668 ;;Total ram usage:        0 bytes
 17669 ;; Hardware stack levels used:    1
 17670 ;; Hardware stack levels required when called:   10
 17671 ;; This function calls:
 17672 ;;		_fputc
 17673 ;;		_fputs
 17674 ;;		_strlen
 17675 ;; This function is called by:
 17676 ;;		_ctoa
 17677 ;;		_dtoa
 17678 ;;		_efgtoa
 17679 ;;		_xtoa
 17680 ;; This function uses a reentrant model
 17681 ;;
 17682                           
 17683                           	psect	text57
 17684  015F6C                     __ptext57:
 17685                           	opt callstack 0
 17686  015F6C                     _pad:
 17687                           	opt callstack 0
 17688                           
 17689                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17690  015F6C  52E6               	movf	postinc1,f,c
 17691  015F6E  52E6               	movf	postinc1,f,c
 17692  015F70  52E6               	movf	postinc1,f,c
 17693  015F72  52E6               	movf	postinc1,f,c
 17694                           
 17695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17696                           
 17697                           ;incstack = 0
 17698  015F74  A022               	btfss	_flags^0,0,c
 17699  015F76  D010               	goto	l8693
 17700                           
 17701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17702                           ;stkvar	_fp @ sp[(-4)+-2]
 17703  015F78  0EFA               	movlw	-6
 17704  015F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 17705  015F80  006F FF8F FFE6     	movff	plusw1,postinc1
 17706                           
 17707                           ;stkvar	_buf @ sp[(-6)+-4]
 17708  015F86  0EF6               	movlw	-10
 17709  015F88  006F FF8F FFE6     	movff	plusw1,postinc1
 17710  015F8E  006F FF8F FFE6     	movff	plusw1,postinc1
 17711  015F94  EC9C  F0B4         	call	_fputs	;wreg free
 17712  015F98                     l8693:
 17713                           
 17714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17715                           ;stkvar	_p @ sp[(-4)+-6]
 17716  015F98  0EF7               	movlw	-9
 17717  015F9A  BEE3               	btfsc	plusw1,7,c
 17718  015F9C  D011               	goto	l8697
 17719                           
 17720                           ;stkvar	_p @ sp[(-4)+-6]
 17721                           ;stkvar	_w @ sp[(-4)+0]
 17722  015F9E  0EF6               	movlw	-10
 17723  015FA0  006F FF8C  F035    	movff	plusw1,btemp
 17724  015FA6  0EFC               	movlw	-4
 17725  015FA8  0060  F0D7  FFE3   	movff	btemp,plusw1
 17726  015FAE  0EF7               	movlw	-9
 17727  015FB0  006F FF8C  F035    	movff	plusw1,btemp
 17728  015FB6  0EFD               	movlw	-3
 17729  015FB8  0060  F0D7  FFE3   	movff	btemp,plusw1
 17730  015FBE  D004               	goto	l1703
 17731  015FC0                     l8697:
 17732                           
 17733                           ;stkvar	_w @ sp[(-4)+0]
 17734  015FC0  0EFC               	movlw	-4
 17735  015FC2  6AE3               	clrf	plusw1,c
 17736  015FC4  0EFD               	movlw	-3
 17737  015FC6  6AE3               	clrf	plusw1,c
 17738  015FC8                     l1703:
 17739                           
 17740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17741                           ;stkvar	_i @ sp[(-4)+2]
 17742  015FC8  0EFE               	movlw	-2
 17743  015FCA  6AE3               	clrf	plusw1,c
 17744  015FCC  0EFF               	movlw	-1
 17745  015FCE  6AE3               	clrf	plusw1,c
 17746                           
 17747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17748  015FD0  D01E               	goto	l8703
 17749  015FD2                     l8699:
 17750                           
 17751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17752                           ;stkvar	_fp @ sp[(-4)+-2]
 17753  015FD2  0EFA               	movlw	-6
 17754  015FD4  006F FF8F FFE6     	movff	plusw1,postinc1
 17755  015FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 17756  015FE0  0E20               	movlw	32
 17757  015FE2  6EE6               	movwf	postinc1,c
 17758  015FE4  0E00               	movlw	0
 17759  015FE6  6EE6               	movwf	postinc1,c
 17760  015FE8  EC98  F0AE         	call	_fputc	;wreg free
 17761                           
 17762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17763                           ;stkvar	_i @ sp[(-4)+2]
 17764  015FEC  0EFE               	movlw	-2
 17765  015FEE  50E3               	movf	plusw1,w,c
 17766  015FF0  0F01               	addlw	1
 17767  015FF2  6E35               	movwf	btemp^0,c
 17768  015FF4  0EFE               	movlw	-2
 17769  015FF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 17770  015FFC  6A35               	clrf	btemp^0,c
 17771  015FFE  0EFF               	movlw	-1
 17772  016000  50E3               	movf	plusw1,w,c
 17773  016002  2035               	addwfc	btemp^0,w,c
 17774  016004  6E35               	movwf	btemp^0,c
 17775  016006  0EFF               	movlw	-1
 17776  016008  0060  F0D7  FFE3   	movff	btemp,plusw1
 17777  01600E                     l8703:
 17778                           
 17779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17780                           ;stkvar	_w @ sp[(-4)+0]
 17781                           ;stkvar	_i @ sp[(-4)+2]
 17782  01600E  50E1               	movf	fsr1l,w,c
 17783  016010  0FFE               	addlw	-2
 17784  016012  6ED9               	movwf	fsr2l,c
 17785  016014  50E2               	movf	fsr1h,w,c
 17786  016016  6EDA               	movwf	fsr2h,c
 17787  016018  0EFF               	movlw	255
 17788  01601A  22DA               	addwfc	fsr2h,f,c
 17789  01601C  0EFC               	movlw	-4
 17790  01601E  50E3               	movf	plusw1,w,c
 17791  016020  5CDE               	subwf	postinc2,w,c
 17792  016022  50DE               	movf	postinc2,w,c
 17793  016024  0A80               	xorlw	128
 17794  016026  6E35               	movwf	btemp^0,c
 17795  016028  0EFD               	movlw	-3
 17796  01602A  50E3               	movf	plusw1,w,c
 17797  01602C  0A80               	xorlw	128
 17798  01602E  5835               	subwfb	btemp^0,w,c
 17799  016030  A0D8               	btfss	status,0,c
 17800  016032  D7CF               	goto	l8699
 17801                           
 17802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17803  016034  B022               	btfsc	_flags^0,0,c
 17804  016036  D010               	goto	l8707
 17805                           
 17806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17807                           ;stkvar	_fp @ sp[(-4)+-2]
 17808  016038  0EFA               	movlw	-6
 17809  01603A  006F FF8F FFE6     	movff	plusw1,postinc1
 17810  016040  006F FF8F FFE6     	movff	plusw1,postinc1
 17811                           
 17812                           ;stkvar	_buf @ sp[(-6)+-4]
 17813  016046  0EF6               	movlw	-10
 17814  016048  006F FF8F FFE6     	movff	plusw1,postinc1
 17815  01604E  006F FF8F FFE6     	movff	plusw1,postinc1
 17816  016054  EC9C  F0B4         	call	_fputs	;wreg free
 17817  016058                     l8707:
 17818                           
 17819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17820                           ;stkvar	_w @ sp[(-4)+0]
 17821                           ;stkvar	_buf @ sp[(-4)+-4]
 17822  016058  0EF8               	movlw	-8
 17823  01605A  006F FF8F FFE6     	movff	plusw1,postinc1
 17824  016060  006F FF8F FFE6     	movff	plusw1,postinc1
 17825  016066  EC4B  F0B4         	call	_strlen	;wreg free
 17826  01606A  0EFC               	movlw	-4
 17827  01606C  50E3               	movf	plusw1,w,c
 17828  01606E  2635               	addwf	btemp^0,f,c
 17829  016070  0EFD               	movlw	-3
 17830  016072  50E3               	movf	plusw1,w,c
 17831  016074  2236               	addwfc	(btemp+1)^0,f,c
 17832                           
 17833                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17834  016076  0EF6               	movlw	246
 17835  016078  26E1               	addwf	fsr1l,f,c
 17836  01607A  0EFF               	movlw	255
 17837  01607C  22E2               	addwfc	fsr1h,f,c
 17838  01607E  0012               	return		;funcret
 17839  016080                     __end_of_pad:
 17840                           	opt callstack 0
 17841                           
 17842 ;; *************** function _strlen *****************
 17843 ;; Defined at:
 17844 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17845 ;; Parameters:    Size  Location     Type
 17846 ;;  s               2  [STACK] PTR const unsigned char 
 17847 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17848 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 17849 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 17850 ;; Auto vars:     Size  Location     Type
 17851 ;;  a               2  [STACK] PTR const unsigned char 
 17852 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17853 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 17854 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 17855 ;; Return value:  Size  Location     Type
 17856 ;;                  2  [STACK] unsigned int 
 17857 ;; Registers used:
 17858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17859 ;; Tracked objects:
 17860 ;;		On entry : 0/0
 17861 ;;		On exit  : 0/0
 17862 ;;		Unchanged: 0/0
 17863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17868 ;;Total ram usage:        0 bytes
 17869 ;; Hardware stack levels used:    1
 17870 ;; Hardware stack levels required when called:    6
 17871 ;; This function calls:
 17872 ;;		Nothing
 17873 ;; This function is called by:
 17874 ;;		_eaDogM_WriteString
 17875 ;;		_pad
 17876 ;;		_stoa
 17877 ;; This function uses a reentrant model
 17878 ;;
 17879                           
 17880                           	psect	text58
 17881  016896                     __ptext58:
 17882                           	opt callstack 0
 17883  016896                     _strlen:
 17884                           	opt callstack 0
 17885                           
 17886                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17887  016896  52E6               	movf	postinc1,f,c
 17888  016898  52E6               	movf	postinc1,f,c
 17889                           
 17890                           ;stkvar	_s @ sp[(-2)+-2]
 17891                           
 17892                           ;incstack = 0
 17893  01689A  0EFC               	movlw	-4
 17894  01689C  006F FF8C  F03F    	movff	plusw1,btemp+10
 17895  0168A2  0EFD               	movlw	-3
 17896  0168A4  006F FF8C  F040    	movff	plusw1,btemp+11
 17897                           
 17898                           ;stkvar	_a @ sp[(-2)+0]
 17899  0168AA  0EFF               	movlw	-1
 17900  0168AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 17901  0168B2  0EFE               	movlw	-2
 17902  0168B4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17903  0168BA  D011               	goto	l5785
 17904  0168BC                     l5783:
 17905                           
 17906                           ;stkvar	_s @ sp[(-2)+-2]
 17907  0168BC  0EFC               	movlw	-4
 17908  0168BE  50E3               	movf	plusw1,w,c
 17909  0168C0  0F01               	addlw	1
 17910  0168C2  6E35               	movwf	btemp^0,c
 17911  0168C4  0EFC               	movlw	-4
 17912  0168C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 17913  0168CC  6A35               	clrf	btemp^0,c
 17914  0168CE  0EFD               	movlw	-3
 17915  0168D0  50E3               	movf	plusw1,w,c
 17916  0168D2  2035               	addwfc	btemp^0,w,c
 17917  0168D4  6E35               	movwf	btemp^0,c
 17918  0168D6  0EFD               	movlw	-3
 17919  0168D8  0060  F0D7  FFE3   	movff	btemp,plusw1
 17920  0168DE                     l5785:
 17921                           
 17922                           ;stkvar	_s @ sp[(-2)+-2]
 17923  0168DE  0EFC               	movlw	-4
 17924  0168E0  006F FF8F FFF6     	movff	plusw1,tblptrl
 17925  0168E6  0EFD               	movlw	-3
 17926  0168E8  006F FF8F FFF7     	movff	plusw1,tblptrh
 17927  0168EE  0E00               	movlw	low (__mediumconst shr (0+16))
 17928  0168F0  6EF8               	movwf	tblptru,c
 17929  0168F2  0E1F               	movlw	(high __ramtop+-1)
 17930  0168F4  64F7               	cpfsgt	tblptrh,c
 17931  0168F6  D003               	bra	u4207
 17932  0168F8  0008               	tblrd		*
 17933  0168FA  50F5               	movf	tablat,w,c
 17934  0168FC  D007               	bra	u4200
 17935  0168FE                     u4207:
 17936  0168FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17937  016904  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17938  01690A  50EF               	movf	indf0,w,c
 17939  01690C                     u4200:
 17940  01690C  0900               	iorlw	0
 17941  01690E  A4D8               	btfss	status,2,c
 17942  016910  D7D5               	goto	l5783
 17943                           
 17944                           ;stkvar	_a @ sp[(-2)+0]
 17945                           ;stkvar	_s @ sp[(-2)+-2]
 17946  016912  0EFC               	movlw	-4
 17947  016914  006F FF8C  F035    	movff	plusw1,btemp
 17948  01691A  0EFD               	movlw	-3
 17949  01691C  006F FF8C  F036    	movff	plusw1,btemp+1
 17950  016922  0EFE               	movlw	-2
 17951  016924  50E3               	movf	plusw1,w,c
 17952  016926  5E35               	subwf	btemp^0,f,c
 17953  016928  0EFF               	movlw	-1
 17954  01692A  50E3               	movf	plusw1,w,c
 17955  01692C  5A36               	subwfb	(btemp+1)^0,f,c
 17956                           
 17957                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17958  01692E  52E5               	movf	postdec1,f,c
 17959  016930  52E5               	movf	postdec1,f,c
 17960  016932  52E5               	movf	postdec1,f,c
 17961  016934  52E5               	movf	postdec1,f,c
 17962  016936  0012               	return		;funcret
 17963  016938                     __end_of_strlen:
 17964                           	opt callstack 0
 17965                           
 17966 ;; *************** function _fputs *****************
 17967 ;; Defined at:
 17968 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 17969 ;; Parameters:    Size  Location     Type
 17970 ;;  s               2  [STACK] PTR const unsigned char 
 17971 ;;		 -> dbuf(80), 
 17972 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17973 ;;		 -> f(6), NULL(0), 
 17974 ;; Auto vars:     Size  Location     Type
 17975 ;;  i               2  [STACK] int 
 17976 ;;  c               1  [STACK] unsigned char 
 17977 ;; Return value:  Size  Location     Type
 17978 ;;                  2  [STACK] int 
 17979 ;; Registers used:
 17980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17981 ;; Tracked objects:
 17982 ;;		On entry : 0/1
 17983 ;;		On exit  : 0/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17990 ;;Total ram usage:        0 bytes
 17991 ;; Hardware stack levels used:    1
 17992 ;; Hardware stack levels required when called:    9
 17993 ;; This function calls:
 17994 ;;		_fputc
 17995 ;; This function is called by:
 17996 ;;		_pad
 17997 ;; This function uses a reentrant model
 17998 ;;
 17999                           
 18000                           	psect	text59
 18001  016938                     __ptext59:
 18002                           	opt callstack 0
 18003  016938                     _fputs:
 18004                           	opt callstack 0
 18005                           
 18006                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18007  016938  52E6               	movf	postinc1,f,c
 18008  01693A  52E6               	movf	postinc1,f,c
 18009  01693C  52E6               	movf	postinc1,f,c
 18010                           
 18011                           ;stkvar	_i @ sp[(-3)+0]
 18012                           
 18013                           ;incstack = 0
 18014  01693E  0EFD               	movlw	-3
 18015  016940  6AE3               	clrf	plusw1,c
 18016  016942  0EFE               	movlw	-2
 18017  016944  6AE3               	clrf	plusw1,c
 18018  016946  D01F               	goto	l8687
 18019  016948                     l8683:
 18020                           
 18021                           ;stkvar	_fp @ sp[(-3)+-4]
 18022  016948  0EF9               	movlw	-7
 18023  01694A  006F FF8F FFE6     	movff	plusw1,postinc1
 18024  016950  006F FF8F FFE6     	movff	plusw1,postinc1
 18025                           
 18026                           ;stkvar	_c @ sp[(-5)+2]
 18027  016956  0EFD               	movlw	-3
 18028  016958  50E3               	movf	plusw1,w,c
 18029  01695A  6EE6               	movwf	postinc1,c
 18030  01695C  0E00               	movlw	0
 18031  01695E  6EE6               	movwf	postinc1,c
 18032  016960  EC98  F0AE         	call	_fputc	;wreg free
 18033                           
 18034                           ;stkvar	_i @ sp[(-3)+0]
 18035  016964  0EFD               	movlw	-3
 18036  016966  50E3               	movf	plusw1,w,c
 18037  016968  0F01               	addlw	1
 18038  01696A  6E35               	movwf	btemp^0,c
 18039  01696C  0EFD               	movlw	-3
 18040  01696E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18041  016974  6A35               	clrf	btemp^0,c
 18042  016976  0EFE               	movlw	-2
 18043  016978  50E3               	movf	plusw1,w,c
 18044  01697A  2035               	addwfc	btemp^0,w,c
 18045  01697C  6E35               	movwf	btemp^0,c
 18046  01697E  0EFE               	movlw	-2
 18047  016980  0060  F0D7  FFE3   	movff	btemp,plusw1
 18048  016986                     l8687:
 18049                           
 18050                           ;stkvar	_i @ sp[(-3)+0]
 18051  016986  0EFD               	movlw	-3
 18052  016988  006F FF8C  F03F    	movff	plusw1,btemp+10
 18053  01698E  0EFE               	movlw	-2
 18054  016990  006F FF8C  F040    	movff	plusw1,btemp+11
 18055                           
 18056                           ;stkvar	_s @ sp[(-3)+-2]
 18057  016996  0EFB               	movlw	-5
 18058  016998  006F FF8C  F03D    	movff	plusw1,btemp+8
 18059  01699E  0EFC               	movlw	-4
 18060  0169A0  006F FF8C  F03E    	movff	plusw1,btemp+9
 18061  0169A6  503F               	movf	(btemp+10)^0,w,c
 18062  0169A8  243D               	addwf	(btemp+8)^0,w,c
 18063  0169AA  6ED9               	movwf	fsr2l,c
 18064  0169AC  5040               	movf	(btemp+11)^0,w,c
 18065  0169AE  203E               	addwfc	(btemp+9)^0,w,c
 18066  0169B0  6EDA               	movwf	fsr2h,c
 18067  0169B2  50DF               	movf	indf2,w,c
 18068  0169B4  6E40               	movwf	(btemp+11)^0,c
 18069                           
 18070                           ;stkvar	_c @ sp[(-3)+2]
 18071  0169B6  0EFF               	movlw	-1
 18072  0169B8  0060  F103  FFE3   	movff	btemp+11,plusw1
 18073  0169BE  0EFF               	movlw	-1
 18074  0169C0  50E3               	movf	plusw1,w,c
 18075  0169C2  A4D8               	btfss	status,2,c
 18076  0169C4  D7C1               	goto	l8683
 18077                           
 18078                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18079  0169C6  0EF9               	movlw	249
 18080  0169C8  26E1               	addwf	fsr1l,f,c
 18081  0169CA  0EFF               	movlw	255
 18082  0169CC  22E2               	addwfc	fsr1h,f,c
 18083  0169CE  0012               	return		;funcret
 18084  0169D0                     __end_of_fputs:
 18085                           	opt callstack 0
 18086                           
 18087 ;; *************** function _fputc *****************
 18088 ;; Defined at:
 18089 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18090 ;; Parameters:    Size  Location     Type
 18091 ;;  c               2  [STACK] int 
 18092 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18093 ;;		 -> f(6), NULL(0), 
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;		None
 18096 ;; Return value:  Size  Location     Type
 18097 ;;                  2  [STACK] int 
 18098 ;; Registers used:
 18099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18100 ;; Tracked objects:
 18101 ;;		On entry : 0/4
 18102 ;;		On exit  : 0/0
 18103 ;;		Unchanged: 0/0
 18104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18109 ;;Total ram usage:        0 bytes
 18110 ;; Hardware stack levels used:    1
 18111 ;; Hardware stack levels required when called:    8
 18112 ;; This function calls:
 18113 ;;		_putch
 18114 ;; This function is called by:
 18115 ;;		_pad
 18116 ;;		_stoa
 18117 ;;		_vfpfcnvrt
 18118 ;;		_fputs
 18119 ;; This function uses a reentrant model
 18120 ;;
 18121                           
 18122                           	psect	text60
 18123  015D30                     __ptext60:
 18124                           	opt callstack 0
 18125  015D30                     _fputc:
 18126                           	opt callstack 13
 18127                           
 18128                           ;stkvar	_fp @ sp[(0)+-4]
 18129                           
 18130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18131                           ;incstack = 0
 18132  015D30  0EFC               	movlw	-4
 18133  015D32  006F FF8C  F035    	movff	plusw1,btemp
 18134  015D38  0EFD               	movlw	-3
 18135  015D3A  50E3               	movf	plusw1,w,c
 18136  015D3C  1035               	iorwf	btemp^0,w,c
 18137  015D3E  B4D8               	btfsc	status,2,c
 18138  015D40  D009               	goto	u8240
 18139                           
 18140                           ;stkvar	_fp @ sp[(0)+-4]
 18141  015D42  0EFC               	movlw	-4
 18142  015D44  006F FF8C  F035    	movff	plusw1,btemp
 18143  015D4A  0EFD               	movlw	-3
 18144  015D4C  50E3               	movf	plusw1,w,c
 18145  015D4E  1035               	iorwf	btemp^0,w,c
 18146  015D50  A4D8               	btfss	status,2,c
 18147  015D52  D006               	goto	l8671
 18148  015D54                     u8240:
 18149                           
 18150                           ;stkvar	_c @ sp[(0)+-2]
 18151  015D54  0EFE               	movlw	-2
 18152  015D56  50E3               	movf	plusw1,w,c
 18153  015D58  6EE6               	movwf	postinc1,c
 18154  015D5A  ECB2  F0BD         	call	_putch	;wreg free
 18155  015D5E  D075               	goto	l2718
 18156  015D60                     l8671:
 18157                           
 18158                           ;stkvar	_fp @ sp[(0)+-4]
 18159  015D60  0EFC               	movlw	-4
 18160  015D62  006F FF8C  F03F    	movff	plusw1,btemp+10
 18161  015D68  0EFD               	movlw	-3
 18162  015D6A  006F FF8C  F040    	movff	plusw1,btemp+11
 18163  015D70  0E04               	movlw	4
 18164  015D72  243F               	addwf	(btemp+10)^0,w,c
 18165  015D74  6ED9               	movwf	fsr2l,c
 18166  015D76  0E00               	movlw	0
 18167  015D78  2040               	addwfc	(btemp+11)^0,w,c
 18168  015D7A  6EDA               	movwf	fsr2h,c
 18169  015D7C  50DE               	movf	postinc2,w,c
 18170  015D7E  10DE               	iorwf	postinc2,w,c
 18171  015D80  B4D8               	btfsc	status,2,c
 18172  015D82  D026               	goto	u8260
 18173                           
 18174                           ;stkvar	_fp @ sp[(0)+-4]
 18175  015D84  0EFC               	movlw	-4
 18176  015D86  006F FF8C  F03F    	movff	plusw1,btemp+10
 18177  015D8C  0EFD               	movlw	-3
 18178  015D8E  006F FF8C  F040    	movff	plusw1,btemp+11
 18179  015D94  0E04               	movlw	4
 18180  015D96  243F               	addwf	(btemp+10)^0,w,c
 18181  015D98  6ED9               	movwf	fsr2l,c
 18182  015D9A  0E00               	movlw	0
 18183  015D9C  2040               	addwfc	(btemp+11)^0,w,c
 18184  015D9E  6EDA               	movwf	fsr2h,c
 18185                           
 18186                           ;stkvar	_fp @ sp[(0)+-4]
 18187  015DA0  0EFC               	movlw	-4
 18188  015DA2  006F FF8C  F03F    	movff	plusw1,btemp+10
 18189  015DA8  0EFD               	movlw	-3
 18190  015DAA  006F FF8C  F040    	movff	plusw1,btemp+11
 18191  015DB0  0E02               	movlw	2
 18192  015DB2  243F               	addwf	(btemp+10)^0,w,c
 18193  015DB4  6EE9               	movwf	fsr0l,c
 18194  015DB6  0E00               	movlw	0
 18195  015DB8  2040               	addwfc	(btemp+11)^0,w,c
 18196  015DBA  6EEA               	movwf	fsr0h,c
 18197  015DBC  50DE               	movf	postinc2,w,c
 18198  015DBE  5CEE               	subwf	postinc0,w,c
 18199  015DC0  50EE               	movf	postinc0,w,c
 18200  015DC2  0A80               	xorlw	128
 18201  015DC4  6E35               	movwf	btemp^0,c
 18202  015DC6  50DE               	movf	postinc2,w,c
 18203  015DC8  0A80               	xorlw	128
 18204  015DCA  5835               	subwfb	btemp^0,w,c
 18205  015DCC  B0D8               	btfsc	status,0,c
 18206  015DCE  D03D               	goto	l2718
 18207  015DD0                     u8260:
 18208                           
 18209                           ;stkvar	_c @ sp[(0)+-2]
 18210                           ;stkvar	_fp @ sp[(0)+-4]
 18211  015DD0  0EFC               	movlw	-4
 18212  015DD2  006F FF8C  F03F    	movff	plusw1,btemp+10
 18213  015DD8  0EFD               	movlw	-3
 18214  015DDA  006F FF8C  F040    	movff	plusw1,btemp+11
 18215  015DE0  0E02               	movlw	2
 18216  015DE2  243F               	addwf	(btemp+10)^0,w,c
 18217  015DE4  6ED9               	movwf	fsr2l,c
 18218  015DE6  0E00               	movlw	0
 18219  015DE8  2040               	addwfc	(btemp+11)^0,w,c
 18220  015DEA  6EDA               	movwf	fsr2h,c
 18221  015DEC  006F FF78  F03F    	movff	postinc2,btemp+10
 18222  015DF2  006F FF74  F040    	movff	postdec2,btemp+11
 18223                           
 18224                           ;stkvar	_fp @ sp[(0)+-4]
 18225  015DF8  0EFC               	movlw	-4
 18226  015DFA  006F FF8F FFD9     	movff	plusw1,fsr2l
 18227  015E00  0EFD               	movlw	-3
 18228  015E02  006F FF8F FFDA     	movff	plusw1,fsr2h
 18229  015E08  006F FF78  F03D    	movff	postinc2,btemp+8
 18230  015E0E  006F FF74  F03E    	movff	postdec2,btemp+9
 18231  015E14  503F               	movf	(btemp+10)^0,w,c
 18232  015E16  243D               	addwf	(btemp+8)^0,w,c
 18233  015E18  6ED9               	movwf	fsr2l,c
 18234  015E1A  5040               	movf	(btemp+11)^0,w,c
 18235  015E1C  203E               	addwfc	(btemp+9)^0,w,c
 18236  015E1E  6EDA               	movwf	fsr2h,c
 18237  015E20  0EFE               	movlw	-2
 18238  015E22  006F FF8F FFDF     	movff	plusw1,indf2
 18239                           
 18240                           ;stkvar	_fp @ sp[(0)+-4]
 18241  015E28  0EFC               	movlw	-4
 18242  015E2A  006F FF8C  F03F    	movff	plusw1,btemp+10
 18243  015E30  0EFD               	movlw	-3
 18244  015E32  006F FF8C  F040    	movff	plusw1,btemp+11
 18245  015E38  0E02               	movlw	2
 18246  015E3A  243F               	addwf	(btemp+10)^0,w,c
 18247  015E3C  6ED9               	movwf	fsr2l,c
 18248  015E3E  0E00               	movlw	0
 18249  015E40  2040               	addwfc	(btemp+11)^0,w,c
 18250  015E42  6EDA               	movwf	fsr2h,c
 18251  015E44  2ADE               	incf	postinc2,f,c
 18252  015E46  0E00               	movlw	0
 18253  015E48  22DD               	addwfc	postdec2,f,c
 18254  015E4A                     l2718:
 18255                           
 18256                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18257  015E4A  52E5               	movf	postdec1,f,c
 18258  015E4C  52E5               	movf	postdec1,f,c
 18259  015E4E  52E5               	movf	postdec1,f,c
 18260  015E50  52E5               	movf	postdec1,f,c
 18261  015E52  0012               	return		;funcret
 18262  015E54                     __end_of_fputc:
 18263                           	opt callstack 0
 18264                           
 18265 ;; *************** function _putch *****************
 18266 ;; Defined at:
 18267 ;;		line 155 in file "eadog.c"
 18268 ;; Parameters:    Size  Location     Type
 18269 ;;  c               1  [STACK] unsigned char 
 18270 ;; Auto vars:     Size  Location     Type
 18271 ;;		None
 18272 ;; Return value:  Size  Location     Type
 18273 ;;                  1  [STACK] void 
 18274 ;; Registers used:
 18275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18276 ;; Tracked objects:
 18277 ;;		On entry : 0/4
 18278 ;;		On exit  : 0/0
 18279 ;;		Unchanged: 0/0
 18280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18285 ;;Total ram usage:        0 bytes
 18286 ;; Hardware stack levels used:    1
 18287 ;; Hardware stack levels required when called:    7
 18288 ;; This function calls:
 18289 ;;		_ringBufS_put_dma
 18290 ;; This function is called by:
 18291 ;;		_fputc
 18292 ;; This function uses a reentrant model
 18293 ;;
 18294                           
 18295                           	psect	text61
 18296  017B64                     __ptext61:
 18297                           	opt callstack 0
 18298  017B64                     _putch:
 18299                           	opt callstack 13
 18300                           
 18301                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18302                           ;stkvar	_c @ sp[(0)+-1]
 18303                           
 18304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18305                           ;incstack = 0
 18306  017B64  0EFF               	movlw	-1
 18307  017B66  50E3               	movf	plusw1,w,c
 18308  017B68  6EE6               	movwf	postinc1,c
 18309  017B6A  0060  F283  FFE6   	movff	_spi_link+6,postinc1
 18310  017B70  0060  F287  FFE6   	movff	_spi_link+7,postinc1
 18311  017B76  EC4F  F0B3         	call	_ringBufS_put_dma	;wreg free
 18312                           
 18313                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18314  017B7A  52E5               	movf	postdec1,f,c
 18315  017B7C  0012               	return		;funcret
 18316  017B7E                     __end_of_putch:
 18317                           	opt callstack 0
 18318                           
 18319 ;; *************** function _ringBufS_put_dma *****************
 18320 ;; Defined at:
 18321 ;;		line 67 in file "ringbufs.c"
 18322 ;; Parameters:    Size  Location     Type
 18323 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18324 ;;		 -> ring_buf1(67), 
 18325 ;;  c               1  [STACK] const unsigned char 
 18326 ;; Auto vars:     Size  Location     Type
 18327 ;;		None
 18328 ;; Return value:  Size  Location     Type
 18329 ;;                  1  [STACK] void 
 18330 ;; Registers used:
 18331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18332 ;; Tracked objects:
 18333 ;;		On entry : 0/4
 18334 ;;		On exit  : 0/0
 18335 ;;		Unchanged: 0/0
 18336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18341 ;;Total ram usage:        0 bytes
 18342 ;; Hardware stack levels used:    1
 18343 ;; Hardware stack levels required when called:    6
 18344 ;; This function calls:
 18345 ;;		Nothing
 18346 ;; This function is called by:
 18347 ;;		_putch
 18348 ;; This function uses a reentrant model
 18349 ;;
 18350                           
 18351                           	psect	text62
 18352  01669E                     __ptext62:
 18353                           	opt callstack 0
 18354  01669E                     _ringBufS_put_dma:
 18355                           	opt callstack 13
 18356                           
 18357                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18358                           ;stkvar	__this @ sp[(0)+-2]
 18359                           
 18360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18361                           ;incstack = 0
 18362  01669E  0EFE               	movlw	-2
 18363  0166A0  006F FF8C  F03F    	movff	plusw1,btemp+10
 18364  0166A6  0EFF               	movlw	-1
 18365  0166A8  006F FF8C  F040    	movff	plusw1,btemp+11
 18366  0166AE  0E42               	movlw	66
 18367  0166B0  243F               	addwf	(btemp+10)^0,w,c
 18368  0166B2  6ED9               	movwf	fsr2l,c
 18369  0166B4  0E00               	movlw	0
 18370  0166B6  2040               	addwfc	(btemp+11)^0,w,c
 18371  0166B8  6EDA               	movwf	fsr2h,c
 18372  0166BA  0E40               	movlw	64
 18373  0166BC  60DF               	cpfslt	indf2,c
 18374  0166BE  D040               	goto	l1460
 18375                           
 18376                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18377                           ;stkvar	_c @ sp[(0)+-3]
 18378                           ;stkvar	__this @ sp[(0)+-2]
 18379  0166C0  0EFE               	movlw	-2
 18380  0166C2  006F FF8C  F03F    	movff	plusw1,btemp+10
 18381  0166C8  0EFF               	movlw	-1
 18382  0166CA  006F FF8C  F040    	movff	plusw1,btemp+11
 18383  0166D0  0E40               	movlw	64
 18384  0166D2  243F               	addwf	(btemp+10)^0,w,c
 18385  0166D4  6ED9               	movwf	fsr2l,c
 18386  0166D6  0E00               	movlw	0
 18387  0166D8  2040               	addwfc	(btemp+11)^0,w,c
 18388  0166DA  6EDA               	movwf	fsr2h,c
 18389  0166DC  50DF               	movf	indf2,w,c
 18390  0166DE  6E40               	movwf	(btemp+11)^0,c
 18391                           
 18392                           ;stkvar	__this @ sp[(0)+-2]
 18393  0166E0  0EFE               	movlw	-2
 18394  0166E2  006F FF8C  F03D    	movff	plusw1,btemp+8
 18395  0166E8  0EFF               	movlw	-1
 18396  0166EA  006F FF8C  F03E    	movff	plusw1,btemp+9
 18397  0166F0  5040               	movf	(btemp+11)^0,w,c
 18398  0166F2  243D               	addwf	(btemp+8)^0,w,c
 18399  0166F4  6ED9               	movwf	fsr2l,c
 18400  0166F6  0E00               	movlw	0
 18401  0166F8  203E               	addwfc	(btemp+9)^0,w,c
 18402  0166FA  6EDA               	movwf	fsr2h,c
 18403  0166FC  0EFD               	movlw	-3
 18404  0166FE  006F FF8F FFDF     	movff	plusw1,indf2
 18405                           
 18406                           ;ringbufs.c: 71:   ++_this->head;
 18407                           ;stkvar	__this @ sp[(0)+-2]
 18408  016704  0EFE               	movlw	-2
 18409  016706  006F FF8C  F03F    	movff	plusw1,btemp+10
 18410  01670C  0EFF               	movlw	-1
 18411  01670E  006F FF8C  F040    	movff	plusw1,btemp+11
 18412  016714  0E40               	movlw	64
 18413  016716  243F               	addwf	(btemp+10)^0,w,c
 18414  016718  6ED9               	movwf	fsr2l,c
 18415  01671A  0E00               	movlw	0
 18416  01671C  2040               	addwfc	(btemp+11)^0,w,c
 18417  01671E  6EDA               	movwf	fsr2h,c
 18418  016720  2ADF               	incf	indf2,f,c
 18419                           
 18420                           ;ringbufs.c: 72:   ++_this->count;
 18421                           ;stkvar	__this @ sp[(0)+-2]
 18422  016722  0EFE               	movlw	-2
 18423  016724  006F FF8C  F03F    	movff	plusw1,btemp+10
 18424  01672A  0EFF               	movlw	-1
 18425  01672C  006F FF8C  F040    	movff	plusw1,btemp+11
 18426  016732  0E42               	movlw	66
 18427  016734  243F               	addwf	(btemp+10)^0,w,c
 18428  016736  6ED9               	movwf	fsr2l,c
 18429  016738  0E00               	movlw	0
 18430  01673A  2040               	addwfc	(btemp+11)^0,w,c
 18431  01673C  6EDA               	movwf	fsr2h,c
 18432  01673E  2ADF               	incf	indf2,f,c
 18433  016740                     l1460:
 18434                           
 18435                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18436  016740  52E5               	movf	postdec1,f,c
 18437  016742  52E5               	movf	postdec1,f,c
 18438  016744  52E5               	movf	postdec1,f,c
 18439  016746  0012               	return		;funcret
 18440  016748                     __end_of_ringBufS_put_dma:
 18441                           	opt callstack 0
 18442                           
 18443 ;; *************** function _atoi *****************
 18444 ;; Defined at:
 18445 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;  s               2  [STACK] PTR const unsigned char 
 18448 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 18449 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 18450 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 18451 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 18452 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 18453 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 18454 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;  n               2  [STACK] int 
 18457 ;;  neg             2  [STACK] int 
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  2  [STACK] int 
 18460 ;; Registers used:
 18461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/4
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18471 ;;Total ram usage:        0 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:    7
 18474 ;; This function calls:
 18475 ;;		_isdigit
 18476 ;;		_isspace
 18477 ;; This function is called by:
 18478 ;;		_vfpfcnvrt
 18479 ;; This function uses a reentrant model
 18480 ;;
 18481                           
 18482                           	psect	text63
 18483  014BB8                     __ptext63:
 18484                           	opt callstack 0
 18485  014BB8                     _atoi:
 18486                           	opt callstack 0
 18487                           
 18488                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18489  014BB8  0E09               	movlw	9
 18490  014BBA  26E1               	addwf	fsr1l,f,c
 18491  014BBC  0E00               	movlw	0
 18492  014BBE  22E2               	addwfc	fsr1h,f,c
 18493                           
 18494                           ;stkvar	_n @ sp[(-9)+5]
 18495                           
 18496                           ;incstack = 0
 18497  014BC0  0EFC               	movlw	-4
 18498  014BC2  6AE3               	clrf	plusw1,c
 18499  014BC4  0EFD               	movlw	-3
 18500  014BC6  6AE3               	clrf	plusw1,c
 18501                           
 18502                           ;stkvar	_neg @ sp[(-9)+7]
 18503  014BC8  0EFE               	movlw	-2
 18504  014BCA  6AE3               	clrf	plusw1,c
 18505  014BCC  0EFF               	movlw	-1
 18506  014BCE  6AE3               	clrf	plusw1,c
 18507  014BD0  D011               	goto	l7257
 18508  014BD2                     l7255:
 18509                           
 18510                           ;stkvar	_s @ sp[(-9)+-2]
 18511  014BD2  0EF5               	movlw	-11
 18512  014BD4  50E3               	movf	plusw1,w,c
 18513  014BD6  0F01               	addlw	1
 18514  014BD8  6E35               	movwf	btemp^0,c
 18515  014BDA  0EF5               	movlw	-11
 18516  014BDC  0060  F0D7  FFE3   	movff	btemp,plusw1
 18517  014BE2  6A35               	clrf	btemp^0,c
 18518  014BE4  0EF6               	movlw	-10
 18519  014BE6  50E3               	movf	plusw1,w,c
 18520  014BE8  2035               	addwfc	btemp^0,w,c
 18521  014BEA  6E35               	movwf	btemp^0,c
 18522  014BEC  0EF6               	movlw	-10
 18523  014BEE  0060  F0D7  FFE3   	movff	btemp,plusw1
 18524  014BF4                     l7257:
 18525                           
 18526                           ;stkvar	_atoi$4601 @ sp[(-9)+4]
 18527  014BF4  0EFB               	movlw	-5
 18528  014BF6  6AE3               	clrf	plusw1,c
 18529  014BF8  2AE3               	incf	plusw1,f,c
 18530                           
 18531                           ;stkvar	_s @ sp[(-9)+-2]
 18532  014BFA  50E1               	movf	fsr1l,w,c
 18533  014BFC  0FF5               	addlw	-11
 18534  014BFE  6ED9               	movwf	fsr2l,c
 18535  014C00  50E2               	movf	fsr1h,w,c
 18536  014C02  6EDA               	movwf	fsr2h,c
 18537  014C04  0EFF               	movlw	255
 18538  014C06  22DA               	addwfc	fsr2h,f,c
 18539  014C08  006F FF7B FFF6     	movff	postinc2,tblptrl
 18540  014C0E  006F FF77 FFF7     	movff	postdec2,tblptrh
 18541  014C14                     	if	0	;tblptru may be non-zero
 18542  014C14                     	endif
 18543  014C14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18544  014C14  0E00               	movlw	low (__mediumconst shr (0+16))
 18545  014C16  6EF8               	movwf	tblptru,c
 18546  014C18                     	endif
 18547  014C18  0008               	tblrd		*
 18548  014C1A  50F5               	movf	tablat,w,c
 18549  014C1C  0A20               	xorlw	32
 18550  014C1E  B4D8               	btfsc	status,2,c
 18551  014C20  D023               	goto	l7265
 18552  014C22  0EF7               	movlw	247
 18553  014C24  6E3F               	movwf	(btemp+10)^0,c
 18554  014C26  0EFF               	movlw	255
 18555  014C28  6E40               	movwf	(btemp+11)^0,c
 18556                           
 18557                           ;stkvar	_s @ sp[(-9)+-2]
 18558  014C2A  50E1               	movf	fsr1l,w,c
 18559  014C2C  0FF5               	addlw	-11
 18560  014C2E  6ED9               	movwf	fsr2l,c
 18561  014C30  50E2               	movf	fsr1h,w,c
 18562  014C32  6EDA               	movwf	fsr2h,c
 18563  014C34  0EFF               	movlw	255
 18564  014C36  22DA               	addwfc	fsr2h,f,c
 18565  014C38  006F FF7B FFF6     	movff	postinc2,tblptrl
 18566  014C3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 18567  014C44                     	if	0	;tblptru may be non-zero
 18568  014C44                     	endif
 18569  014C44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18570  014C44  0E00               	movlw	low (__mediumconst shr (0+16))
 18571  014C46  6EF8               	movwf	tblptru,c
 18572  014C48                     	endif
 18573  014C48  0008               	tblrd		*
 18574  014C4A  50F5               	movf	tablat,w,c
 18575  014C4C  6E3D               	movwf	(btemp+8)^0,c
 18576  014C4E  6A3E               	clrf	(btemp+9)^0,c
 18577  014C50  503F               	movf	(btemp+10)^0,w,c
 18578  014C52  263D               	addwf	(btemp+8)^0,f,c
 18579  014C54  5040               	movf	(btemp+11)^0,w,c
 18580  014C56  223E               	addwfc	(btemp+9)^0,f,c
 18581  014C58  503E               	movf	(btemp+9)^0,w,c
 18582  014C5A  E104               	bnz	u7060
 18583  014C5C  0E05               	movlw	5
 18584  014C5E  5C3D               	subwf	(btemp+8)^0,w,c
 18585  014C60  A0D8               	btfss	status,0,c
 18586  014C62  D002               	goto	l7265
 18587  014C64                     u7060:
 18588                           
 18589                           ;stkvar	_atoi$4601 @ sp[(-9)+4]
 18590  014C64  0EFB               	movlw	-5
 18591  014C66  6AE3               	clrf	plusw1,c
 18592  014C68                     l7265:
 18593                           
 18594                           ;stkvar	_atoi$4601 @ sp[(-9)+4]
 18595  014C68  0EFB               	movlw	-5
 18596  014C6A  50E3               	movf	plusw1,w,c
 18597  014C6C  6E3F               	movwf	(btemp+10)^0,c
 18598  014C6E  6A40               	clrf	(btemp+11)^0,c
 18599                           
 18600                           ;stkvar	_atoi$4600 @ sp[(-9)+2]
 18601  014C70  0EF9               	movlw	-7
 18602  014C72  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18603  014C78  0EFA               	movlw	-6
 18604  014C7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 18605                           
 18606                           ;stkvar	_atoi$4600 @ sp[(-9)+2]
 18607  014C80  0EF9               	movlw	-7
 18608  014C82  006F FF8C  F035    	movff	plusw1,btemp
 18609  014C88  0EFA               	movlw	-6
 18610  014C8A  50E3               	movf	plusw1,w,c
 18611  014C8C  1035               	iorwf	btemp^0,w,c
 18612  014C8E  B4D8               	btfsc	status,2,c
 18613  014C90  D01F               	goto	l7275
 18614  014C92  D79F               	goto	l7255
 18615  014C94                     l7271:
 18616  014C94  0E01               	movlw	1
 18617  014C96  6E3F               	movwf	(btemp+10)^0,c
 18618  014C98  0E00               	movlw	0
 18619  014C9A  6E40               	movwf	(btemp+11)^0,c
 18620                           
 18621                           ;stkvar	_neg @ sp[(-9)+7]
 18622  014C9C  0EFE               	movlw	-2
 18623  014C9E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18624  014CA4  0EFF               	movlw	-1
 18625  014CA6  0060  F103  FFE3   	movff	btemp+11,plusw1
 18626  014CAC                     l7273:
 18627                           
 18628                           ;stkvar	_s @ sp[(-9)+-2]
 18629  014CAC  0EF5               	movlw	-11
 18630  014CAE  50E3               	movf	plusw1,w,c
 18631  014CB0  0F01               	addlw	1
 18632  014CB2  6E35               	movwf	btemp^0,c
 18633  014CB4  0EF5               	movlw	-11
 18634  014CB6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18635  014CBC  6A35               	clrf	btemp^0,c
 18636  014CBE  0EF6               	movlw	-10
 18637  014CC0  50E3               	movf	plusw1,w,c
 18638  014CC2  2035               	addwfc	btemp^0,w,c
 18639  014CC4  6E35               	movwf	btemp^0,c
 18640  014CC6  0EF6               	movlw	-10
 18641  014CC8  0060  F0D7  FFE3   	movff	btemp,plusw1
 18642  014CCE  D053               	goto	l7281
 18643  014CD0                     l7275:
 18644                           
 18645                           ;stkvar	_s @ sp[(-9)+-2]
 18646  014CD0  50E1               	movf	fsr1l,w,c
 18647  014CD2  0FF5               	addlw	-11
 18648  014CD4  6ED9               	movwf	fsr2l,c
 18649  014CD6  50E2               	movf	fsr1h,w,c
 18650  014CD8  6EDA               	movwf	fsr2h,c
 18651  014CDA  0EFF               	movlw	255
 18652  014CDC  22DA               	addwfc	fsr2h,f,c
 18653  014CDE  006F FF7B FFF6     	movff	postinc2,tblptrl
 18654  014CE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 18655  014CEA                     	if	0	;tblptru may be non-zero
 18656  014CEA                     	endif
 18657  014CEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18658  014CEA  0E00               	movlw	low (__mediumconst shr (0+16))
 18659  014CEC  6EF8               	movwf	tblptru,c
 18660  014CEE                     	endif
 18661  014CEE  0008               	tblrd		*
 18662  014CF0  50F5               	movf	tablat,w,c
 18663  014CF2  6E3F               	movwf	(btemp+10)^0,c
 18664  014CF4  6A40               	clrf	(btemp+11)^0,c
 18665                           
 18666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18667                           ; Switch size 1, requested type "simple"
 18668                           ; Number of cases is 1, Range of values is 0 to 0
 18669                           ; switch strategies available:
 18670                           ; Name         Instructions Cycles
 18671                           ; simple_byte            4     3 (average)
 18672                           ;	Chosen strategy is simple_byte
 18673  014CF6  5040               	movf	(btemp+11)^0,w,c
 18674  014CF8  0A00               	xorlw	0	; case 0
 18675  014CFA  A4D8               	btfss	status,2,c
 18676  014CFC  D03C               	goto	l7281
 18677                           
 18678                           ; Switch size 1, requested type "simple"
 18679                           ; Number of cases is 2, Range of values is 43 to 45
 18680                           ; switch strategies available:
 18681                           ; Name         Instructions Cycles
 18682                           ; simple_byte            7     4 (average)
 18683                           ;	Chosen strategy is simple_byte
 18684  014CFE  503F               	movf	(btemp+10)^0,w,c
 18685  014D00  0A2B               	xorlw	43	; case 43
 18686  014D02  B4D8               	btfsc	status,2,c
 18687  014D04  D7D3               	goto	l7273
 18688  014D06  0A06               	xorlw	6	; case 45
 18689  014D08  B4D8               	btfsc	status,2,c
 18690  014D0A  D7C4               	goto	l7271
 18691  014D0C  D034               	goto	l7281
 18692  014D0E                     l7277:
 18693                           
 18694                           ;stkvar	_n @ sp[(-9)+5]
 18695  014D0E  0EFC               	movlw	-4
 18696  014D10  006F FF8C  F03F    	movff	plusw1,btemp+10
 18697  014D16  0EFD               	movlw	-3
 18698  014D18  006F FF8C  F040    	movff	plusw1,btemp+11
 18699  014D1E  0E0A               	movlw	10
 18700  014D20  023F               	mulwf	(btemp+10)^0,c
 18701  014D22  006F FFCC  F03D    	movff	prodl,btemp+8
 18702  014D28  006F FFD0  F03E    	movff	prodh,btemp+9
 18703  014D2E  0240               	mulwf	(btemp+11)^0,c
 18704  014D30  50F3               	movf	prodl,w,c
 18705  014D32  263E               	addwf	(btemp+9)^0,f,c
 18706                           
 18707                           ;stkvar	_s @ sp[(-9)+-2]
 18708  014D34  50E1               	movf	fsr1l,w,c
 18709  014D36  0FF5               	addlw	-11
 18710  014D38  6ED9               	movwf	fsr2l,c
 18711  014D3A  50E2               	movf	fsr1h,w,c
 18712  014D3C  6EDA               	movwf	fsr2h,c
 18713  014D3E  0EFF               	movlw	255
 18714  014D40  22DA               	addwfc	fsr2h,f,c
 18715  014D42  006F FF7B FFF6     	movff	postinc2,tblptrl
 18716  014D48  006F FF77 FFF7     	movff	postdec2,tblptrh
 18717  014D4E                     	if	0	;tblptru may be non-zero
 18718  014D4E                     	endif
 18719  014D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18720  014D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 18721  014D50  6EF8               	movwf	tblptru,c
 18722  014D52                     	endif
 18723  014D52  0008               	tblrd		*
 18724  014D54  50F5               	movf	tablat,w,c
 18725  014D56  5E3D               	subwf	(btemp+8)^0,f,c
 18726  014D58  0E00               	movlw	0
 18727  014D5A  5A3E               	subwfb	(btemp+9)^0,f,c
 18728  014D5C  0E30               	movlw	48
 18729  014D5E  263D               	addwf	(btemp+8)^0,f,c
 18730  014D60  0E00               	movlw	0
 18731  014D62  223E               	addwfc	(btemp+9)^0,f,c
 18732                           
 18733                           ;stkvar	_n @ sp[(-9)+5]
 18734  014D64  0EFC               	movlw	-4
 18735  014D66  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18736  014D6C  0EFD               	movlw	-3
 18737  014D6E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18738  014D74  D79B               	goto	l7273
 18739  014D76                     l7281:
 18740  014D76  0ED0               	movlw	208
 18741  014D78  6E3F               	movwf	(btemp+10)^0,c
 18742  014D7A  0EFF               	movlw	255
 18743  014D7C  6E40               	movwf	(btemp+11)^0,c
 18744                           
 18745                           ;stkvar	_s @ sp[(-9)+-2]
 18746  014D7E  50E1               	movf	fsr1l,w,c
 18747  014D80  0FF5               	addlw	-11
 18748  014D82  6ED9               	movwf	fsr2l,c
 18749  014D84  50E2               	movf	fsr1h,w,c
 18750  014D86  6EDA               	movwf	fsr2h,c
 18751  014D88  0EFF               	movlw	255
 18752  014D8A  22DA               	addwfc	fsr2h,f,c
 18753  014D8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 18754  014D92  006F FF77 FFF7     	movff	postdec2,tblptrh
 18755  014D98                     	if	0	;tblptru may be non-zero
 18756  014D98                     	endif
 18757  014D98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18758  014D98  0E00               	movlw	low (__mediumconst shr (0+16))
 18759  014D9A  6EF8               	movwf	tblptru,c
 18760  014D9C                     	endif
 18761  014D9C  0008               	tblrd		*
 18762  014D9E  50F5               	movf	tablat,w,c
 18763  014DA0  6E3D               	movwf	(btemp+8)^0,c
 18764  014DA2  6A3E               	clrf	(btemp+9)^0,c
 18765  014DA4  503F               	movf	(btemp+10)^0,w,c
 18766  014DA6  263D               	addwf	(btemp+8)^0,f,c
 18767  014DA8  5040               	movf	(btemp+11)^0,w,c
 18768  014DAA  223E               	addwfc	(btemp+9)^0,f,c
 18769  014DAC  503E               	movf	(btemp+9)^0,w,c
 18770  014DAE  E106               	bnz	u7080
 18771  014DB0  0E0A               	movlw	10
 18772  014DB2  5C3D               	subwf	(btemp+8)^0,w,c
 18773  014DB4  B0D8               	btfsc	status,0,c
 18774  014DB6  D002               	goto	u7080
 18775  014DB8  0E01               	movlw	1
 18776  014DBA  D001               	goto	u7090
 18777  014DBC                     u7080:
 18778  014DBC  0E00               	movlw	0
 18779  014DBE                     u7090:
 18780  014DBE  6E3F               	movwf	(btemp+10)^0,c
 18781  014DC0  6A40               	clrf	(btemp+11)^0,c
 18782                           
 18783                           ;stkvar	_atoi$4602 @ sp[(-9)+0]
 18784  014DC2  0EF7               	movlw	-9
 18785  014DC4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18786  014DCA  0EF8               	movlw	-8
 18787  014DCC  0060  F103  FFE3   	movff	btemp+11,plusw1
 18788                           
 18789                           ;stkvar	_atoi$4602 @ sp[(-9)+0]
 18790  014DD2  0EF7               	movlw	-9
 18791  014DD4  006F FF8C  F035    	movff	plusw1,btemp
 18792  014DDA  0EF8               	movlw	-8
 18793  014DDC  50E3               	movf	plusw1,w,c
 18794  014DDE  1035               	iorwf	btemp^0,w,c
 18795  014DE0  A4D8               	btfss	status,2,c
 18796  014DE2  D795               	goto	l7277
 18797                           
 18798                           ;stkvar	_neg @ sp[(-9)+7]
 18799  014DE4  0EFE               	movlw	-2
 18800  014DE6  006F FF8C  F035    	movff	plusw1,btemp
 18801  014DEC  0EFF               	movlw	-1
 18802  014DEE  50E3               	movf	plusw1,w,c
 18803  014DF0  1035               	iorwf	btemp^0,w,c
 18804  014DF2  A4D8               	btfss	status,2,c
 18805  014DF4  D00E               	goto	l7291
 18806                           
 18807                           ;stkvar	_n @ sp[(-9)+5]
 18808  014DF6  0EFC               	movlw	-4
 18809  014DF8  006F FF8C  F035    	movff	plusw1,btemp
 18810  014DFE  1E35               	comf	btemp^0,f,c
 18811  014E00  0EFD               	movlw	-3
 18812  014E02  006F FF8C  F036    	movff	plusw1,btemp+1
 18813  014E08  1E36               	comf	(btemp+1)^0,f,c
 18814  014E0A  2A35               	incf	btemp^0,f,c
 18815  014E0C  B4D8               	btfsc	status,2,c
 18816  014E0E  2A36               	incf	(btemp+1)^0,f,c
 18817  014E10  D008               	goto	l2657
 18818  014E12                     l7291:
 18819                           
 18820                           ;stkvar	_n @ sp[(-9)+5]
 18821  014E12  0EFC               	movlw	-4
 18822  014E14  006F FF8C  F035    	movff	plusw1,btemp
 18823  014E1A  0EFD               	movlw	-3
 18824  014E1C  006F FF8C  F036    	movff	plusw1,btemp+1
 18825  014E22                     l2657:
 18826                           
 18827                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18828  014E22  0EF5               	movlw	245
 18829  014E24  26E1               	addwf	fsr1l,f,c
 18830  014E26  0EFF               	movlw	255
 18831  014E28  22E2               	addwfc	fsr1h,f,c
 18832  014E2A  0012               	return		;funcret
 18833  014E2C                     __end_of_atoi:
 18834                           	opt callstack 0
 18835                           
 18836 ;; *************** function _isspace *****************
 18837 ;; Defined at:
 18838 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18839 ;; Parameters:    Size  Location     Type
 18840 ;;  c               2  [STACK] int 
 18841 ;; Auto vars:     Size  Location     Type
 18842 ;;		None
 18843 ;; Return value:  Size  Location     Type
 18844 ;;                  2  [STACK] int 
 18845 ;; Registers used:
 18846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18847 ;; Tracked objects:
 18848 ;;		On entry : 0/0
 18849 ;;		On exit  : 0/0
 18850 ;;		Unchanged: 0/0
 18851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18856 ;;Total ram usage:        0 bytes
 18857 ;; Hardware stack levels used:    1
 18858 ;; Hardware stack levels required when called:    6
 18859 ;; This function calls:
 18860 ;;		Nothing
 18861 ;; This function is called by:
 18862 ;;		_atoi
 18863 ;; This function uses a reentrant model
 18864 ;;
 18865                           
 18866                           	psect	text64
 18867  0171A6                     __ptext64:
 18868                           	opt callstack 0
 18869  0171A6                     _isspace:
 18870                           	opt callstack 0
 18871                           
 18872                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18873  0171A6  52E6               	movf	postinc1,f,c
 18874                           
 18875                           ;stkvar	_isspace$4640 @ sp[(-1)+0]
 18876                           
 18877                           ;incstack = 0
 18878  0171A8  0EFF               	movlw	-1
 18879  0171AA  6AE3               	clrf	plusw1,c
 18880  0171AC  2AE3               	incf	plusw1,f,c
 18881                           
 18882                           ;stkvar	_c @ sp[(-1)+-2]
 18883  0171AE  0EFD               	movlw	-3
 18884  0171B0  006F FF8C  F035    	movff	plusw1,btemp
 18885  0171B6  0E20               	movlw	32
 18886  0171B8  1835               	xorwf	btemp^0,w,c
 18887  0171BA  E104               	bnz	u6050
 18888  0171BC  0EFE               	movlw	-2
 18889  0171BE  50E3               	movf	plusw1,w,c
 18890  0171C0  B4D8               	btfsc	status,2,c
 18891  0171C2  D012               	goto	l6741
 18892  0171C4                     u6050:
 18893                           
 18894                           ;stkvar	_c @ sp[(-1)+-2]
 18895  0171C4  0EFD               	movlw	-3
 18896  0171C6  50E3               	movf	plusw1,w,c
 18897  0171C8  0FF7               	addlw	247
 18898  0171CA  6E3F               	movwf	(btemp+10)^0,c
 18899  0171CC  0EFE               	movlw	-2
 18900  0171CE  006F FF8C  F040    	movff	plusw1,btemp+11
 18901  0171D4  0EFF               	movlw	255
 18902  0171D6  2240               	addwfc	(btemp+11)^0,f,c
 18903  0171D8  5040               	movf	(btemp+11)^0,w,c
 18904  0171DA  E104               	bnz	u6060
 18905  0171DC  0E05               	movlw	5
 18906  0171DE  5C3F               	subwf	(btemp+10)^0,w,c
 18907  0171E0  A0D8               	btfss	status,0,c
 18908  0171E2  D002               	goto	l6741
 18909  0171E4                     u6060:
 18910                           
 18911                           ;stkvar	_isspace$4640 @ sp[(-1)+0]
 18912  0171E4  0EFF               	movlw	-1
 18913  0171E6  6AE3               	clrf	plusw1,c
 18914  0171E8                     l6741:
 18915                           
 18916                           ;stkvar	_isspace$4640 @ sp[(-1)+0]
 18917  0171E8  0EFF               	movlw	-1
 18918  0171EA  50E3               	movf	plusw1,w,c
 18919  0171EC  6E35               	movwf	btemp^0,c
 18920  0171EE  6A36               	clrf	(btemp+1)^0,c
 18921                           
 18922                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18923  0171F0  52E5               	movf	postdec1,f,c
 18924  0171F2  52E5               	movf	postdec1,f,c
 18925  0171F4  52E5               	movf	postdec1,f,c
 18926  0171F6  0012               	return		;funcret
 18927  0171F8                     __end_of_isspace:
 18928                           	opt callstack 0
 18929                           
 18930 ;; *************** function _isdigit *****************
 18931 ;; Defined at:
 18932 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 18933 ;; Parameters:    Size  Location     Type
 18934 ;;  c               2  [STACK] int 
 18935 ;; Auto vars:     Size  Location     Type
 18936 ;;		None
 18937 ;; Return value:  Size  Location     Type
 18938 ;;                  2  [STACK] int 
 18939 ;; Registers used:
 18940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18941 ;; Tracked objects:
 18942 ;;		On entry : 0/0
 18943 ;;		On exit  : 0/0
 18944 ;;		Unchanged: 0/0
 18945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18950 ;;Total ram usage:        0 bytes
 18951 ;; Hardware stack levels used:    1
 18952 ;; Hardware stack levels required when called:    6
 18953 ;; This function calls:
 18954 ;;		Nothing
 18955 ;; This function is called by:
 18956 ;;		_vfpfcnvrt
 18957 ;;		_atoi
 18958 ;; This function uses a reentrant model
 18959 ;;
 18960                           
 18961                           	psect	text65
 18962  017644                     __ptext65:
 18963                           	opt callstack 0
 18964  017644                     _isdigit:
 18965                           	opt callstack 18
 18966                           
 18967                           ;stkvar	_c @ sp[(0)+-2]
 18968                           
 18969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18970                           ;incstack = 0
 18971  017644  0EFE               	movlw	-2
 18972  017646  50E3               	movf	plusw1,w,c
 18973  017648  0FD0               	addlw	208
 18974  01764A  6E3F               	movwf	(btemp+10)^0,c
 18975  01764C  0EFF               	movlw	-1
 18976  01764E  006F FF8C  F040    	movff	plusw1,btemp+11
 18977  017654  0EFF               	movlw	255
 18978  017656  2240               	addwfc	(btemp+11)^0,f,c
 18979  017658  5040               	movf	(btemp+11)^0,w,c
 18980  01765A  E106               	bnz	u5010
 18981  01765C  0E0A               	movlw	10
 18982  01765E  5C3F               	subwf	(btemp+10)^0,w,c
 18983  017660  B0D8               	btfsc	status,0,c
 18984  017662  D002               	goto	u5010
 18985  017664  0E01               	movlw	1
 18986  017666  D001               	goto	u5020
 18987  017668                     u5010:
 18988  017668  0E00               	movlw	0
 18989  01766A                     u5020:
 18990  01766A  6E35               	movwf	btemp^0,c
 18991  01766C  6A36               	clrf	(btemp+1)^0,c
 18992                           
 18993                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18994  01766E  52E5               	movf	postdec1,f,c
 18995  017670  52E5               	movf	postdec1,f,c
 18996  017672  0012               	return		;funcret
 18997  017674                     __end_of_isdigit:
 18998                           	opt callstack 0
 18999                           
 19000 ;; *************** function _set_vterm *****************
 19001 ;; Defined at:
 19002 ;;		line 104 in file "mconfig.c"
 19003 ;; Parameters:    Size  Location     Type
 19004 ;;  vterm           1  [STACK] unsigned char 
 19005 ;; Auto vars:     Size  Location     Type
 19006 ;;		None
 19007 ;; Return value:  Size  Location     Type
 19008 ;;                  1  [STACK] unsigned char 
 19009 ;; Registers used:
 19010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19011 ;; Tracked objects:
 19012 ;;		On entry : 0/0
 19013 ;;		On exit  : 3F/4
 19014 ;;		Unchanged: 0/0
 19015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19020 ;;Total ram usage:        0 bytes
 19021 ;; Hardware stack levels used:    1
 19022 ;; Hardware stack levels required when called:    6
 19023 ;; This function calls:
 19024 ;;		Nothing
 19025 ;; This function is called by:
 19026 ;;		_main
 19027 ;;		_check_help
 19028 ;; This function uses a reentrant model
 19029 ;;
 19030                           
 19031                           	psect	text66
 19032  017B48                     __ptext66:
 19033                           	opt callstack 0
 19034  017B48                     _set_vterm:
 19035                           	opt callstack 24
 19036                           
 19037                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 19038                           ;stkvar	_vterm @ sp[(0)+-1]
 19039                           
 19040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19041                           ;incstack = 0
 19042  017B48  0EFF               	movlw	-1
 19043  017B4A  006F FF8C  F040    	movff	plusw1,btemp+11
 19044  017B50  0E03               	movlw	3
 19045  017B52  1640               	andwf	(btemp+11)^0,f,c
 19046  017B54  0104               	movlb	4	; () banked
 19047  017B56  51D8               	movf	(_D+216)& (0+255),w,b
 19048  017B58  1840               	xorwf	(btemp+11)^0,w,c
 19049  017B5A  0BFE               	andlw	-2
 19050  017B5C  1840               	xorwf	(btemp+11)^0,w,c
 19051  017B5E  6FD8               	movwf	(_D+216)& (0+255),b
 19052                           
 19053                           ; BSR set to: 4
 19054                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19055  017B60  52E5               	movf	postdec1,f,c
 19056  017B62  0012               	return		;funcret
 19057  017B64                     __end_of_set_vterm:
 19058                           	opt callstack 0
 19059                           
 19060 ;; *************** function _set_temp_display_help *****************
 19061 ;; Defined at:
 19062 ;;		line 208 in file "mconfig.c"
 19063 ;; Parameters:    Size  Location     Type
 19064 ;;  new_response    1  [STACK] const enum E16501
 19065 ;; Auto vars:     Size  Location     Type
 19066 ;;		None
 19067 ;; Return value:  Size  Location     Type
 19068 ;;                  1  [STACK] enum E16501
 19069 ;; Registers used:
 19070 ;;		wreg, fsr1l, fsr1h
 19071 ;; Tracked objects:
 19072 ;;		On entry : 0/4
 19073 ;;		On exit  : 3F/2
 19074 ;;		Unchanged: 0/0
 19075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19080 ;;Total ram usage:        0 bytes
 19081 ;; Hardware stack levels used:    1
 19082 ;; Hardware stack levels required when called:    6
 19083 ;; This function calls:
 19084 ;;		Nothing
 19085 ;; This function is called by:
 19086 ;;		_check_help
 19087 ;; This function uses a reentrant model
 19088 ;;
 19089                           
 19090                           	psect	text67
 19091  017C62                     __ptext67:
 19092                           	opt callstack 0
 19093  017C62                     _set_temp_display_help:
 19094                           	opt callstack 23
 19095                           
 19096                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 19097                           
 19098                           ; BSR set to: 4
 19099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19100                           ;incstack = 0
 19101  017C62  0102               	movlb	2	; () banked
 19102  017C64  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
 19103                           
 19104                           ; BSR set to: 2
 19105                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 19106                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19107  017C66  0EFF               	movlw	-1
 19108  017C68  006F FF8C  F2B2    	movff	plusw1,_V+178	;volatile
 19109                           
 19110                           ; BSR set to: 2
 19111                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19112  017C6E  52E5               	movf	postdec1,f,c
 19113  017C70  0012               	return		;funcret
 19114  017C72                     __end_of_set_temp_display_help:
 19115                           	opt callstack 0
 19116                           
 19117 ;; *************** function _set_display_info *****************
 19118 ;; Defined at:
 19119 ;;		line 197 in file "mconfig.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;  new_response    1  [STACK] const enum E16501
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;		None
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  1  [STACK] enum E16986
 19126 ;; Registers used:
 19127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19128 ;; Tracked objects:
 19129 ;;		On entry : 0/4
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19137 ;;Total ram usage:        0 bytes
 19138 ;; Hardware stack levels used:    1
 19139 ;; Hardware stack levels required when called:    7
 19140 ;; This function calls:
 19141 ;;		_TimerDone
 19142 ;; This function is called by:
 19143 ;;		_main
 19144 ;;		_check_help
 19145 ;; This function uses a reentrant model
 19146 ;;
 19147                           
 19148                           	psect	text68
 19149  017AB4                     __ptext68:
 19150                           	opt callstack 0
 19151  017AB4                     _set_display_info:
 19152                           	opt callstack 23
 19153                           
 19154                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 19155                           
 19156                           ; BSR set to: 2
 19157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19158                           ;incstack = 0
 19159  017AB4  0E07               	movlw	7
 19160  017AB6  6EE6               	movwf	postinc1,c
 19161  017AB8  ECE5  F0BC         	call	_TimerDone	;wreg free
 19162  017ABC  5035               	movf	btemp^0,w,c
 19163  017ABE  B4D8               	btfsc	status,2,c
 19164  017AC0  D006               	goto	l1597
 19165                           
 19166                           ;mconfig.c: 202:   old_info = V.response.info;
 19167  017AC2  0102               	movlb	2	; () banked
 19168  017AC4  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
 19169                           
 19170                           ; BSR set to: 2
 19171                           ;mconfig.c: 203:   V.response.info = new_response_info;
 19172                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19173  017AC6  0EFF               	movlw	-1
 19174  017AC8  006F FF8C  F2B1    	movff	plusw1,_V+177	;volatile
 19175  017ACE                     l1597:
 19176                           
 19177                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19178  017ACE  52E5               	movf	postdec1,f,c
 19179  017AD0  0012               	return		;funcret
 19180  017AD2                     __end_of_set_display_info:
 19181                           	opt callstack 0
 19182                           
 19183 ;; *************** function _mode_lamp_dim *****************
 19184 ;; Defined at:
 19185 ;;		line 13 in file "mconfig.c"
 19186 ;; Parameters:    Size  Location     Type
 19187 ;;  level           2  [STACK] const unsigned short 
 19188 ;; Auto vars:     Size  Location     Type
 19189 ;;		None
 19190 ;; Return value:  Size  Location     Type
 19191 ;;                  1  [STACK] void 
 19192 ;; Registers used:
 19193 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19194 ;; Tracked objects:
 19195 ;;		On entry : 0/2
 19196 ;;		On exit  : 0/0
 19197 ;;		Unchanged: 0/0
 19198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19203 ;;Total ram usage:        0 bytes
 19204 ;; Hardware stack levels used:    1
 19205 ;; Hardware stack levels required when called:    7
 19206 ;; This function calls:
 19207 ;;		_PWM8_LoadDutyValue
 19208 ;; This function is called by:
 19209 ;;		_main
 19210 ;;		_check_help
 19211 ;; This function uses a reentrant model
 19212 ;;
 19213                           
 19214                           	psect	text69
 19215  017BB2                     __ptext69:
 19216                           	opt callstack 0
 19217  017BB2                     _mode_lamp_dim:
 19218                           	opt callstack 23
 19219                           
 19220                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19221                           ;stkvar	_level @ sp[(0)+-2]
 19222                           
 19223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19224                           ;incstack = 0
 19225  017BB2  0EFE               	movlw	-2
 19226  017BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 19227  017BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 19228  017BC0  ECF1  F0B9         	call	_PWM8_LoadDutyValue	;wreg free
 19229                           
 19230                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19231  017BC4  52E5               	movf	postdec1,f,c
 19232  017BC6  52E5               	movf	postdec1,f,c
 19233  017BC8  0012               	return		;funcret
 19234  017BCA                     __end_of_mode_lamp_dim:
 19235                           	opt callstack 0
 19236                           
 19237 ;; *************** function _mode_lamp_bright *****************
 19238 ;; Defined at:
 19239 ;;		line 18 in file "mconfig.c"
 19240 ;; Parameters:    Size  Location     Type
 19241 ;;		None
 19242 ;; Auto vars:     Size  Location     Type
 19243 ;;		None
 19244 ;; Return value:  Size  Location     Type
 19245 ;;                  1  [STACK] void 
 19246 ;; Registers used:
 19247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19248 ;; Tracked objects:
 19249 ;;		On entry : 0/2
 19250 ;;		On exit  : 0/0
 19251 ;;		Unchanged: 0/0
 19252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19257 ;;Total ram usage:        0 bytes
 19258 ;; Hardware stack levels used:    1
 19259 ;; Hardware stack levels required when called:    7
 19260 ;; This function calls:
 19261 ;;		_PWM8_LoadDutyValue
 19262 ;; This function is called by:
 19263 ;;		_check_help
 19264 ;; This function uses a reentrant model
 19265 ;;
 19266                           
 19267                           	psect	text70
 19268  017C80                     __ptext70:
 19269                           	opt callstack 0
 19270  017C80                     _mode_lamp_bright:
 19271                           	opt callstack 22
 19272                           
 19273                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19274                           
 19275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19276                           ;incstack = 0
 19277  017C80  0E2C               	movlw	44
 19278  017C82  6EE6               	movwf	postinc1,c
 19279  017C84  0E01               	movlw	1
 19280  017C86  6EE6               	movwf	postinc1,c
 19281  017C88  ECF1  F0B9         	call	_PWM8_LoadDutyValue	;wreg free
 19282                           
 19283                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19284  017C8C  0012               	return		;funcret
 19285  017C8E                     __end_of_mode_lamp_bright:
 19286                           	opt callstack 0
 19287                           
 19288 ;; *************** function _PWM8_LoadDutyValue *****************
 19289 ;; Defined at:
 19290 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19291 ;; Parameters:    Size  Location     Type
 19292 ;;  dutyValue       2  [STACK] unsigned short 
 19293 ;; Auto vars:     Size  Location     Type
 19294 ;;		None
 19295 ;; Return value:  Size  Location     Type
 19296 ;;                  1  [STACK] void 
 19297 ;; Registers used:
 19298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19299 ;; Tracked objects:
 19300 ;;		On entry : 0/2
 19301 ;;		On exit  : 0/0
 19302 ;;		Unchanged: 0/0
 19303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19308 ;;Total ram usage:        0 bytes
 19309 ;; Hardware stack levels used:    1
 19310 ;; Hardware stack levels required when called:    6
 19311 ;; This function calls:
 19312 ;;		Nothing
 19313 ;; This function is called by:
 19314 ;;		_mode_lamp_dim
 19315 ;;		_mode_lamp_bright
 19316 ;; This function uses a reentrant model
 19317 ;;
 19318                           
 19319                           	psect	text71
 19320  0173E2                     __ptext71:
 19321                           	opt callstack 0
 19322  0173E2                     _PWM8_LoadDutyValue:
 19323                           	opt callstack 23
 19324                           
 19325                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19326                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19327                           
 19328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19329                           ;incstack = 0
 19330  0173E2  0EFE               	movlw	-2
 19331  0173E4  006F FF8C  F03F    	movff	plusw1,btemp+10
 19332  0173EA  0EFF               	movlw	-1
 19333  0173EC  006F FF8C  F040    	movff	plusw1,btemp+11
 19334  0173F2  90D8               	bcf	status,0,c
 19335  0173F4  3240               	rrcf	(btemp+11)^0,f,c
 19336  0173F6  323F               	rrcf	(btemp+10)^0,f,c
 19337  0173F8  90D8               	bcf	status,0,c
 19338  0173FA  3240               	rrcf	(btemp+11)^0,f,c
 19339  0173FC  323F               	rrcf	(btemp+10)^0,f,c
 19340  0173FE  503F               	movf	(btemp+10)^0,w,c
 19341  017400  6E61               	movwf	97,c	;volatile
 19342                           
 19343                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19344                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19345  017402  0EFE               	movlw	-2
 19346  017404  006F FF8C  F040    	movff	plusw1,btemp+11
 19347  01740A  0E03               	movlw	3
 19348  01740C  1640               	andwf	(btemp+11)^0,f,c
 19349  01740E  0E06               	movlw	6
 19350  017410  6E35               	movwf	btemp^0,c
 19351  017412                     u7545:
 19352  017412  90D8               	bcf	status,0,c
 19353  017414  3640               	rlcf	(btemp+11)^0,f,c
 19354  017416  2E35               	decfsz	btemp^0,f,c
 19355  017418  D7FC               	goto	u7545
 19356  01741A  5040               	movf	(btemp+11)^0,w,c
 19357  01741C  6E60               	movwf	96,c	;volatile
 19358                           
 19359                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19360  01741E  52E5               	movf	postdec1,f,c
 19361  017420  52E5               	movf	postdec1,f,c
 19362  017422  0012               	return		;funcret
 19363  017424                     __end_of_PWM8_LoadDutyValue:
 19364                           	opt callstack 0
 19365                           
 19366 ;; *************** function _help_button *****************
 19367 ;; Defined at:
 19368 ;;		line 26 in file "mconfig.c"
 19369 ;; Parameters:    Size  Location     Type
 19370 ;;		None
 19371 ;; Auto vars:     Size  Location     Type
 19372 ;;		None
 19373 ;; Return value:  Size  Location     Type
 19374 ;;                  1  [STACK] _Bool 
 19375 ;; Registers used:
 19376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19377 ;; Tracked objects:
 19378 ;;		On entry : 0/2
 19379 ;;		On exit  : 0/0
 19380 ;;		Unchanged: 0/0
 19381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19386 ;;Total ram usage:        0 bytes
 19387 ;; Hardware stack levels used:    1
 19388 ;; Hardware stack levels required when called:    7
 19389 ;; This function calls:
 19390 ;;		_StartTimer
 19391 ;;		_TimerDone
 19392 ;; This function is called by:
 19393 ;;		_check_help
 19394 ;; This function uses a reentrant model
 19395 ;;
 19396                           
 19397                           	psect	text72
 19398  0174A0                     __ptext72:
 19399                           	opt callstack 0
 19400  0174A0                     _help_button:
 19401                           	opt callstack 22
 19402                           
 19403                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19404                           
 19405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19406                           ;incstack = 0
 19407  0174A0  B0CB               	btfsc	203,0,c	;volatile
 19408  0174A2  D00C               	goto	l1540
 19409                           
 19410                           ;mconfig.c: 29:   V.help = 1;
 19411  0174A4  0102               	movlb	2	; () banked
 19412  0174A6  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
 19413                           
 19414                           ; BSR set to: 2
 19415                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19416  0174A8  0E08               	movlw	8
 19417  0174AA  6EE6               	movwf	postinc1,c
 19418  0174AC  ECE5  F0BC         	call	_TimerDone	;wreg free
 19419  0174B0  5035               	movf	btemp^0,w,c
 19420  0174B2  B4D8               	btfsc	status,2,c
 19421  0174B4  D003               	goto	l1540
 19422                           
 19423                           ;mconfig.c: 31:    return 1;
 19424  0174B6  0E01               	movlw	1
 19425  0174B8  6E35               	movwf	btemp^0,c
 19426  0174BA  0012               	return	
 19427  0174BC                     l1540:
 19428                           
 19429                           ;mconfig.c: 34:  if (!V.help)
 19430  0174BC  0102               	movlb	2	; () banked
 19431  0174BE  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 19432  0174C0  D008               	goto	l8117
 19433                           
 19434                           ; BSR set to: 2
 19435                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19436  0174C2  0E2C               	movlw	44
 19437  0174C4  6EE6               	movwf	postinc1,c
 19438  0174C6  0E01               	movlw	1
 19439  0174C8  6EE6               	movwf	postinc1,c
 19440  0174CA  0E08               	movlw	8
 19441  0174CC  6EE6               	movwf	postinc1,c
 19442  0174CE  EC32  F0BA         	call	_StartTimer	;wreg free
 19443  0174D2                     l8117:
 19444                           
 19445                           ;mconfig.c: 37:  return 0;
 19446  0174D2  0E00               	movlw	0
 19447  0174D4  6E35               	movwf	btemp^0,c
 19448                           
 19449                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19450  0174D6  0012               	return		;funcret
 19451  0174D8                     __end_of_help_button:
 19452                           	opt callstack 0
 19453                           
 19454 ;; *************** function _TimerDone *****************
 19455 ;; Defined at:
 19456 ;;		line 20 in file "timers.c"
 19457 ;; Parameters:    Size  Location     Type
 19458 ;;  timer           1  [STACK] const unsigned char 
 19459 ;; Auto vars:     Size  Location     Type
 19460 ;;		None
 19461 ;; Return value:  Size  Location     Type
 19462 ;;                  1  [STACK] _Bool 
 19463 ;; Registers used:
 19464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19465 ;; Tracked objects:
 19466 ;;		On entry : 0/4
 19467 ;;		On exit  : 0/0
 19468 ;;		Unchanged: 0/0
 19469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19474 ;;Total ram usage:        0 bytes
 19475 ;; Hardware stack levels used:    1
 19476 ;; Hardware stack levels required when called:    6
 19477 ;; This function calls:
 19478 ;;		Nothing
 19479 ;; This function is called by:
 19480 ;;		_main
 19481 ;;		_WaitMs
 19482 ;;		_help_button
 19483 ;;		_check_help
 19484 ;;		_set_display_info
 19485 ;; This function uses a reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text73
 19489  0179CA                     __ptext73:
 19490                           	opt callstack 0
 19491  0179CA                     _TimerDone:
 19492                           	opt callstack 23
 19493                           
 19494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19495                           ;incstack = 0
 19496  0179CA  0004               	clrwdt		;# 
 19497                           
 19498                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19499                           ;stkvar	_timer @ sp[(0)+-1]
 19500  0179CC  0EFF               	movlw	-1
 19501  0179CE  50E3               	movf	plusw1,w,c
 19502  0179D0  0D02               	mullw	2
 19503  0179D2  50F3               	movf	243,w,c
 19504  0179D4  0F82               	addlw	low _tickCount
 19505  0179D6  6ED9               	movwf	fsr2l,c
 19506  0179D8  6ADA               	clrf	fsr2h,c
 19507  0179DA  50DE               	movf	postinc2,w,c
 19508  0179DC  10DE               	iorwf	postinc2,w,c
 19509  0179DE  A4D8               	btfss	status,2,c
 19510  0179E0  D002               	goto	l7577
 19511                           
 19512                           ;timers.c: 24:   return 1;
 19513  0179E2  0E01               	movlw	1
 19514  0179E4  D001               	goto	L15
 19515  0179E6                     l7577:
 19516                           
 19517                           ;timers.c: 26:  return 0;
 19518  0179E6  0E00               	movlw	0
 19519  0179E8                     L15:
 19520  0179E8  6E35               	movwf	btemp^0,c
 19521                           
 19522                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19523  0179EA  52E5               	movf	postdec1,f,c
 19524  0179EC  0012               	return		;funcret
 19525  0179EE                     __end_of_TimerDone:
 19526                           	opt callstack 0
 19527                           
 19528 ;; *************** function _StartTimer *****************
 19529 ;; Defined at:
 19530 ;;		line 12 in file "timers.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;  timer           1  [STACK] const unsigned char 
 19533 ;;  count           2  [STACK] const unsigned short 
 19534 ;; Auto vars:     Size  Location     Type
 19535 ;;		None
 19536 ;; Return value:  Size  Location     Type
 19537 ;;                  1  [STACK] void 
 19538 ;; Registers used:
 19539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19540 ;; Tracked objects:
 19541 ;;		On entry : 0/4
 19542 ;;		On exit  : 0/0
 19543 ;;		Unchanged: 0/0
 19544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19549 ;;Total ram usage:        0 bytes
 19550 ;; Hardware stack levels used:    1
 19551 ;; Hardware stack levels required when called:    6
 19552 ;; This function calls:
 19553 ;;		Nothing
 19554 ;; This function is called by:
 19555 ;;		_main
 19556 ;;		_WaitMs
 19557 ;;		_help_button
 19558 ;;		_check_help
 19559 ;; This function uses a reentrant model
 19560 ;;
 19561                           
 19562                           	psect	text74
 19563  017464                     __ptext74:
 19564                           	opt callstack 0
 19565  017464                     _StartTimer:
 19566                           	opt callstack 21
 19567                           
 19568                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 19569                           ;stkvar	_count @ sp[(0)+-3]
 19570                           
 19571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19572                           ;incstack = 0
 19573  017464  0EFD               	movlw	-3
 19574  017466  006F FF8C  F03F    	movff	plusw1,btemp+10
 19575  01746C  0EFE               	movlw	-2
 19576  01746E  006F FF8C  F040    	movff	plusw1,btemp+11
 19577  017474  90D8               	bcf	status,0,c
 19578  017476  343F               	rlcf	(btemp+10)^0,w,c
 19579  017478  6E3D               	movwf	(btemp+8)^0,c
 19580  01747A  3440               	rlcf	(btemp+11)^0,w,c
 19581  01747C  6E3E               	movwf	(btemp+9)^0,c
 19582                           
 19583                           ;stkvar	_timer @ sp[(0)+-1]
 19584  01747E  0EFF               	movlw	-1
 19585  017480  50E3               	movf	plusw1,w,c
 19586  017482  0D02               	mullw	2
 19587  017484  50F3               	movf	243,w,c
 19588  017486  0F82               	addlw	low _tickCount
 19589  017488  6ED9               	movwf	fsr2l,c
 19590  01748A  6ADA               	clrf	fsr2h,c
 19591  01748C  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 19592  017492  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 19593                           
 19594                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19595  017498  52E5               	movf	postdec1,f,c
 19596  01749A  52E5               	movf	postdec1,f,c
 19597  01749C  52E5               	movf	postdec1,f,c
 19598  01749E  0012               	return		;funcret
 19599  0174A0                     __end_of_StartTimer:
 19600                           	opt callstack 0
 19601                           
 19602 ;; *************** function _display_info *****************
 19603 ;; Defined at:
 19604 ;;		line 187 in file "mconfig.c"
 19605 ;; Parameters:    Size  Location     Type
 19606 ;;		None
 19607 ;; Auto vars:     Size  Location     Type
 19608 ;;		None
 19609 ;; Return value:  Size  Location     Type
 19610 ;;                  1  [STACK] enum E16501
 19611 ;; Registers used:
 19612 ;;		btemp
 19613 ;; Tracked objects:
 19614 ;;		On entry : 0/2
 19615 ;;		On exit  : 0/0
 19616 ;;		Unchanged: 0/0
 19617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19622 ;;Total ram usage:        0 bytes
 19623 ;; Hardware stack levels used:    1
 19624 ;; Hardware stack levels required when called:    6
 19625 ;; This function calls:
 19626 ;;		Nothing
 19627 ;; This function is called by:
 19628 ;;		_check_help
 19629 ;; This function uses a reentrant model
 19630 ;;
 19631                           
 19632                           	psect	text75
 19633  017CEA                     __ptext75:
 19634                           	opt callstack 0
 19635  017CEA                     _display_info:
 19636                           	opt callstack 23
 19637                           
 19638                           ;mconfig.c: 189:  return V.response.info;
 19639                           
 19640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19641                           ;incstack = 0
 19642  017CEA  0060  FAC4  F035   	movff	_V+177,btemp	;volatile
 19643                           
 19644                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19645  017CF0  0012               	return		;funcret
 19646  017CF2                     __end_of_display_info:
 19647                           	opt callstack 0
 19648                           
 19649 ;; *************** function _display_help *****************
 19650 ;; Defined at:
 19651 ;;		line 192 in file "mconfig.c"
 19652 ;; Parameters:    Size  Location     Type
 19653 ;;		None
 19654 ;; Auto vars:     Size  Location     Type
 19655 ;;		None
 19656 ;; Return value:  Size  Location     Type
 19657 ;;                  1  [STACK] enum E16501
 19658 ;; Registers used:
 19659 ;;		btemp
 19660 ;; Tracked objects:
 19661 ;;		On entry : 3F/2
 19662 ;;		On exit  : 0/0
 19663 ;;		Unchanged: 0/0
 19664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19669 ;;Total ram usage:        0 bytes
 19670 ;; Hardware stack levels used:    1
 19671 ;; Hardware stack levels required when called:    6
 19672 ;; This function calls:
 19673 ;;		Nothing
 19674 ;; This function is called by:
 19675 ;;		_check_help
 19676 ;; This function uses a reentrant model
 19677 ;;
 19678                           
 19679                           	psect	text76
 19680  017CF2                     __ptext76:
 19681                           	opt callstack 0
 19682  017CF2                     _display_help:
 19683                           	opt callstack 23
 19684                           
 19685                           ;mconfig.c: 194:  return V.response.help_temp;
 19686                           
 19687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19688                           ;incstack = 0
 19689  017CF2  0060  FAC8  F035   	movff	_V+178,btemp	;volatile
 19690                           
 19691                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19692  017CF8  0012               	return		;funcret
 19693  017CFA                     __end_of_display_help:
 19694                           	opt callstack 0
 19695                           
 19696 ;; *************** function _check_adc_scan *****************
 19697 ;; Defined at:
 19698 ;;		line 47 in file "daq.c"
 19699 ;; Parameters:    Size  Location     Type
 19700 ;;		None
 19701 ;; Auto vars:     Size  Location     Type
 19702 ;;		None
 19703 ;; Return value:  Size  Location     Type
 19704 ;;                  1  [STACK] _Bool 
 19705 ;; Registers used:
 19706 ;;		btemp
 19707 ;; Tracked objects:
 19708 ;;		On entry : 0/4
 19709 ;;		On exit  : 0/0
 19710 ;;		Unchanged: 0/0
 19711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19716 ;;Total ram usage:        0 bytes
 19717 ;; Hardware stack levels used:    1
 19718 ;; Hardware stack levels required when called:    6
 19719 ;; This function calls:
 19720 ;;		Nothing
 19721 ;; This function is called by:
 19722 ;;		_main
 19723 ;; This function uses a reentrant model
 19724 ;;
 19725                           
 19726                           	psect	text77
 19727  017CFA                     __ptext77:
 19728                           	opt callstack 0
 19729  017CFA                     _check_adc_scan:
 19730                           	opt callstack 24
 19731                           
 19732                           ;daq.c: 49:  return R.done;
 19733                           
 19734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19735                           ;incstack = 0
 19736  017CFA  0060  F204  F035   	movff	_R+33,btemp	;volatile
 19737                           
 19738                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19739  017D00  0012               	return		;funcret
 19740  017D02                     __end_of_check_adc_scan:
 19741                           	opt callstack 0
 19742                           
 19743 ;; *************** function ___xxtofl *****************
 19744 ;; Defined at:
 19745 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 19746 ;; Parameters:    Size  Location     Type
 19747 ;;  sign            1  [STACK] unsigned char 
 19748 ;;  val             4  [STACK] long 
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;  arg             4  [STACK] unsigned long 
 19751 ;;  exp             1  [STACK] unsigned char 
 19752 ;; Return value:  Size  Location     Type
 19753 ;;                  4  [STACK] unsigned char 
 19754 ;; Registers used:
 19755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19756 ;; Tracked objects:
 19757 ;;		On entry : 0/4
 19758 ;;		On exit  : 0/0
 19759 ;;		Unchanged: 0/0
 19760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19765 ;;Total ram usage:        0 bytes
 19766 ;; Hardware stack levels used:    1
 19767 ;; Hardware stack levels required when called:    6
 19768 ;; This function calls:
 19769 ;;		Nothing
 19770 ;; This function is called by:
 19771 ;;		_main
 19772 ;; This function uses a reentrant model
 19773 ;;
 19774                           
 19775                           	psect	text78
 19776  01527E                     __ptext78:
 19777                           	opt callstack 0
 19778  01527E                     ___xxtofl:
 19779                           	opt callstack 0
 19780                           
 19781                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19782  01527E  0E05               	movlw	5
 19783  015280  26E1               	addwf	fsr1l,f,c
 19784  015282  0E00               	movlw	0
 19785  015284  22E2               	addwfc	fsr1h,f,c
 19786                           
 19787                           ;stkvar	_sign @ sp[(-5)+-1]
 19788                           
 19789                           ;incstack = 0
 19790  015286  0EFA               	movlw	-6
 19791  015288  50E3               	movf	plusw1,w,c
 19792  01528A  B4D8               	btfsc	status,2,c
 19793  01528C  D01D               	goto	l8413
 19794                           
 19795                           ;stkvar	_val @ sp[(-5)+-5]
 19796  01528E  0EF9               	movlw	-7
 19797  015290  AEE3               	btfss	plusw1,7,c
 19798  015292  D01A               	goto	l8413
 19799                           
 19800                           ;stkvar	_val @ sp[(-5)+-5]
 19801  015294  0EF6               	movlw	-10
 19802  015296  006F FF8C  F03D    	movff	plusw1,btemp+8
 19803  01529C  0EF7               	movlw	-9
 19804  01529E  006F FF8C  F03E    	movff	plusw1,btemp+9
 19805  0152A4  0EF8               	movlw	-8
 19806  0152A6  006F FF8C  F03F    	movff	plusw1,btemp+10
 19807  0152AC  0EF9               	movlw	-7
 19808  0152AE  006F FF8C  F040    	movff	plusw1,btemp+11
 19809  0152B4  1E3D               	comf	(btemp+8)^0,f,c
 19810  0152B6  1E3E               	comf	(btemp+9)^0,f,c
 19811  0152B8  1E3F               	comf	(btemp+10)^0,f,c
 19812  0152BA  1E40               	comf	(btemp+11)^0,f,c
 19813  0152BC  2A3D               	incf	(btemp+8)^0,f,c
 19814  0152BE  0E00               	movlw	0
 19815  0152C0  223E               	addwfc	(btemp+9)^0,f,c
 19816  0152C2  223F               	addwfc	(btemp+10)^0,f,c
 19817  0152C4  2240               	addwfc	(btemp+11)^0,f,c
 19818  0152C6  D010               	goto	L16
 19819  0152C8                     l8413:
 19820                           
 19821                           ;stkvar	_val @ sp[(-5)+-5]
 19822  0152C8  0EF6               	movlw	-10
 19823  0152CA  006F FF8C  F03D    	movff	plusw1,btemp+8
 19824  0152D0  0EF7               	movlw	-9
 19825  0152D2  006F FF8C  F03E    	movff	plusw1,btemp+9
 19826  0152D8  0EF8               	movlw	-8
 19827  0152DA  006F FF8C  F03F    	movff	plusw1,btemp+10
 19828  0152E0  0EF9               	movlw	-7
 19829  0152E2  006F FF8C  F040    	movff	plusw1,btemp+11
 19830  0152E8                     L16:
 19831                           
 19832                           ;stkvar	_arg @ sp[(-5)+0]
 19833  0152E8  0EFB               	movlw	-5
 19834  0152EA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19835  0152F0  0EFC               	movlw	-4
 19836  0152F2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 19837  0152F8  0EFD               	movlw	-3
 19838  0152FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19839  015300  0EFE               	movlw	-2
 19840  015302  0060  F103  FFE3   	movff	btemp+11,plusw1
 19841                           
 19842                           ;stkvar	_val @ sp[(-5)+-5]
 19843  015308  0EF6               	movlw	-10
 19844  01530A  50E3               	movf	plusw1,w,c
 19845  01530C  E113               	bnz	l8421
 19846  01530E  0EF7               	movlw	-9
 19847  015310  50E3               	movf	plusw1,w,c
 19848  015312  E110               	bnz	l8421
 19849  015314  0EF8               	movlw	-8
 19850  015316  50E3               	movf	plusw1,w,c
 19851  015318  E10D               	bnz	l8421
 19852  01531A  0EF9               	movlw	-7
 19853  01531C  50E3               	movf	plusw1,w,c
 19854  01531E  A4D8               	btfss	status,2,c
 19855  015320  D009               	goto	l8421
 19856  015322  0E00               	movlw	0
 19857  015324  6E35               	movwf	btemp^0,c
 19858  015326  0E00               	movlw	0
 19859  015328  6E36               	movwf	(btemp+1)^0,c
 19860  01532A  0E00               	movlw	0
 19861  01532C  6E37               	movwf	(btemp+2)^0,c
 19862  01532E  0E00               	movlw	0
 19863  015330  6E38               	movwf	(btemp+3)^0,c
 19864  015332  D0A2               	goto	l2595
 19865  015334                     l8421:
 19866  015334  0E96               	movlw	150
 19867  015336  6E40               	movwf	(btemp+11)^0,c
 19868                           
 19869                           ;stkvar	_exp @ sp[(-5)+4]
 19870  015338  0EFF               	movlw	-1
 19871  01533A  0060  F103  FFE3   	movff	btemp+11,plusw1
 19872  015340  D00B               	goto	l8425
 19873  015342                     l8423:
 19874                           
 19875                           ;stkvar	_exp @ sp[(-5)+4]
 19876  015342  0EFF               	movlw	-1
 19877  015344  2AE3               	incf	plusw1,f,c
 19878                           
 19879                           ;stkvar	_arg @ sp[(-5)+0]
 19880  015346  90D8               	bcf	status,0,c
 19881  015348  0EFE               	movlw	-2
 19882  01534A  32E3               	rrcf	plusw1,f,c
 19883  01534C  0EFD               	movlw	-3
 19884  01534E  32E3               	rrcf	plusw1,f,c
 19885  015350  0EFC               	movlw	-4
 19886  015352  32E3               	rrcf	plusw1,f,c
 19887  015354  0EFB               	movlw	-5
 19888  015356  32E3               	rrcf	plusw1,f,c
 19889  015358                     l8425:
 19890                           
 19891                           ;stkvar	_arg @ sp[(-5)+0]
 19892  015358  50E1               	movf	fsr1l,w,c
 19893  01535A  0FFB               	addlw	-5
 19894  01535C  6ED9               	movwf	fsr2l,c
 19895  01535E  50E2               	movf	fsr1h,w,c
 19896  015360  6EDA               	movwf	fsr2h,c
 19897  015362  0EFF               	movlw	255
 19898  015364  22DA               	addwfc	fsr2h,f,c
 19899  015366  52DE               	movf	postinc2,f,c
 19900  015368  52DE               	movf	postinc2,f,c
 19901  01536A  52DE               	movf	postinc2,f,c
 19902  01536C  0EFE               	movlw	254
 19903  01536E  14DD               	andwf	postdec2,w,c
 19904  015370  B4D8               	btfsc	status,2,c
 19905  015372  D018               	goto	l8433
 19906  015374  D7E6               	goto	l8423
 19907  015376                     l8427:
 19908                           
 19909                           ;stkvar	_exp @ sp[(-5)+4]
 19910  015376  0EFF               	movlw	-1
 19911  015378  2AE3               	incf	plusw1,f,c
 19912                           
 19913                           ;stkvar	_arg @ sp[(-5)+0]
 19914  01537A  50E1               	movf	fsr1l,w,c
 19915  01537C  0FFB               	addlw	-5
 19916  01537E  6ED9               	movwf	fsr2l,c
 19917  015380  50E2               	movf	fsr1h,w,c
 19918  015382  6EDA               	movwf	fsr2h,c
 19919  015384  0EFF               	movlw	255
 19920  015386  22DA               	addwfc	fsr2h,f,c
 19921  015388  2ADE               	incf	postinc2,f,c
 19922  01538A  0E00               	movlw	0
 19923  01538C  22DE               	addwfc	postinc2,f,c
 19924  01538E  22DE               	addwfc	postinc2,f,c
 19925  015390  22DE               	addwfc	postinc2,f,c
 19926                           
 19927                           ;stkvar	_arg @ sp[(-5)+0]
 19928  015392  90D8               	bcf	status,0,c
 19929  015394  0EFE               	movlw	-2
 19930  015396  32E3               	rrcf	plusw1,f,c
 19931  015398  0EFD               	movlw	-3
 19932  01539A  32E3               	rrcf	plusw1,f,c
 19933  01539C  0EFC               	movlw	-4
 19934  01539E  32E3               	rrcf	plusw1,f,c
 19935  0153A0  0EFB               	movlw	-5
 19936  0153A2  32E3               	rrcf	plusw1,f,c
 19937  0153A4                     l8433:
 19938                           
 19939                           ;stkvar	_arg @ sp[(-5)+0]
 19940  0153A4  50E1               	movf	fsr1l,w,c
 19941  0153A6  0FFB               	addlw	-5
 19942  0153A8  6ED9               	movwf	fsr2l,c
 19943  0153AA  50E2               	movf	fsr1h,w,c
 19944  0153AC  6EDA               	movwf	fsr2h,c
 19945  0153AE  0EFF               	movlw	255
 19946  0153B0  22DA               	addwfc	fsr2h,f,c
 19947  0153B2  52DE               	movf	postinc2,f,c
 19948  0153B4  52DE               	movf	postinc2,f,c
 19949  0153B6  52DE               	movf	postinc2,f,c
 19950  0153B8  0EFF               	movlw	255
 19951  0153BA  14DD               	andwf	postdec2,w,c
 19952  0153BC  B4D8               	btfsc	status,2,c
 19953  0153BE  D00C               	goto	l8437
 19954  0153C0  D7DA               	goto	l8427
 19955  0153C2                     l8435:
 19956                           
 19957                           ;stkvar	_exp @ sp[(-5)+4]
 19958  0153C2  0EFF               	movlw	-1
 19959  0153C4  06E3               	decf	plusw1,f,c
 19960                           
 19961                           ;stkvar	_arg @ sp[(-5)+0]
 19962  0153C6  90D8               	bcf	status,0,c
 19963  0153C8  0EFB               	movlw	-5
 19964  0153CA  36E3               	rlcf	plusw1,f,c
 19965  0153CC  0EFC               	movlw	-4
 19966  0153CE  36E3               	rlcf	plusw1,f,c
 19967  0153D0  0EFD               	movlw	-3
 19968  0153D2  36E3               	rlcf	plusw1,f,c
 19969  0153D4  0EFE               	movlw	-2
 19970  0153D6  36E3               	rlcf	plusw1,f,c
 19971  0153D8                     l8437:
 19972                           
 19973                           ;stkvar	_arg @ sp[(-5)+0]
 19974  0153D8  0EFD               	movlw	-3
 19975  0153DA  BEE3               	btfsc	plusw1,7,c
 19976  0153DC  D007               	goto	u7990
 19977                           
 19978                           ;stkvar	_exp @ sp[(-5)+4]
 19979  0153DE  0EFF               	movlw	-1
 19980  0153E0  006F FF8C  F035    	movff	plusw1,btemp
 19981  0153E6  0E02               	movlw	2
 19982  0153E8  6035               	cpfslt	btemp^0,c
 19983  0153EA  D7EB               	goto	l8435
 19984  0153EC                     u7990:
 19985                           
 19986                           ;stkvar	_exp @ sp[(-5)+4]
 19987  0153EC  0EFF               	movlw	-1
 19988  0153EE  B0E3               	btfsc	plusw1,0,c
 19989  0153F0  D002               	goto	l8445
 19990                           
 19991                           ;stkvar	_arg @ sp[(-5)+0]
 19992  0153F2  0EFD               	movlw	-3
 19993  0153F4  9EE3               	bcf	plusw1,7,c
 19994  0153F6                     l8445:
 19995                           
 19996                           ;stkvar	_exp @ sp[(-5)+4]
 19997  0153F6  50E1               	movf	fsr1l,w,c
 19998  0153F8  0FFF               	addlw	-1
 19999  0153FA  6ED9               	movwf	fsr2l,c
 20000  0153FC  50E2               	movf	fsr1h,w,c
 20001  0153FE  6EDA               	movwf	fsr2h,c
 20002  015400  0EFF               	movlw	255
 20003  015402  22DA               	addwfc	fsr2h,f,c
 20004  015404  90D8               	bcf	status,0,c
 20005  015406  32DF               	rrcf	indf2,f,c
 20006                           
 20007                           ;stkvar	_exp @ sp[(-5)+4]
 20008  015408  0EFF               	movlw	-1
 20009  01540A  006F FF8C  F040    	movff	plusw1,btemp+11
 20010  015410  0060  F100  F039   	movff	btemp+11,btemp+4
 20011  015416  6A3A               	clrf	(btemp+5)^0,c
 20012  015418  6A3B               	clrf	(btemp+6)^0,c
 20013  01541A  6A3C               	clrf	(btemp+7)^0,c
 20014  01541C  0060  F0E4  F03C   	movff	btemp+4,btemp+7
 20015  015422  6A3B               	clrf	(btemp+6)^0,c
 20016  015424  6A3A               	clrf	(btemp+5)^0,c
 20017  015426  6A39               	clrf	(btemp+4)^0,c
 20018                           
 20019                           ;stkvar	_arg @ sp[(-5)+0]
 20020  015428  50E1               	movf	fsr1l,w,c
 20021  01542A  0FFB               	addlw	-5
 20022  01542C  6ED9               	movwf	fsr2l,c
 20023  01542E  50E2               	movf	fsr1h,w,c
 20024  015430  6EDA               	movwf	fsr2h,c
 20025  015432  0EFF               	movlw	255
 20026  015434  22DA               	addwfc	fsr2h,f,c
 20027  015436  5039               	movf	(btemp+4)^0,w,c
 20028  015438  12DE               	iorwf	postinc2,f,c
 20029  01543A  503A               	movf	(btemp+5)^0,w,c
 20030  01543C  12DE               	iorwf	postinc2,f,c
 20031  01543E  503B               	movf	(btemp+6)^0,w,c
 20032  015440  12DE               	iorwf	postinc2,f,c
 20033  015442  503C               	movf	(btemp+7)^0,w,c
 20034  015444  12DE               	iorwf	postinc2,f,c
 20035                           
 20036                           ;stkvar	_sign @ sp[(-5)+-1]
 20037  015446  0EFA               	movlw	-6
 20038  015448  50E3               	movf	plusw1,w,c
 20039  01544A  B4D8               	btfsc	status,2,c
 20040  01544C  D005               	goto	l8455
 20041                           
 20042                           ;stkvar	_val @ sp[(-5)+-5]
 20043  01544E  0EF9               	movlw	-7
 20044  015450  AEE3               	btfss	plusw1,7,c
 20045  015452  D002               	goto	l8455
 20046                           
 20047                           ;stkvar	_arg @ sp[(-5)+0]
 20048  015454  0EFE               	movlw	-2
 20049  015456  8EE3               	bsf	plusw1,7,c
 20050  015458                     l8455:
 20051                           
 20052                           ;stkvar	_arg @ sp[(-5)+0]
 20053  015458  0EFB               	movlw	-5
 20054  01545A  006F FF8C  F035    	movff	plusw1,btemp
 20055  015460  0EFC               	movlw	-4
 20056  015462  006F FF8C  F036    	movff	plusw1,btemp+1
 20057  015468  0EFD               	movlw	-3
 20058  01546A  006F FF8C  F037    	movff	plusw1,btemp+2
 20059  015470  0EFE               	movlw	-2
 20060  015472  006F FF8C  F038    	movff	plusw1,btemp+3
 20061  015478                     l2595:
 20062                           
 20063                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 20064  015478  0EF6               	movlw	246
 20065  01547A  26E1               	addwf	fsr1l,f,c
 20066  01547C  0EFF               	movlw	255
 20067  01547E  22E2               	addwfc	fsr1h,f,c
 20068  015480  0012               	return		;funcret
 20069  015482                     __end_of___xxtofl:
 20070                           	opt callstack 0
 20071                           
 20072 ;; *************** function _SYSTEM_Initialize *****************
 20073 ;; Defined at:
 20074 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20075 ;; Parameters:    Size  Location     Type
 20076 ;;		None
 20077 ;; Auto vars:     Size  Location     Type
 20078 ;;		None
 20079 ;; Return value:  Size  Location     Type
 20080 ;;                  1  [STACK] void 
 20081 ;; Registers used:
 20082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 20083 ;; Tracked objects:
 20084 ;;		On entry : 0/0
 20085 ;;		On exit  : 3F/3C
 20086 ;;		Unchanged: 0/0
 20087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20092 ;;Total ram usage:        0 bytes
 20093 ;; Hardware stack levels used:    1
 20094 ;; Hardware stack levels required when called:    8
 20095 ;; This function calls:
 20096 ;;		_ADCC_Initialize
 20097 ;;		_CLKREF_Initialize
 20098 ;;		_DMA1_Initialize
 20099 ;;		_DMA2_Initialize
 20100 ;;		_EXT_INT_Initialize
 20101 ;;		_FVR_Initialize
 20102 ;;		_INTERRUPT_Initialize
 20103 ;;		_OSCILLATOR_Initialize
 20104 ;;		_PIN_MANAGER_Initialize
 20105 ;;		_PMD_Initialize
 20106 ;;		_PWM8_Initialize
 20107 ;;		_SPI1_Initialize
 20108 ;;		_TMR2_Initialize
 20109 ;;		_TMR5_Initialize
 20110 ;;		_TMR6_Initialize
 20111 ;;		_UART1_Initialize
 20112 ;;		_UART2_Initialize
 20113 ;; This function is called by:
 20114 ;;		_main
 20115 ;; This function uses a reentrant model
 20116 ;;
 20117                           
 20118                           	psect	text79
 20119  0172CC                     __ptext79:
 20120                           	opt callstack 0
 20121  0172CC                     _SYSTEM_Initialize:
 20122                           	opt callstack 22
 20123                           
 20124                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 20125                           
 20126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20127                           ;incstack = 0
 20128  0172CC  EC2A  F0B7         	call	_INTERRUPT_Initialize	;wreg free
 20129                           
 20130                           ; BSR set to: 57
 20131                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 20132  0172D0  EC1E  F0BE         	call	_PMD_Initialize	;wreg free
 20133                           
 20134                           ; BSR set to: 57
 20135                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20136  0172D4  EC7C  F0B5         	call	_PIN_MANAGER_Initialize	;wreg free
 20137                           
 20138                           ; BSR set to: 58
 20139                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20140  0172D8  EC13  F0BE         	call	_OSCILLATOR_Initialize	;wreg free
 20141                           
 20142                           ; BSR set to: 57
 20143                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 20144  0172DC  EC81  F0BE         	call	_FVR_Initialize	;wreg free
 20145                           
 20146                           ; BSR set to: 62
 20147                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 20148  0172E0  ECC1  F0B6         	call	_ADCC_Initialize	;wreg free
 20149                           
 20150                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 20151  0172E4  EC08  F0BE         	call	_PWM8_Initialize	;wreg free
 20152                           
 20153                           ; BSR set to: 63
 20154                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 20155  0172E8  ECE5  F0BD         	call	_TMR2_Initialize	;wreg free
 20156                           
 20157                           ; BSR set to: 57
 20158                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 20159  0172EC  ECD8  F0BA         	call	_EXT_INT_Initialize	;wreg free
 20160                           
 20161                           ; BSR set to: 57
 20162                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 20163  0172F0  EC7D  F0BB         	call	_TMR6_Initialize	;wreg free
 20164                           
 20165                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 20166  0172F4  EC89  F0B9         	call	_TMR5_Initialize	;wreg free
 20167                           
 20168                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 20169  0172F8  EC8F  F0B7         	call	_UART1_Initialize	;wreg free
 20170                           
 20171                           ; BSR set to: 57
 20172                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 20173  0172FC  ECF2  F0B7         	call	_UART2_Initialize	;wreg free
 20174                           
 20175                           ; BSR set to: 57
 20176                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 20177  017300  ECFD  F0BD         	call	_SPI1_Initialize	;wreg free
 20178                           
 20179                           ; BSR set to: 61
 20180                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 20181  017304  EC7D  F0B8         	call	_DMA2_Initialize	;wreg free
 20182                           
 20183                           ; BSR set to: 59
 20184                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 20185  017308  EC8C  F0B6         	call	_DMA1_Initialize	;wreg free
 20186                           
 20187                           ; BSR set to: 59
 20188                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 20189  01730C  EC5F  F0BE         	call	_CLKREF_Initialize	;wreg free
 20190                           
 20191                           ; BSR set to: 60
 20192                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20193  017310  0012               	return		;funcret
 20194  017312                     __end_of_SYSTEM_Initialize:
 20195                           	opt callstack 0
 20196                           
 20197 ;; *************** function _UART2_Initialize *****************
 20198 ;; Defined at:
 20199 ;;		line 78 in file "mcc_generated_files/uart2.c"
 20200 ;; Parameters:    Size  Location     Type
 20201 ;;		None
 20202 ;; Auto vars:     Size  Location     Type
 20203 ;;		None
 20204 ;; Return value:  Size  Location     Type
 20205 ;;                  1  [STACK] void 
 20206 ;; Registers used:
 20207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20208 ;; Tracked objects:
 20209 ;;		On entry : 3F/39
 20210 ;;		On exit  : 3F/39
 20211 ;;		Unchanged: 0/0
 20212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;Total ram usage:        0 bytes
 20218 ;; Hardware stack levels used:    1
 20219 ;; Hardware stack levels required when called:    7
 20220 ;; This function calls:
 20221 ;;		_UART2_SetRxInterruptHandler
 20222 ;;		_UART2_SetTxInterruptHandler
 20223 ;; This function is called by:
 20224 ;;		_SYSTEM_Initialize
 20225 ;; This function uses a reentrant model
 20226 ;;
 20227                           
 20228                           	psect	text80
 20229  016FE4                     __ptext80:
 20230                           	opt callstack 0
 20231  016FE4                     _UART2_Initialize:
 20232                           	opt callstack 22
 20233                           
 20234                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 20235                           
 20236                           ; BSR set to: 60
 20237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20238                           ;incstack = 0
 20239  016FE4  0139               	movlb	57	; () banked
 20240  016FE6  9596               	bcf	150,2,b	;volatile
 20241                           
 20242                           ; BSR set to: 57
 20243                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 20244  016FE8  0E0E               	movlw	low _UART2_Receive_ISR
 20245  016FEA  6EE6               	movwf	postinc1,c
 20246  016FEC  0E7B               	movlw	high _UART2_Receive_ISR
 20247  016FEE  6EE6               	movwf	postinc1,c
 20248  016FF0  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 20249  016FF2  6EE6               	movwf	postinc1,c
 20250  016FF4  ECE2  F0BB         	call	_UART2_SetRxInterruptHandler	;wreg free
 20251                           
 20252                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 20253  016FF8  0139               	movlb	57	; () banked
 20254  016FFA  9796               	bcf	150,3,b	;volatile
 20255                           
 20256                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 20257  016FFC  0ECE               	movlw	low _UART2_Transmit_ISR
 20258  016FFE  6EE6               	movwf	postinc1,c
 20259  017000  0E76               	movlw	high _UART2_Transmit_ISR
 20260  017002  6EE6               	movwf	postinc1,c
 20261  017004  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 20262  017006  6EE6               	movwf	postinc1,c
 20263  017008  ECCE  F0BB         	call	_UART2_SetTxInterruptHandler	;wreg free
 20264                           
 20265                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 20266  01700C  013D               	movlb	61	; () banked
 20267  01700E  6BD4               	clrf	212,b	;volatile
 20268                           
 20269                           ; BSR set to: 61
 20270                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 20271  017010  6BD6               	clrf	214,b	;volatile
 20272                           
 20273                           ; BSR set to: 61
 20274                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 20275  017012  6BD8               	clrf	216,b	;volatile
 20276                           
 20277                           ; BSR set to: 61
 20278                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 20279  017014  0EB0               	movlw	176
 20280  017016  6FDA               	movwf	218,b	;volatile
 20281                           
 20282                           ; BSR set to: 61
 20283                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 20284  017018  0E80               	movlw	128
 20285  01701A  6FDB               	movwf	219,b	;volatile
 20286                           
 20287                           ; BSR set to: 61
 20288                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 20289  01701C  6BDC               	clrf	220,b	;volatile
 20290                           
 20291                           ; BSR set to: 61
 20292                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 20293  01701E  0E82               	movlw	130
 20294  017020  6FDD               	movwf	221,b	;volatile
 20295                           
 20296                           ; BSR set to: 61
 20297                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 20298  017022  0E06               	movlw	6
 20299  017024  6FDE               	movwf	222,b	;volatile
 20300                           
 20301                           ; BSR set to: 61
 20302                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 20303  017026  6BDF               	clrf	223,b	;volatile
 20304                           
 20305                           ; BSR set to: 61
 20306                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 20307  017028  6BE0               	clrf	224,b	;volatile
 20308                           
 20309                           ; BSR set to: 61
 20310                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 20311  01702A  6BE1               	clrf	225,b	;volatile
 20312                           
 20313                           ; BSR set to: 61
 20314                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 20315  01702C  6BE2               	clrf	226,b	;volatile
 20316                           
 20317                           ; BSR set to: 61
 20318                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 20319  01702E  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 20320                           
 20321                           ; BSR set to: 61
 20322                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 20323  017030  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 20324                           
 20325                           ; BSR set to: 61
 20326                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 20327  017032  0E40               	movlw	64
 20328  017034  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 20329                           
 20330                           ; BSR set to: 61
 20331                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 20332  017036  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 20333                           
 20334                           ; BSR set to: 61
 20335                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 20336  017038  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 20337                           
 20338                           ; BSR set to: 61
 20339                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 20340  01703A  6A29               	clrf	_uart2RxCount^0,c	;volatile
 20341                           
 20342                           ; BSR set to: 61
 20343                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 20344  01703C  0139               	movlb	57	; () banked
 20345  01703E  8596               	bsf	150,2,b	;volatile
 20346                           
 20347                           ; BSR set to: 57
 20348                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20349  017040  0012               	return		;funcret
 20350  017042                     __end_of_UART2_Initialize:
 20351                           	opt callstack 0
 20352                           
 20353 ;; *************** function _UART2_SetTxInterruptHandler *****************
 20354 ;; Defined at:
 20355 ;;		line 252 in file "mcc_generated_files/uart2.c"
 20356 ;; Parameters:    Size  Location     Type
 20357 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20358 ;;		 -> UART2_Transmit_ISR(1), 
 20359 ;; Auto vars:     Size  Location     Type
 20360 ;;		None
 20361 ;; Return value:  Size  Location     Type
 20362 ;;                  1  [STACK] void 
 20363 ;; Registers used:
 20364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20365 ;; Tracked objects:
 20366 ;;		On entry : 3F/39
 20367 ;;		On exit  : 0/0
 20368 ;;		Unchanged: 0/0
 20369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20374 ;;Total ram usage:        0 bytes
 20375 ;; Hardware stack levels used:    1
 20376 ;; Hardware stack levels required when called:    6
 20377 ;; This function calls:
 20378 ;;		Nothing
 20379 ;; This function is called by:
 20380 ;;		_UART2_Initialize
 20381 ;; This function uses a reentrant model
 20382 ;;
 20383                           
 20384                           	psect	text81
 20385  01779C                     __ptext81:
 20386                           	opt callstack 0
 20387  01779C                     _UART2_SetTxInterruptHandler:
 20388                           	opt callstack 22
 20389                           
 20390                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 20391                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20392                           
 20393                           ; BSR set to: 57
 20394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20395                           ;incstack = 0
 20396  01779C  50E1               	movf	fsr1l,w,c
 20397  01779E  0FFD               	addlw	-3
 20398  0177A0  6ED9               	movwf	fsr2l,c
 20399  0177A2  50E2               	movf	fsr1h,w,c
 20400  0177A4  6EDA               	movwf	fsr2h,c
 20401  0177A6  0EFF               	movlw	255
 20402  0177A8  22DA               	addwfc	fsr2h,f,c
 20403  0177AA  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 20404  0177B0  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 20405  0177B6  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 20406                           
 20407                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20408  0177BC  52E5               	movf	postdec1,f,c
 20409  0177BE  52E5               	movf	postdec1,f,c
 20410  0177C0  52E5               	movf	postdec1,f,c
 20411  0177C2  0012               	return		;funcret
 20412  0177C4                     __end_of_UART2_SetTxInterruptHandler:
 20413                           	opt callstack 0
 20414                           
 20415 ;; *************** function _UART2_SetRxInterruptHandler *****************
 20416 ;; Defined at:
 20417 ;;		line 248 in file "mcc_generated_files/uart2.c"
 20418 ;; Parameters:    Size  Location     Type
 20419 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20420 ;;		 -> UART2_Receive_ISR(1), 
 20421 ;; Auto vars:     Size  Location     Type
 20422 ;;		None
 20423 ;; Return value:  Size  Location     Type
 20424 ;;                  1  [STACK] void 
 20425 ;; Registers used:
 20426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20427 ;; Tracked objects:
 20428 ;;		On entry : 3F/39
 20429 ;;		On exit  : 0/0
 20430 ;;		Unchanged: 0/0
 20431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20436 ;;Total ram usage:        0 bytes
 20437 ;; Hardware stack levels used:    1
 20438 ;; Hardware stack levels required when called:    6
 20439 ;; This function calls:
 20440 ;;		Nothing
 20441 ;; This function is called by:
 20442 ;;		_UART2_Initialize
 20443 ;; This function uses a reentrant model
 20444 ;;
 20445                           
 20446                           	psect	text82
 20447  0177C4                     __ptext82:
 20448                           	opt callstack 0
 20449  0177C4                     _UART2_SetRxInterruptHandler:
 20450                           	opt callstack 22
 20451                           
 20452                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 20453                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20454                           
 20455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20456                           ;incstack = 0
 20457  0177C4  50E1               	movf	fsr1l,w,c
 20458  0177C6  0FFD               	addlw	-3
 20459  0177C8  6ED9               	movwf	fsr2l,c
 20460  0177CA  50E2               	movf	fsr1h,w,c
 20461  0177CC  6EDA               	movwf	fsr2h,c
 20462  0177CE  0EFF               	movlw	255
 20463  0177D0  22DA               	addwfc	fsr2h,f,c
 20464  0177D2  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 20465  0177D8  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 20466  0177DE  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 20467                           
 20468                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20469  0177E4  52E5               	movf	postdec1,f,c
 20470  0177E6  52E5               	movf	postdec1,f,c
 20471  0177E8  52E5               	movf	postdec1,f,c
 20472  0177EA  0012               	return		;funcret
 20473  0177EC                     __end_of_UART2_SetRxInterruptHandler:
 20474                           	opt callstack 0
 20475                           
 20476 ;; *************** function _UART1_Initialize *****************
 20477 ;; Defined at:
 20478 ;;		line 79 in file "mcc_generated_files/uart1.c"
 20479 ;; Parameters:    Size  Location     Type
 20480 ;;		None
 20481 ;; Auto vars:     Size  Location     Type
 20482 ;;		None
 20483 ;; Return value:  Size  Location     Type
 20484 ;;                  1  [STACK] void 
 20485 ;; Registers used:
 20486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20487 ;; Tracked objects:
 20488 ;;		On entry : 0/39
 20489 ;;		On exit  : 3F/39
 20490 ;;		Unchanged: 0/0
 20491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20496 ;;Total ram usage:        0 bytes
 20497 ;; Hardware stack levels used:    1
 20498 ;; Hardware stack levels required when called:    7
 20499 ;; This function calls:
 20500 ;;		_UART1_SetRxInterruptHandler
 20501 ;;		_UART1_SetTxInterruptHandler
 20502 ;; This function is called by:
 20503 ;;		_SYSTEM_Initialize
 20504 ;; This function uses a reentrant model
 20505 ;;
 20506                           
 20507                           	psect	text83
 20508  016F1E                     __ptext83:
 20509                           	opt callstack 0
 20510  016F1E                     _UART1_Initialize:
 20511                           	opt callstack 22
 20512                           
 20513                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 20514                           
 20515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20516                           ;incstack = 0
 20517  016F1E  0139               	movlb	57	; () banked
 20518  016F20  9793               	bcf	147,3,b	;volatile
 20519                           
 20520                           ; BSR set to: 57
 20521                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 20522  016F22  0EF0               	movlw	low _UART1_Receive_ISR
 20523  016F24  6EE6               	movwf	postinc1,c
 20524  016F26  0E7A               	movlw	high _UART1_Receive_ISR
 20525  016F28  6EE6               	movwf	postinc1,c
 20526  016F2A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 20527  016F2C  6EE6               	movwf	postinc1,c
 20528  016F2E  EC0A  F0BC         	call	_UART1_SetRxInterruptHandler	;wreg free
 20529                           
 20530                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 20531  016F32  0139               	movlb	57	; () banked
 20532  016F34  9993               	bcf	147,4,b	;volatile
 20533                           
 20534                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 20535  016F36  0EA2               	movlw	low _UART1_Transmit_ISR
 20536  016F38  6EE6               	movwf	postinc1,c
 20537  016F3A  0E76               	movlw	high _UART1_Transmit_ISR
 20538  016F3C  6EE6               	movwf	postinc1,c
 20539  016F3E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 20540  016F40  6EE6               	movwf	postinc1,c
 20541  016F42  ECF6  F0BB         	call	_UART1_SetTxInterruptHandler	;wreg free
 20542                           
 20543                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 20544  016F46  013D               	movlb	61	; () banked
 20545  016F48  6BEC               	clrf	236,b	;volatile
 20546                           
 20547                           ; BSR set to: 61
 20548                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 20549  016F4A  6BED               	clrf	237,b	;volatile
 20550                           
 20551                           ; BSR set to: 61
 20552                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 20553  016F4C  6BEE               	clrf	238,b	;volatile
 20554                           
 20555                           ; BSR set to: 61
 20556                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 20557  016F4E  6BEF               	clrf	239,b	;volatile
 20558                           
 20559                           ; BSR set to: 61
 20560                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 20561  016F50  6BF0               	clrf	240,b	;volatile
 20562                           
 20563                           ; BSR set to: 61
 20564                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 20565  016F52  6BF1               	clrf	241,b	;volatile
 20566                           
 20567                           ; BSR set to: 61
 20568                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 20569  016F54  0EB0               	movlw	176
 20570  016F56  6FF2               	movwf	242,b	;volatile
 20571                           
 20572                           ; BSR set to: 61
 20573                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 20574  016F58  0E80               	movlw	128
 20575  016F5A  6FF3               	movwf	243,b	;volatile
 20576                           
 20577                           ; BSR set to: 61
 20578                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 20579  016F5C  6BF4               	clrf	244,b	;volatile
 20580                           
 20581                           ; BSR set to: 61
 20582                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 20583  016F5E  0E82               	movlw	130
 20584  016F60  6FF5               	movwf	245,b	;volatile
 20585                           
 20586                           ; BSR set to: 61
 20587                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 20588  016F62  0E06               	movlw	6
 20589  016F64  6FF6               	movwf	246,b	;volatile
 20590                           
 20591                           ; BSR set to: 61
 20592                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 20593  016F66  6BF7               	clrf	247,b	;volatile
 20594                           
 20595                           ; BSR set to: 61
 20596                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 20597  016F68  6BF8               	clrf	248,b	;volatile
 20598                           
 20599                           ; BSR set to: 61
 20600                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 20601  016F6A  6BF9               	clrf	249,b	;volatile
 20602                           
 20603                           ; BSR set to: 61
 20604                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 20605  016F6C  6BFA               	clrf	250,b	;volatile
 20606                           
 20607                           ; BSR set to: 61
 20608                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 20609  016F6E  6A34               	clrf	_uart1TxHead^0,c	;volatile
 20610                           
 20611                           ; BSR set to: 61
 20612                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 20613  016F70  6A33               	clrf	_uart1TxTail^0,c	;volatile
 20614                           
 20615                           ; BSR set to: 61
 20616                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 20617  016F72  0E40               	movlw	64
 20618  016F74  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 20619                           
 20620                           ; BSR set to: 61
 20621                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 20622  016F76  6A31               	clrf	_uart1RxHead^0,c	;volatile
 20623                           
 20624                           ; BSR set to: 61
 20625                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 20626  016F78  6A30               	clrf	_uart1RxTail^0,c	;volatile
 20627                           
 20628                           ; BSR set to: 61
 20629                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 20630  016F7A  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 20631                           
 20632                           ; BSR set to: 61
 20633                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 20634  016F7C  0139               	movlb	57	; () banked
 20635  016F7E  8793               	bsf	147,3,b	;volatile
 20636                           
 20637                           ; BSR set to: 57
 20638                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20639  016F80  0012               	return		;funcret
 20640  016F82                     __end_of_UART1_Initialize:
 20641                           	opt callstack 0
 20642                           
 20643 ;; *************** function _UART1_SetTxInterruptHandler *****************
 20644 ;; Defined at:
 20645 ;;		line 246 in file "mcc_generated_files/uart1.c"
 20646 ;; Parameters:    Size  Location     Type
 20647 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20648 ;;		 -> UART1_Transmit_ISR(1), 
 20649 ;; Auto vars:     Size  Location     Type
 20650 ;;		None
 20651 ;; Return value:  Size  Location     Type
 20652 ;;                  1  [STACK] void 
 20653 ;; Registers used:
 20654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20655 ;; Tracked objects:
 20656 ;;		On entry : 3F/39
 20657 ;;		On exit  : 0/0
 20658 ;;		Unchanged: 0/0
 20659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20664 ;;Total ram usage:        0 bytes
 20665 ;; Hardware stack levels used:    1
 20666 ;; Hardware stack levels required when called:    6
 20667 ;; This function calls:
 20668 ;;		Nothing
 20669 ;; This function is called by:
 20670 ;;		_UART1_Initialize
 20671 ;; This function uses a reentrant model
 20672 ;;
 20673                           
 20674                           	psect	text84
 20675  0177EC                     __ptext84:
 20676                           	opt callstack 0
 20677  0177EC                     _UART1_SetTxInterruptHandler:
 20678                           	opt callstack 22
 20679                           
 20680                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 20681                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20682                           
 20683                           ; BSR set to: 57
 20684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20685                           ;incstack = 0
 20686  0177EC  50E1               	movf	fsr1l,w,c
 20687  0177EE  0FFD               	addlw	-3
 20688  0177F0  6ED9               	movwf	fsr2l,c
 20689  0177F2  50E2               	movf	fsr1h,w,c
 20690  0177F4  6EDA               	movwf	fsr2h,c
 20691  0177F6  0EFF               	movlw	255
 20692  0177F8  22DA               	addwfc	fsr2h,f,c
 20693  0177FA  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 20694  017800  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 20695  017806  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 20696                           
 20697                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20698  01780C  52E5               	movf	postdec1,f,c
 20699  01780E  52E5               	movf	postdec1,f,c
 20700  017810  52E5               	movf	postdec1,f,c
 20701  017812  0012               	return		;funcret
 20702  017814                     __end_of_UART1_SetTxInterruptHandler:
 20703                           	opt callstack 0
 20704                           
 20705 ;; *************** function _UART1_SetRxInterruptHandler *****************
 20706 ;; Defined at:
 20707 ;;		line 241 in file "mcc_generated_files/uart1.c"
 20708 ;; Parameters:    Size  Location     Type
 20709 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20710 ;;		 -> UART1_Receive_ISR(1), 
 20711 ;; Auto vars:     Size  Location     Type
 20712 ;;		None
 20713 ;; Return value:  Size  Location     Type
 20714 ;;                  1  [STACK] void 
 20715 ;; Registers used:
 20716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20717 ;; Tracked objects:
 20718 ;;		On entry : 3F/39
 20719 ;;		On exit  : 0/0
 20720 ;;		Unchanged: 0/0
 20721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20726 ;;Total ram usage:        0 bytes
 20727 ;; Hardware stack levels used:    1
 20728 ;; Hardware stack levels required when called:    6
 20729 ;; This function calls:
 20730 ;;		Nothing
 20731 ;; This function is called by:
 20732 ;;		_UART1_Initialize
 20733 ;; This function uses a reentrant model
 20734 ;;
 20735                           
 20736                           	psect	text85
 20737  017814                     __ptext85:
 20738                           	opt callstack 0
 20739  017814                     _UART1_SetRxInterruptHandler:
 20740                           	opt callstack 22
 20741                           
 20742                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 20743                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20744                           
 20745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20746                           ;incstack = 0
 20747  017814  50E1               	movf	fsr1l,w,c
 20748  017816  0FFD               	addlw	-3
 20749  017818  6ED9               	movwf	fsr2l,c
 20750  01781A  50E2               	movf	fsr1h,w,c
 20751  01781C  6EDA               	movwf	fsr2h,c
 20752  01781E  0EFF               	movlw	255
 20753  017820  22DA               	addwfc	fsr2h,f,c
 20754  017822  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 20755  017828  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 20756  01782E  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 20757                           
 20758                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20759  017834  52E5               	movf	postdec1,f,c
 20760  017836  52E5               	movf	postdec1,f,c
 20761  017838  52E5               	movf	postdec1,f,c
 20762  01783A  0012               	return		;funcret
 20763  01783C                     __end_of_UART1_SetRxInterruptHandler:
 20764                           	opt callstack 0
 20765                           
 20766 ;; *************** function _TMR6_Initialize *****************
 20767 ;; Defined at:
 20768 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;		None
 20771 ;; Auto vars:     Size  Location     Type
 20772 ;;		None
 20773 ;; Return value:  Size  Location     Type
 20774 ;;                  1  [STACK] void 
 20775 ;; Registers used:
 20776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20777 ;; Tracked objects:
 20778 ;;		On entry : 3F/39
 20779 ;;		On exit  : 0/0
 20780 ;;		Unchanged: 0/0
 20781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20786 ;;Total ram usage:        0 bytes
 20787 ;; Hardware stack levels used:    1
 20788 ;; Hardware stack levels required when called:    7
 20789 ;; This function calls:
 20790 ;;		_TMR6_SetInterruptHandler
 20791 ;; This function is called by:
 20792 ;;		_SYSTEM_Initialize
 20793 ;; This function uses a reentrant model
 20794 ;;
 20795                           
 20796                           	psect	text86
 20797  0176FA                     __ptext86:
 20798                           	opt callstack 0
 20799  0176FA                     _TMR6_Initialize:
 20800                           	opt callstack 22
 20801                           
 20802                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 20803                           
 20804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20805                           ;incstack = 0
 20806  0176FA  0E01               	movlw	1
 20807  0176FC  6E96               	movwf	150,c	;volatile
 20808                           
 20809                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 20810  0176FE  6A95               	clrf	149,c	;volatile
 20811                           
 20812                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 20813  017700  6A97               	clrf	151,c	;volatile
 20814                           
 20815                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 20816  017702  0E7C               	movlw	124
 20817  017704  6E93               	movwf	147,c	;volatile
 20818                           
 20819                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 20820  017706  6A92               	clrf	146,c	;volatile
 20821                           
 20822                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 20823  017708  0139               	movlb	57	; () banked
 20824  01770A  91A9               	bcf	169,0,b	;volatile
 20825                           
 20826                           ; BSR set to: 57
 20827                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 20828  01770C  8199               	bsf	153,0,b	;volatile
 20829                           
 20830                           ; BSR set to: 57
 20831                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 20832  01770E  0E58               	movlw	low _TMR6_DefaultInterruptHandler
 20833  017710  6EE6               	movwf	postinc1,c
 20834  017712  0E73               	movlw	high _TMR6_DefaultInterruptHandler
 20835  017714  6EE6               	movwf	postinc1,c
 20836  017716  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 20837  017718  6EE6               	movwf	postinc1,c
 20838  01771A  EC1E  F0BC         	call	_TMR6_SetInterruptHandler	;wreg free
 20839                           
 20840                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 20841  01771E  0EE0               	movlw	224
 20842  017720  6E94               	movwf	148,c	;volatile
 20843                           
 20844                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20845  017722  0012               	return		;funcret
 20846  017724                     __end_of_TMR6_Initialize:
 20847                           	opt callstack 0
 20848                           
 20849 ;; *************** function _TMR6_SetInterruptHandler *****************
 20850 ;; Defined at:
 20851 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20854 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 20855 ;; Auto vars:     Size  Location     Type
 20856 ;;		None
 20857 ;; Return value:  Size  Location     Type
 20858 ;;                  1  [STACK] void 
 20859 ;; Registers used:
 20860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20861 ;; Tracked objects:
 20862 ;;		On entry : 3F/39
 20863 ;;		On exit  : 0/0
 20864 ;;		Unchanged: 0/0
 20865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20870 ;;Total ram usage:        0 bytes
 20871 ;; Hardware stack levels used:    1
 20872 ;; Hardware stack levels required when called:    6
 20873 ;; This function calls:
 20874 ;;		Nothing
 20875 ;; This function is called by:
 20876 ;;		_TMR6_Initialize
 20877 ;; This function uses a reentrant model
 20878 ;;
 20879                           
 20880                           	psect	text87
 20881  01783C                     __ptext87:
 20882                           	opt callstack 0
 20883  01783C                     _TMR6_SetInterruptHandler:
 20884                           	opt callstack 22
 20885                           
 20886                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 20887                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20888                           
 20889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20890                           ;incstack = 0
 20891  01783C  50E1               	movf	fsr1l,w,c
 20892  01783E  0FFD               	addlw	-3
 20893  017840  6ED9               	movwf	fsr2l,c
 20894  017842  50E2               	movf	fsr1h,w,c
 20895  017844  6EDA               	movwf	fsr2h,c
 20896  017846  0EFF               	movlw	255
 20897  017848  22DA               	addwfc	fsr2h,f,c
 20898  01784A  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 20899  017850  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 20900  017856  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 20901                           
 20902                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 20903  01785C  52E5               	movf	postdec1,f,c
 20904  01785E  52E5               	movf	postdec1,f,c
 20905  017860  52E5               	movf	postdec1,f,c
 20906  017862  0012               	return		;funcret
 20907  017864                     __end_of_TMR6_SetInterruptHandler:
 20908                           	opt callstack 0
 20909                           
 20910 ;; *************** function _TMR5_Initialize *****************
 20911 ;; Defined at:
 20912 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 20913 ;; Parameters:    Size  Location     Type
 20914 ;;		None
 20915 ;; Auto vars:     Size  Location     Type
 20916 ;;		None
 20917 ;; Return value:  Size  Location     Type
 20918 ;;                  1  [STACK] void 
 20919 ;; Registers used:
 20920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 20921 ;; Tracked objects:
 20922 ;;		On entry : 0/39
 20923 ;;		On exit  : 0/0
 20924 ;;		Unchanged: 0/0
 20925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20930 ;;Total ram usage:        0 bytes
 20931 ;; Hardware stack levels used:    1
 20932 ;; Hardware stack levels required when called:    7
 20933 ;; This function calls:
 20934 ;;		_TMR5_SetInterruptHandler
 20935 ;; This function is called by:
 20936 ;;		_SYSTEM_Initialize
 20937 ;; This function uses a reentrant model
 20938 ;;
 20939                           
 20940                           	psect	text88
 20941  017312                     __ptext88:
 20942                           	opt callstack 0
 20943  017312                     _TMR5_Initialize:
 20944                           	opt callstack 22
 20945                           
 20946                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 20947                           
 20948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20949                           ;incstack = 0
 20950  017312  6A9B               	clrf	155,c	;volatile
 20951                           
 20952                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 20953  017314  6A9C               	clrf	156,c	;volatile
 20954                           
 20955                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 20956  017316  0E01               	movlw	1
 20957  017318  6E9D               	movwf	157,c	;volatile
 20958                           
 20959                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 20960  01731A  0E63               	movlw	99
 20961  01731C  6E99               	movwf	153,c	;volatile
 20962                           
 20963                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 20964  01731E  0EC0               	movlw	192
 20965  017320  6E98               	movwf	152,c	;volatile
 20966                           
 20967                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 20968  017322  5098               	movf	152,w,c	;volatile
 20969  017324  006F FE64  F035    	movff	16281,btemp	;volatile
 20970  01732A  6A36               	clrf	(btemp+1)^0,c
 20971  01732C  0060  F0D4  F036   	movff	btemp,btemp+1
 20972  017332  6A35               	clrf	btemp^0,c
 20973  017334  1035               	iorwf	btemp^0,w,c
 20974  017336  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 20975  017338  5036               	movf	(btemp+1)^0,w,c
 20976  01733A  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 20977                           
 20978                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 20979  01733C  0139               	movlb	57	; () banked
 20980  01733E  9DA8               	bcf	168,6,b	;volatile
 20981                           
 20982                           ; BSR set to: 57
 20983                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 20984  017340  8D98               	bsf	152,6,b	;volatile
 20985                           
 20986                           ; BSR set to: 57
 20987                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 20988  017342  0E7E               	movlw	low _TMR5_DefaultInterruptHandler
 20989  017344  6EE6               	movwf	postinc1,c
 20990  017346  0E7B               	movlw	high _TMR5_DefaultInterruptHandler
 20991  017348  6EE6               	movwf	postinc1,c
 20992  01734A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 20993  01734C  6EE6               	movwf	postinc1,c
 20994  01734E  EC32  F0BC         	call	_TMR5_SetInterruptHandler	;wreg free
 20995                           
 20996                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 20997  017352  0E31               	movlw	49
 20998  017354  6E9A               	movwf	154,c	;volatile
 20999                           
 21000                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21001  017356  0012               	return		;funcret
 21002  017358                     __end_of_TMR5_Initialize:
 21003                           	opt callstack 0
 21004                           
 21005 ;; *************** function _TMR5_SetInterruptHandler *****************
 21006 ;; Defined at:
 21007 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21008 ;; Parameters:    Size  Location     Type
 21009 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21010 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21011 ;; Auto vars:     Size  Location     Type
 21012 ;;		None
 21013 ;; Return value:  Size  Location     Type
 21014 ;;                  1  [STACK] void 
 21015 ;; Registers used:
 21016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21017 ;; Tracked objects:
 21018 ;;		On entry : 3F/39
 21019 ;;		On exit  : 0/0
 21020 ;;		Unchanged: 0/0
 21021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21026 ;;Total ram usage:        0 bytes
 21027 ;; Hardware stack levels used:    1
 21028 ;; Hardware stack levels required when called:    6
 21029 ;; This function calls:
 21030 ;;		Nothing
 21031 ;; This function is called by:
 21032 ;;		_TMR5_Initialize
 21033 ;; This function uses a reentrant model
 21034 ;;
 21035                           
 21036                           	psect	text89
 21037  017864                     __ptext89:
 21038                           	opt callstack 0
 21039  017864                     _TMR5_SetInterruptHandler:
 21040                           	opt callstack 22
 21041                           
 21042                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21043                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21044                           
 21045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21046                           ;incstack = 0
 21047  017864  50E1               	movf	fsr1l,w,c
 21048  017866  0FFD               	addlw	-3
 21049  017868  6ED9               	movwf	fsr2l,c
 21050  01786A  50E2               	movf	fsr1h,w,c
 21051  01786C  6EDA               	movwf	fsr2h,c
 21052  01786E  0EFF               	movlw	255
 21053  017870  22DA               	addwfc	fsr2h,f,c
 21054  017872  006F FF78  F0B2    	movff	postinc2,_TMR5_InterruptHandler
 21055  017878  006F FF78  F0B3    	movff	postinc2,_TMR5_InterruptHandler+1
 21056  01787E  006F FF74  F0B4    	movff	postdec2,_TMR5_InterruptHandler+2
 21057                           
 21058                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21059  017884  52E5               	movf	postdec1,f,c
 21060  017886  52E5               	movf	postdec1,f,c
 21061  017888  52E5               	movf	postdec1,f,c
 21062  01788A  0012               	return		;funcret
 21063  01788C                     __end_of_TMR5_SetInterruptHandler:
 21064                           	opt callstack 0
 21065                           
 21066 ;; *************** function _TMR2_Initialize *****************
 21067 ;; Defined at:
 21068 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21069 ;; Parameters:    Size  Location     Type
 21070 ;;		None
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;		None
 21073 ;; Return value:  Size  Location     Type
 21074 ;;                  1  [STACK] void 
 21075 ;; Registers used:
 21076 ;;		wreg, status,2
 21077 ;; Tracked objects:
 21078 ;;		On entry : 3F/3F
 21079 ;;		On exit  : 3F/39
 21080 ;;		Unchanged: 0/0
 21081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21086 ;;Total ram usage:        0 bytes
 21087 ;; Hardware stack levels used:    1
 21088 ;; Hardware stack levels required when called:    6
 21089 ;; This function calls:
 21090 ;;		Nothing
 21091 ;; This function is called by:
 21092 ;;		_SYSTEM_Initialize
 21093 ;; This function uses a reentrant model
 21094 ;;
 21095                           
 21096                           	psect	text90
 21097  017BCA                     __ptext90:
 21098                           	opt callstack 0
 21099  017BCA                     _TMR2_Initialize:
 21100                           	opt callstack 23
 21101                           
 21102                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 21103                           
 21104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21105                           ;incstack = 0
 21106  017BCA  0E01               	movlw	1
 21107  017BCC  6EAE               	movwf	174,c	;volatile
 21108                           
 21109                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 21110  017BCE  6AAD               	clrf	173,c	;volatile
 21111                           
 21112                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 21113  017BD0  6AAF               	clrf	175,c	;volatile
 21114                           
 21115                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 21116  017BD2  0E63               	movlw	99
 21117  017BD4  6EAB               	movwf	171,c	;volatile
 21118                           
 21119                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 21120  017BD6  6AAA               	clrf	170,c	;volatile
 21121                           
 21122                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 21123  017BD8  0139               	movlb	57	; () banked
 21124  017BDA  95A4               	bcf	164,2,b	;volatile
 21125                           
 21126                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 21127  017BDC  0EC0               	movlw	192
 21128  017BDE  6EAC               	movwf	172,c	;volatile
 21129                           
 21130                           ; BSR set to: 57
 21131                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21132  017BE0  0012               	return		;funcret
 21133  017BE2                     __end_of_TMR2_Initialize:
 21134                           	opt callstack 0
 21135                           
 21136 ;; *************** function _SPI1_Initialize *****************
 21137 ;; Defined at:
 21138 ;;		line 64 in file "mcc_generated_files/spi1.c"
 21139 ;; Parameters:    Size  Location     Type
 21140 ;;		None
 21141 ;; Auto vars:     Size  Location     Type
 21142 ;;		None
 21143 ;; Return value:  Size  Location     Type
 21144 ;;                  1  [STACK] void 
 21145 ;; Registers used:
 21146 ;;		wreg, status,2
 21147 ;; Tracked objects:
 21148 ;;		On entry : 3F/39
 21149 ;;		On exit  : 3F/3D
 21150 ;;		Unchanged: 0/0
 21151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21156 ;;Total ram usage:        0 bytes
 21157 ;; Hardware stack levels used:    1
 21158 ;; Hardware stack levels required when called:    6
 21159 ;; This function calls:
 21160 ;;		Nothing
 21161 ;; This function is called by:
 21162 ;;		_SYSTEM_Initialize
 21163 ;; This function uses a reentrant model
 21164 ;;
 21165                           
 21166                           	psect	text91
 21167  017BFA                     __ptext91:
 21168                           	opt callstack 0
 21169  017BFA                     _SPI1_Initialize:
 21170                           	opt callstack 23
 21171                           
 21172                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 21173                           
 21174                           ; BSR set to: 57
 21175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21176                           ;incstack = 0
 21177  017BFA  0E40               	movlw	64
 21178  017BFC  013D               	movlb	61	; () banked
 21179  017BFE  6F15               	movwf	21,b	;volatile
 21180                           
 21181                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 21182  017C00  0E03               	movlw	3
 21183  017C02  6F16               	movwf	22,b	;volatile
 21184                           
 21185                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 21186  017C04  0E4F               	movlw	79
 21187  017C06  6F19               	movwf	25,b	;volatile
 21188                           
 21189                           ; BSR set to: 61
 21190                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 21191  017C08  6B1C               	clrf	28,b	;volatile
 21192                           
 21193                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 21194  017C0A  0E83               	movlw	131
 21195  017C0C  6F14               	movwf	20,b	;volatile
 21196                           
 21197                           ; BSR set to: 61
 21198                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21199  017C0E  0012               	return		;funcret
 21200  017C10                     __end_of_SPI1_Initialize:
 21201                           	opt callstack 0
 21202                           
 21203 ;; *************** function _PWM8_Initialize *****************
 21204 ;; Defined at:
 21205 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 21206 ;; Parameters:    Size  Location     Type
 21207 ;;		None
 21208 ;; Auto vars:     Size  Location     Type
 21209 ;;		None
 21210 ;; Return value:  Size  Location     Type
 21211 ;;                  1  [STACK] void 
 21212 ;; Registers used:
 21213 ;;		wreg, status,2
 21214 ;; Tracked objects:
 21215 ;;		On entry : 0/3E
 21216 ;;		On exit  : 3F/3F
 21217 ;;		Unchanged: 0/0
 21218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21223 ;;Total ram usage:        0 bytes
 21224 ;; Hardware stack levels used:    1
 21225 ;; Hardware stack levels required when called:    6
 21226 ;; This function calls:
 21227 ;;		Nothing
 21228 ;; This function is called by:
 21229 ;;		_SYSTEM_Initialize
 21230 ;; This function uses a reentrant model
 21231 ;;
 21232                           
 21233                           	psect	text92
 21234  017C10                     __ptext92:
 21235                           	opt callstack 0
 21236  017C10                     _PWM8_Initialize:
 21237                           	opt callstack 23
 21238                           
 21239                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 21240                           
 21241                           ; BSR set to: 61
 21242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21243                           ;incstack = 0
 21244  017C10  0E80               	movlw	128
 21245  017C12  6E62               	movwf	98,c	;volatile
 21246                           
 21247                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 21248  017C14  6A61               	clrf	97,c	;volatile
 21249                           
 21250                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 21251  017C16  0E40               	movlw	64
 21252  017C18  6E60               	movwf	96,c	;volatile
 21253                           
 21254                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 21255  017C1A  013F               	movlb	63	; () banked
 21256  017C1C  515F               	movf	95,w,b	;volatile
 21257  017C1E  0B3F               	andlw	-193
 21258  017C20  0940               	iorlw	64
 21259  017C22  6F5F               	movwf	95,b	;volatile
 21260                           
 21261                           ; BSR set to: 63
 21262                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21263  017C24  0012               	return		;funcret
 21264  017C26                     __end_of_PWM8_Initialize:
 21265                           	opt callstack 0
 21266                           
 21267 ;; *************** function _PMD_Initialize *****************
 21268 ;; Defined at:
 21269 ;;		line 89 in file "mcc_generated_files/mcc.c"
 21270 ;; Parameters:    Size  Location     Type
 21271 ;;		None
 21272 ;; Auto vars:     Size  Location     Type
 21273 ;;		None
 21274 ;; Return value:  Size  Location     Type
 21275 ;;                  1  [STACK] void 
 21276 ;; Registers used:
 21277 ;;		None
 21278 ;; Tracked objects:
 21279 ;;		On entry : 3F/39
 21280 ;;		On exit  : 3F/39
 21281 ;;		Unchanged: 0/0
 21282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21287 ;;Total ram usage:        0 bytes
 21288 ;; Hardware stack levels used:    1
 21289 ;; Hardware stack levels required when called:    6
 21290 ;; This function calls:
 21291 ;;		Nothing
 21292 ;; This function is called by:
 21293 ;;		_SYSTEM_Initialize
 21294 ;; This function uses a reentrant model
 21295 ;;
 21296                           
 21297                           	psect	text93
 21298  017C3C                     __ptext93:
 21299                           	opt callstack 0
 21300  017C3C                     _PMD_Initialize:
 21301                           	opt callstack 23
 21302                           
 21303                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 21304                           
 21305                           ; BSR set to: 63
 21306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21307                           ;incstack = 0
 21308  017C3C  0139               	movlb	57	; () banked
 21309  017C3E  6BC0               	clrf	192,b	;volatile
 21310                           
 21311                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 21312  017C40  6BC1               	clrf	193,b	;volatile
 21313                           
 21314                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 21315  017C42  6BC2               	clrf	194,b	;volatile
 21316                           
 21317                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 21318  017C44  6BC3               	clrf	195,b	;volatile
 21319                           
 21320                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 21321  017C46  6BC4               	clrf	196,b	;volatile
 21322                           
 21323                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 21324  017C48  6BC5               	clrf	197,b	;volatile
 21325                           
 21326                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 21327  017C4A  6BC6               	clrf	198,b	;volatile
 21328                           
 21329                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 21330  017C4C  6BC7               	clrf	199,b	;volatile
 21331                           
 21332                           ; BSR set to: 57
 21333                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21334  017C4E  0012               	return		;funcret
 21335  017C50                     __end_of_PMD_Initialize:
 21336                           	opt callstack 0
 21337                           
 21338 ;; *************** function _PIN_MANAGER_Initialize *****************
 21339 ;; Defined at:
 21340 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21341 ;; Parameters:    Size  Location     Type
 21342 ;;		None
 21343 ;; Auto vars:     Size  Location     Type
 21344 ;;		None
 21345 ;; Return value:  Size  Location     Type
 21346 ;;                  1  [STACK] void 
 21347 ;; Registers used:
 21348 ;;		wreg, status,2
 21349 ;; Tracked objects:
 21350 ;;		On entry : 3F/39
 21351 ;;		On exit  : 3F/3A
 21352 ;;		Unchanged: 0/0
 21353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21358 ;;Total ram usage:        0 bytes
 21359 ;; Hardware stack levels used:    1
 21360 ;; Hardware stack levels required when called:    6
 21361 ;; This function calls:
 21362 ;;		Nothing
 21363 ;; This function is called by:
 21364 ;;		_SYSTEM_Initialize
 21365 ;; This function uses a reentrant model
 21366 ;;
 21367                           
 21368                           	psect	text94
 21369  016AF8                     __ptext94:
 21370                           	opt callstack 0
 21371  016AF8                     _PIN_MANAGER_Initialize:
 21372                           	opt callstack 23
 21373                           
 21374                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 21375                           
 21376                           ; BSR set to: 57
 21377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21378                           ;incstack = 0
 21379  016AF8  0E07               	movlw	7
 21380  016AFA  6EBE               	movwf	190,c	;volatile
 21381                           
 21382                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 21383  016AFC  6ABD               	clrf	189,c	;volatile
 21384                           
 21385                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 21386  016AFE  6ABA               	clrf	186,c	;volatile
 21387                           
 21388                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 21389  016B00  6ABF               	clrf	191,c	;volatile
 21390                           
 21391                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 21392  016B02  6ABB               	clrf	187,c	;volatile
 21393                           
 21394                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 21395  016B04  0E07               	movlw	7
 21396  016B06  6EBC               	movwf	188,c	;volatile
 21397                           
 21398                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 21399  016B08  6AC6               	clrf	198,c	;volatile
 21400                           
 21401                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 21402  016B0A  0E0F               	movlw	15
 21403  016B0C  6EC7               	movwf	199,c	;volatile
 21404                           
 21405                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 21406  016B0E  68C2               	setf	194,c	;volatile
 21407                           
 21408                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 21409  016B10  0EBF               	movlw	191
 21410  016B12  6EC3               	movwf	195,c	;volatile
 21411                           
 21412                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 21413  016B14  0E90               	movlw	144
 21414  016B16  6EC4               	movwf	196,c	;volatile
 21415                           
 21416                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 21417  016B18  0E0C               	movlw	12
 21418  016B1A  6EC5               	movwf	197,c	;volatile
 21419                           
 21420                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 21421  016B1C  013A               	movlb	58	; () banked
 21422  016B1E  6B70               	clrf	112,b	;volatile
 21423                           
 21424                           ; BSR set to: 58
 21425                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 21426  016B20  6B60               	clrf	96,b	;volatile
 21427                           
 21428                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 21429  016B22  0E3C               	movlw	60
 21430  016B24  6F50               	movwf	80,b	;volatile
 21431                           
 21432                           ; BSR set to: 58
 21433                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 21434  016B26  6B80               	clrf	128,b	;volatile
 21435                           
 21436                           ; BSR set to: 58
 21437                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 21438  016B28  6B90               	clrf	144,b	;volatile
 21439                           
 21440                           ; BSR set to: 58
 21441                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 21442  016B2A  6940               	setf	64,b	;volatile
 21443                           
 21444                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 21445  016B2C  0E0C               	movlw	12
 21446  016B2E  6F71               	movwf	113,b	;volatile
 21447                           
 21448                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 21449  016B30  0E0F               	movlw	15
 21450  016B32  6F91               	movwf	145,b	;volatile
 21451                           
 21452                           ; BSR set to: 58
 21453                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 21454  016B34  6B81               	clrf	129,b	;volatile
 21455                           
 21456                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 21457  016B36  0E87               	movlw	135
 21458  016B38  6F51               	movwf	81,b	;volatile
 21459                           
 21460                           ; BSR set to: 58
 21461                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 21462  016B3A  6B41               	clrf	65,b	;volatile
 21463                           
 21464                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 21465  016B3C  0E97               	movlw	151
 21466  016B3E  6F61               	movwf	97,b	;volatile
 21467                           
 21468                           ; BSR set to: 58
 21469                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 21470  016B40  6B82               	clrf	130,b	;volatile
 21471                           
 21472                           ; BSR set to: 58
 21473                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 21474  016B42  6B92               	clrf	146,b	;volatile
 21475                           
 21476                           ; BSR set to: 58
 21477                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 21478  016B44  6B42               	clrf	66,b	;volatile
 21479                           
 21480                           ; BSR set to: 58
 21481                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 21482  016B46  6B52               	clrf	82,b	;volatile
 21483                           
 21484                           ; BSR set to: 58
 21485                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 21486  016B48  6B62               	clrf	98,b	;volatile
 21487                           
 21488                           ; BSR set to: 58
 21489                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 21490  016B4A  6B72               	clrf	114,b	;volatile
 21491                           
 21492                           ; BSR set to: 58
 21493                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 21494  016B4C  6943               	setf	67,b	;volatile
 21495                           
 21496                           ; BSR set to: 58
 21497                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 21498  016B4E  6953               	setf	83,b	;volatile
 21499                           
 21500                           ; BSR set to: 58
 21501                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 21502  016B50  6963               	setf	99,b	;volatile
 21503                           
 21504                           ; BSR set to: 58
 21505                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 21506  016B52  6973               	setf	115,b	;volatile
 21507                           
 21508                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 21509  016B54  0E07               	movlw	7
 21510  016B56  6F83               	movwf	131,b	;volatile
 21511                           
 21512                           ; BSR set to: 58
 21513                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 21514  016B58  6993               	setf	147,b	;volatile
 21515                           
 21516                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 21517  016B5A  0E0F               	movlw	15
 21518  016B5C  6FE8               	movwf	232,b	;volatile
 21519                           
 21520                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 21521  016B5E  0E13               	movlw	19
 21522  016B60  6FDE               	movwf	222,b	;volatile
 21523                           
 21524                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 21525  016B62  0E16               	movlw	22
 21526  016B64  6F0E               	movwf	14,b	;volatile
 21527                           
 21528                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 21529  016B66  0E1E               	movlw	30
 21530  016B68  6F13               	movwf	19,b	;volatile
 21531                           
 21532                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 21533  016B6A  0E08               	movlw	8
 21534  016B6C  6FC0               	movwf	192,b	;volatile
 21535                           
 21536                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 21537  016B6E  0E10               	movlw	16
 21538  016B70  6F19               	movwf	25,b	;volatile
 21539                           
 21540                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 21541  016B72  0E09               	movlw	9
 21542  016B74  6FC1               	movwf	193,b	;volatile
 21543                           
 21544                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 21545  016B76  0E1F               	movlw	31
 21546  016B78  6F15               	movwf	21,b	;volatile
 21547                           
 21548                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 21549  016B7A  0E13               	movlw	19
 21550  016B7C  6F16               	movwf	22,b	;volatile
 21551                           
 21552                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 21553  016B7E  0E17               	movlw	23
 21554  016B80  6FE5               	movwf	229,b	;volatile
 21555                           
 21556                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 21557  016B82  0E14               	movlw	20
 21558  016B84  6FDF               	movwf	223,b	;volatile
 21559                           
 21560                           ; BSR set to: 58
 21561                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 21562  016B86  0012               	return		;funcret
 21563  016B88                     __end_of_PIN_MANAGER_Initialize:
 21564                           	opt callstack 0
 21565                           
 21566 ;; *************** function _OSCILLATOR_Initialize *****************
 21567 ;; Defined at:
 21568 ;;		line 71 in file "mcc_generated_files/mcc.c"
 21569 ;; Parameters:    Size  Location     Type
 21570 ;;		None
 21571 ;; Auto vars:     Size  Location     Type
 21572 ;;		None
 21573 ;; Return value:  Size  Location     Type
 21574 ;;                  1  [STACK] void 
 21575 ;; Registers used:
 21576 ;;		wreg, status,2
 21577 ;; Tracked objects:
 21578 ;;		On entry : 3F/3A
 21579 ;;		On exit  : 3F/39
 21580 ;;		Unchanged: 0/0
 21581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21586 ;;Total ram usage:        0 bytes
 21587 ;; Hardware stack levels used:    1
 21588 ;; Hardware stack levels required when called:    6
 21589 ;; This function calls:
 21590 ;;		Nothing
 21591 ;; This function is called by:
 21592 ;;		_SYSTEM_Initialize
 21593 ;; This function uses a reentrant model
 21594 ;;
 21595                           
 21596                           	psect	text95
 21597  017C26                     __ptext95:
 21598                           	opt callstack 0
 21599  017C26                     _OSCILLATOR_Initialize:
 21600                           	opt callstack 23
 21601                           
 21602                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 21603                           
 21604                           ; BSR set to: 58
 21605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21606                           ;incstack = 0
 21607  017C26  0E20               	movlw	32
 21608  017C28  0139               	movlb	57	; () banked
 21609  017C2A  6FD9               	movwf	217,b	;volatile
 21610                           
 21611                           ; BSR set to: 57
 21612                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 21613  017C2C  6BDB               	clrf	219,b	;volatile
 21614                           
 21615                           ; BSR set to: 57
 21616                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 21617  017C2E  6BDD               	clrf	221,b	;volatile
 21618                           
 21619                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 21620  017C30  0E02               	movlw	2
 21621  017C32  6FDF               	movwf	223,b	;volatile
 21622                           
 21623                           ; BSR set to: 57
 21624                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 21625  017C34  6BDE               	clrf	222,b	;volatile
 21626  017C36                     l171:
 21627                           
 21628                           ; BSR set to: 57
 21629                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 21630  017C36  B1DC               	btfsc	220,0,b	;volatile
 21631  017C38  0012               	return	
 21632  017C3A  D7FD               	goto	l171
 21633  017C3C                     __end_of_OSCILLATOR_Initialize:
 21634                           	opt callstack 0
 21635                           
 21636 ;; *************** function _INTERRUPT_Initialize *****************
 21637 ;; Defined at:
 21638 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;		None
 21641 ;; Auto vars:     Size  Location     Type
 21642 ;;  state           1  [STACK] _Bool 
 21643 ;; Return value:  Size  Location     Type
 21644 ;;                  1  [STACK] void 
 21645 ;; Registers used:
 21646 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 21647 ;; Tracked objects:
 21648 ;;		On entry : 0/0
 21649 ;;		On exit  : 3F/39
 21650 ;;		Unchanged: 0/0
 21651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21656 ;;Total ram usage:        0 bytes
 21657 ;; Hardware stack levels used:    1
 21658 ;; Hardware stack levels required when called:    6
 21659 ;; This function calls:
 21660 ;;		Nothing
 21661 ;; This function is called by:
 21662 ;;		_SYSTEM_Initialize
 21663 ;; This function uses a reentrant model
 21664 ;;
 21665                           
 21666                           	psect	text96
 21667  016E54                     __ptext96:
 21668                           	opt callstack 0
 21669  016E54                     _INTERRUPT_Initialize:
 21670                           	opt callstack 0
 21671                           
 21672                           ; BSR set to: 57
 21673                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21674  016E54  52E6               	movf	postinc1,f,c
 21675                           
 21676                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 21677                           
 21678                           ;incstack = 0
 21679  016E56  8AD2               	bsf	210,5,c	;volatile
 21680                           
 21681                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 21682  016E58  AED2               	btfss	16338,7,c	;volatile
 21683  016E5A  D003               	goto	u7560
 21684  016E5C  6A40               	clrf	(btemp+11)^0,c
 21685  016E5E  2A40               	incf	(btemp+11)^0,f,c
 21686  016E60  D001               	goto	u7578
 21687  016E62                     u7560:
 21688  016E62  6A40               	clrf	(btemp+11)^0,c
 21689  016E64                     u7578:
 21690                           
 21691                           ;stkvar	_state @ sp[(-1)+0]
 21692  016E64  0EFF               	movlw	-1
 21693  016E66  0060  F103  FFE3   	movff	btemp+11,plusw1
 21694                           
 21695                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 21696  016E6C  9ED2               	bcf	16338,7,c	;volatile
 21697                           
 21698                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 21699  016E6E  0E55               	movlw	85
 21700  016E70  6ED4               	movwf	212,c	;volatile
 21701                           
 21702                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 21703  016E72  0EAA               	movlw	170
 21704  016E74  6ED4               	movwf	212,c	;volatile
 21705                           
 21706                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 21707  016E76  90D4               	bcf	212,0,c	;volatile
 21708                           
 21709                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 21710  016E78  0138               	movlb	56	; () banked
 21711  016E7A  6B9F               	clrf	159,b	;volatile
 21712                           
 21713                           ; BSR set to: 56
 21714                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 21715  016E7C  6B9E               	clrf	158,b	;volatile
 21716                           
 21717                           ; BSR set to: 56
 21718                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 21719  016E7E  0E08               	movlw	8
 21720  016E80  6F9D               	movwf	157,b	;volatile
 21721                           
 21722                           ; BSR set to: 56
 21723                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 21724  016E82  0E55               	movlw	85
 21725  016E84  6ED4               	movwf	212,c	;volatile
 21726                           
 21727                           ; BSR set to: 56
 21728                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 21729  016E86  0EAA               	movlw	170
 21730  016E88  6ED4               	movwf	212,c	;volatile
 21731                           
 21732                           ; BSR set to: 56
 21733                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 21734  016E8A  80D4               	bsf	212,0,c	;volatile
 21735                           
 21736                           ; BSR set to: 56
 21737                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 21738                           ;stkvar	_state @ sp[(-1)+0]
 21739  016E8C  0EFF               	movlw	-1
 21740  016E8E  B0E3               	btfsc	plusw1,0,c
 21741  016E90  D002               	bra	u7585
 21742  016E92  9ED2               	bcf	16338,7,c	;volatile
 21743  016E94  D001               	bra	u7586
 21744  016E96                     u7585:
 21745  016E96  8ED2               	bsf	16338,7,c	;volatile
 21746  016E98                     u7586:
 21747                           
 21748                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 21749  016E98  0139               	movlb	57	; () banked
 21750  016E9A  8782               	bsf	130,3,b	;volatile
 21751                           
 21752                           ; BSR set to: 57
 21753                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 21754  016E9C  8382               	bsf	130,1,b	;volatile
 21755                           
 21756                           ; BSR set to: 57
 21757                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 21758  016E9E  8182               	bsf	130,0,b	;volatile
 21759                           
 21760                           ; BSR set to: 57
 21761                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 21762  016EA0  8582               	bsf	130,2,b	;volatile
 21763                           
 21764                           ; BSR set to: 57
 21765                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 21766  016EA2  8786               	bsf	134,3,b	;volatile
 21767                           
 21768                           ; BSR set to: 57
 21769                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 21770  016EA4  8586               	bsf	134,2,b	;volatile
 21771                           
 21772                           ; BSR set to: 57
 21773                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 21774  016EA6  8983               	bsf	131,4,b	;volatile
 21775                           
 21776                           ; BSR set to: 57
 21777                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 21778  016EA8  8783               	bsf	131,3,b	;volatile
 21779                           
 21780                           ; BSR set to: 57
 21781                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 21782  016EAA  8181               	bsf	129,0,b	;volatile
 21783                           
 21784                           ; BSR set to: 57
 21785                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 21786  016EAC  8185               	bsf	133,0,b	;volatile
 21787                           
 21788                           ; BSR set to: 57
 21789                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 21790  016EAE  8189               	bsf	137,0,b	;volatile
 21791                           
 21792                           ; BSR set to: 57
 21793                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 21794  016EB0  9D88               	bcf	136,6,b	;volatile
 21795                           
 21796                           ; BSR set to: 57
 21797                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 21798  016EB2  8581               	bsf	129,2,b	;volatile
 21799                           
 21800                           ; BSR set to: 57
 21801                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 21802  016EB4  8781               	bsf	129,3,b	;volatile
 21803                           
 21804                           ; BSR set to: 57
 21805                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 21806  016EB6  52E5               	movf	postdec1,f,c
 21807  016EB8  0012               	return		;funcret
 21808  016EBA                     __end_of_INTERRUPT_Initialize:
 21809                           	opt callstack 0
 21810                           
 21811 ;; *************** function _FVR_Initialize *****************
 21812 ;; Defined at:
 21813 ;;		line 58 in file "mcc_generated_files/fvr.c"
 21814 ;; Parameters:    Size  Location     Type
 21815 ;;		None
 21816 ;; Auto vars:     Size  Location     Type
 21817 ;;		None
 21818 ;; Return value:  Size  Location     Type
 21819 ;;                  1  [STACK] void 
 21820 ;; Registers used:
 21821 ;;		wreg, status,2
 21822 ;; Tracked objects:
 21823 ;;		On entry : 3F/39
 21824 ;;		On exit  : 3F/3E
 21825 ;;		Unchanged: 0/0
 21826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21831 ;;Total ram usage:        0 bytes
 21832 ;; Hardware stack levels used:    1
 21833 ;; Hardware stack levels required when called:    6
 21834 ;; This function calls:
 21835 ;;		Nothing
 21836 ;; This function is called by:
 21837 ;;		_SYSTEM_Initialize
 21838 ;; This function uses a reentrant model
 21839 ;;
 21840                           
 21841                           	psect	text97
 21842  017D02                     __ptext97:
 21843                           	opt callstack 0
 21844  017D02                     _FVR_Initialize:
 21845                           	opt callstack 23
 21846                           
 21847                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 21848                           
 21849                           ; BSR set to: 57
 21850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21851                           ;incstack = 0
 21852  017D02  0EAF               	movlw	175
 21853  017D04  013E               	movlb	62	; () banked
 21854  017D06  6FC1               	movwf	193,b	;volatile
 21855                           
 21856                           ; BSR set to: 62
 21857                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21858  017D08  0012               	return		;funcret
 21859  017D0A                     __end_of_FVR_Initialize:
 21860                           	opt callstack 0
 21861                           
 21862 ;; *************** function _EXT_INT_Initialize *****************
 21863 ;; Defined at:
 21864 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 21865 ;; Parameters:    Size  Location     Type
 21866 ;;		None
 21867 ;; Auto vars:     Size  Location     Type
 21868 ;;		None
 21869 ;; Return value:  Size  Location     Type
 21870 ;;                  1  [STACK] void 
 21871 ;; Registers used:
 21872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21873 ;; Tracked objects:
 21874 ;;		On entry : 3F/39
 21875 ;;		On exit  : 3F/39
 21876 ;;		Unchanged: 0/0
 21877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21882 ;;Total ram usage:        0 bytes
 21883 ;; Hardware stack levels used:    1
 21884 ;; Hardware stack levels required when called:    7
 21885 ;; This function calls:
 21886 ;;		_INT0_SetInterruptHandler
 21887 ;;		_INT1_SetInterruptHandler
 21888 ;; This function is called by:
 21889 ;;		_SYSTEM_Initialize
 21890 ;; This function uses a reentrant model
 21891 ;;
 21892                           
 21893                           	psect	text98
 21894  0175B0                     __ptext98:
 21895                           	opt callstack 0
 21896  0175B0                     _EXT_INT_Initialize:
 21897                           	opt callstack 22
 21898                           
 21899                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 21900                           
 21901                           ; BSR set to: 62
 21902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21903                           ;incstack = 0
 21904  0175B0  0139               	movlb	57	; () banked
 21905  0175B2  91A1               	bcf	161,0,b	;volatile
 21906                           
 21907                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 21908  0175B4  90D2               	bcf	210,0,c	;volatile
 21909                           
 21910                           ; BSR set to: 57
 21911                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 21912  0175B6  0E22               	movlw	low _INT0_DefaultInterruptHandler
 21913  0175B8  6EE6               	movwf	postinc1,c
 21914  0175BA  0E7D               	movlw	high _INT0_DefaultInterruptHandler
 21915  0175BC  6EE6               	movwf	postinc1,c
 21916  0175BE  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 21917  0175C0  6EE6               	movwf	postinc1,c
 21918  0175C2  EC5A  F0BC         	call	_INT0_SetInterruptHandler	;wreg free
 21919                           
 21920                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 21921  0175C6  0139               	movlb	57	; () banked
 21922  0175C8  8191               	bsf	145,0,b	;volatile
 21923                           
 21924                           ; BSR set to: 57
 21925                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 21926  0175CA  91A5               	bcf	165,0,b	;volatile
 21927                           
 21928                           ; BSR set to: 57
 21929                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 21930  0175CC  92D2               	bcf	210,1,c	;volatile
 21931                           
 21932                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 21933  0175CE  0E24               	movlw	low _INT1_DefaultInterruptHandler
 21934  0175D0  6EE6               	movwf	postinc1,c
 21935  0175D2  0E7D               	movlw	high _INT1_DefaultInterruptHandler
 21936  0175D4  6EE6               	movwf	postinc1,c
 21937  0175D6  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 21938  0175D8  6EE6               	movwf	postinc1,c
 21939  0175DA  EC46  F0BC         	call	_INT1_SetInterruptHandler	;wreg free
 21940                           
 21941                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 21942  0175DE  0139               	movlb	57	; () banked
 21943  0175E0  8195               	bsf	149,0,b	;volatile
 21944                           
 21945                           ; BSR set to: 57
 21946                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 21947  0175E2  0012               	return		;funcret
 21948  0175E4                     __end_of_EXT_INT_Initialize:
 21949                           	opt callstack 0
 21950                           
 21951 ;; *************** function _INT1_SetInterruptHandler *****************
 21952 ;; Defined at:
 21953 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 21954 ;; Parameters:    Size  Location     Type
 21955 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21956 ;;		 -> INT1_DefaultInterruptHandler(1), 
 21957 ;; Auto vars:     Size  Location     Type
 21958 ;;		None
 21959 ;; Return value:  Size  Location     Type
 21960 ;;                  1  [STACK] void 
 21961 ;; Registers used:
 21962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21963 ;; Tracked objects:
 21964 ;;		On entry : 3F/39
 21965 ;;		On exit  : 0/0
 21966 ;;		Unchanged: 0/0
 21967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21972 ;;Total ram usage:        0 bytes
 21973 ;; Hardware stack levels used:    1
 21974 ;; Hardware stack levels required when called:    6
 21975 ;; This function calls:
 21976 ;;		Nothing
 21977 ;; This function is called by:
 21978 ;;		_EXT_INT_Initialize
 21979 ;; This function uses a reentrant model
 21980 ;;
 21981                           
 21982                           	psect	text99
 21983  01788C                     __ptext99:
 21984                           	opt callstack 0
 21985  01788C                     _INT1_SetInterruptHandler:
 21986                           	opt callstack 22
 21987                           
 21988                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 21989                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21990                           
 21991                           ; BSR set to: 57
 21992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21993                           ;incstack = 0
 21994  01788C  50E1               	movf	fsr1l,w,c
 21995  01788E  0FFD               	addlw	-3
 21996  017890  6ED9               	movwf	fsr2l,c
 21997  017892  50E2               	movf	fsr1h,w,c
 21998  017894  6EDA               	movwf	fsr2h,c
 21999  017896  0EFF               	movlw	255
 22000  017898  22DA               	addwfc	fsr2h,f,c
 22001  01789A  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22002  0178A0  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22003  0178A6  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22004                           
 22005                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22006  0178AC  52E5               	movf	postdec1,f,c
 22007  0178AE  52E5               	movf	postdec1,f,c
 22008  0178B0  52E5               	movf	postdec1,f,c
 22009  0178B2  0012               	return		;funcret
 22010  0178B4                     __end_of_INT1_SetInterruptHandler:
 22011                           	opt callstack 0
 22012                           
 22013 ;; *************** function _INT0_SetInterruptHandler *****************
 22014 ;; Defined at:
 22015 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22016 ;; Parameters:    Size  Location     Type
 22017 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22018 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22019 ;; Auto vars:     Size  Location     Type
 22020 ;;		None
 22021 ;; Return value:  Size  Location     Type
 22022 ;;                  1  [STACK] void 
 22023 ;; Registers used:
 22024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22025 ;; Tracked objects:
 22026 ;;		On entry : 3F/39
 22027 ;;		On exit  : 0/0
 22028 ;;		Unchanged: 0/0
 22029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22034 ;;Total ram usage:        0 bytes
 22035 ;; Hardware stack levels used:    1
 22036 ;; Hardware stack levels required when called:    6
 22037 ;; This function calls:
 22038 ;;		Nothing
 22039 ;; This function is called by:
 22040 ;;		_EXT_INT_Initialize
 22041 ;; This function uses a reentrant model
 22042 ;;
 22043                           
 22044                           	psect	text100
 22045  0178B4                     __ptext100:
 22046                           	opt callstack 0
 22047  0178B4                     _INT0_SetInterruptHandler:
 22048                           	opt callstack 22
 22049                           
 22050                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22051                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22052                           
 22053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22054                           ;incstack = 0
 22055  0178B4  50E1               	movf	fsr1l,w,c
 22056  0178B6  0FFD               	addlw	-3
 22057  0178B8  6ED9               	movwf	fsr2l,c
 22058  0178BA  50E2               	movf	fsr1h,w,c
 22059  0178BC  6EDA               	movwf	fsr2h,c
 22060  0178BE  0EFF               	movlw	255
 22061  0178C0  22DA               	addwfc	fsr2h,f,c
 22062  0178C2  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22063  0178C8  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22064  0178CE  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22065                           
 22066                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22067  0178D4  52E5               	movf	postdec1,f,c
 22068  0178D6  52E5               	movf	postdec1,f,c
 22069  0178D8  52E5               	movf	postdec1,f,c
 22070  0178DA  0012               	return		;funcret
 22071  0178DC                     __end_of_INT0_SetInterruptHandler:
 22072                           	opt callstack 0
 22073                           
 22074 ;; *************** function _DMA2_Initialize *****************
 22075 ;; Defined at:
 22076 ;;		line 61 in file "mcc_generated_files/dma2.c"
 22077 ;; Parameters:    Size  Location     Type
 22078 ;;		None
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;		None
 22081 ;; Return value:  Size  Location     Type
 22082 ;;                  1  [STACK] void 
 22083 ;; Registers used:
 22084 ;;		wreg, status,2
 22085 ;; Tracked objects:
 22086 ;;		On entry : 3F/3D
 22087 ;;		On exit  : 3F/3B
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22094 ;;Total ram usage:        0 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; Hardware stack levels required when called:    6
 22097 ;; This function calls:
 22098 ;;		Nothing
 22099 ;; This function is called by:
 22100 ;;		_SYSTEM_Initialize
 22101 ;; This function uses a reentrant model
 22102 ;;
 22103                           
 22104                           	psect	text101
 22105  0170FA                     __ptext101:
 22106                           	opt callstack 0
 22107  0170FA                     _DMA2_Initialize:
 22108                           	opt callstack 23
 22109                           
 22110                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 22111                           
 22112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22113                           ;incstack = 0
 22114  0170FA  0E00               	movlw	0
 22115  0170FC  013B               	movlb	59	; () banked
 22116  0170FE  6FD9               	movwf	217,b	;volatile
 22117  017100  0E10               	movlw	16
 22118  017102  6FDA               	movwf	218,b	;volatile
 22119  017104  0E00               	movlw	0
 22120  017106  6FDB               	movwf	219,b	;volatile
 22121                           
 22122                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 22123  017108  0E3F               	movlw	63
 22124  01710A  6FD1               	movwf	209,b	;volatile
 22125  01710C  0EBB               	movlw	187
 22126  01710E  6FD0               	movwf	208,b	;volatile
 22127                           
 22128                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 22129  017110  0E03               	movlw	3
 22130  017112  6FDD               	movwf	221,b	;volatile
 22131                           
 22132                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 22133  017114  0E00               	movlw	0
 22134  017116  6FD8               	movwf	216,b	;volatile
 22135  017118  0E01               	movlw	1
 22136  01711A  6FD7               	movwf	215,b	;volatile
 22137                           
 22138                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 22139  01711C  0E00               	movlw	0
 22140  01711E  6FCF               	movwf	207,b	;volatile
 22141  017120  0E01               	movlw	1
 22142  017122  6FCE               	movwf	206,b	;volatile
 22143                           
 22144                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 22145  017124  0E46               	movlw	70
 22146  017126  6FDF               	movwf	223,b	;volatile
 22147                           
 22148                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 22149  017128  0E3D               	movlw	61
 22150  01712A  6FDE               	movwf	222,b	;volatile
 22151                           
 22152                           ; BSR set to: 59
 22153                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 22154  01712C  0139               	movlb	57	; () banked
 22155  01712E  97A5               	bcf	165,3,b	;volatile
 22156                           
 22157                           ; BSR set to: 57
 22158                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 22159  017130  95A5               	bcf	165,2,b	;volatile
 22160                           
 22161                           ; BSR set to: 57
 22162                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 22163  017132  9BA5               	bcf	165,5,b	;volatile
 22164                           
 22165                           ; BSR set to: 57
 22166                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 22167  017134  99A5               	bcf	165,4,b	;volatile
 22168                           
 22169                           ; BSR set to: 57
 22170                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 22171  017136  9795               	bcf	149,3,b	;volatile
 22172                           
 22173                           ; BSR set to: 57
 22174                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 22175  017138  9595               	bcf	149,2,b	;volatile
 22176                           
 22177                           ; BSR set to: 57
 22178                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 22179  01713A  9B95               	bcf	149,5,b	;volatile
 22180                           
 22181                           ; BSR set to: 57
 22182                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 22183  01713C  9995               	bcf	149,4,b	;volatile
 22184  01713E  9ED2               	bcf	16338,7,c	;# 
 22185  017140  0139               	banksel	14831	;# 
 22186  017142  0E55               	movlw	85	;# 
 22187  017144  6FEF               	movwf	14831,b	;# 
 22188  017146  0EAA               	movlw	170	;# 
 22189  017148  6FEF               	movwf	14831,b	;# 
 22190  01714A  81EF               	bsf	14831,0,b	;# 
 22191  01714C  8ED2               	bsf	16338,7,c	;# 
 22192                           
 22193                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 22194  01714E  013B               	movlb	59	; () banked
 22195  017150  6BDC               	clrf	220,b	;volatile
 22196                           
 22197                           ; BSR set to: 59
 22198                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22199  017152  0012               	return		;funcret
 22200  017154                     __end_of_DMA2_Initialize:
 22201                           	opt callstack 0
 22202                           
 22203 ;; *************** function _DMA1_Initialize *****************
 22204 ;; Defined at:
 22205 ;;		line 86 in file "mcc_generated_files/dma1.c"
 22206 ;; Parameters:    Size  Location     Type
 22207 ;;		None
 22208 ;; Auto vars:     Size  Location     Type
 22209 ;;		None
 22210 ;; Return value:  Size  Location     Type
 22211 ;;                  1  [STACK] void 
 22212 ;; Registers used:
 22213 ;;		wreg, status,2
 22214 ;; Tracked objects:
 22215 ;;		On entry : 3F/3B
 22216 ;;		On exit  : 3F/3B
 22217 ;;		Unchanged: 0/0
 22218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22223 ;;Total ram usage:        0 bytes
 22224 ;; Hardware stack levels used:    1
 22225 ;; Hardware stack levels required when called:    6
 22226 ;; This function calls:
 22227 ;;		Nothing
 22228 ;; This function is called by:
 22229 ;;		_SYSTEM_Initialize
 22230 ;; This function uses a reentrant model
 22231 ;;
 22232                           
 22233                           	psect	text102
 22234  016D18                     __ptext102:
 22235                           	opt callstack 0
 22236  016D18                     _DMA1_Initialize:
 22237                           	opt callstack 23
 22238                           
 22239                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 22240                           
 22241                           ; BSR set to: 59
 22242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22243                           ;incstack = 0
 22244  016D18  0E00               	movlw	0
 22245  016D1A  013B               	movlb	59	; () banked
 22246  016D1C  6FF9               	movwf	249,b	;volatile
 22247  016D1E  0E10               	movlw	16
 22248  016D20  6FFA               	movwf	250,b	;volatile
 22249  016D22  0E00               	movlw	0
 22250  016D24  6FFB               	movwf	251,b	;volatile
 22251                           
 22252                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 22253  016D26  0E3D               	movlw	61
 22254  016D28  6FF1               	movwf	241,b	;volatile
 22255  016D2A  0E11               	movlw	17
 22256  016D2C  6FF0               	movwf	240,b	;volatile
 22257                           
 22258                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 22259  016D2E  0E03               	movlw	3
 22260  016D30  6FFD               	movwf	253,b	;volatile
 22261                           
 22262                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 22263  016D32  0E00               	movlw	0
 22264  016D34  6FF8               	movwf	248,b	;volatile
 22265  016D36  0E01               	movlw	1
 22266  016D38  6FF7               	movwf	247,b	;volatile
 22267                           
 22268                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 22269  016D3A  0E00               	movlw	0
 22270  016D3C  6FEF               	movwf	239,b	;volatile
 22271  016D3E  0E01               	movlw	1
 22272  016D40  6FEE               	movwf	238,b	;volatile
 22273                           
 22274                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 22275  016D42  0E15               	movlw	21
 22276  016D44  6FFF               	movwf	255,b	;volatile
 22277                           
 22278                           ; BSR set to: 59
 22279                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 22280  016D46  6BFE               	clrf	254,b	;volatile
 22281                           
 22282                           ; BSR set to: 59
 22283                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 22284  016D48  0139               	movlb	57	; () banked
 22285  016D4A  93A2               	bcf	162,1,b	;volatile
 22286                           
 22287                           ; BSR set to: 57
 22288                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 22289  016D4C  91A2               	bcf	162,0,b	;volatile
 22290                           
 22291                           ; BSR set to: 57
 22292                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 22293  016D4E  97A2               	bcf	162,3,b	;volatile
 22294                           
 22295                           ; BSR set to: 57
 22296                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 22297  016D50  95A2               	bcf	162,2,b	;volatile
 22298                           
 22299                           ; BSR set to: 57
 22300                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 22301  016D52  8392               	bsf	146,1,b	;volatile
 22302                           
 22303                           ; BSR set to: 57
 22304                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 22305  016D54  8192               	bsf	146,0,b	;volatile
 22306                           
 22307                           ; BSR set to: 57
 22308                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 22309  016D56  8792               	bsf	146,3,b	;volatile
 22310                           
 22311                           ; BSR set to: 57
 22312                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 22313  016D58  8592               	bsf	146,2,b	;volatile
 22314                           
 22315                           ; BSR set to: 57
 22316                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 22317  016D5A  6BF1               	clrf	241,b	;volatile
 22318                           
 22319                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 22320  016D5C  0E01               	movlw	1
 22321  016D5E  6FF2               	movwf	242,b	;volatile
 22322                           
 22323                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 22324  016D60  0E04               	movlw	4
 22325  016D62  6FF3               	movwf	243,b	;volatile
 22326                           
 22327                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 22328  016D64  0E02               	movlw	2
 22329  016D66  6FF4               	movwf	244,b	;volatile
 22330                           
 22331                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 22332  016D68  0E03               	movlw	3
 22333  016D6A  6FF7               	movwf	247,b	;volatile
 22334  016D6C  9ED2               	bcf	16338,7,c	;# 
 22335  016D6E  0139               	banksel	14831	;# 
 22336  016D70  0E55               	movlw	85	;# 
 22337  016D72  6FEF               	movwf	14831,b	;# 
 22338  016D74  0EAA               	movlw	170	;# 
 22339  016D76  6FEF               	movwf	14831,b	;# 
 22340  016D78  81EF               	bsf	14831,0,b	;# 
 22341  016D7A  8ED2               	bsf	16338,7,c	;# 
 22342                           
 22343                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 22344  016D7C  013B               	movlb	59	; () banked
 22345  016D7E  6BFC               	clrf	252,b	;volatile
 22346                           
 22347                           ; BSR set to: 59
 22348                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22349  016D80  0012               	return		;funcret
 22350  016D82                     __end_of_DMA1_Initialize:
 22351                           	opt callstack 0
 22352                           
 22353 ;; *************** function _CLKREF_Initialize *****************
 22354 ;; Defined at:
 22355 ;;		line 58 in file "mcc_generated_files/clkref.c"
 22356 ;; Parameters:    Size  Location     Type
 22357 ;;		None
 22358 ;; Auto vars:     Size  Location     Type
 22359 ;;		None
 22360 ;; Return value:  Size  Location     Type
 22361 ;;                  1  [STACK] void 
 22362 ;; Registers used:
 22363 ;;		wreg, status,2
 22364 ;; Tracked objects:
 22365 ;;		On entry : 3F/3B
 22366 ;;		On exit  : 3F/3C
 22367 ;;		Unchanged: 0/0
 22368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;Total ram usage:        0 bytes
 22374 ;; Hardware stack levels used:    1
 22375 ;; Hardware stack levels required when called:    6
 22376 ;; This function calls:
 22377 ;;		Nothing
 22378 ;; This function is called by:
 22379 ;;		_SYSTEM_Initialize
 22380 ;; This function uses a reentrant model
 22381 ;;
 22382                           
 22383                           	psect	text103
 22384  017CBE                     __ptext103:
 22385                           	opt callstack 0
 22386  017CBE                     _CLKREF_Initialize:
 22387                           	opt callstack 23
 22388                           
 22389                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 22390                           
 22391                           ; BSR set to: 59
 22392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22393                           ;incstack = 0
 22394  017CBE  013C               	movlb	60	; () banked
 22395  017CC0  6BE6               	clrf	230,b	;volatile
 22396                           
 22397                           ; BSR set to: 60
 22398                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 22399  017CC2  0E94               	movlw	148
 22400  017CC4  6FE5               	movwf	229,b	;volatile
 22401                           
 22402                           ; BSR set to: 60
 22403                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22404  017CC6  0012               	return		;funcret
 22405  017CC8                     __end_of_CLKREF_Initialize:
 22406                           	opt callstack 0
 22407                           
 22408 ;; *************** function _ADCC_Initialize *****************
 22409 ;; Defined at:
 22410 ;;		line 65 in file "mcc_generated_files/adcc.c"
 22411 ;; Parameters:    Size  Location     Type
 22412 ;;		None
 22413 ;; Auto vars:     Size  Location     Type
 22414 ;;		None
 22415 ;; Return value:  Size  Location     Type
 22416 ;;                  1  [STACK] void 
 22417 ;; Registers used:
 22418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22419 ;; Tracked objects:
 22420 ;;		On entry : 3F/3E
 22421 ;;		On exit  : 0/0
 22422 ;;		Unchanged: 0/0
 22423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22428 ;;Total ram usage:        0 bytes
 22429 ;; Hardware stack levels used:    1
 22430 ;; Hardware stack levels required when called:    7
 22431 ;; This function calls:
 22432 ;;		_ADCC_SetADIInterruptHandler
 22433 ;;		_ADCC_SetADTIInterruptHandler
 22434 ;; This function is called by:
 22435 ;;		_SYSTEM_Initialize
 22436 ;; This function uses a reentrant model
 22437 ;;
 22438                           
 22439                           	psect	text104
 22440  016D82                     __ptext104:
 22441                           	opt callstack 0
 22442  016D82                     _ADCC_Initialize:
 22443                           	opt callstack 22
 22444                           
 22445                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 22446                           
 22447                           ; BSR set to: 60
 22448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22449                           ;incstack = 0
 22450  016D82  013E               	movlb	62	; () banked
 22451  016D84  6BDE               	clrf	222,b	;volatile
 22452                           
 22453                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 22454  016D86  6BDF               	clrf	223,b	;volatile
 22455                           
 22456                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 22457  016D88  6BE0               	clrf	224,b	;volatile
 22458                           
 22459                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 22460  016D8A  6BE1               	clrf	225,b	;volatile
 22461                           
 22462                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 22463  016D8C  6BE4               	clrf	228,b	;volatile
 22464                           
 22465                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 22466  016D8E  6BE5               	clrf	229,b	;volatile
 22467                           
 22468                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 22469  016D90  6BEA               	clrf	234,b	;volatile
 22470                           
 22471                           ; BSR set to: 62
 22472                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 22473  016D92  0E40               	movlw	64
 22474  016D94  6FEC               	movwf	236,b	;volatile
 22475                           
 22476                           ; BSR set to: 62
 22477                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 22478  016D96  6BF1               	clrf	241,b	;volatile
 22479                           
 22480                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x40;
 22481  016D98  0E40               	movlw	64
 22482  016D9A  6FF3               	movwf	243,b	;volatile
 22483                           
 22484                           ; BSR set to: 62
 22485                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 22486  016D9C  6BF4               	clrf	244,b	;volatile
 22487                           
 22488                           ; BSR set to: 62
 22489                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 22490  016D9E  6BF5               	clrf	245,b	;volatile
 22491                           
 22492                           ; BSR set to: 62
 22493                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 22494  016DA0  6BF6               	clrf	246,b	;volatile
 22495                           
 22496                           ; BSR set to: 62
 22497                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 22498  016DA2  6BF7               	clrf	247,b	;volatile
 22499                           
 22500                           ; BSR set to: 62
 22501                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 22502  016DA4  6BF9               	clrf	249,b	;volatile
 22503                           
 22504                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 22505  016DA6  0E6B               	movlw	107
 22506  016DA8  6FFA               	movwf	250,b	;volatile
 22507                           
 22508                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 22509  016DAA  0E27               	movlw	39
 22510  016DAC  6FFB               	movwf	251,b	;volatile
 22511                           
 22512                           ; BSR set to: 62
 22513                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 22514  016DAE  6BFC               	clrf	252,b	;volatile
 22515                           
 22516                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 22517  016DB0  0E02               	movlw	2
 22518  016DB2  6FFD               	movwf	253,b	;volatile
 22519                           
 22520                           ; BSR set to: 62
 22521                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 22522  016DB4  6BFE               	clrf	254,b	;volatile
 22523                           
 22524                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 22525  016DB6  0E02               	movlw	2
 22526  016DB8  6FFF               	movwf	255,b	;volatile
 22527                           
 22528                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 22529  016DBA  0E84               	movlw	132
 22530  016DBC  6FF8               	movwf	248,b	;volatile
 22531                           
 22532                           ; BSR set to: 62
 22533                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 22534  016DBE  0139               	movlb	57	; () banked
 22535  016DC0  95A1               	bcf	161,2,b	;volatile
 22536                           
 22537                           ; BSR set to: 57
 22538                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 22539  016DC2  8591               	bsf	145,2,b	;volatile
 22540                           
 22541                           ; BSR set to: 57
 22542                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 22543  016DC4  0E26               	movlw	low _ADCC_DefaultInterruptHandler
 22544  016DC6  6EE6               	movwf	postinc1,c
 22545  016DC8  0E7D               	movlw	high _ADCC_DefaultInterruptHandler
 22546  016DCA  6EE6               	movwf	postinc1,c
 22547  016DCC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22548  016DCE  6EE6               	movwf	postinc1,c
 22549  016DD0  EC82  F0BC         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22550                           
 22551                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 22552  016DD4  0139               	movlb	57	; () banked
 22553  016DD6  97A1               	bcf	161,3,b	;volatile
 22554                           
 22555                           ; BSR set to: 57
 22556                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 22557  016DD8  8791               	bsf	145,3,b	;volatile
 22558                           
 22559                           ; BSR set to: 57
 22560                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 22561  016DDA  0E26               	movlw	low _ADCC_DefaultInterruptHandler
 22562  016DDC  6EE6               	movwf	postinc1,c
 22563  016DDE  0E7D               	movlw	high _ADCC_DefaultInterruptHandler
 22564  016DE0  6EE6               	movwf	postinc1,c
 22565  016DE2  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22566  016DE4  6EE6               	movwf	postinc1,c
 22567  016DE6  EC6E  F0BC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22568                           
 22569                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22570  016DEA  0012               	return		;funcret
 22571  016DEC                     __end_of_ADCC_Initialize:
 22572                           	opt callstack 0
 22573                           
 22574 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22575 ;; Defined at:
 22576 ;;		line 336 in file "mcc_generated_files/adcc.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22579 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 22580 ;; Auto vars:     Size  Location     Type
 22581 ;;		None
 22582 ;; Return value:  Size  Location     Type
 22583 ;;                  1  [STACK] void 
 22584 ;; Registers used:
 22585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22586 ;; Tracked objects:
 22587 ;;		On entry : 0/0
 22588 ;;		On exit  : 0/0
 22589 ;;		Unchanged: 0/0
 22590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;Total ram usage:        0 bytes
 22596 ;; Hardware stack levels used:    1
 22597 ;; Hardware stack levels required when called:    6
 22598 ;; This function calls:
 22599 ;;		Nothing
 22600 ;; This function is called by:
 22601 ;;		_ADCC_Initialize
 22602 ;;		_start_adc_scan
 22603 ;; This function uses a reentrant model
 22604 ;;
 22605                           
 22606                           	psect	text105
 22607  0178DC                     __ptext105:
 22608                           	opt callstack 0
 22609  0178DC                     _ADCC_SetADTIInterruptHandler:
 22610                           	opt callstack 23
 22611                           
 22612                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 22613                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22614                           
 22615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22616                           ;incstack = 0
 22617  0178DC  50E1               	movf	fsr1l,w,c
 22618  0178DE  0FFD               	addlw	-3
 22619  0178E0  6ED9               	movwf	fsr2l,c
 22620  0178E2  50E2               	movf	fsr1h,w,c
 22621  0178E4  6EDA               	movwf	fsr2h,c
 22622  0178E6  0EFF               	movlw	255
 22623  0178E8  22DA               	addwfc	fsr2h,f,c
 22624  0178EA  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 22625  0178F0  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 22626  0178F6  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 22627                           
 22628                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 22629  0178FC  52E5               	movf	postdec1,f,c
 22630  0178FE  52E5               	movf	postdec1,f,c
 22631  017900  52E5               	movf	postdec1,f,c
 22632  017902  0012               	return		;funcret
 22633  017904                     __end_of_ADCC_SetADTIInterruptHandler:
 22634                           	opt callstack 0
 22635                           
 22636 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 22637 ;; Defined at:
 22638 ;;		line 323 in file "mcc_generated_files/adcc.c"
 22639 ;; Parameters:    Size  Location     Type
 22640 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22641 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 22642 ;; Auto vars:     Size  Location     Type
 22643 ;;		None
 22644 ;; Return value:  Size  Location     Type
 22645 ;;                  1  [STACK] void 
 22646 ;; Registers used:
 22647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22648 ;; Tracked objects:
 22649 ;;		On entry : 6/0
 22650 ;;		On exit  : 0/0
 22651 ;;		Unchanged: 0/0
 22652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;Total ram usage:        0 bytes
 22658 ;; Hardware stack levels used:    1
 22659 ;; Hardware stack levels required when called:    6
 22660 ;; This function calls:
 22661 ;;		Nothing
 22662 ;; This function is called by:
 22663 ;;		_ADCC_Initialize
 22664 ;;		_start_adc_scan
 22665 ;; This function uses a reentrant model
 22666 ;;
 22667                           
 22668                           	psect	text106
 22669  017904                     __ptext106:
 22670                           	opt callstack 0
 22671  017904                     _ADCC_SetADIInterruptHandler:
 22672                           	opt callstack 23
 22673                           
 22674                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 22675                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22676                           
 22677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22678                           ;incstack = 0
 22679  017904  50E1               	movf	fsr1l,w,c
 22680  017906  0FFD               	addlw	-3
 22681  017908  6ED9               	movwf	fsr2l,c
 22682  01790A  50E2               	movf	fsr1h,w,c
 22683  01790C  6EDA               	movwf	fsr2h,c
 22684  01790E  0EFF               	movlw	255
 22685  017910  22DA               	addwfc	fsr2h,f,c
 22686  017912  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 22687  017918  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 22688  01791E  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 22689                           
 22690                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22691  017924  52E5               	movf	postdec1,f,c
 22692  017926  52E5               	movf	postdec1,f,c
 22693  017928  52E5               	movf	postdec1,f,c
 22694  01792A  0012               	return		;funcret
 22695  01792C                     __end_of_ADCC_SetADIInterruptHandler:
 22696                           	opt callstack 0
 22697                           
 22698 ;; *************** function _TMR5_ISR *****************
 22699 ;; Defined at:
 22700 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 22701 ;; Parameters:    Size  Location     Type
 22702 ;;		None
 22703 ;; Auto vars:     Size  Location     Type
 22704 ;;		None
 22705 ;; Return value:  Size  Location     Type
 22706 ;;                  1    wreg      void 
 22707 ;; Registers used:
 22708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 22709 ;; Tracked objects:
 22710 ;;		On entry : 0/0
 22711 ;;		On exit  : 0/0
 22712 ;;		Unchanged: 0/0
 22713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22717 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22718 ;;Total ram usage:        4 bytes
 22719 ;; Hardware stack levels used:    1
 22720 ;; Hardware stack levels required when called:    5
 22721 ;; This function calls:
 22722 ;;		_TMR5_CallBack
 22723 ;;		_TMR5_WriteTimer
 22724 ;; This function is called by:
 22725 ;;		Interrupt level 1
 22726 ;; This function uses a non-reentrant model
 22727 ;;
 22728                           
 22729                           	psect	text107
 22730  017044                     __ptext107:
 22731                           	opt callstack 0
 22732  017044                     _TMR5_ISR:
 22733                           	opt callstack 12
 22734                           
 22735                           ;incstack = 0
 22736  017044  006F FF60  F0D7    	movff	status,??_TMR5_ISR+2
 22737  01704A  0060  F100  F0D8   	movff	btemp+11,??_TMR5_ISR+3
 22738  017050  EE15  F3AB         	lfsr	1,___intlo_sp
 22739                           
 22740                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 22741  017054  0139               	movlb	57	; () banked
 22742  017056  9DA8               	bcf	168,6,b	;volatile
 22743                           
 22744                           ; BSR set to: 57
 22745                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 22746  017058  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 22747  01705E  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 22748  017064  EC12  F0BA         	call	_TMR5_WriteTimer	;wreg free
 22749                           
 22750                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 22751  017068  0102               	movlb	2	; () banked
 22752  01706A  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 22753  01706C  0100               	movlb	0	; () banked
 22754  01706E  6FD5               	movwf	??_TMR5_ISR& (0+255),b
 22755  017070  6BD6               	clrf	(??_TMR5_ISR+1)& (0+255),b
 22756  017072  0E05               	movlw	5
 22757  017074  27D5               	addwf	??_TMR5_ISR& (0+255),f,b
 22758  017076  0E00               	movlw	0
 22759  017078  23D6               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 22760  01707A  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 22761  01707C  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 22762  01707E  51D5               	movf	??_TMR5_ISR& (0+255),w,b
 22763  017080  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 22764  017082  51D6               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 22765  017084  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 22766  017086  A0D8               	btfss	status,0,c
 22767  017088  D004               	goto	i1l1045
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 22771  01708A  ECF7  F0BC         	call	_TMR5_CallBack	;wreg free
 22772                           
 22773                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 22774  01708E  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 22775  017090  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 22776  017092                     i1l1045:
 22777  017092  0060  F360  F040   	movff	??_TMR5_ISR+3,btemp+11
 22778  017098  0060  F35F  FFD8   	movff	??_TMR5_ISR+2,status
 22779  01709E  0011               	retfie		f
 22780  0170A0                     __end_of_TMR5_ISR:
 22781                           	opt callstack 0
 22782                           
 22783 ;; *************** function _TMR5_WriteTimer *****************
 22784 ;; Defined at:
 22785 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 22786 ;; Parameters:    Size  Location     Type
 22787 ;;  timerVal        2  [STACK] unsigned short 
 22788 ;; Auto vars:     Size  Location     Type
 22789 ;;		None
 22790 ;; Return value:  Size  Location     Type
 22791 ;;                  1  [STACK] void 
 22792 ;; Registers used:
 22793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22794 ;; Tracked objects:
 22795 ;;		On entry : 3F/39
 22796 ;;		On exit  : 0/0
 22797 ;;		Unchanged: 0/0
 22798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22803 ;;Total ram usage:        0 bytes
 22804 ;; Hardware stack levels used:    1
 22805 ;; Hardware stack levels required when called:    3
 22806 ;; This function calls:
 22807 ;;		Nothing
 22808 ;; This function is called by:
 22809 ;;		_TMR5_ISR
 22810 ;; This function uses a reentrant model
 22811 ;;
 22812                           
 22813                           	psect	text108
 22814  017424                     __ptext108:
 22815                           	opt callstack 0
 22816  017424                     _TMR5_WriteTimer:
 22817                           	opt callstack 13
 22818                           
 22819                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 22820                           
 22821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22822                           ;incstack = 0
 22823  017424  A49A               	btfss	154,2,c	;volatile
 22824  017426  D00F               	goto	l8243
 22825                           
 22826                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 22827  017428  909A               	bcf	154,0,c	;volatile
 22828                           
 22829                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 22830                           ;stkvar	_timerVal @ sp[(0)+-2]
 22831  01742A  0EFF               	movlw	255
 22832  01742C  24E1               	addwf	fsr1l,w,c
 22833  01742E  6ED9               	movwf	fsr2l,c
 22834  017430  0EFF               	movlw	255
 22835  017432  20E2               	addwfc	fsr1h,w,c
 22836  017434  6EDA               	movwf	fsr2h,c
 22837  017436  50DF               	movf	indf2,w,c
 22838  017438  6E99               	movwf	153,c	;volatile
 22839                           
 22840                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 22841                           ;stkvar	_timerVal @ sp[(0)+-2]
 22842  01743A  0EFE               	movlw	-2
 22843  01743C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 22844                           
 22845                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 22846  017442  809A               	bsf	154,0,c	;volatile
 22847                           
 22848                           ;mcc_generated_files/tmr5.c: 142:  } else {
 22849  017444  D00C               	goto	l1028
 22850  017446                     l8243:
 22851                           
 22852                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 22853                           ;stkvar	_timerVal @ sp[(0)+-2]
 22854  017446  0EFF               	movlw	255
 22855  017448  24E1               	addwf	fsr1l,w,c
 22856  01744A  6ED9               	movwf	fsr2l,c
 22857  01744C  0EFF               	movlw	255
 22858  01744E  20E2               	addwfc	fsr1h,w,c
 22859  017450  6EDA               	movwf	fsr2h,c
 22860  017452  50DF               	movf	indf2,w,c
 22861  017454  6E99               	movwf	153,c	;volatile
 22862                           
 22863                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 22864                           ;stkvar	_timerVal @ sp[(0)+-2]
 22865  017456  0EFE               	movlw	-2
 22866  017458  006F FF8F FF98     	movff	plusw1,16280	;volatile
 22867  01745E                     l1028:
 22868                           
 22869                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 22870  01745E  52E5               	movf	postdec1,f,c
 22871  017460  52E5               	movf	postdec1,f,c
 22872  017462  0012               	return		;funcret
 22873  017464                     __end_of_TMR5_WriteTimer:
 22874                           	opt callstack 0
 22875                           
 22876 ;; *************** function _TMR5_CallBack *****************
 22877 ;; Defined at:
 22878 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 22879 ;; Parameters:    Size  Location     Type
 22880 ;;		None
 22881 ;; Auto vars:     Size  Location     Type
 22882 ;;		None
 22883 ;; Return value:  Size  Location     Type
 22884 ;;                  1  [STACK] void 
 22885 ;; Registers used:
 22886 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 22887 ;; Tracked objects:
 22888 ;;		On entry : 3F/0
 22889 ;;		On exit  : 0/0
 22890 ;;		Unchanged: 0/0
 22891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22896 ;;Total ram usage:        0 bytes
 22897 ;; Hardware stack levels used:    1
 22898 ;; Hardware stack levels required when called:    4
 22899 ;; This function calls:
 22900 ;;		Absolute function
 22901 ;;		_TMR5_DefaultInterruptHandler
 22902 ;; This function is called by:
 22903 ;;		_TMR5_ISR
 22904 ;; This function uses a reentrant model
 22905 ;;
 22906                           
 22907                           	psect	text109
 22908  0179EE                     __ptext109:
 22909                           	opt callstack 0
 22910  0179EE                     _TMR5_CallBack:
 22911                           	opt callstack 12
 22912                           
 22913                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 22914                           
 22915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22916                           ;incstack = 0
 22917  0179EE  0100               	movlb	0	; () banked
 22918  0179F0  51B2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 22919  0179F2  11B3               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 22920  0179F4  11B4               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 22921  0179F6  B4D8               	btfsc	status,2,c
 22922  0179F8  0012               	return	
 22923                           
 22924                           ; BSR set to: 0
 22925                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 22926  0179FA  D801               	call	u779_28
 22927  0179FC  0012               	return	
 22928  0179FE                     u779_28:
 22929  0179FE  0005               	push	
 22930  017A00  6EFA               	movwf	pclath,c
 22931  017A02  51B2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 22932  017A04  6EFD               	movwf	tosl,c
 22933  017A06  51B3               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 22934  017A08  6EFE               	movwf	tosh,c
 22935  017A0A  51B4               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 22936  017A0C  6EFF               	movwf	tosu,c
 22937  017A0E  50FA               	movf	pclath,w,c
 22938  017A10  0012               	return		;indir
 22939  017A12                     __end_of_TMR5_CallBack:
 22940                           	opt callstack 0
 22941                           
 22942 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 22943 ;; Defined at:
 22944 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 22945 ;; Parameters:    Size  Location     Type
 22946 ;;		None
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;		None
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  1  [STACK] void 
 22951 ;; Registers used:
 22952 ;;		wreg, status,2, status,0, btemp+11
 22953 ;; Tracked objects:
 22954 ;;		On entry : 3F/0
 22955 ;;		On exit  : 0/0
 22956 ;;		Unchanged: 0/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22962 ;;Total ram usage:        0 bytes
 22963 ;; Hardware stack levels used:    1
 22964 ;; Hardware stack levels required when called:    3
 22965 ;; This function calls:
 22966 ;;		Nothing
 22967 ;; This function is called by:
 22968 ;;		_TMR5_Initialize
 22969 ;;		_TMR5_CallBack
 22970 ;; This function uses a reentrant model
 22971 ;;
 22972                           
 22973                           	psect	text110
 22974  017B7E                     __ptext110:
 22975                           	opt callstack 0
 22976  017B7E                     _TMR5_DefaultInterruptHandler:
 22977                           	opt callstack 12
 22978                           
 22979                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 22980                           
 22981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22982                           ;incstack = 0
 22983  017B7E  A0BE               	btfss	190,0,c	;volatile
 22984  017B80  D002               	goto	u762_20
 22985  017B82  0E01               	movlw	1
 22986  017B84  D001               	goto	u762_26
 22987  017B86                     u762_20:
 22988  017B86  0E00               	movlw	0
 22989  017B88                     u762_26:
 22990  017B88  0AFF               	xorlw	255
 22991  017B8A  6E40               	movwf	(btemp+11)^0,c
 22992  017B8C  50BE               	movf	190,w,c	;volatile
 22993  017B8E  1840               	xorwf	(btemp+11)^0,w,c
 22994  017B90  0BFE               	andlw	-2
 22995  017B92  1840               	xorwf	(btemp+11)^0,w,c
 22996  017B94  6EBE               	movwf	190,c	;volatile
 22997                           
 22998                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 22999  017B96  0012               	return		;funcret
 23000  017B98                     __end_of_TMR5_DefaultInterruptHandler:
 23001                           	opt callstack 0
 23002                           
 23003 ;; *************** function _INT0_ISR *****************
 23004 ;; Defined at:
 23005 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;		None
 23008 ;; Auto vars:     Size  Location     Type
 23009 ;;		None
 23010 ;; Return value:  Size  Location     Type
 23011 ;;                  1    wreg      void 
 23012 ;; Registers used:
 23013 ;;		wreg, status,2, status,0, pclath, tosl
 23014 ;; Tracked objects:
 23015 ;;		On entry : 0/0
 23016 ;;		On exit  : 0/0
 23017 ;;		Unchanged: 0/0
 23018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;Total ram usage:        0 bytes
 23024 ;; Hardware stack levels used:    1
 23025 ;; Hardware stack levels required when called:    2
 23026 ;; This function calls:
 23027 ;;		_INT0_CallBack
 23028 ;; This function is called by:
 23029 ;;		Interrupt level 2
 23030 ;; This function uses a non-reentrant model
 23031 ;;
 23032                           
 23033                           	psect	text111
 23034  017C90                     __ptext111:
 23035                           	opt callstack 0
 23036  017C90                     _INT0_ISR:
 23037                           	opt callstack 12
 23038                           
 23039                           ;incstack = 0
 23040  017C90  EE13  F356         	lfsr	1,___inthi_sp
 23041                           
 23042                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23043  017C94  0139               	movlb	57	; () banked
 23044  017C96  91A1               	bcf	161,0,b	;volatile
 23045                           
 23046                           ; BSR set to: 57
 23047                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23048  017C98  EC09  F0BD         	call	_INT0_CallBack	;wreg free
 23049  017C9C  0011               	retfie		f
 23050  017C9E                     __end_of_INT0_ISR:
 23051                           	opt callstack 0
 23052                           
 23053 ;; *************** function _INT0_CallBack *****************
 23054 ;; Defined at:
 23055 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23056 ;; Parameters:    Size  Location     Type
 23057 ;;		None
 23058 ;; Auto vars:     Size  Location     Type
 23059 ;;		None
 23060 ;; Return value:  Size  Location     Type
 23061 ;;                  1  [STACK] void 
 23062 ;; Registers used:
 23063 ;;		wreg, status,2, status,0, pclath, tosl
 23064 ;; Tracked objects:
 23065 ;;		On entry : 3F/39
 23066 ;;		On exit  : 0/0
 23067 ;;		Unchanged: 0/0
 23068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23073 ;;Total ram usage:        0 bytes
 23074 ;; Hardware stack levels used:    1
 23075 ;; Hardware stack levels required when called:    1
 23076 ;; This function calls:
 23077 ;;		Absolute function
 23078 ;;		_INT0_DefaultInterruptHandler
 23079 ;; This function is called by:
 23080 ;;		_INT0_ISR
 23081 ;; This function uses a reentrant model
 23082 ;;
 23083                           
 23084                           	psect	text112
 23085  017A12                     __ptext112:
 23086                           	opt callstack 0
 23087  017A12                     _INT0_CallBack:
 23088                           	opt callstack 12
 23089                           
 23090                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 23091                           
 23092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23093                           ;incstack = 0
 23094  017A12  5019               	movf	_INT0_InterruptHandler^0,w,c
 23095  017A14  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 23096  017A16  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 23097  017A18  B4D8               	btfsc	status,2,c
 23098  017A1A  0012               	return	
 23099                           
 23100                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 23101  017A1C  D801               	call	u356_48
 23102  017A1E  0012               	return	
 23103  017A20                     u356_48:
 23104  017A20  0005               	push	
 23105  017A22  6EFA               	movwf	pclath,c
 23106  017A24  5019               	movf	_INT0_InterruptHandler^0,w,c
 23107  017A26  6EFD               	movwf	tosl,c
 23108  017A28  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 23109  017A2A  6EFE               	movwf	tosh,c
 23110  017A2C  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 23111  017A2E  6EFF               	movwf	tosu,c
 23112  017A30  50FA               	movf	pclath,w,c
 23113  017A32  0012               	return		;indir
 23114  017A34                     __end_of_INT0_CallBack:
 23115                           	opt callstack 0
 23116                           
 23117 ;; *************** function _INT0_DefaultInterruptHandler *****************
 23118 ;; Defined at:
 23119 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 23120 ;; Parameters:    Size  Location     Type
 23121 ;;		None
 23122 ;; Auto vars:     Size  Location     Type
 23123 ;;		None
 23124 ;; Return value:  Size  Location     Type
 23125 ;;                  1  [STACK] void 
 23126 ;; Registers used:
 23127 ;;		None
 23128 ;; Tracked objects:
 23129 ;;		On entry : 0/39
 23130 ;;		On exit  : 0/0
 23131 ;;		Unchanged: 0/0
 23132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23137 ;;Total ram usage:        0 bytes
 23138 ;; Hardware stack levels used:    1
 23139 ;; This function calls:
 23140 ;;		Nothing
 23141 ;; This function is called by:
 23142 ;;		_EXT_INT_Initialize
 23143 ;;		_INT0_CallBack
 23144 ;; This function uses a reentrant model
 23145 ;;
 23146                           
 23147                           	psect	text113
 23148  017D22                     __ptext113:
 23149                           	opt callstack 0
 23150  017D22                     _INT0_DefaultInterruptHandler:
 23151                           	opt callstack 12
 23152                           
 23153                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23154                           
 23155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23156                           ;incstack = 0
 23157  017D22  0012               	return		;funcret
 23158  017D24                     __end_of_INT0_DefaultInterruptHandler:
 23159                           	opt callstack 0
 23160                           
 23161 ;; *************** function _INT1_ISR *****************
 23162 ;; Defined at:
 23163 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 23164 ;; Parameters:    Size  Location     Type
 23165 ;;		None
 23166 ;; Auto vars:     Size  Location     Type
 23167 ;;		None
 23168 ;; Return value:  Size  Location     Type
 23169 ;;                  1    wreg      void 
 23170 ;; Registers used:
 23171 ;;		wreg, status,2, status,0, pclath, tosl
 23172 ;; Tracked objects:
 23173 ;;		On entry : 0/0
 23174 ;;		On exit  : 0/0
 23175 ;;		Unchanged: 0/0
 23176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23181 ;;Total ram usage:        0 bytes
 23182 ;; Hardware stack levels used:    1
 23183 ;; Hardware stack levels required when called:    2
 23184 ;; This function calls:
 23185 ;;		_INT1_CallBack
 23186 ;; This function is called by:
 23187 ;;		Interrupt level 2
 23188 ;; This function uses a non-reentrant model
 23189 ;;
 23190                           
 23191                           	psect	text114
 23192  017CA0                     __ptext114:
 23193                           	opt callstack 0
 23194  017CA0                     _INT1_ISR:
 23195                           	opt callstack 12
 23196                           
 23197                           ;incstack = 0
 23198  017CA0  EE13  F356         	lfsr	1,___inthi_sp
 23199                           
 23200                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 23201  017CA4  0139               	movlb	57	; () banked
 23202  017CA6  91A5               	bcf	165,0,b	;volatile
 23203                           
 23204                           ; BSR set to: 57
 23205                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 23206  017CA8  EC1A  F0BD         	call	_INT1_CallBack	;wreg free
 23207  017CAC  0011               	retfie		f
 23208  017CAE                     __end_of_INT1_ISR:
 23209                           	opt callstack 0
 23210                           
 23211 ;; *************** function _INT1_CallBack *****************
 23212 ;; Defined at:
 23213 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;		None
 23216 ;; Auto vars:     Size  Location     Type
 23217 ;;		None
 23218 ;; Return value:  Size  Location     Type
 23219 ;;                  1  [STACK] void 
 23220 ;; Registers used:
 23221 ;;		wreg, status,2, status,0, pclath, tosl
 23222 ;; Tracked objects:
 23223 ;;		On entry : 3F/39
 23224 ;;		On exit  : 0/0
 23225 ;;		Unchanged: 0/0
 23226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23231 ;;Total ram usage:        0 bytes
 23232 ;; Hardware stack levels used:    1
 23233 ;; Hardware stack levels required when called:    1
 23234 ;; This function calls:
 23235 ;;		Absolute function
 23236 ;;		_INT1_DefaultInterruptHandler
 23237 ;; This function is called by:
 23238 ;;		_INT1_ISR
 23239 ;; This function uses a reentrant model
 23240 ;;
 23241                           
 23242                           	psect	text115
 23243  017A34                     __ptext115:
 23244                           	opt callstack 0
 23245  017A34                     _INT1_CallBack:
 23246                           	opt callstack 12
 23247                           
 23248                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 23249                           
 23250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23251                           ;incstack = 0
 23252  017A34  5016               	movf	_INT1_InterruptHandler^0,w,c
 23253  017A36  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 23254  017A38  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 23255  017A3A  B4D8               	btfsc	status,2,c
 23256  017A3C  0012               	return	
 23257                           
 23258                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 23259  017A3E  D801               	call	u358_48
 23260  017A40  0012               	return	
 23261  017A42                     u358_48:
 23262  017A42  0005               	push	
 23263  017A44  6EFA               	movwf	pclath,c
 23264  017A46  5016               	movf	_INT1_InterruptHandler^0,w,c
 23265  017A48  6EFD               	movwf	tosl,c
 23266  017A4A  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 23267  017A4C  6EFE               	movwf	tosh,c
 23268  017A4E  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 23269  017A50  6EFF               	movwf	tosu,c
 23270  017A52  50FA               	movf	pclath,w,c
 23271  017A54  0012               	return		;indir
 23272  017A56                     __end_of_INT1_CallBack:
 23273                           	opt callstack 0
 23274                           
 23275 ;; *************** function _INT1_DefaultInterruptHandler *****************
 23276 ;; Defined at:
 23277 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 23278 ;; Parameters:    Size  Location     Type
 23279 ;;		None
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;		None
 23282 ;; Return value:  Size  Location     Type
 23283 ;;                  1  [STACK] void 
 23284 ;; Registers used:
 23285 ;;		None
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/39
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23295 ;;Total ram usage:        0 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; This function calls:
 23298 ;;		Nothing
 23299 ;; This function is called by:
 23300 ;;		_EXT_INT_Initialize
 23301 ;;		_INT1_CallBack
 23302 ;; This function uses a reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text116
 23306  017D24                     __ptext116:
 23307                           	opt callstack 0
 23308  017D24                     _INT1_DefaultInterruptHandler:
 23309                           	opt callstack 12
 23310                           
 23311                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23312                           
 23313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23314                           ;incstack = 0
 23315  017D24  0012               	return		;funcret
 23316  017D26                     __end_of_INT1_DefaultInterruptHandler:
 23317                           	opt callstack 0
 23318                           
 23319 ;; *************** function _Default_ISR *****************
 23320 ;; Defined at:
 23321 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 23322 ;; Parameters:    Size  Location     Type
 23323 ;;		None
 23324 ;; Auto vars:     Size  Location     Type
 23325 ;;		None
 23326 ;; Return value:  Size  Location     Type
 23327 ;;                  1    wreg      void 
 23328 ;; Registers used:
 23329 ;;		None
 23330 ;; Tracked objects:
 23331 ;;		On entry : 0/0
 23332 ;;		On exit  : 0/0
 23333 ;;		Unchanged: 0/0
 23334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;Total ram usage:        0 bytes
 23340 ;; Hardware stack levels used:    1
 23341 ;; This function calls:
 23342 ;;		Nothing
 23343 ;; This function is called by:
 23344 ;;		Interrupt level 2
 23345 ;; This function uses a non-reentrant model
 23346 ;;
 23347                           
 23348                           	psect	text117
 23349  017D1C                     __ptext117:
 23350                           	opt callstack 0
 23351  017D1C                     _Default_ISR:
 23352                           	opt callstack 14
 23353                           
 23354                           ;incstack = 0
 23355  017D1C  EE13  F356         	lfsr	1,___inthi_sp
 23356  017D20  0011               	retfie		f
 23357  017D22                     __end_of_Default_ISR:
 23358                           	opt callstack 0
 23359                           
 23360 ;; *************** function _ADCC_ISR *****************
 23361 ;; Defined at:
 23362 ;;		line 314 in file "mcc_generated_files/adcc.c"
 23363 ;; Parameters:    Size  Location     Type
 23364 ;;		None
 23365 ;; Auto vars:     Size  Location     Type
 23366 ;;		None
 23367 ;; Return value:  Size  Location     Type
 23368 ;;                  1    wreg      void 
 23369 ;; Registers used:
 23370 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23371 ;; Tracked objects:
 23372 ;;		On entry : 0/0
 23373 ;;		On exit  : 0/0
 23374 ;;		Unchanged: 0/0
 23375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23380 ;;Total ram usage:        1 bytes
 23381 ;; Hardware stack levels used:    1
 23382 ;; Hardware stack levels required when called:    1
 23383 ;; This function calls:
 23384 ;;		Absolute function
 23385 ;;		_ADCC_DefaultInterruptHandler
 23386 ;;		_adc_int_handler
 23387 ;; This function is called by:
 23388 ;;		Interrupt level 2
 23389 ;; This function uses a non-reentrant model
 23390 ;;
 23391                           
 23392                           	psect	text118
 23393  0174D8                     __ptext118:
 23394                           	opt callstack 0
 23395  0174D8                     _ADCC_ISR:
 23396                           	opt callstack 13
 23397                           
 23398                           ;incstack = 0
 23399  0174D8  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 23400  0174DE  EE13  F356         	lfsr	1,___inthi_sp
 23401                           
 23402                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 23403  0174E2  0139               	movlb	57	; () banked
 23404  0174E4  95A1               	bcf	161,2,b	;volatile
 23405                           
 23406                           ; BSR set to: 57
 23407                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 23408  0174E6  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23409  0174E8  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23410  0174EA  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23411  0174EC  B4D8               	btfsc	status,2,c
 23412  0174EE  D00C               	goto	i2u395_49
 23413                           
 23414                           ; BSR set to: 57
 23415                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 23416  0174F0  D801               	call	i2u395_48
 23417  0174F2  D00A               	goto	i2u395_49
 23418  0174F4                     i2u395_48:
 23419  0174F4  0005               	push	
 23420  0174F6  6EFA               	movwf	pclath,c
 23421  0174F8  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23422  0174FA  6EFD               	movwf	tosl,c
 23423  0174FC  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23424  0174FE  6EFE               	movwf	tosh,c
 23425  017500  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23426  017502  6EFF               	movwf	tosu,c
 23427  017504  50FA               	movf	pclath,w,c
 23428  017506  0012               	return		;indir
 23429  017508                     i2u395_49:
 23430  017508  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 23431  01750E  0011               	retfie		f
 23432  017510                     __end_of_ADCC_ISR:
 23433                           	opt callstack 0
 23434                           
 23435 ;; *************** function _adc_int_t_handler *****************
 23436 ;; Defined at:
 23437 ;;		line 79 in file "daq.c"
 23438 ;; Parameters:    Size  Location     Type
 23439 ;;		None
 23440 ;; Auto vars:     Size  Location     Type
 23441 ;;		None
 23442 ;; Return value:  Size  Location     Type
 23443 ;;                  1  [STACK] void 
 23444 ;; Registers used:
 23445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 23446 ;; Tracked objects:
 23447 ;;		On entry : 3F/39
 23448 ;;		On exit  : 1/0
 23449 ;;		Unchanged: 0/0
 23450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23455 ;;Total ram usage:        0 bytes
 23456 ;; Hardware stack levels used:    1
 23457 ;; Hardware stack levels required when called:    1
 23458 ;; This function calls:
 23459 ;;		_ADCC_StartConversion
 23460 ;; This function is called by:
 23461 ;;		_start_adc_scan
 23462 ;;		_ADCC_ThresholdISR
 23463 ;; This function uses a reentrant model
 23464 ;;
 23465                           
 23466                           	psect	text119
 23467  0169D0                     __ptext119:
 23468                           	opt callstack 0
 23469  0169D0                     _adc_int_t_handler:
 23470                           	opt callstack 12
 23471                           
 23472                           ;daq.c: 84:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 23473                           
 23474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23475                           ;incstack = 0
 23476  0169D0  013E               	movlb	62	; () banked
 23477  0169D2  51E6               	movf	230,w,b	;volatile
 23478  0169D4  006F FB9C  F035    	movff	16103,btemp	;volatile
 23479  0169DA  6A36               	clrf	(btemp+1)^0,c
 23480  0169DC  0060  F0D4  F036   	movff	btemp,btemp+1
 23481  0169E2  6A35               	clrf	btemp^0,c
 23482  0169E4  2635               	addwf	btemp^0,f,c
 23483  0169E6  0E00               	movlw	0
 23484  0169E8  2236               	addwfc	(btemp+1)^0,f,c
 23485  0169EA  0100               	movlb	0	; () banked
 23486  0169EC  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 23487  0169EE  0D02               	mullw	2
 23488  0169F0  50F3               	movf	243,w,c
 23489  0169F2  0F60               	addlw	low _R
 23490  0169F4  6ED9               	movwf	fsr2l,c
 23491  0169F6  6ADA               	clrf	fsr2h,c
 23492  0169F8  0060  F0D7  FFDE   	movff	btemp,postinc2
 23493  0169FE  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 23494  016A04                     l8393:
 23495                           
 23496                           ;daq.c: 86:   if (++R.scan_index > 0XD) {
 23497  016A04  0100               	movlb	0	; () banked
 23498  016A06  2B7E               	incf	(_R+30)& (0+255),f,b	;volatile
 23499  016A08  0E0D               	movlw	13
 23500  016A0A  657E               	cpfsgt	(_R+30)& (0+255),b	;volatile
 23501  016A0C  D004               	goto	l8401
 23502                           
 23503                           ; BSR set to: 0
 23504                           ;daq.c: 87:    R.done = 1;
 23505  016A0E  0E01               	movlw	1
 23506  016A10  6F81               	movwf	(_R+33)& (0+255),b	;volatile
 23507                           
 23508                           ; BSR set to: 0
 23509  016A12  92BE               	bcf	190,1,c	;volatile
 23510  016A14  0012               	return	
 23511  016A16                     l8401:
 23512                           
 23513                           ; BSR set to: 0
 23514                           ;daq.c: 91:  } while (!((R.scan_select >> R.scan_index) &0x01));
 23515  016A16  0060  F1F8  F040   	movff	_R+30,btemp+11	;volatile
 23516  016A1C  EE20  F07F         	lfsr	2,_R+31	;volatile
 23517  016A20  006F FF78  F03D    	movff	postinc2,btemp+8
 23518  016A26  006F FF74  F03E    	movff	postdec2,btemp+9
 23519  016A2C  2A40               	incf	(btemp+11)^0,f,c
 23520  016A2E  D003               	goto	u790_44
 23521  016A30                     u790_45:
 23522  016A30  90D8               	bcf	status,0,c
 23523  016A32  323E               	rrcf	(btemp+9)^0,f,c
 23524  016A34  323D               	rrcf	(btemp+8)^0,f,c
 23525  016A36                     u790_44:
 23526  016A36  2E40               	decfsz	(btemp+11)^0,f,c
 23527  016A38  D7FB               	goto	u790_45
 23528  016A3A  A03D               	btfss	(btemp+8)^0,0,c
 23529  016A3C  D7E3               	goto	l8393
 23530                           
 23531                           ;daq.c: 92:  ADCC_StartConversion(R.scan_index & 0xf);
 23532  016A3E  0100               	movlb	0	; () banked
 23533  016A40  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 23534  016A42  0B0F               	andlw	15
 23535  016A44  6EE6               	movwf	postinc1,c
 23536  016A46  EC28  F0BE         	call	_ADCC_StartConversion	;wreg free
 23537                           
 23538                           ; BSR set to: 62
 23539  016A4A  A2BE               	btfss	190,1,c	;volatile
 23540  016A4C  D002               	goto	u792_40
 23541  016A4E  0E01               	movlw	1
 23542  016A50  D001               	goto	u792_46
 23543  016A52                     u792_40:
 23544  016A52  0E00               	movlw	0
 23545  016A54                     u792_46:
 23546  016A54  0AFF               	xorlw	255
 23547  016A56  6E40               	movwf	(btemp+11)^0,c
 23548  016A58  4640               	rlncf	(btemp+11)^0,f,c
 23549  016A5A  50BE               	movf	190,w,c	;volatile
 23550  016A5C  1840               	xorwf	(btemp+11)^0,w,c
 23551  016A5E  0BFD               	andlw	-3
 23552  016A60  1840               	xorwf	(btemp+11)^0,w,c
 23553  016A62  6EBE               	movwf	190,c	;volatile
 23554                           
 23555                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23556  016A64  0012               	return		;funcret
 23557  016A66                     __end_of_adc_int_t_handler:
 23558                           	opt callstack 0
 23559                           
 23560 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 23561 ;; Defined at:
 23562 ;;		line 339 in file "mcc_generated_files/adcc.c"
 23563 ;; Parameters:    Size  Location     Type
 23564 ;;		None
 23565 ;; Auto vars:     Size  Location     Type
 23566 ;;		None
 23567 ;; Return value:  Size  Location     Type
 23568 ;;                  1  [STACK] void 
 23569 ;; Registers used:
 23570 ;;		None
 23571 ;; Tracked objects:
 23572 ;;		On entry : 3F/39
 23573 ;;		On exit  : 0/0
 23574 ;;		Unchanged: 0/0
 23575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;Total ram usage:        0 bytes
 23581 ;; Hardware stack levels used:    1
 23582 ;; This function calls:
 23583 ;;		Nothing
 23584 ;; This function is called by:
 23585 ;;		_ADCC_Initialize
 23586 ;;		_ADCC_ISR
 23587 ;;		_ADCC_ThresholdISR
 23588 ;; This function uses a reentrant model
 23589 ;;
 23590                           
 23591                           	psect	text120
 23592  017D26                     __ptext120:
 23593                           	opt callstack 0
 23594  017D26                     _ADCC_DefaultInterruptHandler:
 23595                           	opt callstack 13
 23596                           
 23597                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23598                           
 23599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23600                           ;incstack = 0
 23601  017D26  0012               	return		;funcret
 23602  017D28                     __end_of_ADCC_DefaultInterruptHandler:
 23603                           	opt callstack 0
 23604                           
 23605 ;; *************** function _adc_int_handler *****************
 23606 ;; Defined at:
 23607 ;;		line 71 in file "daq.c"
 23608 ;; Parameters:    Size  Location     Type
 23609 ;;		None
 23610 ;; Auto vars:     Size  Location     Type
 23611 ;;		None
 23612 ;; Return value:  Size  Location     Type
 23613 ;;                  1  [STACK] void 
 23614 ;; Registers used:
 23615 ;;		wreg, status,2, status,0, btemp+11
 23616 ;; Tracked objects:
 23617 ;;		On entry : 3F/39
 23618 ;;		On exit  : 0/0
 23619 ;;		Unchanged: 0/0
 23620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23625 ;;Total ram usage:        0 bytes
 23626 ;; Hardware stack levels used:    1
 23627 ;; This function calls:
 23628 ;;		Nothing
 23629 ;; This function is called by:
 23630 ;;		_start_adc_scan
 23631 ;;		_ADCC_ISR
 23632 ;; This function uses a reentrant model
 23633 ;;
 23634                           
 23635                           	psect	text121
 23636  017AD2                     __ptext121:
 23637                           	opt callstack 0
 23638  017AD2                     _adc_int_handler:
 23639                           	opt callstack 13
 23640                           
 23641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23642                           ;incstack = 0
 23643                           ;daq.c: 73:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 23644  017AD2  A4BE               	btfss	190,2,c	;volatile
 23645  017AD4  D002               	goto	u379_40
 23646  017AD6  0E01               	movlw	1
 23647  017AD8  D001               	goto	u379_46
 23648  017ADA                     u379_40:
 23649  017ADA  0E00               	movlw	0
 23650  017ADC                     u379_46:
 23651  017ADC  0AFF               	xorlw	255
 23652  017ADE  6E40               	movwf	(btemp+11)^0,c
 23653  017AE0  4640               	rlncf	(btemp+11)^0,f,c
 23654  017AE2  4640               	rlncf	(btemp+11)^0,f,c
 23655  017AE4  50BE               	movf	190,w,c	;volatile
 23656  017AE6  1840               	xorwf	(btemp+11)^0,w,c
 23657  017AE8  0BFB               	andlw	-5
 23658  017AEA  1840               	xorwf	(btemp+11)^0,w,c
 23659  017AEC  6EBE               	movwf	190,c	;volatile
 23660                           
 23661                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23662  017AEE  0012               	return		;funcret
 23663  017AF0                     __end_of_adc_int_handler:
 23664                           	opt callstack 0
 23665                           
 23666 ;; *************** function _ADCC_ThresholdISR *****************
 23667 ;; Defined at:
 23668 ;;		line 327 in file "mcc_generated_files/adcc.c"
 23669 ;; Parameters:    Size  Location     Type
 23670 ;;		None
 23671 ;; Auto vars:     Size  Location     Type
 23672 ;;		None
 23673 ;; Return value:  Size  Location     Type
 23674 ;;                  1    wreg      void 
 23675 ;; Registers used:
 23676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 23677 ;; Tracked objects:
 23678 ;;		On entry : 0/0
 23679 ;;		On exit  : 0/0
 23680 ;;		Unchanged: 0/0
 23681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23684 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23686 ;;Total ram usage:        5 bytes
 23687 ;; Hardware stack levels used:    1
 23688 ;; Hardware stack levels required when called:    2
 23689 ;; This function calls:
 23690 ;;		Absolute function
 23691 ;;		_ADCC_DefaultInterruptHandler
 23692 ;;		_adc_int_t_handler
 23693 ;; This function is called by:
 23694 ;;		Interrupt level 2
 23695 ;; This function uses a non-reentrant model
 23696 ;;
 23697                           
 23698                           	psect	text122
 23699  016DEC                     __ptext122:
 23700                           	opt callstack 0
 23701  016DEC                     _ADCC_ThresholdISR:
 23702                           	opt callstack 12
 23703                           
 23704                           ;incstack = 0
 23705  016DEC  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 23706  016DF2  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 23707  016DF8  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 23708  016DFE  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 23709  016E04  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 23710  016E0A  EE13  F356         	lfsr	1,___inthi_sp
 23711                           
 23712                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 23713  016E0E  0139               	movlb	57	; () banked
 23714  016E10  97A1               	bcf	161,3,b	;volatile
 23715                           
 23716                           ; BSR set to: 57
 23717                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 23718  016E12  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 23719  016E14  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 23720  016E16  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 23721  016E18  B4D8               	btfsc	status,2,c
 23722  016E1A  D00C               	goto	i2u804_49
 23723                           
 23724                           ; BSR set to: 57
 23725                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 23726  016E1C  D801               	call	i2u804_48
 23727  016E1E  D00A               	goto	i2u804_49
 23728  016E20                     i2u804_48:
 23729  016E20  0005               	push	
 23730  016E22  6EFA               	movwf	pclath,c
 23731  016E24  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 23732  016E26  6EFD               	movwf	tosl,c
 23733  016E28  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 23734  016E2A  6EFE               	movwf	tosh,c
 23735  016E2C  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 23736  016E2E  6EFF               	movwf	tosu,c
 23737  016E30  50FA               	movf	pclath,w,c
 23738  016E32  0012               	return		;indir
 23739  016E34                     i2u804_49:
 23740  016E34  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 23741  016E3A  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 23742  016E40  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 23743  016E46  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 23744  016E4C  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 23745  016E52  0011               	retfie		f
 23746  016E54                     __end_of_ADCC_ThresholdISR:
 23747                           	opt callstack 0
 23748                           
 23749 ;; *************** function _UART1_tx_vect_isr *****************
 23750 ;; Defined at:
 23751 ;;		line 199 in file "mcc_generated_files/uart1.c"
 23752 ;; Parameters:    Size  Location     Type
 23753 ;;		None
 23754 ;; Auto vars:     Size  Location     Type
 23755 ;;		None
 23756 ;; Return value:  Size  Location     Type
 23757 ;;                  1    wreg      void 
 23758 ;; Registers used:
 23759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 23760 ;; Tracked objects:
 23761 ;;		On entry : 0/0
 23762 ;;		On exit  : 0/0
 23763 ;;		Unchanged: 0/0
 23764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23769 ;;Total ram usage:        0 bytes
 23770 ;; Hardware stack levels used:    1
 23771 ;; Hardware stack levels required when called:    1
 23772 ;; This function calls:
 23773 ;;		Absolute function
 23774 ;;		_UART1_Transmit_ISR
 23775 ;; This function is called by:
 23776 ;;		Interrupt level 2
 23777 ;; This function uses a non-reentrant model
 23778 ;;
 23779                           
 23780                           	psect	text123
 23781  01792C                     __ptext123:
 23782                           	opt callstack 0
 23783  01792C                     _UART1_tx_vect_isr:
 23784                           	opt callstack 13
 23785                           
 23786                           ;incstack = 0
 23787  01792C  EE13  F356         	lfsr	1,___inthi_sp
 23788                           
 23789                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 23790  017930  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 23791  017932  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 23792  017934  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 23793  017936  B4D8               	btfsc	status,2,c
 23794  017938  0011               	retfie		f
 23795                           
 23796                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 23797  01793A  D801               	call	i2u976_48
 23798  01793C  0011               	retfie		f
 23799  01793E                     i2u976_48:
 23800  01793E  0005               	push	
 23801  017940  6EFA               	movwf	pclath,c
 23802  017942  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 23803  017944  6EFD               	movwf	tosl,c
 23804  017946  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 23805  017948  6EFE               	movwf	tosh,c
 23806  01794A  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 23807  01794C  6EFF               	movwf	tosu,c
 23808  01794E  50FA               	movf	pclath,w,c
 23809  017950  0012               	return		;indir
 23810  017952                     __end_of_UART1_tx_vect_isr:
 23811                           	opt callstack 0
 23812                           
 23813 ;; *************** function _UART1_Transmit_ISR *****************
 23814 ;; Defined at:
 23815 ;;		line 213 in file "mcc_generated_files/uart1.c"
 23816 ;; Parameters:    Size  Location     Type
 23817 ;;		None
 23818 ;; Auto vars:     Size  Location     Type
 23819 ;;		None
 23820 ;; Return value:  Size  Location     Type
 23821 ;;                  1  [STACK] void 
 23822 ;; Registers used:
 23823 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23824 ;; Tracked objects:
 23825 ;;		On entry : 0/0
 23826 ;;		On exit  : 3B/39
 23827 ;;		Unchanged: 0/0
 23828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23833 ;;Total ram usage:        0 bytes
 23834 ;; Hardware stack levels used:    1
 23835 ;; This function calls:
 23836 ;;		Nothing
 23837 ;; This function is called by:
 23838 ;;		_UART1_Initialize
 23839 ;;		_UART1_tx_vect_isr
 23840 ;; This function uses a reentrant model
 23841 ;;
 23842                           
 23843                           	psect	text124
 23844  0176A2                     __ptext124:
 23845                           	opt callstack 0
 23846  0176A2                     _UART1_Transmit_ISR:
 23847                           	opt callstack 13
 23848                           
 23849                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 23850                           
 23851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23852                           ;incstack = 0
 23853  0176A2  0E40               	movlw	64
 23854  0176A4  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 23855  0176A6  D010               	goto	l581
 23856                           
 23857                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 23858  0176A8  0E68               	movlw	low _uart1TxBuffer
 23859  0176AA  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 23860  0176AC  6ED9               	movwf	fsr2l,c
 23861  0176AE  6ADA               	clrf	fsr2h,c
 23862  0176B0  0E01               	movlw	high _uart1TxBuffer
 23863  0176B2  22DA               	addwfc	fsr2h,f,c
 23864  0176B4  50DF               	movf	indf2,w,c
 23865  0176B6  013D               	movlb	61	; () banked
 23866  0176B8  6FEA               	movwf	234,b	;volatile
 23867                           
 23868                           ; BSR set to: 61
 23869  0176BA  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 23870                           
 23871                           ; BSR set to: 61
 23872                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 23873  0176BC  0E3F               	movlw	63
 23874  0176BE  6433               	cpfsgt	_uart1TxTail^0,c
 23875  0176C0  D001               	goto	l8195
 23876                           
 23877                           ; BSR set to: 61
 23878                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 23879  0176C2  6A33               	clrf	_uart1TxTail^0,c	;volatile
 23880  0176C4                     l8195:
 23881                           
 23882                           ; BSR set to: 61
 23883                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 23884  0176C4  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 23885                           
 23886                           ;mcc_generated_files/uart1.c: 222:  } else {
 23887  0176C6  0012               	return	
 23888  0176C8                     l581:
 23889                           
 23890                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 23891  0176C8  0139               	movlb	57	; () banked
 23892  0176CA  9993               	bcf	147,4,b	;volatile
 23893                           
 23894                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23895  0176CC  0012               	return		;funcret
 23896  0176CE                     __end_of_UART1_Transmit_ISR:
 23897                           	opt callstack 0
 23898                           
 23899 ;; *************** function _UART1_rx_vect_isr *****************
 23900 ;; Defined at:
 23901 ;;		line 206 in file "mcc_generated_files/uart1.c"
 23902 ;; Parameters:    Size  Location     Type
 23903 ;;		None
 23904 ;; Auto vars:     Size  Location     Type
 23905 ;;		None
 23906 ;; Return value:  Size  Location     Type
 23907 ;;                  1    wreg      void 
 23908 ;; Registers used:
 23909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 23910 ;; Tracked objects:
 23911 ;;		On entry : 0/0
 23912 ;;		On exit  : 0/0
 23913 ;;		Unchanged: 0/0
 23914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;Total ram usage:        0 bytes
 23920 ;; Hardware stack levels used:    1
 23921 ;; Hardware stack levels required when called:    1
 23922 ;; This function calls:
 23923 ;;		Absolute function
 23924 ;;		_UART1_Receive_ISR
 23925 ;; This function is called by:
 23926 ;;		Interrupt level 2
 23927 ;; This function uses a non-reentrant model
 23928 ;;
 23929                           
 23930                           	psect	text125
 23931  017954                     __ptext125:
 23932                           	opt callstack 0
 23933  017954                     _UART1_rx_vect_isr:
 23934                           	opt callstack 13
 23935                           
 23936                           ;incstack = 0
 23937  017954  EE13  F356         	lfsr	1,___inthi_sp
 23938                           
 23939                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 23940  017958  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 23941  01795A  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 23942  01795C  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 23943  01795E  B4D8               	btfsc	status,2,c
 23944  017960  0011               	retfie		f
 23945                           
 23946                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 23947  017962  D801               	call	i2u978_48
 23948  017964  0011               	retfie		f
 23949  017966                     i2u978_48:
 23950  017966  0005               	push	
 23951  017968  6EFA               	movwf	pclath,c
 23952  01796A  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 23953  01796C  6EFD               	movwf	tosl,c
 23954  01796E  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 23955  017970  6EFE               	movwf	tosh,c
 23956  017972  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 23957  017974  6EFF               	movwf	tosu,c
 23958  017976  50FA               	movf	pclath,w,c
 23959  017978  0012               	return		;indir
 23960  01797A                     __end_of_UART1_rx_vect_isr:
 23961                           	opt callstack 0
 23962                           
 23963 ;; *************** function _UART1_Receive_ISR *****************
 23964 ;; Defined at:
 23965 ;;		line 229 in file "mcc_generated_files/uart1.c"
 23966 ;; Parameters:    Size  Location     Type
 23967 ;;		None
 23968 ;; Auto vars:     Size  Location     Type
 23969 ;;		None
 23970 ;; Return value:  Size  Location     Type
 23971 ;;                  1  [STACK] void 
 23972 ;; Registers used:
 23973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23974 ;; Tracked objects:
 23975 ;;		On entry : 0/0
 23976 ;;		On exit  : 0/0
 23977 ;;		Unchanged: 0/0
 23978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23983 ;;Total ram usage:        0 bytes
 23984 ;; Hardware stack levels used:    1
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_UART1_Initialize
 23989 ;;		_UART1_rx_vect_isr
 23990 ;; This function uses a reentrant model
 23991 ;;
 23992                           
 23993                           	psect	text126
 23994  017AF0                     __ptext126:
 23995                           	opt callstack 0
 23996  017AF0                     _UART1_Receive_ISR:
 23997                           	opt callstack 13
 23998                           
 23999                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24000                           
 24001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24002                           ;incstack = 0
 24003  017AF0  0E00               	movlw	low _uart1RxBuffer
 24004  017AF2  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24005  017AF4  6ED9               	movwf	fsr2l,c
 24006  017AF6  6ADA               	clrf	fsr2h,c
 24007  017AF8  0E05               	movlw	high _uart1RxBuffer
 24008  017AFA  22DA               	addwfc	fsr2h,f,c
 24009  017AFC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24010  017B02  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24011                           
 24012                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24013  017B04  2831               	incf	_uart1RxHead^0,w,c
 24014  017B06  B4D8               	btfsc	status,2,c
 24015                           
 24016                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24017  017B08  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24018                           
 24019                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24020  017B0A  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24021                           
 24022                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24023  017B0C  0012               	return		;funcret
 24024  017B0E                     __end_of_UART1_Receive_ISR:
 24025                           	opt callstack 0
 24026                           
 24027 ;; *************** function _UART2_tx_vect_isr *****************
 24028 ;; Defined at:
 24029 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24030 ;; Parameters:    Size  Location     Type
 24031 ;;		None
 24032 ;; Auto vars:     Size  Location     Type
 24033 ;;		None
 24034 ;; Return value:  Size  Location     Type
 24035 ;;                  1    wreg      void 
 24036 ;; Registers used:
 24037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24038 ;; Tracked objects:
 24039 ;;		On entry : 0/0
 24040 ;;		On exit  : 0/0
 24041 ;;		Unchanged: 0/0
 24042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24047 ;;Total ram usage:        0 bytes
 24048 ;; Hardware stack levels used:    1
 24049 ;; Hardware stack levels required when called:    1
 24050 ;; This function calls:
 24051 ;;		Absolute function
 24052 ;;		_UART2_Transmit_ISR
 24053 ;; This function is called by:
 24054 ;;		Interrupt level 2
 24055 ;; This function uses a non-reentrant model
 24056 ;;
 24057                           
 24058                           	psect	text127
 24059  01797C                     __ptext127:
 24060                           	opt callstack 0
 24061  01797C                     _UART2_tx_vect_isr:
 24062                           	opt callstack 13
 24063                           
 24064                           ;incstack = 0
 24065  01797C  EE13  F356         	lfsr	1,___inthi_sp
 24066                           
 24067                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 24068  017980  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24069  017982  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 24070  017984  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 24071  017986  B4D8               	btfsc	status,2,c
 24072  017988  0011               	retfie		f
 24073                           
 24074                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 24075  01798A  D801               	call	i2u980_48
 24076  01798C  0011               	retfie		f
 24077  01798E                     i2u980_48:
 24078  01798E  0005               	push	
 24079  017990  6EFA               	movwf	pclath,c
 24080  017992  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24081  017994  6EFD               	movwf	tosl,c
 24082  017996  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 24083  017998  6EFE               	movwf	tosh,c
 24084  01799A  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 24085  01799C  6EFF               	movwf	tosu,c
 24086  01799E  50FA               	movf	pclath,w,c
 24087  0179A0  0012               	return		;indir
 24088  0179A2                     __end_of_UART2_tx_vect_isr:
 24089                           	opt callstack 0
 24090                           
 24091 ;; *************** function _UART2_Transmit_ISR *****************
 24092 ;; Defined at:
 24093 ;;		line 213 in file "mcc_generated_files/uart2.c"
 24094 ;; Parameters:    Size  Location     Type
 24095 ;;		None
 24096 ;; Auto vars:     Size  Location     Type
 24097 ;;		None
 24098 ;; Return value:  Size  Location     Type
 24099 ;;                  1  [STACK] void 
 24100 ;; Registers used:
 24101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24102 ;; Tracked objects:
 24103 ;;		On entry : 0/0
 24104 ;;		On exit  : 3B/39
 24105 ;;		Unchanged: 0/0
 24106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24111 ;;Total ram usage:        0 bytes
 24112 ;; Hardware stack levels used:    1
 24113 ;; This function calls:
 24114 ;;		Nothing
 24115 ;; This function is called by:
 24116 ;;		_UART2_Initialize
 24117 ;;		_UART2_tx_vect_isr
 24118 ;; This function uses a reentrant model
 24119 ;;
 24120                           
 24121                           	psect	text128
 24122  0176CE                     __ptext128:
 24123                           	opt callstack 0
 24124  0176CE                     _UART2_Transmit_ISR:
 24125                           	opt callstack 13
 24126                           
 24127                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 24128                           
 24129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24130                           ;incstack = 0
 24131  0176CE  0E40               	movlw	64
 24132  0176D0  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 24133  0176D2  D010               	goto	l701
 24134                           
 24135                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 24136  0176D4  0EBD               	movlw	low _uart2TxBuffer
 24137  0176D6  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 24138  0176D8  6ED9               	movwf	fsr2l,c
 24139  0176DA  6ADA               	clrf	fsr2h,c
 24140  0176DC  0E02               	movlw	high _uart2TxBuffer
 24141  0176DE  22DA               	addwfc	fsr2h,f,c
 24142  0176E0  50DF               	movf	indf2,w,c
 24143  0176E2  013D               	movlb	61	; () banked
 24144  0176E4  6FD2               	movwf	210,b	;volatile
 24145                           
 24146                           ; BSR set to: 61
 24147  0176E6  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 24148                           
 24149                           ; BSR set to: 61
 24150                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 24151  0176E8  0E3F               	movlw	63
 24152  0176EA  642D               	cpfsgt	_uart2TxTail^0,c
 24153  0176EC  D001               	goto	l8217
 24154                           
 24155                           ; BSR set to: 61
 24156                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 24157  0176EE  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 24158  0176F0                     l8217:
 24159                           
 24160                           ; BSR set to: 61
 24161                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 24162  0176F0  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 24163                           
 24164                           ;mcc_generated_files/uart2.c: 224:     }
 24165  0176F2  0012               	return	
 24166  0176F4                     l701:
 24167                           
 24168                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 24169  0176F4  0139               	movlb	57	; () banked
 24170  0176F6  9796               	bcf	150,3,b	;volatile
 24171                           
 24172                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24173  0176F8  0012               	return		;funcret
 24174  0176FA                     __end_of_UART2_Transmit_ISR:
 24175                           	opt callstack 0
 24176                           
 24177 ;; *************** function _UART2_rx_vect_isr *****************
 24178 ;; Defined at:
 24179 ;;		line 203 in file "mcc_generated_files/uart2.c"
 24180 ;; Parameters:    Size  Location     Type
 24181 ;;		None
 24182 ;; Auto vars:     Size  Location     Type
 24183 ;;		None
 24184 ;; Return value:  Size  Location     Type
 24185 ;;                  1    wreg      void 
 24186 ;; Registers used:
 24187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24188 ;; Tracked objects:
 24189 ;;		On entry : 0/0
 24190 ;;		On exit  : 0/0
 24191 ;;		Unchanged: 0/0
 24192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24197 ;;Total ram usage:        0 bytes
 24198 ;; Hardware stack levels used:    1
 24199 ;; Hardware stack levels required when called:    1
 24200 ;; This function calls:
 24201 ;;		Absolute function
 24202 ;;		_UART2_Receive_ISR
 24203 ;; This function is called by:
 24204 ;;		Interrupt level 2
 24205 ;; This function uses a non-reentrant model
 24206 ;;
 24207                           
 24208                           	psect	text129
 24209  0179A4                     __ptext129:
 24210                           	opt callstack 0
 24211  0179A4                     _UART2_rx_vect_isr:
 24212                           	opt callstack 13
 24213                           
 24214                           ;incstack = 0
 24215  0179A4  EE13  F356         	lfsr	1,___inthi_sp
 24216                           
 24217                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 24218  0179A8  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24219  0179AA  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 24220  0179AC  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 24221  0179AE  B4D8               	btfsc	status,2,c
 24222  0179B0  0011               	retfie		f
 24223                           
 24224                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 24225  0179B2  D801               	call	i2u982_48
 24226  0179B4  0011               	retfie		f
 24227  0179B6                     i2u982_48:
 24228  0179B6  0005               	push	
 24229  0179B8  6EFA               	movwf	pclath,c
 24230  0179BA  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24231  0179BC  6EFD               	movwf	tosl,c
 24232  0179BE  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 24233  0179C0  6EFE               	movwf	tosh,c
 24234  0179C2  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 24235  0179C4  6EFF               	movwf	tosu,c
 24236  0179C6  50FA               	movf	pclath,w,c
 24237  0179C8  0012               	return		;indir
 24238  0179CA                     __end_of_UART2_rx_vect_isr:
 24239                           	opt callstack 0
 24240                           
 24241 ;; *************** function _UART2_Receive_ISR *****************
 24242 ;; Defined at:
 24243 ;;		line 233 in file "mcc_generated_files/uart2.c"
 24244 ;; Parameters:    Size  Location     Type
 24245 ;;		None
 24246 ;; Auto vars:     Size  Location     Type
 24247 ;;		None
 24248 ;; Return value:  Size  Location     Type
 24249 ;;                  1  [STACK] void 
 24250 ;; Registers used:
 24251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24252 ;; Tracked objects:
 24253 ;;		On entry : 0/0
 24254 ;;		On exit  : 0/0
 24255 ;;		Unchanged: 0/0
 24256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24261 ;;Total ram usage:        0 bytes
 24262 ;; Hardware stack levels used:    1
 24263 ;; This function calls:
 24264 ;;		Nothing
 24265 ;; This function is called by:
 24266 ;;		_UART2_Initialize
 24267 ;;		_UART2_rx_vect_isr
 24268 ;; This function uses a reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text130
 24272  017B0E                     __ptext130:
 24273                           	opt callstack 0
 24274  017B0E                     _UART2_Receive_ISR:
 24275                           	opt callstack 13
 24276                           
 24277                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 24278                           
 24279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24280                           ;incstack = 0
 24281  017B0E  0E00               	movlw	low _uart2RxBuffer
 24282  017B10  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 24283  017B12  6ED9               	movwf	fsr2l,c
 24284  017B14  6ADA               	clrf	fsr2h,c
 24285  017B16  0E06               	movlw	high _uart2RxBuffer
 24286  017B18  22DA               	addwfc	fsr2h,f,c
 24287  017B1A  006F F743 FFDF     	movff	15824,indf2	;volatile
 24288  017B20  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 24289                           
 24290                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 24291  017B22  282B               	incf	_uart2RxHead^0,w,c
 24292  017B24  B4D8               	btfsc	status,2,c
 24293                           
 24294                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 24295  017B26  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 24296                           
 24297                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 24298  017B28  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 24299                           
 24300                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24301  017B2A  0012               	return		;funcret
 24302  017B2C                     __end_of_UART2_Receive_ISR:
 24303                           	opt callstack 0
 24304                           
 24305 ;; *************** function _TMR6_ISR *****************
 24306 ;; Defined at:
 24307 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 24308 ;; Parameters:    Size  Location     Type
 24309 ;;		None
 24310 ;; Auto vars:     Size  Location     Type
 24311 ;;		None
 24312 ;; Return value:  Size  Location     Type
 24313 ;;                  1    wreg      void 
 24314 ;; Registers used:
 24315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24316 ;; Tracked objects:
 24317 ;;		On entry : 0/0
 24318 ;;		On exit  : 0/0
 24319 ;;		Unchanged: 0/0
 24320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24323 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24325 ;;Total ram usage:        1 bytes
 24326 ;; Hardware stack levels used:    1
 24327 ;; Hardware stack levels required when called:    2
 24328 ;; This function calls:
 24329 ;;		_TMR6_CallBack
 24330 ;; This function is called by:
 24331 ;;		Interrupt level 2
 24332 ;; This function uses a non-reentrant model
 24333 ;;
 24334                           
 24335                           	psect	text131
 24336  017B98                     __ptext131:
 24337                           	opt callstack 0
 24338  017B98                     _TMR6_ISR:
 24339                           	opt callstack 12
 24340                           
 24341                           ;incstack = 0
 24342  017B98  0060  F0D4  F0D4   	movff	btemp,??_TMR6_ISR
 24343  017B9E  EE13  F356         	lfsr	1,___inthi_sp
 24344                           
 24345                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 24346  017BA2  0139               	movlb	57	; () banked
 24347  017BA4  91A9               	bcf	169,0,b	;volatile
 24348                           
 24349                           ; BSR set to: 57
 24350                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 24351  017BA6  EC2B  F0BD         	call	_TMR6_CallBack	;wreg free
 24352  017BAA  0060  F350  F035   	movff	??_TMR6_ISR,btemp
 24353  017BB0  0011               	retfie		f
 24354  017BB2                     __end_of_TMR6_ISR:
 24355                           	opt callstack 0
 24356                           
 24357 ;; *************** function _TMR6_CallBack *****************
 24358 ;; Defined at:
 24359 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 24360 ;; Parameters:    Size  Location     Type
 24361 ;;		None
 24362 ;; Auto vars:     Size  Location     Type
 24363 ;;		None
 24364 ;; Return value:  Size  Location     Type
 24365 ;;                  1  [STACK] void 
 24366 ;; Registers used:
 24367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24368 ;; Tracked objects:
 24369 ;;		On entry : 3F/39
 24370 ;;		On exit  : 0/0
 24371 ;;		Unchanged: 0/0
 24372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24377 ;;Total ram usage:        0 bytes
 24378 ;; Hardware stack levels used:    1
 24379 ;; Hardware stack levels required when called:    1
 24380 ;; This function calls:
 24381 ;;		Absolute function
 24382 ;;		_TMR6_DefaultInterruptHandler
 24383 ;; This function is called by:
 24384 ;;		_TMR6_ISR
 24385 ;; This function uses a reentrant model
 24386 ;;
 24387                           
 24388                           	psect	text132
 24389  017A56                     __ptext132:
 24390                           	opt callstack 0
 24391  017A56                     _TMR6_CallBack:
 24392                           	opt callstack 12
 24393                           
 24394                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 24395                           
 24396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24397                           ;incstack = 0
 24398  017A56  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24399  017A58  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 24400  017A5A  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 24401  017A5C  B4D8               	btfsc	status,2,c
 24402  017A5E  0012               	return	
 24403                           
 24404                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 24405  017A60  D801               	call	u776_48
 24406  017A62  0012               	return	
 24407  017A64                     u776_48:
 24408  017A64  0005               	push	
 24409  017A66  6EFA               	movwf	pclath,c
 24410  017A68  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24411  017A6A  6EFD               	movwf	tosl,c
 24412  017A6C  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 24413  017A6E  6EFE               	movwf	tosh,c
 24414  017A70  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 24415  017A72  6EFF               	movwf	tosu,c
 24416  017A74  50FA               	movf	pclath,w,c
 24417  017A76  0012               	return		;indir
 24418  017A78                     __end_of_TMR6_CallBack:
 24419                           	opt callstack 0
 24420                           
 24421 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 24422 ;; Defined at:
 24423 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 24424 ;; Parameters:    Size  Location     Type
 24425 ;;		None
 24426 ;; Auto vars:     Size  Location     Type
 24427 ;;  i               1  [STACK] unsigned char 
 24428 ;; Return value:  Size  Location     Type
 24429 ;;                  1  [STACK] void 
 24430 ;; Registers used:
 24431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24432 ;; Tracked objects:
 24433 ;;		On entry : 0/39
 24434 ;;		On exit  : 0/0
 24435 ;;		Unchanged: 0/0
 24436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24441 ;;Total ram usage:        0 bytes
 24442 ;; Hardware stack levels used:    1
 24443 ;; This function calls:
 24444 ;;		Nothing
 24445 ;; This function is called by:
 24446 ;;		_TMR6_Initialize
 24447 ;;		_TMR6_CallBack
 24448 ;; This function uses a reentrant model
 24449 ;;
 24450                           
 24451                           	psect	text133
 24452  017358                     __ptext133:
 24453                           	opt callstack 0
 24454  017358                     _TMR6_DefaultInterruptHandler:
 24455                           	opt callstack 0
 24456                           
 24457                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24458  017358  52E6               	movf	postinc1,f,c
 24459                           
 24460                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 24461                           ;stkvar	_i @ sp[(-1)+0]
 24462                           
 24463                           ;incstack = 0
 24464  01735A  0EFF               	movlw	-1
 24465  01735C  6AE3               	clrf	plusw1,c
 24466  01735E                     l8041:
 24467                           
 24468                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 24469                           ;stkvar	_i @ sp[(-1)+0]
 24470  01735E  0EFF               	movlw	-1
 24471  017360  50E3               	movf	plusw1,w,c
 24472  017362  0D02               	mullw	2
 24473  017364  50F3               	movf	243,w,c
 24474  017366  0F82               	addlw	low _tickCount
 24475  017368  6ED9               	movwf	fsr2l,c
 24476  01736A  6ADA               	clrf	fsr2h,c
 24477  01736C  50DE               	movf	postinc2,w,c
 24478  01736E  10DE               	iorwf	postinc2,w,c
 24479  017370  B4D8               	btfsc	status,2,c
 24480  017372  D00A               	goto	l8045
 24481                           
 24482                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 24483                           ;stkvar	_i @ sp[(-1)+0]
 24484  017374  0EFF               	movlw	-1
 24485  017376  50E3               	movf	plusw1,w,c
 24486  017378  0D02               	mullw	2
 24487  01737A  50F3               	movf	243,w,c
 24488  01737C  0F82               	addlw	low _tickCount
 24489  01737E  6ED9               	movwf	fsr2l,c
 24490  017380  6ADA               	clrf	fsr2h,c
 24491  017382  06DE               	decf	postinc2,f,c
 24492  017384  0E00               	movlw	0
 24493  017386  5ADD               	subwfb	postdec2,f,c
 24494  017388                     l8045:
 24495                           
 24496                           ;mcc_generated_files/tmr6.c: 207:  }
 24497                           ;stkvar	_i @ sp[(-1)+0]
 24498  017388  0EFF               	movlw	-1
 24499  01738A  2AE3               	incf	plusw1,f,c
 24500                           
 24501                           ;stkvar	_i @ sp[(-1)+0]
 24502  01738C  0EFF               	movlw	-1
 24503  01738E  006F FF8C  F035    	movff	plusw1,btemp
 24504  017394  0E0B               	movlw	11
 24505  017396  6435               	cpfsgt	btemp^0,c
 24506  017398  D7E2               	goto	l8041
 24507                           
 24508                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24509  01739A  52E5               	movf	postdec1,f,c
 24510  01739C  0012               	return		;funcret
 24511  01739E                     __end_of_TMR6_DefaultInterruptHandler:
 24512                           	opt callstack 0
 24513                           
 24514 ;; *************** function _DMA1_DMASCNT_ISR *****************
 24515 ;; Defined at:
 24516 ;;		line 126 in file "mcc_generated_files/dma1.c"
 24517 ;; Parameters:    Size  Location     Type
 24518 ;;		None
 24519 ;; Auto vars:     Size  Location     Type
 24520 ;;		None
 24521 ;; Return value:  Size  Location     Type
 24522 ;;                  1    wreg      void 
 24523 ;; Registers used:
 24524 ;;		None
 24525 ;; Tracked objects:
 24526 ;;		On entry : 0/0
 24527 ;;		On exit  : 3F/0
 24528 ;;		Unchanged: 0/0
 24529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24534 ;;Total ram usage:        0 bytes
 24535 ;; Hardware stack levels used:    1
 24536 ;; This function calls:
 24537 ;;		Nothing
 24538 ;; This function is called by:
 24539 ;;		Interrupt level 2
 24540 ;; This function uses a non-reentrant model
 24541 ;;
 24542                           
 24543                           	psect	text134
 24544  017CB0                     __ptext134:
 24545                           	opt callstack 0
 24546  017CB0                     _DMA1_DMASCNT_ISR:
 24547                           	opt callstack 14
 24548                           
 24549                           ;incstack = 0
 24550  017CB0  EE13  F356         	lfsr	1,___inthi_sp
 24551                           
 24552                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 24553  017CB4  0139               	movlb	57	; () banked
 24554  017CB6  91A2               	bcf	162,0,b	;volatile
 24555                           
 24556                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 24557  017CB8  0100               	movlb	0	; () banked
 24558  017CBA  979A               	bcf	_spi_link& (0+255),3,b	;volatile
 24559                           
 24560                           ; BSR set to: 0
 24561  017CBC  0011               	retfie		f
 24562  017CBE                     __end_of_DMA1_DMASCNT_ISR:
 24563                           	opt callstack 0
 24564                           
 24565 ;; *************** function _DMA1_DMADCNT_ISR *****************
 24566 ;; Defined at:
 24567 ;;		line 134 in file "mcc_generated_files/dma1.c"
 24568 ;; Parameters:    Size  Location     Type
 24569 ;;		None
 24570 ;; Auto vars:     Size  Location     Type
 24571 ;;		None
 24572 ;; Return value:  Size  Location     Type
 24573 ;;                  1    wreg      void 
 24574 ;; Registers used:
 24575 ;;		None
 24576 ;; Tracked objects:
 24577 ;;		On entry : 0/0
 24578 ;;		On exit  : 3F/39
 24579 ;;		Unchanged: 0/0
 24580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;Total ram usage:        0 bytes
 24586 ;; Hardware stack levels used:    1
 24587 ;; This function calls:
 24588 ;;		Nothing
 24589 ;; This function is called by:
 24590 ;;		Interrupt level 2
 24591 ;; This function uses a non-reentrant model
 24592 ;;
 24593                           
 24594                           	psect	text135
 24595  017CC8                     __ptext135:
 24596                           	opt callstack 0
 24597  017CC8                     _DMA1_DMADCNT_ISR:
 24598                           	opt callstack 14
 24599                           
 24600                           ; BSR set to: 0
 24601                           ;incstack = 0
 24602  017CC8  EE13  F356         	lfsr	1,___inthi_sp
 24603                           
 24604                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 24605  017CCC  0139               	movlb	57	; () banked
 24606  017CCE  93A2               	bcf	162,1,b	;volatile
 24607                           
 24608                           ; BSR set to: 57
 24609  017CD0  0011               	retfie		f
 24610  017CD2                     __end_of_DMA1_DMADCNT_ISR:
 24611                           	opt callstack 0
 24612                           
 24613 ;; *************** function _DMA1_DMAA_ISR *****************
 24614 ;; Defined at:
 24615 ;;		line 144 in file "mcc_generated_files/dma1.c"
 24616 ;; Parameters:    Size  Location     Type
 24617 ;;		None
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      void 
 24622 ;; Registers used:
 24623 ;;		None
 24624 ;; Tracked objects:
 24625 ;;		On entry : 0/0
 24626 ;;		On exit  : 3F/39
 24627 ;;		Unchanged: 0/0
 24628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24633 ;;Total ram usage:        0 bytes
 24634 ;; Hardware stack levels used:    1
 24635 ;; This function calls:
 24636 ;;		Nothing
 24637 ;; This function is called by:
 24638 ;;		Interrupt level 2
 24639 ;; This function uses a non-reentrant model
 24640 ;;
 24641                           
 24642                           	psect	text136
 24643  017CD4                     __ptext136:
 24644                           	opt callstack 0
 24645  017CD4                     _DMA1_DMAA_ISR:
 24646                           	opt callstack 14
 24647                           
 24648                           ; BSR set to: 57
 24649                           ;incstack = 0
 24650  017CD4  EE13  F356         	lfsr	1,___inthi_sp
 24651                           
 24652                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 24653  017CD8  0139               	movlb	57	; () banked
 24654  017CDA  97A2               	bcf	162,3,b	;volatile
 24655                           
 24656                           ; BSR set to: 57
 24657  017CDC  0011               	retfie		f
 24658  017CDE                     __end_of_DMA1_DMAA_ISR:
 24659                           	opt callstack 0
 24660                           
 24661 ;; *************** function _DMA1_DMAOR_ISR *****************
 24662 ;; Defined at:
 24663 ;;		line 155 in file "mcc_generated_files/dma1.c"
 24664 ;; Parameters:    Size  Location     Type
 24665 ;;		None
 24666 ;; Auto vars:     Size  Location     Type
 24667 ;;		None
 24668 ;; Return value:  Size  Location     Type
 24669 ;;                  1    wreg      void 
 24670 ;; Registers used:
 24671 ;;		None
 24672 ;; Tracked objects:
 24673 ;;		On entry : 0/0
 24674 ;;		On exit  : 3F/39
 24675 ;;		Unchanged: 0/0
 24676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24681 ;;Total ram usage:        0 bytes
 24682 ;; Hardware stack levels used:    1
 24683 ;; This function calls:
 24684 ;;		Nothing
 24685 ;; This function is called by:
 24686 ;;		Interrupt level 2
 24687 ;; This function uses a non-reentrant model
 24688 ;;
 24689                           
 24690                           	psect	text137
 24691  017CE0                     __ptext137:
 24692                           	opt callstack 0
 24693  017CE0                     _DMA1_DMAOR_ISR:
 24694                           	opt callstack 14
 24695                           
 24696                           ; BSR set to: 57
 24697                           ;incstack = 0
 24698  017CE0  EE13  F356         	lfsr	1,___inthi_sp
 24699                           
 24700                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 24701  017CE4  0139               	movlb	57	; () banked
 24702  017CE6  95A2               	bcf	162,2,b	;volatile
 24703                           
 24704                           ; BSR set to: 57
 24705  017CE8  0011               	retfie		f
 24706  017CEA                     __end_of_DMA1_DMAOR_ISR:
 24707                           	opt callstack 0
 24708                           
 24709                           ;
 24710                           ; Interrupt Vector Table @ 0x8
 24711                           ;
 24712                           
 24713                           	psect	ivt0x8
 24714  000008                     __pivt0x8:
 24715                           	opt callstack 0
 24716  000008                     ivt0x8_base:
 24717                           	opt callstack 0
 24718                           
 24719                           ; Vector 0 : SWINT
 24720  000008  5F47               	dw	_Default_ISR shr (0+2)
 24721                           
 24722                           ; Vector 1 : HLVD
 24723  00000A  5F47               	dw	_Default_ISR shr (0+2)
 24724                           
 24725                           ; Vector 2 : OSF
 24726  00000C  5F47               	dw	_Default_ISR shr (0+2)
 24727                           
 24728                           ; Vector 3 : CSW
 24729  00000E  5F47               	dw	_Default_ISR shr (0+2)
 24730                           
 24731                           ; Vector 4 : NVM
 24732  000010  5F47               	dw	_Default_ISR shr (0+2)
 24733                           
 24734                           ; Vector 5 : SCAN
 24735  000012  5F47               	dw	_Default_ISR shr (0+2)
 24736                           
 24737                           ; Vector 6 : CRC
 24738  000014  5F47               	dw	_Default_ISR shr (0+2)
 24739                           
 24740                           ; Vector 7 : IOC
 24741  000016  5F47               	dw	_Default_ISR shr (0+2)
 24742                           
 24743                           ; Vector 8 : INT0
 24744  000018  5F24               	dw	_INT0_ISR shr (0+2)
 24745                           
 24746                           ; Vector 9 : ZCD
 24747  00001A  5F47               	dw	_Default_ISR shr (0+2)
 24748                           
 24749                           ; Vector 10 : AD
 24750  00001C  5D36               	dw	_ADCC_ISR shr (0+2)
 24751                           
 24752                           ; Vector 11 : ADT
 24753  00001E  5B7B               	dw	_ADCC_ThresholdISR shr (0+2)
 24754                           
 24755                           ; Vector 12 : CMP1
 24756  000020  5F47               	dw	_Default_ISR shr (0+2)
 24757                           
 24758                           ; Vector 13 : SMT1
 24759  000022  5F47               	dw	_Default_ISR shr (0+2)
 24760                           
 24761                           ; Vector 14 : SMT1PRA
 24762  000024  5F47               	dw	_Default_ISR shr (0+2)
 24763                           
 24764                           ; Vector 15 : SMT1PRW
 24765  000026  5F47               	dw	_Default_ISR shr (0+2)
 24766                           
 24767                           ; Vector 16 : DMA1SCNT
 24768  000028  5F2C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 24769                           
 24770                           ; Vector 17 : DMA1DCNT
 24771  00002A  5F32               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 24772                           
 24773                           ; Vector 18 : DMA1OR
 24774  00002C  5F38               	dw	_DMA1_DMAOR_ISR shr (0+2)
 24775                           
 24776                           ; Vector 19 : DMA1A
 24777  00002E  5F35               	dw	_DMA1_DMAA_ISR shr (0+2)
 24778                           
 24779                           ; Vector 20 : SPI1RX
 24780  000030  5F47               	dw	_Default_ISR shr (0+2)
 24781                           
 24782                           ; Vector 21 : SPI1TX
 24783  000032  5F47               	dw	_Default_ISR shr (0+2)
 24784                           
 24785                           ; Vector 22 : SPI1
 24786  000034  5F47               	dw	_Default_ISR shr (0+2)
 24787                           
 24788                           ; Vector 23 : I2C1RX
 24789  000036  5F47               	dw	_Default_ISR shr (0+2)
 24790                           
 24791                           ; Vector 24 : I2C1TX
 24792  000038  5F47               	dw	_Default_ISR shr (0+2)
 24793                           
 24794                           ; Vector 25 : I2C1
 24795  00003A  5F47               	dw	_Default_ISR shr (0+2)
 24796                           
 24797                           ; Vector 26 : I2C1E
 24798  00003C  5F47               	dw	_Default_ISR shr (0+2)
 24799                           
 24800                           ; Vector 27 : U1RX
 24801  00003E  5E55               	dw	_UART1_rx_vect_isr shr (0+2)
 24802                           
 24803                           ; Vector 28 : U1TX
 24804  000040  5E4B               	dw	_UART1_tx_vect_isr shr (0+2)
 24805                           
 24806                           ; Vector 29 : U1E
 24807  000042  5F47               	dw	_Default_ISR shr (0+2)
 24808                           
 24809                           ; Vector 30 : U1
 24810  000044  5F47               	dw	_Default_ISR shr (0+2)
 24811                           
 24812                           ; Vector 31 : TMR0
 24813  000046  5F47               	dw	_Default_ISR shr (0+2)
 24814                           
 24815                           ; Vector 32 : TMR1
 24816  000048  5F47               	dw	_Default_ISR shr (0+2)
 24817                           
 24818                           ; Vector 33 : TMR1G
 24819  00004A  5F47               	dw	_Default_ISR shr (0+2)
 24820                           
 24821                           ; Vector 34 : TMR2
 24822  00004C  5F47               	dw	_Default_ISR shr (0+2)
 24823                           
 24824                           ; Vector 35 : CCP1
 24825  00004E  5F47               	dw	_Default_ISR shr (0+2)
 24826                           
 24827                           ; Vector 36 : Undefined
 24828  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 24829                           
 24830                           ; Vector 37 : NCO1
 24831  000052  5F47               	dw	_Default_ISR shr (0+2)
 24832                           
 24833                           ; Vector 38 : CWG1
 24834  000054  5F47               	dw	_Default_ISR shr (0+2)
 24835                           
 24836                           ; Vector 39 : CLC1
 24837  000056  5F47               	dw	_Default_ISR shr (0+2)
 24838                           
 24839                           ; Vector 40 : INT1
 24840  000058  5F28               	dw	_INT1_ISR shr (0+2)
 24841                           
 24842                           ; Vector 41 : CMP2
 24843  00005A  5F47               	dw	_Default_ISR shr (0+2)
 24844                           
 24845                           ; Vector 42 : DMA2SCNT
 24846  00005C  5F47               	dw	_Default_ISR shr (0+2)
 24847                           
 24848                           ; Vector 43 : DMA2DCNT
 24849  00005E  5F47               	dw	_Default_ISR shr (0+2)
 24850                           
 24851                           ; Vector 44 : DMA2OR
 24852  000060  5F47               	dw	_Default_ISR shr (0+2)
 24853                           
 24854                           ; Vector 45 : DMA2A
 24855  000062  5F47               	dw	_Default_ISR shr (0+2)
 24856                           
 24857                           ; Vector 46 : I2C2RX
 24858  000064  5F47               	dw	_Default_ISR shr (0+2)
 24859                           
 24860                           ; Vector 47 : I2C2TX
 24861  000066  5F47               	dw	_Default_ISR shr (0+2)
 24862                           
 24863                           ; Vector 48 : I2C2
 24864  000068  5F47               	dw	_Default_ISR shr (0+2)
 24865                           
 24866                           ; Vector 49 : I2C2E
 24867  00006A  5F47               	dw	_Default_ISR shr (0+2)
 24868                           
 24869                           ; Vector 50 : U2RX
 24870  00006C  5E69               	dw	_UART2_rx_vect_isr shr (0+2)
 24871                           
 24872                           ; Vector 51 : U2TX
 24873  00006E  5E5F               	dw	_UART2_tx_vect_isr shr (0+2)
 24874                           
 24875                           ; Vector 52 : U2E
 24876  000070  5F47               	dw	_Default_ISR shr (0+2)
 24877                           
 24878                           ; Vector 53 : U2
 24879  000072  5F47               	dw	_Default_ISR shr (0+2)
 24880                           
 24881                           ; Vector 54 : TMR3
 24882  000074  5F47               	dw	_Default_ISR shr (0+2)
 24883                           
 24884                           ; Vector 55 : TMR3G
 24885  000076  5F47               	dw	_Default_ISR shr (0+2)
 24886                           
 24887                           ; Vector 56 : TMR4
 24888  000078  5F47               	dw	_Default_ISR shr (0+2)
 24889                           
 24890                           ; Vector 57 : CCP2
 24891  00007A  5F47               	dw	_Default_ISR shr (0+2)
 24892                           
 24893                           ; Vector 58 : Undefined
 24894  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 24895                           
 24896                           ; Vector 59 : CWG2
 24897  00007E  5F47               	dw	_Default_ISR shr (0+2)
 24898                           
 24899                           ; Vector 60 : CLC2
 24900  000080  5F47               	dw	_Default_ISR shr (0+2)
 24901                           
 24902                           ; Vector 61 : INT2
 24903  000082  5F47               	dw	_Default_ISR shr (0+2)
 24904                           
 24905                           ; Vector 62 : Undefined
 24906  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 24907                           
 24908                           ; Vector 63 : Undefined
 24909  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 24910                           
 24911                           ; Vector 64 : Undefined
 24912  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 24913                           
 24914                           ; Vector 65 : Undefined
 24915  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 24916                           
 24917                           ; Vector 66 : Undefined
 24918  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 24919                           
 24920                           ; Vector 67 : Undefined
 24921  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 24922                           
 24923                           ; Vector 68 : Undefined
 24924  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 24925                           
 24926                           ; Vector 69 : Undefined
 24927  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 24928                           
 24929                           ; Vector 70 : TMR5
 24930  000094  5C11               	dw	_TMR5_ISR shr (0+2)
 24931                           
 24932                           ; Vector 71 : TMR5G
 24933  000096  5F47               	dw	_Default_ISR shr (0+2)
 24934                           
 24935                           ; Vector 72 : TMR6
 24936  000098  5EE6               	dw	_TMR6_ISR shr (0+2)
 24937                           
 24938                           ; Vector 73 : CCP3
 24939  00009A  5F47               	dw	_Default_ISR shr (0+2)
 24940                           
 24941                           ; Vector 74 : CWG3
 24942  00009C  5F47               	dw	_Default_ISR shr (0+2)
 24943                           
 24944                           ; Vector 75 : CLC3
 24945  00009E  5F47               	dw	_Default_ISR shr (0+2)
 24946                           
 24947                           ; Vector 76 : Undefined
 24948  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 24949                           
 24950                           ; Vector 77 : Undefined
 24951  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 24952                           
 24953                           ; Vector 78 : Undefined
 24954  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 24955                           
 24956                           ; Vector 79 : Undefined
 24957  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 24958                           
 24959                           ; Vector 80 : CCP4
 24960  0000A8  5F47               	dw	_Default_ISR shr (0+2)
 24961                           
 24962                           ; Vector 81 : CLC4
 24963  0000AA  5F47               	dw	_Default_ISR shr (0+2)
 24964  0000AC                     ivt0x8_undefint:
 24965                           	opt callstack 0
 24966  0000AC  00FF               	reset	
 24967                           
 24968                           	psect	text138
 24969  000000                     __ptext138:
 24970                           	opt callstack 0
 24971                           
 24972                           	psect	param0
 24973  0000                     
 24974                           	psect	temp
 24975  000035                     btemp:
 24976                           	opt callstack 0
 24977  000035                     	ds	32
 24978  0000                     wtemp0	set	btemp
 24979  0000                     wtemp1	set	btemp+2
 24980  0000                     wtemp2	set	btemp+4
 24981  0000                     wtemp3	set	btemp+6
 24982  0000                     wtemp4	set	btemp+8
 24983  0000                     wtemp5	set	btemp+10
 24984  0000                     wtemp8	set	btemp+1
 24985  0000                     ttemp0	set	btemp
 24986  0000                     ttemp1	set	btemp+3
 24987  0000                     ttemp2	set	btemp+6
 24988  0000                     ttemp3	set	btemp+9
 24989  0000                     ttemp5	set	btemp+1
 24990  0000                     ttemp6	set	btemp+4
 24991  0000                     ttemp7	set	btemp+8
 24992  0000                     ltemp0	set	btemp
 24993  0000                     ltemp1	set	btemp+4
 24994  0000                     ltemp2	set	btemp+8
 24995  0000                     lltemp0	set	btemp
 24996  0000                     lltemp1	set	btemp+8
 24997  0000                     lltemp2	set	btemp+16
 24998  0000                     lltemp3	set	btemp+24
 24999                           tosu	equ	0x3FFF
 25000                           tosh	equ	0x3FFE
 25001                           tosl	equ	0x3FFD
 25002                           stkptr	equ	0x3FFC
 25003                           pclatu	equ	0x3FFB
 25004                           pclath	equ	0x3FFA
 25005                           pcl	equ	0x3FF9
 25006                           tblptru	equ	0x3FF8
 25007                           tblptrh	equ	0x3FF7
 25008                           tblptrl	equ	0x3FF6
 25009                           tablat	equ	0x3FF5
 25010                           prodh	equ	0x3FF4
 25011                           prodl	equ	0x3FF3
 25012                           indf0	equ	0x3FEF
 25013                           postinc0	equ	0x3FEE
 25014                           postdec0	equ	0x3FED
 25015                           preinc0	equ	0x3FEC
 25016                           plusw0	equ	0x3FEB
 25017                           fsr0h	equ	0x3FEA
 25018                           fsr0l	equ	0x3FE9
 25019                           wreg	equ	0x3FE8
 25020                           indf1	equ	0x3FE7
 25021                           postinc1	equ	0x3FE6
 25022                           postdec1	equ	0x3FE5
 25023                           preinc1	equ	0x3FE4
 25024                           plusw1	equ	0x3FE3
 25025                           fsr1h	equ	0x3FE2
 25026                           fsr1l	equ	0x3FE1
 25027                           bsr	equ	0x3FE0
 25028                           indf2	equ	0x3FDF
 25029                           postinc2	equ	0x3FDE
 25030                           postdec2	equ	0x3FDD
 25031                           preinc2	equ	0x3FDC
 25032                           plusw2	equ	0x3FDB
 25033                           fsr2h	equ	0x3FDA
 25034                           fsr2l	equ	0x3FD9
 25035                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        212
    BSS         1319
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     121
    BANK1           256      0     248
    BANK2           256      0     253
    BANK3           256      0     134
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4660_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  283105
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fldiv
                            ___flmul
                           ___xxtofl
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fldiv
   ___flmul
   ___xxtofl
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      86      11       52.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      79       5       75.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     606      58        0.0%
DATA                 0      0     606       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 23:44:03 2019

                    _SPI1_Exchange8bit 7A78               __end_of_set_display_info 7AD2  
                                    _C 0100                                      _D 0400  
                                    _R 0060                                      _T FE73  
                                    _V 0200       __end_of_TMR5_SetInterruptHandler 788C  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 7D0A                            __CFG_LVP$ON 000000  
                                  l171 7C36                                    l701 76F4  
                                  l581 76C8                                    l835 7A86  
                                  _GIE 01FE97                                    _abs 7286  
                                  _pad 5F6C                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 7BCA                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 7A12                     _UART1_Transmit_ISR 76A2  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 7A34  
                         __CFG_ZCD$OFF 000000                                   l1028 745E  
                                 l2200 59D6                                   l1324 70AA  
                                 l1238 3326                                   l2207 5AAA  
                                 l1247 34D2                                   l2234 5948  
                                 l1540 74BC                                   l1460 6740  
                                 l1703 5FC8                                   l1464 6AF0  
                                 l1553 527A                                   l1723 38C6  
                                 l1803 0B1A                                   l2196 65D6  
                                 l1557 618A                                   l1549 511E  
                                 l2519 32D8                                   l1479 7528  
                                 l1912 1D78                                   l1841 4764  
                                 l2626 72C6                                   l2474 2D5E  
                                 l2618 57D6                                   l2555 25A2  
                                 l6011 2CFE                                   l1597 7ACE  
                                 l6013 2D0E                                   l2718 5E4A  
                                 l2486 2BEE                                   l1862 3CAC  
                 _ADCC_StartConversion 7C50                                   l6007 2CE6  
                                 l1759 123A                                   l2657 4E22  
                                 l2595 5478                                   l6211 4E8A  
                                 l6019 2D3E                                   l6123 425E  
                                 l1788 066A                                   l2764 5640  
                                 l6053 72B6                                   l6133 4364  
                                 l6125 42AE                                   l6109 4140  
                                 l6071 5778                                   l6151 6C7A  
                                 l2792 6C8A                                   l6129 42F6  
                                 l6227 4FBE                                   l6219 4F12  
                                 l6411 1E1E                                   l6403 1DD8  
                                 l6067 5774                                   l2779 6D0E  
                                 l6173 49EE                                   l6333 3112  
                                 l6325 30E0                                   l6317 307A  
                                 l6309 3044                                   l6253 2DFE  
                                 l6501 23D8                                   l6421 1EA6  
                                 l6413 1E4E                                   l6077 57CE  
                                 l6191 4B06                                   l6167 499A  
                                 l6343 3154                                   l6319 308C  
                                 l6327 30E4                                   l6247 2DBE  
                                 l6511 2422                                   l6431 1F1C  
                                 l6095 6CFE                                   l8041 735E  
                                 l6353 319E                                   l6273 2EDC  
                                 l6257 2E14                                   l6409 1E18  
                                 l6179 4A34                                   l6611 5E74  
                                 l6339 312E                                   l6291 2F9A  
                                 l6267 2E9C                                   l6259 2E44  
                                 l6515 2428                                   l6427 1EE6  
                                 l5811 2602                                   l7307 550A  
                                 l8045 7388                                   l8117 74D2  
                                 l6373 3254                                   l6357 31A4  
                                 l6285 2F60                                   l6277 2EF2  
                                 l6525 249C                                   l6429 1EEC  
                                 l5821 2658                                   l7309 5576  
                                 l7271 4C94                                   l7255 4BD2  
                                 l6615 5E86                                   l6367 3218  
                                 l6279 2F22                                   l6543 2550  
                                 l6535 250C                                   l6439 1F3E  
                                 l5903 2986                                   l5823 2688  
                                 l9007 0D24                                   l9015 0D90  
                                 l9023 0EA2                                   l8217 76F0  
                                 l8401 6A16                                   l7281 4D76  
                                 l7273 4CAC                                   l7265 4C68  
                                 l7257 4BF4                                   l6385 32AC  
                                 l6545 256A                                   l6529 24E2  
                                 l5841 2732                                   l5817 2642  
                                 l6721 58E0                                   l6713 58B4  
                                 l8243 7446                                   l7291 4E12  
                                 l7275 4CD0                                   l6571 5AEE  
                                 l6619 5E9E                                   l6387 32BC  
                                 l6379 3284                                   l6299 2FB4  
                                 l6491 2396                                   l5931 2A6E  
                                 l5907 29B6                                   l5835 26F2  
                                 l6723 58F6                                   l6715 58D0  
                                 l9051 0FF0                                   l9035 0F3A  
                                 l9131 4806                                   l9123 479A  
                                 l9107 46E6                                   l9203 3EEE  
                                 l8421 5334                                   l8413 52C8  
                                 l6741 71E8                                   l7277 4D0E  
                                 l6565 5AD8                                   l6637 5F52  
                                 l6629 5F1E                                   l6653 65D4  
                                 l6645 655E                                   l6661 5994  
                                 l5925 2A52                                   l5853 279A  
                                 l5845 2748                                   l5829 26C0  
                                 l9061 1092                                   l9141 48BC  
                                 l8423 5342                                   l5783 68BC  
                                 l6591 5BB4                                   l6671 5A72  
                                 l5927 2A64                                   l5935 2AA0  
                                 l5847 2778                                   l9071 10E2  
                                 l9127 47D6                                   l8433 53A4  
                                 l8425 5358                                   l5785 68DE  
                                 l6577 5B0E                                   l6649 65A0  
                                 l6497 23B2                                   l9049 0FD6  
                                 l9145 48F8                                   l9137 4890  
                                 l9313 18E8                                   l9305 1830  
                                 l9241 1326                                   l8195 76C4  
                                 l8435 53C2                                   l8427 5376  
                                 l6667 5A24                                   l5971 2C2E  
                                 l5947 2B78                                   l5883 28D8  
                                 l9219 3FD8                                   l9171 3D12  
                                 l9243 1360                                   l9411 454E  
                                 l8445 53F6                                   l8437 53D8  
                                 l5981 2C56                                   l5965 2C10  
                                 l5957 2BD2                                   l5949 2B9E  
                                 l5893 294A                                   l9165 3CD6  
                                 l9317 191C                                   l9245 1376  
                                 l9405 44E4                                   l8455 5458  
                                 l8703 600E                                   l6599 5BE8  
                                 l6679 5AA8                                   l6687 7216  
                                 l5967 2C22                                   l9087 119A  
                                 l9159 3C9C                                   l9263 14A8  
                                 l9431 6772                                   l8393 6A04  
                                 l7577 79E6                                   l8721 6BD2  
                                 l5985 2C5C                                   l5897 296A  
                                 l6697 5832                                   l8713 63CA  
                                 l9361 1CA6                                   l9337 1A7C  
                                 l9265 14E2                                   l9433 67B2  
                                 l7657 7532                                   l8707 6058  
                                 l5899 297C                                   l9195 3E68  
                                 l9179 3D72                                   l9371 1D04  
                                 l9347 1B2A                                   l9283 165C  
                                 l9267 14F8                                   l9419 45FC  
                                 l5997 2CBA                                   l8805 00AC  
                                 l9293 16F2                                   l9517 60A2  
                                 l8671 5D60                                   l8719 6BA6  
                                 l8911 05F6                                   l8903 0594  
                                 l9367 1D00                                   l8753 3900  
                                 l8745 38B6                                   l8913 0602  
                                 l8817 00F0                                   l8825 0146  
                                 l9377 1D24                                   l9633 50EE  
                                 l9721 3340                                   l9713 3308  
                                 l8683 6948                                   l8835 01EA  
                                 l8843 0258                                   l9483 6848  
                                 l9715 3310                                   l8693 5F98  
                                 l8757 391E                                   l8933 06F0  
                                 l8853 02FC                                   l8861 032A  
                                 l8837 0216                                   l9645 5216  
                                 l8687 6986                                   l8791 3C1E  
                                 l8767 3B30                                   l8839 022C  
                                 l9399 4426                                   l9719 332E  
                                 l8697 5FC0                                   l8929 06B8  
                                 l8873 0406                                   l9809 37D6  
                                 l9761 34D6                                   l8699 5FD2  
                                 l8787 3BE2                                   l8971 0B12  
                                 l8963 0A48                                   l8939 077A  
                                 l8891 0554                                   l8875 0470  
                                 l9763 34FE                                   l8973 0B34  
                                 l8949 0926                                   l8869 0396  
                                 l9781 3552                                   l9773 352E  
                                 l8895 057C                                   l8879 04D2  
                                 STR_1 FF76                                   STR_2 FFA7  
                                 l8897 058E                                   STR_3 FFF2  
                                 STR_4 FF65                                   l8987 0C32  
                                 STR_5 FF87                                   STR_6 FFA7  
                                 l9797 37A2                                   STR_7 FFF2  
                                 STR_8 FF54                                   l8999 0CBA  
                                 STR_9 FFB6                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u4200 690C  
                                 u5010 7668                                   _T2PR 003FAB  
                                 u5020 766A                                   u5110 4B3E  
                                 u4230 7638                                   u4207 68FE  
                                 u5040 4994                                   u5200 4F3E  
                                 u4400 29CE                                   u4240 763A  
                                 u5130 4B90                                   u5060 49EA  
                                 u5220 4FF6                                   u4500 2BC0  
                                 u4340 28FE                                   u6020 58FE  
                                 u4350 291E                                   u5071 49F4  
                                 u4351 2918                                   u5080 4A2E  
                                 u5240 5048                                   u5160 4E84  
                                 u4600 2CAA                                   u6040 5928  
                                 u6050 71C4                                   u5090 4A60  
                                 _T6PR 003F93                                   u6060 71E4  
                                 u5180 4EDA                                   u5420 3196  
                                 u4540 2C34                                   u4460 2A96  
                                 _PMD0 0039C0                                   u4605 2C9A  
                                 _PMD1 0039C1                                   u5190 4F0C  
                                 u4630 2CCA                                   u4390 29AE  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u4560 2C4E                                   u4368 2920  
                                 u4800 57C8                                   _PMD4 0039C4  
                                 u4465 2A86                                   _PMD5 0039C5  
                                 u4730 729A                                   _PMD6 0039C6  
                                 u4395 299E                                   _PMD7 0039C7  
                                 u7060 4C64                                   u5460 31F2  
                                 u5380 310C                                   u5700 24F6  
                                 u4740 56F8                                   u5605 2350  
                                 u5470 322C                                   u4910 4204  
                                 u4830 6CBC                                   u4670 7608  
                                 u7080 4DBC                                   u5480 3268  
                                 u5640 241A                                   u4840 6CBE  
                                 u7160 5602                                   u4680 760A  
                                 u5465 31E2                                   u4745 56EE  
                                 u7090 4DBE                                   u5570 1F2C  
                                 u4930 42DC                                   u9010 116E  
                                 u4915 41FA                                   u5820 5ECA  
                                 u4860 40D8                                   u9020 1170  
                                 u9100 4842                                   u5750 5B3A  
                                 u4790 57C6                                   u4870 4124  
                                 u4935 42D2                                   u8240 5D54  
                                 u5840 5F3E                                   u5680 2476  
                                 u8320 6444                                   u4960 73D6  
                                 u9200 3DC0                                   u5585 20C0  
                                 u4785 57A8                                   u4865 40CE  
                                 u8410 389C                                   u5770 5BD4  
                                 u5690 24B0                                   u9130 491E  
                                 u4970 73D8                                   u5595 2188  
                                 u9107 4834                                   u8260 5DD0  
                                 u8500 3BB8                                   u5940 7212  
                                 u4980 6C38                                   u9300 3F68  
                                 u9220 3E1E                                   u5685 2466  
                                 u8430 38EC                                   u5950 5812  
                                 u4990 6C3A                                   u9230 3E20  
                                 u9150 3C82                                   u4895 415E  
                                 u8327 6436                                   u7560 6E62  
                                 u8440 3B44                                   u8360 3818  
                                 u5880 65D0                                   u5960 5826  
                                 u4896 4164                                   u9400 1540  
                                 u7545 7412                                   u4897 4172  
                                 u8370 381A                                   u5970 5860  
                                 u8610 02A6                                   u9090 47FC  
                                 u9250 3EEA                                   u9410 1542  
                                 u8451 3B74                                   u5955 5808  
                                 u8460 3B8A                                   u8620 02A8  
                                 u8540 00DA                                   u9260 3F0A  
                                 u9180 3D6A                                   u9500 19D6  
                                 u9420 1568                                   u8461 3B88  
                                 u8470 3B9E                                   u8390 388A  
                                 u9190 3DBE                                   u9510 19D8  
                                 u9350 13BE                                   u5975 5856  
                                 u9271 3F3A                                   u9255 3ECC  
                                 u8480 3BA2                                   u8720 05C6  
                                 u9280 3F50                                   u9360 13C0  
                                 u7585 6E96                                   u9281 3F4E  
                                 u7586 6E98                                   u7578 6E64  
                                 u8570 0194                                   u9290 3F64  
                                 u9370 13E6                                   u9610 4670  
                                 u8660 050E                                   u8580 0196  
                                 u8830 0A18                                   u9550 1B7E  
                                 u9470 1746                                   u8760 0648  
                                 u9640 6828                                   u8930 0EE4  
                                 u8690 0562                                   u9730 5266  
                                 _PLLR 01CEE0                                   u9740 5268  
                                 u7990 53EC                                   u8990 10B8  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                     __end_of_ADCC_ISR 7510                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01A8                                   _atoi 4BB8  
                                 _ctoa 6B88                                   _main 32E2  
                                 _dtoa 37E8                                   _seed 00B5  
                                 _prec 0020                                   _nout 001C  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 467A  
                                 btemp 0035                                   _xtoa 3C68  
               __end_of_check_adc_scan 7D02                          ___fpclassifyf 564A  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0026  
            __end_of_SPI1_Exchange8bit 7A96                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 7954                           ___param_bank 000000  
                   ?_UART1_rx_vect_isr 0055                       __end_of_INT0_ISR 7C9E  
                     __end_of_INT1_ISR 7CAE         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 6748          __end_of_OSCILLATOR_Initialize 7C3C  
                                PRLOCK 0039EF                        __end_of___aodiv 4BB8  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                      __end_of___fladd 2D68                                  _ADCLK 003EFF  
                      __end_of___aomod 506C                                  _ADPCH 003EF1  
                      __end_of___fldiv 32E2                                  _ADREF 003EFD  
                      __end_of___awdiv 5C02                        __end_of___flneg 7240  
                                STR_10 FFB6                                  STR_11 FFFC  
                                STR_12 FFF9                                  STR_20 FF98  
                                STR_21 FF98                                  STR_22 FF98  
                                STR_14 FFC3                                  STR_15 FFD9  
                                STR_23 FF03                                  STR_40 FFF6  
                                STR_32 FFE2                                  STR_16 FF2E  
                                STR_17 FF2E                                  STR_33 FFEA  
                                STR_25 FF41                          __CFG_WDTE$OFF 000000  
                                STR_42 FFF6                                  STR_18 FFCF  
                                STR_26 FF1B                                  STR_19 FFCF  
                                STR_36 FFE6                        __end_of___awmod 5F6C  
                                STR_37 FFEE                                  _ADRPT 003EEC  
                      __end_of___flmul 25AC                        __end_of___flsub 7286  
                      __end_of___fltol 5952                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95             _ADCC_ADTI_InterruptHandler 0004  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 00D4                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 7D1C  
              __size_of_clear_adc_scan 0006      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 792C                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 70A0                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 7BB2                           _DMA1CON1bits 003BFD  
                                _flags 0022                                  _fputc 5D30  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 73E2  
                                _fputs 6938                        __end_of_isdigit 7674  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0055  
                                _srand 757C                                  _width 001E  
                                _putch 7B64                        __end_of_islower 7614  
                      __end_of_isspace 71F8               _INT1_SetInterruptHandler 788C  
                      __end_of_isupper 7644                                  pclath 003FFA  
                                tablat 003FF5                                  ltemp0 0035  
                                ltemp1 0039                                  ltemp2 003D  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0035  
                                ttemp1 0038                                  ttemp2 003B  
                                ttemp3 003E                                  ttemp5 0036  
                                ttemp6 0039                                  ttemp7 003D  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 783C  
          _UART1_SetRxInterruptHandler 7814                                  wtemp0 0035  
                                wtemp1 0037                                  wtemp2 0039  
                                wtemp3 003B                                  wtemp4 003D  
                                wtemp5 003F                                  wtemp8 0036  
                      __end_of_sprintf 6298                        __end_of_tolower 6D18  
                      __end_of_strncmp 564A                        __end_of_toupper 6C94  
                  ??_UART1_tx_vect_isr 00D4              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 797A               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 7312                  __end_of_ringBufS_init 779C  
                      __initialization 6456                      _UART2_rx_vect_isr 79A4  
                         __end_of_atoi 4E2C                           __end_of_ctoa 6C10  
                         __end_of_main 37E8                           __end_of_dtoa 3C68  
                         __end_of_stoa 4938                           __end_of_xtoa 4022  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0055  
              __end_of_TMR2_Initialize 7BE2               __size_of_DMA2_Initialize 005A  
             _TMR5_SetInterruptHandler 7864                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 00D4              __end_of_UART1_tx_vect_isr 7952  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 76FA  
                      _PWM8_Initialize 7C10                       _UART1_Initialize 6F1E  
                    _UART2_tx_vect_isr 797C                     _UART2_Transmit_ISR 76CE  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                         _start_adc_scan 6EBA  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                     _PWM8_LoadDutyValue 73E2  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0055                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 i1l1045 7092  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                       __CFG_WDTCCS$SC 000000                                 _FVRCON 003EC1  
                     _mode_lamp_bright 7C80                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               u356_48 7A20                                 _IVTADU 00389F  
                               u358_48 7A42           __size_of_eaDogM_WriteCommand 000E  
                               u379_40 7ADA                                 u379_46 7ADC  
                               _OSCFRQ 0039DF                                 u762_20 7B86  
                               u762_26 7B88                                 u790_44 6A36  
                               u790_45 6A30                                 u792_40 6A52  
                               u792_46 6A54                                 u776_48 7A64  
                               u779_28 79FE                       __end_of___xxtofl 5482  
             __end_of_send_lcd_cmd_dma 71A6                    ??_UART2_tx_vect_isr 00D4  
            __end_of_UART2_rx_vect_isr 79CA             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 7CBE                       _UART2_Initialize 6FE4  
                               _WaitMs 7510                           _CCPTMRS1bits 003F5F  
 __size_of_ADCC_SetADIInterruptHandler 0028                                 ___flge 5952  
                               ___fleq 651C                      _ADCC_ThresholdISR 6DEC  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 6A66  
                               _efgtoa 0000                                 _floorf 4022  
                   ?_ADCC_ThresholdISR 0055                                 _memset 438E  
                 __size_of_help_button 0038                                 clear_0 64A2  
                               clear_1 64B6                                 clear_2 64C8  
                               clear_3 64D4                                 clear_4 64E0  
                               clear_5 64EC                                 clear_6 64F8  
                               clear_7 6504                                 _printf 6F82  
                   _eaDogM_WriteString 67F0                                 _strcpy 6382  
                            ?_ADCC_ISR 0055                                 _strlen 6896  
                   __size_of_TimerDone 0024                        _ADCC_Initialize 6D82  
                       _PMD_Initialize 7C3C              __end_of_UART2_tx_vect_isr 79A2  
                               lltemp0 0035                                 lltemp1 003D  
                               lltemp2 0045                                 lltemp3 004D  
                  ??_ADCC_ThresholdISR 0056                 __end_of_start_adc_scan 6F1E  
                         __mediumconst FE72                                 preinc2 003FDC  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 70FA  
                     __end_of_vfprintf 67F0                             _StartTimer 7464  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 7358  
                    _SYSTEM_Initialize 72CC                             __accesstop 0060  
              __end_of__initialization 6516                              ?_INT0_ISR 0055  
                            ?_INT1_ISR 0055                   __end_of_display_help 7CFA  
                 __end_of_display_info 7CF2              __end_of_CLKREF_Initialize 7CC8  
                        ___rparam_used 000000             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 7424                  _set_temp_display_help 7C62  
            __end_of_ADCC_ThresholdISR 6E54                 __end_of_ringBufS_flush 6AF8  
                       __pcstackCOMRAM 0055                             ___inthi_sp 0F56  
                           ___intlo_sp 17AB                           __pidataBANK0 7BE2  
                         __pidataBANK2 65E0                              ?_TMR5_ISR 0055  
                            ?_TMR6_ISR 0055                         ivt0x8_undefint 00AC  
                        __end_of_fputc 5E54                          __end_of_fputs 69D0  
                        __end_of_srand 75B0                  __end_of_TMR5_CallBack 7A12  
                        __end_of_putch 7B7E                __end_of_PWM8_Initialize 7C26  
              __end_of_TMR6_Initialize 7724                      _adc_int_t_handler 69D0  
               __end_of_PMD_Initialize 7C50                             ??_ADCC_ISR 0055  
                __end_of_TMR6_CallBack 7A78            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 7CD4  
                       _clear_adc_scan 7D0A                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0013              __end_of_SYSTEM_Initialize 7312  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
                           __pbssBANK2 02BD                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                           __pbssBANK6 0600                             _check_help 506C  
                _INT0_InterruptHandler 0019                             ??_INT0_ISR 0055  
                           ??_INT1_ISR 0055                      __end_of_TimerDone 79EE  
                     _DMA1_DMADCNT_ISR 7CC8             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 7B48  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 7864  
              __end_of_ADCC_Initialize 6DEC                             ??_TMR5_ISR 00D5  
            __end_of_adc_int_t_handler 6A66                             ??_TMR6_ISR 00D4  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 7904  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 78DC                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 7AF0  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 7D10                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 7CB0                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 0B3E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 7464  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 7BB2  
                              __Lparam 0000               __end_of_UART1_Initialize 6F82  
                      __size_of_WaitMs 0036                        __size_of___flge 0162  
                      __size_of___fleq 00C4                                ___aodiv 4938  
                              ___fladd 25AC                                ___aomod 4E2C  
                              ___fldiv 2D68                                ___awdiv 5AB4  
                              ___flneg 71F8                                ___awmod 5E54  
                              ___flmul 1D82                                ___flsub 7240  
                              ___fltol 57E0              __end_of_UART1_Receive_ISR 7B0E  
                      __size_of_efgtoa 1244                        __size_of_floorf 036C  
                 __end_of_init_display 6382                                __pcinit 6456  
             __end_of_mode_lamp_bright 7C8E                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 7C72  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 32E2                                __ptext1 6EBA  
                              __ptext2 7C50                                __ptext3 757C  
                              __ptext4 6298                                __ptext5 7724  
                              __ptext6 774C                                __ptext7 7A78  
                              __ptext8 7774                                __ptext9 7A96  
                    _UART2_Receive_ISR 7B0E                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strcpy 00D4  
                      __size_of_strlen 00A2                                us514999 4BA2  
                _OSCILLATOR_Initialize 7C26                                us525999 505A  
                         __size_of_abs 0046                           __size_of_pad 0114  
                              _isalpha 739E                                _isdigit 7644  
                              us904999 468C                                us835999 3802  
                              us917999 3CE8                                _mode_sw 0028  
                              _islower 75E4                                _isspace 71A6  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 7042                                _isupper 7614  
           __size_of_SYSTEM_Initialize 0046                                _sprintf 618E  
                              _tolower 6C94                  __size_of_display_help 0008  
                __size_of_display_info 0008                                _strncmp 5482  
                              _toupper 6C10                   end_of_initialization 6516  
  __end_of_UART1_SetTxInterruptHandler 7814            _UART1_SetTxInterruptHandler 77EC  
  __end_of_UART2_SetRxInterruptHandler 77EC            _UART2_SetRxInterruptHandler 77C4  
                    __end_of_set_vterm 7B64                      __end_of_vfpfcnvrt 1D82  
                            _SPI1TCNTL 003D12                                postdec0 003FED  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE             __size_of_adc_int_t_handler 0096  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 7D1C  
            __end_of_UART2_Receive_ISR 7B2C                         wdtdelay@dcount 00AE  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00D5  
                _INT1_InterruptHandler 0016                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 783C                           _display_help 7CF2  
                _TMR5_InterruptHandler 00B2                           _display_info 7CEA  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 0038  
  __end_of_ADCC_SetADIInterruptHandler 792C            _ADCC_SetADIInterruptHandler 7904  
                           _update_lcd 6080                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 6D18  
                      _SPI1_Initialize 7BFA                  __end_of_get_vterm_ptr 76A2  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 7546           __end_of_INTERRUPT_Initialize 6EBA  
                           _vterm_dump 5C02                         __end_of___flge 5AB4  
                       __end_of___fleq 65E0   __end_of_INT0_DefaultInterruptHandler 7D24  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 7D22  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 70FA  
                       __end_of_efgtoa 1244                      __size_of_TMR5_ISR 005C  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 0212  
                       __end_of_floorf 438E            __size_of_UART2_Transmit_ISR 002C  
                           floorf@F524 00A6                         __end_of_memset 467A  
                       __end_of_printf 6FE4               __end_of_DMA1_DMADCNT_ISR 7CD2  
          __size_of_PWM8_LoadDutyValue 0042                  __end_of_INT0_CallBack 7A34  
                       __end_of_strcpy 6456                         __end_of_strlen 6938  
                  start_initialization 6456   __end_of_TMR5_DefaultInterruptHandler 7B98  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 7B7E  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 72CC  
                __end_of_INT1_CallBack 7A56              __size_of_set_display_info 001E  
                          __end_of_pad 6080                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 7774          __size_of_ADCC_StartConversion 0012  
                           ivt0x8_base 0008                          _uart1RxBuffer 0500  
                __end_of___fpclassifyf 57E0                          _uart2RxBuffer 0600  
                        _uart1TxBuffer 0168               __end_of_DMA1_DMASCNT_ISR 7CBE  
                        _uart2TxBuffer 02BD                         _DMA1_DMAOR_ISR 7CE0  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A6                              _TimerDone 79CA  
                        _ringBufS_init 7774                            __pdataBANK0 00BD  
                          __pdataBANK2 0200             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 75E4                    __end_of_help_button 74D8  
      __end_of_eaDogM_WriteStringAtPos 757C                __end_of_DMA1_Initialize 6D82  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 78DC  
                        __pcstackBANK0 00D4               __size_of_TMR2_Initialize 0018  
                    __size_of___xxtofl 0204                __end_of_SPI1_Initialize 7C10  
             _UART1_RxInterruptHandler 000D               _UART2_TxInterruptHandler 0010  
                            __end_of_T FF03              __size_of_ringBufS_put_dma 00AA  
                         _init_display 6298                 __end_of_DMA1_DMAOR_ISR 7CEA  
               __size_of_TMR5_CallBack 0024                  _TMR6_InterruptHandler 0001  
               __size_of_TMR6_CallBack 0022                __end_of_DMA2_Initialize 7154  
               _PIN_MANAGER_Initialize 6AF8                   __end_of_wait_lcd_set 7D16  
                        __pmediumconst FE72                              __ptext100 78B4  
                            __ptext101 70FA                              __ptext110 7B7E  
                            __ptext102 6D18                              __ptext111 7C90  
                            __ptext103 7CBE                              __ptext120 7D26  
                            __ptext112 7A12                              __ptext104 6D82  
                            __ptext121 7AD2                              __ptext113 7D22  
                            __ptext105 78DC                              __ptext130 7B0E  
                            __ptext122 6DEC                              __ptext114 7CA0  
                            __ptext106 7904                              __ptext131 7B98  
                            __ptext123 792C                              __ptext115 7A34  
                            __ptext107 7044                              __ptext132 7A56  
                            __ptext124 76A2                              __ptext116 7D24  
                            __ptext108 7424                              __ptext133 7358  
                            __ptext125 7954                              __ptext117 7D1C  
                            __ptext109 79EE                              __ptext134 7CB0  
                            __ptext126 7AF0                              __ptext118 74D8  
                            __ptext135 7CC8                              __ptext127 797C  
                            __ptext119 69D0                              __ptext136 7CD4  
                            __ptext128 76CE                              __ptext137 7CE0  
                            __ptext129 79A4                              __ptext138 0000  
                   __end_of_StartTimer 74A0                      __size_of_wdtdelay 005A  
                    __size_of_vfprintf 00A8                               _ADCC_ISR 74D8  
               __CFG_BBSIZE$BBSIZE_512 000000                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA2CON0 003BDC                               _DMA2CON1 003BDD  
                             _DMA2AIRQ 003BDE                               _DMA1SIRQ 003BFF  
                             _DMA2SIRQ 003BDF                __size_of_get_raw_result 001E  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 0124  
                             _T2CLKCON 003FAE                         __size_of_fputs 0098  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 6E54                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0055                               _INT0_ISR 7C90  
                             _INT1_ISR 7CA0                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0082                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0343  
                            _ring_buf2 0300                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               i2u395_48 74F4  
                             i2u395_49 7508                               i2u804_48 6E20  
                             i2u804_49 6E34                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9                               i2u980_48 798E  
             __size_of_TMR5_Initialize 0046                               i2u982_48 79B6  
                             i2u976_48 793E                               i2u978_48 7966  
                            _set_vterm 7B48                    __size_of_update_lcd 010E  
                          _help_button 74A0             __end_of_UART1_Transmit_ISR 76CE  
                             _TMR5_ISR 7044                               _TMR6_ISR 7B98  
                            _port_data 00C4                              _vfpfcnvrt 1244  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 79EE  
                           _ADCON0bits 003EF8                     __end_of_check_help 527E  
                            _start_lcd 7D16                __size_of_FVR_Initialize 0008  
            __size_of_send_lcd_cmd_dma 0052                          _TMR6_CallBack 7A56  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                     _set_display_info 7AB4               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 002A                            _INTCON0bits 003FD2  
                            copy_data0 646A                              copy_data1 648C  
             _INT0_SetInterruptHandler 78B4                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 0032    __end_of_UART2_SetTxInterruptHandler 77C4  
          _UART2_SetTxInterruptHandler 779C                               __Hparam0 0000  
                         _uart1RxCount 002F                           _uart2RxCount 0029  
                             __Lparam0 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_check_adc_scan 0008  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 7B2C  
                         _send_lcd_cmd 774C                       __size_of___aodiv 0280  
                     __size_of___fladd 07BC                       __size_of___aomod 0240  
                      _adc_int_handler 7AD2                       __size_of___fldiv 057A  
                     __size_of___awdiv 014E                       __size_of___flneg 0048  
                     __size_of___awmod 0118                       __size_of___flmul 082A  
                     __size_of___flsub 0046                       __size_of___fltol 0172  
                __end_of_DMA1_DMAA_ISR 7CDE                     ___fpclassifyf@F463 00AA  
 __size_of_UART1_SetRxInterruptHandler 0028                               ___xxtofl 527E  
                    ?_DMA1_DMADCNT_ISR 0055               __size_of_ADCC_Initialize 006A  
          __end_of_eaDogM_WriteCommand 7C80                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 00D5                               __ptext10 7C72  
                             __ptext11 7D0A                               __ptext20 7B2C  
                             __ptext12 506C                               __ptext21 70A0  
                             __ptext13 5C02                               __ptext30 3C68  
                             __ptext22 67F0                               __ptext14 618E  
                             __ptext31 6C10                               __ptext23 7D10  
                             __ptext15 7674                               __ptext40 4022  
                             __ptext32 75E4                               __ptext24 7D16  
                             __ptext16 7510                               __ptext41 564A  
                             __ptext33 739E                               __ptext25 6A66  
                             __ptext17 6080                               __ptext50 5E54  
                             __ptext42 57E0                               __ptext34 5482  
                             __ptext26 438E                               __ptext18 7546  
                             __ptext51 5AB4                               __ptext43 7240  
                             __ptext35 467A                               __ptext27 6F82  
                             __ptext19 7154                               __ptext60 5D30  
                             __ptext52 37E8                               __ptext44 25AC  
                             __ptext36 0000                               __ptext28 6748  
                             __ptext61 7B64                               __ptext53 7286  
                             __ptext45 71F8                               __ptext37 6C94  
                             __ptext29 1244                               __ptext70 7C80  
                             __ptext62 669E                               __ptext54 4E2C  
                             __ptext46 1D82                               __ptext38 7614  
                             __ptext71 73E2                               __ptext63 4BB8  
                             __ptext55 4938                               __ptext47 5952  
                             __ptext39 6382                               __ptext80 6FE4  
                             __ptext72 74A0                               __ptext64 71A6  
                             __ptext56 6B88                               __ptext48 651C  
                             __ptext81 779C                               __ptext73 79CA  
                             __ptext65 7644                               __ptext57 5F6C  
                             __ptext49 2D68                               __ptext90 7BCA  
                             __ptext82 77C4                               __ptext74 7464  
                             __ptext66 7B48                               __ptext58 6896  
                             __ptext91 7BFA                               __ptext83 6F1E  
                             __ptext75 7CEA                               __ptext67 7C62  
                             __ptext59 6938                               __ptext92 7C10  
                             __ptext84 77EC                               __ptext76 7CF2  
                             __ptext68 7AB4                               __ptext93 7C3C  
                             __ptext85 7814                               __ptext77 7CFA  
                             __ptext69 7BB2                               __ptext94 6AF8  
                             __ptext86 76FA                               __ptext78 527E  
                             __ptext95 7C26                               __ptext87 783C  
                             __ptext79 72CC                               __ptext96 6E54  
                             __ptext88 7312                               __ptext97 7D02  
                             __ptext89 7864                               __ptext98 75B0  
                             __ptext99 788C                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_tolower 0084  
                     __size_of_strncmp 01C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 669E                          __size_of_atoi 0274  
                        __size_of_ctoa 0088                          __size_of_main 0506  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                          __size_of_xtoa 03BA  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0055  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0007                              stoa@F1166 00BD  
                   ??_DMA1_DMASCNT_ISR 00D5           __end_of_ADCC_StartConversion 7C62  
                             _spi_link 009A                               _wdtdelay 70A0  
           __end_of_UART2_Transmit_ISR 76FA                               _vfprintf 6748  
           __end_of_PWM8_LoadDutyValue 7424   __end_of_INT1_DefaultInterruptHandler 7D26  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 7D24  
                        ??_Default_ISR 0055                            _uart1RxHead 0031  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0034  
                          _uart2RxHead 002B                            _uart1RxTail 0030  
                       _get_raw_result 7A96                            _uart2TxHead 002E  
                          _uart1TxTail 0033                            _uart2RxTail 002A  
                          _uart2TxTail 002D                           _wait_lcd_set 7D10  
                   _EXT_INT_Initialize 75B0   __end_of_TMR6_DefaultInterruptHandler 739E  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 7358  
 __end_of_ADCC_DefaultInterruptHandler 7D28  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 7D26                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 7724  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 7C72  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 6896  
                __end_of_mode_lamp_dim 7BCA                __end_of_adc_int_handler 7AF0  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 618E                 _uart2TxBufferRemaining 002C  
                       _FVR_Initialize 7D02                 __end_of_get_raw_result 7AB4  
                     _send_lcd_cmd_dma 7154                 __size_of___fpclassifyf 0196  
                TMR5_ISR@CountCallBack 0024       __end_of_INT1_SetInterruptHandler 78B4  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00D5  
             _UART1_TxInterruptHandler 000A              __end_of_send_lcd_cmd_long 774C  
              __size_of_start_adc_scan 0064                    __end_of_Default_ISR 7D22  
       __end_of_PIN_MANAGER_Initialize 6B88              __size_of_mode_lamp_bright 000E  
                   __end_of_vterm_dump 5D30                _eaDogM_WriteStringAtPos 7546  
                        _get_vterm_ptr 7674                         _check_adc_scan 7CFA  
            __size_of_UART2_Initialize 005E  
