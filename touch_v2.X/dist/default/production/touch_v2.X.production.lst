

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 26 04:30:30 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=4,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=4,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=4,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=4,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   172                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   173                           	psect	text146,global,reloc=4,class=CODE,delta=1
   174                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   175                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   176  0000                     
   177                           ; Version 2.10
   178                           ; Generated 31/07/2019 GMT
   179                           ; 
   180                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   181                           ; All rights reserved.
   182                           ; 
   183                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   184                           ; 
   185                           ; Redistribution and use in source and binary forms, with or without modification, are
   186                           ; permitted provided that the following conditions are met:
   187                           ; 
   188                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   189                           ;        conditions and the following disclaimer.
   190                           ; 
   191                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   192                           ;        of conditions and the following disclaimer in the documentation and/or other
   193                           ;        materials provided with the distribution.
   194                           ; 
   195                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   196                           ;        software without specific prior written permission.
   197                           ; 
   198                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   199                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   200                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   201                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   202                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   203                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   204                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   205                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   206                           ; 
   207                           ; 
   208                           ; Code-generator required, PIC18F57K42 Definitions
   209                           ; 
   210                           ; SFR Addresses
   211  0000                     
   212 ;;_inp_index	offset	0
   213 ;;_k	offset	1
   214 ;;_j	offset	2
   215 ;;_i	offset	3
   216 ;;_mode	offset	4
   217 ;;_channel	offset=-1 (param)
   218 ;;_s	offset=-2 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_i	offset=-1 (param)
   224 ;;_cmd	offset=-1 (param)
   225 ;;_i	offset	0
   226 ;;_lp_speed	offset	0
   227 ;;_new	offset=-4 (param)
   228 ;;_bn	offset=-5 (param)
   229 ;;_slow	offset=-6 (param)
   230 ;;_chan	offset=-1 (param)
   231 ;;_to_what	offset=-2 (param)
   232 ;;_u	offset	0
   233 ;;_s	offset=-2 (param)
   234 ;;_index	offset=-1 (param)
   235 ;;_arg	offset	0
   236 ;;_exp	offset	4
   237 ;;_sign	offset=-1 (param)
   238 ;;_val	offset=-5 (param)
   239 ;;_estatus	offset	0
   240 ;;_flipper	offset=-1 (param)
   241 ;;_f	offset	0
   242 ;;_ap	offset	6
   243 ;;_s	offset=-3 (param)
   244 ;;_fmt	offset=-5 (param)
   245 ;;_line	offset=-1 (param)
   246 ;;_vterm	offset=-2 (param)
   247 ;;_numMilliseconds	offset=-2 (param)
   248 ;;_vterm	offset=-1 (param)
   249 ;;_r	offset=-1 (param)
   250 ;;_c	offset=-2 (param)
   251 ;;_strPtr	offset=-4 (param)
   252 ;;_strPtr	offset=-1 (param)
   253 ;;_delay	offset=-4 (param)
   254 ;;_strPtr	offset=-2 (param)
   255 ;;__this	offset=-2 (param)
   256 ;;_clearBuffer	offset=-3 (param)
   257 ;;_s	offset	0
   258 ;;_k	offset	2
   259 ;;_dest	offset=-2 (param)
   260 ;;_c	offset=-4 (param)
   261 ;;_n	offset=-6 (param)
   262 ;;_ap	offset	0
   263 ;;_fmt	offset=-3 (param)
   264 ;;_cfmt	offset	0
   265 ;;_fp	offset=-2 (param)
   266 ;;_fmt	offset=-4 (param)
   267 ;;_ap	offset=-6 (param)
   268 ;;_vfpfcnvrt$4426	offset	0
   269 ;;_vfpfcnvrt$4432	offset	2
   270 ;;_vfpfcnvrt$4425	offset	4
   271 ;;_llu	offset	6
   272 ;;_ll	offset	14
   273 ;;_f	offset	22
   274 ;;_ct	offset	26
   275 ;;_cp	offset	29
   276 ;;_c	offset	31
   277 ;;_fp	offset=-2 (param)
   278 ;;_fmt	offset=-4 (param)
   279 ;;_ap	offset=-6 (param)
   280 ;;_xtoa$4411	offset	0
   281 ;;_xtoa$4410	offset	2
   282 ;;_n	offset	4
   283 ;;_c	offset	12
   284 ;;_i	offset	14
   285 ;;_w	offset	16
   286 ;;_p	offset	18
   287 ;;_fp	offset=-2 (param)
   288 ;;_d	offset=-10 (param)
   289 ;;_x	offset=-11 (param)
   290 ;;_toupper$5071	offset	0
   291 ;;_c	offset=-2 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_c	offset=-2 (param)
   294 ;;_r	offset	0
   295 ;;_l	offset	2
   296 ;;__l	offset=-2 (param)
   297 ;;__r	offset=-4 (param)
   298 ;;_n	offset=-6 (param)
   299 ;;_nuls	offset	0
   300 ;;_l	offset	7
   301 ;;_p	offset	9
   302 ;;_cp	offset	11
   303 ;;_w	offset	13
   304 ;;_i	offset	15
   305 ;;_fp	offset=-2 (param)
   306 ;;_s	offset=-4 (param)
   307 ;;_efgtoa$4390	offset	0
   308 ;;_efgtoa$4389	offset	2
   309 ;;_efgtoa$4388	offset	4
   310 ;;_efgtoa$4384	offset	6
   311 ;;_efgtoa$4380	offset	8
   312 ;;_efgtoa$4379	offset	10
   313 ;;_u	offset	12
   314 ;;_g	offset	16
   315 ;;_l	offset	20
   316 ;;_h	offset	24
   317 ;;_ou	offset	28
   318 ;;_n	offset	32
   319 ;;_e	offset	34
   320 ;;_i	offset	36
   321 ;;_w	offset	38
   322 ;;_p	offset	40
   323 ;;_sign	offset	42
   324 ;;_d	offset	44
   325 ;;_ne	offset	46
   326 ;;_m	offset	48
   327 ;;_pp	offset	50
   328 ;;_t	offset	52
   329 ;;_mode	offset	54
   330 ;;_nmode	offset	55
   331 ;;_fp	offset=-2 (param)
   332 ;;_f	offset=-6 (param)
   333 ;;_c	offset=-7 (param)
   334 ;;_tolower$5056	offset	0
   335 ;;_c	offset=-2 (param)
   336 ;;_c	offset=-2 (param)
   337 ;;_d	offset	0
   338 ;;_s	offset	2
   339 ;;_dest	offset=-2 (param)
   340 ;;_src	offset=-4 (param)
   341 ;;_u	offset	0
   342 ;;_m	offset	4
   343 ;;_e	offset	8
   344 ;;_x	offset=-4 (param)
   345 ;;_u	offset	0
   346 ;;_e	offset	4
   347 ;;_x	offset=-4 (param)
   348 ;;_exp1	offset	0
   349 ;;_sign1	offset	1
   350 ;;_f1	offset=-4 (param)
   351 ;;_b	offset=-4 (param)
   352 ;;_a	offset=-8 (param)
   353 ;;_grs	offset	0
   354 ;;_bexp	offset	1
   355 ;;_aexp	offset	2
   356 ;;_signs	offset	3
   357 ;;_b	offset=-4 (param)
   358 ;;_a	offset=-8 (param)
   359 ;;_f1	offset=-4 (param)
   360 ;;_prod	offset	0
   361 ;;_grs	offset	4
   362 ;;_temp	offset	8
   363 ;;_bexp	offset	10
   364 ;;_aexp	offset	11
   365 ;;_sign	offset	12
   366 ;;_b	offset=-4 (param)
   367 ;;_a	offset=-8 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_ff1	offset=-4 (param)
   371 ;;_ff2	offset=-8 (param)
   372 ;;_grs	offset	0
   373 ;;_rem	offset	4
   374 ;;_new_exp	offset	8
   375 ;;_aexp	offset	10
   376 ;;_bexp	offset	11
   377 ;;_sign	offset	12
   378 ;;_b	offset=-4 (param)
   379 ;;_a	offset=-8 (param)
   380 ;;_sign	offset	0
   381 ;;_counter	offset	1
   382 ;;_dividend	offset=-2 (param)
   383 ;;_divisor	offset=-4 (param)
   384 ;;_quotient	offset	0
   385 ;;_sign	offset	2
   386 ;;_counter	offset	3
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_dtoa$4356	offset	0
   390 ;;_n	offset	2
   391 ;;_i	offset	10
   392 ;;_s	offset	12
   393 ;;_w	offset	14
   394 ;;_p	offset	16
   395 ;;_fp	offset=-2 (param)
   396 ;;_d	offset=-10 (param)
   397 ;;_a	offset=-2 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-8 (param)
   401 ;;_divisor	offset=-16 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	8
   404 ;;_counter	offset	9
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_w	offset	0
   408 ;;_fp	offset=-2 (param)
   409 ;;_c	offset=-3 (param)
   410 ;;_w	offset	0
   411 ;;_i	offset	2
   412 ;;_fp	offset=-2 (param)
   413 ;;_buf	offset=-4 (param)
   414 ;;_p	offset=-6 (param)
   415 ;;_a	offset	0
   416 ;;_s	offset=-2 (param)
   417 ;;_i	offset	0
   418 ;;_c	offset	2
   419 ;;_s	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_fp	offset=-4 (param)
   423 ;;_c	offset=-1 (param)
   424 ;;__this	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_atoi$4909	offset	0
   427 ;;_atoi$4907	offset	2
   428 ;;_atoi$4908	offset	4
   429 ;;_n	offset	5
   430 ;;_neg	offset	7
   431 ;;_s	offset=-2 (param)
   432 ;;_isspace$4947	offset	0
   433 ;;_c	offset=-2 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_vterm	offset=-1 (param)
   436 ;;_new_response_info	offset=-1 (param)
   437 ;;_new_response_info	offset=-1 (param)
   438 ;;_level	offset=-2 (param)
   439 ;;_dutyValue	offset=-2 (param)
   440 ;;_timer	offset=-1 (param)
   441 ;;_timer	offset=-1 (param)
   442 ;;_count	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_state	offset	0
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_i	offset	0
   455 ;;_sw_value	offset	1
   456 ;;_timerVal	offset=-2 (param)
   457 ;;_channel	offset=-1 (param)
   458 ;;_i	offset	0
   459                           
   460                           	psect	idataBANK0
   461  017F52                     __pidataBANK0:
   462                           	opt callstack 0
   463                           
   464                           ;initializer for _R
   465  017F52  0000               	dw	0
   466  017F54  0000               	dw	0
   467  017F56  0000               	dw	0
   468  017F58  0000               	dw	0
   469  017F5A  0000               	dw	0
   470  017F5C  0000               	dw	0
   471  017F5E  0000               	dw	0
   472  017F60  0000               	dw	0
   473  017F62  0000               	dw	0
   474  017F64  0000               	dw	0
   475  017F66  0000               	dw	0
   476  017F68  0000               	dw	0
   477  017F6A  0000               	dw	0
   478  017F6C  0000               	dw	0
   479  017F6E  0000               	dw	0
   480  017F70  0000               	dw	0
   481  017F72  0F6C               	dw	3948
   482  017F74  0F99               	dw	3993
   483  017F76  00                 	db	0
   484  017F77  0000               	dw	0
   485  017F79  00                 	db	0
   486                           
   487                           ;initializer for stoa@F1166
   488  017F7A  28                 	db	40
   489  017F7B  6E                 	db	110
   490  017F7C  75                 	db	117
   491  017F7D  6C                 	db	108
   492  017F7E  6C                 	db	108
   493  017F7F  29                 	db	41
   494  017F80  00                 	db	0
   495                           
   496                           	psect	idataBANK1
   497  016DF6                     __pidataBANK1:
   498                           	opt callstack 0
   499                           
   500                           ;initializer for _V
   501  016DF6  00                 	db	0
   502  016DF7  00                 	db	0
   503  016DF8  00                 	db	0
   504  016DF9  00                 	db	0
   505  016DFA  00                 	db	0
   506  016DFB  00                 	db	0
   507  016DFC  00                 	db	0
   508  016DFD  00                 	db	0
   509  016DFE  00                 	db	0
   510  016DFF  00                 	db	0
   511  016E00  00                 	db	0
   512  016E01  00                 	db	0
   513  016E02  00                 	db	0
   514  016E03  00                 	db	0
   515  016E04  00                 	db	0
   516  016E05  00                 	db	0
   517  016E06  00                 	db	0
   518  016E07  00                 	db	0
   519  016E08  00                 	db	0
   520  016E09  00                 	db	0
   521  016E0A  00                 	db	0
   522  016E0B  00                 	db	0
   523  016E0C  00                 	db	0
   524  016E0D  00                 	db	0
   525  016E0E  00                 	db	0
   526  016E0F  00                 	db	0
   527  016E10  00                 	db	0
   528  016E11  00                 	db	0
   529  016E12  00                 	db	0
   530  016E13  00                 	db	0
   531  016E14  00                 	db	0
   532  016E15  00                 	db	0
   533  016E16  00                 	db	0
   534  016E17  00                 	db	0
   535  016E18  00                 	db	0
   536  016E19  00                 	db	0
   537  016E1A  00                 	db	0
   538  016E1B  00                 	db	0
   539  016E1C  00                 	db	0
   540  016E1D  00                 	db	0
   541  016E1E  00                 	db	0
   542  016E1F  00                 	db	0
   543  016E20  00                 	db	0
   544  016E21  00                 	db	0
   545  016E22  00                 	db	0
   546  016E23  00                 	db	0
   547  016E24  00                 	db	0
   548  016E25  00                 	db	0
   549  016E26  00                 	db	0
   550  016E27  00                 	db	0
   551  016E28  00                 	db	0
   552  016E29  00                 	db	0
   553  016E2A  00                 	db	0
   554  016E2B  00                 	db	0
   555  016E2C  00                 	db	0
   556  016E2D  00                 	db	0
   557  016E2E  00                 	db	0
   558  016E2F  00                 	db	0
   559  016E30  00                 	db	0
   560  016E31  00                 	db	0
   561  016E32  00                 	db	0
   562  016E33  00                 	db	0
   563  016E34  00                 	db	0
   564  016E35  00                 	db	0
   565  016E36  00                 	db	0
   566  016E37  00                 	db	0
   567  016E38  00                 	db	0
   568  016E39  00                 	db	0
   569  016E3A  00                 	db	0
   570  016E3B  00                 	db	0
   571  016E3C  00                 	db	0
   572  016E3D  00                 	db	0
   573  016E3E  00                 	db	0
   574  016E3F  00                 	db	0
   575  016E40  00                 	db	0
   576  016E41  00                 	db	0
   577  016E42  00                 	db	0
   578  016E43  00                 	db	0
   579  016E44  00                 	db	0
   580  016E45  00                 	db	0
   581  016E46  00                 	db	0
   582  016E47  00                 	db	0
   583  016E48  00                 	db	0
   584  016E49  00                 	db	0
   585  016E4A  00                 	db	0
   586  016E4B  00                 	db	0
   587  016E4C  00                 	db	0
   588  016E4D  00                 	db	0
   589  016E4E  00                 	db	0
   590  016E4F  00                 	db	0
   591  016E50  00                 	db	0
   592  016E51  00                 	db	0
   593  016E52  00                 	db	0
   594  016E53  00                 	db	0
   595  016E54  00                 	db	0
   596  016E55  00                 	db	0
   597  016E56  00                 	db	0
   598  016E57  00                 	db	0
   599  016E58  00                 	db	0
   600  016E59  00                 	db	0
   601  016E5A  00                 	db	0
   602  016E5B  00                 	db	0
   603  016E5C  00                 	db	0
   604  016E5D  00                 	db	0
   605  016E5E  00                 	db	0
   606  016E5F  00                 	db	0
   607  016E60  00                 	db	0
   608  016E61  00                 	db	0
   609  016E62  00                 	db	0
   610  016E63  00                 	db	0
   611  016E64  00                 	db	0
   612  016E65  00                 	db	0
   613  016E66  00                 	db	0
   614  016E67  00                 	db	0
   615  016E68  00                 	db	0
   616  016E69  00                 	db	0
   617  016E6A  00                 	db	0
   618  016E6B  00                 	db	0
   619  016E6C  00                 	db	0
   620  016E6D  00                 	db	0
   621  016E6E  00                 	db	0
   622  016E6F  00                 	db	0
   623  016E70  00                 	db	0
   624  016E71  00                 	db	0
   625  016E72  00                 	db	0
   626  016E73  00                 	db	0
   627  016E74  00                 	db	0
   628  016E75  00                 	db	0
   629  016E76  00                 	db	0
   630  016E77  0000               	dw	0
   631  016E79  0000               	dw	0
   632  016E7B  0000               	dw	0
   633  016E7D  0000               	dw	0
   634  016E7F  00                 	db	0
   635  016E80  00                 	db	0
   636  016E81  00                 	db	0
   637  016E82  00                 	db	0
   638  016E83  00                 	db	0
   639  016E84  00                 	db	0
   640  016E85  0000               	dw	0
   641  016E87  0000               	dw	0
   642  016E89  0000               	dw	0
   643  016E8B  0000               	dw	0
   644  016E8D  0000               	dw	0
   645  016E8F  0000               	dw	0
   646  016E91  00                 	db	0
   647  016E92  00                 	db	0
   648  016E93  00                 	db	0
   649  016E94  00                 	db	0
   650  016E95  00                 	db	0
   651  016E96  00                 	db	0
   652  016E97  00                 	db	0
   653  016E98  00                 	db	0
   654  016E99  00                 	db	0
   655  016E9A  00                 	db	0
   656  016E9B  0000               	dw	0
   657  016E9D  0000               	dw	0
   658  016E9F  2D                 	db	45
   659  016EA0  00                 	db	0
   660  016EA1  0000               	dw	0
   661  016EA3  0000               	dw	0
   662  016EA5  0000               	dw	0
   663  016EA7  0000               	dw	0
   664  016EA9  0000               	dw	0
   665  016EAB  0000               	dw	0
   666  016EAD  0000               	dw	0
   667  016EAF  0000               	dw	0
   668                           
   669                           	psect	idataBANK2
   670  0185C2                     __pidataBANK2:
   671                           	opt callstack 0
   672                           
   673                           ;initializer for _port_data
   674  0185C2  FF                 	db	255
   675  0185C3  00                 	db	0
   676  0185C4  FF                 	db	255
   677  0185C5  00                 	db	0
   678  0185C6  FF                 	db	255
   679  0185C7  00                 	db	0
   680  0185C8  FF                 	db	255
   681  0185C9  00                 	db	0
   682  0185CA  FF                 	db	255
   683  0185CB  00                 	db	0
   684  0185CC  FF                 	db	255
   685  0185CD  00                 	db	0
   686  0185CE  FF                 	db	255
   687  0185CF  00                 	db	0
   688  0185D0  FF                 	db	255
   689  0185D1  00                 	db	0
   690                           
   691                           	psect	mediumconst
   692  00FE5E                     __pmediumconst:
   693                           	opt callstack 0
   694  00FE5E  00                 	db	0
   695  00FE5F                     _T:
   696                           	opt callstack 0
   697  00FE5F  63                 	db	99
   698  00FE60  6F                 	db	111
   699  00FE61  6D                 	db	109
   700  00FE62  6D                 	db	109
   701  00FE63  61                 	db	97
   702  00FE64  6E                 	db	110
   703  00FE65  64                 	db	100
   704  00FE66  73                 	db	115
   705  00FE67  20                 	db	32
   706  00FE68  31                 	db	49
   707  00FE69  00                 	db	0
   708  00FE6A  00                 	db	0
   709  00FE6B  00                 	db	0
   710  00FE6C  00                 	db	0
   711  00FE6D  00                 	db	0
   712  00FE6E  00                 	db	0
   713  00FE6F  00                 	db	0
   714  00FE70  00                 	db	0
   715  00FE71  64                 	db	100
   716  00FE72  69                 	db	105
   717  00FE73  73                 	db	115
   718  00FE74  70                 	db	112
   719  00FE75  6C                 	db	108
   720  00FE76  61                 	db	97
   721  00FE77  79                 	db	121
   722  00FE78  73                 	db	115
   723  00FE79  20                 	db	32
   724  00FE7A  31                 	db	49
   725  00FE7B  00                 	db	0
   726  00FE7C  00                 	db	0
   727  00FE7D  00                 	db	0
   728  00FE7E  00                 	db	0
   729  00FE7F  00                 	db	0
   730  00FE80  00                 	db	0
   731  00FE81  00                 	db	0
   732  00FE82  00                 	db	0
   733  00FE83  63                 	db	99
   734  00FE84  6F                 	db	111
   735  00FE85  6D                 	db	109
   736  00FE86  6D                 	db	109
   737  00FE87  61                 	db	97
   738  00FE88  6E                 	db	110
   739  00FE89  64                 	db	100
   740  00FE8A  73                 	db	115
   741  00FE8B  20                 	db	32
   742  00FE8C  32                 	db	50
   743  00FE8D  00                 	db	0
   744  00FE8E  00                 	db	0
   745  00FE8F  00                 	db	0
   746  00FE90  00                 	db	0
   747  00FE91  00                 	db	0
   748  00FE92  00                 	db	0
   749  00FE93  00                 	db	0
   750  00FE94  00                 	db	0
   751  00FE95  64                 	db	100
   752  00FE96  69                 	db	105
   753  00FE97  73                 	db	115
   754  00FE98  70                 	db	112
   755  00FE99  6C                 	db	108
   756  00FE9A  61                 	db	97
   757  00FE9B  79                 	db	121
   758  00FE9C  73                 	db	115
   759  00FE9D  20                 	db	32
   760  00FE9E  32                 	db	50
   761  00FE9F  00                 	db	0
   762  00FEA0  00                 	db	0
   763  00FEA1  00                 	db	0
   764  00FEA2  00                 	db	0
   765  00FEA3  00                 	db	0
   766  00FEA4  00                 	db	0
   767  00FEA5  00                 	db	0
   768  00FEA6  00                 	db	0
   769  00FEA7  63                 	db	99
   770  00FEA8  6F                 	db	111
   771  00FEA9  6D                 	db	109
   772  00FEAA  6D                 	db	109
   773  00FEAB  61                 	db	97
   774  00FEAC  6E                 	db	110
   775  00FEAD  64                 	db	100
   776  00FEAE  73                 	db	115
   777  00FEAF  20                 	db	32
   778  00FEB0  33                 	db	51
   779  00FEB1  00                 	db	0
   780  00FEB2  00                 	db	0
   781  00FEB3  00                 	db	0
   782  00FEB4  00                 	db	0
   783  00FEB5  00                 	db	0
   784  00FEB6  00                 	db	0
   785  00FEB7  00                 	db	0
   786  00FEB8  00                 	db	0
   787  00FEB9  64                 	db	100
   788  00FEBA  69                 	db	105
   789  00FEBB  73                 	db	115
   790  00FEBC  70                 	db	112
   791  00FEBD  6C                 	db	108
   792  00FEBE  61                 	db	97
   793  00FEBF  79                 	db	121
   794  00FEC0  73                 	db	115
   795  00FEC1  20                 	db	32
   796  00FEC2  33                 	db	51
   797  00FEC3  00                 	db	0
   798  00FEC4  00                 	db	0
   799  00FEC5  00                 	db	0
   800  00FEC6  00                 	db	0
   801  00FEC7  00                 	db	0
   802  00FEC8  00                 	db	0
   803  00FEC9  00                 	db	0
   804  00FECA  00                 	db	0
   805  00FECB  63                 	db	99
   806  00FECC  6F                 	db	111
   807  00FECD  6D                 	db	109
   808  00FECE  6D                 	db	109
   809  00FECF  61                 	db	97
   810  00FED0  6E                 	db	110
   811  00FED1  64                 	db	100
   812  00FED2  73                 	db	115
   813  00FED3  20                 	db	32
   814  00FED4  34                 	db	52
   815  00FED5  00                 	db	0
   816  00FED6  00                 	db	0
   817  00FED7  00                 	db	0
   818  00FED8  00                 	db	0
   819  00FED9  00                 	db	0
   820  00FEDA  00                 	db	0
   821  00FEDB  00                 	db	0
   822  00FEDC  00                 	db	0
   823  00FEDD  64                 	db	100
   824  00FEDE  69                 	db	105
   825  00FEDF  73                 	db	115
   826  00FEE0  70                 	db	112
   827  00FEE1  6C                 	db	108
   828  00FEE2  61                 	db	97
   829  00FEE3  79                 	db	121
   830  00FEE4  73                 	db	115
   831  00FEE5  20                 	db	32
   832  00FEE6  34                 	db	52
   833  00FEE7  00                 	db	0
   834  00FEE8  00                 	db	0
   835  00FEE9  00                 	db	0
   836  00FEEA  00                 	db	0
   837  00FEEB  00                 	db	0
   838  00FEEC  00                 	db	0
   839  00FEED  00                 	db	0
   840  00FEEE  00                 	db	0
   841  00FEEF                     __end_of_T:
   842                           	opt callstack 0
   843  0000                     _IVTADL	set	14493
   844  0000                     _IVTADH	set	14494
   845  0000                     _IVTADU	set	14495
   846  0000                     _PIR4bits	set	14756
   847  0000                     _PIE8bits	set	14744
   848  0000                     _PIR8bits	set	14760
   849  0000                     _SCANPR	set	14839
   850  0000                     _DMA2PR	set	14836
   851  0000                     _DMA1PR	set	14835
   852  0000                     _MAINPR	set	14834
   853  0000                     _ISRPR	set	14833
   854  0000                     _PIE2bits	set	14738
   855  0000                     _PIR2bits	set	14754
   856  0000                     _PIE9bits	set	14745
   857  0000                     _PIR9bits	set	14761
   858  0000                     _PIE6bits	set	14742
   859  0000                     _PIE3bits	set	14739
   860  0000                     _PMD7	set	14791
   861  0000                     _PMD6	set	14790
   862  0000                     _PMD5	set	14789
   863  0000                     _PMD4	set	14788
   864  0000                     _PMD3	set	14787
   865  0000                     _PMD2	set	14786
   866  0000                     _PMD1	set	14785
   867  0000                     _PMD0	set	14784
   868  0000                     _OSCTUNE	set	14814
   869  0000                     _OSCFRQ	set	14815
   870  0000                     _OSCEN	set	14813
   871  0000                     _OSCCON3	set	14811
   872  0000                     _OSCCON1	set	14809
   873  0000                     _IPR8bits	set	14728
   874  0000                     _IPR9bits	set	14729
   875  0000                     _IPR5bits	set	14725
   876  0000                     _IPR1bits	set	14721
   877  0000                     _IPR3bits	set	14723
   878  0000                     _IPR6bits	set	14726
   879  0000                     _IPR2bits	set	14722
   880  0000                     _PIE5bits	set	14741
   881  0000                     _PIE1bits	set	14737
   882  0000                     _PIR5bits	set	14757
   883  0000                     _PIR1bits	set	14753
   884  0000                     _PLLR	set	118496
   885  0000                     _SPI1SDIPPS	set	15071
   886  0000                     _U1RXPPS	set	15077
   887  0000                     _RC6PPS	set	14870
   888  0000                     _RC5PPS	set	14869
   889  0000                     _INT1PPS	set	15041
   890  0000                     _RD1PPS	set	14873
   891  0000                     _INT0PPS	set	15040
   892  0000                     _RC3PPS	set	14867
   893  0000                     _RB6PPS	set	14862
   894  0000                     _SPI1SCKPPS	set	15070
   895  0000                     _U2RXPPS	set	15080
   896  0000                     _SLRCONF	set	14995
   897  0000                     _SLRCONE	set	14979
   898  0000                     _SLRCOND	set	14963
   899  0000                     _SLRCONC	set	14947
   900  0000                     _SLRCONB	set	14931
   901  0000                     _SLRCONA	set	14915
   902  0000                     _ODCOND	set	14962
   903  0000                     _ODCONC	set	14946
   904  0000                     _ODCONB	set	14930
   905  0000                     _ODCONA	set	14914
   906  0000                     _ODCONF	set	14994
   907  0000                     _ODCONE	set	14978
   908  0000                     _WPUC	set	14945
   909  0000                     _WPUA	set	14913
   910  0000                     _WPUB	set	14929
   911  0000                     _WPUE	set	14977
   912  0000                     _WPUF	set	14993
   913  0000                     _WPUD	set	14961
   914  0000                     _ANSELA	set	14912
   915  0000                     _ANSELF	set	14992
   916  0000                     _ANSELE	set	14976
   917  0000                     _ANSELB	set	14928
   918  0000                     _ANSELC	set	14944
   919  0000                     _ANSELD	set	14960
   920  0000                     _DMA2SSA	set	15321
   921  0000                     _DMA1SSA	set	15353
   922  0000                     _DMA2DSZ	set	15310
   923  0000                     _DMA2SSZ	set	15319
   924  0000                     _DMA2DSA	set	15312
   925  0000                     _DMA1DSZ	set	15342
   926  0000                     _DMA1SSZ	set	15351
   927  0000                     _DMA1DSA	set	15344
   928  0000                     _DMA1CON0bits	set	15356
   929  0000                     _DMA1CON1bits	set	15357
   930  0000                     _DMA2CON0	set	15324
   931  0000                     _DMA2AIRQ	set	15326
   932  0000                     _DMA2SIRQ	set	15327
   933  0000                     _DMA2CON1	set	15325
   934  0000                     _DMA1CON0	set	15356
   935  0000                     _DMA1AIRQ	set	15358
   936  0000                     _DMA1SIRQ	set	15359
   937  0000                     _DMA1CON1	set	15357
   938  0000                     _CLKRCON	set	15589
   939  0000                     _CLKRCLK	set	15590
   940  0000                     _SPI1INTFbits	set	15642
   941  0000                     _SPI1RXB	set	15632
   942  0000                     _SPI1TXB	set	15633
   943  0000                     _SPI1TCNTL	set	15634
   944  0000                     _SPI1CON0	set	15636
   945  0000                     _SPI1CLK	set	15644
   946  0000                     _SPI1BAUD	set	15641
   947  0000                     _SPI1CON2	set	15638
   948  0000                     _SPI1CON1	set	15637
   949  0000                     _U2RXB	set	15824
   950  0000                     _U2TXB	set	15826
   951  0000                     _U2ERRIE	set	15842
   952  0000                     _U2ERRIR	set	15841
   953  0000                     _U2UIR	set	15840
   954  0000                     _U2FIFO	set	15839
   955  0000                     _U2BRGH	set	15838
   956  0000                     _U2BRGL	set	15837
   957  0000                     _U2CON2	set	15836
   958  0000                     _U2CON1	set	15835
   959  0000                     _U2CON0	set	15834
   960  0000                     _U2P3L	set	15832
   961  0000                     _U2P2L	set	15830
   962  0000                     _U2P1L	set	15828
   963  0000                     _U1RXB	set	15848
   964  0000                     _U1TXB	set	15850
   965  0000                     _U1ERRIE	set	15866
   966  0000                     _U1ERRIR	set	15865
   967  0000                     _U1UIR	set	15864
   968  0000                     _U1FIFO	set	15863
   969  0000                     _U1BRGH	set	15862
   970  0000                     _U1BRGL	set	15861
   971  0000                     _U1CON2	set	15860
   972  0000                     _U1CON1	set	15859
   973  0000                     _U1CON0	set	15858
   974  0000                     _U1P3H	set	15857
   975  0000                     _U1P3L	set	15856
   976  0000                     _U1P2H	set	15855
   977  0000                     _U1P2L	set	15854
   978  0000                     _U1P1H	set	15853
   979  0000                     _U1P1L	set	15852
   980  0000                     _FVRCON	set	16065
   981  0000                     _ADFLTRL	set	16102
   982  0000                     _ADFLTRH	set	16103
   983  0000                     _ADCON0bits	set	16120
   984  0000                     _ADCON0	set	16120
   985  0000                     _ADCLK	set	16127
   986  0000                     _ADACT	set	16126
   987  0000                     _ADREF	set	16125
   988  0000                     _ADSTAT	set	16124
   989  0000                     _ADCON3	set	16123
   990  0000                     _ADCON2	set	16122
   991  0000                     _ADCON1	set	16121
   992  0000                     _ADPREH	set	16119
   993  0000                     _ADPREL	set	16118
   994  0000                     _ADCAP	set	16117
   995  0000                     _ADACQH	set	16116
   996  0000                     _ADACQL	set	16115
   997  0000                     _ADPCH	set	16113
   998  0000                     _ADRPT	set	16108
   999  0000                     _ADACCU	set	16106
  1000  0000                     _ADSTPTH	set	16101
  1001  0000                     _ADSTPTL	set	16100
  1002  0000                     _ADUTHH	set	16097
  1003  0000                     _ADUTHL	set	16096
  1004  0000                     _ADLTHH	set	16095
  1005  0000                     _ADLTHL	set	16094
  1006  0000                     _CCPTMRS1bits	set	16223
  1007  0000                     _PORTFbits	set	16335
  1008  0000                     _LATCbits	set	16316
  1009  0000                     _LATDbits	set	16317
  1010  0000                     _PORTBbits	set	16331
  1011  0000                     _T2CON	set	16300
  1012  0000                     _T2TMR	set	16298
  1013  0000                     _T2PR	set	16299
  1014  0000                     _T2RST	set	16303
  1015  0000                     _T2HLT	set	16301
  1016  0000                     _T2CLKCON	set	16302
  1017  0000                     _PWM8DCL	set	16224
  1018  0000                     _PWM8DCH	set	16225
  1019  0000                     _PWM8CON	set	16226
  1020  0000                     _LATEbits	set	16318
  1021  0000                     _T5CONbits	set	16282
  1022  0000                     _T5CON	set	16282
  1023  0000                     _TMR5L	set	16280
  1024  0000                     _TMR5H	set	16281
  1025  0000                     _T5CLK	set	16285
  1026  0000                     _T5GATE	set	16284
  1027  0000                     _T5GCON	set	16283
  1028  0000                     _T6CON	set	16276
  1029  0000                     _T6TMR	set	16274
  1030  0000                     _T6PR	set	16275
  1031  0000                     _T6RST	set	16279
  1032  0000                     _T6HLT	set	16277
  1033  0000                     _T6CLKCON	set	16278
  1034  0000                     _TRISD	set	16325
  1035  0000                     _TRISC	set	16324
  1036  0000                     _TRISB	set	16323
  1037  0000                     _TRISA	set	16322
  1038  0000                     _TRISF	set	16327
  1039  0000                     _TRISE	set	16326
  1040  0000                     _LATC	set	16316
  1041  0000                     _LATB	set	16315
  1042  0000                     _LATF	set	16319
  1043  0000                     _LATA	set	16314
  1044  0000                     _LATD	set	16317
  1045  0000                     _LATE	set	16318
  1046  0000                     _IVTLOCKbits	set	16340
  1047  0000                     _IVTLOCK	set	16340
  1048  0000                     _INTCON0bits	set	16338
  1049  0000                     _GIE	set	130711
  1050  00FEEF                     
  1051                           ; BSR set to: 57
  1052  00FEEF  20                 	db	32
  1053  00FEF0  4D                 	db	77	;'M'
  1054  00FEF1  65                 	db	101	;'e'
  1055  00FEF2  73                 	db	115	;'s'
  1056  00FEF3  67                 	db	103	;'g'
  1057  00FEF4  20                 	db	32
  1058  00FEF5  25                 	db	37
  1059  00FEF6  64                 	db	100	;'d'
  1060  00FEF7  20                 	db	32
  1061  00FEF8  53                 	db	83	;'S'
  1062  00FEF9  74                 	db	116	;'t'
  1063  00FEFA  61                 	db	97	;'a'
  1064  00FEFB  63                 	db	99	;'c'
  1065  00FEFC  6B                 	db	107	;'k'
  1066  00FEFD  20                 	db	32
  1067  00FEFE  25                 	db	37
  1068  00FEFF  64                 	db	100	;'d'
  1069  00FF00  20                 	db	32
  1070  00FF01  20                 	db	32
  1071  00FF02  20                 	db	32
  1072  00FF03  20                 	db	32
  1073  00FF04  20                 	db	32
  1074  00FF05  20                 	db	32
  1075  00FF06  00                 	db	0
  1076  00FF07                     STR_27:
  1077                           
  1078                           ; BSR set to: 57
  1079  00FF07  20                 	db	32
  1080  00FF08  20                 	db	32
  1081  00FF09  20                 	db	32
  1082  00FF0A  20                 	db	32
  1083  00FF0B  20                 	db	32
  1084  00FF0C  20                 	db	32
  1085  00FF0D  20                 	db	32
  1086  00FF0E  20                 	db	32
  1087  00FF0F  20                 	db	32
  1088  00FF10  20                 	db	32
  1089  00FF11  20                 	db	32
  1090  00FF12  20                 	db	32
  1091  00FF13  20                 	db	32
  1092  00FF14  20                 	db	32
  1093  00FF15  20                 	db	32
  1094  00FF16  20                 	db	32
  1095  00FF17  20                 	db	32
  1096  00FF18  20                 	db	32
  1097  00FF19  00                 	db	0
  1098  00FF1A                     STR_17:
  1099                           
  1100                           ; BSR set to: 57
  1101  00FF1A  48                 	db	72	;'H'
  1102  00FF1B  45                 	db	69	;'E'
  1103  00FF1C  4C                 	db	76	;'L'
  1104  00FF1D  50                 	db	80	;'P'
  1105  00FF1E  20                 	db	32
  1106  00FF1F  25                 	db	37
  1107  00FF20  73                 	db	115	;'s'
  1108  00FF21  20                 	db	32
  1109  00FF22  20                 	db	32
  1110  00FF23  20                 	db	32
  1111  00FF24  20                 	db	32
  1112  00FF25  20                 	db	32
  1113  00FF26  20                 	db	32
  1114  00FF27  20                 	db	32
  1115  00FF28  20                 	db	32
  1116  00FF29  20                 	db	32
  1117  00FF2A  20                 	db	32
  1118  00FF2B  20                 	db	32
  1119  00FF2C  00                 	db	0
  1120  00FF2D                     
  1121                           ; BSR set to: 57
  1122  00FF2D  44                 	db	68	;'D'
  1123  00FF2E  49                 	db	73	;'I'
  1124  00FF2F  53                 	db	83	;'S'
  1125  00FF30  50                 	db	80	;'P'
  1126  00FF31  4C                 	db	76	;'L'
  1127  00FF32  41                 	db	65	;'A'
  1128  00FF33  59                 	db	89	;'Y'
  1129  00FF34  20                 	db	32
  1130  00FF35  25                 	db	37
  1131  00FF36  73                 	db	115	;'s'
  1132  00FF37  20                 	db	32
  1133  00FF38  20                 	db	32
  1134  00FF39  20                 	db	32
  1135  00FF3A  20                 	db	32
  1136  00FF3B  20                 	db	32
  1137  00FF3C  20                 	db	32
  1138  00FF3D  20                 	db	32
  1139  00FF3E  20                 	db	32
  1140  00FF3F  00                 	db	0
  1141  00FF40                     STR_8:
  1142                           
  1143                           ; BSR set to: 57
  1144  00FF40  20                 	db	32
  1145  00FF41  56                 	db	86	;'V'
  1146  00FF42  54                 	db	84	;'T'
  1147  00FF43  45                 	db	69	;'E'
  1148  00FF44  52                 	db	82	;'R'
  1149  00FF45  4D                 	db	77	;'M'
  1150  00FF46  20                 	db	32
  1151  00FF47  23                 	db	35
  1152  00FF48  32                 	db	50	;'2'
  1153  00FF49  20                 	db	32
  1154  00FF4A  20                 	db	32
  1155  00FF4B  20                 	db	32
  1156  00FF4C  20                 	db	32
  1157  00FF4D  20                 	db	32
  1158  00FF4E  20                 	db	32
  1159  00FF4F  20                 	db	32
  1160  00FF50  00                 	db	0
  1161  00FF51                     STR_4:
  1162                           
  1163                           ; BSR set to: 57
  1164  00FF51  20                 	db	32
  1165  00FF52  4E                 	db	78	;'N'
  1166  00FF53  53                 	db	83	;'S'
  1167  00FF54  41                 	db	65	;'A'
  1168  00FF55  53                 	db	83	;'S'
  1169  00FF56  50                 	db	80	;'P'
  1170  00FF57  4F                 	db	79	;'O'
  1171  00FF58  4F                 	db	79	;'O'
  1172  00FF59  4B                 	db	75	;'K'
  1173  00FF5A  20                 	db	32
  1174  00FF5B  20                 	db	32
  1175  00FF5C  20                 	db	32
  1176  00FF5D  20                 	db	32
  1177  00FF5E  20                 	db	32
  1178  00FF5F  20                 	db	32
  1179  00FF60  20                 	db	32
  1180  00FF61  00                 	db	0
  1181  00FF62                     STR_1:
  1182                           
  1183                           ; BSR set to: 57
  1184  00FF62  20                 	db	32
  1185  00FF63  4D                 	db	77	;'M'
  1186  00FF64  42                 	db	66	;'B'
  1187  00FF65  4D                 	db	77	;'M'
  1188  00FF66  43                 	db	67	;'C'
  1189  00FF67  20                 	db	32
  1190  00FF68  53                 	db	83	;'S'
  1191  00FF69  4F                 	db	79	;'O'
  1192  00FF6A  4C                 	db	76	;'L'
  1193  00FF6B  41                 	db	65	;'A'
  1194  00FF6C  52                 	db	82	;'R'
  1195  00FF6D  4D                 	db	77	;'M'
  1196  00FF6E  4F                 	db	79	;'O'
  1197  00FF6F  4E                 	db	78	;'N'
  1198  00FF70  20                 	db	32
  1199  00FF71  20                 	db	32
  1200  00FF72  00                 	db	0
  1201  00FF73                     STR_5:
  1202                           
  1203                           ; BSR set to: 57
  1204  00FF73  20                 	db	32
  1205  00FF74  53                 	db	83	;'S'
  1206  00FF75  45                 	db	69	;'E'
  1207  00FF76  51                 	db	81	;'Q'
  1208  00FF77  55                 	db	85	;'U'
  1209  00FF78  45                 	db	69	;'E'
  1210  00FF79  4E                 	db	78	;'N'
  1211  00FF7A  43                 	db	67	;'C'
  1212  00FF7B  45                 	db	69	;'E'
  1213  00FF7C  20                 	db	32
  1214  00FF7D  54                 	db	84	;'T'
  1215  00FF7E  45                 	db	69	;'E'
  1216  00FF7F  53                 	db	83	;'S'
  1217  00FF80  54                 	db	84	;'T'
  1218  00FF81  20                 	db	32
  1219  00FF82  20                 	db	32
  1220  00FF83  00                 	db	0
  1221  00FF84                     STR_11:
  1222                           
  1223                           ; BSR set to: 57
  1224  00FF84  25                 	db	37
  1225  00FF85  64                 	db	100	;'d'
  1226  00FF86  20                 	db	32
  1227  00FF87  25                 	db	37
  1228  00FF88  32                 	db	50	;'2'
  1229  00FF89  2E                 	db	46
  1230  00FF8A  34                 	db	52	;'4'
  1231  00FF8B  66                 	db	102	;'f'
  1232  00FF8C  2C                 	db	44
  1233  00FF8D  20                 	db	32
  1234  00FF8E  25                 	db	37
  1235  00FF8F  64                 	db	100	;'d'
  1236  00FF90  20                 	db	32
  1237  00FF91  20                 	db	32
  1238  00FF92  20                 	db	32
  1239  00FF93  23                 	db	35
  1240  00FF94  00                 	db	0
  1241  00FF95                     STR_21:
  1242                           
  1243                           ; BSR set to: 57
  1244  00FF95  76                 	db	118	;'v'
  1245  00FF96  74                 	db	116	;'t'
  1246  00FF97  65                 	db	101	;'e'
  1247  00FF98  72                 	db	114	;'r'
  1248  00FF99  6D                 	db	109	;'m'
  1249  00FF9A  20                 	db	32
  1250  00FF9B  25                 	db	37
  1251  00FF9C  78                 	db	120	;'x'
  1252  00FF9D  3A                 	db	58	;':'
  1253  00FF9E  25                 	db	37
  1254  00FF9F  78                 	db	120	;'x'
  1255  00FFA0  20                 	db	32
  1256  00FFA1  20                 	db	32
  1257  00FFA2  20                 	db	32
  1258  00FFA3  00                 	db	0
  1259  00FFA4                     STR_2:
  1260                           
  1261                           ; BSR set to: 57
  1262  00FFA4  20                 	db	32
  1263  00FFA5  56                 	db	86	;'V'
  1264  00FFA6  65                 	db	101	;'e'
  1265  00FFA7  72                 	db	114	;'r'
  1266  00FFA8  73                 	db	115	;'s'
  1267  00FFA9  69                 	db	105	;'i'
  1268  00FFAA  6F                 	db	111	;'o'
  1269  00FFAB  6E                 	db	110	;'n'
  1270  00FFAC  20                 	db	32
  1271  00FFAD  25                 	db	37
  1272  00FFAE  73                 	db	115	;'s'
  1273  00FFAF  20                 	db	32
  1274  00FFB0  20                 	db	32
  1275  00FFB1  20                 	db	32
  1276  00FFB2  00                 	db	0
  1277  00FFB3                     STR_9:
  1278                           
  1279                           ; BSR set to: 57
  1280  00FFB3  25                 	db	37
  1281  00FFB4  64                 	db	100	;'d'
  1282  00FFB5  20                 	db	32
  1283  00FFB6  25                 	db	37
  1284  00FFB7  32                 	db	50	;'2'
  1285  00FFB8  2E                 	db	46
  1286  00FFB9  34                 	db	52	;'4'
  1287  00FFBA  66                 	db	102	;'f'
  1288  00FFBB  20                 	db	32
  1289  00FFBC  20                 	db	32
  1290  00FFBD  20                 	db	32
  1291  00FFBE  25                 	db	37
  1292  00FFBF  64                 	db	100	;'d'
  1293  00FFC0  00                 	db	0
  1294  00FFC1                     STR_15:
  1295                           
  1296                           ; BSR set to: 57
  1297  00FFC1  4E                 	db	78	;'N'
  1298  00FFC2  6F                 	db	111	;'o'
  1299  00FFC3  76                 	db	118	;'v'
  1300  00FFC4  20                 	db	32
  1301  00FFC5  32                 	db	50	;'2'
  1302  00FFC6  35                 	db	53	;'5'
  1303  00FFC7  20                 	db	32
  1304  00FFC8  32                 	db	50	;'2'
  1305  00FFC9  30                 	db	48	;'0'
  1306  00FFCA  31                 	db	49	;'1'
  1307  00FFCB  39                 	db	57	;'9'
  1308  00FFCC  00                 	db	0
  1309  00FFCD                     STR_19:
  1310                           
  1311                           ; BSR set to: 57
  1312  00FFCD  25                 	db	37
  1313  00FFCE  73                 	db	115	;'s'
  1314  00FFCF  20                 	db	32
  1315  00FFD0  20                 	db	32
  1316  00FFD1  20                 	db	32
  1317  00FFD2  20                 	db	32
  1318  00FFD3  20                 	db	32
  1319  00FFD4  20                 	db	32
  1320  00FFD5  20                 	db	32
  1321  00FFD6  00                 	db	0
  1322  00FFD7                     STR_16:
  1323                           
  1324                           ; BSR set to: 57
  1325  00FFD7  32                 	db	50	;'2'
  1326  00FFD8  30                 	db	48	;'0'
  1327  00FFD9  3A                 	db	58	;':'
  1328  00FFDA  33                 	db	51	;'3'
  1329  00FFDB  30                 	db	48	;'0'
  1330  00FFDC  3A                 	db	58	;':'
  1331  00FFDD  32                 	db	50	;'2'
  1332  00FFDE  31                 	db	49	;'1'
  1333  00FFDF  00                 	db	0
  1334  00FFE0                     STR_3:
  1335                           
  1336                           ; BSR set to: 57
  1337  00FFE0  30                 	db	48	;'0'
  1338  00FFE1  2E                 	db	46
  1339  00FFE2  39                 	db	57	;'9'
  1340  00FFE3  37                 	db	55	;'7'
  1341  00FFE4  00                 	db	0
  1342  00FFE5                     STR_34:
  1343                           
  1344                           ; BSR set to: 57
  1345  00FFE5  49                 	db	73	;'I'
  1346  00FFE6  4E                 	db	78	;'N'
  1347  00FFE7  46                 	db	70	;'F'
  1348  00FFE8  00                 	db	0
  1349  00FFE9                     STR_38:
  1350                           
  1351                           ; BSR set to: 57
  1352  00FFE9  4E                 	db	78	;'N'
  1353  00FFEA  41                 	db	65	;'A'
  1354  00FFEB  4E                 	db	78	;'N'
  1355  00FFEC  00                 	db	0
  1356  00FFED                     STR_35:
  1357                           
  1358                           ; BSR set to: 57
  1359  00FFED  69                 	db	105	;'i'
  1360  00FFEE  6E                 	db	110	;'n'
  1361  00FFEF  66                 	db	102	;'f'
  1362  00FFF0  00                 	db	0
  1363  00FFF1                     STR_39:
  1364                           
  1365                           ; BSR set to: 57
  1366  00FFF1  6E                 	db	110	;'n'
  1367  00FFF2  61                 	db	97	;'a'
  1368  00FFF3  6E                 	db	110	;'n'
  1369  00FFF4  00                 	db	0
  1370  00FFF5                     STR_42:
  1371                           
  1372                           ; BSR set to: 57
  1373  00FFF5  6C                 	db	108	;'l'
  1374  00FFF6  66                 	db	102	;'f'
  1375  00FFF7  00                 	db	0
  1376  00FFF8                     STR_13:
  1377                           
  1378                           ; BSR set to: 57
  1379  00FFF8  25                 	db	37
  1380  00FFF9  63                 	db	99	;'c'
  1381  00FFFA  00                 	db	0
  1382  00FFFB                     STR_12:
  1383                           
  1384                           ; BSR set to: 57
  1385  00FFFB  25                 	db	37
  1386  00FFFC  73                 	db	115	;'s'
  1387  00FFFD  00                 	db	0
  1388  0000                     
  1389                           ; #config settings
  1390  00FFFE  00                 	db	0	; dummy byte at the end
  1391  0000                     
  1392                           	psect	cinit
  1393  016A80                     __pcinit:
  1394                           	opt callstack 0
  1395  016A80                     start_initialization:
  1396                           	opt callstack 0
  1397  016A80                     __initialization:
  1398                           	opt callstack 0
  1399                           
  1400                           ; Initialize objects allocated to BANK2 (16 bytes)
  1401                           ; load TBLPTR registers with __pidataBANK2
  1402  016A80  0EC2               	movlw	low __pidataBANK2
  1403  016A82  6EF6               	movwf	tblptrl,c
  1404  016A84  0E85               	movlw	high __pidataBANK2
  1405  016A86  6EF7               	movwf	tblptrh,c
  1406  016A88  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1407  016A8A  6EF8               	movwf	tblptru,c
  1408  016A8C  EE00  F290         	lfsr	0,__pdataBANK2
  1409  016A90  EE20 F010          	lfsr	2,16
  1410  016A94                     copy_data0:
  1411  016A94  0009               	tblrd		*+
  1412  016A96  006F FFD7 FFEE     	movff	tablat,postinc0
  1413  016A9C  50DD               	movf	postdec2,w,c
  1414  016A9E  50D9               	movf	fsr2l,w,c
  1415  016AA0  E1F9               	bnz	copy_data0
  1416                           
  1417                           ; Initialize objects allocated to BANK1 (187 bytes)
  1418                           ; load TBLPTR registers with __pidataBANK1
  1419  016AA2  0EF6               	movlw	low __pidataBANK1
  1420  016AA4  6EF6               	movwf	tblptrl,c
  1421  016AA6  0E6D               	movlw	high __pidataBANK1
  1422  016AA8  6EF7               	movwf	tblptrh,c
  1423  016AAA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1424  016AAC  6EF8               	movwf	tblptru,c
  1425  016AAE  EE00  F100         	lfsr	0,__pdataBANK1
  1426  016AB2  EE20 F0BB          	lfsr	2,187
  1427  016AB6                     copy_data1:
  1428  016AB6  0009               	tblrd		*+
  1429  016AB8  006F FFD7 FFEE     	movff	tablat,postinc0
  1430  016ABE  50DD               	movf	postdec2,w,c
  1431  016AC0  50D9               	movf	fsr2l,w,c
  1432  016AC2  E1F9               	bnz	copy_data1
  1433                           
  1434                           ; Initialize objects allocated to BANK0 (47 bytes)
  1435                           ; load TBLPTR registers with __pidataBANK0
  1436  016AC4  0E52               	movlw	low __pidataBANK0
  1437  016AC6  6EF6               	movwf	tblptrl,c
  1438  016AC8  0E7F               	movlw	high __pidataBANK0
  1439  016ACA  6EF7               	movwf	tblptrh,c
  1440  016ACC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1441  016ACE  6EF8               	movwf	tblptru,c
  1442  016AD0  EE00  F0C7         	lfsr	0,__pdataBANK0
  1443  016AD4  EE20 F02F          	lfsr	2,47
  1444  016AD8                     copy_data2:
  1445  016AD8  0009               	tblrd		*+
  1446  016ADA  006F FFD7 FFEE     	movff	tablat,postinc0
  1447  016AE0  50DD               	movf	postdec2,w,c
  1448  016AE2  50D9               	movf	fsr2l,w,c
  1449  016AE4  E1F9               	bnz	copy_data2
  1450                           
  1451                           ; Clear objects allocated to BANK7 (255 bytes)
  1452  016AE6  EE01  F300         	lfsr	0,__pbssBANK7
  1453  016AEA  EE20 F0FF          	lfsr	2,255
  1454  016AEE                     clear_0:
  1455  016AEE  6AEE               	clrf	postinc0,c
  1456  016AF0  50DD               	movf	postdec2,w,c
  1457  016AF2  50D9               	movf	fsr2l,w,c
  1458  016AF4  E1FC               	bnz	clear_0
  1459  016AF6  50DA               	movf	fsr2h,w,c
  1460  016AF8  E1FA               	bnz	clear_0
  1461                           
  1462                           ; Clear objects allocated to BANK6 (255 bytes)
  1463  016AFA  EE01  F200         	lfsr	0,__pbssBANK6
  1464  016AFE  EE20 F0FF          	lfsr	2,255
  1465  016B02                     clear_1:
  1466  016B02  6AEE               	clrf	postinc0,c
  1467  016B04  50DD               	movf	postdec2,w,c
  1468  016B06  50D9               	movf	fsr2l,w,c
  1469  016B08  E1FC               	bnz	clear_1
  1470  016B0A  50DA               	movf	fsr2h,w,c
  1471  016B0C  E1FA               	bnz	clear_1
  1472                           
  1473                           ; Clear objects allocated to BANK5 (218 bytes)
  1474  016B0E  EE01  F100         	lfsr	0,__pbssBANK5
  1475  016B12  0EDA               	movlw	218
  1476  016B14                     clear_2:
  1477  016B14  6AEE               	clrf	postinc0,c
  1478  016B16  06E8               	decf	wreg,f,c
  1479  016B18  E1FD               	bnz	clear_2
  1480                           
  1481                           ; Clear objects allocated to BANK4 (134 bytes)
  1482  016B1A  EE01  F000         	lfsr	0,__pbssBANK4
  1483  016B1E  0E86               	movlw	134
  1484  016B20                     clear_3:
  1485  016B20  6AEE               	clrf	postinc0,c
  1486  016B22  06E8               	decf	wreg,f,c
  1487  016B24  E1FD               	bnz	clear_3
  1488                           
  1489                           ; Clear objects allocated to BANK3 (236 bytes)
  1490  016B26  EE00  F300         	lfsr	0,__pbssBANK3
  1491  016B2A  0EEC               	movlw	236
  1492  016B2C                     clear_4:
  1493  016B2C  6AEE               	clrf	postinc0,c
  1494  016B2E  06E8               	decf	wreg,f,c
  1495  016B30  E1FD               	bnz	clear_4
  1496                           
  1497                           ; Clear objects allocated to BANK2 (144 bytes)
  1498  016B32  EE00  F200         	lfsr	0,__pbssBANK2
  1499  016B36  0E90               	movlw	144
  1500  016B38                     clear_5:
  1501  016B38  6AEE               	clrf	postinc0,c
  1502  016B3A  06E8               	decf	wreg,f,c
  1503  016B3C  E1FD               	bnz	clear_5
  1504                           
  1505                           ; Clear objects allocated to BANK1 (8 bytes)
  1506  016B3E  EE00  F1BB         	lfsr	0,__pbssBANK1
  1507  016B42  0E08               	movlw	8
  1508  016B44                     clear_6:
  1509  016B44  6AEE               	clrf	postinc0,c
  1510  016B46  06E8               	decf	wreg,f,c
  1511  016B48  E1FD               	bnz	clear_6
  1512                           
  1513                           ; Clear objects allocated to BANK0 (103 bytes)
  1514  016B4A  EE00  F060         	lfsr	0,__pbssBANK0
  1515  016B4E  0E67               	movlw	103
  1516  016B50                     clear_7:
  1517  016B50  6AEE               	clrf	postinc0,c
  1518  016B52  06E8               	decf	wreg,f,c
  1519  016B54  E1FD               	bnz	clear_7
  1520                           
  1521                           ; Clear objects allocated to COMRAM (49 bytes)
  1522  016B56  EE00  F001         	lfsr	0,__pbssCOMRAM
  1523  016B5A  0E31               	movlw	49
  1524  016B5C                     clear_8:
  1525  016B5C  6AEE               	clrf	postinc0,c
  1526  016B5E  06E8               	decf	wreg,f,c
  1527  016B60  E1FD               	bnz	clear_8
  1528                           
  1529                           ;
  1530                           ; Setup IVTBASE
  1531                           ;
  1532  016B62  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1533  016B64  6ED5               	movwf	213,c
  1534  016B66  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1535  016B68  6ED6               	movwf	214,c
  1536  016B6A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1537  016B6C  6ED7               	movwf	215,c
  1538  016B6E                     end_of_initialization:
  1539                           	opt callstack 0
  1540  016B6E                     __end_of__initialization:
  1541                           	opt callstack 0
  1542  016B6E  0100               	movlb	0
  1543  016B70  EF71  F099         	goto	_main	;jump to C main() function
  1544                           
  1545                           	psect	bssCOMRAM
  1546  000001                     __pbssCOMRAM:
  1547                           	opt callstack 0
  1548  000001                     _ADCC_ADTI_InterruptHandler:
  1549                           	opt callstack 0
  1550  000001                     	ds	3
  1551  000004                     _ADCC_ADI_InterruptHandler:
  1552                           	opt callstack 0
  1553  000004                     	ds	3
  1554  000007                     _UART1_TxInterruptHandler:
  1555                           	opt callstack 0
  1556  000007                     	ds	3
  1557  00000A                     _UART1_RxInterruptHandler:
  1558                           	opt callstack 0
  1559  00000A                     	ds	3
  1560  00000D                     _UART2_TxInterruptHandler:
  1561                           	opt callstack 0
  1562  00000D                     	ds	3
  1563  000010                     _UART2_RxInterruptHandler:
  1564                           	opt callstack 0
  1565  000010                     	ds	3
  1566  000013                     _INT1_InterruptHandler:
  1567                           	opt callstack 0
  1568  000013                     	ds	3
  1569  000016                     _INT0_InterruptHandler:
  1570                           	opt callstack 0
  1571  000016                     	ds	3
  1572  000019                     _nout:
  1573                           	opt callstack 0
  1574  000019                     	ds	2
  1575  00001B                     _width:
  1576                           	opt callstack 0
  1577  00001B                     	ds	2
  1578  00001D                     _prec:
  1579                           	opt callstack 0
  1580  00001D                     	ds	2
  1581  00001F                     _flags:
  1582                           	opt callstack 0
  1583  00001F                     	ds	2
  1584  000021                     TMR5_ISR@CountCallBack:
  1585                           	opt callstack 0
  1586  000021                     	ds	2
  1587  000023                     _timer5ReloadVal:
  1588                           	opt callstack 0
  1589  000023                     	ds	2
  1590  000025                     _mode_sw:
  1591                           	opt callstack 0
  1592  000025                     	ds	1
  1593  000026                     _uart2RxCount:
  1594                           	opt callstack 0
  1595  000026                     	ds	1
  1596  000027                     _uart2RxTail:
  1597                           	opt callstack 0
  1598  000027                     	ds	1
  1599  000028                     _uart2RxHead:
  1600                           	opt callstack 0
  1601  000028                     	ds	1
  1602  000029                     _uart2TxBufferRemaining:
  1603                           	opt callstack 0
  1604  000029                     	ds	1
  1605  00002A                     _uart2TxTail:
  1606                           	opt callstack 0
  1607  00002A                     	ds	1
  1608  00002B                     _uart2TxHead:
  1609                           	opt callstack 0
  1610  00002B                     	ds	1
  1611  00002C                     _uart1RxCount:
  1612                           	opt callstack 0
  1613  00002C                     	ds	1
  1614  00002D                     _uart1RxTail:
  1615                           	opt callstack 0
  1616  00002D                     	ds	1
  1617  00002E                     _uart1RxHead:
  1618                           	opt callstack 0
  1619  00002E                     	ds	1
  1620  00002F                     _uart1TxBufferRemaining:
  1621                           	opt callstack 0
  1622  00002F                     	ds	1
  1623  000030                     _uart1TxTail:
  1624                           	opt callstack 0
  1625  000030                     	ds	1
  1626  000031                     _uart1TxHead:
  1627                           	opt callstack 0
  1628  000031                     	ds	1
  1629                           
  1630                           	psect	bssBANK0
  1631  000060                     __pbssBANK0:
  1632                           	opt callstack 0
  1633  000060                     _S:
  1634                           	opt callstack 0
  1635  000060                     	ds	41
  1636  000089                     _tickCount:
  1637                           	opt callstack 0
  1638  000089                     	ds	24
  1639  0000A1                     _spi_link:
  1640                           	opt callstack 0
  1641  0000A1                     	ds	12
  1642  0000AD                     floorf@F524:
  1643                           	opt callstack 0
  1644  0000AD                     	ds	4
  1645  0000B1                     ___fpclassifyf@F463:
  1646                           	opt callstack 0
  1647  0000B1                     	ds	4
  1648  0000B5                     _utctime:
  1649                           	opt callstack 0
  1650  0000B5                     	ds	4
  1651  0000B9                     wdtdelay@dcount:
  1652                           	opt callstack 0
  1653  0000B9                     	ds	4
  1654  0000BD                     _P:
  1655                           	opt callstack 0
  1656  0000BD                     	ds	4
  1657  0000C1                     _TMR5_InterruptHandler:
  1658                           	opt callstack 0
  1659  0000C1                     	ds	3
  1660  0000C4                     _TMR6_InterruptHandler:
  1661                           	opt callstack 0
  1662  0000C4                     	ds	3
  1663                           
  1664                           	psect	dataBANK0
  1665  0000C7                     __pdataBANK0:
  1666                           	opt callstack 0
  1667  0000C7                     _R:
  1668                           	opt callstack 0
  1669  0000C7                     	ds	40
  1670  0000EF                     stoa@F1166:
  1671                           	opt callstack 0
  1672  0000EF                     	ds	7
  1673                           
  1674                           	psect	bssBANK1
  1675  0001BB                     __pbssBANK1:
  1676                           	opt callstack 0
  1677  0001BB                     _seed:
  1678                           	opt callstack 0
  1679  0001BB                     	ds	8
  1680                           
  1681                           	psect	dataBANK1
  1682  000100                     __pdataBANK1:
  1683                           	opt callstack 0
  1684  000100                     _V:
  1685                           	opt callstack 0
  1686  000100                     	ds	187
  1687                           
  1688                           	psect	bssBANK2
  1689  000200                     __pbssBANK2:
  1690                           	opt callstack 0
  1691  000200                     lp_filter@smooth:
  1692                           	opt callstack 0
  1693  000200                     	ds	64
  1694  000240                     _dbuf:
  1695                           	opt callstack 0
  1696  000240                     	ds	80
  1697                           
  1698                           	psect	dataBANK2
  1699  000290                     __pdataBANK2:
  1700                           	opt callstack 0
  1701  000290                     _port_data:
  1702                           	opt callstack 0
  1703  000290                     	ds	16
  1704                           
  1705                           	psect	bssBANK3
  1706  000300                     __pbssBANK3:
  1707                           	opt callstack 0
  1708  000300                     _C:
  1709                           	opt callstack 0
  1710  000300                     	ds	108
  1711  00036C                     _uart2TxBuffer:
  1712                           	opt callstack 0
  1713  00036C                     	ds	64
  1714  0003AC                     _uart1TxBuffer:
  1715                           	opt callstack 0
  1716  0003AC                     	ds	64
  1717                           
  1718                           	psect	bssBANK4
  1719  000400                     __pbssBANK4:
  1720                           	opt callstack 0
  1721  000400                     _ring_buf2:
  1722                           	opt callstack 0
  1723  000400                     	ds	67
  1724  000443                     _ring_buf1:
  1725                           	opt callstack 0
  1726  000443                     	ds	67
  1727                           
  1728                           	psect	bssBANK5
  1729  000500                     __pbssBANK5:
  1730                           	opt callstack 0
  1731  000500                     _D:
  1732                           	opt callstack 0
  1733  000500                     	ds	218
  1734                           
  1735                           	psect	bssBANK6
  1736  000600                     __pbssBANK6:
  1737                           	opt callstack 0
  1738  000600                     _uart1RxBuffer:
  1739                           	opt callstack 0
  1740  000600                     	ds	255
  1741                           
  1742                           	psect	bssBANK7
  1743  000700                     __pbssBANK7:
  1744                           	opt callstack 0
  1745  000700                     _uart2RxBuffer:
  1746                           	opt callstack 0
  1747  000700                     	ds	255
  1748                           
  1749                           	psect	cstackBANK1
  1750  0001C3                     __pcstackBANK1:
  1751                           	opt callstack 0
  1752  0001C3                     ??_TMR5_ISR:
  1753                           
  1754                           ; 1 bytes @ 0x0
  1755  0001C3                     	ds	4
  1756                           
  1757                           	psect	cstackBANK0
  1758  0000F6                     __pcstackBANK0:
  1759                           	opt callstack 0
  1760  0000F6                     ??_INT1_ISR:
  1761                           
  1762                           ; 1 bytes @ 0x0
  1763  0000F6                     	ds	4
  1764                           
  1765                           	psect	cstackCOMRAM
  1766  000052                     __pcstackCOMRAM:
  1767                           	opt callstack 0
  1768  000052                     ??_ADCC_ThresholdISR:
  1769  000052                     
  1770                           ; 1 bytes @ 0x0
  1771  000052                     	ds	5
  1772  000057                     ??_TMR6_ISR:
  1773                           
  1774                           ; 1 bytes @ 0x5
  1775  000057                     	ds	1
  1776  000058                     
  1777                           ; 1 bytes @ 0x6
  1778 ;;
  1779 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  1780 ;;
  1781 ;; *************** function _main *****************
  1782 ;; Defined at:
  1783 ;;		line 158 in file "main.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  inp_index       1  [STACK] unsigned char 
  1788 ;;  k               1  [STACK] unsigned char 
  1789 ;;  j               1  [STACK] unsigned char 
  1790 ;;  i               1  [STACK] unsigned char 
  1791 ;;  mode            1  [STACK] enum E17005
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1  [STACK] void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 1/1
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels required when called:   19
  1807 ;; This function calls:
  1808 ;;		_SYSTEM_Initialize
  1809 ;;		_StartTimer
  1810 ;;		_TimerDone
  1811 ;;		_WaitMs
  1812 ;;		_check_adc_scan
  1813 ;;		_check_help
  1814 ;;		_clear_adc_scan
  1815 ;;		_convert_adc_data
  1816 ;;		_eaDogM_WriteCommand
  1817 ;;		_get_raw_result
  1818 ;;		_get_switch
  1819 ;;		_get_vterm_ptr
  1820 ;;		_init_display
  1821 ;;		_mode_lamp_dim
  1822 ;;		_set_display_info
  1823 ;;		_set_vterm
  1824 ;;		_sprintf
  1825 ;;		_srand
  1826 ;;		_start_adc_scan
  1827 ;;		_start_switch_handler
  1828 ;;		_update_lcd
  1829 ;; This function is called by:
  1830 ;;		Startup code after reset
  1831 ;; This function uses a reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text0
  1835  0132E2                     __ptext0:
  1836                           	opt callstack 0
  1837  0132E2                     _main:
  1838                           	opt callstack 0
  1839                           
  1840                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1841  0132E2  0E05               	movlw	5
  1842  0132E4  26E1               	addwf	fsr1l,f,c
  1843  0132E6  0E00               	movlw	0
  1844  0132E8  22E2               	addwfc	fsr1h,f,c
  1845                           
  1846                           ;main.c: 160:  UI_STATES mode;;main.c: 161:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  1847                           ;stkvar	_inp_index @ sp[(-5)+0]
  1848                           
  1849                           ;incstack = 0
  1850  0132EA  0EFB               	movlw	-5
  1851  0132EC  6AE3               	clrf	plusw1,c
  1852                           
  1853                           ;stkvar	_i @ sp[(-5)+3]
  1854  0132EE  0EFE               	movlw	-2
  1855  0132F0  6AE3               	clrf	plusw1,c
  1856                           
  1857                           ;stkvar	_j @ sp[(-5)+2]
  1858  0132F2  0EFD               	movlw	-3
  1859  0132F4  6AE3               	clrf	plusw1,c
  1860  0132F6  2AE3               	incf	plusw1,f,c
  1861                           
  1862                           ;stkvar	_k @ sp[(-5)+1]
  1863  0132F8  0EFC               	movlw	-4
  1864  0132FA  6AE3               	clrf	plusw1,c
  1865  0132FC  82E3               	bsf	plusw1,1,c
  1866                           
  1867                           ;main.c: 163:  SYSTEM_Initialize();
  1868  0132FE  ECD1  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1869                           
  1870                           ; BSR set to: 60
  1871                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1872  013302  8ED2               	bsf	210,7,c	;volatile
  1873                           
  1874                           ; BSR set to: 60
  1875                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1876  013304  8CD2               	bsf	210,6,c	;volatile
  1877                           
  1878                           ; BSR set to: 60
  1879                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1880  013306  0101               	movlb	1	; () banked
  1881  013308  6B00               	clrf	_V& (0+255),b	;volatile
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;main.c: 176:  WaitMs(300);
  1885  01330A  0E2C               	movlw	44
  1886  01330C  6EE6               	movwf	postinc1,c
  1887  01330E  0E01               	movlw	1
  1888  013310  6EE6               	movwf	postinc1,c
  1889  013312  ECF7  F0BE         	call	_WaitMs	;wreg free
  1890                           
  1891                           ;main.c: 177:  if (PORTBbits.RB0) {
  1892  013316  A0CB               	btfss	203,0,c	;volatile
  1893  013318  D004               	goto	l12134
  1894                           
  1895                           ;main.c: 178:   mode = UI_STATE_HOST;
  1896                           ;stkvar	_mode @ sp[(-5)+4]
  1897  01331A  0EFF               	movlw	-1
  1898  01331C  6AE3               	clrf	plusw1,c
  1899  01331E  2AE3               	incf	plusw1,f,c
  1900                           
  1901                           ;main.c: 179:  } else {
  1902  013320  D004               	goto	l12136
  1903  013322                     l12134:
  1904                           
  1905                           ;main.c: 180:   mode = UI_STATE_LOG;
  1906                           ;stkvar	_mode @ sp[(-5)+4]
  1907  013322  0EFF               	movlw	-1
  1908  013324  6AE3               	clrf	plusw1,c
  1909  013326  80E3               	bsf	plusw1,0,c
  1910  013328  82E3               	bsf	plusw1,1,c	;indir
  1911  01332A                     l12136:
  1912                           
  1913                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1914                           ;stkvar	_mode @ sp[(-5)+4]
  1915  01332A  0EFF               	movlw	-1
  1916  01332C  04E3               	decf	plusw1,w,c
  1917  01332E  A4D8               	btfss	status,2,c
  1918  013330  D007               	goto	l1246
  1919                           
  1920                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1921  013332  80BD               	bsf	189,0,c	;volatile
  1922                           
  1923                           ;main.c: 185:   V.mode_pwm = 70;
  1924  013334  0E00               	movlw	0
  1925  013336  0101               	movlb	1	; () banked
  1926  013338  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1927  01333A  0E46               	movlw	70
  1928  01333C  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1929                           
  1930                           ;main.c: 186:  } else {
  1931  01333E  D004               	goto	l12140
  1932  013340                     l1246:
  1933  013340  90BD               	bcf	189,0,c	;volatile
  1934                           
  1935                           ;main.c: 188:   V.mode_pwm = 0;
  1936  013342  0101               	movlb	1	; () banked
  1937  013344  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1938  013346  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1939  013348                     l12140:
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  1943  013348  0060  F657  FFE6   	movff	_V+149,postinc1
  1944  01334E  0060  F65B  FFE6   	movff	_V+150,postinc1
  1945  013354  EC95  F0C2         	call	_mode_lamp_dim	;wreg free
  1946  013358  D0D0               	goto	l12184
  1947  01335A                     l12142:
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;main.c: 201:    init_display();
  1951  01335A  ECBA  F0B5         	call	_init_display	;wreg free
  1952                           
  1953                           ; BSR set to: 61
  1954                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  1955  01335E  0E0C               	movlw	12
  1956  013360  6EE6               	movwf	postinc1,c
  1957  013362  ECF1  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;main.c: 204:    V.ui_state = mode;
  1961                           ;stkvar	_mode @ sp[(-5)+4]
  1962  013366  0EFF               	movlw	-1
  1963  013368  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;main.c: 205:    srand(1957);
  1967  01336E  0EA5               	movlw	165
  1968  013370  6EE6               	movwf	postinc1,c
  1969  013372  0E07               	movlw	7
  1970  013374  6EE6               	movwf	postinc1,c
  1971  013376  EC2D  F0BF         	call	_srand	;wreg free
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main.c: 206:    set_vterm(0);
  1975  01337A  0E00               	movlw	0
  1976  01337C  6EE6               	movwf	postinc1,c
  1977  01337E  EC6C  F0C2         	call	_set_vterm	;wreg free
  1978                           
  1979                           ; BSR set to: 5
  1980                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1981  013382  0E62               	movlw	low STR_1
  1982  013384  6EE6               	movwf	postinc1,c
  1983  013386  0EFF               	movlw	high STR_1
  1984  013388  6EE6               	movwf	postinc1,c
  1985  01338A  0E00               	movlw	0
  1986  01338C  6EE6               	movwf	postinc1,c
  1987  01338E  0E00               	movlw	0
  1988  013390  6EE6               	movwf	postinc1,c
  1989  013392  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  1990  013396  0060  F0CB  FFE6   	movff	btemp,postinc1
  1991  01339C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1992  0133A2  0E04               	movlw	4
  1993  0133A4  6EE6               	movwf	postinc1,c
  1994  0133A6  ECBB  F0B4         	call	_sprintf	;wreg free
  1995                           
  1996                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.97");
  1997  0133AA  0EE0               	movlw	low STR_3
  1998  0133AC  6EE6               	movwf	postinc1,c
  1999  0133AE  0EFF               	movlw	high STR_3
  2000  0133B0  6EE6               	movwf	postinc1,c
  2001  0133B2  0EA4               	movlw	low STR_2
  2002  0133B4  6EE6               	movwf	postinc1,c
  2003  0133B6  0EFF               	movlw	high STR_2
  2004  0133B8  6EE6               	movwf	postinc1,c
  2005  0133BA  0E00               	movlw	0
  2006  0133BC  6EE6               	movwf	postinc1,c
  2007  0133BE  0E01               	movlw	1
  2008  0133C0  6EE6               	movwf	postinc1,c
  2009  0133C2  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2010  0133C6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2011  0133CC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2012  0133D2  0E06               	movlw	6
  2013  0133D4  6EE6               	movwf	postinc1,c
  2014  0133D6  ECBB  F0B4         	call	_sprintf	;wreg free
  2015                           
  2016                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2017  0133DA  0E51               	movlw	low STR_4
  2018  0133DC  6EE6               	movwf	postinc1,c
  2019  0133DE  0EFF               	movlw	high STR_4
  2020  0133E0  6EE6               	movwf	postinc1,c
  2021  0133E2  0E00               	movlw	0
  2022  0133E4  6EE6               	movwf	postinc1,c
  2023  0133E6  0E02               	movlw	2
  2024  0133E8  6EE6               	movwf	postinc1,c
  2025  0133EA  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2026  0133EE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2027  0133F4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2028  0133FA  0E04               	movlw	4
  2029  0133FC  6EE6               	movwf	postinc1,c
  2030  0133FE  ECBB  F0B4         	call	_sprintf	;wreg free
  2031                           
  2032                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2033  013402  0E73               	movlw	low STR_5
  2034  013404  6EE6               	movwf	postinc1,c
  2035  013406  0EFF               	movlw	high STR_5
  2036  013408  6EE6               	movwf	postinc1,c
  2037  01340A  0E02               	movlw	2
  2038  01340C  6EE6               	movwf	postinc1,c
  2039  01340E  0E00               	movlw	0
  2040  013410  6EE6               	movwf	postinc1,c
  2041  013412  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2042  013416  0060  F0CB  FFE6   	movff	btemp,postinc1
  2043  01341C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2044  013422  0E04               	movlw	4
  2045  013424  6EE6               	movwf	postinc1,c
  2046  013426  ECBB  F0B4         	call	_sprintf	;wreg free
  2047                           
  2048                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.97");
  2049  01342A  0EE0               	movlw	low STR_3
  2050  01342C  6EE6               	movwf	postinc1,c
  2051  01342E  0EFF               	movlw	high STR_3
  2052  013430  6EE6               	movwf	postinc1,c
  2053  013432  0EA4               	movlw	low STR_2
  2054  013434  6EE6               	movwf	postinc1,c
  2055  013436  0EFF               	movlw	high STR_2
  2056  013438  6EE6               	movwf	postinc1,c
  2057  01343A  0E02               	movlw	2
  2058  01343C  6EE6               	movwf	postinc1,c
  2059  01343E  0E01               	movlw	1
  2060  013440  6EE6               	movwf	postinc1,c
  2061  013442  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2062  013446  0060  F0CB  FFE6   	movff	btemp,postinc1
  2063  01344C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2064  013452  0E06               	movlw	6
  2065  013454  6EE6               	movwf	postinc1,c
  2066  013456  ECBB  F0B4         	call	_sprintf	;wreg free
  2067                           
  2068                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2069  01345A  0E40               	movlw	low STR_8
  2070  01345C  6EE6               	movwf	postinc1,c
  2071  01345E  0EFF               	movlw	high STR_8
  2072  013460  6EE6               	movwf	postinc1,c
  2073  013462  0E02               	movlw	2
  2074  013464  6EE6               	movwf	postinc1,c
  2075  013466  0E02               	movlw	2
  2076  013468  6EE6               	movwf	postinc1,c
  2077  01346A  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2078  01346E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2079  013474  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2080  01347A  0E04               	movlw	4
  2081  01347C  6EE6               	movwf	postinc1,c
  2082  01347E  ECBB  F0B4         	call	_sprintf	;wreg free
  2083                           
  2084                           ;main.c: 213:    update_lcd(0);
  2085  013482  0E00               	movlw	0
  2086  013484  6EE6               	movwf	postinc1,c
  2087  013486  EC34  F0B4         	call	_update_lcd	;wreg free
  2088                           
  2089                           ;main.c: 214:    WaitMs(3000);
  2090  01348A  0EB8               	movlw	184
  2091  01348C  6EE6               	movwf	postinc1,c
  2092  01348E  0E0B               	movlw	11
  2093  013490  6EE6               	movwf	postinc1,c
  2094  013492  ECF7  F0BE         	call	_WaitMs	;wreg free
  2095                           
  2096                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2097  013496  0EFA               	movlw	250
  2098  013498  6EE6               	movwf	postinc1,c
  2099  01349A  0E00               	movlw	0
  2100  01349C  6EE6               	movwf	postinc1,c
  2101  01349E  0E0A               	movlw	10
  2102  0134A0  6EE6               	movwf	postinc1,c
  2103  0134A2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2104                           
  2105                           ;main.c: 216:    StartTimer(TMR_ADC, 200);
  2106  0134A6  0EC8               	movlw	200
  2107  0134A8  6EE6               	movwf	postinc1,c
  2108  0134AA  0E00               	movlw	0
  2109  0134AC  6EE6               	movwf	postinc1,c
  2110  0134AE  0E01               	movlw	1
  2111  0134B0  6EE6               	movwf	postinc1,c
  2112  0134B2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2113                           
  2114                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2115  0134B6  0EB8               	movlw	184
  2116  0134B8  6EE6               	movwf	postinc1,c
  2117  0134BA  0E0B               	movlw	11
  2118  0134BC  6EE6               	movwf	postinc1,c
  2119  0134BE  0E07               	movlw	7
  2120  0134C0  6EE6               	movwf	postinc1,c
  2121  0134C2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2122                           
  2123                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2124  0134C6  0EDC               	movlw	220
  2125  0134C8  6EE6               	movwf	postinc1,c
  2126  0134CA  0E05               	movlw	5
  2127  0134CC  6EE6               	movwf	postinc1,c
  2128  0134CE  0E0B               	movlw	11
  2129  0134D0  6EE6               	movwf	postinc1,c
  2130  0134D2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2131                           
  2132                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2133  0134D6  0EB8               	movlw	184
  2134  0134D8  6EE6               	movwf	postinc1,c
  2135  0134DA  0E0B               	movlw	11
  2136  0134DC  6EE6               	movwf	postinc1,c
  2137  0134DE  0E09               	movlw	9
  2138  0134E0  6EE6               	movwf	postinc1,c
  2139  0134E2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2140                           
  2141                           ;main.c: 221:    start_adc_scan();
  2142  0134E6  EC99  F0BB         	call	_start_adc_scan	;wreg free
  2143                           
  2144                           ;main.c: 222:    start_switch_handler();
  2145  0134EA  EC03  F0C2         	call	_start_switch_handler	;wreg free
  2146                           
  2147                           ;main.c: 224:    break;
  2148  0134EE  D01C               	goto	l12186
  2149  0134F0                     l1254:
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2153  0134F0  0100               	movlb	0	; () banked
  2154  0134F2  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2155                           
  2156                           ;main.c: 231:    break;
  2157  0134F4  D019               	goto	l12186
  2158  0134F6                     l1256:
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2162  0134F6  6B00               	clrf	_V& (0+255),b	;volatile
  2163                           
  2164                           ;main.c: 235:    break;
  2165  0134F8  D017               	goto	l12186
  2166  0134FA                     l12184:
  2167  0134FA  0101               	movlb	1	; () banked
  2168  0134FC  5100               	movf	_V& (0+255),w,b	;volatile
  2169  0134FE  6E3C               	movwf	(btemp+10)^0,c
  2170  013500  6A3D               	clrf	(btemp+11)^0,c
  2171                           
  2172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2173                           ; Switch size 1, requested type "simple"
  2174                           ; Number of cases is 1, Range of values is 0 to 0
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            4     3 (average)
  2178                           ;	Chosen strategy is simple_byte
  2179  013502  503D               	movf	(btemp+11)^0,w,c
  2180  013504  0A00               	xorlw	0	; case 0
  2181  013506  A4D8               	btfss	status,2,c
  2182  013508  D7F6               	goto	l1256
  2183                           
  2184                           ; BSR set to: 1
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 5, Range of values is 0 to 5
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte           16     9 (average)
  2190                           ;	Chosen strategy is simple_byte
  2191  01350A  503C               	movf	(btemp+10)^0,w,c
  2192  01350C  0A00               	xorlw	0	; case 0
  2193  01350E  B4D8               	btfsc	status,2,c
  2194  013510  D724               	goto	l12142
  2195  013512  0A01               	xorlw	1	; case 1
  2196  013514  B4D8               	btfsc	status,2,c
  2197  013516  D008               	goto	l12186
  2198  013518  0A02               	xorlw	2	; case 3
  2199  01351A  B4D8               	btfsc	status,2,c
  2200  01351C  D005               	goto	l12186
  2201  01351E  0A07               	xorlw	7	; case 4
  2202  013520  B4D8               	btfsc	status,2,c
  2203  013522  D7E6               	goto	l1254
  2204  013524  0A01               	xorlw	1	; case 5
  2205  013526  D7E7               	goto	l1256
  2206  013528                     l12186:
  2207                           
  2208                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2209  013528  0E01               	movlw	1
  2210  01352A  6EE6               	movwf	postinc1,c
  2211  01352C  ECAB  F0C1         	call	_TimerDone	;wreg free
  2212  013530  5032               	movf	btemp^0,w,c
  2213  013532  B4D8               	btfsc	status,2,c
  2214  013534  D013               	goto	l12198
  2215  013536  EC31  F0C3         	call	_check_adc_scan	;wreg free
  2216  01353A  5032               	movf	btemp^0,w,c
  2217  01353C  B4D8               	btfsc	status,2,c
  2218  01353E  D00E               	goto	l12198
  2219                           
  2220                           ;main.c: 242:    convert_adc_data();
  2221  013540  EC8B  F0BA         	call	_convert_adc_data	;wreg free
  2222                           
  2223                           ;main.c: 246:    clear_adc_scan();
  2224  013544  EC39  F0C3         	call	_clear_adc_scan	;wreg free
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;main.c: 247:    start_adc_scan();
  2228  013548  EC99  F0BB         	call	_start_adc_scan	;wreg free
  2229                           
  2230                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  2231  01354C  0EC8               	movlw	200
  2232  01354E  6EE6               	movwf	postinc1,c
  2233  013550  0E00               	movlw	0
  2234  013552  6EE6               	movwf	postinc1,c
  2235  013554  0E01               	movlw	1
  2236  013556  6EE6               	movwf	postinc1,c
  2237  013558  ECBD  F0BE         	call	_StartTimer	;wreg free
  2238  01355C                     l12198:
  2239                           
  2240                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2241                           
  2242                           ;main.c: 251:   if (V.ticks) {
  2243  01355C  0E0A               	movlw	10
  2244  01355E  6EE6               	movwf	postinc1,c
  2245  013560  ECAB  F0C1         	call	_TimerDone	;wreg free
  2246  013564  5032               	movf	btemp^0,w,c
  2247  013566  B4D8               	btfsc	status,2,c
  2248  013568  D0C8               	goto	l12216
  2249                           
  2250                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2251  01356A  0E09               	movlw	9
  2252  01356C  6EE6               	movwf	postinc1,c
  2253  01356E  ECAB  F0C1         	call	_TimerDone	;wreg free
  2254  013572  5032               	movf	btemp^0,w,c
  2255  013574  B4D8               	btfsc	status,2,c
  2256  013576  D004               	goto	l12206
  2257                           
  2258                           ;main.c: 257:     set_display_info(DIS_STR);
  2259  013578  0E00               	movlw	0
  2260  01357A  6EE6               	movwf	postinc1,c
  2261  01357C  EC31  F0C2         	call	_set_display_info	;wreg free
  2262  013580                     l12206:
  2263                           
  2264                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d", get_raw_result(i), C.calc
      +                          [i], get_switch(SSELECT));
  2265  013580  0E02               	movlw	2
  2266  013582  6EE6               	movwf	postinc1,c
  2267  013584  EC6B  F0C0         	call	_get_switch	;wreg free
  2268  013588  5032               	movf	btemp^0,w,c
  2269  01358A  6EE6               	movwf	postinc1,c
  2270  01358C  0E00               	movlw	0
  2271  01358E  6EE6               	movwf	postinc1,c
  2272                           
  2273                           ;stkvar	_i @ sp[(-7)+3]
  2274  013590  0EFC               	movlw	-4
  2275  013592  50E3               	movf	plusw1,w,c
  2276  013594  0D04               	mullw	4
  2277  013596  0E00               	movlw	low _C
  2278  013598  24F3               	addwf	243,w,c
  2279  01359A  6ED9               	movwf	fsr2l,c
  2280  01359C  0E03               	movlw	high _C
  2281  01359E  20F4               	addwfc	prodh,w,c
  2282  0135A0  6EDA               	movwf	fsr2h,c
  2283  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
  2284  0135A8  006F FF7B FFE6     	movff	postinc2,postinc1
  2285  0135AE  006F FF7B FFE6     	movff	postinc2,postinc1
  2286  0135B4  006F FF7B FFE6     	movff	postinc2,postinc1
  2287                           
  2288                           ;stkvar	_i @ sp[(-11)+3]
  2289  0135BA  0EF8               	movlw	-8
  2290  0135BC  50E3               	movf	plusw1,w,c
  2291  0135BE  6EE6               	movwf	postinc1,c
  2292  0135C0  EC22  F0C2         	call	_get_raw_result	;wreg free
  2293  0135C4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2294  0135CA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2295  0135D0  0EB3               	movlw	low STR_9
  2296  0135D2  6EE6               	movwf	postinc1,c
  2297  0135D4  0EFF               	movlw	high STR_9
  2298  0135D6  6EE6               	movwf	postinc1,c
  2299  0135D8  0E00               	movlw	0
  2300  0135DA  6EE6               	movwf	postinc1,c
  2301  0135DC  0E00               	movlw	0
  2302  0135DE  6EE6               	movwf	postinc1,c
  2303  0135E0  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2304  0135E4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2305  0135EA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2306  0135F0  0E0C               	movlw	12
  2307  0135F2  6EE6               	movwf	postinc1,c
  2308  0135F4  ECBB  F0B4         	call	_sprintf	;wreg free
  2309                           
  2310                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d", get_raw_result(j), C.calc
      +                          [j], get_switch(SENTER));
  2311  0135F8  0E03               	movlw	3
  2312  0135FA  6EE6               	movwf	postinc1,c
  2313  0135FC  EC6B  F0C0         	call	_get_switch	;wreg free
  2314  013600  5032               	movf	btemp^0,w,c
  2315  013602  6EE6               	movwf	postinc1,c
  2316  013604  0E00               	movlw	0
  2317  013606  6EE6               	movwf	postinc1,c
  2318                           
  2319                           ;stkvar	_j @ sp[(-7)+2]
  2320  013608  0EFB               	movlw	-5
  2321  01360A  50E3               	movf	plusw1,w,c
  2322  01360C  0D04               	mullw	4
  2323  01360E  0E00               	movlw	low _C
  2324  013610  24F3               	addwf	243,w,c
  2325  013612  6ED9               	movwf	fsr2l,c
  2326  013614  0E03               	movlw	high _C
  2327  013616  20F4               	addwfc	prodh,w,c
  2328  013618  6EDA               	movwf	fsr2h,c
  2329  01361A  006F FF7B FFE6     	movff	postinc2,postinc1
  2330  013620  006F FF7B FFE6     	movff	postinc2,postinc1
  2331  013626  006F FF7B FFE6     	movff	postinc2,postinc1
  2332  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
  2333                           
  2334                           ;stkvar	_j @ sp[(-11)+2]
  2335  013632  0EF7               	movlw	-9
  2336  013634  50E3               	movf	plusw1,w,c
  2337  013636  6EE6               	movwf	postinc1,c
  2338  013638  EC22  F0C2         	call	_get_raw_result	;wreg free
  2339  01363C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2340  013642  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2341  013648  0EB3               	movlw	low STR_9
  2342  01364A  6EE6               	movwf	postinc1,c
  2343  01364C  0EFF               	movlw	high STR_9
  2344  01364E  6EE6               	movwf	postinc1,c
  2345  013650  0E00               	movlw	0
  2346  013652  6EE6               	movwf	postinc1,c
  2347  013654  0E01               	movlw	1
  2348  013656  6EE6               	movwf	postinc1,c
  2349  013658  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2350  01365C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2351  013662  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2352  013668  0E0C               	movlw	12
  2353  01366A  6EE6               	movwf	postinc1,c
  2354  01366C  ECBB  F0B4         	call	_sprintf	;wreg free
  2355                           
  2356                           ;main.c: 262:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C.c
      +                          alc[k], inp_index);
  2357                           ;stkvar	_inp_index @ sp[(-5)+0]
  2358  013670  0EFB               	movlw	-5
  2359  013672  50E3               	movf	plusw1,w,c
  2360  013674  6EE6               	movwf	postinc1,c
  2361  013676  0E00               	movlw	0
  2362  013678  6EE6               	movwf	postinc1,c
  2363                           
  2364                           ;stkvar	_k @ sp[(-7)+1]
  2365  01367A  0EFA               	movlw	-6
  2366  01367C  50E3               	movf	plusw1,w,c
  2367  01367E  0D04               	mullw	4
  2368  013680  0E00               	movlw	low _C
  2369  013682  24F3               	addwf	243,w,c
  2370  013684  6ED9               	movwf	fsr2l,c
  2371  013686  0E03               	movlw	high _C
  2372  013688  20F4               	addwfc	prodh,w,c
  2373  01368A  6EDA               	movwf	fsr2h,c
  2374  01368C  006F FF7B FFE6     	movff	postinc2,postinc1
  2375  013692  006F FF7B FFE6     	movff	postinc2,postinc1
  2376  013698  006F FF7B FFE6     	movff	postinc2,postinc1
  2377  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
  2378                           
  2379                           ;stkvar	_k @ sp[(-11)+1]
  2380  0136A4  0EF6               	movlw	-10
  2381  0136A6  50E3               	movf	plusw1,w,c
  2382  0136A8  6EE6               	movwf	postinc1,c
  2383  0136AA  EC22  F0C2         	call	_get_raw_result	;wreg free
  2384  0136AE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2385  0136B4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2386  0136BA  0E84               	movlw	low STR_11
  2387  0136BC  6EE6               	movwf	postinc1,c
  2388  0136BE  0EFF               	movlw	high STR_11
  2389  0136C0  6EE6               	movwf	postinc1,c
  2390  0136C2  0E00               	movlw	0
  2391  0136C4  6EE6               	movwf	postinc1,c
  2392  0136C6  0E02               	movlw	2
  2393  0136C8  6EE6               	movwf	postinc1,c
  2394  0136CA  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2395  0136CE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2396  0136D4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2397  0136DA  0E0C               	movlw	12
  2398  0136DC  6EE6               	movwf	postinc1,c
  2399  0136DE  ECBB  F0B4         	call	_sprintf	;wreg free
  2400                           
  2401                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  2402  0136E2  0EFA               	movlw	250
  2403  0136E4  6EE6               	movwf	postinc1,c
  2404  0136E6  0E00               	movlw	0
  2405  0136E8  6EE6               	movwf	postinc1,c
  2406  0136EA  0E0A               	movlw	10
  2407  0136EC  6EE6               	movwf	postinc1,c
  2408  0136EE  ECBD  F0BE         	call	_StartTimer	;wreg free
  2409                           
  2410                           ;main.c: 264:    update_lcd(0);
  2411  0136F2  0E00               	movlw	0
  2412  0136F4  6EE6               	movwf	postinc1,c
  2413  0136F6  EC34  F0B4         	call	_update_lcd	;wreg free
  2414  0136FA                     l12216:
  2415                           
  2416                           ;main.c: 270:   if (check_help(V.flipper)) {
  2417  0136FA  0101               	movlb	1	; () banked
  2418  0136FC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2419  0136FE  6EE6               	movwf	postinc1,c
  2420  013700  EC9B  F0AA         	call	_check_help	;wreg free
  2421  013704  5032               	movf	btemp^0,w,c
  2422  013706  B4D8               	btfsc	status,2,c
  2423  013708  D060               	goto	l1261
  2424                           
  2425                           ;main.c: 272:    inp_index += 3;
  2426                           ;stkvar	_inp_index @ sp[(-5)+0]
  2427  01370A  0EFB               	movlw	-5
  2428  01370C  006F FF8C  F032    	movff	plusw1,btemp
  2429  013712  0E03               	movlw	3
  2430  013714  2632               	addwf	btemp^0,f,c
  2431  013716  0EFB               	movlw	-5
  2432  013718  0060  F0CB  FFE3   	movff	btemp,plusw1
  2433                           
  2434                           ;main.c: 273:    if (inp_index > 9)
  2435                           ;stkvar	_inp_index @ sp[(-5)+0]
  2436  01371E  0EFB               	movlw	-5
  2437  013720  006F FF8C  F032    	movff	plusw1,btemp
  2438  013726  0E09               	movlw	9
  2439  013728  6432               	cpfsgt	btemp^0,c
  2440  01372A  D03A               	goto	l12240
  2441                           
  2442                           ;main.c: 274:     inp_index = 0;
  2443                           ;stkvar	_inp_index @ sp[(-5)+0]
  2444  01372C  0EFB               	movlw	-5
  2445  01372E  6AE3               	clrf	plusw1,c
  2446  013730  D037               	goto	l12240
  2447  013732                     l12222:
  2448                           
  2449                           ;main.c: 277:     i = C_BATT;
  2450                           ;stkvar	_i @ sp[(-5)+3]
  2451  013732  0EFE               	movlw	-2
  2452  013734  6AE3               	clrf	plusw1,c
  2453                           
  2454                           ;main.c: 278:     j = C_PV;
  2455                           ;stkvar	_j @ sp[(-5)+2]
  2456  013736  0EFD               	movlw	-3
  2457  013738  6AE3               	clrf	plusw1,c
  2458  01373A  2AE3               	incf	plusw1,f,c
  2459                           
  2460                           ;main.c: 279:     k = V_CC;
  2461                           ;stkvar	_k @ sp[(-5)+1]
  2462  01373C  0EFC               	movlw	-4
  2463  01373E  6AE3               	clrf	plusw1,c
  2464  013740  82E3               	bsf	plusw1,1,c
  2465                           
  2466                           ;main.c: 280:     break;
  2467  013742  D043               	goto	l1261
  2468  013744                     l12228:
  2469                           
  2470                           ;main.c: 282:     i = V_BAT;
  2471                           ;stkvar	_i @ sp[(-5)+3]
  2472  013744  0EFE               	movlw	-2
  2473  013746  6AE3               	clrf	plusw1,c
  2474  013748  84E3               	bsf	plusw1,2,c
  2475                           
  2476                           ;main.c: 283:     j = V_PV;
  2477                           ;stkvar	_j @ sp[(-5)+2]
  2478  01374A  0EFD               	movlw	-3
  2479  01374C  6AE3               	clrf	plusw1,c
  2480  01374E  80E3               	bsf	plusw1,0,c
  2481  013750  84E3               	bsf	plusw1,2,c	;indir
  2482                           
  2483                           ;main.c: 284:     k = V_CBUS;
  2484                           ;stkvar	_k @ sp[(-5)+1]
  2485  013752  0EFC               	movlw	-4
  2486  013754  6AE3               	clrf	plusw1,c
  2487  013756  82E3               	bsf	plusw1,1,c
  2488  013758  84E3               	bsf	plusw1,2,c	;indir
  2489                           
  2490                           ;main.c: 285:     break;
  2491  01375A  D037               	goto	l1261
  2492  01375C                     l12230:
  2493                           
  2494                           ;main.c: 287:     i = V_BBAT;
  2495                           ;stkvar	_i @ sp[(-5)+3]
  2496  01375C  0EFE               	movlw	-2
  2497  01375E  6AE3               	clrf	plusw1,c
  2498  013760  82E3               	bsf	plusw1,1,c
  2499  013762  86E3               	bsf	plusw1,3,c	;indir
  2500                           
  2501                           ;main.c: 288:     j = V_TEMP;
  2502  013764  0E0B               	movlw	11
  2503  013766  6E3D               	movwf	(btemp+11)^0,c
  2504                           
  2505                           ;stkvar	_j @ sp[(-5)+2]
  2506  013768  0EFD               	movlw	-3
  2507  01376A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2508                           
  2509                           ;main.c: 289:     k = V_INVERTER;
  2510                           ;stkvar	_k @ sp[(-5)+1]
  2511  013770  0EFC               	movlw	-4
  2512  013772  6AE3               	clrf	plusw1,c
  2513  013774  84E3               	bsf	plusw1,2,c
  2514  013776  86E3               	bsf	plusw1,3,c	;indir
  2515                           
  2516                           ;main.c: 290:     break;
  2517  013778  D028               	goto	l1261
  2518  01377A                     l12236:
  2519                           
  2520                           ;main.c: 292:     i = channel_ANB5;
  2521  01377A  0E0D               	movlw	13
  2522  01377C  6E3D               	movwf	(btemp+11)^0,c
  2523                           
  2524                           ;stkvar	_i @ sp[(-5)+3]
  2525  01377E  0EFE               	movlw	-2
  2526  013780  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2527                           
  2528                           ;main.c: 293:     j = channel_ANB5;
  2529  013786  0E0D               	movlw	13
  2530  013788  6E3D               	movwf	(btemp+11)^0,c
  2531                           
  2532                           ;stkvar	_j @ sp[(-5)+2]
  2533  01378A  0EFD               	movlw	-3
  2534  01378C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2535                           
  2536                           ;main.c: 294:     k = channel_ANB5;
  2537  013792  0E0D               	movlw	13
  2538  013794  6E3D               	movwf	(btemp+11)^0,c
  2539                           
  2540                           ;stkvar	_k @ sp[(-5)+1]
  2541  013796  0EFC               	movlw	-4
  2542  013798  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2543                           
  2544                           ;main.c: 295:     break;
  2545  01379E  D015               	goto	l1261
  2546  0137A0                     l12240:
  2547                           
  2548                           ;stkvar	_inp_index @ sp[(-5)+0]
  2549  0137A0  0EFB               	movlw	-5
  2550  0137A2  50E3               	movf	plusw1,w,c
  2551  0137A4  6E3C               	movwf	(btemp+10)^0,c
  2552  0137A6  6A3D               	clrf	(btemp+11)^0,c
  2553                           
  2554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2555                           ; Switch size 1, requested type "simple"
  2556                           ; Number of cases is 1, Range of values is 0 to 0
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte            4     3 (average)
  2560                           ;	Chosen strategy is simple_byte
  2561  0137A8  503D               	movf	(btemp+11)^0,w,c
  2562  0137AA  0A00               	xorlw	0	; case 0
  2563  0137AC  A4D8               	btfss	status,2,c
  2564  0137AE  D00D               	goto	l1261
  2565                           
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 4, Range of values is 0 to 9
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte           13     7 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  0137B0  503C               	movf	(btemp+10)^0,w,c
  2573  0137B2  0A00               	xorlw	0	; case 0
  2574  0137B4  B4D8               	btfsc	status,2,c
  2575  0137B6  D7BD               	goto	l12222
  2576  0137B8  0A03               	xorlw	3	; case 3
  2577  0137BA  B4D8               	btfsc	status,2,c
  2578  0137BC  D7C3               	goto	l12228
  2579  0137BE  0A05               	xorlw	5	; case 6
  2580  0137C0  B4D8               	btfsc	status,2,c
  2581  0137C2  D7CC               	goto	l12230
  2582  0137C4  0A0F               	xorlw	15	; case 9
  2583  0137C6  B4D8               	btfsc	status,2,c
  2584  0137C8  D7D8               	goto	l12236
  2585  0137CA                     l1261:
  2586                           
  2587                           ;main.c: 306:   if (V.set_sequ) {
  2588  0137CA  0101               	movlb	1	; () banked
  2589  0137CC  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2590  0137CE  D695               	goto	l12184
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;main.c: 307:    if (TimerDone(TMR_INFO)) {
  2594  0137D0  0E07               	movlw	7
  2595  0137D2  6EE6               	movwf	postinc1,c
  2596  0137D4  ECAB  F0C1         	call	_TimerDone	;wreg free
  2597  0137D8  5032               	movf	btemp^0,w,c
  2598  0137DA  B4D8               	btfsc	status,2,c
  2599  0137DC  D00B               	goto	l12250
  2600                           
  2601                           ;main.c: 308:     V.set_sequ = 0;
  2602  0137DE  0101               	movlb	1	; () banked
  2603  0137E0  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;main.c: 309:     set_vterm(0);
  2607  0137E2  0E00               	movlw	0
  2608  0137E4  6EE6               	movwf	postinc1,c
  2609  0137E6  EC6C  F0C2         	call	_set_vterm	;wreg free
  2610                           
  2611                           ; BSR set to: 5
  2612                           ;main.c: 310:     update_lcd(0);
  2613  0137EA  0E00               	movlw	0
  2614  0137EC  6EE6               	movwf	postinc1,c
  2615  0137EE  EC34  F0B4         	call	_update_lcd	;wreg free
  2616                           
  2617                           ;main.c: 311:    } else {
  2618  0137F2  D683               	goto	l12184
  2619  0137F4                     l12250:
  2620                           
  2621                           ;main.c: 312:     set_vterm(2);
  2622  0137F4  0E02               	movlw	2
  2623  0137F6  6EE6               	movwf	postinc1,c
  2624  0137F8  EC6C  F0C2         	call	_set_vterm	;wreg free
  2625                           
  2626                           ; BSR set to: 5
  2627                           ;main.c: 313:     update_lcd(2);
  2628  0137FC  0E02               	movlw	2
  2629  0137FE  6EE6               	movwf	postinc1,c
  2630  013800  EC34  F0B4         	call	_update_lcd	;wreg free
  2631  013804  D67A               	goto	l12184
  2632  013806                     __end_of_main:
  2633                           	opt callstack 0
  2634                           
  2635 ;; *************** function _start_switch_handler *****************
  2636 ;; Defined at:
  2637 ;;		line 119 in file "dio.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1  [STACK] void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2646 ;; Tracked objects:
  2647 ;;		On entry : 1/4
  2648 ;;		On exit  : 3F/39
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    7
  2658 ;; This function calls:
  2659 ;;		_INT1_SetInterruptHandler
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text1
  2666  018406                     __ptext1:
  2667                           	opt callstack 0
  2668  018406                     _start_switch_handler:
  2669                           	opt callstack 23
  2670                           
  2671                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2672                           
  2673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2674                           ;incstack = 0
  2675  018406  0139               	movlb	57	; () banked
  2676  018408  9195               	bcf	149,0,b	;volatile
  2677                           
  2678                           ; BSR set to: 57
  2679                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2680  01840A  0EA2               	movlw	low _switch_handler
  2681  01840C  6EE6               	movwf	postinc1,c
  2682  01840E  0E62               	movlw	high _switch_handler
  2683  018410  6EE6               	movwf	postinc1,c
  2684  018412  0E01               	movlw	low (_switch_handler shr (0+16))
  2685  018414  6EE6               	movwf	postinc1,c
  2686  018416  ECF7  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
  2687                           
  2688                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2689  01841A  0E02               	movlw	2
  2690  01841C  0100               	movlb	0	; () banked
  2691  01841E  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2695  018420  0139               	movlb	57	; () banked
  2696  018422  8195               	bsf	149,0,b	;volatile
  2697                           
  2698                           ; BSR set to: 57
  2699                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2700  018424  0012               	return		;funcret
  2701  018426                     __end_of_start_switch_handler:
  2702                           	opt callstack 0
  2703                           
  2704 ;; *************** function _start_adc_scan *****************
  2705 ;; Defined at:
  2706 ;;		line 33 in file "daq.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1  [STACK] _Bool 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/5
  2717 ;;		On exit  : 1/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    7
  2727 ;; This function calls:
  2728 ;;		_ADCC_DischargeSampleCapacitor
  2729 ;;		_ADCC_SetADIInterruptHandler
  2730 ;;		_ADCC_SetADTIInterruptHandler
  2731 ;;		_ADCC_StartConversion
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;; This function uses a reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text2
  2738  017732                     __ptext2:
  2739                           	opt callstack 0
  2740  017732                     _start_adc_scan:
  2741                           	opt callstack 23
  2742                           
  2743                           ;daq.c: 35:  if (R.done)
  2744                           
  2745                           ; BSR set to: 57
  2746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2747                           ;incstack = 0
  2748  017732  0100               	movlb	0	; () banked
  2749  017734  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2750  017736  A4D8               	btfss	status,2,c
  2751  017738  0012               	return	
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;daq.c: 38:  R.scan_index = 0;
  2755  01773A  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2759  01773C  013A               	movlb	58	; () banked
  2760  01773E  5140               	movf	64,w,b	;volatile
  2761  017740  006E F940  F032    	movff	14928,btemp	;volatile
  2762  017746  6A33               	clrf	(btemp+1)^0,c
  2763  017748  0060  F0C8  F033   	movff	btemp,btemp+1
  2764  01774E  6A32               	clrf	btemp^0,c
  2765  017750  2632               	addwf	btemp^0,f,c
  2766  017752  0E00               	movlw	0
  2767  017754  2233               	addwfc	(btemp+1)^0,f,c
  2768  017756  0E77               	movlw	119
  2769  017758  1432               	andwf	btemp^0,w,c
  2770  01775A  0100               	movlb	0	; () banked
  2771  01775C  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2772  01775E  0E3C               	movlw	60
  2773  017760  1433               	andwf	(btemp+1)^0,w,c
  2774  017762  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2778  017764  0E90               	movlw	low _adc_int_handler
  2779  017766  6EE6               	movwf	postinc1,c
  2780  017768  0E86               	movlw	high _adc_int_handler
  2781  01776A  6EE6               	movwf	postinc1,c
  2782  01776C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2783  01776E  6EE6               	movwf	postinc1,c
  2784  017770  EC33  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2785                           
  2786                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2787  017774  0E98               	movlw	low _adc_int_t_handler
  2788  017776  6EE6               	movwf	postinc1,c
  2789  017778  0E74               	movlw	high _adc_int_t_handler
  2790  01777A  6EE6               	movwf	postinc1,c
  2791  01777C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2792  01777E  6EE6               	movwf	postinc1,c
  2793  017780  EC1F  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2794                           
  2795                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2796  017784  EC25  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2797                           
  2798                           ; BSR set to: 62
  2799                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2800  017788  0100               	movlb	0	; () banked
  2801  01778A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2802  01778C  0B0F               	andlw	15
  2803  01778E  6EE6               	movwf	postinc1,c
  2804  017790  ECD8  F0C2         	call	_ADCC_StartConversion	;wreg free
  2805                           
  2806                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2807  017794  0012               	return		;funcret
  2808  017796                     __end_of_start_adc_scan:
  2809                           	opt callstack 0
  2810                           
  2811 ;; *************** function _ADCC_StartConversion *****************
  2812 ;; Defined at:
  2813 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  channel         1  [STACK] enum E16136
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1  [STACK] void 
  2820 ;; Registers used:
  2821 ;;		fsr1l, fsr1h
  2822 ;; Tracked objects:
  2823 ;;		On entry : 3F/0
  2824 ;;		On exit  : 3F/3E
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    6
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_start_adc_scan
  2838 ;;		_adc_int_t_handler
  2839 ;; This function uses a reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text3
  2843  0185B0                     __ptext3:
  2844                           	opt callstack 0
  2845  0185B0                     _ADCC_StartConversion:
  2846                           	opt callstack 6
  2847                           
  2848                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2849                           ;stkvar	_channel @ sp[(0)+-1]
  2850                           
  2851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2852                           ;incstack = 0
  2853  0185B0  0EFF               	movlw	-1
  2854  0185B2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2855                           
  2856                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2857  0185B8  013E               	movlb	62	; () banked
  2858  0185BA  8FF8               	bsf	248,7,b	;volatile
  2859                           
  2860                           ; BSR set to: 62
  2861                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2862  0185BC  81F8               	bsf	248,0,b	;volatile
  2863                           
  2864                           ; BSR set to: 62
  2865                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2866  0185BE  52E5               	movf	postdec1,f,c
  2867  0185C0  0012               	return		;funcret
  2868  0185C2                     __end_of_ADCC_StartConversion:
  2869                           	opt callstack 0
  2870                           
  2871 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2872 ;; Defined at:
  2873 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1  [STACK] void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 3F/3E
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    6
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_start_adc_scan
  2898 ;;		_adc_int_t_handler
  2899 ;; This function uses a reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text4
  2903  01864A                     __ptext4:
  2904                           	opt callstack 0
  2905  01864A                     _ADCC_DischargeSampleCapacitor:
  2906                           	opt callstack 6
  2907                           
  2908                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2909                           
  2910                           ; BSR set to: 62
  2911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2912                           ;incstack = 0
  2913  01864A  0E3B               	movlw	59
  2914  01864C  013E               	movlb	62	; () banked
  2915  01864E  6FF1               	movwf	241,b	;volatile
  2916                           
  2917                           ; BSR set to: 62
  2918                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2919  018650  0012               	return		;funcret
  2920  018652                     __end_of_ADCC_DischargeSampleCapacitor:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _srand *****************
  2924 ;; Defined at:
  2925 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  s               2  [STACK] unsigned int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1  [STACK] void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2934 ;; Tracked objects:
  2935 ;;		On entry : 3F/0
  2936 ;;		On exit  : 3F/1
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    6
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text5
  2954  017E5A                     __ptext5:
  2955                           	opt callstack 0
  2956  017E5A                     _srand:
  2957                           	opt callstack 24
  2958                           
  2959                           ;stkvar	_s @ sp[(0)+-2]
  2960                           
  2961                           ; BSR set to: 62
  2962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2963                           ;incstack = 0
  2964  017E5A  0EFE               	movlw	-2
  2965  017E5C  50E3               	movf	plusw1,w,c
  2966  017E5E  0FFF               	addlw	255
  2967  017E60  6E3C               	movwf	(btemp+10)^0,c
  2968  017E62  0EFF               	movlw	-1
  2969  017E64  006F FF8C  F03D    	movff	plusw1,btemp+11
  2970  017E6A  0EFF               	movlw	255
  2971  017E6C  223D               	addwfc	(btemp+11)^0,f,c
  2972  017E6E  0060  F0F0  F1BB   	movff	btemp+10,_seed
  2973  017E74  0060  F0F4  F1BC   	movff	btemp+11,_seed+1
  2974  017E7A  0101               	movlb	1	; () banked
  2975  017E7C  6BBD               	clrf	(_seed+2)& (0+255),b
  2976  017E7E  6BBE               	clrf	(_seed+3)& (0+255),b
  2977  017E80  6BBF               	clrf	(_seed+4)& (0+255),b
  2978  017E82  6BC0               	clrf	(_seed+5)& (0+255),b
  2979  017E84  6BC1               	clrf	(_seed+6)& (0+255),b
  2980  017E86  6BC2               	clrf	(_seed+7)& (0+255),b
  2981                           
  2982                           ; BSR set to: 1
  2983                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2984  017E88  52E5               	movf	postdec1,f,c
  2985  017E8A  52E5               	movf	postdec1,f,c
  2986  017E8C  0012               	return		;funcret
  2987  017E8E                     __end_of_srand:
  2988                           	opt callstack 0
  2989                           
  2990 ;; *************** function _init_display *****************
  2991 ;; Defined at:
  2992 ;;		line 37 in file "eadog.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1  [STACK] void 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/1
  3003 ;;		On exit  : 3F/3D
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    8
  3013 ;; This function calls:
  3014 ;;		_ringBufS_init
  3015 ;;		_send_lcd_cmd
  3016 ;;		_send_lcd_cmd_long
  3017 ;;		_wdtdelay
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text6
  3024  016B74                     __ptext6:
  3025                           	opt callstack 0
  3026  016B74                     _init_display:
  3027                           	opt callstack 22
  3028                           
  3029                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3030                           
  3031                           ; BSR set to: 1
  3032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3033                           ;incstack = 0
  3034  016B74  0E43               	movlw	low _ring_buf1
  3035  016B76  0100               	movlb	0	; () banked
  3036  016B78  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3037  016B7A  0E04               	movlw	high _ring_buf1
  3038  016B7C  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3039                           
  3040                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3041  016B7E  0E00               	movlw	low _ring_buf2
  3042  016B80  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3043  016B82  0E04               	movlw	high _ring_buf2
  3044  016B84  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3048  016B86  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3049  016B8C  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3050  016B92  EC57  F0C0         	call	_ringBufS_init	;wreg free
  3051                           
  3052                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3053  016B96  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3054  016B9C  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3055  016BA2  EC57  F0C0         	call	_ringBufS_init	;wreg free
  3056                           
  3057                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3058  016BA6  84BE               	bsf	190,2,c	;volatile
  3059  016BA8  84BC               	bsf	188,2,c	;volatile
  3060                           
  3061                           ;eadog.c: 46:  wdtdelay(350000);
  3062  016BAA  0E30               	movlw	48
  3063  016BAC  6EE6               	movwf	postinc1,c
  3064  016BAE  0E57               	movlw	87
  3065  016BB0  6EE6               	movwf	postinc1,c
  3066  016BB2  0E05               	movlw	5
  3067  016BB4  6EE6               	movwf	postinc1,c
  3068  016BB6  0E00               	movlw	0
  3069  016BB8  6EE6               	movwf	postinc1,c
  3070  016BBA  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3074  016BBE  0E39               	movlw	57
  3075  016BC0  6EE6               	movwf	postinc1,c
  3076  016BC2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3080  016BC6  0E1D               	movlw	29
  3081  016BC8  6EE6               	movwf	postinc1,c
  3082  016BCA  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3086  016BCE  0E50               	movlw	80
  3087  016BD0  6EE6               	movwf	postinc1,c
  3088  016BD2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3092  016BD6  0E6C               	movlw	108
  3093  016BD8  6EE6               	movwf	postinc1,c
  3094  016BDA  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3098  016BDE  0E76               	movlw	118
  3099  016BE0  6EE6               	movwf	postinc1,c
  3100  016BE2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3104  016BE6  0E38               	movlw	56
  3105  016BE8  6EE6               	movwf	postinc1,c
  3106  016BEA  EC2F  F0C0         	call	_send_lcd_cmd_long	;wreg free
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3110  016BEE  0E0F               	movlw	15
  3111  016BF0  6EE6               	movwf	postinc1,c
  3112  016BF2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3116  016BF6  0E01               	movlw	1
  3117  016BF8  6EE6               	movwf	postinc1,c
  3118  016BFA  EC2F  F0C0         	call	_send_lcd_cmd_long	;wreg free
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3122  016BFE  0E02               	movlw	2
  3123  016C00  6EE6               	movwf	postinc1,c
  3124  016C02  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3128  016C06  0E06               	movlw	6
  3129  016C08  6EE6               	movwf	postinc1,c
  3130  016C0A  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;eadog.c: 57:  wdtdelay(30);
  3134  016C0E  0E1E               	movlw	30
  3135  016C10  6EE6               	movwf	postinc1,c
  3136  016C12  0E00               	movlw	0
  3137  016C14  6EE6               	movwf	postinc1,c
  3138  016C16  0E00               	movlw	0
  3139  016C18  6EE6               	movwf	postinc1,c
  3140  016C1A  0E00               	movlw	0
  3141  016C1C  6EE6               	movwf	postinc1,c
  3142  016C1E  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3146  016C22  0E02               	movlw	2
  3147  016C24  013D               	movlb	61	; () banked
  3148  016C26  6F16               	movwf	22,b	;volatile
  3149                           
  3150                           ; BSR set to: 61
  3151                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3152  016C28  0E40               	movlw	64
  3153  016C2A  6F15               	movwf	21,b	;volatile
  3154                           
  3155                           ; BSR set to: 61
  3156                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3157  016C2C  0E83               	movlw	131
  3158  016C2E  6F14               	movwf	20,b	;volatile
  3159                           
  3160                           ; BSR set to: 61
  3161                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3162  016C30  931A               	bcf	26,1,b	;volatile
  3163                           
  3164                           ; BSR set to: 61
  3165                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3166  016C32  0E3F               	movlw	-193
  3167  016C34  013B               	movlb	59	; () banked
  3168  016C36  17FD               	andwf	253,f,b	;volatile
  3169                           
  3170                           ; BSR set to: 59
  3171                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3172  016C38  9BFD               	bcf	253,5,b	;volatile
  3173                           
  3174                           ; BSR set to: 59
  3175                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3176  016C3A  51FD               	movf	253,w,b	;volatile
  3177  016C3C  0BF9               	andlw	-7
  3178  016C3E  0902               	iorlw	2
  3179  016C40  6FFD               	movwf	253,b	;volatile
  3180                           
  3181                           ; BSR set to: 59
  3182                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3183  016C42  0EE7               	movlw	-25
  3184  016C44  17FD               	andwf	253,f,b	;volatile
  3185                           
  3186                           ; BSR set to: 59
  3187                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3188  016C46  81FD               	bsf	253,0,b	;volatile
  3189                           
  3190                           ; BSR set to: 59
  3191                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3192  016C48  0E43               	movlw	low _ring_buf1
  3193  016C4A  6FF9               	movwf	249,b	;volatile
  3194  016C4C  0E04               	movlw	high _ring_buf1
  3195  016C4E  6FFA               	movwf	250,b	;volatile
  3196  016C50  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3197  016C52  6FFB               	movwf	251,b	;volatile
  3198                           
  3199                           ; BSR set to: 59
  3200                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3201  016C54  9BFC               	bcf	252,5,b	;volatile
  3202                           
  3203                           ; BSR set to: 59
  3204                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3205  016C56  013D               	movlb	61	; () banked
  3206  016C58  831A               	bsf	26,1,b	;volatile
  3207                           
  3208                           ; BSR set to: 61
  3209                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3210  016C5A  94BE               	bcf	190,2,c	;volatile
  3211                           
  3212                           ; BSR set to: 61
  3213                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3214  016C5C  0012               	return		;funcret
  3215  016C5E                     __end_of_init_display:
  3216                           	opt callstack 0
  3217                           
  3218 ;; *************** function _send_lcd_cmd_long *****************
  3219 ;; Defined at:
  3220 ;;		line 114 in file "eadog.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  cmd             1  [STACK] const unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1  [STACK] void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3229 ;; Tracked objects:
  3230 ;;		On entry : 3F/0
  3231 ;;		On exit  : 3F/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    7
  3241 ;; This function calls:
  3242 ;;		_SPI1_Exchange8bit
  3243 ;;		_wdtdelay
  3244 ;; This function is called by:
  3245 ;;		_init_display
  3246 ;; This function uses a reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text7
  3250  01805E                     __ptext7:
  3251                           	opt callstack 0
  3252  01805E                     _send_lcd_cmd_long:
  3253                           	opt callstack 22
  3254                           
  3255                           ; BSR set to: 61
  3256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3257                           ;incstack = 0
  3258                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3259  01805E  92BC               	bcf	188,1,c	;volatile
  3260                           
  3261                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3262  018060  94BC               	bcf	188,2,c	;volatile
  3263                           
  3264                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3265                           ;stkvar	_cmd @ sp[(0)+-1]
  3266  018062  0EFF               	movlw	-1
  3267  018064  50E3               	movf	plusw1,w,c
  3268  018066  6EE6               	movwf	postinc1,c
  3269  018068  EC13  F0C2         	call	_SPI1_Exchange8bit	;wreg free
  3270                           
  3271                           ; BSR set to: 57
  3272                           ;eadog.c: 119:  wdtdelay(800);
  3273  01806C  0E20               	movlw	32
  3274  01806E  6EE6               	movwf	postinc1,c
  3275  018070  0E03               	movlw	3
  3276  018072  6EE6               	movwf	postinc1,c
  3277  018074  0E00               	movlw	0
  3278  018076  6EE6               	movwf	postinc1,c
  3279  018078  0E00               	movlw	0
  3280  01807A  6EE6               	movwf	postinc1,c
  3281  01807C  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3282                           
  3283                           ; BSR set to: 0
  3284  018080  82BC               	bsf	188,1,c	;volatile
  3285                           
  3286                           ; BSR set to: 0
  3287                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3288  018082  52E5               	movf	postdec1,f,c
  3289  018084  0012               	return		;funcret
  3290  018086                     __end_of_send_lcd_cmd_long:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _send_lcd_cmd *****************
  3294 ;; Defined at:
  3295 ;;		line 102 in file "eadog.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  cmd             1  [STACK] const unsigned char 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1  [STACK] void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3304 ;; Tracked objects:
  3305 ;;		On entry : 3F/0
  3306 ;;		On exit  : 3F/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    7
  3316 ;; This function calls:
  3317 ;;		_SPI1_Exchange8bit
  3318 ;;		_wdtdelay
  3319 ;; This function is called by:
  3320 ;;		_init_display
  3321 ;; This function uses a reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text8
  3325  018086                     __ptext8:
  3326                           	opt callstack 0
  3327  018086                     _send_lcd_cmd:
  3328                           	opt callstack 22
  3329                           
  3330                           ; BSR set to: 0
  3331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3332                           ;incstack = 0
  3333                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3334  018086  92BC               	bcf	188,1,c	;volatile
  3335                           
  3336                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3337  018088  94BC               	bcf	188,2,c	;volatile
  3338                           
  3339                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3340                           ;stkvar	_cmd @ sp[(0)+-1]
  3341  01808A  0EFF               	movlw	-1
  3342  01808C  50E3               	movf	plusw1,w,c
  3343  01808E  6EE6               	movwf	postinc1,c
  3344  018090  EC13  F0C2         	call	_SPI1_Exchange8bit	;wreg free
  3345                           
  3346                           ; BSR set to: 57
  3347                           ;eadog.c: 107:  wdtdelay(30);
  3348  018094  0E1E               	movlw	30
  3349  018096  6EE6               	movwf	postinc1,c
  3350  018098  0E00               	movlw	0
  3351  01809A  6EE6               	movwf	postinc1,c
  3352  01809C  0E00               	movlw	0
  3353  01809E  6EE6               	movwf	postinc1,c
  3354  0180A0  0E00               	movlw	0
  3355  0180A2  6EE6               	movwf	postinc1,c
  3356  0180A4  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3357                           
  3358                           ; BSR set to: 0
  3359  0180A8  82BC               	bsf	188,1,c	;volatile
  3360                           
  3361                           ; BSR set to: 0
  3362                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3363  0180AA  52E5               	movf	postdec1,f,c
  3364  0180AC  0012               	return		;funcret
  3365  0180AE                     __end_of_send_lcd_cmd:
  3366                           	opt callstack 0
  3367                           
  3368 ;; *************** function _SPI1_Exchange8bit *****************
  3369 ;; Defined at:
  3370 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  data            1  [STACK] unsigned char 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1  [STACK] unsigned char 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 3F/39
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3388 ;;Total ram usage:        0 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    6
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_send_lcd_cmd
  3395 ;;		_send_lcd_cmd_long
  3396 ;; This function uses a reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text9
  3400  018426                     __ptext9:
  3401                           	opt callstack 0
  3402  018426                     _SPI1_Exchange8bit:
  3403                           	opt callstack 22
  3404                           
  3405                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3406                           
  3407                           ; BSR set to: 0
  3408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3409                           ;incstack = 0
  3410  018426  0E01               	movlw	1
  3411  018428  013D               	movlb	61	; () banked
  3412  01842A  6F12               	movwf	18,b	;volatile
  3413                           
  3414                           ; BSR set to: 61
  3415                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3416                           ;stkvar	_data @ sp[(0)+-1]
  3417  01842C  0EFF               	movlw	-1
  3418  01842E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3419  018434                     l835:
  3420                           
  3421                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3422  018434  0139               	movlb	57	; () banked
  3423  018436  A9A2               	btfss	162,4,b	;volatile
  3424  018438  D7FD               	goto	l835
  3425                           
  3426                           ; BSR set to: 57
  3427                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3428  01843A  006F F440  F032    	movff	15632,btemp	;volatile
  3429                           
  3430                           ; BSR set to: 57
  3431                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3432  018440  52E5               	movf	postdec1,f,c
  3433  018442  0012               	return		;funcret
  3434  018444                     __end_of_SPI1_Exchange8bit:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _ringBufS_init *****************
  3438 ;; Defined at:
  3439 ;;		line 22 in file "ringbufs.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  _this           2  [STACK] PTR volatile struct ring
  3442 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1  [STACK] void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    7
  3461 ;; This function calls:
  3462 ;;		_memset
  3463 ;; This function is called by:
  3464 ;;		_init_display
  3465 ;; This function uses a reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text10
  3469  0180AE                     __ptext10:
  3470                           	opt callstack 0
  3471  0180AE                     _ringBufS_init:
  3472                           	opt callstack 22
  3473                           
  3474                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3475                           
  3476                           ; BSR set to: 57
  3477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3478                           ;incstack = 0
  3479  0180AE  0E43               	movlw	67
  3480  0180B0  6EE6               	movwf	postinc1,c
  3481  0180B2  0E00               	movlw	0
  3482  0180B4  6EE6               	movwf	postinc1,c
  3483  0180B6  0E00               	movlw	0
  3484  0180B8  6EE6               	movwf	postinc1,c
  3485  0180BA  0E00               	movlw	0
  3486  0180BC  6EE6               	movwf	postinc1,c
  3487                           
  3488                           ;stkvar	__this @ sp[(-4)+-2]
  3489  0180BE  0EFA               	movlw	-6
  3490  0180C0  006F FF8F FFE6     	movff	plusw1,postinc1
  3491  0180C6  006F FF8F FFE6     	movff	plusw1,postinc1
  3492  0180CC  EC2C  F0A4         	call	_memset	;wreg free
  3493                           
  3494                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3495  0180D0  52E5               	movf	postdec1,f,c
  3496  0180D2  52E5               	movf	postdec1,f,c
  3497  0180D4  0012               	return		;funcret
  3498  0180D6                     __end_of_ringBufS_init:
  3499                           	opt callstack 0
  3500                           
  3501 ;; *************** function _get_switch *****************
  3502 ;; Defined at:
  3503 ;;		line 18 in file "dio.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  i               1  [STACK] unsigned char 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1  [STACK] enum E17013
  3510 ;; Registers used:
  3511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/39
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    6
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_main
  3528 ;; This function uses a reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text11
  3532  0180D6                     __ptext11:
  3533                           	opt callstack 0
  3534  0180D6                     _get_switch:
  3535                           	opt callstack 24
  3536                           
  3537                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3538                           ;stkvar	_i @ sp[(0)+-1]
  3539                           
  3540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3541                           ;incstack = 0
  3542  0180D6  0EFF               	movlw	-1
  3543  0180D8  006F FF8C  F032    	movff	plusw1,btemp
  3544  0180DE  0E03               	movlw	3
  3545  0180E0  6432               	cpfsgt	btemp^0,c
  3546  0180E2  D002               	goto	l12020
  3547                           
  3548                           ;dio.c: 21:   return SW_OFF;
  3549  0180E4  0E00               	movlw	0
  3550  0180E6  D008               	goto	L1
  3551  0180E8                     l12020:
  3552                           
  3553                           ;dio.c: 23:  return S.button[i].sw;
  3554                           ;stkvar	_i @ sp[(0)+-1]
  3555  0180E8  0EFF               	movlw	-1
  3556  0180EA  50E3               	movf	plusw1,w,c
  3557  0180EC  0D05               	mullw	5
  3558  0180EE  50F3               	movf	243,w,c
  3559  0180F0  0F60               	addlw	low _S
  3560  0180F2  6ED9               	movwf	fsr2l,c
  3561  0180F4  6ADA               	clrf	fsr2h,c
  3562  0180F6  50DF               	movf	indf2,w,c
  3563  0180F8                     L1:
  3564  0180F8  6E32               	movwf	btemp^0,c
  3565                           
  3566                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3567  0180FA  52E5               	movf	postdec1,f,c
  3568  0180FC  0012               	return		;funcret
  3569  0180FE                     __end_of_get_switch:
  3570                           	opt callstack 0
  3571                           
  3572 ;; *************** function _eaDogM_WriteCommand *****************
  3573 ;; Defined at:
  3574 ;;		line 160 in file "eadog.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  cmd             1  [STACK] const unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1  [STACK] void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3583 ;; Tracked objects:
  3584 ;;		On entry : 3F/3D
  3585 ;;		On exit  : 3F/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3592 ;;Total ram usage:        0 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:   16
  3595 ;; This function calls:
  3596 ;;		_send_lcd_cmd_dma
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text12
  3603  0185E2                     __ptext12:
  3604                           	opt callstack 0
  3605  0185E2                     _eaDogM_WriteCommand:
  3606                           	opt callstack 14
  3607                           
  3608                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3609                           ;stkvar	_cmd @ sp[(0)+-1]
  3610                           
  3611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3612                           ;incstack = 0
  3613  0185E2  0EFF               	movlw	-1
  3614  0185E4  50E3               	movf	plusw1,w,c
  3615  0185E6  6EE6               	movwf	postinc1,c
  3616  0185E8  EC15  F0BD         	call	_send_lcd_cmd_dma	;wreg free
  3617                           
  3618                           ; BSR set to: 0
  3619                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3620  0185EC  52E5               	movf	postdec1,f,c
  3621  0185EE  0012               	return		;funcret
  3622  0185F0                     __end_of_eaDogM_WriteCommand:
  3623                           	opt callstack 0
  3624                           
  3625 ;; *************** function _convert_adc_data *****************
  3626 ;; Defined at:
  3627 ;;		line 38 in file "mbmc.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  i               1  [STACK] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1  [STACK] void 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/39
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    9
  3648 ;; This function calls:
  3649 ;;		_conv_raw_result
  3650 ;;		_lp_filter
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text13
  3657  017516                     __ptext13:
  3658                           	opt callstack 0
  3659  017516                     _convert_adc_data:
  3660                           	opt callstack 0
  3661                           
  3662                           ; BSR set to: 0
  3663                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3664  017516  52E6               	movf	postinc1,f,c
  3665                           
  3666                           ;mbmc.c: 40:  uint8_t i = 0;
  3667                           ;stkvar	_i @ sp[(-1)+0]
  3668                           
  3669                           ;incstack = 0
  3670  017518  0EFF               	movlw	-1
  3671  01751A  6AE3               	clrf	plusw1,c
  3672  01751C                     l12008:
  3673                           
  3674                           ;mbmc.c: 44:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3675  01751C  0E01               	movlw	1
  3676  01751E  6EE6               	movwf	postinc1,c
  3677                           
  3678                           ;stkvar	_i @ sp[(-2)+0]
  3679  017520  0EFE               	movlw	-2
  3680  017522  50E3               	movf	plusw1,w,c
  3681  017524  6EE6               	movwf	postinc1,c
  3682  017526  0E01               	movlw	1
  3683  017528  6EE6               	movwf	postinc1,c
  3684                           
  3685                           ;stkvar	_i @ sp[(-4)+0]
  3686  01752A  0EFC               	movlw	-4
  3687  01752C  50E3               	movf	plusw1,w,c
  3688  01752E  6EE6               	movwf	postinc1,c
  3689  017530  EC03  F09C         	call	_conv_raw_result	;wreg free
  3690  017534  0060  F0CB  FFE6   	movff	btemp,postinc1
  3691  01753A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3692  017540  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3693  017546  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3694  01754C  EC95  F0AD         	call	_lp_filter	;wreg free
  3695                           
  3696                           ;stkvar	_i @ sp[(-1)+0]
  3697  017550  0EFF               	movlw	-1
  3698  017552  50E3               	movf	plusw1,w,c
  3699  017554  0D04               	mullw	4
  3700  017556  0E00               	movlw	low _C
  3701  017558  24F3               	addwf	243,w,c
  3702  01755A  6ED9               	movwf	fsr2l,c
  3703  01755C  0E03               	movlw	high _C
  3704  01755E  20F4               	addwfc	prodh,w,c
  3705  017560  6EDA               	movwf	fsr2h,c
  3706  017562  0060  F0CB  FFDE   	movff	btemp,postinc2
  3707  017568  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3708  01756E  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3709  017574  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3710                           
  3711                           ;mbmc.c: 48:  } while (++i < 16);
  3712                           ;stkvar	_i @ sp[(-1)+0]
  3713  01757A  0EFF               	movlw	-1
  3714  01757C  2AE3               	incf	plusw1,f,c
  3715  01757E  0EFF               	movlw	-1
  3716  017580  006F FF8C  F032    	movff	plusw1,btemp
  3717  017586  0E0F               	movlw	15
  3718  017588  6432               	cpfsgt	btemp^0,c
  3719  01758A  D7C8               	goto	l12008
  3720                           
  3721                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3722  01758C  52E5               	movf	postdec1,f,c
  3723  01758E  0012               	return		;funcret
  3724  017590                     __end_of_convert_adc_data:
  3725                           	opt callstack 0
  3726                           
  3727 ;; *************** function _lp_filter *****************
  3728 ;; Defined at:
  3729 ;;		line 16 in file "mbmc.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  new             4  [STACK] const float 
  3732 ;;  bn              1  [STACK] const unsigned char 
  3733 ;;  slow            1  [STACK] const char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  lp_speed        4  [STACK] float 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  4  [STACK] float 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/39
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    8
  3752 ;; This function calls:
  3753 ;;		___fladd
  3754 ;;		___flmul
  3755 ;;		___flsub
  3756 ;; This function is called by:
  3757 ;;		_convert_adc_data
  3758 ;; This function uses a reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text14
  3762  015B2A                     __ptext14:
  3763                           	opt callstack 0
  3764  015B2A                     _lp_filter:
  3765                           	opt callstack 0
  3766                           
  3767                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3768  015B2A  52E6               	movf	postinc1,f,c
  3769  015B2C  52E6               	movf	postinc1,f,c
  3770  015B2E  52E6               	movf	postinc1,f,c
  3771  015B30  52E6               	movf	postinc1,f,c
  3772                           
  3773                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16];;mbmc.c: 19:  float lp_speed;;mbmc.c: 21: 
      +                           if (bn >= 16)
  3774                           ;stkvar	_bn @ sp[(-4)+-5]
  3775                           
  3776                           ;incstack = 0
  3777  015B32  0EF7               	movlw	-9
  3778  015B34  006F FF8C  F032    	movff	plusw1,btemp
  3779  015B3A  0E0F               	movlw	15
  3780  015B3C  6432               	cpfsgt	btemp^0,c
  3781  015B3E  D011               	goto	l11862
  3782  015B40                     u12520:
  3783                           
  3784                           ;mbmc.c: 22:   return new;
  3785                           ;stkvar	_new @ sp[(-4)+-4]
  3786  015B40  0EF8               	movlw	-8
  3787  015B42  006F FF8C  F032    	movff	plusw1,btemp
  3788  015B48  0EF9               	movlw	-7
  3789  015B4A  006F FF8C  F033    	movff	plusw1,btemp+1
  3790  015B50  0EFA               	movlw	-6
  3791  015B52  006F FF8C  F034    	movff	plusw1,btemp+2
  3792  015B58  0EFB               	movlw	-5
  3793  015B5A  006F FF8C  F035    	movff	plusw1,btemp+3
  3794  015B60  D0BF               	goto	l1700
  3795  015B62                     l11862:
  3796                           
  3797                           ;mbmc.c: 24:  if (slow == (-1)) {
  3798                           ;stkvar	_slow @ sp[(-4)+-6]
  3799  015B62  0EF6               	movlw	-10
  3800  015B64  28E3               	incf	plusw1,w,c
  3801  015B66  A4D8               	btfss	status,2,c
  3802  015B68  D012               	goto	l11870
  3803                           
  3804                           ;mbmc.c: 25:   smooth[bn] = 0.0;
  3805                           ;stkvar	_bn @ sp[(-4)+-5]
  3806  015B6A  0EF7               	movlw	-9
  3807  015B6C  50E3               	movf	plusw1,w,c
  3808  015B6E  0D04               	mullw	4
  3809  015B70  0E00               	movlw	low lp_filter@smooth
  3810  015B72  24F3               	addwf	243,w,c
  3811  015B74  6ED9               	movwf	fsr2l,c
  3812  015B76  0E02               	movlw	high lp_filter@smooth
  3813  015B78  20F4               	addwfc	prodh,w,c
  3814  015B7A  6EDA               	movwf	fsr2h,c
  3815  015B7C  0E00               	movlw	0
  3816  015B7E  6EDE               	movwf	postinc2,c
  3817  015B80  0E00               	movlw	0
  3818  015B82  6EDE               	movwf	postinc2,c
  3819  015B84  0E00               	movlw	0
  3820  015B86  6EDE               	movwf	postinc2,c
  3821  015B88  0E00               	movlw	0
  3822  015B8A  6EDD               	movwf	postdec2,c
  3823  015B8C  D7D9               	goto	u12520
  3824  015B8E                     l11870:
  3825                           
  3826                           ;mbmc.c: 29:  if (slow) {
  3827                           ;stkvar	_slow @ sp[(-4)+-6]
  3828  015B8E  0EF6               	movlw	-10
  3829  015B90  50E3               	movf	plusw1,w,c
  3830  015B92  B4D8               	btfsc	status,2,c
  3831  015B94  D008               	goto	l11874
  3832                           
  3833                           ;mbmc.c: 30:   lp_speed = 0.066;
  3834  015B96  0E02               	movlw	2
  3835  015B98  6E3A               	movwf	(btemp+8)^0,c
  3836  015B9A  0E2B               	movlw	43
  3837  015B9C  6E3B               	movwf	(btemp+9)^0,c
  3838  015B9E  0E87               	movlw	135
  3839  015BA0  6E3C               	movwf	(btemp+10)^0,c
  3840  015BA2  0E3D               	movlw	61
  3841  015BA4  D007               	goto	L2
  3842  015BA6                     l11874:
  3843                           
  3844                           ;mbmc.c: 32:   lp_speed = 0.125;
  3845  015BA6  0E00               	movlw	0
  3846  015BA8  6E3A               	movwf	(btemp+8)^0,c
  3847  015BAA  0E00               	movlw	0
  3848  015BAC  6E3B               	movwf	(btemp+9)^0,c
  3849  015BAE  0E00               	movlw	0
  3850  015BB0  6E3C               	movwf	(btemp+10)^0,c
  3851  015BB2  0E3E               	movlw	62
  3852  015BB4                     L2:
  3853  015BB4  6E3D               	movwf	(btemp+11)^0,c
  3854                           
  3855                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3856  015BB6  0EFC               	movlw	-4
  3857  015BB8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3858  015BBE  0EFD               	movlw	-3
  3859  015BC0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3860  015BC6  0EFE               	movlw	-2
  3861  015BC8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3862  015BCE  0EFF               	movlw	-1
  3863  015BD0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3864                           
  3865                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3866                           ;stkvar	_bn @ sp[(-4)+-5]
  3867  015BD6  0EF7               	movlw	-9
  3868  015BD8  50E3               	movf	plusw1,w,c
  3869  015BDA  0D04               	mullw	4
  3870  015BDC  0E00               	movlw	low lp_filter@smooth
  3871  015BDE  24F3               	addwf	243,w,c
  3872  015BE0  6ED9               	movwf	fsr2l,c
  3873  015BE2  0E02               	movlw	high lp_filter@smooth
  3874  015BE4  20F4               	addwfc	prodh,w,c
  3875  015BE6  6EDA               	movwf	fsr2h,c
  3876  015BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  3877  015BEE  006F FF7B FFE6     	movff	postinc2,postinc1
  3878  015BF4  006F FF7B FFE6     	movff	postinc2,postinc1
  3879  015BFA  006F FF7B FFE6     	movff	postinc2,postinc1
  3880                           
  3881                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3882  015C00  0EF8               	movlw	-8
  3883  015C02  006F FF8F FFE6     	movff	plusw1,postinc1
  3884  015C08  006F FF8F FFE6     	movff	plusw1,postinc1
  3885  015C0E  006F FF8F FFE6     	movff	plusw1,postinc1
  3886  015C14  006F FF8F FFE6     	movff	plusw1,postinc1
  3887                           
  3888                           ;stkvar	_bn @ sp[(-12)+-5]
  3889  015C1A  0EEF               	movlw	-17
  3890  015C1C  50E3               	movf	plusw1,w,c
  3891  015C1E  0D04               	mullw	4
  3892  015C20  0E00               	movlw	low lp_filter@smooth
  3893  015C22  24F3               	addwf	243,w,c
  3894  015C24  6ED9               	movwf	fsr2l,c
  3895  015C26  0E02               	movlw	high lp_filter@smooth
  3896  015C28  20F4               	addwfc	prodh,w,c
  3897  015C2A  6EDA               	movwf	fsr2h,c
  3898  015C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  3899  015C32  006F FF7B FFE6     	movff	postinc2,postinc1
  3900  015C38  006F FF7B FFE6     	movff	postinc2,postinc1
  3901  015C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  3902                           
  3903                           ;stkvar	_new @ sp[(-16)+-4]
  3904  015C44  0EEC               	movlw	-20
  3905  015C46  006F FF8F FFE6     	movff	plusw1,postinc1
  3906  015C4C  006F FF8F FFE6     	movff	plusw1,postinc1
  3907  015C52  006F FF8F FFE6     	movff	plusw1,postinc1
  3908  015C58  006F FF8F FFE6     	movff	plusw1,postinc1
  3909  015C5E  EC8B  F0BD         	call	___flsub	;wreg free
  3910  015C62  0060  F0CB  FFE6   	movff	btemp,postinc1
  3911  015C68  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3912  015C6E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3913  015C74  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3914  015C7A  ECC1  F08E         	call	___flmul	;wreg free
  3915  015C7E  0060  F0CB  FFE6   	movff	btemp,postinc1
  3916  015C84  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3917  015C8A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3918  015C90  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3919  015C96  ECD6  F092         	call	___fladd	;wreg free
  3920                           
  3921                           ;stkvar	_bn @ sp[(-4)+-5]
  3922  015C9A  0EF7               	movlw	-9
  3923  015C9C  50E3               	movf	plusw1,w,c
  3924  015C9E  0D04               	mullw	4
  3925  015CA0  0E00               	movlw	low lp_filter@smooth
  3926  015CA2  24F3               	addwf	243,w,c
  3927  015CA4  6ED9               	movwf	fsr2l,c
  3928  015CA6  0E02               	movlw	high lp_filter@smooth
  3929  015CA8  20F4               	addwfc	prodh,w,c
  3930  015CAA  6EDA               	movwf	fsr2h,c
  3931  015CAC  0060  F0CB  FFDE   	movff	btemp,postinc2
  3932  015CB2  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3933  015CB8  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3934  015CBE  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3935  015CC4  52DD               	movf	postdec2,f,c
  3936  015CC6  52DD               	movf	postdec2,f,c
  3937  015CC8  006F FF78  F032    	movff	postinc2,btemp
  3938  015CCE  006F FF78  F033    	movff	postinc2,btemp+1
  3939  015CD4  006F FF78  F034    	movff	postinc2,btemp+2
  3940  015CDA  006F FF78  F035    	movff	postinc2,btemp+3
  3941  015CE0                     l1700:
  3942                           
  3943                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3944  015CE0  0EF6               	movlw	246
  3945  015CE2  26E1               	addwf	fsr1l,f,c
  3946  015CE4  0EFF               	movlw	255
  3947  015CE6  22E2               	addwfc	fsr1h,f,c
  3948  015CE8  0012               	return		;funcret
  3949  015CEA                     __end_of_lp_filter:
  3950                           	opt callstack 0
  3951                           
  3952 ;; *************** function _conv_raw_result *****************
  3953 ;; Defined at:
  3954 ;;		line 80 in file "daq.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  chan            1  [STACK] const enum E16136
  3957 ;;  to_what         1  [STACK] const enum E16198
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  4  [STACK] float 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/39
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    8
  3976 ;; This function calls:
  3977 ;;		___fldiv
  3978 ;;		___flmul
  3979 ;;		___flsub
  3980 ;;		___xxtofl
  3981 ;;		_get_raw_result
  3982 ;;		_nanf
  3983 ;; This function is called by:
  3984 ;;		_convert_adc_data
  3985 ;; This function uses a reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text15
  3989  013806                     __ptext15:
  3990                           	opt callstack 0
  3991  013806                     _conv_raw_result:
  3992                           	opt callstack 21
  3993                           
  3994                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  3995                           
  3996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3997                           ;incstack = 0
  3998  013806  D242               	goto	l11846
  3999  013808                     l11792:
  4000                           
  4001                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4002                           ;stkvar	_chan @ sp[(0)+-1]
  4003  013808  0EFF               	movlw	-1
  4004  01380A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4005  013810  0E77               	movlw	119
  4006  013812  6E3A               	movwf	(btemp+8)^0,c
  4007  013814  0E3C               	movlw	60
  4008  013816  6E3B               	movwf	(btemp+9)^0,c
  4009  013818  2A3D               	incf	(btemp+11)^0,f,c
  4010  01381A  D003               	goto	u12404
  4011  01381C                     u12405:
  4012  01381C  343B               	rlcf	(btemp+9)^0,w,c
  4013  01381E  323B               	rrcf	(btemp+9)^0,f,c
  4014  013820  323A               	rrcf	(btemp+8)^0,f,c
  4015  013822                     u12404:
  4016  013822  2E3D               	decfsz	(btemp+11)^0,f,c
  4017  013824  D7FB               	goto	u12405
  4018  013826  B03A               	btfsc	(btemp+8)^0,0,c
  4019  013828  D007               	goto	l11798
  4020                           
  4021                           ;daq.c: 86:    return nanf("");
  4022  01382A  0E19               	movlw	low (STR_27+18)
  4023  01382C  6EE6               	movwf	postinc1,c
  4024  01382E  0EFF               	movlw	high (STR_27+18)
  4025  013830  6EE6               	movwf	postinc1,c
  4026  013832  ECFD  F0BB         	call	_nanf	;wreg free
  4027  013836  D23A               	goto	l1663
  4028  013838                     l11798:
  4029                           
  4030                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4031                           ;stkvar	_chan @ sp[(0)+-1]
  4032  013838  0EFF               	movlw	-1
  4033  01383A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4034  013840  0E03               	movlw	3
  4035  013842  6E3A               	movwf	(btemp+8)^0,c
  4036  013844  0E00               	movlw	0
  4037  013846  6E3B               	movwf	(btemp+9)^0,c
  4038  013848  2A3D               	incf	(btemp+11)^0,f,c
  4039  01384A  D003               	goto	u12424
  4040  01384C                     u12425:
  4041  01384C  343B               	rlcf	(btemp+9)^0,w,c
  4042  01384E  323B               	rrcf	(btemp+9)^0,f,c
  4043  013850  323A               	rrcf	(btemp+8)^0,f,c
  4044  013852                     u12424:
  4045  013852  2E3D               	decfsz	(btemp+11)^0,f,c
  4046  013854  D7FB               	goto	u12425
  4047  013856  A03A               	btfss	(btemp+8)^0,0,c
  4048  013858  D0EB               	goto	l11812
  4049                           
  4050                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4051                           ;stkvar	_chan @ sp[(0)+-1]
  4052  01385A  0EFF               	movlw	-1
  4053  01385C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4054  013862  0E01               	movlw	1
  4055  013864  6E3A               	movwf	(btemp+8)^0,c
  4056  013866  0E00               	movlw	0
  4057  013868  6E3B               	movwf	(btemp+9)^0,c
  4058  01386A  2A3D               	incf	(btemp+11)^0,f,c
  4059  01386C  D003               	goto	u12444
  4060  01386E                     u12445:
  4061  01386E  343B               	rlcf	(btemp+9)^0,w,c
  4062  013870  323B               	rrcf	(btemp+9)^0,f,c
  4063  013872  323A               	rrcf	(btemp+8)^0,f,c
  4064  013874                     u12444:
  4065  013874  2E3D               	decfsz	(btemp+11)^0,f,c
  4066  013876  D7FB               	goto	u12445
  4067  013878  A03A               	btfss	(btemp+8)^0,0,c
  4068  01387A  D06D               	goto	l11808
  4069                           
  4070                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.14385
      +                          00;
  4071  01387C  0E6A               	movlw	106
  4072  01387E  6EE6               	movwf	postinc1,c
  4073  013880  0E4D               	movlw	77
  4074  013882  6EE6               	movwf	postinc1,c
  4075  013884  0E13               	movlw	19
  4076  013886  6EE6               	movwf	postinc1,c
  4077  013888  0E3E               	movlw	62
  4078  01388A  6EE6               	movwf	postinc1,c
  4079  01388C  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4080  013892  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4081  013898  0E00               	movlw	0
  4082  01389A  BE3B               	btfsc	(btemp+9)^0,7,c
  4083  01389C  0EFF               	movlw	255
  4084  01389E  6E3C               	movwf	(btemp+10)^0,c
  4085  0138A0  6E3D               	movwf	(btemp+11)^0,c
  4086  0138A2  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4087  0138A8  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4088  0138AE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4089  0138B4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4090  0138BA  0E01               	movlw	1
  4091  0138BC  6EE6               	movwf	postinc1,c
  4092  0138BE  ECAF  F0AB         	call	___xxtofl	;wreg free
  4093  0138C2  0060  F0CB  FFE6   	movff	btemp,postinc1
  4094  0138C8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4095  0138CE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4096  0138D4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4097                           
  4098                           ;stkvar	_chan @ sp[(-8)+-1]
  4099  0138DA  0EF7               	movlw	-9
  4100  0138DC  50E3               	movf	plusw1,w,c
  4101  0138DE  6EE6               	movwf	postinc1,c
  4102  0138E0  EC22  F0C2         	call	_get_raw_result	;wreg free
  4103  0138E4  0060  F0C8  F03C   	movff	btemp,btemp+10
  4104  0138EA  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4105  0138F0  503C               	movf	(btemp+10)^0,w,c
  4106  0138F2  6E36               	movwf	(btemp+4)^0,c
  4107  0138F4  503D               	movf	(btemp+11)^0,w,c
  4108  0138F6  6E37               	movwf	(btemp+5)^0,c
  4109  0138F8  6A38               	clrf	(btemp+6)^0,c
  4110  0138FA  6A39               	clrf	(btemp+7)^0,c
  4111  0138FC  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4112  013902  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4113  013908  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4114  01390E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4115  013914  0E00               	movlw	0
  4116  013916  6EE6               	movwf	postinc1,c
  4117  013918  ECAF  F0AB         	call	___xxtofl	;wreg free
  4118  01391C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4119  013922  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4120  013928  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4121  01392E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4122  013934  EC8B  F0BD         	call	___flsub	;wreg free
  4123  013938  0060  F0CB  FFE6   	movff	btemp,postinc1
  4124  01393E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4125  013944  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4126  01394A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4127  013950  ECC1  F08E         	call	___flmul	;wreg free
  4128  013954  D1AB               	goto	l1663
  4129  013956                     l11808:
  4130                           
  4131                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.06010
      +                          00;
  4132  013956  0E6B               	movlw	107
  4133  013958  6EE6               	movwf	postinc1,c
  4134  01395A  0E2B               	movlw	43
  4135  01395C  6EE6               	movwf	postinc1,c
  4136  01395E  0E76               	movlw	118
  4137  013960  6EE6               	movwf	postinc1,c
  4138  013962  0E3D               	movlw	61
  4139  013964  6EE6               	movwf	postinc1,c
  4140  013966  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4141  01396C  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4142  013972  0E00               	movlw	0
  4143  013974  BE3B               	btfsc	(btemp+9)^0,7,c
  4144  013976  0EFF               	movlw	255
  4145  013978  6E3C               	movwf	(btemp+10)^0,c
  4146  01397A  6E3D               	movwf	(btemp+11)^0,c
  4147  01397C  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4148  013982  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4149  013988  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4150  01398E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4151  013994  0E01               	movlw	1
  4152  013996  6EE6               	movwf	postinc1,c
  4153  013998  ECAF  F0AB         	call	___xxtofl	;wreg free
  4154  01399C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4155  0139A2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4156  0139A8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4157  0139AE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4158                           
  4159                           ;stkvar	_chan @ sp[(-8)+-1]
  4160  0139B4  0EF7               	movlw	-9
  4161  0139B6  50E3               	movf	plusw1,w,c
  4162  0139B8  6EE6               	movwf	postinc1,c
  4163  0139BA  EC22  F0C2         	call	_get_raw_result	;wreg free
  4164  0139BE  0060  F0C8  F03C   	movff	btemp,btemp+10
  4165  0139C4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4166  0139CA  503C               	movf	(btemp+10)^0,w,c
  4167  0139CC  6E36               	movwf	(btemp+4)^0,c
  4168  0139CE  503D               	movf	(btemp+11)^0,w,c
  4169  0139D0  6E37               	movwf	(btemp+5)^0,c
  4170  0139D2  6A38               	clrf	(btemp+6)^0,c
  4171  0139D4  6A39               	clrf	(btemp+7)^0,c
  4172  0139D6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4173  0139DC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4174  0139E2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4175  0139E8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4176  0139EE  0E00               	movlw	0
  4177  0139F0  6EE6               	movwf	postinc1,c
  4178  0139F2  ECAF  F0AB         	call	___xxtofl	;wreg free
  4179  0139F6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4180  0139FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4181  013A02  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4182  013A08  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4183  013A0E  EC8B  F0BD         	call	___flsub	;wreg free
  4184  013A12  0060  F0CB  FFE6   	movff	btemp,postinc1
  4185  013A18  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4186  013A1E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4187  013A24  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4188  013A2A  ECC1  F08E         	call	___flmul	;wreg free
  4189  013A2E  D13E               	goto	l1663
  4190  013A30                     l11812:
  4191                           
  4192                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4193                           ;stkvar	_chan @ sp[(0)+-1]
  4194  013A30  0EFF               	movlw	-1
  4195  013A32  006F FF8C  F03D    	movff	plusw1,btemp+11
  4196  013A38  0E00               	movlw	0
  4197  013A3A  6E3A               	movwf	(btemp+8)^0,c
  4198  013A3C  0E08               	movlw	8
  4199  013A3E  6E3B               	movwf	(btemp+9)^0,c
  4200  013A40  2A3D               	incf	(btemp+11)^0,f,c
  4201  013A42  D003               	goto	u12464
  4202  013A44                     u12465:
  4203  013A44  343B               	rlcf	(btemp+9)^0,w,c
  4204  013A46  323B               	rrcf	(btemp+9)^0,f,c
  4205  013A48  323A               	rrcf	(btemp+8)^0,f,c
  4206  013A4A                     u12464:
  4207  013A4A  2E3D               	decfsz	(btemp+11)^0,f,c
  4208  013A4C  D7FB               	goto	u12465
  4209  013A4E  A03A               	btfss	(btemp+8)^0,0,c
  4210  013A50  D008               	goto	l11820
  4211                           
  4212                           ;daq.c: 96:     return 25.0;
  4213  013A52  0E00               	movlw	0
  4214  013A54  6E32               	movwf	btemp^0,c
  4215  013A56  0E00               	movlw	0
  4216  013A58  6E33               	movwf	(btemp+1)^0,c
  4217  013A5A  0EC8               	movlw	200
  4218  013A5C  6E34               	movwf	(btemp+2)^0,c
  4219  013A5E  0E41               	movlw	65
  4220  013A60  D113               	goto	L3
  4221  013A62                     l11820:
  4222                           
  4223                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4224  013A62  0E00               	movlw	0
  4225  013A64  6EE6               	movwf	postinc1,c
  4226  013A66  0E00               	movlw	0
  4227  013A68  6EE6               	movwf	postinc1,c
  4228  013A6A  0E7A               	movlw	122
  4229  013A6C  6EE6               	movwf	postinc1,c
  4230  013A6E  0E44               	movlw	68
  4231  013A70  6EE6               	movwf	postinc1,c
  4232  013A72  0E61               	movlw	97
  4233  013A74  6EE6               	movwf	postinc1,c
  4234  013A76  0E03               	movlw	3
  4235  013A78  6EE6               	movwf	postinc1,c
  4236  013A7A  0E84               	movlw	132
  4237  013A7C  6EE6               	movwf	postinc1,c
  4238  013A7E  0E40               	movlw	64
  4239  013A80  6EE6               	movwf	postinc1,c
  4240                           
  4241                           ;stkvar	_chan @ sp[(-8)+-1]
  4242  013A82  0EF7               	movlw	-9
  4243  013A84  50E3               	movf	plusw1,w,c
  4244  013A86  6EE6               	movwf	postinc1,c
  4245  013A88  EC22  F0C2         	call	_get_raw_result	;wreg free
  4246  013A8C  0060  F0C8  F03C   	movff	btemp,btemp+10
  4247  013A92  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4248  013A98  503C               	movf	(btemp+10)^0,w,c
  4249  013A9A  6E36               	movwf	(btemp+4)^0,c
  4250  013A9C  503D               	movf	(btemp+11)^0,w,c
  4251  013A9E  6E37               	movwf	(btemp+5)^0,c
  4252  013AA0  6A38               	clrf	(btemp+6)^0,c
  4253  013AA2  6A39               	clrf	(btemp+7)^0,c
  4254  013AA4  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4255  013AAA  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4256  013AB0  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4257  013AB6  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4258  013ABC  0E00               	movlw	0
  4259  013ABE  6EE6               	movwf	postinc1,c
  4260  013AC0  ECAF  F0AB         	call	___xxtofl	;wreg free
  4261  013AC4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4262  013ACA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4263  013AD0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4264  013AD6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4265  013ADC  ECC1  F08E         	call	___flmul	;wreg free
  4266  013AE0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4267  013AE6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4268  013AEC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4269  013AF2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4270  013AF8  ECB4  F096         	call	___fldiv	;wreg free
  4271  013AFC  D0D7               	goto	l1663
  4272  013AFE                     l11824:
  4273                           
  4274                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4275                           ;stkvar	_chan @ sp[(0)+-1]
  4276  013AFE  0EFF               	movlw	-1
  4277  013B00  006F FF8C  F03D    	movff	plusw1,btemp+11
  4278  013B06  0E03               	movlw	3
  4279  013B08  6E3A               	movwf	(btemp+8)^0,c
  4280  013B0A  0E00               	movlw	0
  4281  013B0C  6E3B               	movwf	(btemp+9)^0,c
  4282  013B0E  2A3D               	incf	(btemp+11)^0,f,c
  4283  013B10  D003               	goto	u12484
  4284  013B12                     u12485:
  4285  013B12  343B               	rlcf	(btemp+9)^0,w,c
  4286  013B14  323B               	rrcf	(btemp+9)^0,f,c
  4287  013B16  323A               	rrcf	(btemp+8)^0,f,c
  4288  013B18                     u12484:
  4289  013B18  2E3D               	decfsz	(btemp+11)^0,f,c
  4290  013B1A  D7FB               	goto	u12485
  4291  013B1C  B03A               	btfsc	(btemp+8)^0,0,c
  4292  013B1E  D011               	goto	u12510
  4293                           
  4294                           ;stkvar	_chan @ sp[(0)+-1]
  4295  013B20  0EFF               	movlw	-1
  4296  013B22  006F FF8C  F03D    	movff	plusw1,btemp+11
  4297  013B28  0E00               	movlw	0
  4298  013B2A  6E3A               	movwf	(btemp+8)^0,c
  4299  013B2C  0E08               	movlw	8
  4300  013B2E  6E3B               	movwf	(btemp+9)^0,c
  4301  013B30  2A3D               	incf	(btemp+11)^0,f,c
  4302  013B32  D003               	goto	u12504
  4303  013B34                     u12505:
  4304  013B34  343B               	rlcf	(btemp+9)^0,w,c
  4305  013B36  323B               	rrcf	(btemp+9)^0,f,c
  4306  013B38  323A               	rrcf	(btemp+8)^0,f,c
  4307  013B3A                     u12504:
  4308  013B3A  2E3D               	decfsz	(btemp+11)^0,f,c
  4309  013B3C  D7FB               	goto	u12505
  4310  013B3E  A03A               	btfss	(btemp+8)^0,0,c
  4311  013B40  D04E               	goto	l11832
  4312  013B42                     u12510:
  4313                           
  4314                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4315  013B42  0E00               	movlw	0
  4316  013B44  6EE6               	movwf	postinc1,c
  4317  013B46  0E00               	movlw	0
  4318  013B48  6EE6               	movwf	postinc1,c
  4319  013B4A  0E7A               	movlw	122
  4320  013B4C  6EE6               	movwf	postinc1,c
  4321  013B4E  0E44               	movlw	68
  4322  013B50  6EE6               	movwf	postinc1,c
  4323  013B52  0E00               	movlw	0
  4324  013B54  6EE6               	movwf	postinc1,c
  4325  013B56  0E00               	movlw	0
  4326  013B58  6EE6               	movwf	postinc1,c
  4327  013B5A  0E20               	movlw	32
  4328  013B5C  6EE6               	movwf	postinc1,c
  4329  013B5E  0E3F               	movlw	63
  4330  013B60  6EE6               	movwf	postinc1,c
  4331                           
  4332                           ;stkvar	_chan @ sp[(-8)+-1]
  4333  013B62  0EF7               	movlw	-9
  4334  013B64  50E3               	movf	plusw1,w,c
  4335  013B66  6EE6               	movwf	postinc1,c
  4336  013B68  EC22  F0C2         	call	_get_raw_result	;wreg free
  4337  013B6C  0060  F0C8  F03C   	movff	btemp,btemp+10
  4338  013B72  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4339  013B78  503C               	movf	(btemp+10)^0,w,c
  4340  013B7A  6E36               	movwf	(btemp+4)^0,c
  4341  013B7C  503D               	movf	(btemp+11)^0,w,c
  4342  013B7E  6E37               	movwf	(btemp+5)^0,c
  4343  013B80  6A38               	clrf	(btemp+6)^0,c
  4344  013B82  6A39               	clrf	(btemp+7)^0,c
  4345  013B84  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4346  013B8A  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4347  013B90  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4348  013B96  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4349  013B9C  0E00               	movlw	0
  4350  013B9E  6EE6               	movwf	postinc1,c
  4351  013BA0  ECAF  F0AB         	call	___xxtofl	;wreg free
  4352  013BA4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4353  013BAA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4354  013BB0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4355  013BB6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4356  013BBC  ECC1  F08E         	call	___flmul	;wreg free
  4357  013BC0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4358  013BC6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4359  013BCC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4360  013BD2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4361  013BD8  ECB4  F096         	call	___fldiv	;wreg free
  4362  013BDC  D067               	goto	l1663
  4363  013BDE                     l11832:
  4364                           
  4365                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4366  013BDE  0E00               	movlw	0
  4367  013BE0  6EE6               	movwf	postinc1,c
  4368  013BE2  0E00               	movlw	0
  4369  013BE4  6EE6               	movwf	postinc1,c
  4370  013BE6  0E7A               	movlw	122
  4371  013BE8  6EE6               	movwf	postinc1,c
  4372  013BEA  0E44               	movlw	68
  4373  013BEC  6EE6               	movwf	postinc1,c
  4374  013BEE  0E61               	movlw	97
  4375  013BF0  6EE6               	movwf	postinc1,c
  4376  013BF2  0E03               	movlw	3
  4377  013BF4  6EE6               	movwf	postinc1,c
  4378  013BF6  0E84               	movlw	132
  4379  013BF8  6EE6               	movwf	postinc1,c
  4380  013BFA  0E40               	movlw	64
  4381  013BFC  6EE6               	movwf	postinc1,c
  4382                           
  4383                           ;stkvar	_chan @ sp[(-8)+-1]
  4384  013BFE  0EF7               	movlw	-9
  4385  013C00  50E3               	movf	plusw1,w,c
  4386  013C02  6EE6               	movwf	postinc1,c
  4387  013C04  EC22  F0C2         	call	_get_raw_result	;wreg free
  4388  013C08  0060  F0C8  F03C   	movff	btemp,btemp+10
  4389  013C0E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4390  013C14  503C               	movf	(btemp+10)^0,w,c
  4391  013C16  6E36               	movwf	(btemp+4)^0,c
  4392  013C18  503D               	movf	(btemp+11)^0,w,c
  4393  013C1A  6E37               	movwf	(btemp+5)^0,c
  4394  013C1C  6A38               	clrf	(btemp+6)^0,c
  4395  013C1E  6A39               	clrf	(btemp+7)^0,c
  4396  013C20  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4397  013C26  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4398  013C2C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4399  013C32  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4400  013C38  0E00               	movlw	0
  4401  013C3A  6EE6               	movwf	postinc1,c
  4402  013C3C  ECAF  F0AB         	call	___xxtofl	;wreg free
  4403  013C40  0060  F0CB  FFE6   	movff	btemp,postinc1
  4404  013C46  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4405  013C4C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4406  013C52  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4407  013C58  ECC1  F08E         	call	___flmul	;wreg free
  4408  013C5C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4409  013C62  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4410  013C68  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4411  013C6E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4412  013C74  ECB4  F096         	call	___fldiv	;wreg free
  4413  013C78  D019               	goto	l1663
  4414  013C7A                     l11838:
  4415                           
  4416                           ;daq.c: 109:   return 0.0;
  4417  013C7A  0E00               	movlw	0
  4418  013C7C  6E32               	movwf	btemp^0,c
  4419  013C7E  0E00               	movlw	0
  4420  013C80  6E33               	movwf	(btemp+1)^0,c
  4421  013C82  0E00               	movlw	0
  4422  013C84  6E34               	movwf	(btemp+2)^0,c
  4423  013C86  0E00               	movlw	0
  4424  013C88                     L3:
  4425  013C88  6E35               	movwf	(btemp+3)^0,c
  4426  013C8A  D010               	goto	l1663
  4427  013C8C                     l11846:
  4428                           
  4429                           ;stkvar	_to_what @ sp[(0)+-2]
  4430  013C8C  0EFE               	movlw	-2
  4431  013C8E  50E3               	movf	plusw1,w,c
  4432  013C90  6E3C               	movwf	(btemp+10)^0,c
  4433  013C92  6A3D               	clrf	(btemp+11)^0,c
  4434                           
  4435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4436                           ; Switch size 1, requested type "simple"
  4437                           ; Number of cases is 1, Range of values is 0 to 0
  4438                           ; switch strategies available:
  4439                           ; Name         Instructions Cycles
  4440                           ; simple_byte            4     3 (average)
  4441                           ;	Chosen strategy is simple_byte
  4442  013C94  503D               	movf	(btemp+11)^0,w,c
  4443  013C96  0A00               	xorlw	0	; case 0
  4444  013C98  A4D8               	btfss	status,2,c
  4445  013C9A  D7EF               	goto	l11838
  4446                           
  4447                           ; Switch size 1, requested type "simple"
  4448                           ; Number of cases is 2, Range of values is 0 to 1
  4449                           ; switch strategies available:
  4450                           ; Name         Instructions Cycles
  4451                           ; simple_byte            7     4 (average)
  4452                           ;	Chosen strategy is simple_byte
  4453  013C9C  503C               	movf	(btemp+10)^0,w,c
  4454  013C9E  0A00               	xorlw	0	; case 0
  4455  013CA0  B4D8               	btfsc	status,2,c
  4456  013CA2  D5B2               	goto	l11792
  4457  013CA4  0A01               	xorlw	1	; case 1
  4458  013CA6  B4D8               	btfsc	status,2,c
  4459  013CA8  D72A               	goto	l11824
  4460  013CAA  D7E7               	goto	l11838
  4461  013CAC                     l1663:
  4462                           
  4463                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4464  013CAC  52E5               	movf	postdec1,f,c
  4465  013CAE  52E5               	movf	postdec1,f,c
  4466  013CB0  0012               	return		;funcret
  4467  013CB2                     __end_of_conv_raw_result:
  4468                           	opt callstack 0
  4469                           
  4470 ;; *************** function _nanf *****************
  4471 ;; Defined at:
  4472 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  s               2  [STACK] PTR const unsigned char 
  4475 ;;		 -> STR_33(1), 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  u               4  [STACK] struct .
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  4  [STACK] float 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/39
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4491 ;;Total ram usage:        0 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    6
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_conv_raw_result
  4498 ;; This function uses a reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text16
  4502  0177FA                     __ptext16:
  4503                           	opt callstack 0
  4504  0177FA                     _nanf:
  4505                           	opt callstack 0
  4506                           
  4507                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4508  0177FA  52E6               	movf	postinc1,f,c
  4509  0177FC  52E6               	movf	postinc1,f,c
  4510  0177FE  52E6               	movf	postinc1,f,c
  4511  017800  52E6               	movf	postinc1,f,c
  4512                           
  4513                           ;incstack = 0
  4514  017802  0EFF               	movlw	255
  4515  017804  6E3A               	movwf	(btemp+8)^0,c
  4516  017806  0EFF               	movlw	255
  4517  017808  6E3B               	movwf	(btemp+9)^0,c
  4518  01780A  0EFF               	movlw	255
  4519  01780C  6E3C               	movwf	(btemp+10)^0,c
  4520  01780E  0E7F               	movlw	127
  4521  017810  6E3D               	movwf	(btemp+11)^0,c
  4522                           
  4523                           ;stkvar	_u @ sp[(-4)+0]
  4524  017812  0EFC               	movlw	-4
  4525  017814  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4526  01781A  0EFD               	movlw	-3
  4527  01781C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4528  017822  0EFE               	movlw	-2
  4529  017824  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4530  01782A  0EFF               	movlw	-1
  4531  01782C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4532                           
  4533                           ;stkvar	_u @ sp[(-4)+0]
  4534  017832  0EFC               	movlw	-4
  4535  017834  006F FF8C  F032    	movff	plusw1,btemp
  4536  01783A  0EFD               	movlw	-3
  4537  01783C  006F FF8C  F033    	movff	plusw1,btemp+1
  4538  017842  0EFE               	movlw	-2
  4539  017844  006F FF8C  F034    	movff	plusw1,btemp+2
  4540  01784A  0EFF               	movlw	-1
  4541  01784C  006F FF8C  F035    	movff	plusw1,btemp+3
  4542                           
  4543                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4544  017852  0EFA               	movlw	250
  4545  017854  26E1               	addwf	fsr1l,f,c
  4546  017856  0EFF               	movlw	255
  4547  017858  22E2               	addwfc	fsr1h,f,c
  4548  01785A  0012               	return		;funcret
  4549  01785C                     __end_of_nanf:
  4550                           	opt callstack 0
  4551                           
  4552 ;; *************** function _get_raw_result *****************
  4553 ;; Defined at:
  4554 ;;		line 72 in file "daq.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  index           1  [STACK] const enum E16136
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  2  [STACK] unsigned short 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/39
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4572 ;;Total ram usage:        0 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    6
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;;		_conv_raw_result
  4580 ;; This function uses a reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text17
  4584  018444                     __ptext17:
  4585                           	opt callstack 0
  4586  018444                     _get_raw_result:
  4587                           	opt callstack 24
  4588                           
  4589                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4590                           ;stkvar	_index @ sp[(0)+-1]
  4591                           
  4592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4593                           ;incstack = 0
  4594  018444  0EFF               	movlw	-1
  4595  018446  50E3               	movf	plusw1,w,c
  4596  018448  0D02               	mullw	2
  4597  01844A  50F3               	movf	243,w,c
  4598  01844C  0FC7               	addlw	low _R
  4599  01844E  6ED9               	movwf	fsr2l,c
  4600  018450  6ADA               	clrf	fsr2h,c
  4601  018452  006F FF78  F032    	movff	postinc2,btemp
  4602  018458  006F FF74  F033    	movff	postdec2,btemp+1
  4603                           
  4604                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4605  01845E  52E5               	movf	postdec1,f,c
  4606  018460  0012               	return		;funcret
  4607  018462                     __end_of_get_raw_result:
  4608                           	opt callstack 0
  4609                           
  4610 ;; *************** function ___xxtofl *****************
  4611 ;; Defined at:
  4612 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  sign            1  [STACK] unsigned char 
  4615 ;;  val             4  [STACK] long 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  arg             4  [STACK] unsigned long 
  4618 ;;  exp             1  [STACK] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  4  [STACK] unsigned char 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/39
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    6
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_conv_raw_result
  4639 ;; This function uses a reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text18
  4643  01575E                     __ptext18:
  4644                           	opt callstack 0
  4645  01575E                     ___xxtofl:
  4646                           	opt callstack 0
  4647                           
  4648                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4649  01575E  0E05               	movlw	5
  4650  015760  26E1               	addwf	fsr1l,f,c
  4651  015762  0E00               	movlw	0
  4652  015764  22E2               	addwfc	fsr1h,f,c
  4653                           
  4654                           ;stkvar	_sign @ sp[(-5)+-1]
  4655                           
  4656                           ;incstack = 0
  4657  015766  0EFA               	movlw	-6
  4658  015768  50E3               	movf	plusw1,w,c
  4659  01576A  B4D8               	btfsc	status,2,c
  4660  01576C  D01D               	goto	l11288
  4661                           
  4662                           ;stkvar	_val @ sp[(-5)+-5]
  4663  01576E  0EF9               	movlw	-7
  4664  015770  AEE3               	btfss	plusw1,7,c
  4665  015772  D01A               	goto	l11288
  4666                           
  4667                           ;stkvar	_val @ sp[(-5)+-5]
  4668  015774  0EF6               	movlw	-10
  4669  015776  006F FF8C  F03A    	movff	plusw1,btemp+8
  4670  01577C  0EF7               	movlw	-9
  4671  01577E  006F FF8C  F03B    	movff	plusw1,btemp+9
  4672  015784  0EF8               	movlw	-8
  4673  015786  006F FF8C  F03C    	movff	plusw1,btemp+10
  4674  01578C  0EF9               	movlw	-7
  4675  01578E  006F FF8C  F03D    	movff	plusw1,btemp+11
  4676  015794  1E3A               	comf	(btemp+8)^0,f,c
  4677  015796  1E3B               	comf	(btemp+9)^0,f,c
  4678  015798  1E3C               	comf	(btemp+10)^0,f,c
  4679  01579A  1E3D               	comf	(btemp+11)^0,f,c
  4680  01579C  2A3A               	incf	(btemp+8)^0,f,c
  4681  01579E  0E00               	movlw	0
  4682  0157A0  223B               	addwfc	(btemp+9)^0,f,c
  4683  0157A2  223C               	addwfc	(btemp+10)^0,f,c
  4684  0157A4  223D               	addwfc	(btemp+11)^0,f,c
  4685  0157A6  D010               	goto	L4
  4686  0157A8                     l11288:
  4687                           
  4688                           ;stkvar	_val @ sp[(-5)+-5]
  4689  0157A8  0EF6               	movlw	-10
  4690  0157AA  006F FF8C  F03A    	movff	plusw1,btemp+8
  4691  0157B0  0EF7               	movlw	-9
  4692  0157B2  006F FF8C  F03B    	movff	plusw1,btemp+9
  4693  0157B8  0EF8               	movlw	-8
  4694  0157BA  006F FF8C  F03C    	movff	plusw1,btemp+10
  4695  0157C0  0EF9               	movlw	-7
  4696  0157C2  006F FF8C  F03D    	movff	plusw1,btemp+11
  4697  0157C8                     L4:
  4698                           
  4699                           ;stkvar	_arg @ sp[(-5)+0]
  4700  0157C8  0EFB               	movlw	-5
  4701  0157CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4702  0157D0  0EFC               	movlw	-4
  4703  0157D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4704  0157D8  0EFD               	movlw	-3
  4705  0157DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4706  0157E0  0EFE               	movlw	-2
  4707  0157E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4708                           
  4709                           ;stkvar	_val @ sp[(-5)+-5]
  4710  0157E8  0EF6               	movlw	-10
  4711  0157EA  50E3               	movf	plusw1,w,c
  4712  0157EC  E113               	bnz	l11296
  4713  0157EE  0EF7               	movlw	-9
  4714  0157F0  50E3               	movf	plusw1,w,c
  4715  0157F2  E110               	bnz	l11296
  4716  0157F4  0EF8               	movlw	-8
  4717  0157F6  50E3               	movf	plusw1,w,c
  4718  0157F8  E10D               	bnz	l11296
  4719  0157FA  0EF9               	movlw	-7
  4720  0157FC  50E3               	movf	plusw1,w,c
  4721  0157FE  A4D8               	btfss	status,2,c
  4722  015800  D009               	goto	l11296
  4723  015802  0E00               	movlw	0
  4724  015804  6E32               	movwf	btemp^0,c
  4725  015806  0E00               	movlw	0
  4726  015808  6E33               	movwf	(btemp+1)^0,c
  4727  01580A  0E00               	movlw	0
  4728  01580C  6E34               	movwf	(btemp+2)^0,c
  4729  01580E  0E00               	movlw	0
  4730  015810  6E35               	movwf	(btemp+3)^0,c
  4731  015812  D0A2               	goto	l2707
  4732  015814                     l11296:
  4733  015814  0E96               	movlw	150
  4734  015816  6E3D               	movwf	(btemp+11)^0,c
  4735                           
  4736                           ;stkvar	_exp @ sp[(-5)+4]
  4737  015818  0EFF               	movlw	-1
  4738  01581A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4739  015820  D00B               	goto	l11300
  4740  015822                     l11298:
  4741                           
  4742                           ;stkvar	_exp @ sp[(-5)+4]
  4743  015822  0EFF               	movlw	-1
  4744  015824  2AE3               	incf	plusw1,f,c
  4745                           
  4746                           ;stkvar	_arg @ sp[(-5)+0]
  4747  015826  90D8               	bcf	status,0,c
  4748  015828  0EFE               	movlw	-2
  4749  01582A  32E3               	rrcf	plusw1,f,c
  4750  01582C  0EFD               	movlw	-3
  4751  01582E  32E3               	rrcf	plusw1,f,c
  4752  015830  0EFC               	movlw	-4
  4753  015832  32E3               	rrcf	plusw1,f,c
  4754  015834  0EFB               	movlw	-5
  4755  015836  32E3               	rrcf	plusw1,f,c
  4756  015838                     l11300:
  4757                           
  4758                           ;stkvar	_arg @ sp[(-5)+0]
  4759  015838  50E1               	movf	fsr1l,w,c
  4760  01583A  0FFB               	addlw	-5
  4761  01583C  6ED9               	movwf	fsr2l,c
  4762  01583E  50E2               	movf	fsr1h,w,c
  4763  015840  6EDA               	movwf	fsr2h,c
  4764  015842  0EFF               	movlw	255
  4765  015844  22DA               	addwfc	fsr2h,f,c
  4766  015846  52DE               	movf	postinc2,f,c
  4767  015848  52DE               	movf	postinc2,f,c
  4768  01584A  52DE               	movf	postinc2,f,c
  4769  01584C  0EFE               	movlw	254
  4770  01584E  14DD               	andwf	postdec2,w,c
  4771  015850  B4D8               	btfsc	status,2,c
  4772  015852  D018               	goto	l11308
  4773  015854  D7E6               	goto	l11298
  4774  015856                     l11302:
  4775                           
  4776                           ;stkvar	_exp @ sp[(-5)+4]
  4777  015856  0EFF               	movlw	-1
  4778  015858  2AE3               	incf	plusw1,f,c
  4779                           
  4780                           ;stkvar	_arg @ sp[(-5)+0]
  4781  01585A  50E1               	movf	fsr1l,w,c
  4782  01585C  0FFB               	addlw	-5
  4783  01585E  6ED9               	movwf	fsr2l,c
  4784  015860  50E2               	movf	fsr1h,w,c
  4785  015862  6EDA               	movwf	fsr2h,c
  4786  015864  0EFF               	movlw	255
  4787  015866  22DA               	addwfc	fsr2h,f,c
  4788  015868  2ADE               	incf	postinc2,f,c
  4789  01586A  0E00               	movlw	0
  4790  01586C  22DE               	addwfc	postinc2,f,c
  4791  01586E  22DE               	addwfc	postinc2,f,c
  4792  015870  22DE               	addwfc	postinc2,f,c
  4793                           
  4794                           ;stkvar	_arg @ sp[(-5)+0]
  4795  015872  90D8               	bcf	status,0,c
  4796  015874  0EFE               	movlw	-2
  4797  015876  32E3               	rrcf	plusw1,f,c
  4798  015878  0EFD               	movlw	-3
  4799  01587A  32E3               	rrcf	plusw1,f,c
  4800  01587C  0EFC               	movlw	-4
  4801  01587E  32E3               	rrcf	plusw1,f,c
  4802  015880  0EFB               	movlw	-5
  4803  015882  32E3               	rrcf	plusw1,f,c
  4804  015884                     l11308:
  4805                           
  4806                           ;stkvar	_arg @ sp[(-5)+0]
  4807  015884  50E1               	movf	fsr1l,w,c
  4808  015886  0FFB               	addlw	-5
  4809  015888  6ED9               	movwf	fsr2l,c
  4810  01588A  50E2               	movf	fsr1h,w,c
  4811  01588C  6EDA               	movwf	fsr2h,c
  4812  01588E  0EFF               	movlw	255
  4813  015890  22DA               	addwfc	fsr2h,f,c
  4814  015892  52DE               	movf	postinc2,f,c
  4815  015894  52DE               	movf	postinc2,f,c
  4816  015896  52DE               	movf	postinc2,f,c
  4817  015898  0EFF               	movlw	255
  4818  01589A  14DD               	andwf	postdec2,w,c
  4819  01589C  B4D8               	btfsc	status,2,c
  4820  01589E  D00C               	goto	l11312
  4821  0158A0  D7DA               	goto	l11302
  4822  0158A2                     l11310:
  4823                           
  4824                           ;stkvar	_exp @ sp[(-5)+4]
  4825  0158A2  0EFF               	movlw	-1
  4826  0158A4  06E3               	decf	plusw1,f,c
  4827                           
  4828                           ;stkvar	_arg @ sp[(-5)+0]
  4829  0158A6  90D8               	bcf	status,0,c
  4830  0158A8  0EFB               	movlw	-5
  4831  0158AA  36E3               	rlcf	plusw1,f,c
  4832  0158AC  0EFC               	movlw	-4
  4833  0158AE  36E3               	rlcf	plusw1,f,c
  4834  0158B0  0EFD               	movlw	-3
  4835  0158B2  36E3               	rlcf	plusw1,f,c
  4836  0158B4  0EFE               	movlw	-2
  4837  0158B6  36E3               	rlcf	plusw1,f,c
  4838  0158B8                     l11312:
  4839                           
  4840                           ;stkvar	_arg @ sp[(-5)+0]
  4841  0158B8  0EFD               	movlw	-3
  4842  0158BA  BEE3               	btfsc	plusw1,7,c
  4843  0158BC  D007               	goto	u12260
  4844                           
  4845                           ;stkvar	_exp @ sp[(-5)+4]
  4846  0158BE  0EFF               	movlw	-1
  4847  0158C0  006F FF8C  F032    	movff	plusw1,btemp
  4848  0158C6  0E02               	movlw	2
  4849  0158C8  6032               	cpfslt	btemp^0,c
  4850  0158CA  D7EB               	goto	l11310
  4851  0158CC                     u12260:
  4852                           
  4853                           ;stkvar	_exp @ sp[(-5)+4]
  4854  0158CC  0EFF               	movlw	-1
  4855  0158CE  B0E3               	btfsc	plusw1,0,c
  4856  0158D0  D002               	goto	l11320
  4857                           
  4858                           ;stkvar	_arg @ sp[(-5)+0]
  4859  0158D2  0EFD               	movlw	-3
  4860  0158D4  9EE3               	bcf	plusw1,7,c
  4861  0158D6                     l11320:
  4862                           
  4863                           ;stkvar	_exp @ sp[(-5)+4]
  4864  0158D6  50E1               	movf	fsr1l,w,c
  4865  0158D8  0FFF               	addlw	-1
  4866  0158DA  6ED9               	movwf	fsr2l,c
  4867  0158DC  50E2               	movf	fsr1h,w,c
  4868  0158DE  6EDA               	movwf	fsr2h,c
  4869  0158E0  0EFF               	movlw	255
  4870  0158E2  22DA               	addwfc	fsr2h,f,c
  4871  0158E4  90D8               	bcf	status,0,c
  4872  0158E6  32DF               	rrcf	indf2,f,c
  4873                           
  4874                           ;stkvar	_exp @ sp[(-5)+4]
  4875  0158E8  0EFF               	movlw	-1
  4876  0158EA  006F FF8C  F03D    	movff	plusw1,btemp+11
  4877  0158F0  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4878  0158F6  6A37               	clrf	(btemp+5)^0,c
  4879  0158F8  6A38               	clrf	(btemp+6)^0,c
  4880  0158FA  6A39               	clrf	(btemp+7)^0,c
  4881  0158FC  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4882  015902  6A38               	clrf	(btemp+6)^0,c
  4883  015904  6A37               	clrf	(btemp+5)^0,c
  4884  015906  6A36               	clrf	(btemp+4)^0,c
  4885                           
  4886                           ;stkvar	_arg @ sp[(-5)+0]
  4887  015908  50E1               	movf	fsr1l,w,c
  4888  01590A  0FFB               	addlw	-5
  4889  01590C  6ED9               	movwf	fsr2l,c
  4890  01590E  50E2               	movf	fsr1h,w,c
  4891  015910  6EDA               	movwf	fsr2h,c
  4892  015912  0EFF               	movlw	255
  4893  015914  22DA               	addwfc	fsr2h,f,c
  4894  015916  5036               	movf	(btemp+4)^0,w,c
  4895  015918  12DE               	iorwf	postinc2,f,c
  4896  01591A  5037               	movf	(btemp+5)^0,w,c
  4897  01591C  12DE               	iorwf	postinc2,f,c
  4898  01591E  5038               	movf	(btemp+6)^0,w,c
  4899  015920  12DE               	iorwf	postinc2,f,c
  4900  015922  5039               	movf	(btemp+7)^0,w,c
  4901  015924  12DE               	iorwf	postinc2,f,c
  4902                           
  4903                           ;stkvar	_sign @ sp[(-5)+-1]
  4904  015926  0EFA               	movlw	-6
  4905  015928  50E3               	movf	plusw1,w,c
  4906  01592A  B4D8               	btfsc	status,2,c
  4907  01592C  D005               	goto	l11330
  4908                           
  4909                           ;stkvar	_val @ sp[(-5)+-5]
  4910  01592E  0EF9               	movlw	-7
  4911  015930  AEE3               	btfss	plusw1,7,c
  4912  015932  D002               	goto	l11330
  4913                           
  4914                           ;stkvar	_arg @ sp[(-5)+0]
  4915  015934  0EFE               	movlw	-2
  4916  015936  8EE3               	bsf	plusw1,7,c
  4917  015938                     l11330:
  4918                           
  4919                           ;stkvar	_arg @ sp[(-5)+0]
  4920  015938  0EFB               	movlw	-5
  4921  01593A  006F FF8C  F032    	movff	plusw1,btemp
  4922  015940  0EFC               	movlw	-4
  4923  015942  006F FF8C  F033    	movff	plusw1,btemp+1
  4924  015948  0EFD               	movlw	-3
  4925  01594A  006F FF8C  F034    	movff	plusw1,btemp+2
  4926  015950  0EFE               	movlw	-2
  4927  015952  006F FF8C  F035    	movff	plusw1,btemp+3
  4928  015958                     l2707:
  4929                           
  4930                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4931  015958  0EF6               	movlw	246
  4932  01595A  26E1               	addwf	fsr1l,f,c
  4933  01595C  0EFF               	movlw	255
  4934  01595E  22E2               	addwfc	fsr1h,f,c
  4935  015960  0012               	return		;funcret
  4936  015962                     __end_of___xxtofl:
  4937                           	opt callstack 0
  4938                           
  4939 ;; *************** function _clear_adc_scan *****************
  4940 ;; Defined at:
  4941 ;;		line 64 in file "daq.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1  [STACK] void 
  4948 ;; Registers used:
  4949 ;;		None
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/39
  4952 ;;		On exit  : 3F/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    6
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;; This function uses a reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text19
  4970  018672                     __ptext19:
  4971                           	opt callstack 0
  4972  018672                     _clear_adc_scan:
  4973                           	opt callstack 24
  4974                           
  4975                           ;daq.c: 66:  R.done = 0;
  4976                           
  4977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4978                           ;incstack = 0
  4979  018672  0100               	movlb	0	; () banked
  4980  018674  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4981                           
  4982                           ; BSR set to: 0
  4983                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4984  018676  0012               	return		;funcret
  4985  018678                     __end_of_clear_adc_scan:
  4986                           	opt callstack 0
  4987                           
  4988 ;; *************** function _check_help *****************
  4989 ;; Defined at:
  4990 ;;		line 40 in file "mconfig.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  flipper         1  [STACK] const _Bool 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  estatus         1  [STACK] _Bool 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1  [STACK] _Bool 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4999 ;; Tracked objects:
  5000 ;;		On entry : 3F/1
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5008 ;;Total ram usage:        0 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:   18
  5011 ;; This function calls:
  5012 ;;		_StartTimer
  5013 ;;		_TimerDone
  5014 ;;		_display_help
  5015 ;;		_display_info
  5016 ;;		_get_vterm_ptr
  5017 ;;		_help_button
  5018 ;;		_mode_lamp_bright
  5019 ;;		_mode_lamp_dim
  5020 ;;		_set_display_info
  5021 ;;		_set_temp_display_help
  5022 ;;		_set_vterm
  5023 ;;		_sprintf
  5024 ;;		_update_lcd
  5025 ;;		_vterm_dump
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text20
  5032  015536                     __ptext20:
  5033                           	opt callstack 0
  5034  015536                     _check_help:
  5035                           	opt callstack 0
  5036                           
  5037                           ; BSR set to: 0
  5038                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5039  015536  52E6               	movf	postinc1,f,c
  5040                           
  5041                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5042                           ;stkvar	_estatus @ sp[(-1)+0]
  5043                           
  5044                           ;incstack = 0
  5045  015538  0EFF               	movlw	-1
  5046  01553A  6AE3               	clrf	plusw1,c
  5047                           
  5048                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5049  01553C  ECDB  F0BE         	call	_help_button	;wreg free
  5050  015540  5032               	movf	btemp^0,w,c
  5051  015542  B4D8               	btfsc	status,2,c
  5052  015544  D0D3               	goto	l12060
  5053  015546  EC29  F0C3         	call	_display_info	;wreg free
  5054  01554A  0432               	decf	btemp^0,w,c
  5055  01554C  B4D8               	btfsc	status,2,c
  5056  01554E  D0CE               	goto	l12060
  5057                           
  5058                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5059  015550  0EDC               	movlw	220
  5060  015552  6EE6               	movwf	postinc1,c
  5061  015554  0E05               	movlw	5
  5062  015556  6EE6               	movwf	postinc1,c
  5063  015558  0E0B               	movlw	11
  5064  01555A  6EE6               	movwf	postinc1,c
  5065  01555C  ECBD  F0BE         	call	_StartTimer	;wreg free
  5066                           
  5067                           ;mconfig.c: 48:   if (V.debug)
  5068  015560  0101               	movlb	1	; () banked
  5069  015562  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5070                           
  5071                           ; BSR set to: 1
  5072                           ;mconfig.c: 49:    vterm_dump();
  5073  015564  ECF5  F0B1         	call	_vterm_dump	;wreg free
  5074                           
  5075                           ;mconfig.c: 51:   set_vterm(1);
  5076  015568  0E01               	movlw	1
  5077  01556A  6EE6               	movwf	postinc1,c
  5078  01556C  EC6C  F0C2         	call	_set_vterm	;wreg free
  5079                           
  5080                           ; BSR set to: 5
  5081                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5082  015570  EC29  F0C3         	call	_display_info	;wreg free
  5083  015574  5032               	movf	btemp^0,w,c
  5084  015576  6EE6               	movwf	postinc1,c
  5085  015578  ECE9  F0C2         	call	_set_temp_display_help	;wreg free
  5086                           
  5087                           ; BSR set to: 1
  5088                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5089  01557C  0E01               	movlw	1
  5090  01557E  6EE6               	movwf	postinc1,c
  5091  015580  EC31  F0C2         	call	_set_display_info	;wreg free
  5092                           
  5093                           ;mconfig.c: 54:   if (flipper) {
  5094                           ;stkvar	_flipper @ sp[(-1)+-1]
  5095  015584  0EFE               	movlw	-2
  5096  015586  50E3               	movf	plusw1,w,c
  5097  015588  B4D8               	btfsc	status,2,c
  5098  01558A  D019               	goto	l12046
  5099                           
  5100                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5101  01558C  0EC1               	movlw	low STR_15
  5102  01558E  6EE6               	movwf	postinc1,c
  5103  015590  0EFF               	movlw	high STR_15
  5104  015592  6EE6               	movwf	postinc1,c
  5105  015594  0E1A               	movlw	low STR_17
  5106  015596  6EE6               	movwf	postinc1,c
  5107  015598  0EFF               	movlw	high STR_17
  5108  01559A  6EE6               	movwf	postinc1,c
  5109  01559C  0E01               	movlw	1
  5110  01559E  6EE6               	movwf	postinc1,c
  5111  0155A0  0E00               	movlw	0
  5112  0155A2  6EE6               	movwf	postinc1,c
  5113  0155A4  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5114  0155A8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5115  0155AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5116  0155B4  0E06               	movlw	6
  5117  0155B6  6EE6               	movwf	postinc1,c
  5118  0155B8  ECBB  F0B4         	call	_sprintf	;wreg free
  5119                           
  5120                           ;mconfig.c: 56:   } else {
  5121  0155BC  D018               	goto	l1567
  5122  0155BE                     l12046:
  5123                           
  5124                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5125  0155BE  0ED7               	movlw	low STR_16
  5126  0155C0  6EE6               	movwf	postinc1,c
  5127  0155C2  0EFF               	movlw	high STR_16
  5128  0155C4  6EE6               	movwf	postinc1,c
  5129  0155C6  0E1A               	movlw	low STR_17
  5130  0155C8  6EE6               	movwf	postinc1,c
  5131  0155CA  0EFF               	movlw	high STR_17
  5132  0155CC  6EE6               	movwf	postinc1,c
  5133  0155CE  0E01               	movlw	1
  5134  0155D0  6EE6               	movwf	postinc1,c
  5135  0155D2  0E00               	movlw	0
  5136  0155D4  6EE6               	movwf	postinc1,c
  5137  0155D6  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5138  0155DA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5139  0155E0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5140  0155E6  0E06               	movlw	6
  5141  0155E8  6EE6               	movwf	postinc1,c
  5142  0155EA  ECBB  F0B4         	call	_sprintf	;wreg free
  5143  0155EE                     l1567:
  5144                           
  5145                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5146  0155EE  0101               	movlb	1	; () banked
  5147  0155F0  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5148  0155F2  32E8               	rrcf	wreg,f,c
  5149  0155F4  32E8               	rrcf	wreg,f,c
  5150  0155F6  0B03               	andlw	3
  5151  0155F8  0D24               	mullw	36
  5152  0155FA  0E12               	movlw	18
  5153  0155FC  26F3               	addwf	243,f,c
  5154  0155FE  0E00               	movlw	0
  5155  015600  22F4               	addwfc	244,f,c
  5156  015602  0E5F               	movlw	low _T
  5157  015604  6E3C               	movwf	(btemp+10)^0,c
  5158  015606  0EFE               	movlw	high _T
  5159  015608  6E3D               	movwf	(btemp+11)^0,c
  5160  01560A  50F3               	movf	243,w,c
  5161  01560C  263C               	addwf	(btemp+10)^0,f,c
  5162  01560E  50F4               	movf	244,w,c
  5163  015610  223D               	addwfc	(btemp+11)^0,f,c
  5164  015612  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5165  015618  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5166  01561E  0ECD               	movlw	low STR_19
  5167  015620  6EE6               	movwf	postinc1,c
  5168  015622  0EFF               	movlw	high STR_19
  5169  015624  6EE6               	movwf	postinc1,c
  5170  015626  0E01               	movlw	1
  5171  015628  6EE6               	movwf	postinc1,c
  5172  01562A  0E01               	movlw	1
  5173  01562C  6EE6               	movwf	postinc1,c
  5174  01562E  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5175  015632  0060  F0CB  FFE6   	movff	btemp,postinc1
  5176  015638  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5177  01563E  0E06               	movlw	6
  5178  015640  6EE6               	movwf	postinc1,c
  5179  015642  ECBB  F0B4         	call	_sprintf	;wreg free
  5180                           
  5181                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5182  015646  0101               	movlb	1	; () banked
  5183  015648  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5184  01564A  32E8               	rrcf	wreg,f,c
  5185  01564C  32E8               	rrcf	wreg,f,c
  5186  01564E  0B03               	andlw	3
  5187  015650  0D24               	mullw	36
  5188  015652  0E5F               	movlw	low _T
  5189  015654  6E3C               	movwf	(btemp+10)^0,c
  5190  015656  0EFE               	movlw	high _T
  5191  015658  6E3D               	movwf	(btemp+11)^0,c
  5192  01565A  50F3               	movf	243,w,c
  5193  01565C  263C               	addwf	(btemp+10)^0,f,c
  5194  01565E  50F4               	movf	244,w,c
  5195  015660  223D               	addwfc	(btemp+11)^0,f,c
  5196  015662  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5197  015668  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5198  01566E  0ECD               	movlw	low STR_19
  5199  015670  6EE6               	movwf	postinc1,c
  5200  015672  0EFF               	movlw	high STR_19
  5201  015674  6EE6               	movwf	postinc1,c
  5202  015676  0E01               	movlw	1
  5203  015678  6EE6               	movwf	postinc1,c
  5204  01567A  0E02               	movlw	2
  5205  01567C  6EE6               	movwf	postinc1,c
  5206  01567E  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5207  015682  0060  F0CB  FFE6   	movff	btemp,postinc1
  5208  015688  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5209  01568E  0E06               	movlw	6
  5210  015690  6EE6               	movwf	postinc1,c
  5211  015692  ECBB  F0B4         	call	_sprintf	;wreg free
  5212                           
  5213                           ;mconfig.c: 61:   V.help_id++;
  5214  015696  EE20  F19B         	lfsr	2,_V+155	;volatile
  5215  01569A  38DF               	swapf	223,w,c
  5216  01569C  6E3D               	movwf	(btemp+11)^0,c
  5217  01569E  323D               	rrcf	(btemp+11)^0,f,c
  5218  0156A0  303D               	rrcf	(btemp+11)^0,w,c
  5219  0156A2  0B03               	andlw	3
  5220  0156A4  6E3D               	movwf	(btemp+11)^0,c
  5221  0156A6  2A3D               	incf	(btemp+11)^0,f,c
  5222  0156A8  3A3D               	swapf	(btemp+11)^0,f,c
  5223  0156AA  363D               	rlcf	(btemp+11)^0,f,c
  5224  0156AC  363D               	rlcf	(btemp+11)^0,f,c
  5225  0156AE  50DF               	movf	223,w,c
  5226  0156B0  183D               	xorwf	(btemp+11)^0,w,c
  5227  0156B2  0B3F               	andlw	-193
  5228  0156B4  183D               	xorwf	(btemp+11)^0,w,c
  5229  0156B6  6EDF               	movwf	223,c
  5230                           
  5231                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  5232  0156B8  0EB8               	movlw	184
  5233  0156BA  6EE6               	movwf	postinc1,c
  5234  0156BC  0E0B               	movlw	11
  5235  0156BE  6EE6               	movwf	postinc1,c
  5236  0156C0  0E09               	movlw	9
  5237  0156C2  6EE6               	movwf	postinc1,c
  5238  0156C4  ECBD  F0BE         	call	_StartTimer	;wreg free
  5239                           
  5240                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  5241  0156C8  0EB8               	movlw	184
  5242  0156CA  6EE6               	movwf	postinc1,c
  5243  0156CC  0E0B               	movlw	11
  5244  0156CE  6EE6               	movwf	postinc1,c
  5245  0156D0  0E07               	movlw	7
  5246  0156D2  6EE6               	movwf	postinc1,c
  5247  0156D4  ECBD  F0BE         	call	_StartTimer	;wreg free
  5248                           
  5249                           ;mconfig.c: 64:   mode_lamp_bright();
  5250  0156D8  ECF8  F0C2         	call	_mode_lamp_bright	;wreg free
  5251                           
  5252                           ;mconfig.c: 65:   update_lcd(1);
  5253  0156DC  0E01               	movlw	1
  5254  0156DE  6EE6               	movwf	postinc1,c
  5255  0156E0  EC34  F0B4         	call	_update_lcd	;wreg free
  5256                           
  5257                           ;mconfig.c: 66:   estatus=1;
  5258                           ;stkvar	_estatus @ sp[(-1)+0]
  5259  0156E4  0EFF               	movlw	-1
  5260  0156E6  6AE3               	clrf	plusw1,c
  5261  0156E8  2AE3               	incf	plusw1,f,c
  5262                           
  5263                           ;mconfig.c: 67:  } else {
  5264  0156EA  D032               	goto	l12076
  5265  0156EC                     l12060:
  5266                           
  5267                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  5268  0156EC  0E09               	movlw	9
  5269  0156EE  6EE6               	movwf	postinc1,c
  5270  0156F0  ECAB  F0C1         	call	_TimerDone	;wreg free
  5271  0156F4  5032               	movf	btemp^0,w,c
  5272  0156F6  B4D8               	btfsc	status,2,c
  5273  0156F8  D02B               	goto	l12076
  5274                           
  5275                           ;mconfig.c: 69:    set_vterm(0);
  5276  0156FA  0E00               	movlw	0
  5277  0156FC  6EE6               	movwf	postinc1,c
  5278  0156FE  EC6C  F0C2         	call	_set_vterm	;wreg free
  5279                           
  5280                           ; BSR set to: 5
  5281                           ;mconfig.c: 70:    V.help = 0;
  5282  015702  0101               	movlb	1	; () banked
  5283  015704  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5284                           
  5285                           ; BSR set to: 1
  5286                           ;mconfig.c: 71:    set_display_info(display_help());
  5287  015706  EC2D  F0C3         	call	_display_help	;wreg free
  5288  01570A  5032               	movf	btemp^0,w,c
  5289  01570C  6EE6               	movwf	postinc1,c
  5290  01570E  EC31  F0C2         	call	_set_display_info	;wreg free
  5291                           
  5292                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  5293  015712  0060  F657  FFE6   	movff	_V+149,postinc1
  5294  015718  0060  F65B  FFE6   	movff	_V+150,postinc1
  5295  01571E  EC95  F0C2         	call	_mode_lamp_dim	;wreg free
  5296                           
  5297                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  5298  015722  0E0B               	movlw	11
  5299  015724  6EE6               	movwf	postinc1,c
  5300  015726  ECAB  F0C1         	call	_TimerDone	;wreg free
  5301  01572A  5032               	movf	btemp^0,w,c
  5302  01572C  B4D8               	btfsc	status,2,c
  5303  01572E  D010               	goto	l12076
  5304                           
  5305                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5306  015730  0101               	movlb	1	; () banked
  5307  015732  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5308  015734  A4D8               	btfss	status,2,c
  5309  015736  D002               	goto	u12640
  5310  015738  0E01               	movlw	1
  5311  01573A  D001               	goto	u12650
  5312  01573C                     u12640:
  5313  01573C  0E00               	movlw	0
  5314  01573E                     u12650:
  5315  01573E  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5316                           
  5317                           ; BSR set to: 1
  5318                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5319  015740  0EDC               	movlw	220
  5320  015742  6EE6               	movwf	postinc1,c
  5321  015744  0E05               	movlw	5
  5322  015746  6EE6               	movwf	postinc1,c
  5323  015748  0E0B               	movlw	11
  5324  01574A  6EE6               	movwf	postinc1,c
  5325  01574C  ECBD  F0BE         	call	_StartTimer	;wreg free
  5326  015750                     l12076:
  5327                           
  5328                           ;mconfig.c: 79:  return estatus;
  5329                           ;stkvar	_estatus @ sp[(-1)+0]
  5330  015750  0EFF               	movlw	-1
  5331  015752  006F FF8C  F032    	movff	plusw1,btemp
  5332                           
  5333                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5334  015758  52E5               	movf	postdec1,f,c
  5335  01575A  52E5               	movf	postdec1,f,c
  5336  01575C  0012               	return		;funcret
  5337  01575E                     __end_of_check_help:
  5338                           	opt callstack 0
  5339                           
  5340 ;; *************** function _vterm_dump *****************
  5341 ;; Defined at:
  5342 ;;		line 121 in file "mconfig.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1  [STACK] void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5351 ;; Tracked objects:
  5352 ;;		On entry : 3F/1
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:   17
  5363 ;; This function calls:
  5364 ;;		_WaitMs
  5365 ;;		_eaDogM_WriteStringAtPos
  5366 ;;		_get_vterm_ptr
  5367 ;;		_sprintf
  5368 ;;		_wait_lcd_done
  5369 ;; This function is called by:
  5370 ;;		_check_help
  5371 ;; This function uses a reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text21
  5375  0163EA                     __ptext21:
  5376                           	opt callstack 0
  5377  0163EA                     _vterm_dump:
  5378                           	opt callstack 12
  5379                           
  5380                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5381                           
  5382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5383                           ;incstack = 0
  5384  0163EA  0E01               	movlw	1
  5385  0163EC  6EE6               	movwf	postinc1,c
  5386  0163EE  0E00               	movlw	0
  5387  0163F0  6EE6               	movwf	postinc1,c
  5388  0163F2  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5389  0163F6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5390  0163FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5391  016402  0E00               	movlw	0
  5392  016404  6EE6               	movwf	postinc1,c
  5393  016406  0E00               	movlw	0
  5394  016408  6EE6               	movwf	postinc1,c
  5395  01640A  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5396  01640E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5397  016414  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5398  01641A  0E95               	movlw	low STR_21
  5399  01641C  6EE6               	movwf	postinc1,c
  5400  01641E  0EFF               	movlw	high STR_21
  5401  016420  6EE6               	movwf	postinc1,c
  5402  016422  0E01               	movlw	low (_V+1)
  5403  016424  6EE6               	movwf	postinc1,c
  5404  016426  0E01               	movlw	high (_V+1)
  5405  016428  6EE6               	movwf	postinc1,c
  5406  01642A  0E08               	movlw	8
  5407  01642C  6EE6               	movwf	postinc1,c
  5408  01642E  ECBB  F0B4         	call	_sprintf	;wreg free
  5409                           
  5410                           ;mconfig.c: 124:  wait_lcd_done();
  5411  016432  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5415  016436  0E01               	movlw	low (_V+1)
  5416  016438  6EE6               	movwf	postinc1,c
  5417  01643A  0E01               	movlw	high (_V+1)
  5418  01643C  6EE6               	movwf	postinc1,c
  5419  01643E  0E00               	movlw	0
  5420  016440  6EE6               	movwf	postinc1,c
  5421  016442  0E00               	movlw	0
  5422  016444  6EE6               	movwf	postinc1,c
  5423  016446  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5424                           
  5425                           ; BSR set to: 59
  5426                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5427  01644A  0E01               	movlw	1
  5428  01644C  6EE6               	movwf	postinc1,c
  5429  01644E  0E01               	movlw	1
  5430  016450  6EE6               	movwf	postinc1,c
  5431  016452  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5432  016456  0060  F0CB  FFE6   	movff	btemp,postinc1
  5433  01645C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5434  016462  0E00               	movlw	0
  5435  016464  6EE6               	movwf	postinc1,c
  5436  016466  0E01               	movlw	1
  5437  016468  6EE6               	movwf	postinc1,c
  5438  01646A  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5439  01646E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5440  016474  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5441  01647A  0E95               	movlw	low STR_21
  5442  01647C  6EE6               	movwf	postinc1,c
  5443  01647E  0EFF               	movlw	high STR_21
  5444  016480  6EE6               	movwf	postinc1,c
  5445  016482  0E01               	movlw	low (_V+1)
  5446  016484  6EE6               	movwf	postinc1,c
  5447  016486  0E01               	movlw	high (_V+1)
  5448  016488  6EE6               	movwf	postinc1,c
  5449  01648A  0E08               	movlw	8
  5450  01648C  6EE6               	movwf	postinc1,c
  5451  01648E  ECBB  F0B4         	call	_sprintf	;wreg free
  5452                           
  5453                           ;mconfig.c: 127:  wait_lcd_done();
  5454  016492  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5455                           
  5456                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5457  016496  0E01               	movlw	low (_V+1)
  5458  016498  6EE6               	movwf	postinc1,c
  5459  01649A  0E01               	movlw	high (_V+1)
  5460  01649C  6EE6               	movwf	postinc1,c
  5461  01649E  0E00               	movlw	0
  5462  0164A0  6EE6               	movwf	postinc1,c
  5463  0164A2  0E01               	movlw	1
  5464  0164A4  6EE6               	movwf	postinc1,c
  5465  0164A6  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5466                           
  5467                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5468  0164AA  0E01               	movlw	1
  5469  0164AC  6EE6               	movwf	postinc1,c
  5470  0164AE  0E02               	movlw	2
  5471  0164B0  6EE6               	movwf	postinc1,c
  5472  0164B2  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5473  0164B6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5474  0164BC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5475  0164C2  0E00               	movlw	0
  5476  0164C4  6EE6               	movwf	postinc1,c
  5477  0164C6  0E02               	movlw	2
  5478  0164C8  6EE6               	movwf	postinc1,c
  5479  0164CA  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5480  0164CE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5481  0164D4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5482  0164DA  0E95               	movlw	low STR_21
  5483  0164DC  6EE6               	movwf	postinc1,c
  5484  0164DE  0EFF               	movlw	high STR_21
  5485  0164E0  6EE6               	movwf	postinc1,c
  5486  0164E2  0E01               	movlw	low (_V+1)
  5487  0164E4  6EE6               	movwf	postinc1,c
  5488  0164E6  0E01               	movlw	high (_V+1)
  5489  0164E8  6EE6               	movwf	postinc1,c
  5490  0164EA  0E08               	movlw	8
  5491  0164EC  6EE6               	movwf	postinc1,c
  5492  0164EE  ECBB  F0B4         	call	_sprintf	;wreg free
  5493                           
  5494                           ;mconfig.c: 130:  wait_lcd_done();
  5495  0164F2  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5499  0164F6  0E01               	movlw	low (_V+1)
  5500  0164F8  6EE6               	movwf	postinc1,c
  5501  0164FA  0E01               	movlw	high (_V+1)
  5502  0164FC  6EE6               	movwf	postinc1,c
  5503  0164FE  0E00               	movlw	0
  5504  016500  6EE6               	movwf	postinc1,c
  5505  016502  0E02               	movlw	2
  5506  016504  6EE6               	movwf	postinc1,c
  5507  016506  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5508                           
  5509                           ; BSR set to: 59
  5510                           ;mconfig.c: 132:  WaitMs(3000);
  5511  01650A  0EB8               	movlw	184
  5512  01650C  6EE6               	movwf	postinc1,c
  5513  01650E  0E0B               	movlw	11
  5514  016510  6EE6               	movwf	postinc1,c
  5515  016512  ECF7  F0BE         	call	_WaitMs	;wreg free
  5516                           
  5517                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5518  016516  0012               	return		;funcret
  5519  016518                     __end_of_vterm_dump:
  5520                           	opt callstack 0
  5521                           
  5522 ;; *************** function _sprintf *****************
  5523 ;; Defined at:
  5524 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  s               2  [STACK] PTR unsigned char 
  5527 ;;		 -> D.lcd(216), D(218), V(187), 
  5528 ;;  fmt             2  [STACK] PTR const unsigned char 
  5529 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5530 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5531 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5532 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5533 ;;		 -> STR_11(17), STR_10(14), STR_9(14), STR_8(17), 
  5534 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5535 ;;		 -> STR_1(17), 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  f               6  [STACK] struct _IO_FILE
  5538 ;;  ap              2  [STACK] PTR void [1]
  5539 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5540 ;;  ret             2    0        int 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  2  [STACK] int 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/5
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:   14
  5557 ;; This function calls:
  5558 ;;		_vfprintf
  5559 ;; This function is called by:
  5560 ;;		_main
  5561 ;;		_check_help
  5562 ;;		_vterm_dump
  5563 ;; This function uses a reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text22
  5567  016976                     __ptext22:
  5568                           	opt callstack 0
  5569  016976                     _sprintf:
  5570                           	opt callstack 0
  5571                           
  5572                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5573  016976  0E08               	movlw	8
  5574  016978  26E1               	addwf	fsr1l,f,c
  5575  01697A  0E00               	movlw	0
  5576  01697C  22E2               	addwfc	fsr1h,f,c
  5577                           
  5578                           ;incstack = 0
  5579  01697E  0EFE               	movlw	254
  5580  016980  6E3C               	movwf	(btemp+10)^0,c
  5581  016982  0EFF               	movlw	255
  5582  016984  6E3D               	movwf	(btemp+11)^0,c
  5583                           
  5584                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5585  016986  0EF5               	movlw	245
  5586  016988  24E1               	addwf	fsr1l,w,c
  5587  01698A  6E3A               	movwf	(btemp+8)^0,c
  5588  01698C  0EFF               	movlw	255
  5589  01698E  20E2               	addwfc	fsr1h,w,c
  5590  016990  6E3B               	movwf	(btemp+9)^0,c
  5591  016992  503C               	movf	(btemp+10)^0,w,c
  5592  016994  263A               	addwf	(btemp+8)^0,f,c
  5593  016996  503D               	movf	(btemp+11)^0,w,c
  5594  016998  223B               	addwfc	(btemp+9)^0,f,c
  5595                           
  5596                           ;stkvar	_ap @ sp[(-8)+6]
  5597  01699A  0EFF               	movlw	-1
  5598  01699C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5599  0169A2  0EFE               	movlw	-2
  5600  0169A4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5601                           
  5602                           ;stkvar	_s @ sp[(-8)+-3]
  5603  0169AA  0EF5               	movlw	-11
  5604  0169AC  006F FF8C  F03C    	movff	plusw1,btemp+10
  5605  0169B2  0EF6               	movlw	-10
  5606  0169B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  5607                           
  5608                           ;stkvar	_f @ sp[(-8)+0]
  5609  0169BA  0EF9               	movlw	-7
  5610  0169BC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5611  0169C2  0EF8               	movlw	-8
  5612  0169C4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5613                           
  5614                           ;stkvar	_f @ sp[(-8)+0]
  5615  0169CA  0EFA               	movlw	250
  5616  0169CC  24E1               	addwf	fsr1l,w,c
  5617  0169CE  6ED9               	movwf	fsr2l,c
  5618  0169D0  0EFF               	movlw	255
  5619  0169D2  20E2               	addwfc	fsr1h,w,c
  5620  0169D4  6EDA               	movwf	fsr2h,c
  5621  0169D6  0E00               	movlw	0
  5622  0169D8  6EDE               	movwf	postinc2,c
  5623  0169DA  0E00               	movlw	0
  5624  0169DC  6EDD               	movwf	postdec2,c
  5625                           
  5626                           ;stkvar	_f @ sp[(-8)+0]
  5627  0169DE  0EFC               	movlw	252
  5628  0169E0  24E1               	addwf	fsr1l,w,c
  5629  0169E2  6ED9               	movwf	fsr2l,c
  5630  0169E4  0EFF               	movlw	255
  5631  0169E6  20E2               	addwfc	fsr1h,w,c
  5632  0169E8  6EDA               	movwf	fsr2h,c
  5633  0169EA  0E00               	movlw	0
  5634  0169EC  6EDE               	movwf	postinc2,c
  5635  0169EE  0E00               	movlw	0
  5636  0169F0  6EDD               	movwf	postdec2,c
  5637                           
  5638                           ;stkvar	_ap @ sp[(-8)+6]
  5639  0169F2  0EFE               	movlw	254
  5640  0169F4  24E1               	addwf	fsr1l,w,c
  5641  0169F6  6E32               	movwf	btemp^0,c
  5642  0169F8  0EFF               	movlw	255
  5643  0169FA  20E2               	addwfc	fsr1h,w,c
  5644  0169FC  6E33               	movwf	(btemp+1)^0,c
  5645  0169FE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5646  016A04  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5647                           
  5648                           ;stkvar	_fmt @ sp[(-10)+-5]
  5649  016A0A  0EF1               	movlw	-15
  5650  016A0C  006F FF8F FFE6     	movff	plusw1,postinc1
  5651  016A12  006F FF8F FFE6     	movff	plusw1,postinc1
  5652                           
  5653                           ;stkvar	_f @ sp[(-12)+0]
  5654  016A18  0EF4               	movlw	244
  5655  016A1A  24E1               	addwf	fsr1l,w,c
  5656  016A1C  6E32               	movwf	btemp^0,c
  5657  016A1E  0EFF               	movlw	255
  5658  016A20  20E2               	addwfc	fsr1h,w,c
  5659  016A22  6E33               	movwf	(btemp+1)^0,c
  5660  016A24  0060  F0CB  FFE6   	movff	btemp,postinc1
  5661  016A2A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5662  016A30  ECAE  F0B7         	call	_vfprintf	;wreg free
  5663                           
  5664                           ;stkvar	_f @ sp[(-8)+0]
  5665  016A34  0EFA               	movlw	250
  5666  016A36  24E1               	addwf	fsr1l,w,c
  5667  016A38  6ED9               	movwf	fsr2l,c
  5668  016A3A  0EFF               	movlw	255
  5669  016A3C  20E2               	addwfc	fsr1h,w,c
  5670  016A3E  6EDA               	movwf	fsr2h,c
  5671  016A40  006F FF78  F03C    	movff	postinc2,btemp+10
  5672  016A46  006F FF74  F03D    	movff	postdec2,btemp+11
  5673                           
  5674                           ;stkvar	_s @ sp[(-8)+-3]
  5675  016A4C  0EF5               	movlw	-11
  5676  016A4E  006F FF8C  F03A    	movff	plusw1,btemp+8
  5677  016A54  0EF6               	movlw	-10
  5678  016A56  006F FF8C  F03B    	movff	plusw1,btemp+9
  5679  016A5C  503C               	movf	(btemp+10)^0,w,c
  5680  016A5E  243A               	addwf	(btemp+8)^0,w,c
  5681  016A60  6ED9               	movwf	fsr2l,c
  5682  016A62  503D               	movf	(btemp+11)^0,w,c
  5683  016A64  203B               	addwfc	(btemp+9)^0,w,c
  5684  016A66  6EDA               	movwf	fsr2h,c
  5685  016A68  0E00               	movlw	0
  5686  016A6A  6EDF               	movwf	indf2,c
  5687                           
  5688                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5689  016A6C  0EF8               	movlw	248
  5690  016A6E  26E1               	addwf	fsr1l,f,c
  5691  016A70  0EFF               	movlw	255
  5692  016A72  22E2               	addwfc	fsr1h,f,c
  5693  016A74  52E5               	movf	postdec1,f,c
  5694  016A76  50E7               	movf	indf1,w,c
  5695  016A78  5EE1               	subwf	fsr1l,f,c
  5696  016A7A  0E00               	movlw	0
  5697  016A7C  5AE2               	subwfb	fsr1h,f,c
  5698  016A7E  0012               	return		;funcret
  5699  016A80                     __end_of_sprintf:
  5700                           	opt callstack 0
  5701                           
  5702 ;; *************** function _get_vterm_ptr *****************
  5703 ;; Defined at:
  5704 ;;		line 116 in file "mconfig.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  line            1  [STACK] const unsigned char 
  5707 ;;  vterm           1  [STACK] const unsigned char 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  2  [STACK] PTR unsigned char 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/5
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5723 ;;Total ram usage:        0 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    6
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;;		_check_help
  5731 ;;		_vterm_dump
  5732 ;; This function uses a reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text23
  5736  017F82                     __ptext23:
  5737                           	opt callstack 0
  5738  017F82                     _get_vterm_ptr:
  5739                           	opt callstack 24
  5740                           
  5741                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5742                           ;stkvar	_vterm @ sp[(0)+-2]
  5743                           
  5744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5745                           ;incstack = 0
  5746  017F82  0EFE               	movlw	-2
  5747  017F84  50E3               	movf	plusw1,w,c
  5748  017F86  0B03               	andlw	3
  5749  017F88  0D36               	mullw	54
  5750  017F8A  0E00               	movlw	low _D
  5751  017F8C  6E32               	movwf	btemp^0,c
  5752  017F8E  0E05               	movlw	high _D
  5753  017F90  6E33               	movwf	(btemp+1)^0,c
  5754  017F92  50F3               	movf	243,w,c
  5755  017F94  2632               	addwf	btemp^0,f,c
  5756  017F96  50F4               	movf	244,w,c
  5757  017F98  2233               	addwfc	(btemp+1)^0,f,c
  5758                           
  5759                           ;stkvar	_line @ sp[(0)+-1]
  5760  017F9A  0EFF               	movlw	-1
  5761  017F9C  50E3               	movf	plusw1,w,c
  5762  017F9E  0B03               	andlw	3
  5763  017FA0  0D12               	mullw	18
  5764  017FA2  50F3               	movf	243,w,c
  5765  017FA4  2632               	addwf	btemp^0,f,c
  5766  017FA6  50F4               	movf	244,w,c
  5767  017FA8  2233               	addwfc	(btemp+1)^0,f,c
  5768                           
  5769                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5770  017FAA  52E5               	movf	postdec1,f,c
  5771  017FAC  52E5               	movf	postdec1,f,c
  5772  017FAE  0012               	return		;funcret
  5773  017FB0                     __end_of_get_vterm_ptr:
  5774                           	opt callstack 0
  5775                           
  5776 ;; *************** function _WaitMs *****************
  5777 ;; Defined at:
  5778 ;;		line 32 in file "timers.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  numMilliseco    2  [STACK] const unsigned short 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1  [STACK] void 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5787 ;; Tracked objects:
  5788 ;;		On entry : 1/1
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5796 ;;Total ram usage:        0 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    7
  5799 ;; This function calls:
  5800 ;;		_StartTimer
  5801 ;;		_TimerDone
  5802 ;; This function is called by:
  5803 ;;		_main
  5804 ;;		_vterm_dump
  5805 ;; This function uses a reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text24
  5809  017DEE                     __ptext24:
  5810                           	opt callstack 0
  5811  017DEE                     _WaitMs:
  5812                           	opt callstack 21
  5813                           
  5814                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5815                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5816                           
  5817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5818                           ;incstack = 0
  5819  017DEE  0EFE               	movlw	-2
  5820  017DF0  006F FF8F FFE6     	movff	plusw1,postinc1
  5821  017DF6  006F FF8F FFE6     	movff	plusw1,postinc1
  5822  017DFC  0E00               	movlw	0
  5823  017DFE  6EE6               	movwf	postinc1,c
  5824  017E00  ECBD  F0BE         	call	_StartTimer	;wreg free
  5825                           
  5826                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5827  017E04  D005               	goto	l11250
  5828  017E06                     l1497:
  5829                           
  5830                           ;timers.c: 36:   __nop();
  5831  017E06  F000               	nop	
  5832                           
  5833                           ;timers.c: 37:   __nop();
  5834  017E08  F000               	nop	
  5835                           
  5836                           ;timers.c: 38:   __nop();
  5837  017E0A  F000               	nop	
  5838                           
  5839                           ;timers.c: 39:   __nop();
  5840  017E0C  F000               	nop	
  5841  017E0E  0004               	clrwdt		;# 
  5842  017E10                     l11250:
  5843                           
  5844                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5845  017E10  0E00               	movlw	0
  5846  017E12  6EE6               	movwf	postinc1,c
  5847  017E14  ECAB  F0C1         	call	_TimerDone	;wreg free
  5848  017E18  5032               	movf	btemp^0,w,c
  5849  017E1A  B4D8               	btfsc	status,2,c
  5850  017E1C  D7F4               	goto	l1497
  5851                           
  5852                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5853  017E1E  52E5               	movf	postdec1,f,c
  5854  017E20  52E5               	movf	postdec1,f,c
  5855  017E22  0012               	return		;funcret
  5856  017E24                     __end_of_WaitMs:
  5857                           	opt callstack 0
  5858                           
  5859 ;; *************** function _update_lcd *****************
  5860 ;; Defined at:
  5861 ;;		line 85 in file "mconfig.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  vterm           1  [STACK] unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1  [STACK] unsigned char 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/5
  5872 ;;		On exit  : 1/1
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5879 ;;Total ram usage:        0 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:   17
  5882 ;; This function calls:
  5883 ;;		_eaDogM_WriteStringAtPos
  5884 ;;		_wait_lcd_done
  5885 ;; This function is called by:
  5886 ;;		_main
  5887 ;;		_check_help
  5888 ;; This function uses a reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text25
  5892  016868                     __ptext25:
  5893                           	opt callstack 0
  5894  016868                     _update_lcd:
  5895                           	opt callstack 13
  5896                           
  5897                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  5898                           ;stkvar	_vterm @ sp[(0)+-1]
  5899                           
  5900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5901                           ;incstack = 0
  5902  016868  0EFF               	movlw	-1
  5903  01686A  006F FF8C  F032    	movff	plusw1,btemp
  5904  016870  0E03               	movlw	3
  5905  016872  1632               	andwf	btemp^0,f,c
  5906  016874  0EFF               	movlw	-1
  5907  016876  0060  F0CB  FFE3   	movff	btemp,plusw1
  5908                           
  5909                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  5910  01687C  0105               	movlb	5	; () banked
  5911  01687E  A1D8               	btfss	(_D+216)& (0+255),0,b
  5912  016880  D004               	goto	l11704
  5913                           
  5914                           ; BSR set to: 5
  5915                           ;stkvar	_vterm @ sp[(0)+-1]
  5916  016882  0EFF               	movlw	-1
  5917  016884  50E3               	movf	plusw1,w,c
  5918  016886  B4D8               	btfsc	status,2,c
  5919  016888  D074               	goto	l1575
  5920  01688A                     l11704:
  5921                           
  5922                           ; BSR set to: 5
  5923                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  5924                           ;stkvar	_vterm @ sp[(0)+-1]
  5925  01688A  0EFF               	movlw	-1
  5926  01688C  50E3               	movf	plusw1,w,c
  5927  01688E  0D36               	mullw	54
  5928  016890  0E10               	movlw	low (_D+16)
  5929  016892  24F3               	addwf	243,w,c
  5930  016894  6ED9               	movwf	fsr2l,c
  5931  016896  0E05               	movlw	high (_D+16)
  5932  016898  20F4               	addwfc	prodh,w,c
  5933  01689A  6EDA               	movwf	fsr2h,c
  5934  01689C  0E00               	movlw	0
  5935  01689E  6EDF               	movwf	indf2,c
  5936                           
  5937                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  5938                           ;stkvar	_vterm @ sp[(0)+-1]
  5939  0168A0  0EFF               	movlw	-1
  5940  0168A2  50E3               	movf	plusw1,w,c
  5941  0168A4  0D36               	mullw	54
  5942  0168A6  0E22               	movlw	low (_D+34)
  5943  0168A8  24F3               	addwf	243,w,c
  5944  0168AA  6ED9               	movwf	fsr2l,c
  5945  0168AC  0E05               	movlw	high (_D+34)
  5946  0168AE  20F4               	addwfc	prodh,w,c
  5947  0168B0  6EDA               	movwf	fsr2h,c
  5948  0168B2  0E00               	movlw	0
  5949  0168B4  6EDF               	movwf	indf2,c
  5950                           
  5951                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  5952                           ;stkvar	_vterm @ sp[(0)+-1]
  5953  0168B6  0EFF               	movlw	-1
  5954  0168B8  50E3               	movf	plusw1,w,c
  5955  0168BA  0D36               	mullw	54
  5956  0168BC  0E34               	movlw	low (_D+52)
  5957  0168BE  24F3               	addwf	243,w,c
  5958  0168C0  6ED9               	movwf	fsr2l,c
  5959  0168C2  0E05               	movlw	high (_D+52)
  5960  0168C4  20F4               	addwfc	prodh,w,c
  5961  0168C6  6EDA               	movwf	fsr2h,c
  5962  0168C8  0E00               	movlw	0
  5963  0168CA  6EDF               	movwf	indf2,c
  5964                           
  5965                           ; BSR set to: 5
  5966                           ;mconfig.c: 95:  wait_lcd_done();
  5967  0168CC  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5971                           ;stkvar	_vterm @ sp[(0)+-1]
  5972  0168D0  0EFF               	movlw	-1
  5973  0168D2  50E3               	movf	plusw1,w,c
  5974  0168D4  0D36               	mullw	54
  5975  0168D6  0E00               	movlw	low _D
  5976  0168D8  6E3C               	movwf	(btemp+10)^0,c
  5977  0168DA  0E05               	movlw	high _D
  5978  0168DC  6E3D               	movwf	(btemp+11)^0,c
  5979  0168DE  50F3               	movf	243,w,c
  5980  0168E0  263C               	addwf	(btemp+10)^0,f,c
  5981  0168E2  50F4               	movf	244,w,c
  5982  0168E4  223D               	addwfc	(btemp+11)^0,f,c
  5983  0168E6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5984  0168EC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5985  0168F2  0E00               	movlw	0
  5986  0168F4  6EE6               	movwf	postinc1,c
  5987  0168F6  0E00               	movlw	0
  5988  0168F8  6EE6               	movwf	postinc1,c
  5989  0168FA  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5990                           
  5991                           ; BSR set to: 59
  5992                           ;mconfig.c: 97:  wait_lcd_done();
  5993  0168FE  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5997                           ;stkvar	_vterm @ sp[(0)+-1]
  5998  016902  0EFF               	movlw	-1
  5999  016904  50E3               	movf	plusw1,w,c
  6000  016906  0D36               	mullw	54
  6001  016908  0E00               	movlw	low _D
  6002  01690A  6E3C               	movwf	(btemp+10)^0,c
  6003  01690C  0E05               	movlw	high _D
  6004  01690E  6E3D               	movwf	(btemp+11)^0,c
  6005  016910  0E12               	movlw	18
  6006  016912  263C               	addwf	(btemp+10)^0,f,c
  6007  016914  0E00               	movlw	0
  6008  016916  223D               	addwfc	(btemp+11)^0,f,c
  6009  016918  50F3               	movf	243,w,c
  6010  01691A  263C               	addwf	(btemp+10)^0,f,c
  6011  01691C  50F4               	movf	244,w,c
  6012  01691E  223D               	addwfc	(btemp+11)^0,f,c
  6013  016920  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6014  016926  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6015  01692C  0E00               	movlw	0
  6016  01692E  6EE6               	movwf	postinc1,c
  6017  016930  0E01               	movlw	1
  6018  016932  6EE6               	movwf	postinc1,c
  6019  016934  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  6020                           
  6021                           ; BSR set to: 59
  6022                           ;mconfig.c: 99:  wait_lcd_done();
  6023  016938  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6027                           ;stkvar	_vterm @ sp[(0)+-1]
  6028  01693C  0EFF               	movlw	-1
  6029  01693E  50E3               	movf	plusw1,w,c
  6030  016940  0D36               	mullw	54
  6031  016942  0E00               	movlw	low _D
  6032  016944  6E3C               	movwf	(btemp+10)^0,c
  6033  016946  0E05               	movlw	high _D
  6034  016948  6E3D               	movwf	(btemp+11)^0,c
  6035  01694A  0E24               	movlw	36
  6036  01694C  263C               	addwf	(btemp+10)^0,f,c
  6037  01694E  0E00               	movlw	0
  6038  016950  223D               	addwfc	(btemp+11)^0,f,c
  6039  016952  50F3               	movf	243,w,c
  6040  016954  263C               	addwf	(btemp+10)^0,f,c
  6041  016956  50F4               	movf	244,w,c
  6042  016958  223D               	addwfc	(btemp+11)^0,f,c
  6043  01695A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6044  016960  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6045  016966  0E00               	movlw	0
  6046  016968  6EE6               	movwf	postinc1,c
  6047  01696A  0E02               	movlw	2
  6048  01696C  6EE6               	movwf	postinc1,c
  6049  01696E  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  6050  016972                     l1575:
  6051                           
  6052                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6053  016972  52E5               	movf	postdec1,f,c
  6054  016974  0012               	return		;funcret
  6055  016976                     __end_of_update_lcd:
  6056                           	opt callstack 0
  6057                           
  6058 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6059 ;; Defined at:
  6060 ;;		line 252 in file "eadog.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  r               1  [STACK] const unsigned char 
  6063 ;;  c               1  [STACK] const unsigned char 
  6064 ;;  strPtr          2  [STACK] PTR unsigned char 
  6065 ;;		 -> D.lcd(216), D(218), V(187), 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1  [STACK] void 
  6070 ;; Registers used:
  6071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6072 ;; Tracked objects:
  6073 ;;		On entry : 3F/0
  6074 ;;		On exit  : 3F/3B
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:   16
  6084 ;; This function calls:
  6085 ;;		_eaDogM_WriteString
  6086 ;;		_send_lcd_cmd_dma
  6087 ;; This function is called by:
  6088 ;;		_update_lcd
  6089 ;;		_vterm_dump
  6090 ;; This function uses a reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text26
  6094  017E24                     __ptext26:
  6095                           	opt callstack 0
  6096  017E24                     _eaDogM_WriteStringAtPos:
  6097                           	opt callstack 13
  6098                           
  6099                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6100                           ;stkvar	_c @ sp[(0)+-2]
  6101                           
  6102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6103                           ;incstack = 0
  6104  017E24  0EFE               	movlw	-2
  6105  017E26  006F FF8C  F03D    	movff	plusw1,btemp+11
  6106                           
  6107                           ;stkvar	_r @ sp[(0)+-1]
  6108  017E2C  0EFF               	movlw	-1
  6109  017E2E  50E3               	movf	plusw1,w,c
  6110  017E30  0D10               	mullw	16
  6111  017E32  50F3               	movf	243,w,c
  6112  017E34  243D               	addwf	(btemp+11)^0,w,c
  6113  017E36  0F80               	addlw	128
  6114  017E38  6EE6               	movwf	postinc1,c
  6115  017E3A  EC15  F0BD         	call	_send_lcd_cmd_dma	;wreg free
  6116                           
  6117                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6118                           ;stkvar	_strPtr @ sp[(0)+-4]
  6119  017E3E  0EFC               	movlw	-4
  6120  017E40  006F FF8F FFE6     	movff	plusw1,postinc1
  6121  017E46  006F FF8F FFE6     	movff	plusw1,postinc1
  6122  017E4C  EC02  F0B8         	call	_eaDogM_WriteString	;wreg free
  6123                           
  6124                           ; BSR set to: 59
  6125                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6126  017E50  52E5               	movf	postdec1,f,c
  6127  017E52  52E5               	movf	postdec1,f,c
  6128  017E54  52E5               	movf	postdec1,f,c
  6129  017E56  52E5               	movf	postdec1,f,c
  6130  017E58  0012               	return		;funcret
  6131  017E5A                     __end_of_eaDogM_WriteStringAtPos:
  6132                           	opt callstack 0
  6133                           
  6134 ;; *************** function _send_lcd_cmd_dma *****************
  6135 ;; Defined at:
  6136 ;;		line 205 in file "eadog.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  strPtr          1  [STACK] unsigned char 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;		None
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  1  [STACK] void 
  6143 ;; Registers used:
  6144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/3D
  6147 ;;		On exit  : 3F/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6154 ;;Total ram usage:        0 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:   15
  6157 ;; This function calls:
  6158 ;;		_printf
  6159 ;;		_ringBufS_flush
  6160 ;;		_start_lcd
  6161 ;;		_wait_lcd_done
  6162 ;;		_wait_lcd_set
  6163 ;; This function is called by:
  6164 ;;		_eaDogM_WriteCommand
  6165 ;;		_eaDogM_WriteStringAtPos
  6166 ;; This function uses a reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text27
  6170  017A2A                     __ptext27:
  6171                           	opt callstack 0
  6172  017A2A                     _send_lcd_cmd_dma:
  6173                           	opt callstack 13
  6174                           
  6175                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6176                           
  6177                           ; BSR set to: 59
  6178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6179                           ;incstack = 0
  6180  017A2A  EC3C  F0C3         	call	_wait_lcd_set	;wreg free
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6184  017A2E  0E00               	movlw	0
  6185  017A30  6EE6               	movwf	postinc1,c
  6186  017A32  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6187  017A38  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6188  017A3E  ECF2  F0B8         	call	_ringBufS_flush	;wreg free
  6189  017A42  92BC               	bcf	188,1,c	;volatile
  6190  017A44  94BC               	bcf	188,2,c	;volatile
  6191                           
  6192                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6193  017A46  013B               	movlb	59	; () banked
  6194  017A48  9FFC               	bcf	252,7,b	;volatile
  6195                           
  6196                           ; BSR set to: 59
  6197                           ;eadog.c: 214:  DMA1SSZ = 1;
  6198  017A4A  0E00               	movlw	0
  6199  017A4C  6FF8               	movwf	248,b	;volatile
  6200  017A4E  0E01               	movlw	1
  6201  017A50  6FF7               	movwf	247,b	;volatile
  6202                           
  6203                           ; BSR set to: 59
  6204                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6205  017A52  8FFC               	bsf	252,7,b	;volatile
  6206                           
  6207                           ; BSR set to: 59
  6208                           ;eadog.c: 216:  printf("%c", strPtr);
  6209                           ;stkvar	_strPtr @ sp[(0)+-1]
  6210  017A54  0EFF               	movlw	-1
  6211  017A56  50E3               	movf	plusw1,w,c
  6212  017A58  6EE6               	movwf	postinc1,c
  6213  017A5A  0E00               	movlw	0
  6214  017A5C  6EE6               	movwf	postinc1,c
  6215  017A5E  0EF8               	movlw	low STR_13
  6216  017A60  6EE6               	movwf	postinc1,c
  6217  017A62  0EFF               	movlw	high STR_13
  6218  017A64  6EE6               	movwf	postinc1,c
  6219  017A66  0E04               	movlw	4
  6220  017A68  6EE6               	movwf	postinc1,c
  6221  017A6A  EC2E  F0BC         	call	_printf	;wreg free
  6222                           
  6223                           ;eadog.c: 217:  start_lcd();
  6224  017A6E  EC3F  F0C3         	call	_start_lcd	;wreg free
  6225                           
  6226                           ; BSR set to: 59
  6227                           ;eadog.c: 218:  wait_lcd_done();
  6228  017A72  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  6229                           
  6230                           ; BSR set to: 0
  6231  017A76  82BC               	bsf	188,1,c	;volatile
  6232                           
  6233                           ; BSR set to: 0
  6234                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6235  017A78  52E5               	movf	postdec1,f,c
  6236  017A7A  0012               	return		;funcret
  6237  017A7C                     __end_of_send_lcd_cmd_dma:
  6238                           	opt callstack 0
  6239                           
  6240 ;; *************** function _wait_lcd_done *****************
  6241 ;; Defined at:
  6242 ;;		line 141 in file "eadog.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1  [STACK] void 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/1
  6253 ;;		On exit  : 3F/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    7
  6263 ;; This function calls:
  6264 ;;		_wdtdelay
  6265 ;; This function is called by:
  6266 ;;		_send_lcd_cmd_dma
  6267 ;;		_update_lcd
  6268 ;;		_vterm_dump
  6269 ;; This function uses a reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text28
  6273  0184BC                     __ptext28:
  6274                           	opt callstack 0
  6275  0184BC                     _wait_lcd_done:
  6276                           	opt callstack 22
  6277                           
  6278                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6279                           
  6280                           ; BSR set to: 0
  6281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6282                           ;incstack = 0
  6283  0184BC  0100               	movlb	0	; () banked
  6284  0184BE  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6285  0184C0  D7FD               	goto	_wait_lcd_done
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;eadog.c: 144:  wdtdelay(50);
  6289  0184C2  0E32               	movlw	50
  6290  0184C4  6EE6               	movwf	postinc1,c
  6291  0184C6  0E00               	movlw	0
  6292  0184C8  6EE6               	movwf	postinc1,c
  6293  0184CA  0E00               	movlw	0
  6294  0184CC  6EE6               	movwf	postinc1,c
  6295  0184CE  0E00               	movlw	0
  6296  0184D0  6EE6               	movwf	postinc1,c
  6297  0184D2  EC8E  F0BC         	call	_wdtdelay	;wreg free
  6298                           
  6299                           ; BSR set to: 0
  6300                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6301  0184D6  0012               	return		;funcret
  6302  0184D8                     __end_of_wait_lcd_done:
  6303                           	opt callstack 0
  6304                           
  6305 ;; *************** function _wdtdelay *****************
  6306 ;; Defined at:
  6307 ;;		line 22 in file "eadog.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  delay           4  [STACK] const unsigned long 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1  [STACK] void 
  6314 ;; Registers used:
  6315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 3F/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    6
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_init_display
  6332 ;;		_send_lcd_cmd
  6333 ;;		_send_lcd_cmd_long
  6334 ;;		_wait_lcd_done
  6335 ;; This function uses a reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text29
  6339  01791C                     __ptext29:
  6340                           	opt callstack 0
  6341  01791C                     _wdtdelay:
  6342                           	opt callstack 22
  6343                           
  6344                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6345                           
  6346                           ; BSR set to: 0
  6347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6348                           ;incstack = 0
  6349  01791C  0100               	movlb	0	; () banked
  6350  01791E  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6351  017920  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6352  017922  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6353  017924  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6354  017926                     l1342:
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;eadog.c: 27:   __nop();
  6358  017926  F000               	nop	
  6359  017928  0004               	clrwdt		;# 
  6360                           
  6361                           ;eadog.c: 29:  };
  6362  01792A  0E01               	movlw	1
  6363  01792C  0100               	movlb	0	; () banked
  6364  01792E  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6365  017930  0E00               	movlw	0
  6366  017932  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6367  017934  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6368  017936  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;stkvar	_delay @ sp[(0)+-4]
  6372  017938  0EFC               	movlw	-4
  6373  01793A  006F FF8C  F032    	movff	plusw1,btemp
  6374  017940  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6375  017942  5C32               	subwf	btemp^0,w,c
  6376  017944  0EFD               	movlw	-3
  6377  017946  006F FF8C  F032    	movff	plusw1,btemp
  6378  01794C  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6379  01794E  5832               	subwfb	btemp^0,w,c
  6380  017950  0EFE               	movlw	-2
  6381  017952  006F FF8C  F032    	movff	plusw1,btemp
  6382  017958  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6383  01795A  5832               	subwfb	btemp^0,w,c
  6384  01795C  0EFF               	movlw	-1
  6385  01795E  006F FF8C  F032    	movff	plusw1,btemp
  6386  017964  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6387  017966  5832               	subwfb	btemp^0,w,c
  6388  017968  B0D8               	btfsc	status,0,c
  6389  01796A  D7DD               	goto	l1342
  6390                           
  6391                           ; BSR set to: 0
  6392                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6393  01796C  52E5               	movf	postdec1,f,c
  6394  01796E  52E5               	movf	postdec1,f,c
  6395  017970  52E5               	movf	postdec1,f,c
  6396  017972  52E5               	movf	postdec1,f,c
  6397  017974  0012               	return		;funcret
  6398  017976                     __end_of_wdtdelay:
  6399                           	opt callstack 0
  6400                           
  6401 ;; *************** function _eaDogM_WriteString *****************
  6402 ;; Defined at:
  6403 ;;		line 184 in file "eadog.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  strPtr          2  [STACK] PTR unsigned char 
  6406 ;;		 -> D.lcd(216), D(218), V(187), 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1  [STACK] void 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6413 ;; Tracked objects:
  6414 ;;		On entry : 3F/0
  6415 ;;		On exit  : 3F/3B
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:   15
  6425 ;; This function calls:
  6426 ;;		_printf
  6427 ;;		_ringBufS_flush
  6428 ;;		_start_lcd
  6429 ;;		_strlen
  6430 ;;		_wait_lcd_set
  6431 ;; This function is called by:
  6432 ;;		_eaDogM_WriteStringAtPos
  6433 ;; This function uses a reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text30
  6437  017004                     __ptext30:
  6438                           	opt callstack 0
  6439  017004                     _eaDogM_WriteString:
  6440                           	opt callstack 13
  6441                           
  6442                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6443                           
  6444                           ; BSR set to: 0
  6445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6446                           ;incstack = 0
  6447  017004  EC3C  F0C3         	call	_wait_lcd_set	;wreg free
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6451  017008  0E00               	movlw	0
  6452  01700A  6EE6               	movwf	postinc1,c
  6453  01700C  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6454  017012  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6455  017018  ECF2  F0B8         	call	_ringBufS_flush	;wreg free
  6456  01701C  94BC               	bcf	188,2,c	;volatile
  6457                           
  6458                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6459                           ;stkvar	_strPtr @ sp[(0)+-2]
  6460  01701E  0EFE               	movlw	-2
  6461  017020  006F FF8F FFE6     	movff	plusw1,postinc1
  6462  017026  006F FF8F FFE6     	movff	plusw1,postinc1
  6463  01702C  EC55  F0B8         	call	_strlen	;wreg free
  6464  017030  5033               	movf	(btemp+1)^0,w,c
  6465  017032  E104               	bnz	u12160
  6466  017034  0E41               	movlw	65
  6467  017036  5C32               	subwf	btemp^0,w,c
  6468  017038  A0D8               	btfss	status,0,c
  6469  01703A  D010               	goto	l11206
  6470  01703C                     u12160:
  6471                           
  6472                           ;stkvar	_strPtr @ sp[(0)+-2]
  6473  01703C  0EFE               	movlw	-2
  6474  01703E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6475  017044  0EFF               	movlw	-1
  6476  017046  006F FF8C  F03D    	movff	plusw1,btemp+11
  6477  01704C  0E40               	movlw	64
  6478  01704E  243C               	addwf	(btemp+10)^0,w,c
  6479  017050  6ED9               	movwf	fsr2l,c
  6480  017052  0E00               	movlw	0
  6481  017054  203D               	addwfc	(btemp+11)^0,w,c
  6482  017056  6EDA               	movwf	fsr2h,c
  6483  017058  0E00               	movlw	0
  6484  01705A  6EDF               	movwf	indf2,c
  6485  01705C                     l11206:
  6486                           
  6487                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6488  01705C  013B               	movlb	59	; () banked
  6489  01705E  9FFC               	bcf	252,7,b	;volatile
  6490                           
  6491                           ; BSR set to: 59
  6492                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6493                           ;stkvar	_strPtr @ sp[(0)+-2]
  6494  017060  0EFE               	movlw	-2
  6495  017062  006F FF8F FFE6     	movff	plusw1,postinc1
  6496  017068  006F FF8F FFE6     	movff	plusw1,postinc1
  6497  01706E  EC55  F0B8         	call	_strlen	;wreg free
  6498  017072  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6499  017078  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6500                           
  6501                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6502  01707E  013B               	movlb	59	; () banked
  6503  017080  8FFC               	bsf	252,7,b	;volatile
  6504                           
  6505                           ; BSR set to: 59
  6506                           ;eadog.c: 195:  printf("%s", strPtr);
  6507                           ;stkvar	_strPtr @ sp[(0)+-2]
  6508  017082  0EFE               	movlw	-2
  6509  017084  006F FF8F FFE6     	movff	plusw1,postinc1
  6510  01708A  006F FF8F FFE6     	movff	plusw1,postinc1
  6511  017090  0EFB               	movlw	low STR_12
  6512  017092  6EE6               	movwf	postinc1,c
  6513  017094  0EFF               	movlw	high STR_12
  6514  017096  6EE6               	movwf	postinc1,c
  6515  017098  0E04               	movlw	4
  6516  01709A  6EE6               	movwf	postinc1,c
  6517  01709C  EC2E  F0BC         	call	_printf	;wreg free
  6518                           
  6519                           ;eadog.c: 196:  start_lcd();
  6520  0170A0  EC3F  F0C3         	call	_start_lcd	;wreg free
  6521                           
  6522                           ; BSR set to: 59
  6523                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6524  0170A4  52E5               	movf	postdec1,f,c
  6525  0170A6  52E5               	movf	postdec1,f,c
  6526  0170A8  0012               	return		;funcret
  6527  0170AA                     __end_of_eaDogM_WriteString:
  6528                           	opt callstack 0
  6529                           
  6530 ;; *************** function _wait_lcd_set *****************
  6531 ;; Defined at:
  6532 ;;		line 131 in file "eadog.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;		None
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;		None
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1  [STACK] void 
  6539 ;; Registers used:
  6540 ;;		None
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/3D
  6543 ;;		On exit  : 3F/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6550 ;;Total ram usage:        0 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    6
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_eaDogM_WriteString
  6557 ;;		_send_lcd_cmd_dma
  6558 ;; This function uses a reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text31
  6562  018678                     __ptext31:
  6563                           	opt callstack 0
  6564  018678                     _wait_lcd_set:
  6565                           	opt callstack 21
  6566                           
  6567                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6568                           
  6569                           ; BSR set to: 59
  6570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6571                           ;incstack = 0
  6572  018678  0100               	movlb	0	; () banked
  6573  01867A  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6574                           
  6575                           ; BSR set to: 0
  6576                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6577  01867C  0012               	return		;funcret
  6578  01867E                     __end_of_wait_lcd_set:
  6579                           	opt callstack 0
  6580                           
  6581 ;; *************** function _start_lcd *****************
  6582 ;; Defined at:
  6583 ;;		line 126 in file "eadog.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1  [STACK] void 
  6590 ;; Registers used:
  6591 ;;		None
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/3B
  6594 ;;		On exit  : 3F/3B
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    6
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_eaDogM_WriteString
  6608 ;;		_send_lcd_cmd_dma
  6609 ;; This function uses a reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text32
  6613  01867E                     __ptext32:
  6614                           	opt callstack 0
  6615  01867E                     _start_lcd:
  6616                           	opt callstack 21
  6617                           
  6618                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6619                           
  6620                           ; BSR set to: 0
  6621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6622                           ;incstack = 0
  6623  01867E  013B               	movlb	59	; () banked
  6624  018680  8DFC               	bsf	252,6,b	;volatile
  6625                           
  6626                           ; BSR set to: 59
  6627                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6628  018682  0012               	return		;funcret
  6629  018684                     __end_of_start_lcd:
  6630                           	opt callstack 0
  6631                           
  6632 ;; *************** function _ringBufS_flush *****************
  6633 ;; Defined at:
  6634 ;;		line 76 in file "ringbufs.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6637 ;;		 -> ring_buf1(67), 
  6638 ;;  clearBuffer     1  [STACK] const char 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1  [STACK] void 
  6643 ;; Registers used:
  6644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6645 ;; Tracked objects:
  6646 ;;		On entry : 3F/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6654 ;;Total ram usage:        0 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    7
  6657 ;; This function calls:
  6658 ;;		_memset
  6659 ;; This function is called by:
  6660 ;;		_eaDogM_WriteString
  6661 ;;		_send_lcd_cmd_dma
  6662 ;; This function uses a reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text33
  6666  0171E4                     __ptext33:
  6667                           	opt callstack 0
  6668  0171E4                     _ringBufS_flush:
  6669                           	opt callstack 20
  6670                           
  6671                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6672                           ;stkvar	__this @ sp[(0)+-2]
  6673                           
  6674                           ; BSR set to: 59
  6675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6676                           ;incstack = 0
  6677  0171E4  0EFE               	movlw	-2
  6678  0171E6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6679  0171EC  0EFF               	movlw	-1
  6680  0171EE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6681  0171F4  0E42               	movlw	66
  6682  0171F6  243C               	addwf	(btemp+10)^0,w,c
  6683  0171F8  6ED9               	movwf	fsr2l,c
  6684  0171FA  0E00               	movlw	0
  6685  0171FC  203D               	addwfc	(btemp+11)^0,w,c
  6686  0171FE  6EDA               	movwf	fsr2h,c
  6687  017200  0E00               	movlw	0
  6688  017202  6EDF               	movwf	indf2,c
  6689                           
  6690                           ;ringbufs.c: 79:  _this->head = 0;
  6691                           ;stkvar	__this @ sp[(0)+-2]
  6692  017204  0EFE               	movlw	-2
  6693  017206  006F FF8C  F03C    	movff	plusw1,btemp+10
  6694  01720C  0EFF               	movlw	-1
  6695  01720E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6696  017214  0E40               	movlw	64
  6697  017216  243C               	addwf	(btemp+10)^0,w,c
  6698  017218  6ED9               	movwf	fsr2l,c
  6699  01721A  0E00               	movlw	0
  6700  01721C  203D               	addwfc	(btemp+11)^0,w,c
  6701  01721E  6EDA               	movwf	fsr2h,c
  6702  017220  0E00               	movlw	0
  6703  017222  6EDF               	movwf	indf2,c
  6704                           
  6705                           ;ringbufs.c: 80:  _this->tail = 0;
  6706                           ;stkvar	__this @ sp[(0)+-2]
  6707  017224  0EFE               	movlw	-2
  6708  017226  006F FF8C  F03C    	movff	plusw1,btemp+10
  6709  01722C  0EFF               	movlw	-1
  6710  01722E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6711  017234  0E41               	movlw	65
  6712  017236  243C               	addwf	(btemp+10)^0,w,c
  6713  017238  6ED9               	movwf	fsr2l,c
  6714  01723A  0E00               	movlw	0
  6715  01723C  203D               	addwfc	(btemp+11)^0,w,c
  6716  01723E  6EDA               	movwf	fsr2h,c
  6717  017240  0E00               	movlw	0
  6718  017242  6EDF               	movwf	indf2,c
  6719                           
  6720                           ;ringbufs.c: 81:  if (clearBuffer) {
  6721                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6722  017244  0EFD               	movlw	-3
  6723  017246  50E3               	movf	plusw1,w,c
  6724  017248  B4D8               	btfsc	status,2,c
  6725  01724A  D011               	goto	l1482
  6726                           
  6727                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6728  01724C  0E40               	movlw	64
  6729  01724E  6EE6               	movwf	postinc1,c
  6730  017250  0E00               	movlw	0
  6731  017252  6EE6               	movwf	postinc1,c
  6732  017254  0E00               	movlw	0
  6733  017256  6EE6               	movwf	postinc1,c
  6734  017258  0E00               	movlw	0
  6735  01725A  6EE6               	movwf	postinc1,c
  6736                           
  6737                           ;stkvar	__this @ sp[(-4)+-2]
  6738  01725C  0EFA               	movlw	-6
  6739  01725E  006F FF8F FFE6     	movff	plusw1,postinc1
  6740  017264  006F FF8F FFE6     	movff	plusw1,postinc1
  6741  01726A  EC2C  F0A4         	call	_memset	;wreg free
  6742  01726E                     l1482:
  6743                           
  6744                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6745  01726E  52E5               	movf	postdec1,f,c
  6746  017270  52E5               	movf	postdec1,f,c
  6747  017272  52E5               	movf	postdec1,f,c
  6748  017274  0012               	return		;funcret
  6749  017276                     __end_of_ringBufS_flush:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _memset *****************
  6753 ;; Defined at:
  6754 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  dest            2  [STACK] PTR void 
  6757 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6758 ;;  c               2  [STACK] int 
  6759 ;;  n               2  [STACK] unsigned int 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  s               2  [STACK] PTR unsigned char 
  6762 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6763 ;;  k               2  [STACK] unsigned int 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  2  [STACK] PTR void 
  6766 ;; Registers used:
  6767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    6
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_ringBufS_init
  6784 ;;		_ringBufS_flush
  6785 ;; This function uses a reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text34
  6789  014858                     __ptext34:
  6790                           	opt callstack 0
  6791  014858                     _memset:
  6792                           	opt callstack 0
  6793                           
  6794                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6795  014858  52E6               	movf	postinc1,f,c
  6796  01485A  52E6               	movf	postinc1,f,c
  6797  01485C  52E6               	movf	postinc1,f,c
  6798  01485E  52E6               	movf	postinc1,f,c
  6799                           
  6800                           ;stkvar	_dest @ sp[(-4)+-2]
  6801                           
  6802                           ;incstack = 0
  6803  014860  0EFA               	movlw	-6
  6804  014862  006F FF8C  F03C    	movff	plusw1,btemp+10
  6805  014868  0EFB               	movlw	-5
  6806  01486A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6807                           
  6808                           ;stkvar	_s @ sp[(-4)+0]
  6809  014870  0EFD               	movlw	-3
  6810  014872  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6811  014878  0EFC               	movlw	-4
  6812  01487A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6813                           
  6814                           ;stkvar	_n @ sp[(-4)+-6]
  6815  014880  0EF6               	movlw	-10
  6816  014882  006F FF8C  F032    	movff	plusw1,btemp
  6817  014888  0EF7               	movlw	-9
  6818  01488A  50E3               	movf	plusw1,w,c
  6819  01488C  1032               	iorwf	btemp^0,w,c
  6820  01488E  B4D8               	btfsc	status,2,c
  6821  014890  D154               	goto	u12110
  6822                           
  6823                           ;stkvar	_c @ sp[(-4)+-4]
  6824                           ;stkvar	_s @ sp[(-4)+0]
  6825  014892  0EFC               	movlw	-4
  6826  014894  006F FF8F FFD9     	movff	plusw1,fsr2l
  6827  01489A  0EFD               	movlw	-3
  6828  01489C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6829  0148A2  0EF8               	movlw	-8
  6830  0148A4  006F FF8F FFDF     	movff	plusw1,indf2
  6831                           
  6832                           ;stkvar	_c @ sp[(-4)+-4]
  6833                           ;stkvar	_n @ sp[(-4)+-6]
  6834                           ;stkvar	_s @ sp[(-4)+0]
  6835  0148AA  0EFC               	movlw	-4
  6836  0148AC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6837  0148B2  0EFD               	movlw	-3
  6838  0148B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6839  0148BA  0EF6               	movlw	-10
  6840  0148BC  50E3               	movf	plusw1,w,c
  6841  0148BE  263C               	addwf	(btemp+10)^0,f,c
  6842  0148C0  0EF7               	movlw	-9
  6843  0148C2  50E3               	movf	plusw1,w,c
  6844  0148C4  223D               	addwfc	(btemp+11)^0,f,c
  6845  0148C6  0EFF               	movlw	255
  6846  0148C8  243C               	addwf	(btemp+10)^0,w,c
  6847  0148CA  6ED9               	movwf	fsr2l,c
  6848  0148CC  0EFF               	movlw	255
  6849  0148CE  203D               	addwfc	(btemp+11)^0,w,c
  6850  0148D0  6EDA               	movwf	fsr2h,c
  6851  0148D2  0EF8               	movlw	-8
  6852  0148D4  006F FF8F FFDF     	movff	plusw1,indf2
  6853                           
  6854                           ;stkvar	_n @ sp[(-4)+-6]
  6855  0148DA  0EF7               	movlw	-9
  6856  0148DC  50E3               	movf	plusw1,w,c
  6857  0148DE  E108               	bnz	l11100
  6858  0148E0  0EF6               	movlw	-10
  6859  0148E2  006F FF8C  F032    	movff	plusw1,btemp
  6860  0148E8  0E03               	movlw	3
  6861  0148EA  5E32               	subwf	btemp^0,f,c
  6862  0148EC  A0D8               	btfss	status,0,c
  6863  0148EE  D125               	goto	u12110
  6864  0148F0                     l11100:
  6865                           
  6866                           ;stkvar	_c @ sp[(-4)+-4]
  6867                           ;stkvar	_s @ sp[(-4)+0]
  6868  0148F0  0EFC               	movlw	-4
  6869  0148F2  006F FF8C  F03C    	movff	plusw1,btemp+10
  6870  0148F8  0EFD               	movlw	-3
  6871  0148FA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6872  014900  0E01               	movlw	1
  6873  014902  243C               	addwf	(btemp+10)^0,w,c
  6874  014904  6ED9               	movwf	fsr2l,c
  6875  014906  0E00               	movlw	0
  6876  014908  203D               	addwfc	(btemp+11)^0,w,c
  6877  01490A  6EDA               	movwf	fsr2h,c
  6878  01490C  0EF8               	movlw	-8
  6879  01490E  006F FF8F FFDF     	movff	plusw1,indf2
  6880                           
  6881                           ;stkvar	_c @ sp[(-4)+-4]
  6882                           ;stkvar	_s @ sp[(-4)+0]
  6883  014914  0EFC               	movlw	-4
  6884  014916  006F FF8C  F03C    	movff	plusw1,btemp+10
  6885  01491C  0EFD               	movlw	-3
  6886  01491E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6887  014924  0E02               	movlw	2
  6888  014926  243C               	addwf	(btemp+10)^0,w,c
  6889  014928  6ED9               	movwf	fsr2l,c
  6890  01492A  0E00               	movlw	0
  6891  01492C  203D               	addwfc	(btemp+11)^0,w,c
  6892  01492E  6EDA               	movwf	fsr2h,c
  6893  014930  0EF8               	movlw	-8
  6894  014932  006F FF8F FFDF     	movff	plusw1,indf2
  6895                           
  6896                           ;stkvar	_c @ sp[(-4)+-4]
  6897                           ;stkvar	_n @ sp[(-4)+-6]
  6898                           ;stkvar	_s @ sp[(-4)+0]
  6899  014938  0EFC               	movlw	-4
  6900  01493A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6901  014940  0EFD               	movlw	-3
  6902  014942  006F FF8C  F03D    	movff	plusw1,btemp+11
  6903  014948  0EF6               	movlw	-10
  6904  01494A  50E3               	movf	plusw1,w,c
  6905  01494C  263C               	addwf	(btemp+10)^0,f,c
  6906  01494E  0EF7               	movlw	-9
  6907  014950  50E3               	movf	plusw1,w,c
  6908  014952  223D               	addwfc	(btemp+11)^0,f,c
  6909  014954  0EFE               	movlw	254
  6910  014956  243C               	addwf	(btemp+10)^0,w,c
  6911  014958  6ED9               	movwf	fsr2l,c
  6912  01495A  0EFF               	movlw	255
  6913  01495C  203D               	addwfc	(btemp+11)^0,w,c
  6914  01495E  6EDA               	movwf	fsr2h,c
  6915  014960  0EF8               	movlw	-8
  6916  014962  006F FF8F FFDF     	movff	plusw1,indf2
  6917                           
  6918                           ;stkvar	_c @ sp[(-4)+-4]
  6919                           ;stkvar	_n @ sp[(-4)+-6]
  6920                           ;stkvar	_s @ sp[(-4)+0]
  6921  014968  0EFC               	movlw	-4
  6922  01496A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6923  014970  0EFD               	movlw	-3
  6924  014972  006F FF8C  F03D    	movff	plusw1,btemp+11
  6925  014978  0EF6               	movlw	-10
  6926  01497A  50E3               	movf	plusw1,w,c
  6927  01497C  263C               	addwf	(btemp+10)^0,f,c
  6928  01497E  0EF7               	movlw	-9
  6929  014980  50E3               	movf	plusw1,w,c
  6930  014982  223D               	addwfc	(btemp+11)^0,f,c
  6931  014984  0EFD               	movlw	253
  6932  014986  243C               	addwf	(btemp+10)^0,w,c
  6933  014988  6ED9               	movwf	fsr2l,c
  6934  01498A  0EFF               	movlw	255
  6935  01498C  203D               	addwfc	(btemp+11)^0,w,c
  6936  01498E  6EDA               	movwf	fsr2h,c
  6937  014990  0EF8               	movlw	-8
  6938  014992  006F FF8F FFDF     	movff	plusw1,indf2
  6939                           
  6940                           ;stkvar	_n @ sp[(-4)+-6]
  6941  014998  0EF7               	movlw	-9
  6942  01499A  50E3               	movf	plusw1,w,c
  6943  01499C  E108               	bnz	l11106
  6944  01499E  0EF6               	movlw	-10
  6945  0149A0  006F FF8C  F032    	movff	plusw1,btemp
  6946  0149A6  0E07               	movlw	7
  6947  0149A8  5E32               	subwf	btemp^0,f,c
  6948  0149AA  A0D8               	btfss	status,0,c
  6949  0149AC  D0C6               	goto	u12110
  6950  0149AE                     l11106:
  6951                           
  6952                           ;stkvar	_c @ sp[(-4)+-4]
  6953                           ;stkvar	_s @ sp[(-4)+0]
  6954  0149AE  0EFC               	movlw	-4
  6955  0149B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6956  0149B6  0EFD               	movlw	-3
  6957  0149B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6958  0149BE  0E03               	movlw	3
  6959  0149C0  243C               	addwf	(btemp+10)^0,w,c
  6960  0149C2  6ED9               	movwf	fsr2l,c
  6961  0149C4  0E00               	movlw	0
  6962  0149C6  203D               	addwfc	(btemp+11)^0,w,c
  6963  0149C8  6EDA               	movwf	fsr2h,c
  6964  0149CA  0EF8               	movlw	-8
  6965  0149CC  006F FF8F FFDF     	movff	plusw1,indf2
  6966                           
  6967                           ;stkvar	_c @ sp[(-4)+-4]
  6968                           ;stkvar	_n @ sp[(-4)+-6]
  6969                           ;stkvar	_s @ sp[(-4)+0]
  6970  0149D2  0EFC               	movlw	-4
  6971  0149D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6972  0149DA  0EFD               	movlw	-3
  6973  0149DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6974  0149E2  0EF6               	movlw	-10
  6975  0149E4  50E3               	movf	plusw1,w,c
  6976  0149E6  263C               	addwf	(btemp+10)^0,f,c
  6977  0149E8  0EF7               	movlw	-9
  6978  0149EA  50E3               	movf	plusw1,w,c
  6979  0149EC  223D               	addwfc	(btemp+11)^0,f,c
  6980  0149EE  0EFC               	movlw	252
  6981  0149F0  243C               	addwf	(btemp+10)^0,w,c
  6982  0149F2  6ED9               	movwf	fsr2l,c
  6983  0149F4  0EFF               	movlw	255
  6984  0149F6  203D               	addwfc	(btemp+11)^0,w,c
  6985  0149F8  6EDA               	movwf	fsr2h,c
  6986  0149FA  0EF8               	movlw	-8
  6987  0149FC  006F FF8F FFDF     	movff	plusw1,indf2
  6988                           
  6989                           ;stkvar	_n @ sp[(-4)+-6]
  6990  014A02  0EF7               	movlw	-9
  6991  014A04  50E3               	movf	plusw1,w,c
  6992  014A06  E108               	bnz	l11112
  6993  014A08  0EF6               	movlw	-10
  6994  014A0A  006F FF8C  F032    	movff	plusw1,btemp
  6995  014A10  0E09               	movlw	9
  6996  014A12  5E32               	subwf	btemp^0,f,c
  6997  014A14  A0D8               	btfss	status,0,c
  6998  014A16  D091               	goto	u12110
  6999  014A18                     l11112:
  7000                           
  7001                           ;stkvar	_s @ sp[(-4)+0]
  7002  014A18  0EFC               	movlw	-4
  7003  014A1A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7004  014A20  1E3C               	comf	(btemp+10)^0,f,c
  7005  014A22  0EFD               	movlw	-3
  7006  014A24  006F FF8C  F03D    	movff	plusw1,btemp+11
  7007  014A2A  1E3D               	comf	(btemp+11)^0,f,c
  7008  014A2C  2A3C               	incf	(btemp+10)^0,f,c
  7009  014A2E  B4D8               	btfsc	status,2,c
  7010  014A30  2A3D               	incf	(btemp+11)^0,f,c
  7011  014A32  0E03               	movlw	3
  7012  014A34  163C               	andwf	(btemp+10)^0,f,c
  7013  014A36  0E00               	movlw	0
  7014  014A38  163D               	andwf	(btemp+11)^0,f,c
  7015                           
  7016                           ;stkvar	_k @ sp[(-4)+2]
  7017  014A3A  0EFE               	movlw	-2
  7018  014A3C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7019  014A42  0EFF               	movlw	-1
  7020  014A44  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7021                           
  7022                           ;stkvar	_k @ sp[(-4)+2]
  7023                           ;stkvar	_s @ sp[(-4)+0]
  7024  014A4A  0EFC               	movlw	-4
  7025  014A4C  50E3               	movf	plusw1,w,c
  7026  014A4E  6E32               	movwf	btemp^0,c
  7027  014A50  0EFE               	movlw	-2
  7028  014A52  50E3               	movf	plusw1,w,c
  7029  014A54  2632               	addwf	btemp^0,f,c
  7030  014A56  0EFC               	movlw	-4
  7031  014A58  0060  F0CB  FFE3   	movff	btemp,plusw1
  7032  014A5E  0EFD               	movlw	-3
  7033  014A60  50E3               	movf	plusw1,w,c
  7034  014A62  6E32               	movwf	btemp^0,c
  7035  014A64  0EFF               	movlw	-1
  7036  014A66  50E3               	movf	plusw1,w,c
  7037  014A68  2232               	addwfc	btemp^0,f,c
  7038  014A6A  0EFD               	movlw	-3
  7039  014A6C  0060  F0CB  FFE3   	movff	btemp,plusw1
  7040                           
  7041                           ;stkvar	_k @ sp[(-4)+2]
  7042                           ;stkvar	_n @ sp[(-4)+-6]
  7043  014A72  0EF6               	movlw	-10
  7044  014A74  50E3               	movf	plusw1,w,c
  7045  014A76  6E32               	movwf	btemp^0,c
  7046  014A78  0EFE               	movlw	-2
  7047  014A7A  50E3               	movf	plusw1,w,c
  7048  014A7C  5E32               	subwf	btemp^0,f,c
  7049  014A7E  0EF6               	movlw	-10
  7050  014A80  0060  F0CB  FFE3   	movff	btemp,plusw1
  7051  014A86  0EF7               	movlw	-9
  7052  014A88  50E3               	movf	plusw1,w,c
  7053  014A8A  6E32               	movwf	btemp^0,c
  7054  014A8C  0EFF               	movlw	-1
  7055  014A8E  50E3               	movf	plusw1,w,c
  7056  014A90  5A32               	subwfb	btemp^0,f,c
  7057  014A92  0EF7               	movlw	-9
  7058  014A94  0060  F0CB  FFE3   	movff	btemp,plusw1
  7059  014A9A  0EFC               	movlw	252
  7060  014A9C  6E3C               	movwf	(btemp+10)^0,c
  7061  014A9E  0EFF               	movlw	255
  7062  014AA0  6E3D               	movwf	(btemp+11)^0,c
  7063                           
  7064                           ;stkvar	_n @ sp[(-4)+-6]
  7065  014AA2  0EF6               	movlw	-10
  7066  014AA4  006F FF8C  F032    	movff	plusw1,btemp
  7067  014AAA  503C               	movf	(btemp+10)^0,w,c
  7068  014AAC  1632               	andwf	btemp^0,f,c
  7069  014AAE  0EF6               	movlw	-10
  7070  014AB0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7071  014AB6  0EF7               	movlw	-9
  7072  014AB8  006F FF8C  F032    	movff	plusw1,btemp
  7073  014ABE  503D               	movf	(btemp+11)^0,w,c
  7074  014AC0  1632               	andwf	btemp^0,f,c
  7075  014AC2  0EF7               	movlw	-9
  7076  014AC4  D02E               	goto	L5
  7077  014AC6                     l11120:
  7078                           
  7079                           ;stkvar	_c @ sp[(-4)+-4]
  7080                           ;stkvar	_s @ sp[(-4)+0]
  7081  014AC6  0EFC               	movlw	-4
  7082  014AC8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7083  014ACE  0EFD               	movlw	-3
  7084  014AD0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7085  014AD6  0EF8               	movlw	-8
  7086  014AD8  006F FF8F FFDF     	movff	plusw1,indf2
  7087                           
  7088                           ;stkvar	_n @ sp[(-4)+-6]
  7089  014ADE  0EF6               	movlw	-10
  7090  014AE0  006F FF8C  F032    	movff	plusw1,btemp
  7091  014AE6  0E01               	movlw	1
  7092  014AE8  5E32               	subwf	btemp^0,f,c
  7093  014AEA  0EF6               	movlw	-10
  7094  014AEC  0060  F0CB  FFE3   	movff	btemp,plusw1
  7095  014AF2  0EF7               	movlw	-9
  7096  014AF4  006F FF8C  F032    	movff	plusw1,btemp
  7097  014AFA  0E00               	movlw	0
  7098  014AFC  5A32               	subwfb	btemp^0,f,c
  7099  014AFE  0EF7               	movlw	-9
  7100  014B00  0060  F0CB  FFE3   	movff	btemp,plusw1
  7101                           
  7102                           ;stkvar	_s @ sp[(-4)+0]
  7103  014B06  0EFC               	movlw	-4
  7104  014B08  50E3               	movf	plusw1,w,c
  7105  014B0A  0F01               	addlw	1
  7106  014B0C  6E32               	movwf	btemp^0,c
  7107  014B0E  0EFC               	movlw	-4
  7108  014B10  0060  F0CB  FFE3   	movff	btemp,plusw1
  7109  014B16  6A32               	clrf	btemp^0,c
  7110  014B18  0EFD               	movlw	-3
  7111  014B1A  50E3               	movf	plusw1,w,c
  7112  014B1C  2032               	addwfc	btemp^0,w,c
  7113  014B1E  6E32               	movwf	btemp^0,c
  7114  014B20  0EFD               	movlw	-3
  7115  014B22                     L5:
  7116  014B22  0060  F0CB  FFE3   	movff	btemp,plusw1
  7117                           
  7118                           ;stkvar	_n @ sp[(-4)+-6]
  7119  014B28  0EF6               	movlw	-10
  7120  014B2A  006F FF8C  F032    	movff	plusw1,btemp
  7121  014B30  0EF7               	movlw	-9
  7122  014B32  50E3               	movf	plusw1,w,c
  7123  014B34  1032               	iorwf	btemp^0,w,c
  7124  014B36  A4D8               	btfss	status,2,c
  7125  014B38  D7C6               	goto	l11120
  7126  014B3A                     u12110:
  7127                           
  7128                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7129  014B3A  0EF6               	movlw	246
  7130  014B3C  26E1               	addwf	fsr1l,f,c
  7131  014B3E  0EFF               	movlw	255
  7132  014B40  22E2               	addwfc	fsr1h,f,c
  7133  014B42  0012               	return		;funcret
  7134  014B44                     __end_of_memset:
  7135                           	opt callstack 0
  7136                           
  7137 ;; *************** function _printf *****************
  7138 ;; Defined at:
  7139 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  fmt             2  [STACK] PTR const unsigned char 
  7142 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  ap              2  [STACK] PTR void [1]
  7145 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7146 ;;  ret             2    0        int 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2  [STACK] int 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7151 ;; Tracked objects:
  7152 ;;		On entry : 3F/3B
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7160 ;;Total ram usage:        0 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:   14
  7163 ;; This function calls:
  7164 ;;		_vfprintf
  7165 ;; This function is called by:
  7166 ;;		_eaDogM_WriteString
  7167 ;;		_send_lcd_cmd_dma
  7168 ;; This function uses a reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text35
  7172  01785C                     __ptext35:
  7173                           	opt callstack 0
  7174  01785C                     _printf:
  7175                           	opt callstack 0
  7176                           
  7177                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7178  01785C  52E6               	movf	postinc1,f,c
  7179  01785E  52E6               	movf	postinc1,f,c
  7180                           
  7181                           ;stkvar	?_printf @ sp[(-2)+-3]
  7182                           
  7183                           ;incstack = 0
  7184  017860  0EFB               	movlw	251
  7185  017862  24E1               	addwf	fsr1l,w,c
  7186  017864  6E3C               	movwf	(btemp+10)^0,c
  7187  017866  0EFF               	movlw	255
  7188  017868  20E2               	addwfc	fsr1h,w,c
  7189  01786A  6E3D               	movwf	(btemp+11)^0,c
  7190                           
  7191                           ;stkvar	_ap @ sp[(-2)+0]
  7192  01786C  0EFF               	movlw	-1
  7193  01786E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7194  017874  0EFE               	movlw	-2
  7195  017876  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7196                           
  7197                           ;stkvar	_ap @ sp[(-2)+0]
  7198  01787C  0EFE               	movlw	254
  7199  01787E  24E1               	addwf	fsr1l,w,c
  7200  017880  6E32               	movwf	btemp^0,c
  7201  017882  0EFF               	movlw	255
  7202  017884  20E2               	addwfc	fsr1h,w,c
  7203  017886  6E33               	movwf	(btemp+1)^0,c
  7204  017888  0060  F0CB  FFE6   	movff	btemp,postinc1
  7205  01788E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7206                           
  7207                           ;stkvar	_fmt @ sp[(-4)+-3]
  7208  017894  0EF9               	movlw	-7
  7209  017896  006F FF8F FFE6     	movff	plusw1,postinc1
  7210  01789C  006F FF8F FFE6     	movff	plusw1,postinc1
  7211  0178A2  0E00               	movlw	0
  7212  0178A4  6EE6               	movwf	postinc1,c
  7213  0178A6  0E00               	movlw	0
  7214  0178A8  6EE6               	movwf	postinc1,c
  7215  0178AA  ECAE  F0B7         	call	_vfprintf	;wreg free
  7216                           
  7217                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7218  0178AE  52E5               	movf	postdec1,f,c
  7219  0178B0  52E5               	movf	postdec1,f,c
  7220  0178B2  52E5               	movf	postdec1,f,c
  7221  0178B4  50E7               	movf	indf1,w,c
  7222  0178B6  5EE1               	subwf	fsr1l,f,c
  7223  0178B8  0E00               	movlw	0
  7224  0178BA  5AE2               	subwfb	fsr1h,f,c
  7225  0178BC  0012               	return		;funcret
  7226  0178BE                     __end_of_printf:
  7227                           	opt callstack 0
  7228                           
  7229 ;; *************** function _vfprintf *****************
  7230 ;; Defined at:
  7231 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7234 ;;		 -> f(6), NULL(0), 
  7235 ;;  fmt             2  [STACK] PTR const unsigned char 
  7236 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7237 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7238 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7239 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7240 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7241 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7242 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7243 ;;  ap              2  [STACK] PTR PTR void 
  7244 ;;		 -> ap(2), ap(2), 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  cfmt            2  [STACK] PTR unsigned char 
  7247 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7248 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7249 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7250 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7251 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7252 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7253 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  2  [STACK] int 
  7256 ;; Registers used:
  7257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/5
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7267 ;;Total ram usage:        0 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:   13
  7270 ;; This function calls:
  7271 ;;		_vfpfcnvrt
  7272 ;; This function is called by:
  7273 ;;		_sprintf
  7274 ;;		_printf
  7275 ;; This function uses a reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text36
  7279  016F5C                     __ptext36:
  7280                           	opt callstack 0
  7281  016F5C                     _vfprintf:
  7282                           	opt callstack 0
  7283                           
  7284                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7285  016F5C  52E6               	movf	postinc1,f,c
  7286  016F5E  52E6               	movf	postinc1,f,c
  7287                           
  7288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7289                           ;stkvar	_fmt @ sp[(-2)+-4]
  7290                           
  7291                           ;incstack = 0
  7292  016F60  0EFA               	movlw	-6
  7293  016F62  006F FF8C  F03C    	movff	plusw1,btemp+10
  7294  016F68  0EFB               	movlw	-5
  7295  016F6A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7296                           
  7297                           ;stkvar	_cfmt @ sp[(-2)+0]
  7298  016F70  0EFF               	movlw	-1
  7299  016F72  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7300  016F78  0EFE               	movlw	-2
  7301  016F7A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7302                           
  7303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7304  016F80  6A19               	clrf	_nout^0,c
  7305  016F82  6A1A               	clrf	(_nout+1)^0,c
  7306                           
  7307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7308  016F84  D020               	goto	l11134
  7309  016F86                     l11132:
  7310                           
  7311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7312                           ;stkvar	_ap @ sp[(-2)+-6]
  7313  016F86  0EF8               	movlw	-8
  7314  016F88  006F FF8F FFE6     	movff	plusw1,postinc1
  7315  016F8E  006F FF8F FFE6     	movff	plusw1,postinc1
  7316                           
  7317                           ;stkvar	_cfmt @ sp[(-4)+0]
  7318  016F94  0EFC               	movlw	252
  7319  016F96  24E1               	addwf	fsr1l,w,c
  7320  016F98  6E32               	movwf	btemp^0,c
  7321  016F9A  0EFF               	movlw	255
  7322  016F9C  20E2               	addwfc	fsr1h,w,c
  7323  016F9E  6E33               	movwf	(btemp+1)^0,c
  7324  016FA0  0060  F0CB  FFE6   	movff	btemp,postinc1
  7325  016FA6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7326                           
  7327                           ;stkvar	_fp @ sp[(-6)+-2]
  7328  016FAC  0EF8               	movlw	-8
  7329  016FAE  006F FF8F FFE6     	movff	plusw1,postinc1
  7330  016FB4  006F FF8F FFE6     	movff	plusw1,postinc1
  7331  016FBA  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7332  016FBE  5032               	movf	btemp^0,w,c
  7333  016FC0  2619               	addwf	_nout^0,f,c
  7334  016FC2  5033               	movf	(btemp+1)^0,w,c
  7335  016FC4  221A               	addwfc	(_nout+1)^0,f,c
  7336  016FC6                     l11134:
  7337                           
  7338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7339                           ;stkvar	_cfmt @ sp[(-2)+0]
  7340  016FC6  50E1               	movf	fsr1l,w,c
  7341  016FC8  0FFE               	addlw	-2
  7342  016FCA  6ED9               	movwf	fsr2l,c
  7343  016FCC  50E2               	movf	fsr1h,w,c
  7344  016FCE  6EDA               	movwf	fsr2h,c
  7345  016FD0  0EFF               	movlw	255
  7346  016FD2  22DA               	addwfc	fsr2h,f,c
  7347  016FD4  006F FF7B FFF6     	movff	postinc2,tblptrl
  7348  016FDA  006F FF77 FFF7     	movff	postdec2,tblptrh
  7349  016FE0                     	if	0	;tblptru may be non-zero
  7350  016FE0                     	endif
  7351  016FE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7352  016FE0  0E00               	movlw	low (__mediumconst shr (0+16))
  7353  016FE2  6EF8               	movwf	tblptru,c
  7354  016FE4                     	endif
  7355  016FE4  0008               	tblrd		*
  7356  016FE6  50F5               	movf	tablat,w,c
  7357  016FE8  0900               	iorlw	0
  7358  016FEA  A4D8               	btfss	status,2,c
  7359  016FEC  D7CC               	goto	l11132
  7360                           
  7361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7362  016FEE  0060  F064  F032   	movff	_nout,btemp
  7363  016FF4  0060  F068  F033   	movff	_nout+1,btemp+1
  7364                           
  7365                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7366  016FFA  0EF8               	movlw	248
  7367  016FFC  26E1               	addwf	fsr1l,f,c
  7368  016FFE  0EFF               	movlw	255
  7369  017000  22E2               	addwfc	fsr1h,f,c
  7370  017002  0012               	return		;funcret
  7371  017004                     __end_of_vfprintf:
  7372                           	opt callstack 0
  7373                           
  7374 ;; *************** function _vfpfcnvrt *****************
  7375 ;; Defined at:
  7376 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7379 ;;		 -> f(6), NULL(0), 
  7380 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7381 ;;		 -> cfmt(2), 
  7382 ;;  ap              2  [STACK] PTR PTR void 
  7383 ;;		 -> ap(2), ap(2), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  llu             8  [STACK] unsigned long long 
  7386 ;;  ll              8  [STACK] long long 
  7387 ;;  f               4  [STACK] long long 
  7388 ;;  ct              3  [STACK] unsigned char [3]
  7389 ;;  vp              3    0        PTR void 
  7390 ;;  cp              2  [STACK] PTR unsigned char 
  7391 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7392 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7393 ;;		 -> STR_3(5), V(187), 
  7394 ;;  i               2    0        int 
  7395 ;;  done            2    0        int 
  7396 ;;  c               1  [STACK] unsigned char 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  2  [STACK] int 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/5
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7410 ;;Total ram usage:        0 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:   12
  7413 ;; This function calls:
  7414 ;;		_atoi
  7415 ;;		_ctoa
  7416 ;;		_dtoa
  7417 ;;		_efgtoa
  7418 ;;		_fputc
  7419 ;;		_isdigit
  7420 ;;		_isupper
  7421 ;;		_stoa
  7422 ;;		_strncmp
  7423 ;;		_tolower
  7424 ;;		_xtoa
  7425 ;; This function is called by:
  7426 ;;		_vfprintf
  7427 ;; This function uses a reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text37
  7431  011244                     __ptext37:
  7432                           	opt callstack 0
  7433  011244                     _vfpfcnvrt:
  7434                           	opt callstack 0
  7435                           
  7436                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7437  011244  0E20               	movlw	32
  7438  011246  26E1               	addwf	fsr1l,f,c
  7439  011248  0E00               	movlw	0
  7440  01124A  22E2               	addwfc	fsr1h,f,c
  7441                           
  7442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7443                           ;stkvar	_fmt @ sp[(-32)+-4]
  7444                           
  7445                           ;incstack = 0
  7446  01124C  0EDC               	movlw	-36
  7447  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7448  011254  0EDD               	movlw	-35
  7449  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7450  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7451  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7452  011268                     	if	0	;tblptru may be non-zero
  7453  011268                     	endif
  7454  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7455  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7456  01126A  6EF8               	movwf	tblptru,c
  7457  01126C                     	endif
  7458  01126C  0008               	tblrd		*
  7459  01126E  50F5               	movf	tablat,w,c
  7460  011270  0A25               	xorlw	37
  7461  011272  A4D8               	btfss	status,2,c
  7462  011274  EF92  F08E         	goto	l11068
  7463                           
  7464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7465                           ;stkvar	_fmt @ sp[(-32)+-4]
  7466  011278  0EDC               	movlw	-36
  7467  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7468  011280  0EDD               	movlw	-35
  7469  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7470  011288  2ADE               	incf	postinc2,f,c
  7471  01128A  0E00               	movlw	0
  7472  01128C  22DD               	addwfc	postdec2,f,c
  7473                           
  7474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7475  01128E  6A1B               	clrf	_width^0,c
  7476  011290  6A1C               	clrf	(_width+1)^0,c
  7477  011292  6A1F               	clrf	_flags^0,c
  7478  011294  6A20               	clrf	(_flags+1)^0,c
  7479                           
  7480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7481  011296  681D               	setf	_prec^0,c
  7482  011298  681E               	setf	(_prec+1)^0,c
  7483                           
  7484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7485                           ;stkvar	_fmt @ sp[(-32)+-4]
  7486  01129A  0EDC               	movlw	-36
  7487  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7488  0112A2  0EDD               	movlw	-35
  7489  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7490  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7491  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7492  0112B6                     	if	0	;tblptru may be non-zero
  7493  0112B6                     	endif
  7494  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7495  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7496  0112B8  6EF8               	movwf	tblptru,c
  7497  0112BA                     	endif
  7498  0112BA  0008               	tblrd		*
  7499  0112BC  50F5               	movf	tablat,w,c
  7500  0112BE  0A2A               	xorlw	42
  7501  0112C0  A4D8               	btfss	status,2,c
  7502  0112C2  D031               	goto	l10932
  7503                           
  7504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7505                           ;stkvar	_fmt @ sp[(-32)+-4]
  7506  0112C4  0EDC               	movlw	-36
  7507  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7508  0112CC  0EDD               	movlw	-35
  7509  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7510  0112D4  2ADE               	incf	postinc2,f,c
  7511  0112D6  0E00               	movlw	0
  7512  0112D8  22DD               	addwfc	postdec2,f,c
  7513                           
  7514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7515                           ;stkvar	_ap @ sp[(-32)+-6]
  7516  0112DA  0EDA               	movlw	-38
  7517  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7518  0112E2  0EDB               	movlw	-37
  7519  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7520  0112EA  0E02               	movlw	2
  7521  0112EC  5EDE               	subwf	postinc2,f,c
  7522  0112EE  0E00               	movlw	0
  7523  0112F0  5ADD               	subwfb	postdec2,f,c
  7524  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7525  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7526  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7527  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7528  01130A  006F FF78  F01B    	movff	postinc2,_width
  7529  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7530                           
  7531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7532  011316  AE1C               	btfss	(_width+1)^0,7,c
  7533  011318  D066               	goto	u11860
  7534                           
  7535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7536  01131A  801F               	bsf	_flags^0,0,c
  7537                           
  7538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7539  01131C  6C1B               	negf	_width^0,c
  7540  01131E  1E1C               	comf	(_width+1)^0,f,c
  7541  011320  B0D8               	btfsc	status,0,c
  7542  011322  2A1C               	incf	(_width+1)^0,f,c
  7543  011324  D060               	goto	u11860
  7544  011326                     l10932:
  7545                           
  7546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7547                           ;stkvar	_fmt @ sp[(-32)+-4]
  7548  011326  0EDC               	movlw	-36
  7549  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7550  01132E  0EDD               	movlw	-35
  7551  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7552  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7553  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7554  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7555  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7556  01134E  EC41  F0A8         	call	_atoi	;wreg free
  7557  011352  0060  F0C8  F01B   	movff	btemp,_width
  7558  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7559                           
  7560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7561  01135E  D00B               	goto	l10936
  7562  011360                     l10934:
  7563                           
  7564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7565                           ;stkvar	_fmt @ sp[(-32)+-4]
  7566  011360  0EDC               	movlw	-36
  7567  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7568  011368  0EDD               	movlw	-35
  7569  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7570  011370  2ADE               	incf	postinc2,f,c
  7571  011372  0E00               	movlw	0
  7572  011374  22DD               	addwfc	postdec2,f,c
  7573  011376                     l10936:
  7574  011376  0ED0               	movlw	208
  7575  011378  6E3C               	movwf	(btemp+10)^0,c
  7576  01137A  0EFF               	movlw	255
  7577  01137C  6E3D               	movwf	(btemp+11)^0,c
  7578                           
  7579                           ;stkvar	_fmt @ sp[(-32)+-4]
  7580  01137E  0EDC               	movlw	-36
  7581  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7582  011386  0EDD               	movlw	-35
  7583  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7584  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7585  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7586  01139A                     	if	0	;tblptru may be non-zero
  7587  01139A                     	endif
  7588  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7589  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7590  01139C  6EF8               	movwf	tblptru,c
  7591  01139E                     	endif
  7592  01139E  0008               	tblrd		*
  7593  0113A0  50F5               	movf	tablat,w,c
  7594  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7595  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7596  0113A6  503C               	movf	(btemp+10)^0,w,c
  7597  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7598  0113AA  503D               	movf	(btemp+11)^0,w,c
  7599  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7600  0113AE  503B               	movf	(btemp+9)^0,w,c
  7601  0113B0  E106               	bnz	u11840
  7602  0113B2  0E0A               	movlw	10
  7603  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7604  0113B6  B0D8               	btfsc	status,0,c
  7605  0113B8  D002               	goto	u11840
  7606  0113BA  0E01               	movlw	1
  7607  0113BC  D001               	goto	u11850
  7608  0113BE                     u11840:
  7609  0113BE  0E00               	movlw	0
  7610  0113C0                     u11850:
  7611  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7612  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7613                           
  7614                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+4]
  7615  0113C4  0EE4               	movlw	-28
  7616  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7617  0113CC  0EE5               	movlw	-27
  7618  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7619                           
  7620                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+4]
  7621  0113D4  0EE4               	movlw	-28
  7622  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7623  0113DC  0EE5               	movlw	-27
  7624  0113DE  50E3               	movf	plusw1,w,c
  7625  0113E0  1032               	iorwf	btemp^0,w,c
  7626  0113E2  A4D8               	btfss	status,2,c
  7627  0113E4  D7BD               	goto	l10934
  7628  0113E6                     u11860:
  7629                           
  7630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7631                           ;stkvar	_fmt @ sp[(-32)+-4]
  7632  0113E6  0EDC               	movlw	-36
  7633  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7634  0113EE  0EDD               	movlw	-35
  7635  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7636  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7637  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7638  011402                     	if	0	;tblptru may be non-zero
  7639  011402                     	endif
  7640  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7641  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7642  011404  6EF8               	movwf	tblptru,c
  7643  011406                     	endif
  7644  011406  0008               	tblrd		*
  7645  011408  50F5               	movf	tablat,w,c
  7646  01140A  0A2E               	xorlw	46
  7647  01140C  A4D8               	btfss	status,2,c
  7648  01140E  D0AC               	goto	u11910
  7649                           
  7650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7651  011410  6A1D               	clrf	_prec^0,c
  7652  011412  6A1E               	clrf	(_prec+1)^0,c
  7653                           
  7654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7655                           ;stkvar	_fmt @ sp[(-32)+-4]
  7656  011414  0EDC               	movlw	-36
  7657  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7658  01141C  0EDD               	movlw	-35
  7659  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7660  011424  2ADE               	incf	postinc2,f,c
  7661  011426  0E00               	movlw	0
  7662  011428  22DD               	addwfc	postdec2,f,c
  7663                           
  7664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7665                           ;stkvar	_fmt @ sp[(-32)+-4]
  7666  01142A  0EDC               	movlw	-36
  7667  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7668  011432  0EDD               	movlw	-35
  7669  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7670  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7671  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7672  011446                     	if	0	;tblptru may be non-zero
  7673  011446                     	endif
  7674  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7675  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7676  011448  6EF8               	movwf	tblptru,c
  7677  01144A                     	endif
  7678  01144A  0008               	tblrd		*
  7679  01144C  50F5               	movf	tablat,w,c
  7680  01144E  0A2A               	xorlw	42
  7681  011450  A4D8               	btfss	status,2,c
  7682  011452  D02A               	goto	l10954
  7683                           
  7684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7685                           ;stkvar	_fmt @ sp[(-32)+-4]
  7686  011454  0EDC               	movlw	-36
  7687  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7688  01145C  0EDD               	movlw	-35
  7689  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7690  011464  2ADE               	incf	postinc2,f,c
  7691  011466  0E00               	movlw	0
  7692  011468  22DD               	addwfc	postdec2,f,c
  7693                           
  7694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7695                           ;stkvar	_ap @ sp[(-32)+-6]
  7696  01146A  0EDA               	movlw	-38
  7697  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7698  011472  0EDB               	movlw	-37
  7699  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7700  01147A  0E02               	movlw	2
  7701  01147C  5EDE               	subwf	postinc2,f,c
  7702  01147E  0E00               	movlw	0
  7703  011480  5ADD               	subwfb	postdec2,f,c
  7704  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7705  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7706  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7707  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7708  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7709  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7710                           
  7711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7712  0114A6  D060               	goto	u11910
  7713  0114A8                     l10954:
  7714                           
  7715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7716                           ;stkvar	_fmt @ sp[(-32)+-4]
  7717  0114A8  0EDC               	movlw	-36
  7718  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7719  0114B0  0EDD               	movlw	-35
  7720  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7721  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7722  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7723  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7724  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7725  0114D0  EC41  F0A8         	call	_atoi	;wreg free
  7726  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7727  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7728                           
  7729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7730  0114E0  D00B               	goto	l10958
  7731  0114E2                     l10956:
  7732                           
  7733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7734                           ;stkvar	_fmt @ sp[(-32)+-4]
  7735  0114E2  0EDC               	movlw	-36
  7736  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7737  0114EA  0EDD               	movlw	-35
  7738  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7739  0114F2  2ADE               	incf	postinc2,f,c
  7740  0114F4  0E00               	movlw	0
  7741  0114F6  22DD               	addwfc	postdec2,f,c
  7742  0114F8                     l10958:
  7743  0114F8  0ED0               	movlw	208
  7744  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7745  0114FC  0EFF               	movlw	255
  7746  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7747                           
  7748                           ;stkvar	_fmt @ sp[(-32)+-4]
  7749  011500  0EDC               	movlw	-36
  7750  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7751  011508  0EDD               	movlw	-35
  7752  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7753  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7754  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7755  01151C                     	if	0	;tblptru may be non-zero
  7756  01151C                     	endif
  7757  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7758  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7759  01151E  6EF8               	movwf	tblptru,c
  7760  011520                     	endif
  7761  011520  0008               	tblrd		*
  7762  011522  50F5               	movf	tablat,w,c
  7763  011524  6E3A               	movwf	(btemp+8)^0,c
  7764  011526  6A3B               	clrf	(btemp+9)^0,c
  7765  011528  503C               	movf	(btemp+10)^0,w,c
  7766  01152A  263A               	addwf	(btemp+8)^0,f,c
  7767  01152C  503D               	movf	(btemp+11)^0,w,c
  7768  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7769  011530  503B               	movf	(btemp+9)^0,w,c
  7770  011532  E106               	bnz	u11890
  7771  011534  0E0A               	movlw	10
  7772  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7773  011538  B0D8               	btfsc	status,0,c
  7774  01153A  D002               	goto	u11890
  7775  01153C  0E01               	movlw	1
  7776  01153E  D001               	goto	u11900
  7777  011540                     u11890:
  7778  011540  0E00               	movlw	0
  7779  011542                     u11900:
  7780  011542  6E3C               	movwf	(btemp+10)^0,c
  7781  011544  6A3D               	clrf	(btemp+11)^0,c
  7782                           
  7783                           ;stkvar	_vfpfcnvrt$4426 @ sp[(-32)+0]
  7784  011546  0EE0               	movlw	-32
  7785  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7786  01154E  0EE1               	movlw	-31
  7787  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7788                           
  7789                           ;stkvar	_vfpfcnvrt$4426 @ sp[(-32)+0]
  7790  011556  0EE0               	movlw	-32
  7791  011558  006F FF8C  F032    	movff	plusw1,btemp
  7792  01155E  0EE1               	movlw	-31
  7793  011560  50E3               	movf	plusw1,w,c
  7794  011562  1032               	iorwf	btemp^0,w,c
  7795  011564  A4D8               	btfss	status,2,c
  7796  011566  D7BD               	goto	l10956
  7797  011568                     u11910:
  7798                           
  7799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7800                           ;stkvar	_fmt @ sp[(-32)+-4]
  7801  011568  0EDC               	movlw	-36
  7802  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7803  011570  0EDD               	movlw	-35
  7804  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7805  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7806  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7807  011584                     	if	0	;tblptru may be non-zero
  7808  011584                     	endif
  7809  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7810  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7811  011586  6EF8               	movwf	tblptru,c
  7812  011588                     	endif
  7813  011588  0008               	tblrd		*
  7814  01158A  50F5               	movf	tablat,w,c
  7815  01158C  6EE6               	movwf	postinc1,c
  7816  01158E  0E00               	movlw	0
  7817  011590  6EE6               	movwf	postinc1,c
  7818  011592  EC0A  F0BA         	call	_tolower	;wreg free
  7819                           
  7820                           ;stkvar	_ct @ sp[(-32)+26]
  7821  011596  0EFA               	movlw	-6
  7822  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7823                           
  7824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7825                           ;stkvar	_ct @ sp[(-32)+26]
  7826  01159E  0EFA               	movlw	-6
  7827  0115A0  50E3               	movf	plusw1,w,c
  7828  0115A2  B4D8               	btfsc	status,2,c
  7829  0115A4  D05B               	goto	l10974
  7830                           
  7831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7832                           ;stkvar	_ct @ sp[(-32)+26]
  7833  0115A6  0EFB               	movlw	251
  7834  0115A8  24E1               	addwf	fsr1l,w,c
  7835  0115AA  6ED9               	movwf	fsr2l,c
  7836  0115AC  0EFF               	movlw	255
  7837  0115AE  20E2               	addwfc	fsr1h,w,c
  7838  0115B0  6EDA               	movwf	fsr2h,c
  7839                           
  7840                           ;stkvar	_fmt @ sp[(-32)+-4]
  7841  0115B2  0EDC               	movlw	-36
  7842  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7843  0115BA  0EDD               	movlw	-35
  7844  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7845  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7846  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7847  0115CE  0E01               	movlw	1
  7848  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7849  0115D2  0E00               	movlw	0
  7850  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7851  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7852  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7853  0115E2                     	if	0	;tblptru may be non-zero
  7854  0115E2                     	endif
  7855  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7856  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7857  0115E4  6EF8               	movwf	tblptru,c
  7858  0115E6                     	endif
  7859  0115E6  0008               	tblrd		*
  7860  0115E8  50F5               	movf	tablat,w,c
  7861  0115EA  6EE6               	movwf	postinc1,c
  7862  0115EC  0E00               	movlw	0
  7863  0115EE  6EE6               	movwf	postinc1,c
  7864  0115F0  EC0A  F0BA         	call	_tolower	;wreg free
  7865  0115F4  5032               	movf	btemp^0,w,c
  7866  0115F6  6EDF               	movwf	indf2,c
  7867                           
  7868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7869                           ;stkvar	_ct @ sp[(-32)+26]
  7870  0115F8  0EFB               	movlw	251
  7871  0115FA  24E1               	addwf	fsr1l,w,c
  7872  0115FC  6ED9               	movwf	fsr2l,c
  7873  0115FE  0EFF               	movlw	255
  7874  011600  20E2               	addwfc	fsr1h,w,c
  7875  011602  6EDA               	movwf	fsr2h,c
  7876  011604  50DF               	movf	indf2,w,c
  7877  011606  B4D8               	btfsc	status,2,c
  7878  011608  D029               	goto	l10974
  7879                           
  7880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7881                           ;stkvar	_ct @ sp[(-32)+26]
  7882  01160A  0EFC               	movlw	252
  7883  01160C  24E1               	addwf	fsr1l,w,c
  7884  01160E  6ED9               	movwf	fsr2l,c
  7885  011610  0EFF               	movlw	255
  7886  011612  20E2               	addwfc	fsr1h,w,c
  7887  011614  6EDA               	movwf	fsr2h,c
  7888                           
  7889                           ;stkvar	_fmt @ sp[(-32)+-4]
  7890  011616  0EDC               	movlw	-36
  7891  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7892  01161E  0EDD               	movlw	-35
  7893  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7894  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7895  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7896  011632  0E02               	movlw	2
  7897  011634  263C               	addwf	(btemp+10)^0,f,c
  7898  011636  0E00               	movlw	0
  7899  011638  223D               	addwfc	(btemp+11)^0,f,c
  7900  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7901  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7902  011646                     	if	0	;tblptru may be non-zero
  7903  011646                     	endif
  7904  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7905  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7906  011648  6EF8               	movwf	tblptru,c
  7907  01164A                     	endif
  7908  01164A  0008               	tblrd		*
  7909  01164C  50F5               	movf	tablat,w,c
  7910  01164E  6EE6               	movwf	postinc1,c
  7911  011650  0E00               	movlw	0
  7912  011652  6EE6               	movwf	postinc1,c
  7913  011654  EC0A  F0BA         	call	_tolower	;wreg free
  7914  011658  5032               	movf	btemp^0,w,c
  7915  01165A  6EDF               	movwf	indf2,c
  7916  01165C                     l10974:
  7917                           
  7918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7919                           ;stkvar	_fmt @ sp[(-32)+-4]
  7920  01165C  0EDC               	movlw	-36
  7921  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7922  011664  0EDD               	movlw	-35
  7923  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7924  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7925  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7926  011678                     	if	0	;tblptru may be non-zero
  7927  011678                     	endif
  7928  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7929  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7930  01167A  6EF8               	movwf	tblptru,c
  7931  01167C                     	endif
  7932  01167C  0008               	tblrd		*
  7933  01167E  50F5               	movf	tablat,w,c
  7934  011680  0A63               	xorlw	99
  7935  011682  A4D8               	btfss	status,2,c
  7936  011684  D036               	goto	l10984
  7937                           
  7938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7939                           ;stkvar	_fmt @ sp[(-32)+-4]
  7940  011686  0EDC               	movlw	-36
  7941  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7942  01168E  0EDD               	movlw	-35
  7943  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7944  011696  2ADE               	incf	postinc2,f,c
  7945  011698  0E00               	movlw	0
  7946  01169A  22DD               	addwfc	postdec2,f,c
  7947                           
  7948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7949                           ;stkvar	_ap @ sp[(-32)+-6]
  7950  01169C  0EDA               	movlw	-38
  7951  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7952  0116A4  0EDB               	movlw	-37
  7953  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7954  0116AC  0E02               	movlw	2
  7955  0116AE  5EDE               	subwf	postinc2,f,c
  7956  0116B0  0E00               	movlw	0
  7957  0116B2  5ADD               	subwfb	postdec2,f,c
  7958  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7959  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7960  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7961  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7962  0116CC  50DF               	movf	indf2,w,c
  7963  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7964                           
  7965                           ;stkvar	_c @ sp[(-32)+31]
  7966  0116D0  0EFF               	movlw	-1
  7967  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7968                           
  7969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7970                           ;stkvar	_c @ sp[(-32)+31]
  7971  0116D8  0EFF               	movlw	-1
  7972  0116DA  50E3               	movf	plusw1,w,c
  7973  0116DC  6EE6               	movwf	postinc1,c
  7974                           
  7975                           ;stkvar	_fp @ sp[(-33)+-2]
  7976  0116DE  0EDD               	movlw	-35
  7977  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7978  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7979  0116EC  EC84  F0B9         	call	_ctoa	;wreg free
  7980  0116F0  D343               	goto	l2024
  7981  0116F2                     l10984:
  7982                           
  7983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7984                           ;stkvar	_fmt @ sp[(-32)+-4]
  7985  0116F2  0EDC               	movlw	-36
  7986  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7987  0116FA  0EDD               	movlw	-35
  7988  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7989  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7990  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7991  01170E                     	if	0	;tblptru may be non-zero
  7992  01170E                     	endif
  7993  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7994  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7995  011710  6EF8               	movwf	tblptru,c
  7996  011712                     	endif
  7997  011712  0008               	tblrd		*
  7998  011714  50F5               	movf	tablat,w,c
  7999  011716  0A64               	xorlw	100
  8000  011718  B4D8               	btfsc	status,2,c
  8001  01171A  D015               	goto	u11960
  8002                           
  8003                           ;stkvar	_fmt @ sp[(-32)+-4]
  8004  01171C  0EDC               	movlw	-36
  8005  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8006  011724  0EDD               	movlw	-35
  8007  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8008  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8009  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8010  011738                     	if	0	;tblptru may be non-zero
  8011  011738                     	endif
  8012  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8013  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8014  01173A  6EF8               	movwf	tblptru,c
  8015  01173C                     	endif
  8016  01173C  0008               	tblrd		*
  8017  01173E  50F5               	movf	tablat,w,c
  8018  011740  0A69               	xorlw	105
  8019  011742  A4D8               	btfss	status,2,c
  8020  011744  D075               	goto	l10996
  8021  011746                     u11960:
  8022                           
  8023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8024                           ;stkvar	_fmt @ sp[(-32)+-4]
  8025  011746  0EDC               	movlw	-36
  8026  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8027  01174E  0EDD               	movlw	-35
  8028  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8029  011756  2ADE               	incf	postinc2,f,c
  8030  011758  0E00               	movlw	0
  8031  01175A  22DD               	addwfc	postdec2,f,c
  8032                           
  8033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8034                           ;stkvar	_ap @ sp[(-32)+-6]
  8035  01175C  0EDA               	movlw	-38
  8036  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8037  011764  0EDB               	movlw	-37
  8038  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8039  01176C  0E02               	movlw	2
  8040  01176E  5EDE               	subwf	postinc2,f,c
  8041  011770  0E00               	movlw	0
  8042  011772  5ADD               	subwfb	postdec2,f,c
  8043  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8044  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8045  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8046  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8047  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8048  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8049                           
  8050                           ;stkvar	_ll @ sp[(-32)+14]
  8051  011798  0EEE               	movlw	-18
  8052  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8053  0117A0  0EEF               	movlw	-17
  8054  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8055  0117A8  6A32               	clrf	btemp^0,c
  8056  0117AA  BEE3               	btfsc	plusw1,7,c
  8057  0117AC  6832               	setf	btemp^0,c
  8058  0117AE  0EF0               	movlw	-16
  8059  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8060  0117B6  0EF1               	movlw	-15
  8061  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8062  0117BE  0EF2               	movlw	-14
  8063  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8064  0117C6  0EF3               	movlw	-13
  8065  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8066  0117CE  0EF4               	movlw	-12
  8067  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8068  0117D6  0EF5               	movlw	-11
  8069  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8070                           
  8071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8072                           ;stkvar	_ll @ sp[(-32)+14]
  8073  0117DE  50E1               	movf	fsr1l,w,c
  8074  0117E0  0FEE               	addlw	-18
  8075  0117E2  6ED9               	movwf	fsr2l,c
  8076  0117E4  50E2               	movf	fsr1h,w,c
  8077  0117E6  6EDA               	movwf	fsr2h,c
  8078  0117E8  0EFF               	movlw	255
  8079  0117EA  22DA               	addwfc	fsr2h,f,c
  8080  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8081  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8082  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8083  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8084  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8085  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8086  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8087  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8088                           
  8089                           ;stkvar	_fp @ sp[(-40)+-2]
  8090  01181C  0ED6               	movlw	-42
  8091  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8092  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8093  01182A  EC59  F09E         	call	_dtoa	;wreg free
  8094  01182E  D2A4               	goto	l2024
  8095  011830                     l10996:
  8096                           
  8097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8098                           ;stkvar	_ct @ sp[(-32)+26]
  8099  011830  0EFA               	movlw	-6
  8100  011832  006F FF8C  F032    	movff	plusw1,btemp
  8101  011838  0E66               	movlw	102
  8102  01183A  1832               	xorwf	btemp^0,w,c
  8103  01183C  A4D8               	btfss	status,2,c
  8104  01183E  D06E               	goto	l11008
  8105                           
  8106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8107                           ;stkvar	_fmt @ sp[(-32)+-4]
  8108  011840  0EDC               	movlw	-36
  8109  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8110  011848  0EDD               	movlw	-35
  8111  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8112  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8113  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8114  01185C                     	if	0	;tblptru may be non-zero
  8115  01185C                     	endif
  8116  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8117  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8118  01185E  6EF8               	movwf	tblptru,c
  8119  011860                     	endif
  8120                           
  8121                           ;stkvar	_c @ sp[(-32)+31]
  8122  011860  0008               	tblrd		*
  8123  011862  0EFF               	movlw	-1
  8124  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8125                           
  8126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8127                           ;stkvar	_fmt @ sp[(-32)+-4]
  8128  01186A  0EDC               	movlw	-36
  8129  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8130  011872  0EDD               	movlw	-35
  8131  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8132  01187A  2ADE               	incf	postinc2,f,c
  8133  01187C  0E00               	movlw	0
  8134  01187E  22DD               	addwfc	postdec2,f,c
  8135                           
  8136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8137                           ;stkvar	_ap @ sp[(-32)+-6]
  8138  011880  0EDA               	movlw	-38
  8139  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8140  011888  0EDB               	movlw	-37
  8141  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8142  011890  0E04               	movlw	4
  8143  011892  5EDE               	subwf	postinc2,f,c
  8144  011894  0E00               	movlw	0
  8145  011896  5ADD               	subwfb	postdec2,f,c
  8146  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8147  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8148  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8149  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8150  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8151  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8152  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8153  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8154                           
  8155                           ;stkvar	_f @ sp[(-32)+22]
  8156  0118C8  0EF6               	movlw	-10
  8157  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8158  0118D0  0EF7               	movlw	-9
  8159  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8160  0118D8  0EF8               	movlw	-8
  8161  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8162  0118E0  0EF9               	movlw	-7
  8163  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8164  0118E8                     l11004:
  8165                           
  8166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8167                           ;stkvar	_c @ sp[(-32)+31]
  8168  0118E8  0EFF               	movlw	-1
  8169  0118EA  50E3               	movf	plusw1,w,c
  8170  0118EC  6EE6               	movwf	postinc1,c
  8171                           
  8172                           ;stkvar	_f @ sp[(-33)+22]
  8173  0118EE  0EF5               	movlw	-11
  8174  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8175  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8176  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8177  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8178                           
  8179                           ;stkvar	_fp @ sp[(-37)+-2]
  8180  011908  0ED9               	movlw	-39
  8181  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8182  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8183  011916  EC00  F080         	call	_efgtoa	;wreg free
  8184  01191A  D22E               	goto	l2024
  8185  01191C                     l11008:
  8186                           
  8187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8188  01191C  0E02               	movlw	2
  8189  01191E  6EE6               	movwf	postinc1,c
  8190  011920  0E00               	movlw	0
  8191  011922  6EE6               	movwf	postinc1,c
  8192  011924  0EF5               	movlw	low STR_42
  8193  011926  6EE6               	movwf	postinc1,c
  8194  011928  0EFF               	movlw	high STR_42
  8195  01192A  6EE6               	movwf	postinc1,c
  8196                           
  8197                           ;stkvar	_ct @ sp[(-36)+26]
  8198  01192C  0EF6               	movlw	246
  8199  01192E  24E1               	addwf	fsr1l,w,c
  8200  011930  6E32               	movwf	btemp^0,c
  8201  011932  0EFF               	movlw	255
  8202  011934  20E2               	addwfc	fsr1h,w,c
  8203  011936  6E33               	movwf	(btemp+1)^0,c
  8204  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8205  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8206  011944  ECB1  F0AC         	call	_strncmp	;wreg free
  8207  011948  5032               	movf	btemp^0,w,c
  8208  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8209  01194C  A4D8               	btfss	status,2,c
  8210  01194E  D096               	goto	l11028
  8211                           
  8212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8213                           ;stkvar	_fmt @ sp[(-32)+-4]
  8214  011950  0EDC               	movlw	-36
  8215  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8216  011958  0EDD               	movlw	-35
  8217  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8218  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8219  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8220  01196C  0E01               	movlw	1
  8221  01196E  263C               	addwf	(btemp+10)^0,f,c
  8222  011970  0E00               	movlw	0
  8223  011972  223D               	addwfc	(btemp+11)^0,f,c
  8224  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8225  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8226  011980                     	if	0	;tblptru may be non-zero
  8227  011980                     	endif
  8228  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8229  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8230  011982  6EF8               	movwf	tblptru,c
  8231  011984                     	endif
  8232                           
  8233                           ;stkvar	_c @ sp[(-32)+31]
  8234  011984  0008               	tblrd		*
  8235  011986  0EFF               	movlw	-1
  8236  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8237  01198E  0EBF               	movlw	191
  8238  011990  6E3C               	movwf	(btemp+10)^0,c
  8239  011992  0EFF               	movlw	255
  8240  011994  6E3D               	movwf	(btemp+11)^0,c
  8241                           
  8242                           ;stkvar	_fmt @ sp[(-32)+-4]
  8243  011996  0EDC               	movlw	-36
  8244  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8245  01199E  0EDD               	movlw	-35
  8246  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8247  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8248  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8249  0119B2                     	if	0	;tblptru may be non-zero
  8250  0119B2                     	endif
  8251  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8252  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8253  0119B4  6EF8               	movwf	tblptru,c
  8254  0119B6                     	endif
  8255  0119B6  0008               	tblrd		*
  8256  0119B8  50F5               	movf	tablat,w,c
  8257  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8258  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8259  0119BE  503C               	movf	(btemp+10)^0,w,c
  8260  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8261  0119C2  503D               	movf	(btemp+11)^0,w,c
  8262  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8263  0119C6  503B               	movf	(btemp+9)^0,w,c
  8264  0119C8  E106               	bnz	u11990
  8265  0119CA  0E1A               	movlw	26
  8266  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8267  0119CE  B0D8               	btfsc	status,0,c
  8268  0119D0  D002               	goto	u11990
  8269  0119D2  0E01               	movlw	1
  8270  0119D4  D001               	goto	u12000
  8271  0119D6                     u11990:
  8272  0119D6  0E00               	movlw	0
  8273  0119D8                     u12000:
  8274  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8275  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8276                           
  8277                           ;stkvar	_vfpfcnvrt$4432 @ sp[(-32)+2]
  8278  0119DC  0EE2               	movlw	-30
  8279  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8280  0119E4  0EE3               	movlw	-29
  8281  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8282                           
  8283                           ;stkvar	_vfpfcnvrt$4432 @ sp[(-32)+2]
  8284  0119EC  0EE2               	movlw	-30
  8285  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8286  0119F4  0EE3               	movlw	-29
  8287  0119F6  50E3               	movf	plusw1,w,c
  8288  0119F8  1032               	iorwf	btemp^0,w,c
  8289                           
  8290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8291                           ;stkvar	_ap @ sp[(-32)+-6]
  8292                           
  8293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8294                           
  8295                           ;stkvar	_f @ sp[(-32)+22]
  8296                           
  8297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8298                           ;stkvar	_ap @ sp[(-32)+-6]
  8299  0119FA  0EDA               	movlw	-38
  8300  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8301  011A02  0EDB               	movlw	-37
  8302  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8303  011A0A  0E04               	movlw	4
  8304  011A0C  5EDE               	subwf	postinc2,f,c
  8305  011A0E  0E00               	movlw	0
  8306  011A10  5ADD               	subwfb	postdec2,f,c
  8307  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8308  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8309  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8310  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8311  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8312  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8313  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8314  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8315                           
  8316                           ;stkvar	_f @ sp[(-32)+22]
  8317  011A42  0EF6               	movlw	-10
  8318  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8319  011A4A  0EF7               	movlw	-9
  8320  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8321  011A52  0EF8               	movlw	-8
  8322  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8323  011A5A  0EF9               	movlw	-7
  8324  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8325                           
  8326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8327                           ;stkvar	_fmt @ sp[(-32)+-4]
  8328  011A62  0EDC               	movlw	-36
  8329  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8330  011A6A  0EDD               	movlw	-35
  8331  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8332  011A72  0E02               	movlw	2
  8333  011A74  26DE               	addwf	postinc2,f,c
  8334  011A76  0E00               	movlw	0
  8335  011A78  22DD               	addwfc	postdec2,f,c
  8336  011A7A  D736               	goto	l11004
  8337  011A7C                     l11028:
  8338                           
  8339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8340                           ;stkvar	_fmt @ sp[(-32)+-4]
  8341  011A7C  0EDC               	movlw	-36
  8342  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8343  011A84  0EDD               	movlw	-35
  8344  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8345  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8346  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8347  011A98                     	if	0	;tblptru may be non-zero
  8348  011A98                     	endif
  8349  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8350  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8351  011A9A  6EF8               	movwf	tblptru,c
  8352  011A9C                     	endif
  8353  011A9C  0008               	tblrd		*
  8354  011A9E  50F5               	movf	tablat,w,c
  8355  011AA0  0A73               	xorlw	115
  8356  011AA2  A4D8               	btfss	status,2,c
  8357  011AA4  D042               	goto	l11038
  8358                           
  8359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8360                           ;stkvar	_fmt @ sp[(-32)+-4]
  8361  011AA6  0EDC               	movlw	-36
  8362  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8363  011AAE  0EDD               	movlw	-35
  8364  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8365  011AB6  2ADE               	incf	postinc2,f,c
  8366  011AB8  0E00               	movlw	0
  8367  011ABA  22DD               	addwfc	postdec2,f,c
  8368                           
  8369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8370                           ;stkvar	_ap @ sp[(-32)+-6]
  8371  011ABC  0EDA               	movlw	-38
  8372  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8373  011AC4  0EDB               	movlw	-37
  8374  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8375  011ACC  0E02               	movlw	2
  8376  011ACE  5EDE               	subwf	postinc2,f,c
  8377  011AD0  0E00               	movlw	0
  8378  011AD2  5ADD               	subwfb	postdec2,f,c
  8379  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8380  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8381  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8382  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8383  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8384  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8385                           
  8386                           ;stkvar	_cp @ sp[(-32)+29]
  8387  011AF8  0EFE               	movlw	-2
  8388  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8389  011B00  0EFD               	movlw	-3
  8390  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8391                           
  8392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8393                           ;stkvar	_cp @ sp[(-32)+29]
  8394  011B08  0EFD               	movlw	-3
  8395  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8396  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8397                           
  8398                           ;stkvar	_fp @ sp[(-34)+-2]
  8399  011B16  0EDC               	movlw	-36
  8400  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8401  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8402  011B24  ECA2  F0A5         	call	_stoa	;wreg free
  8403  011B28  D127               	goto	l2024
  8404  011B2A                     l11038:
  8405                           
  8406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8407                           ;stkvar	_fmt @ sp[(-32)+-4]
  8408  011B2A  0EDC               	movlw	-36
  8409  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8410  011B32  0EDD               	movlw	-35
  8411  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8412  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8413  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8414  011B46                     	if	0	;tblptru may be non-zero
  8415  011B46                     	endif
  8416  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8417  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8418  011B48  6EF8               	movwf	tblptru,c
  8419  011B4A                     	endif
  8420  011B4A  0008               	tblrd		*
  8421  011B4C  50F5               	movf	tablat,w,c
  8422  011B4E  0A78               	xorlw	120
  8423  011B50  B4D8               	btfsc	status,2,c
  8424  011B52  D015               	goto	u12040
  8425                           
  8426                           ;stkvar	_fmt @ sp[(-32)+-4]
  8427  011B54  0EDC               	movlw	-36
  8428  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8429  011B5C  0EDD               	movlw	-35
  8430  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8431  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8432  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8433  011B70                     	if	0	;tblptru may be non-zero
  8434  011B70                     	endif
  8435  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8436  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8437  011B72  6EF8               	movwf	tblptru,c
  8438  011B74                     	endif
  8439  011B74  0008               	tblrd		*
  8440  011B76  50F5               	movf	tablat,w,c
  8441  011B78  0A58               	xorlw	88
  8442  011B7A  A4D8               	btfss	status,2,c
  8443  011B7C  D094               	goto	l11052
  8444  011B7E                     u12040:
  8445                           
  8446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8447                           ;stkvar	_fmt @ sp[(-32)+-4]
  8448  011B7E  0EDC               	movlw	-36
  8449  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8450  011B86  0EDD               	movlw	-35
  8451  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8452  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8453  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8454  011B9A                     	if	0	;tblptru may be non-zero
  8455  011B9A                     	endif
  8456  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8457  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8458  011B9C  6EF8               	movwf	tblptru,c
  8459  011B9E                     	endif
  8460                           
  8461                           ;stkvar	_c @ sp[(-32)+31]
  8462  011B9E  0008               	tblrd		*
  8463  011BA0  0EFF               	movlw	-1
  8464  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8465                           
  8466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8467                           ;stkvar	_fmt @ sp[(-32)+-4]
  8468  011BA8  0EDC               	movlw	-36
  8469  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8470  011BB0  0EDD               	movlw	-35
  8471  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8472  011BB8  2ADE               	incf	postinc2,f,c
  8473  011BBA  0E00               	movlw	0
  8474  011BBC  22DD               	addwfc	postdec2,f,c
  8475                           
  8476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8477                           ;stkvar	_ap @ sp[(-32)+-6]
  8478  011BBE  0EDA               	movlw	-38
  8479  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8480  011BC6  0EDB               	movlw	-37
  8481  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8482  011BCE  0E02               	movlw	2
  8483  011BD0  5EDE               	subwf	postinc2,f,c
  8484  011BD2  0E00               	movlw	0
  8485  011BD4  5ADD               	subwfb	postdec2,f,c
  8486  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8487  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8488  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8489  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8490  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8491  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8492  011BFA  503C               	movf	(btemp+10)^0,w,c
  8493  011BFC  6E42               	movwf	(btemp+16)^0,c
  8494  011BFE  503D               	movf	(btemp+11)^0,w,c
  8495  011C00  6E43               	movwf	(btemp+17)^0,c
  8496  011C02  6A44               	clrf	(btemp+18)^0,c
  8497  011C04  6A45               	clrf	(btemp+19)^0,c
  8498  011C06  6A46               	clrf	(btemp+20)^0,c
  8499  011C08  6A47               	clrf	(btemp+21)^0,c
  8500  011C0A  6A48               	clrf	(btemp+22)^0,c
  8501  011C0C  6A49               	clrf	(btemp+23)^0,c
  8502                           
  8503                           ;stkvar	_llu @ sp[(-32)+6]
  8504  011C0E  0EE6               	movlw	-26
  8505  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8506  011C16  0EE7               	movlw	-25
  8507  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8508  011C1E  0EE8               	movlw	-24
  8509  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8510  011C26  0EE9               	movlw	-23
  8511  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8512  011C2E  0EEA               	movlw	-22
  8513  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8514  011C36  0EEB               	movlw	-21
  8515  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8516  011C3E  0EEC               	movlw	-20
  8517  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8518  011C46  0EED               	movlw	-19
  8519  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8520                           
  8521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8522                           ;stkvar	_c @ sp[(-32)+31]
  8523  011C4E  0EFF               	movlw	-1
  8524  011C50  50E3               	movf	plusw1,w,c
  8525  011C52  6EE6               	movwf	postinc1,c
  8526                           
  8527                           ;stkvar	_llu @ sp[(-33)+6]
  8528  011C54  50E1               	movf	fsr1l,w,c
  8529  011C56  0FE5               	addlw	-27
  8530  011C58  6ED9               	movwf	fsr2l,c
  8531  011C5A  50E2               	movf	fsr1h,w,c
  8532  011C5C  6EDA               	movwf	fsr2h,c
  8533  011C5E  0EFF               	movlw	255
  8534  011C60  22DA               	addwfc	fsr2h,f,c
  8535  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8536  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8537  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8538  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8539  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8540  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8541  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8542  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8543                           
  8544                           ;stkvar	_fp @ sp[(-41)+-2]
  8545  011C92  0ED5               	movlw	-43
  8546  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8547  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8548  011CA0  EC99  F0A0         	call	_xtoa	;wreg free
  8549  011CA4  D069               	goto	l2024
  8550  011CA6                     l11052:
  8551                           
  8552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8553                           ;stkvar	_fmt @ sp[(-32)+-4]
  8554  011CA6  0EDC               	movlw	-36
  8555  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8556  011CAE  0EDD               	movlw	-35
  8557  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8558  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8559  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8560  011CC2                     	if	0	;tblptru may be non-zero
  8561  011CC2                     	endif
  8562  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8563  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8564  011CC4  6EF8               	movwf	tblptru,c
  8565  011CC6                     	endif
  8566  011CC6  0008               	tblrd		*
  8567  011CC8  50F5               	movf	tablat,w,c
  8568  011CCA  0A25               	xorlw	37
  8569  011CCC  A4D8               	btfss	status,2,c
  8570  011CCE  D01A               	goto	l11062
  8571                           
  8572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8573                           ;stkvar	_fmt @ sp[(-32)+-4]
  8574  011CD0  0EDC               	movlw	-36
  8575  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8576  011CD8  0EDD               	movlw	-35
  8577  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8578  011CE0  2ADE               	incf	postinc2,f,c
  8579  011CE2  0E00               	movlw	0
  8580  011CE4  22DD               	addwfc	postdec2,f,c
  8581                           
  8582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8583                           ;stkvar	_fp @ sp[(-32)+-2]
  8584  011CE6  0EDE               	movlw	-34
  8585  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8586  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8587  011CF4  0E25               	movlw	37
  8588  011CF6  6EE6               	movwf	postinc1,c
  8589  011CF8  0E00               	movlw	0
  8590  011CFA  6EE6               	movwf	postinc1,c
  8591  011CFC  EC8C  F0B2         	call	_fputc	;wreg free
  8592  011D00                     l11058:
  8593                           
  8594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8595  011D00  0E01               	movlw	1
  8596  011D02  D00C               	goto	L6
  8597  011D04                     l11062:
  8598                           
  8599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8600                           ;stkvar	_fmt @ sp[(-32)+-4]
  8601  011D04  0EDC               	movlw	-36
  8602  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8603  011D0C  0EDD               	movlw	-35
  8604  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8605  011D14  2ADE               	incf	postinc2,f,c
  8606  011D16  0E00               	movlw	0
  8607  011D18  22DD               	addwfc	postdec2,f,c
  8608                           
  8609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8610  011D1A  0E00               	movlw	0
  8611  011D1C                     L6:
  8612  011D1C  6E32               	movwf	btemp^0,c
  8613  011D1E  0E00               	movlw	0
  8614  011D20  6E33               	movwf	(btemp+1)^0,c
  8615  011D22  D02A               	goto	l2024
  8616  011D24                     l11068:
  8617                           
  8618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8619                           ;stkvar	_fp @ sp[(-32)+-2]
  8620  011D24  0EDE               	movlw	-34
  8621  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8622  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8623                           
  8624                           ;stkvar	_fmt @ sp[(-34)+-4]
  8625  011D32  0EDA               	movlw	-38
  8626  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8627  011D3A  0EDB               	movlw	-37
  8628  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8629  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8630  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8631  011D4E                     	if	0	;tblptru may be non-zero
  8632  011D4E                     	endif
  8633  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8634  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8635  011D50  6EF8               	movwf	tblptru,c
  8636  011D52                     	endif
  8637  011D52  0008               	tblrd		*
  8638  011D54  50F5               	movf	tablat,w,c
  8639  011D56  6EE6               	movwf	postinc1,c
  8640  011D58  0E00               	movlw	0
  8641  011D5A  6EE6               	movwf	postinc1,c
  8642  011D5C  EC8C  F0B2         	call	_fputc	;wreg free
  8643                           
  8644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8645                           ;stkvar	_fmt @ sp[(-32)+-4]
  8646  011D60  0EDC               	movlw	-36
  8647  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8648  011D68  0EDD               	movlw	-35
  8649  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8650  011D70  2ADE               	incf	postinc2,f,c
  8651  011D72  0E00               	movlw	0
  8652  011D74  22DD               	addwfc	postdec2,f,c
  8653  011D76  D7C4               	goto	l11058
  8654  011D78                     l2024:
  8655                           
  8656                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8657  011D78  0EDA               	movlw	218
  8658  011D7A  26E1               	addwf	fsr1l,f,c
  8659  011D7C  0EFF               	movlw	255
  8660  011D7E  22E2               	addwfc	fsr1h,f,c
  8661  011D80  0012               	return		;funcret
  8662  011D82                     __end_of_vfpfcnvrt:
  8663                           	opt callstack 0
  8664                           
  8665 ;; *************** function _xtoa *****************
  8666 ;; Defined at:
  8667 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8670 ;;		 -> f(6), NULL(0), 
  8671 ;;  d               8  [STACK] unsigned long long 
  8672 ;;  x               1  [STACK] unsigned char 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  n               8  [STACK] unsigned long long 
  8675 ;;  c               2  [STACK] int 
  8676 ;;  i               2  [STACK] int 
  8677 ;;  w               2  [STACK] int 
  8678 ;;  p               2  [STACK] int 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  2  [STACK] int 
  8681 ;; Registers used:
  8682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/5
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8692 ;;Total ram usage:        0 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:   11
  8695 ;; This function calls:
  8696 ;;		_isalpha
  8697 ;;		_isupper
  8698 ;;		_pad
  8699 ;;		_toupper
  8700 ;; This function is called by:
  8701 ;;		_vfpfcnvrt
  8702 ;; This function uses a reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text38
  8706  014132                     __ptext38:
  8707                           	opt callstack 0
  8708  014132                     _xtoa:
  8709                           	opt callstack 0
  8710                           
  8711                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8712  014132  0E14               	movlw	20
  8713  014134  26E1               	addwf	fsr1l,f,c
  8714  014136  0E00               	movlw	0
  8715  014138  22E2               	addwfc	fsr1h,f,c
  8716                           
  8717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8718                           
  8719                           ;incstack = 0
  8720  01413A  AE1E               	btfss	(_prec+1)^0,7,c
  8721                           
  8722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8723  01413C  921F               	bcf	_flags^0,1,c
  8724                           
  8725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8726  01413E  BE1E               	btfsc	(_prec+1)^0,7,c
  8727  014140  D005               	goto	u11520
  8728  014142  501E               	movf	(_prec+1)^0,w,c
  8729  014144  E110               	bnz	l10782
  8730  014146  041D               	decf	_prec^0,w,c
  8731  014148  B0D8               	btfsc	status,0,c
  8732  01414A  D00D               	goto	l10782
  8733  01414C                     u11520:
  8734  01414C  0E01               	movlw	1
  8735  01414E  6E3C               	movwf	(btemp+10)^0,c
  8736  014150  0E00               	movlw	0
  8737  014152  6E3D               	movwf	(btemp+11)^0,c
  8738                           
  8739                           ;stkvar	_p @ sp[(-20)+18]
  8740  014154  0EFE               	movlw	-2
  8741  014156  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8742  01415C  0EFF               	movlw	-1
  8743  01415E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8744  014164  D008               	goto	l1974
  8745  014166                     l10782:
  8746                           
  8747                           ;stkvar	_p @ sp[(-20)+18]
  8748  014166  0EFE               	movlw	-2
  8749  014168  0060  F077  FFE3   	movff	_prec,plusw1
  8750  01416E  0EFF               	movlw	-1
  8751  014170  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8752  014176                     l1974:
  8753                           
  8754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8755                           ;stkvar	_w @ sp[(-20)+16]
  8756  014176  0EFC               	movlw	-4
  8757  014178  0060  F06F  FFE3   	movff	_width,plusw1
  8758  01417E  0EFD               	movlw	-3
  8759  014180  0060  F073  FFE3   	movff	_width+1,plusw1
  8760                           
  8761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8762  014186  A81F               	btfss	_flags^0,4,c
  8763  014188  D00B               	goto	l10788
  8764                           
  8765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8766                           ;stkvar	_w @ sp[(-20)+16]
  8767  01418A  50E1               	movf	fsr1l,w,c
  8768  01418C  0FFC               	addlw	-4
  8769  01418E  6ED9               	movwf	fsr2l,c
  8770  014190  50E2               	movf	fsr1h,w,c
  8771  014192  6EDA               	movwf	fsr2h,c
  8772  014194  0EFF               	movlw	255
  8773  014196  22DA               	addwfc	fsr2h,f,c
  8774  014198  0EFE               	movlw	254
  8775  01419A  26DE               	addwf	postinc2,f,c
  8776  01419C  0EFF               	movlw	255
  8777  01419E  22DD               	addwfc	postdec2,f,c
  8778  0141A0                     l10788:
  8779                           
  8780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8781                           ;stkvar	_d @ sp[(-20)+-10]
  8782  0141A0  0EE2               	movlw	226
  8783  0141A2  24E1               	addwf	fsr1l,w,c
  8784  0141A4  6ED9               	movwf	fsr2l,c
  8785  0141A6  0EFF               	movlw	255
  8786  0141A8  20E2               	addwfc	fsr1h,w,c
  8787  0141AA  6EDA               	movwf	fsr2h,c
  8788                           
  8789                           ;stkvar	_n @ sp[(-20)+4]
  8790  0141AC  0E08               	movlw	8
  8791  0141AE  6E32               	movwf	btemp^0,c
  8792  0141B0  0EF0               	movlw	-16
  8793  0141B2                     us1154999:
  8794  0141B2  006F FF7B FFE3     	movff	postinc2,plusw1
  8795  0141B8  28E8               	incf	wreg,w,c
  8796  0141BA  2E32               	decfsz	btemp^0,f,c
  8797  0141BC  D7FA               	bra	us1154999
  8798                           
  8799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8800  0141BE  0E4F               	movlw	79
  8801  0141C0  6E3C               	movwf	(btemp+10)^0,c
  8802  0141C2  0E00               	movlw	0
  8803  0141C4  6E3D               	movwf	(btemp+11)^0,c
  8804                           
  8805                           ;stkvar	_i @ sp[(-20)+14]
  8806  0141C6  0EFA               	movlw	-6
  8807  0141C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8808  0141CE  0EFB               	movlw	-5
  8809  0141D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8810                           
  8811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8812  0141D6  0102               	movlb	2	; () banked
  8813  0141D8  6B8F               	clrf	(_dbuf+79)& (0+255),b
  8814                           
  8815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8816  0141DA  D0EE               	goto	l10826
  8817  0141DC                     l10794:
  8818                           
  8819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8820                           ;stkvar	_i @ sp[(-20)+14]
  8821  0141DC  50E1               	movf	fsr1l,w,c
  8822  0141DE  0FFA               	addlw	-6
  8823  0141E0  6ED9               	movwf	fsr2l,c
  8824  0141E2  50E2               	movf	fsr1h,w,c
  8825  0141E4  6EDA               	movwf	fsr2h,c
  8826  0141E6  0EFF               	movlw	255
  8827  0141E8  22DA               	addwfc	fsr2h,f,c
  8828  0141EA  06DE               	decf	postinc2,f,c
  8829  0141EC  0E00               	movlw	0
  8830  0141EE  5ADD               	subwfb	postdec2,f,c
  8831                           
  8832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8833                           ;stkvar	_n @ sp[(-20)+4]
  8834  0141F0  0EF0               	movlw	-16
  8835  0141F2  006F FF8C  F03C    	movff	plusw1,btemp+10
  8836  0141F8  0EF1               	movlw	-15
  8837  0141FA  006F FF8C  F03D    	movff	plusw1,btemp+11
  8838  014200  0E0F               	movlw	15
  8839  014202  163C               	andwf	(btemp+10)^0,f,c
  8840  014204  0E00               	movlw	0
  8841  014206  163D               	andwf	(btemp+11)^0,f,c
  8842                           
  8843                           ;stkvar	_c @ sp[(-20)+12]
  8844  014208  0EF8               	movlw	-8
  8845  01420A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8846  014210  0EF9               	movlw	-7
  8847  014212  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8848                           
  8849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8850                           ;stkvar	_c @ sp[(-20)+12]
  8851  014218  0EF9               	movlw	-7
  8852  01421A  BEE3               	btfsc	plusw1,7,c
  8853  01421C  D00F               	goto	l10802
  8854  01421E  0EF9               	movlw	-7
  8855  014220  50E3               	movf	plusw1,w,c
  8856  014222  E108               	bnz	u11550
  8857  014224  0EF8               	movlw	-8
  8858  014226  006F FF8C  F032    	movff	plusw1,btemp
  8859  01422C  0E0A               	movlw	10
  8860  01422E  5E32               	subwf	btemp^0,f,c
  8861  014230  A0D8               	btfss	status,0,c
  8862  014232  D004               	goto	l10802
  8863  014234                     u11550:
  8864                           
  8865                           ;stkvar	_c @ sp[(-20)+12]
  8866  014234  0EF8               	movlw	-8
  8867  014236  50E3               	movf	plusw1,w,c
  8868  014238  0F57               	addlw	87
  8869  01423A  D003               	goto	L7
  8870  01423C                     l10802:
  8871                           
  8872                           ;stkvar	_c @ sp[(-20)+12]
  8873  01423C  0EF8               	movlw	-8
  8874  01423E  50E3               	movf	plusw1,w,c
  8875  014240  0F30               	addlw	48
  8876  014242                     L7:
  8877  014242  6E3C               	movwf	(btemp+10)^0,c
  8878  014244  0EF9               	movlw	-7
  8879  014246  006F FF8C  F03D    	movff	plusw1,btemp+11
  8880  01424C  0E00               	movlw	0
  8881  01424E  223D               	addwfc	(btemp+11)^0,f,c
  8882                           
  8883                           ;stkvar	_c @ sp[(-20)+12]
  8884  014250  0EF8               	movlw	-8
  8885  014252  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8886  014258  0EF9               	movlw	-7
  8887  01425A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8888  014260  0EBF               	movlw	191
  8889  014262  6E3C               	movwf	(btemp+10)^0,c
  8890  014264  0EFF               	movlw	255
  8891  014266  6E3D               	movwf	(btemp+11)^0,c
  8892                           
  8893                           ;stkvar	_x @ sp[(-20)+-11]
  8894  014268  0EE1               	movlw	-31
  8895  01426A  50E3               	movf	plusw1,w,c
  8896  01426C  6E3A               	movwf	(btemp+8)^0,c
  8897  01426E  6A3B               	clrf	(btemp+9)^0,c
  8898  014270  503C               	movf	(btemp+10)^0,w,c
  8899  014272  263A               	addwf	(btemp+8)^0,f,c
  8900  014274  503D               	movf	(btemp+11)^0,w,c
  8901  014276  223B               	addwfc	(btemp+9)^0,f,c
  8902  014278  503B               	movf	(btemp+9)^0,w,c
  8903  01427A  E106               	bnz	u11560
  8904  01427C  0E1A               	movlw	26
  8905  01427E  5C3A               	subwf	(btemp+8)^0,w,c
  8906  014280  B0D8               	btfsc	status,0,c
  8907  014282  D002               	goto	u11560
  8908  014284  0E01               	movlw	1
  8909  014286  D001               	goto	u11570
  8910  014288                     u11560:
  8911  014288  0E00               	movlw	0
  8912  01428A                     u11570:
  8913  01428A  6E3C               	movwf	(btemp+10)^0,c
  8914  01428C  6A3D               	clrf	(btemp+11)^0,c
  8915                           
  8916                           ;stkvar	_xtoa$4410 @ sp[(-20)+2]
  8917  01428E  0EEE               	movlw	-18
  8918  014290  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8919  014296  0EEF               	movlw	-17
  8920  014298  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8921                           
  8922                           ;stkvar	_xtoa$4410 @ sp[(-20)+2]
  8923  01429E  0EEE               	movlw	-18
  8924  0142A0  006F FF8C  F032    	movff	plusw1,btemp
  8925  0142A6  0EEF               	movlw	-17
  8926  0142A8  50E3               	movf	plusw1,w,c
  8927  0142AA  1032               	iorwf	btemp^0,w,c
  8928  0142AC  B4D8               	btfsc	status,2,c
  8929  0142AE  D041               	goto	l10818
  8930  0142B0  0E9F               	movlw	159
  8931  0142B2  6E3C               	movwf	(btemp+10)^0,c
  8932  0142B4  0EFF               	movlw	255
  8933  0142B6  6E3D               	movwf	(btemp+11)^0,c
  8934                           
  8935                           ;stkvar	_c @ sp[(-20)+12]
  8936  0142B8  0EF8               	movlw	-8
  8937  0142BA  006F FF8C  F03A    	movff	plusw1,btemp+8
  8938  0142C0  0EF9               	movlw	-7
  8939  0142C2  006F FF8C  F03B    	movff	plusw1,btemp+9
  8940  0142C8  0E20               	movlw	32
  8941  0142CA  123A               	iorwf	(btemp+8)^0,f,c
  8942  0142CC  0E00               	movlw	0
  8943  0142CE  123B               	iorwf	(btemp+9)^0,f,c
  8944  0142D0  503C               	movf	(btemp+10)^0,w,c
  8945  0142D2  263A               	addwf	(btemp+8)^0,f,c
  8946  0142D4  503D               	movf	(btemp+11)^0,w,c
  8947  0142D6  223B               	addwfc	(btemp+9)^0,f,c
  8948  0142D8  503B               	movf	(btemp+9)^0,w,c
  8949  0142DA  E106               	bnz	u11590
  8950  0142DC  0E1A               	movlw	26
  8951  0142DE  5C3A               	subwf	(btemp+8)^0,w,c
  8952  0142E0  B0D8               	btfsc	status,0,c
  8953  0142E2  D002               	goto	u11590
  8954  0142E4  0E01               	movlw	1
  8955  0142E6  D001               	goto	u11600
  8956  0142E8                     u11590:
  8957  0142E8  0E00               	movlw	0
  8958  0142EA                     u11600:
  8959  0142EA  6E3C               	movwf	(btemp+10)^0,c
  8960  0142EC  6A3D               	clrf	(btemp+11)^0,c
  8961                           
  8962                           ;stkvar	_xtoa$4411 @ sp[(-20)+0]
  8963  0142EE  0EEC               	movlw	-20
  8964  0142F0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8965  0142F6  0EED               	movlw	-19
  8966  0142F8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8967                           
  8968                           ;stkvar	_xtoa$4411 @ sp[(-20)+0]
  8969  0142FE  0EEC               	movlw	-20
  8970  014300  006F FF8C  F032    	movff	plusw1,btemp
  8971  014306  0EED               	movlw	-19
  8972  014308  50E3               	movf	plusw1,w,c
  8973  01430A  1032               	iorwf	btemp^0,w,c
  8974  01430C  B4D8               	btfsc	status,2,c
  8975  01430E  D011               	goto	l10818
  8976                           
  8977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8978                           ;stkvar	_c @ sp[(-20)+12]
  8979  014310  0EF8               	movlw	-8
  8980  014312  006F FF8F FFE6     	movff	plusw1,postinc1
  8981  014318  006F FF8F FFE6     	movff	plusw1,postinc1
  8982  01431E  ECC8  F0B9         	call	_toupper	;wreg free
  8983                           
  8984                           ;stkvar	_c @ sp[(-20)+12]
  8985  014322  0EF8               	movlw	-8
  8986  014324  0060  F0CB  FFE3   	movff	btemp,plusw1
  8987  01432A  0EF9               	movlw	-7
  8988  01432C  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8989  014332                     l10818:
  8990                           
  8991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8992                           ;stkvar	_c @ sp[(-20)+12]
  8993                           ;stkvar	_i @ sp[(-20)+14]
  8994  014332  0EFA               	movlw	-6
  8995  014334  006F FF8C  F03C    	movff	plusw1,btemp+10
  8996  01433A  0EFB               	movlw	-5
  8997  01433C  006F FF8C  F03D    	movff	plusw1,btemp+11
  8998  014342  0E40               	movlw	low _dbuf
  8999  014344  243C               	addwf	(btemp+10)^0,w,c
  9000  014346  6ED9               	movwf	fsr2l,c
  9001  014348  0E02               	movlw	high _dbuf
  9002  01434A  203D               	addwfc	(btemp+11)^0,w,c
  9003  01434C  6EDA               	movwf	fsr2h,c
  9004  01434E  0EF8               	movlw	-8
  9005  014350  006F FF8F FFDF     	movff	plusw1,indf2
  9006                           
  9007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9008                           ;stkvar	_p @ sp[(-20)+18]
  9009  014356  50E1               	movf	fsr1l,w,c
  9010  014358  0FFE               	addlw	-2
  9011  01435A  6ED9               	movwf	fsr2l,c
  9012  01435C  50E2               	movf	fsr1h,w,c
  9013  01435E  6EDA               	movwf	fsr2h,c
  9014  014360  0EFF               	movlw	255
  9015  014362  22DA               	addwfc	fsr2h,f,c
  9016  014364  06DE               	decf	postinc2,f,c
  9017  014366  0E00               	movlw	0
  9018  014368  5ADD               	subwfb	postdec2,f,c
  9019                           
  9020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9021                           ;stkvar	_w @ sp[(-20)+16]
  9022  01436A  50E1               	movf	fsr1l,w,c
  9023  01436C  0FFC               	addlw	-4
  9024  01436E  6ED9               	movwf	fsr2l,c
  9025  014370  50E2               	movf	fsr1h,w,c
  9026  014372  6EDA               	movwf	fsr2h,c
  9027  014374  0EFF               	movlw	255
  9028  014376  22DA               	addwfc	fsr2h,f,c
  9029  014378  06DE               	decf	postinc2,f,c
  9030  01437A  0E00               	movlw	0
  9031  01437C  5ADD               	subwfb	postdec2,f,c
  9032                           
  9033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9034  01437E  0E04               	movlw	4
  9035  014380  6E3D               	movwf	(btemp+11)^0,c
  9036                           
  9037                           ;stkvar	_n @ sp[(-20)+4]
  9038  014382  50E1               	movf	fsr1l,w,c
  9039  014384  0FF0               	addlw	-16
  9040  014386  6ED9               	movwf	fsr2l,c
  9041  014388  50E2               	movf	fsr1h,w,c
  9042  01438A  6EDA               	movwf	fsr2h,c
  9043  01438C  0EFF               	movlw	255
  9044  01438E  22DA               	addwfc	fsr2h,f,c
  9045  014390  283D               	incf	(btemp+11)^0,w,c
  9046  014392  52DE               	movf	postinc2,f,c
  9047  014394  D00F               	goto	u11620
  9048  014396                     u11625:
  9049  014396  52DE               	movf	postinc2,f,c
  9050  014398  52DE               	movf	postinc2,f,c
  9051  01439A  52DE               	movf	postinc2,f,c
  9052  01439C  52DE               	movf	postinc2,f,c
  9053  01439E  52DE               	movf	postinc2,f,c
  9054  0143A0  52DE               	movf	postinc2,f,c
  9055  0143A2  90D8               	bcf	status,0,c
  9056  0143A4  32DD               	rrcf	postdec2,f,c
  9057  0143A6  32DD               	rrcf	postdec2,f,c
  9058  0143A8  32DD               	rrcf	postdec2,f,c
  9059  0143AA  32DD               	rrcf	postdec2,f,c
  9060  0143AC  32DD               	rrcf	postdec2,f,c
  9061  0143AE  32DD               	rrcf	postdec2,f,c
  9062  0143B0  32DD               	rrcf	postdec2,f,c
  9063  0143B2  32DE               	rrcf	postinc2,f,c
  9064  0143B4                     u11620:
  9065  0143B4  2EE8               	decfsz	wreg,f,c
  9066  0143B6  D7EF               	goto	u11625
  9067  0143B8                     l10826:
  9068                           
  9069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9070                           ;stkvar	_i @ sp[(-20)+14]
  9071  0143B8  0EFB               	movlw	-5
  9072  0143BA  BEE3               	btfsc	plusw1,7,c
  9073  0143BC  D03A               	goto	u11670
  9074  0143BE  0EFB               	movlw	-5
  9075  0143C0  50E3               	movf	plusw1,w,c
  9076  0143C2  E108               	bnz	u11630
  9077  0143C4  0EFA               	movlw	-6
  9078  0143C6  006F FF8C  F032    	movff	plusw1,btemp
  9079  0143CC  0E02               	movlw	2
  9080  0143CE  5E32               	subwf	btemp^0,f,c
  9081  0143D0  A0D8               	btfss	status,0,c
  9082  0143D2  D02F               	goto	u11670
  9083  0143D4                     u11630:
  9084                           
  9085                           ;stkvar	_n @ sp[(-20)+4]
  9086  0143D4  0EF0               	movlw	-16
  9087  0143D6  50E3               	movf	plusw1,w,c
  9088  0143D8  E115               	bnz	u11641
  9089  0143DA  0EF1               	movlw	-15
  9090  0143DC  50E3               	movf	plusw1,w,c
  9091  0143DE  E112               	bnz	u11641
  9092  0143E0  0EF2               	movlw	-14
  9093  0143E2  50E3               	movf	plusw1,w,c
  9094  0143E4  E10F               	bnz	u11641
  9095  0143E6  0EF3               	movlw	-13
  9096  0143E8  50E3               	movf	plusw1,w,c
  9097  0143EA  E10C               	bnz	u11641
  9098  0143EC  0EF4               	movlw	-12
  9099  0143EE  50E3               	movf	plusw1,w,c
  9100  0143F0  E109               	bnz	u11641
  9101  0143F2  0EF5               	movlw	-11
  9102  0143F4  50E3               	movf	plusw1,w,c
  9103  0143F6  E106               	bnz	u11641
  9104  0143F8  0EF6               	movlw	-10
  9105  0143FA  50E3               	movf	plusw1,w,c
  9106  0143FC  E103               	bnz	u11641
  9107  0143FE  0EF7               	movlw	-9
  9108  014400  50E3               	movf	plusw1,w,c
  9109  014402  A4D8               	btfss	status,2,c
  9110  014404                     u11641:
  9111  014404  D6EB               	goto	l10794
  9112                           
  9113                           ;stkvar	_p @ sp[(-20)+18]
  9114  014406  0EFF               	movlw	-1
  9115  014408  BEE3               	btfsc	plusw1,7,c
  9116  01440A  D007               	goto	u11650
  9117  01440C  0EFF               	movlw	-1
  9118  01440E  50E3               	movf	plusw1,w,c
  9119  014410  E103               	bnz	u11651
  9120  014412  0EFE               	movlw	-2
  9121  014414  04E3               	decf	plusw1,w,c
  9122  014416  B0D8               	btfsc	status,0,c
  9123  014418                     u11651:
  9124  014418  D6E1               	goto	l10794
  9125  01441A                     u11650:
  9126                           
  9127                           ;stkvar	_w @ sp[(-20)+16]
  9128  01441A  0EFD               	movlw	-3
  9129  01441C  BEE3               	btfsc	plusw1,7,c
  9130  01441E  D009               	goto	u11670
  9131  014420  0EFD               	movlw	-3
  9132  014422  50E3               	movf	plusw1,w,c
  9133  014424  E104               	bnz	u11660
  9134  014426  0EFC               	movlw	-4
  9135  014428  04E3               	decf	plusw1,w,c
  9136  01442A  A0D8               	btfss	status,0,c
  9137  01442C  D002               	goto	u11670
  9138  01442E                     u11660:
  9139  01442E  B21F               	btfsc	_flags^0,1,c
  9140  014430  D6D5               	goto	l10794
  9141  014432                     u11670:
  9142                           
  9143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9144  014432  A81F               	btfss	_flags^0,4,c
  9145  014434  D036               	goto	l10842
  9146                           
  9147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9148                           ;stkvar	_i @ sp[(-20)+14]
  9149  014436  50E1               	movf	fsr1l,w,c
  9150  014438  0FFA               	addlw	-6
  9151  01443A  6ED9               	movwf	fsr2l,c
  9152  01443C  50E2               	movf	fsr1h,w,c
  9153  01443E  6EDA               	movwf	fsr2h,c
  9154  014440  0EFF               	movlw	255
  9155  014442  22DA               	addwfc	fsr2h,f,c
  9156  014444  06DE               	decf	postinc2,f,c
  9157  014446  0E00               	movlw	0
  9158  014448  5ADD               	subwfb	postdec2,f,c
  9159                           
  9160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9161                           ;stkvar	_x @ sp[(-20)+-11]
  9162                           ;stkvar	_i @ sp[(-20)+14]
  9163  01444A  0EFA               	movlw	-6
  9164  01444C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9165  014452  0EFB               	movlw	-5
  9166  014454  006F FF8C  F03D    	movff	plusw1,btemp+11
  9167  01445A  0E40               	movlw	low _dbuf
  9168  01445C  243C               	addwf	(btemp+10)^0,w,c
  9169  01445E  6ED9               	movwf	fsr2l,c
  9170  014460  0E02               	movlw	high _dbuf
  9171  014462  203D               	addwfc	(btemp+11)^0,w,c
  9172  014464  6EDA               	movwf	fsr2h,c
  9173  014466  0EE1               	movlw	-31
  9174  014468  006F FF8F FFDF     	movff	plusw1,indf2
  9175                           
  9176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9177                           ;stkvar	_i @ sp[(-20)+14]
  9178  01446E  50E1               	movf	fsr1l,w,c
  9179  014470  0FFA               	addlw	-6
  9180  014472  6ED9               	movwf	fsr2l,c
  9181  014474  50E2               	movf	fsr1h,w,c
  9182  014476  6EDA               	movwf	fsr2h,c
  9183  014478  0EFF               	movlw	255
  9184  01447A  22DA               	addwfc	fsr2h,f,c
  9185  01447C  06DE               	decf	postinc2,f,c
  9186  01447E  0E00               	movlw	0
  9187  014480  5ADD               	subwfb	postdec2,f,c
  9188                           
  9189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9190                           ;stkvar	_i @ sp[(-20)+14]
  9191  014482  0EFA               	movlw	-6
  9192  014484  006F FF8C  F03C    	movff	plusw1,btemp+10
  9193  01448A  0EFB               	movlw	-5
  9194  01448C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9195  014492  0E40               	movlw	low _dbuf
  9196  014494  243C               	addwf	(btemp+10)^0,w,c
  9197  014496  6ED9               	movwf	fsr2l,c
  9198  014498  0E02               	movlw	high _dbuf
  9199  01449A  203D               	addwfc	(btemp+11)^0,w,c
  9200  01449C  6EDA               	movwf	fsr2h,c
  9201  01449E  0E30               	movlw	48
  9202  0144A0  6EDF               	movwf	indf2,c
  9203  0144A2                     l10842:
  9204                           
  9205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9206                           ;stkvar	_w @ sp[(-20)+16]
  9207  0144A2  0EFC               	movlw	-4
  9208  0144A4  006F FF8F FFE6     	movff	plusw1,postinc1
  9209  0144AA  006F FF8F FFE6     	movff	plusw1,postinc1
  9210                           
  9211                           ;stkvar	_i @ sp[(-22)+14]
  9212  0144B0  0E40               	movlw	low _dbuf
  9213  0144B2  6E3C               	movwf	(btemp+10)^0,c
  9214  0144B4  0E02               	movlw	high _dbuf
  9215  0144B6  6E3D               	movwf	(btemp+11)^0,c
  9216  0144B8  0EF8               	movlw	-8
  9217  0144BA  50E3               	movf	plusw1,w,c
  9218  0144BC  263C               	addwf	(btemp+10)^0,f,c
  9219  0144BE  0EF9               	movlw	-7
  9220  0144C0  50E3               	movf	plusw1,w,c
  9221  0144C2  223D               	addwfc	(btemp+11)^0,f,c
  9222  0144C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9223  0144CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9224                           
  9225                           ;stkvar	_fp @ sp[(-24)+-2]
  9226  0144D0  0EE6               	movlw	-26
  9227  0144D2  006F FF8F FFE6     	movff	plusw1,postinc1
  9228  0144D8  006F FF8F FFE6     	movff	plusw1,postinc1
  9229  0144DE  ECAA  F0B3         	call	_pad	;wreg free
  9230                           
  9231                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9232  0144E2  0EE1               	movlw	225
  9233  0144E4  26E1               	addwf	fsr1l,f,c
  9234  0144E6  0EFF               	movlw	255
  9235  0144E8  22E2               	addwfc	fsr1h,f,c
  9236  0144EA  0012               	return		;funcret
  9237  0144EC                     __end_of_xtoa:
  9238                           	opt callstack 0
  9239                           
  9240 ;; *************** function _toupper *****************
  9241 ;; Defined at:
  9242 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  c               2  [STACK] int 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  2  [STACK] int 
  9249 ;; Registers used:
  9250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/2
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9260 ;;Total ram usage:        0 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    7
  9263 ;; This function calls:
  9264 ;;		_islower
  9265 ;; This function is called by:
  9266 ;;		_xtoa
  9267 ;; This function uses a reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text39
  9271  017390                     __ptext39:
  9272                           	opt callstack 0
  9273  017390                     _toupper:
  9274                           	opt callstack 0
  9275                           
  9276                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9277  017390  52E6               	movf	postinc1,f,c
  9278  017392  52E6               	movf	postinc1,f,c
  9279                           
  9280                           ;stkvar	_c @ sp[(-2)+-2]
  9281                           
  9282                           ;incstack = 0
  9283  017394  0EFC               	movlw	-4
  9284  017396  50E3               	movf	plusw1,w,c
  9285  017398  0F9F               	addlw	159
  9286  01739A  6E3C               	movwf	(btemp+10)^0,c
  9287  01739C  0EFD               	movlw	-3
  9288  01739E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9289  0173A4  0EFF               	movlw	255
  9290  0173A6  223D               	addwfc	(btemp+11)^0,f,c
  9291  0173A8  503D               	movf	(btemp+11)^0,w,c
  9292  0173AA  E106               	bnz	u9620
  9293  0173AC  0E1A               	movlw	26
  9294  0173AE  5C3C               	subwf	(btemp+10)^0,w,c
  9295  0173B0  B0D8               	btfsc	status,0,c
  9296  0173B2  D002               	goto	u9620
  9297  0173B4  0E01               	movlw	1
  9298  0173B6  D001               	goto	u9630
  9299  0173B8                     u9620:
  9300  0173B8  0E00               	movlw	0
  9301  0173BA                     u9630:
  9302  0173BA  6E3C               	movwf	(btemp+10)^0,c
  9303  0173BC  6A3D               	clrf	(btemp+11)^0,c
  9304                           
  9305                           ;stkvar	_toupper$5071 @ sp[(-2)+0]
  9306  0173BE  0EFE               	movlw	-2
  9307  0173C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9308  0173C6  0EFF               	movlw	-1
  9309  0173C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9310                           
  9311                           ;stkvar	_toupper$5071 @ sp[(-2)+0]
  9312  0173CE  0EFE               	movlw	-2
  9313  0173D0  006F FF8C  F032    	movff	plusw1,btemp
  9314  0173D6  0EFF               	movlw	-1
  9315  0173D8  50E3               	movf	plusw1,w,c
  9316  0173DA  1032               	iorwf	btemp^0,w,c
  9317  0173DC  B4D8               	btfsc	status,2,c
  9318  0173DE  D00D               	goto	l9744
  9319                           
  9320                           ;stkvar	_c @ sp[(-2)+-2]
  9321  0173E0  0EFC               	movlw	-4
  9322  0173E2  006F FF8C  F032    	movff	plusw1,btemp
  9323  0173E8  0EFD               	movlw	-3
  9324  0173EA  006F FF8C  F033    	movff	plusw1,btemp+1
  9325  0173F0  0E5F               	movlw	95
  9326  0173F2  1632               	andwf	btemp^0,f,c
  9327  0173F4  0E00               	movlw	0
  9328  0173F6  1633               	andwf	(btemp+1)^0,f,c
  9329  0173F8  D008               	goto	l2907
  9330  0173FA                     l9744:
  9331                           
  9332                           ;stkvar	_c @ sp[(-2)+-2]
  9333  0173FA  0EFC               	movlw	-4
  9334  0173FC  006F FF8C  F032    	movff	plusw1,btemp
  9335  017402  0EFD               	movlw	-3
  9336  017404  006F FF8C  F033    	movff	plusw1,btemp+1
  9337  01740A                     l2907:
  9338                           
  9339                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9340  01740A  52E5               	movf	postdec1,f,c
  9341  01740C  52E5               	movf	postdec1,f,c
  9342  01740E  52E5               	movf	postdec1,f,c
  9343  017410  52E5               	movf	postdec1,f,c
  9344  017412  0012               	return		;funcret
  9345  017414                     __end_of_toupper:
  9346                           	opt callstack 0
  9347                           
  9348 ;; *************** function _islower *****************
  9349 ;; Defined at:
  9350 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  c               2  [STACK] int 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2  [STACK] int 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    6
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_toupper
  9375 ;; This function uses a reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text40
  9379  017EC2                     __ptext40:
  9380                           	opt callstack 0
  9381  017EC2                     _islower:
  9382                           	opt callstack 16
  9383                           
  9384                           ;stkvar	_c @ sp[(0)+-2]
  9385                           
  9386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9387                           ;incstack = 0
  9388  017EC2  0EFE               	movlw	-2
  9389  017EC4  50E3               	movf	plusw1,w,c
  9390  017EC6  0F9F               	addlw	159
  9391  017EC8  6E3C               	movwf	(btemp+10)^0,c
  9392  017ECA  0EFF               	movlw	-1
  9393  017ECC  006F FF8C  F03D    	movff	plusw1,btemp+11
  9394  017ED2  0EFF               	movlw	255
  9395  017ED4  223D               	addwfc	(btemp+11)^0,f,c
  9396  017ED6  503D               	movf	(btemp+11)^0,w,c
  9397  017ED8  E106               	bnz	u9310
  9398  017EDA  0E1A               	movlw	26
  9399  017EDC  5C3C               	subwf	(btemp+10)^0,w,c
  9400  017EDE  B0D8               	btfsc	status,0,c
  9401  017EE0  D002               	goto	u9310
  9402  017EE2  0E01               	movlw	1
  9403  017EE4  D001               	goto	u9320
  9404  017EE6                     u9310:
  9405  017EE6  0E00               	movlw	0
  9406  017EE8                     u9320:
  9407  017EE8  6E32               	movwf	btemp^0,c
  9408  017EEA  6A33               	clrf	(btemp+1)^0,c
  9409                           
  9410                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9411  017EEC  52E5               	movf	postdec1,f,c
  9412  017EEE  52E5               	movf	postdec1,f,c
  9413  017EF0  0012               	return		;funcret
  9414  017EF2                     __end_of_islower:
  9415                           	opt callstack 0
  9416                           
  9417 ;; *************** function _isalpha *****************
  9418 ;; Defined at:
  9419 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  c               2  [STACK] int 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  2  [STACK] int 
  9426 ;; Registers used:
  9427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:    6
  9440 ;; This function calls:
  9441 ;;		Nothing
  9442 ;; This function is called by:
  9443 ;;		_xtoa
  9444 ;; This function uses a reentrant model
  9445 ;;
  9446                           
  9447                           	psect	text41
  9448  017C74                     __ptext41:
  9449                           	opt callstack 0
  9450  017C74                     _isalpha:
  9451                           	opt callstack 17
  9452                           
  9453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9454                           ;incstack = 0
  9455  017C74  0E9F               	movlw	159
  9456  017C76  6E3C               	movwf	(btemp+10)^0,c
  9457  017C78  0EFF               	movlw	255
  9458  017C7A  6E3D               	movwf	(btemp+11)^0,c
  9459                           
  9460                           ;stkvar	_c @ sp[(0)+-2]
  9461  017C7C  0EFE               	movlw	-2
  9462  017C7E  006F FF8C  F03A    	movff	plusw1,btemp+8
  9463  017C84  0EFF               	movlw	-1
  9464  017C86  006F FF8C  F03B    	movff	plusw1,btemp+9
  9465  017C8C  0E20               	movlw	32
  9466  017C8E  123A               	iorwf	(btemp+8)^0,f,c
  9467  017C90  0E00               	movlw	0
  9468  017C92  123B               	iorwf	(btemp+9)^0,f,c
  9469  017C94  503C               	movf	(btemp+10)^0,w,c
  9470  017C96  263A               	addwf	(btemp+8)^0,f,c
  9471  017C98  503D               	movf	(btemp+11)^0,w,c
  9472  017C9A  223B               	addwfc	(btemp+9)^0,f,c
  9473  017C9C  503B               	movf	(btemp+9)^0,w,c
  9474  017C9E  E106               	bnz	u9600
  9475  017CA0  0E1A               	movlw	26
  9476  017CA2  5C3A               	subwf	(btemp+8)^0,w,c
  9477  017CA4  B0D8               	btfsc	status,0,c
  9478  017CA6  D002               	goto	u9600
  9479  017CA8  0E01               	movlw	1
  9480  017CAA  D001               	goto	u9610
  9481  017CAC                     u9600:
  9482  017CAC  0E00               	movlw	0
  9483  017CAE                     u9610:
  9484  017CAE  6E32               	movwf	btemp^0,c
  9485  017CB0  6A33               	clrf	(btemp+1)^0,c
  9486                           
  9487                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9488  017CB2  52E5               	movf	postdec1,f,c
  9489  017CB4  52E5               	movf	postdec1,f,c
  9490  017CB6  0012               	return		;funcret
  9491  017CB8                     __end_of_isalpha:
  9492                           	opt callstack 0
  9493                           
  9494 ;; *************** function _strncmp *****************
  9495 ;; Defined at:
  9496 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;  _l              2  [STACK] PTR const unsigned char 
  9499 ;;		 -> ct(3), 
  9500 ;;  _r              2  [STACK] PTR const unsigned char 
  9501 ;;		 -> STR_44(3), 
  9502 ;;  n               2  [STACK] unsigned int 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  r               2  [STACK] PTR const unsigned char 
  9505 ;;		 -> STR_44(3), 
  9506 ;;  l               2  [STACK] PTR const unsigned char 
  9507 ;;		 -> ct(3), 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  2  [STACK] int 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/5
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    6
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_vfpfcnvrt
  9528 ;; This function uses a reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text42
  9532  015962                     __ptext42:
  9533                           	opt callstack 0
  9534  015962                     _strncmp:
  9535                           	opt callstack 0
  9536                           
  9537                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9538  015962  52E6               	movf	postinc1,f,c
  9539  015964  52E6               	movf	postinc1,f,c
  9540  015966  52E6               	movf	postinc1,f,c
  9541  015968  52E6               	movf	postinc1,f,c
  9542                           
  9543                           ;stkvar	__l @ sp[(-4)+-2]
  9544                           
  9545                           ;incstack = 0
  9546  01596A  0EFA               	movlw	-6
  9547  01596C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9548  015972  0EFB               	movlw	-5
  9549  015974  006F FF8C  F03D    	movff	plusw1,btemp+11
  9550                           
  9551                           ;stkvar	_l @ sp[(-4)+2]
  9552  01597A  0EFF               	movlw	-1
  9553  01597C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9554  015982  0EFE               	movlw	-2
  9555  015984  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9556                           
  9557                           ;stkvar	__r @ sp[(-4)+-4]
  9558  01598A  0EF8               	movlw	-8
  9559  01598C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9560  015992  0EF9               	movlw	-7
  9561  015994  006F FF8C  F03D    	movff	plusw1,btemp+11
  9562                           
  9563                           ;stkvar	_r @ sp[(-4)+0]
  9564  01599A  0EFD               	movlw	-3
  9565  01599C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9566  0159A2  0EFC               	movlw	-4
  9567  0159A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9568                           
  9569                           ;stkvar	_n @ sp[(-4)+-6]
  9570  0159AA  0EF6               	movlw	-10
  9571  0159AC  006F FF8C  F032    	movff	plusw1,btemp
  9572  0159B2  0E01               	movlw	1
  9573  0159B4  5E32               	subwf	btemp^0,f,c
  9574  0159B6  0EF6               	movlw	-10
  9575  0159B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9576  0159BE  0EF7               	movlw	-9
  9577  0159C0  006F FF8C  F032    	movff	plusw1,btemp
  9578  0159C6  0E00               	movlw	0
  9579  0159C8  5A32               	subwfb	btemp^0,f,c
  9580  0159CA  0EF7               	movlw	-9
  9581  0159CC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9582  0159D2  0EF6               	movlw	-10
  9583  0159D4  28E3               	incf	plusw1,w,c
  9584  0159D6  E13F               	bnz	l10902
  9585  0159D8  0EF7               	movlw	-9
  9586  0159DA  28E3               	incf	plusw1,w,c
  9587  0159DC  A4D8               	btfss	status,2,c
  9588  0159DE  D03B               	goto	l10902
  9589  0159E0  0E00               	movlw	0
  9590  0159E2  6E32               	movwf	btemp^0,c
  9591  0159E4  0E00               	movlw	0
  9592  0159E6  6E33               	movwf	(btemp+1)^0,c
  9593  0159E8  D09B               	goto	l2879
  9594  0159EA                     l10900:
  9595                           
  9596                           ;stkvar	_l @ sp[(-4)+2]
  9597  0159EA  0EFE               	movlw	-2
  9598  0159EC  50E3               	movf	plusw1,w,c
  9599  0159EE  0F01               	addlw	1
  9600  0159F0  6E32               	movwf	btemp^0,c
  9601  0159F2  0EFE               	movlw	-2
  9602  0159F4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9603  0159FA  6A32               	clrf	btemp^0,c
  9604  0159FC  0EFF               	movlw	-1
  9605  0159FE  50E3               	movf	plusw1,w,c
  9606  015A00  2032               	addwfc	btemp^0,w,c
  9607  015A02  6E32               	movwf	btemp^0,c
  9608  015A04  0EFF               	movlw	-1
  9609  015A06  0060  F0CB  FFE3   	movff	btemp,plusw1
  9610                           
  9611                           ;stkvar	_r @ sp[(-4)+0]
  9612  015A0C  0EFC               	movlw	-4
  9613  015A0E  50E3               	movf	plusw1,w,c
  9614  015A10  0F01               	addlw	1
  9615  015A12  6E32               	movwf	btemp^0,c
  9616  015A14  0EFC               	movlw	-4
  9617  015A16  0060  F0CB  FFE3   	movff	btemp,plusw1
  9618  015A1C  6A32               	clrf	btemp^0,c
  9619  015A1E  0EFD               	movlw	-3
  9620  015A20  50E3               	movf	plusw1,w,c
  9621  015A22  2032               	addwfc	btemp^0,w,c
  9622  015A24  6E32               	movwf	btemp^0,c
  9623  015A26  0EFD               	movlw	-3
  9624  015A28  0060  F0CB  FFE3   	movff	btemp,plusw1
  9625                           
  9626                           ;stkvar	_n @ sp[(-4)+-6]
  9627  015A2E  0EF6               	movlw	-10
  9628  015A30  006F FF8C  F032    	movff	plusw1,btemp
  9629  015A36  0E01               	movlw	1
  9630  015A38  5E32               	subwf	btemp^0,f,c
  9631  015A3A  0EF6               	movlw	-10
  9632  015A3C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9633  015A42  0EF7               	movlw	-9
  9634  015A44  006F FF8C  F032    	movff	plusw1,btemp
  9635  015A4A  0E00               	movlw	0
  9636  015A4C  5A32               	subwfb	btemp^0,f,c
  9637  015A4E  0EF7               	movlw	-9
  9638  015A50  0060  F0CB  FFE3   	movff	btemp,plusw1
  9639  015A56                     l10902:
  9640                           
  9641                           ;stkvar	_l @ sp[(-4)+2]
  9642  015A56  0EFE               	movlw	-2
  9643  015A58  006F FF8F FFD9     	movff	plusw1,fsr2l
  9644  015A5E  0EFF               	movlw	-1
  9645  015A60  006F FF8F FFDA     	movff	plusw1,fsr2h
  9646  015A66  50DF               	movf	indf2,w,c
  9647  015A68  B4D8               	btfsc	status,2,c
  9648  015A6A  D03B               	goto	u11800
  9649                           
  9650                           ;stkvar	_r @ sp[(-4)+0]
  9651  015A6C  50E1               	movf	fsr1l,w,c
  9652  015A6E  0FFC               	addlw	-4
  9653  015A70  6ED9               	movwf	fsr2l,c
  9654  015A72  50E2               	movf	fsr1h,w,c
  9655  015A74  6EDA               	movwf	fsr2h,c
  9656  015A76  0EFF               	movlw	255
  9657  015A78  22DA               	addwfc	fsr2h,f,c
  9658  015A7A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9659  015A80  006F FF77 FFF7     	movff	postdec2,tblptrh
  9660  015A86                     	if	0	;tblptru may be non-zero
  9661  015A86                     	endif
  9662  015A86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9663  015A86  0E00               	movlw	low (__mediumconst shr (0+16))
  9664  015A88  6EF8               	movwf	tblptru,c
  9665  015A8A                     	endif
  9666  015A8A  0008               	tblrd		*
  9667  015A8C  50F5               	movf	tablat,w,c
  9668  015A8E  0900               	iorlw	0
  9669  015A90  B4D8               	btfsc	status,2,c
  9670  015A92  D027               	goto	u11800
  9671                           
  9672                           ;stkvar	_n @ sp[(-4)+-6]
  9673  015A94  0EF6               	movlw	-10
  9674  015A96  006F FF8C  F032    	movff	plusw1,btemp
  9675  015A9C  0EF7               	movlw	-9
  9676  015A9E  50E3               	movf	plusw1,w,c
  9677  015AA0  1032               	iorwf	btemp^0,w,c
  9678  015AA2  B4D8               	btfsc	status,2,c
  9679  015AA4  D01E               	goto	u11800
  9680                           
  9681                           ;stkvar	_l @ sp[(-4)+2]
  9682  015AA6  0EFE               	movlw	-2
  9683  015AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9684  015AAE  0EFF               	movlw	-1
  9685  015AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9686  015AB6  50DF               	movf	indf2,w,c
  9687  015AB8  6E3D               	movwf	(btemp+11)^0,c
  9688                           
  9689                           ;stkvar	_r @ sp[(-4)+0]
  9690  015ABA  50E1               	movf	fsr1l,w,c
  9691  015ABC  0FFC               	addlw	-4
  9692  015ABE  6ED9               	movwf	fsr2l,c
  9693  015AC0  50E2               	movf	fsr1h,w,c
  9694  015AC2  6EDA               	movwf	fsr2h,c
  9695  015AC4  0EFF               	movlw	255
  9696  015AC6  22DA               	addwfc	fsr2h,f,c
  9697  015AC8  006F FF7B FFF6     	movff	postinc2,tblptrl
  9698  015ACE  006F FF77 FFF7     	movff	postdec2,tblptrh
  9699  015AD4                     	if	0	;tblptru may be non-zero
  9700  015AD4                     	endif
  9701  015AD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9702  015AD4  0E00               	movlw	low (__mediumconst shr (0+16))
  9703  015AD6  6EF8               	movwf	tblptru,c
  9704  015AD8                     	endif
  9705  015AD8  0008               	tblrd		*
  9706  015ADA  50F5               	movf	tablat,w,c
  9707  015ADC  183D               	xorwf	(btemp+11)^0,w,c
  9708  015ADE  B4D8               	btfsc	status,2,c
  9709  015AE0  D784               	goto	l10900
  9710  015AE2                     u11800:
  9711                           
  9712                           ;stkvar	_l @ sp[(-4)+2]
  9713  015AE2  0EFE               	movlw	-2
  9714  015AE4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9715  015AEA  0EFF               	movlw	-1
  9716  015AEC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9717  015AF2  50DF               	movf	indf2,w,c
  9718  015AF4  6E32               	movwf	btemp^0,c
  9719  015AF6  6A33               	clrf	(btemp+1)^0,c
  9720                           
  9721                           ;stkvar	_r @ sp[(-4)+0]
  9722  015AF8  50E1               	movf	fsr1l,w,c
  9723  015AFA  0FFC               	addlw	-4
  9724  015AFC  6ED9               	movwf	fsr2l,c
  9725  015AFE  50E2               	movf	fsr1h,w,c
  9726  015B00  6EDA               	movwf	fsr2h,c
  9727  015B02  0EFF               	movlw	255
  9728  015B04  22DA               	addwfc	fsr2h,f,c
  9729  015B06  006F FF7B FFF6     	movff	postinc2,tblptrl
  9730  015B0C  006F FF77 FFF7     	movff	postdec2,tblptrh
  9731  015B12                     	if	0	;tblptru may be non-zero
  9732  015B12                     	endif
  9733  015B12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9734  015B12  0E00               	movlw	low (__mediumconst shr (0+16))
  9735  015B14  6EF8               	movwf	tblptru,c
  9736  015B16                     	endif
  9737  015B16  0008               	tblrd		*
  9738  015B18  50F5               	movf	tablat,w,c
  9739  015B1A  5E32               	subwf	btemp^0,f,c
  9740  015B1C  0E00               	movlw	0
  9741  015B1E  5A33               	subwfb	(btemp+1)^0,f,c
  9742  015B20                     l2879:
  9743                           
  9744                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9745  015B20  0EF6               	movlw	246
  9746  015B22  26E1               	addwf	fsr1l,f,c
  9747  015B24  0EFF               	movlw	255
  9748  015B26  22E2               	addwfc	fsr1h,f,c
  9749  015B28  0012               	return		;funcret
  9750  015B2A                     __end_of_strncmp:
  9751                           	opt callstack 0
  9752                           
  9753 ;; *************** function _stoa *****************
  9754 ;; Defined at:
  9755 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9758 ;;		 -> f(6), NULL(0), 
  9759 ;;  s               2  [STACK] PTR unsigned char 
  9760 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  9761 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9762 ;;		 -> STR_3(5), V(187), 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  nuls            7  [STACK] unsigned char [7]
  9765 ;;  l               2  [STACK] int 
  9766 ;;  p               2  [STACK] int 
  9767 ;;  cp              2  [STACK] PTR unsigned char 
  9768 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
  9769 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
  9770 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9771 ;;  w               2  [STACK] int 
  9772 ;;  i               2  [STACK] int 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  2  [STACK] int 
  9775 ;; Registers used:
  9776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/5
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9786 ;;Total ram usage:        0 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    9
  9789 ;; This function calls:
  9790 ;;		_fputc
  9791 ;;		_strlen
  9792 ;; This function is called by:
  9793 ;;		_vfpfcnvrt
  9794 ;; This function uses a reentrant model
  9795 ;;
  9796                           
  9797                           	psect	text43
  9798  014B44                     __ptext43:
  9799                           	opt callstack 0
  9800  014B44                     _stoa:
  9801                           	opt callstack 0
  9802                           
  9803                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9804  014B44  0E11               	movlw	17
  9805  014B46  26E1               	addwf	fsr1l,f,c
  9806  014B48  0E00               	movlw	0
  9807  014B4A  22E2               	addwfc	fsr1h,f,c
  9808                           
  9809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9810                           
  9811                           ;incstack = 0
  9812  014B4C  EE20  F0EF         	lfsr	2,stoa@F1166
  9813                           
  9814                           ;stkvar	_nuls @ sp[(-17)+0]
  9815  014B50  0E07               	movlw	7
  9816  014B52  6E32               	movwf	btemp^0,c
  9817  014B54  0EEF               	movlw	-17
  9818  014B56                     us1141999:
  9819  014B56  006F FF7B FFE3     	movff	postinc2,plusw1
  9820  014B5C  28E8               	incf	wreg,w,c
  9821  014B5E  2E32               	decfsz	btemp^0,f,c
  9822  014B60  D7FA               	bra	us1141999
  9823                           
  9824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9825                           ;stkvar	_s @ sp[(-17)+-4]
  9826  014B62  0EEB               	movlw	-21
  9827  014B64  006F FF8C  F03C    	movff	plusw1,btemp+10
  9828  014B6A  0EEC               	movlw	-20
  9829  014B6C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9830                           
  9831                           ;stkvar	_cp @ sp[(-17)+11]
  9832  014B72  0EFB               	movlw	-5
  9833  014B74  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9834  014B7A  0EFA               	movlw	-6
  9835  014B7C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9836                           
  9837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9838                           ;stkvar	_cp @ sp[(-17)+11]
  9839  014B82  0EFA               	movlw	-6
  9840  014B84  006F FF8C  F032    	movff	plusw1,btemp
  9841  014B8A  0EFB               	movlw	-5
  9842  014B8C  50E3               	movf	plusw1,w,c
  9843  014B8E  1032               	iorwf	btemp^0,w,c
  9844  014B90  A4D8               	btfss	status,2,c
  9845  014B92  D00E               	goto	l10730
  9846                           
  9847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9848                           ;stkvar	_nuls @ sp[(-17)+0]
  9849  014B94  0EEF               	movlw	239
  9850  014B96  24E1               	addwf	fsr1l,w,c
  9851  014B98  6E3C               	movwf	(btemp+10)^0,c
  9852  014B9A  0EFF               	movlw	255
  9853  014B9C  20E2               	addwfc	fsr1h,w,c
  9854  014B9E  6E3D               	movwf	(btemp+11)^0,c
  9855                           
  9856                           ;stkvar	_cp @ sp[(-17)+11]
  9857  014BA0  0EFB               	movlw	-5
  9858  014BA2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9859  014BA8  0EFA               	movlw	-6
  9860  014BAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9861  014BB0                     l10730:
  9862                           
  9863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9864                           ;stkvar	_cp @ sp[(-17)+11]
  9865  014BB0  0EFA               	movlw	-6
  9866  014BB2  006F FF8F FFE6     	movff	plusw1,postinc1
  9867  014BB8  006F FF8F FFE6     	movff	plusw1,postinc1
  9868  014BBE  EC55  F0B8         	call	_strlen	;wreg free
  9869                           
  9870                           ;stkvar	_l @ sp[(-17)+7]
  9871  014BC2  0EF6               	movlw	-10
  9872  014BC4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9873  014BCA  0EF7               	movlw	-9
  9874  014BCC  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9875                           
  9876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9877                           ;stkvar	_p @ sp[(-17)+9]
  9878  014BD2  0EF8               	movlw	-8
  9879  014BD4  0060  F077  FFE3   	movff	_prec,plusw1
  9880  014BDA  0EF9               	movlw	-7
  9881  014BDC  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9882                           
  9883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9884                           ;stkvar	_p @ sp[(-17)+9]
  9885  014BE2  0EF9               	movlw	-7
  9886  014BE4  BEE3               	btfsc	plusw1,7,c
  9887  014BE6  D023               	goto	l1953
  9888                           
  9889                           ;stkvar	_l @ sp[(-17)+7]
  9890                           ;stkvar	_p @ sp[(-17)+9]
  9891  014BE8  50E1               	movf	fsr1l,w,c
  9892  014BEA  0FF8               	addlw	-8
  9893  014BEC  6ED9               	movwf	fsr2l,c
  9894  014BEE  50E2               	movf	fsr1h,w,c
  9895  014BF0  6EDA               	movwf	fsr2h,c
  9896  014BF2  0EFF               	movlw	255
  9897  014BF4  22DA               	addwfc	fsr2h,f,c
  9898  014BF6  0EF6               	movlw	-10
  9899  014BF8  50E3               	movf	plusw1,w,c
  9900  014BFA  5CDE               	subwf	postinc2,w,c
  9901  014BFC  50DE               	movf	postinc2,w,c
  9902  014BFE  0A80               	xorlw	128
  9903  014C00  6E32               	movwf	btemp^0,c
  9904  014C02  0EF7               	movlw	-9
  9905  014C04  50E3               	movf	plusw1,w,c
  9906  014C06  0A80               	xorlw	128
  9907  014C08  5832               	subwfb	btemp^0,w,c
  9908  014C0A  B0D8               	btfsc	status,0,c
  9909  014C0C  D010               	goto	l1953
  9910                           
  9911                           ;stkvar	_p @ sp[(-17)+9]
  9912                           ;stkvar	_l @ sp[(-17)+7]
  9913  014C0E  0EF8               	movlw	-8
  9914  014C10  006F FF8C  F032    	movff	plusw1,btemp
  9915  014C16  0EF6               	movlw	-10
  9916  014C18  0060  F0CB  FFE3   	movff	btemp,plusw1
  9917  014C1E  0EF9               	movlw	-7
  9918  014C20  006F FF8C  F032    	movff	plusw1,btemp
  9919  014C26  0EF7               	movlw	-9
  9920  014C28  0060  F0CB  FFE3   	movff	btemp,plusw1
  9921  014C2E                     l1953:
  9922                           
  9923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9924                           ;stkvar	_l @ sp[(-17)+7]
  9925                           ;stkvar	_p @ sp[(-17)+9]
  9926  014C2E  0EF6               	movlw	-10
  9927  014C30  006F FF8C  F032    	movff	plusw1,btemp
  9928  014C36  0EF8               	movlw	-8
  9929  014C38  0060  F0CB  FFE3   	movff	btemp,plusw1
  9930  014C3E  0EF7               	movlw	-9
  9931  014C40  006F FF8C  F032    	movff	plusw1,btemp
  9932  014C46  0EF9               	movlw	-7
  9933  014C48  0060  F0CB  FFE3   	movff	btemp,plusw1
  9934                           
  9935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9936                           ;stkvar	_w @ sp[(-17)+13]
  9937  014C4E  0EFC               	movlw	-4
  9938  014C50  0060  F06F  FFE3   	movff	_width,plusw1
  9939  014C56  0EFD               	movlw	-3
  9940  014C58  0060  F073  FFE3   	movff	_width+1,plusw1
  9941                           
  9942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9943  014C5E  A01F               	btfss	_flags^0,0,c
  9944  014C60  D01F               	goto	l10750
  9945  014C62  D031               	goto	u11460
  9946  014C64                     l10746:
  9947                           
  9948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9949                           ;stkvar	_fp @ sp[(-17)+-2]
  9950  014C64  0EED               	movlw	-19
  9951  014C66  006F FF8F FFE6     	movff	plusw1,postinc1
  9952  014C6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9953  014C72  0E20               	movlw	32
  9954  014C74  6EE6               	movwf	postinc1,c
  9955  014C76  0E00               	movlw	0
  9956  014C78  6EE6               	movwf	postinc1,c
  9957  014C7A  EC8C  F0B2         	call	_fputc	;wreg free
  9958                           
  9959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9960                           ;stkvar	_l @ sp[(-17)+7]
  9961  014C7E  0EF6               	movlw	-10
  9962  014C80  50E3               	movf	plusw1,w,c
  9963  014C82  0F01               	addlw	1
  9964  014C84  6E32               	movwf	btemp^0,c
  9965  014C86  0EF6               	movlw	-10
  9966  014C88  0060  F0CB  FFE3   	movff	btemp,plusw1
  9967  014C8E  6A32               	clrf	btemp^0,c
  9968  014C90  0EF7               	movlw	-9
  9969  014C92  50E3               	movf	plusw1,w,c
  9970  014C94  2032               	addwfc	btemp^0,w,c
  9971  014C96  6E32               	movwf	btemp^0,c
  9972  014C98  0EF7               	movlw	-9
  9973  014C9A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9974  014CA0                     l10750:
  9975                           
  9976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9977                           ;stkvar	_w @ sp[(-17)+13]
  9978                           ;stkvar	_l @ sp[(-17)+7]
  9979  014CA0  50E1               	movf	fsr1l,w,c
  9980  014CA2  0FF6               	addlw	-10
  9981  014CA4  6ED9               	movwf	fsr2l,c
  9982  014CA6  50E2               	movf	fsr1h,w,c
  9983  014CA8  6EDA               	movwf	fsr2h,c
  9984  014CAA  0EFF               	movlw	255
  9985  014CAC  22DA               	addwfc	fsr2h,f,c
  9986  014CAE  0EFC               	movlw	-4
  9987  014CB0  50E3               	movf	plusw1,w,c
  9988  014CB2  5CDE               	subwf	postinc2,w,c
  9989  014CB4  50DE               	movf	postinc2,w,c
  9990  014CB6  0A80               	xorlw	128
  9991  014CB8  6E32               	movwf	btemp^0,c
  9992  014CBA  0EFD               	movlw	-3
  9993  014CBC  50E3               	movf	plusw1,w,c
  9994  014CBE  0A80               	xorlw	128
  9995  014CC0  5832               	subwfb	btemp^0,w,c
  9996  014CC2  A0D8               	btfss	status,0,c
  9997  014CC4  D7CF               	goto	l10746
  9998  014CC6                     u11460:
  9999                           
 10000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10001                           ;stkvar	_i @ sp[(-17)+15]
 10002  014CC6  0EFE               	movlw	-2
 10003  014CC8  6AE3               	clrf	plusw1,c
 10004  014CCA  0EFF               	movlw	-1
 10005  014CCC  6AE3               	clrf	plusw1,c
 10006                           
 10007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10008  014CCE  D045               	goto	l10760
 10009  014CD0                     l10754:
 10010                           
 10011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10012                           ;stkvar	_fp @ sp[(-17)+-2]
 10013  014CD0  0EED               	movlw	-19
 10014  014CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 10015  014CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 10016                           
 10017                           ;stkvar	_cp @ sp[(-19)+11]
 10018  014CDE  0EF8               	movlw	-8
 10019  014CE0  006F FF8F FFF6     	movff	plusw1,tblptrl
 10020  014CE6  0EF9               	movlw	-7
 10021  014CE8  006F FF8F FFF7     	movff	plusw1,tblptrh
 10022  014CEE  0E00               	movlw	low (__mediumconst shr (0+16))
 10023  014CF0  6EF8               	movwf	tblptru,c
 10024  014CF2  0E1F               	movlw	(high __ramtop+-1)
 10025  014CF4  64F7               	cpfsgt	tblptrh,c
 10026  014CF6  D003               	bra	u11477
 10027  014CF8  0008               	tblrd		*
 10028  014CFA  50F5               	movf	tablat,w,c
 10029  014CFC  D007               	bra	u11470
 10030  014CFE                     u11477:
 10031  014CFE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10032  014D04  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10033  014D0A  50EF               	movf	indf0,w,c
 10034  014D0C                     u11470:
 10035  014D0C  6EE6               	movwf	postinc1,c
 10036  014D0E  0E00               	movlw	0
 10037  014D10  6EE6               	movwf	postinc1,c
 10038  014D12  EC8C  F0B2         	call	_fputc	;wreg free
 10039                           
 10040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10041                           ;stkvar	_cp @ sp[(-17)+11]
 10042  014D16  0EFA               	movlw	-6
 10043  014D18  50E3               	movf	plusw1,w,c
 10044  014D1A  0F01               	addlw	1
 10045  014D1C  6E32               	movwf	btemp^0,c
 10046  014D1E  0EFA               	movlw	-6
 10047  014D20  0060  F0CB  FFE3   	movff	btemp,plusw1
 10048  014D26  6A32               	clrf	btemp^0,c
 10049  014D28  0EFB               	movlw	-5
 10050  014D2A  50E3               	movf	plusw1,w,c
 10051  014D2C  2032               	addwfc	btemp^0,w,c
 10052  014D2E  6E32               	movwf	btemp^0,c
 10053  014D30  0EFB               	movlw	-5
 10054  014D32  0060  F0CB  FFE3   	movff	btemp,plusw1
 10055                           
 10056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10057                           ;stkvar	_i @ sp[(-17)+15]
 10058  014D38  0EFE               	movlw	-2
 10059  014D3A  50E3               	movf	plusw1,w,c
 10060  014D3C  0F01               	addlw	1
 10061  014D3E  6E32               	movwf	btemp^0,c
 10062  014D40  0EFE               	movlw	-2
 10063  014D42  0060  F0CB  FFE3   	movff	btemp,plusw1
 10064  014D48  6A32               	clrf	btemp^0,c
 10065  014D4A  0EFF               	movlw	-1
 10066  014D4C  50E3               	movf	plusw1,w,c
 10067  014D4E  2032               	addwfc	btemp^0,w,c
 10068  014D50  6E32               	movwf	btemp^0,c
 10069  014D52  0EFF               	movlw	-1
 10070  014D54  0060  F0CB  FFE3   	movff	btemp,plusw1
 10071  014D5A                     l10760:
 10072                           
 10073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10074                           ;stkvar	_p @ sp[(-17)+9]
 10075                           ;stkvar	_i @ sp[(-17)+15]
 10076  014D5A  50E1               	movf	fsr1l,w,c
 10077  014D5C  0FFE               	addlw	-2
 10078  014D5E  6ED9               	movwf	fsr2l,c
 10079  014D60  50E2               	movf	fsr1h,w,c
 10080  014D62  6EDA               	movwf	fsr2h,c
 10081  014D64  0EFF               	movlw	255
 10082  014D66  22DA               	addwfc	fsr2h,f,c
 10083  014D68  0EF8               	movlw	-8
 10084  014D6A  50E3               	movf	plusw1,w,c
 10085  014D6C  5CDE               	subwf	postinc2,w,c
 10086  014D6E  50DE               	movf	postinc2,w,c
 10087  014D70  0A80               	xorlw	128
 10088  014D72  6E32               	movwf	btemp^0,c
 10089  014D74  0EF9               	movlw	-7
 10090  014D76  50E3               	movf	plusw1,w,c
 10091  014D78  0A80               	xorlw	128
 10092  014D7A  5832               	subwfb	btemp^0,w,c
 10093  014D7C  A0D8               	btfss	status,0,c
 10094  014D7E  D7A8               	goto	l10754
 10095                           
 10096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10097  014D80  B01F               	btfsc	_flags^0,0,c
 10098  014D82  D01F               	goto	l10768
 10099  014D84  D031               	goto	u11500
 10100  014D86                     l10764:
 10101                           
 10102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10103                           ;stkvar	_fp @ sp[(-17)+-2]
 10104  014D86  0EED               	movlw	-19
 10105  014D88  006F FF8F FFE6     	movff	plusw1,postinc1
 10106  014D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 10107  014D94  0E20               	movlw	32
 10108  014D96  6EE6               	movwf	postinc1,c
 10109  014D98  0E00               	movlw	0
 10110  014D9A  6EE6               	movwf	postinc1,c
 10111  014D9C  EC8C  F0B2         	call	_fputc	;wreg free
 10112                           
 10113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10114                           ;stkvar	_l @ sp[(-17)+7]
 10115  014DA0  0EF6               	movlw	-10
 10116  014DA2  50E3               	movf	plusw1,w,c
 10117  014DA4  0F01               	addlw	1
 10118  014DA6  6E32               	movwf	btemp^0,c
 10119  014DA8  0EF6               	movlw	-10
 10120  014DAA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10121  014DB0  6A32               	clrf	btemp^0,c
 10122  014DB2  0EF7               	movlw	-9
 10123  014DB4  50E3               	movf	plusw1,w,c
 10124  014DB6  2032               	addwfc	btemp^0,w,c
 10125  014DB8  6E32               	movwf	btemp^0,c
 10126  014DBA  0EF7               	movlw	-9
 10127  014DBC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10128  014DC2                     l10768:
 10129                           
 10130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10131                           ;stkvar	_w @ sp[(-17)+13]
 10132                           ;stkvar	_l @ sp[(-17)+7]
 10133  014DC2  50E1               	movf	fsr1l,w,c
 10134  014DC4  0FF6               	addlw	-10
 10135  014DC6  6ED9               	movwf	fsr2l,c
 10136  014DC8  50E2               	movf	fsr1h,w,c
 10137  014DCA  6EDA               	movwf	fsr2h,c
 10138  014DCC  0EFF               	movlw	255
 10139  014DCE  22DA               	addwfc	fsr2h,f,c
 10140  014DD0  0EFC               	movlw	-4
 10141  014DD2  50E3               	movf	plusw1,w,c
 10142  014DD4  5CDE               	subwf	postinc2,w,c
 10143  014DD6  50DE               	movf	postinc2,w,c
 10144  014DD8  0A80               	xorlw	128
 10145  014DDA  6E32               	movwf	btemp^0,c
 10146  014DDC  0EFD               	movlw	-3
 10147  014DDE  50E3               	movf	plusw1,w,c
 10148  014DE0  0A80               	xorlw	128
 10149  014DE2  5832               	subwfb	btemp^0,w,c
 10150  014DE4  A0D8               	btfss	status,0,c
 10151  014DE6  D7CF               	goto	l10764
 10152  014DE8                     u11500:
 10153                           
 10154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10155                           ;stkvar	_l @ sp[(-17)+7]
 10156  014DE8  0EF6               	movlw	-10
 10157  014DEA  006F FF8C  F032    	movff	plusw1,btemp
 10158  014DF0  0EF7               	movlw	-9
 10159  014DF2  006F FF8C  F033    	movff	plusw1,btemp+1
 10160                           
 10161                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10162  014DF8  0EEB               	movlw	235
 10163  014DFA  26E1               	addwf	fsr1l,f,c
 10164  014DFC  0EFF               	movlw	255
 10165  014DFE  22E2               	addwfc	fsr1h,f,c
 10166  014E00  0012               	return		;funcret
 10167  014E02                     __end_of_stoa:
 10168                           	opt callstack 0
 10169                           
 10170 ;; *************** function _efgtoa *****************
 10171 ;; Defined at:
 10172 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10175 ;;		 -> f(6), NULL(0), 
 10176 ;;  f               4  [STACK] PTR struct _IO_FILE
 10177 ;;  c               1  [STACK] unsigned char 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  u               4  [STACK] unsigned char 
 10180 ;;  g               4  [STACK] unsigned char 
 10181 ;;  l               4  [STACK] unsigned char 
 10182 ;;  h               4  [STACK] unsigned char 
 10183 ;;  ou              4  [STACK] unsigned char 
 10184 ;;  n               2  [STACK] int 
 10185 ;;  e               2  [STACK] int 
 10186 ;;  i               2  [STACK] int 
 10187 ;;  w               2  [STACK] int 
 10188 ;;  p               2  [STACK] int 
 10189 ;;  sign            2  [STACK] int 
 10190 ;;  d               2  [STACK] int 
 10191 ;;  ne              2  [STACK] int 
 10192 ;;  m               2  [STACK] int 
 10193 ;;  pp              2  [STACK] int 
 10194 ;;  t               2  [STACK] int 
 10195 ;;  mode            1  [STACK] unsigned char 
 10196 ;;  nmode           1  [STACK] unsigned char 
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  2  [STACK] int 
 10199 ;; Registers used:
 10200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/5
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10210 ;;Total ram usage:        0 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:   11
 10213 ;; This function calls:
 10214 ;;		___awdiv
 10215 ;;		___awmod
 10216 ;;		___fladd
 10217 ;;		___fldiv
 10218 ;;		___fleq
 10219 ;;		___flge
 10220 ;;		___flmul
 10221 ;;		___flneg
 10222 ;;		___flsub
 10223 ;;		___fltol
 10224 ;;		___fpclassifyf
 10225 ;;		_floorf
 10226 ;;		_isupper
 10227 ;;		_pad
 10228 ;;		_strcpy
 10229 ;;		_tolower
 10230 ;; This function is called by:
 10231 ;;		_vfpfcnvrt
 10232 ;; This function uses a reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text44
 10236  010000                     __ptext44:
 10237                           	opt callstack 0
 10238  010000                     _efgtoa:
 10239                           	opt callstack 0
 10240                           
 10241                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10242  010000  0E38               	movlw	56
 10243  010002  26E1               	addwf	fsr1l,f,c
 10244  010004  0E00               	movlw	0
 10245  010006  22E2               	addwfc	fsr1h,f,c
 10246                           
 10247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10248                           ;stkvar	_sign @ sp[(-56)+42]
 10249                           
 10250                           ;incstack = 0
 10251  010008  0EF2               	movlw	-14
 10252  01000A  6AE3               	clrf	plusw1,c
 10253  01000C  0EF3               	movlw	-13
 10254  01000E  6AE3               	clrf	plusw1,c
 10255                           
 10256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10257                           ;stkvar	_f @ sp[(-56)+-6]
 10258  010010  0EC2               	movlw	-62
 10259  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10260  010018  0EC3               	movlw	-61
 10261  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10262  010020  0EC4               	movlw	-60
 10263  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10264  010028  0EC5               	movlw	-59
 10265  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10266                           
 10267                           ;stkvar	_g @ sp[(-56)+16]
 10268  010030  0ED8               	movlw	-40
 10269  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10270  010038  0ED9               	movlw	-39
 10271  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10272  010040  0EDA               	movlw	-38
 10273  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10274  010048  0EDB               	movlw	-37
 10275  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10276                           
 10277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10278                           ;stkvar	_g @ sp[(-56)+16]
 10279  010050  0EDB               	movlw	-37
 10280  010052  AEE3               	btfss	plusw1,7,c
 10281  010054  D02B               	goto	l10428
 10282                           
 10283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10284  010056  0E01               	movlw	1
 10285  010058  6E3C               	movwf	(btemp+10)^0,c
 10286  01005A  0E00               	movlw	0
 10287  01005C  6E3D               	movwf	(btemp+11)^0,c
 10288                           
 10289                           ;stkvar	_sign @ sp[(-56)+42]
 10290  01005E  0EF2               	movlw	-14
 10291  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10292  010066  0EF3               	movlw	-13
 10293  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10294                           
 10295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10296                           ;stkvar	_g @ sp[(-56)+16]
 10297  01006E  0ED8               	movlw	-40
 10298  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10299  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10300  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10301  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10302  010088  EC67  F0BD         	call	___flneg	;wreg free
 10303                           
 10304                           ;stkvar	_g @ sp[(-56)+16]
 10305  01008C  0ED8               	movlw	-40
 10306  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10307  010094  0ED9               	movlw	-39
 10308  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10309  01009C  0EDA               	movlw	-38
 10310  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10311  0100A4  0EDB               	movlw	-37
 10312  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10313  0100AC                     l10428:
 10314                           
 10315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10316                           ;stkvar	_n @ sp[(-56)+32]
 10317  0100AC  0EE8               	movlw	-24
 10318  0100AE  6AE3               	clrf	plusw1,c
 10319  0100B0  0EE9               	movlw	-23
 10320  0100B2  6AE3               	clrf	plusw1,c
 10321                           
 10322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10323                           ;stkvar	_w @ sp[(-56)+38]
 10324  0100B4  0EEE               	movlw	-18
 10325  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10326  0100BC  0EEF               	movlw	-17
 10327  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10328                           
 10329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10330                           ;stkvar	_sign @ sp[(-56)+42]
 10331  0100C4  0EF2               	movlw	-14
 10332  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10333  0100CC  0EF3               	movlw	-13
 10334  0100CE  50E3               	movf	plusw1,w,c
 10335  0100D0  1032               	iorwf	btemp^0,w,c
 10336  0100D2  A4D8               	btfss	status,2,c
 10337  0100D4  D002               	goto	u10910
 10338  0100D6  A41F               	btfss	_flags^0,2,c
 10339  0100D8  D036               	goto	l10448
 10340  0100DA                     u10910:
 10341                           
 10342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10343                           ;stkvar	_sign @ sp[(-56)+42]
 10344  0100DA  0EF2               	movlw	-14
 10345  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10346  0100E2  0EF3               	movlw	-13
 10347  0100E4  50E3               	movf	plusw1,w,c
 10348  0100E6  1032               	iorwf	btemp^0,w,c
 10349  0100E8  A4D8               	btfss	status,2,c
 10350  0100EA  D002               	goto	l10440
 10351  0100EC  0E2B               	movlw	43
 10352  0100EE  D001               	goto	L8
 10353  0100F0                     l10440:
 10354  0100F0  0E2D               	movlw	45
 10355  0100F2                     L8:
 10356  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10357  0100F4  0E00               	movlw	0
 10358  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10359                           
 10360                           ;stkvar	_efgtoa$4379 @ sp[(-56)+10]
 10361  0100F8  0ED2               	movlw	-46
 10362  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10363  010100  0ED3               	movlw	-45
 10364  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10365                           
 10366                           ;stkvar	_efgtoa$4379 @ sp[(-56)+10]
 10367  010108  0ED2               	movlw	-46
 10368  01010A  006F FF8C  F240    	movff	plusw1,_dbuf
 10369                           
 10370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10371                           ;stkvar	_n @ sp[(-56)+32]
 10372  010110  0EE8               	movlw	-24
 10373  010112  50E3               	movf	plusw1,w,c
 10374  010114  0F01               	addlw	1
 10375  010116  6E32               	movwf	btemp^0,c
 10376  010118  0EE8               	movlw	-24
 10377  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10378  010120  6A32               	clrf	btemp^0,c
 10379  010122  0EE9               	movlw	-23
 10380  010124  50E3               	movf	plusw1,w,c
 10381  010126  2032               	addwfc	btemp^0,w,c
 10382  010128  6E32               	movwf	btemp^0,c
 10383  01012A  0EE9               	movlw	-23
 10384  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10385                           
 10386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10387                           ;stkvar	_w @ sp[(-56)+38]
 10388  010132  50E1               	movf	fsr1l,w,c
 10389  010134  0FEE               	addlw	-18
 10390  010136  6ED9               	movwf	fsr2l,c
 10391  010138  50E2               	movf	fsr1h,w,c
 10392  01013A  6EDA               	movwf	fsr2h,c
 10393  01013C  0EFF               	movlw	255
 10394  01013E  22DA               	addwfc	fsr2h,f,c
 10395  010140  06DE               	decf	postinc2,f,c
 10396  010142  0E00               	movlw	0
 10397  010144  5ADD               	subwfb	postdec2,f,c
 10398  010146                     l10448:
 10399                           
 10400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10401                           ;stkvar	_g @ sp[(-56)+16]
 10402  010146  0ED8               	movlw	-40
 10403  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10404  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10405  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10406  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10407  010160  EC75  F0AE         	call	___fpclassifyf	;wreg free
 10408  010164  0432               	decf	btemp^0,w,c
 10409  010166  1033               	iorwf	(btemp+1)^0,w,c
 10410  010168  A4D8               	btfss	status,2,c
 10411  01016A  D076               	goto	l10466
 10412  01016C  0EBF               	movlw	191
 10413  01016E  6E3C               	movwf	(btemp+10)^0,c
 10414  010170  0EFF               	movlw	255
 10415  010172  6E3D               	movwf	(btemp+11)^0,c
 10416                           
 10417                           ;stkvar	_c @ sp[(-56)+-7]
 10418  010174  0EC1               	movlw	-63
 10419  010176  50E3               	movf	plusw1,w,c
 10420  010178  6E3A               	movwf	(btemp+8)^0,c
 10421  01017A  6A3B               	clrf	(btemp+9)^0,c
 10422  01017C  503C               	movf	(btemp+10)^0,w,c
 10423  01017E  263A               	addwf	(btemp+8)^0,f,c
 10424  010180  503D               	movf	(btemp+11)^0,w,c
 10425  010182  223B               	addwfc	(btemp+9)^0,f,c
 10426  010184  503B               	movf	(btemp+9)^0,w,c
 10427  010186  E106               	bnz	u10940
 10428  010188  0E1A               	movlw	26
 10429  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10430  01018C  B0D8               	btfsc	status,0,c
 10431  01018E  D002               	goto	u10940
 10432  010190  0E01               	movlw	1
 10433  010192  D001               	goto	u10950
 10434  010194                     u10940:
 10435  010194  0E00               	movlw	0
 10436  010196                     u10950:
 10437  010196  6E3C               	movwf	(btemp+10)^0,c
 10438  010198  6A3D               	clrf	(btemp+11)^0,c
 10439                           
 10440                           ;stkvar	_efgtoa$4380 @ sp[(-56)+8]
 10441  01019A  0ED0               	movlw	-48
 10442  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10443  0101A2  0ED1               	movlw	-47
 10444  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10445                           
 10446                           ;stkvar	_efgtoa$4380 @ sp[(-56)+8]
 10447  0101AA  0ED0               	movlw	-48
 10448  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10449  0101B2  0ED1               	movlw	-47
 10450  0101B4  50E3               	movf	plusw1,w,c
 10451  0101B6  1032               	iorwf	btemp^0,w,c
 10452  0101B8  B4D8               	btfsc	status,2,c
 10453  0101BA  D017               	goto	l10458
 10454                           
 10455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10456  0101BC  0EE5               	movlw	low STR_34
 10457  0101BE  6EE6               	movwf	postinc1,c
 10458  0101C0  0EFF               	movlw	high STR_34
 10459  0101C2  6EE6               	movwf	postinc1,c
 10460                           
 10461                           ;stkvar	_n @ sp[(-58)+32]
 10462  0101C4  0E40               	movlw	low _dbuf
 10463  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10464  0101C8  0E02               	movlw	high _dbuf
 10465  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10466  0101CC  0EE6               	movlw	-26
 10467  0101CE  50E3               	movf	plusw1,w,c
 10468  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10469  0101D2  0EE7               	movlw	-25
 10470  0101D4  50E3               	movf	plusw1,w,c
 10471  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10472  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10473  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10474  0101E4  EC2F  F0B6         	call	_strcpy	;wreg free
 10475                           
 10476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10477  0101E8  D016               	goto	l10460
 10478  0101EA                     l10458:
 10479                           
 10480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10481  0101EA  0EED               	movlw	low STR_35
 10482  0101EC  6EE6               	movwf	postinc1,c
 10483  0101EE  0EFF               	movlw	high STR_35
 10484  0101F0  6EE6               	movwf	postinc1,c
 10485                           
 10486                           ;stkvar	_n @ sp[(-58)+32]
 10487  0101F2  0E40               	movlw	low _dbuf
 10488  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10489  0101F6  0E02               	movlw	high _dbuf
 10490  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10491  0101FA  0EE6               	movlw	-26
 10492  0101FC  50E3               	movf	plusw1,w,c
 10493  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10494  010200  0EE7               	movlw	-25
 10495  010202  50E3               	movf	plusw1,w,c
 10496  010204  223D               	addwfc	(btemp+11)^0,f,c
 10497  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10498  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10499  010212  EC2F  F0B6         	call	_strcpy	;wreg free
 10500  010216                     l10460:
 10501                           
 10502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10503                           ;stkvar	_w @ sp[(-56)+38]
 10504  010216  50E1               	movf	fsr1l,w,c
 10505  010218  0FEE               	addlw	-18
 10506  01021A  6ED9               	movwf	fsr2l,c
 10507  01021C  50E2               	movf	fsr1h,w,c
 10508  01021E  6EDA               	movwf	fsr2h,c
 10509  010220  0EFF               	movlw	255
 10510  010222  22DA               	addwfc	fsr2h,f,c
 10511  010224  0EFD               	movlw	253
 10512  010226  26DE               	addwf	postinc2,f,c
 10513  010228  0EFF               	movlw	255
 10514  01022A  22DD               	addwfc	postdec2,f,c
 10515  01022C                     l10462:
 10516                           
 10517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10518                           ;stkvar	_w @ sp[(-56)+38]
 10519  01022C  0EEE               	movlw	-18
 10520  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10521  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10522  01023A  0E40               	movlw	low _dbuf
 10523  01023C  6EE6               	movwf	postinc1,c
 10524  01023E  0E02               	movlw	high _dbuf
 10525  010240  6EE6               	movwf	postinc1,c
 10526                           
 10527                           ;stkvar	_fp @ sp[(-60)+-2]
 10528  010242  0EC2               	movlw	-62
 10529  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10530  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10531  010250  ECAA  F0B3         	call	_pad	;wreg free
 10532  010254  EF1D  F089         	goto	l1871
 10533  010258                     l10466:
 10534                           
 10535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10536                           ;stkvar	_g @ sp[(-56)+16]
 10537  010258  0ED8               	movlw	-40
 10538  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10539  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10540  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10541  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10542  010272  EC75  F0AE         	call	___fpclassifyf	;wreg free
 10543  010276  5032               	movf	btemp^0,w,c
 10544  010278  1033               	iorwf	(btemp+1)^0,w,c
 10545  01027A  A4D8               	btfss	status,2,c
 10546  01027C  D056               	goto	l10484
 10547  01027E  0EBF               	movlw	191
 10548  010280  6E3C               	movwf	(btemp+10)^0,c
 10549  010282  0EFF               	movlw	255
 10550  010284  6E3D               	movwf	(btemp+11)^0,c
 10551                           
 10552                           ;stkvar	_c @ sp[(-56)+-7]
 10553  010286  0EC1               	movlw	-63
 10554  010288  50E3               	movf	plusw1,w,c
 10555  01028A  6E3A               	movwf	(btemp+8)^0,c
 10556  01028C  6A3B               	clrf	(btemp+9)^0,c
 10557  01028E  503C               	movf	(btemp+10)^0,w,c
 10558  010290  263A               	addwf	(btemp+8)^0,f,c
 10559  010292  503D               	movf	(btemp+11)^0,w,c
 10560  010294  223B               	addwfc	(btemp+9)^0,f,c
 10561  010296  503B               	movf	(btemp+9)^0,w,c
 10562  010298  E106               	bnz	u10980
 10563  01029A  0E1A               	movlw	26
 10564  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10565  01029E  B0D8               	btfsc	status,0,c
 10566  0102A0  D002               	goto	u10980
 10567  0102A2  0E01               	movlw	1
 10568  0102A4  D001               	goto	u10990
 10569  0102A6                     u10980:
 10570  0102A6  0E00               	movlw	0
 10571  0102A8                     u10990:
 10572  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10573  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10574                           
 10575                           ;stkvar	_efgtoa$4384 @ sp[(-56)+6]
 10576  0102AC  0ECE               	movlw	-50
 10577  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10578  0102B4  0ECF               	movlw	-49
 10579  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10580                           
 10581                           ;stkvar	_efgtoa$4384 @ sp[(-56)+6]
 10582  0102BC  0ECE               	movlw	-50
 10583  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10584  0102C4  0ECF               	movlw	-49
 10585  0102C6  50E3               	movf	plusw1,w,c
 10586  0102C8  1032               	iorwf	btemp^0,w,c
 10587  0102CA  B4D8               	btfsc	status,2,c
 10588  0102CC  D017               	goto	l10476
 10589                           
 10590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10591  0102CE  0EE9               	movlw	low STR_38
 10592  0102D0  6EE6               	movwf	postinc1,c
 10593  0102D2  0EFF               	movlw	high STR_38
 10594  0102D4  6EE6               	movwf	postinc1,c
 10595                           
 10596                           ;stkvar	_n @ sp[(-58)+32]
 10597  0102D6  0E40               	movlw	low _dbuf
 10598  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10599  0102DA  0E02               	movlw	high _dbuf
 10600  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10601  0102DE  0EE6               	movlw	-26
 10602  0102E0  50E3               	movf	plusw1,w,c
 10603  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10604  0102E4  0EE7               	movlw	-25
 10605  0102E6  50E3               	movf	plusw1,w,c
 10606  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10607  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10608  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10609  0102F6  EC2F  F0B6         	call	_strcpy	;wreg free
 10610                           
 10611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10612  0102FA  D78D               	goto	l10460
 10613  0102FC                     l10476:
 10614                           
 10615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10616  0102FC  0EF1               	movlw	low STR_39
 10617  0102FE  6EE6               	movwf	postinc1,c
 10618  010300  0EFF               	movlw	high STR_39
 10619  010302  6EE6               	movwf	postinc1,c
 10620                           
 10621                           ;stkvar	_n @ sp[(-58)+32]
 10622  010304  0E40               	movlw	low _dbuf
 10623  010306  6E3C               	movwf	(btemp+10)^0,c
 10624  010308  0E02               	movlw	high _dbuf
 10625  01030A  6E3D               	movwf	(btemp+11)^0,c
 10626  01030C  0EE6               	movlw	-26
 10627  01030E  50E3               	movf	plusw1,w,c
 10628  010310  263C               	addwf	(btemp+10)^0,f,c
 10629  010312  0EE7               	movlw	-25
 10630  010314  50E3               	movf	plusw1,w,c
 10631  010316  223D               	addwfc	(btemp+11)^0,f,c
 10632  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10633  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10634  010324  EC2F  F0B6         	call	_strcpy	;wreg free
 10635  010328  D776               	goto	l10460
 10636  01032A                     l10484:
 10637                           
 10638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10639  01032A  0E00               	movlw	0
 10640  01032C  6E3A               	movwf	(btemp+8)^0,c
 10641  01032E  0E00               	movlw	0
 10642  010330  6E3B               	movwf	(btemp+9)^0,c
 10643  010332  0E80               	movlw	128
 10644  010334  6E3C               	movwf	(btemp+10)^0,c
 10645  010336  0E3F               	movlw	63
 10646  010338  6E3D               	movwf	(btemp+11)^0,c
 10647                           
 10648                           ;stkvar	_u @ sp[(-56)+12]
 10649  01033A  0ED4               	movlw	-44
 10650  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10651  010342  0ED5               	movlw	-43
 10652  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10653  01034A  0ED6               	movlw	-42
 10654  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10655  010352  0ED7               	movlw	-41
 10656  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10657                           
 10658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10659                           ;stkvar	_e @ sp[(-56)+34]
 10660  01035A  0EEA               	movlw	-22
 10661  01035C  6AE3               	clrf	plusw1,c
 10662  01035E  0EEB               	movlw	-21
 10663  010360  6AE3               	clrf	plusw1,c
 10664                           
 10665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10666  010362  0E00               	movlw	0
 10667  010364  6EE6               	movwf	postinc1,c
 10668  010366  0E00               	movlw	0
 10669  010368  6EE6               	movwf	postinc1,c
 10670  01036A  0E00               	movlw	0
 10671  01036C  6EE6               	movwf	postinc1,c
 10672  01036E  0E00               	movlw	0
 10673  010370  6EE6               	movwf	postinc1,c
 10674                           
 10675                           ;stkvar	_g @ sp[(-60)+16]
 10676  010372  0ED4               	movlw	-44
 10677  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10678  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10679  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10680  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10681  01038C  EC99  F0B6         	call	___fleq	;wreg free
 10682  010390  A032               	btfss	btemp& (0+255),0,c
 10683  010392  D039               	goto	l10496
 10684  010394  D0BC               	goto	u11030
 10685  010396                     l10492:
 10686                           
 10687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10688  010396  0E00               	movlw	0
 10689  010398  6EE6               	movwf	postinc1,c
 10690  01039A  0E00               	movlw	0
 10691  01039C  6EE6               	movwf	postinc1,c
 10692  01039E  0E20               	movlw	32
 10693  0103A0  6EE6               	movwf	postinc1,c
 10694  0103A2  0E41               	movlw	65
 10695  0103A4  6EE6               	movwf	postinc1,c
 10696                           
 10697                           ;stkvar	_u @ sp[(-60)+12]
 10698  0103A6  0ED0               	movlw	-48
 10699  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10700  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10701  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10702  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10703  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10704                           
 10705                           ;stkvar	_u @ sp[(-56)+12]
 10706  0103C4  0ED4               	movlw	-44
 10707  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10708  0103CC  0ED5               	movlw	-43
 10709  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10710  0103D4  0ED6               	movlw	-42
 10711  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10712  0103DC  0ED7               	movlw	-41
 10713  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10714                           
 10715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10716                           ;stkvar	_e @ sp[(-56)+34]
 10717  0103E4  0EEA               	movlw	-22
 10718  0103E6  50E3               	movf	plusw1,w,c
 10719  0103E8  0F01               	addlw	1
 10720  0103EA  6E32               	movwf	btemp^0,c
 10721  0103EC  0EEA               	movlw	-22
 10722  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10723  0103F4  6A32               	clrf	btemp^0,c
 10724  0103F6  0EEB               	movlw	-21
 10725  0103F8  50E3               	movf	plusw1,w,c
 10726  0103FA  2032               	addwfc	btemp^0,w,c
 10727  0103FC  6E32               	movwf	btemp^0,c
 10728  0103FE  0EEB               	movlw	-21
 10729  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10730  010406                     l10496:
 10731                           
 10732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10733  010406  0E00               	movlw	0
 10734  010408  6EE6               	movwf	postinc1,c
 10735  01040A  0E00               	movlw	0
 10736  01040C  6EE6               	movwf	postinc1,c
 10737  01040E  0E20               	movlw	32
 10738  010410  6EE6               	movwf	postinc1,c
 10739  010412  0E41               	movlw	65
 10740  010414  6EE6               	movwf	postinc1,c
 10741                           
 10742                           ;stkvar	_u @ sp[(-60)+12]
 10743  010416  0ED0               	movlw	-48
 10744  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10745  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10746  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10747  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10748  010430  ECC1  F08E         	call	___flmul	;wreg free
 10749  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10750  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10751  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10752  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10753                           
 10754                           ;stkvar	_g @ sp[(-60)+16]
 10755  01044C  0ED4               	movlw	-44
 10756  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10757  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10758  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10759  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10760  010466  ECF9  F0AF         	call	___flge	;wreg free
 10761  01046A  A032               	btfss	btemp& (0+255),0,c
 10762  01046C  D032               	goto	l10502
 10763  01046E  D793               	goto	l10492
 10764  010470                     l10498:
 10765                           
 10766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10767  010470  0E00               	movlw	0
 10768  010472  6EE6               	movwf	postinc1,c
 10769  010474  0E00               	movlw	0
 10770  010476  6EE6               	movwf	postinc1,c
 10771  010478  0E20               	movlw	32
 10772  01047A  6EE6               	movwf	postinc1,c
 10773  01047C  0E41               	movlw	65
 10774  01047E  6EE6               	movwf	postinc1,c
 10775                           
 10776                           ;stkvar	_u @ sp[(-60)+12]
 10777  010480  0ED0               	movlw	-48
 10778  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10779  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10780  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10781  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10782  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10783                           
 10784                           ;stkvar	_u @ sp[(-56)+12]
 10785  01049E  0ED4               	movlw	-44
 10786  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10787  0104A6  0ED5               	movlw	-43
 10788  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10789  0104AE  0ED6               	movlw	-42
 10790  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10791  0104B6  0ED7               	movlw	-41
 10792  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10793                           
 10794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10795                           ;stkvar	_e @ sp[(-56)+34]
 10796  0104BE  50E1               	movf	fsr1l,w,c
 10797  0104C0  0FEA               	addlw	-22
 10798  0104C2  6ED9               	movwf	fsr2l,c
 10799  0104C4  50E2               	movf	fsr1h,w,c
 10800  0104C6  6EDA               	movwf	fsr2h,c
 10801  0104C8  0EFF               	movlw	255
 10802  0104CA  22DA               	addwfc	fsr2h,f,c
 10803  0104CC  06DE               	decf	postinc2,f,c
 10804  0104CE  0E00               	movlw	0
 10805  0104D0  5ADD               	subwfb	postdec2,f,c
 10806  0104D2                     l10502:
 10807                           
 10808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10809                           ;stkvar	_u @ sp[(-56)+12]
 10810  0104D2  0ED4               	movlw	-44
 10811  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10812  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10813  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10814  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10815                           
 10816                           ;stkvar	_g @ sp[(-60)+16]
 10817  0104EC  0ED4               	movlw	-44
 10818  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10819  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10820  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10821  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10822  010506  ECF9  F0AF         	call	___flge	;wreg free
 10823  01050A  A032               	btfss	btemp& (0+255),0,c
 10824  01050C  D7B1               	goto	l10498
 10825  01050E                     u11030:
 10826                           
 10827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10828                           ;stkvar	_c @ sp[(-56)+-7]
 10829  01050E  0EC1               	movlw	-63
 10830  010510  50E3               	movf	plusw1,w,c
 10831  010512  6EE6               	movwf	postinc1,c
 10832  010514  0E00               	movlw	0
 10833  010516  6EE6               	movwf	postinc1,c
 10834  010518  EC0A  F0BA         	call	_tolower	;wreg free
 10835                           
 10836                           ;stkvar	_mode @ sp[(-56)+54]
 10837  01051C  0EFE               	movlw	-2
 10838  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10839                           
 10840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10841                           ;stkvar	_mode @ sp[(-56)+54]
 10842                           ;stkvar	_nmode @ sp[(-56)+55]
 10843  010524  0EFE               	movlw	-2
 10844  010526  006F FF8C  F032    	movff	plusw1,btemp
 10845  01052C  0EFF               	movlw	-1
 10846  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10847                           
 10848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10849                           ;stkvar	_mode @ sp[(-56)+54]
 10850  010534  0EFE               	movlw	-2
 10851  010536  006F FF8C  F032    	movff	plusw1,btemp
 10852  01053C  0E67               	movlw	103
 10853  01053E  1832               	xorwf	btemp^0,w,c
 10854  010540  A4D8               	btfss	status,2,c
 10855  010542  D025               	goto	l10520
 10856                           
 10857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10858  010544  501D               	movf	_prec^0,w,c
 10859  010546  101E               	iorwf	(_prec+1)^0,w,c
 10860  010548  A4D8               	btfss	status,2,c
 10861  01054A  D004               	goto	l10514
 10862                           
 10863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10864  01054C  0E00               	movlw	0
 10865  01054E  6E1E               	movwf	(_prec+1)^0,c
 10866  010550  0E01               	movlw	1
 10867  010552  6E1D               	movwf	_prec^0,c
 10868  010554                     l10514:
 10869                           
 10870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10871  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10872  010556  D005               	goto	u11060
 10873  010558  501E               	movf	(_prec+1)^0,w,c
 10874  01055A  E110               	bnz	l10518
 10875  01055C  041D               	decf	_prec^0,w,c
 10876  01055E  B0D8               	btfsc	status,0,c
 10877  010560  D00D               	goto	l10518
 10878  010562                     u11060:
 10879  010562  0E06               	movlw	6
 10880  010564  6E3C               	movwf	(btemp+10)^0,c
 10881  010566  0E00               	movlw	0
 10882  010568  6E3D               	movwf	(btemp+11)^0,c
 10883                           
 10884                           ;stkvar	_p @ sp[(-56)+40]
 10885  01056A  0EF0               	movlw	-16
 10886  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10887  010572  0EF1               	movlw	-15
 10888  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10889  01057A  D00C               	goto	l10526
 10890  01057C                     l10518:
 10891                           
 10892                           ;stkvar	_p @ sp[(-56)+40]
 10893  01057C  0EF0               	movlw	-16
 10894  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10895  010584  0EF1               	movlw	-15
 10896  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10897  01058C  D003               	goto	l10526
 10898  01058E                     l10520:
 10899                           
 10900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10901  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10902  010590  D7F5               	goto	l10518
 10903  010592  D7E7               	goto	u11060
 10904  010594                     l10526:
 10905                           
 10906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10907                           ;stkvar	_mode @ sp[(-56)+54]
 10908  010594  0EFE               	movlw	-2
 10909  010596  006F FF8C  F032    	movff	plusw1,btemp
 10910  01059C  0E67               	movlw	103
 10911  01059E  1832               	xorwf	btemp^0,w,c
 10912  0105A0  A4D8               	btfss	status,2,c
 10913  0105A2  D02F               	goto	l10536
 10914                           
 10915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10916                           ;stkvar	_e @ sp[(-56)+34]
 10917  0105A4  0EEB               	movlw	-21
 10918  0105A6  AEE3               	btfss	plusw1,7,c
 10919  0105A8  D00E               	goto	u11090
 10920  0105AA  0EEA               	movlw	-22
 10921  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10922  0105B2  0EFC               	movlw	252
 10923  0105B4  5E32               	subwf	btemp^0,f,c
 10924  0105B6  0EEB               	movlw	-21
 10925  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10926  0105BE  0EFF               	movlw	255
 10927  0105C0  5A32               	subwfb	btemp^0,f,c
 10928  0105C2  A0D8               	btfss	status,0,c
 10929  0105C4  D018               	goto	l10534
 10930  0105C6                     u11090:
 10931                           
 10932                           ;stkvar	_e @ sp[(-56)+34]
 10933                           ;stkvar	_p @ sp[(-56)+40]
 10934  0105C6  0EF0               	movlw	-16
 10935  0105C8  50E3               	movf	plusw1,w,c
 10936  0105CA  0FFF               	addlw	255
 10937  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10938  0105CE  0EF1               	movlw	-15
 10939  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10940  0105D6  0EFF               	movlw	255
 10941  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10942  0105DA  0EEA               	movlw	-22
 10943  0105DC  50E3               	movf	plusw1,w,c
 10944  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10945  0105E0  503D               	movf	(btemp+11)^0,w,c
 10946  0105E2  0A80               	xorlw	128
 10947  0105E4  6E32               	movwf	btemp^0,c
 10948  0105E6  0EEB               	movlw	-21
 10949  0105E8  50E3               	movf	plusw1,w,c
 10950  0105EA  0A80               	xorlw	128
 10951  0105EC  5832               	subwfb	btemp^0,w,c
 10952  0105EE  A0D8               	btfss	status,0,c
 10953  0105F0  D002               	goto	l10534
 10954                           
 10955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10956  0105F2  0E66               	movlw	102
 10957  0105F4  D001               	goto	L9
 10958  0105F6                     l10534:
 10959                           
 10960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10961  0105F6  0E65               	movlw	101
 10962  0105F8                     L9:
 10963  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10964                           
 10965                           ;stkvar	_nmode @ sp[(-56)+55]
 10966  0105FA  0EFF               	movlw	-1
 10967  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10968  010602                     l10536:
 10969                           
 10970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10971                           ;stkvar	_p @ sp[(-56)+40]
 10972                           ;stkvar	_m @ sp[(-56)+48]
 10973  010602  0EF0               	movlw	-16
 10974  010604  006F FF8C  F032    	movff	plusw1,btemp
 10975  01060A  0EF8               	movlw	-8
 10976  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10977  010612  0EF1               	movlw	-15
 10978  010614  006F FF8C  F032    	movff	plusw1,btemp
 10979  01061A  0EF9               	movlw	-7
 10980  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10981                           
 10982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10983                           ;stkvar	_mode @ sp[(-56)+54]
 10984  010622  0EFE               	movlw	-2
 10985  010624  006F FF8C  F032    	movff	plusw1,btemp
 10986  01062A  0E67               	movlw	103
 10987  01062C  1832               	xorwf	btemp^0,w,c
 10988  01062E  A4D8               	btfss	status,2,c
 10989  010630  D00B               	goto	u11130
 10990                           
 10991                           ;stkvar	_nmode @ sp[(-56)+55]
 10992  010632  0EFF               	movlw	-1
 10993  010634  006F FF8C  F032    	movff	plusw1,btemp
 10994  01063A  0E66               	movlw	102
 10995  01063C  1832               	xorwf	btemp^0,w,c
 10996  01063E  A4D8               	btfss	status,2,c
 10997  010640  D014               	goto	l1900
 10998                           
 10999                           ;stkvar	_e @ sp[(-56)+34]
 11000  010642  0EEB               	movlw	-21
 11001  010644  AEE3               	btfss	plusw1,7,c
 11002  010646  D011               	goto	l1900
 11003  010648                     u11130:
 11004                           
 11005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11006                           ;stkvar	_m @ sp[(-56)+48]
 11007  010648  0EF8               	movlw	-8
 11008  01064A  50E3               	movf	plusw1,w,c
 11009  01064C  0F01               	addlw	1
 11010  01064E  6E32               	movwf	btemp^0,c
 11011  010650  0EF8               	movlw	-8
 11012  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11013  010658  6A32               	clrf	btemp^0,c
 11014  01065A  0EF9               	movlw	-7
 11015  01065C  50E3               	movf	plusw1,w,c
 11016  01065E  2032               	addwfc	btemp^0,w,c
 11017  010660  6E32               	movwf	btemp^0,c
 11018  010662  0EF9               	movlw	-7
 11019  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11020  01066A                     l1900:
 11021                           
 11022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11023                           ;stkvar	_nmode @ sp[(-56)+55]
 11024  01066A  0EFF               	movlw	-1
 11025  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11026  010672  0E66               	movlw	102
 11027  010674  1832               	xorwf	btemp^0,w,c
 11028  010676  A4D8               	btfss	status,2,c
 11029  010678  D03B               	goto	l10556
 11030                           
 11031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11032                           ;stkvar	_e @ sp[(-56)+34]
 11033  01067A  0EEB               	movlw	-21
 11034  01067C  AEE3               	btfss	plusw1,7,c
 11035  01067E  D01C               	goto	l10552
 11036                           
 11037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11038  010680  0E00               	movlw	0
 11039  010682  6E3A               	movwf	(btemp+8)^0,c
 11040  010684  0E00               	movlw	0
 11041  010686  6E3B               	movwf	(btemp+9)^0,c
 11042  010688  0E80               	movlw	128
 11043  01068A  6E3C               	movwf	(btemp+10)^0,c
 11044  01068C  0E3F               	movlw	63
 11045  01068E  6E3D               	movwf	(btemp+11)^0,c
 11046                           
 11047                           ;stkvar	_u @ sp[(-56)+12]
 11048  010690  0ED4               	movlw	-44
 11049  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11050  010698  0ED5               	movlw	-43
 11051  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11052  0106A0  0ED6               	movlw	-42
 11053  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11054  0106A8  0ED7               	movlw	-41
 11055  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11056                           
 11057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11058                           ;stkvar	_e @ sp[(-56)+34]
 11059  0106B0  0EEA               	movlw	-22
 11060  0106B2  6AE3               	clrf	plusw1,c
 11061  0106B4  0EEB               	movlw	-21
 11062  0106B6  6AE3               	clrf	plusw1,c
 11063  0106B8                     l10552:
 11064                           
 11065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11066                           ;stkvar	_mode @ sp[(-56)+54]
 11067  0106B8  0EFE               	movlw	-2
 11068  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11069  0106C0  0E67               	movlw	103
 11070  0106C2  1832               	xorwf	btemp^0,w,c
 11071  0106C4  B4D8               	btfsc	status,2,c
 11072  0106C6  D014               	goto	l10556
 11073                           
 11074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11075                           ;stkvar	_e @ sp[(-56)+34]
 11076                           ;stkvar	_m @ sp[(-56)+48]
 11077  0106C8  0EF8               	movlw	-8
 11078  0106CA  50E3               	movf	plusw1,w,c
 11079  0106CC  6E32               	movwf	btemp^0,c
 11080  0106CE  0EEA               	movlw	-22
 11081  0106D0  50E3               	movf	plusw1,w,c
 11082  0106D2  2632               	addwf	btemp^0,f,c
 11083  0106D4  0EF8               	movlw	-8
 11084  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11085  0106DC  0EF9               	movlw	-7
 11086  0106DE  50E3               	movf	plusw1,w,c
 11087  0106E0  6E32               	movwf	btemp^0,c
 11088  0106E2  0EEB               	movlw	-21
 11089  0106E4  50E3               	movf	plusw1,w,c
 11090  0106E6  2232               	addwfc	btemp^0,f,c
 11091  0106E8  0EF9               	movlw	-7
 11092  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11093  0106F0                     l10556:
 11094                           
 11095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11096                           ;stkvar	_i @ sp[(-56)+36]
 11097  0106F0  0EEC               	movlw	-20
 11098  0106F2  6AE3               	clrf	plusw1,c
 11099  0106F4  0EED               	movlw	-19
 11100  0106F6  6AE3               	clrf	plusw1,c
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11103                           ;stkvar	_g @ sp[(-56)+16]
 11104  0106F8  0ED8               	movlw	-40
 11105  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11106  010700  0ED9               	movlw	-39
 11107  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11108  010708  0EDA               	movlw	-38
 11109  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11110  010710  0EDB               	movlw	-37
 11111  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11112                           
 11113                           ;stkvar	_h @ sp[(-56)+24]
 11114  010718  0EE0               	movlw	-32
 11115  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11116  010720  0EE1               	movlw	-31
 11117  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11118  010728  0EE2               	movlw	-30
 11119  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11120  010730  0EE3               	movlw	-29
 11121  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11122                           
 11123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11124                           ;stkvar	_u @ sp[(-56)+12]
 11125  010738  0ED4               	movlw	-44
 11126  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11127  010740  0ED5               	movlw	-43
 11128  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11129  010748  0ED6               	movlw	-42
 11130  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11131  010750  0ED7               	movlw	-41
 11132  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11133                           
 11134                           ;stkvar	_ou @ sp[(-56)+28]
 11135  010758  0EE4               	movlw	-28
 11136  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11137  010760  0EE5               	movlw	-27
 11138  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11139  010768  0EE6               	movlw	-26
 11140  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11141  010770  0EE7               	movlw	-25
 11142  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11143                           
 11144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11145  010778  D0D6               	goto	l10572
 11146  01077A                     l10562:
 11147                           
 11148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11149                           ;stkvar	_u @ sp[(-56)+12]
 11150  01077A  0ED4               	movlw	-44
 11151  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11152  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11153  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11154  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11155                           
 11156                           ;stkvar	_h @ sp[(-60)+24]
 11157  010794  0EDC               	movlw	-36
 11158  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11159  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11160  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11161  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11162  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 11163  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11164  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11165  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11166  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11167  0107CA  EC76  F0A2         	call	_floorf	;wreg free
 11168                           
 11169                           ;stkvar	_l @ sp[(-56)+20]
 11170  0107CE  0EDC               	movlw	-36
 11171  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11172  0107D6  0EDD               	movlw	-35
 11173  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11174  0107DE  0EDE               	movlw	-34
 11175  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11176  0107E6  0EDF               	movlw	-33
 11177  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11178                           
 11179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11180                           ;stkvar	_l @ sp[(-56)+20]
 11181  0107EE  0EDC               	movlw	-36
 11182  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11183  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11184  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11185  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11186  010808  EC40  F0AF         	call	___fltol	;wreg free
 11187  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11188  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11189                           
 11190                           ;stkvar	_d @ sp[(-56)+44]
 11191  010818  0EF4               	movlw	-12
 11192  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11193  010820  0EF5               	movlw	-11
 11194  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11195                           
 11196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11197                           ;stkvar	_u @ sp[(-56)+12]
 11198  010828  0ED4               	movlw	-44
 11199  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11200  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11201  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11202  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11203                           
 11204                           ;stkvar	_l @ sp[(-60)+20]
 11205  010842  0ED8               	movlw	-40
 11206  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11207  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11208  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11209  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11210  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11211  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11212  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11213  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11214  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11215                           
 11216                           ;stkvar	_h @ sp[(-60)+24]
 11217  010878  0EDC               	movlw	-36
 11218  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11219  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11220  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11221  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11222  010892  EC8B  F0BD         	call	___flsub	;wreg free
 11223                           
 11224                           ;stkvar	_h @ sp[(-56)+24]
 11225  010896  0EE0               	movlw	-32
 11226  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11227  01089E  0EE1               	movlw	-31
 11228  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11229  0108A6  0EE2               	movlw	-30
 11230  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11231  0108AE  0EE3               	movlw	-29
 11232  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11233                           
 11234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11235  0108B6  0E00               	movlw	0
 11236  0108B8  6EE6               	movwf	postinc1,c
 11237  0108BA  0E00               	movlw	0
 11238  0108BC  6EE6               	movwf	postinc1,c
 11239  0108BE  0E20               	movlw	32
 11240  0108C0  6EE6               	movwf	postinc1,c
 11241  0108C2  0E41               	movlw	65
 11242  0108C4  6EE6               	movwf	postinc1,c
 11243                           
 11244                           ;stkvar	_u @ sp[(-60)+12]
 11245  0108C6  0ED0               	movlw	-48
 11246  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11247  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11248  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11249  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11250  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 11251                           
 11252                           ;stkvar	_u @ sp[(-56)+12]
 11253  0108E4  0ED4               	movlw	-44
 11254  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11255  0108EC  0ED5               	movlw	-43
 11256  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11257  0108F4  0ED6               	movlw	-42
 11258  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11259  0108FC  0ED7               	movlw	-41
 11260  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11261                           
 11262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11263                           ;stkvar	_i @ sp[(-56)+36]
 11264  010904  0EEC               	movlw	-20
 11265  010906  50E3               	movf	plusw1,w,c
 11266  010908  0F01               	addlw	1
 11267  01090A  6E32               	movwf	btemp^0,c
 11268  01090C  0EEC               	movlw	-20
 11269  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11270  010914  6A32               	clrf	btemp^0,c
 11271  010916  0EED               	movlw	-19
 11272  010918  50E3               	movf	plusw1,w,c
 11273  01091A  2032               	addwfc	btemp^0,w,c
 11274  01091C  6E32               	movwf	btemp^0,c
 11275  01091E  0EED               	movlw	-19
 11276  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11277  010926                     l10572:
 11278                           
 11279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11280                           ;stkvar	_m @ sp[(-56)+48]
 11281                           ;stkvar	_i @ sp[(-56)+36]
 11282  010926  50E1               	movf	fsr1l,w,c
 11283  010928  0FEC               	addlw	-20
 11284  01092A  6ED9               	movwf	fsr2l,c
 11285  01092C  50E2               	movf	fsr1h,w,c
 11286  01092E  6EDA               	movwf	fsr2h,c
 11287  010930  0EFF               	movlw	255
 11288  010932  22DA               	addwfc	fsr2h,f,c
 11289  010934  0EF8               	movlw	-8
 11290  010936  50E3               	movf	plusw1,w,c
 11291  010938  5CDE               	subwf	postinc2,w,c
 11292  01093A  50DE               	movf	postinc2,w,c
 11293  01093C  0A80               	xorlw	128
 11294  01093E  6E32               	movwf	btemp^0,c
 11295  010940  0EF9               	movlw	-7
 11296  010942  50E3               	movf	plusw1,w,c
 11297  010944  0A80               	xorlw	128
 11298  010946  5832               	subwfb	btemp^0,w,c
 11299  010948  A0D8               	btfss	status,0,c
 11300  01094A  D717               	goto	l10562
 11301                           
 11302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11303  01094C  0E00               	movlw	0
 11304  01094E  6EE6               	movwf	postinc1,c
 11305  010950  0E00               	movlw	0
 11306  010952  6EE6               	movwf	postinc1,c
 11307  010954  0EA0               	movlw	160
 11308  010956  6EE6               	movwf	postinc1,c
 11309  010958  0E40               	movlw	64
 11310  01095A  6EE6               	movwf	postinc1,c
 11311                           
 11312                           ;stkvar	_u @ sp[(-60)+12]
 11313  01095C  0ED0               	movlw	-48
 11314  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11315  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11316  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11317  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11318  010976  ECC1  F08E         	call	___flmul	;wreg free
 11319                           
 11320                           ;stkvar	_l @ sp[(-56)+20]
 11321  01097A  0EDC               	movlw	-36
 11322  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11323  010982  0EDD               	movlw	-35
 11324  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11325  01098A  0EDE               	movlw	-34
 11326  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11327  010992  0EDF               	movlw	-33
 11328  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11329                           
 11330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11331                           ;stkvar	_l @ sp[(-56)+20]
 11332  01099A  0EDC               	movlw	-36
 11333  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11334  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11335  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11336  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11337                           
 11338                           ;stkvar	_h @ sp[(-60)+24]
 11339  0109B4  0EDC               	movlw	-36
 11340  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11341  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11342  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11343  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11344  0109CE  ECF9  F0AF         	call	___flge	;wreg free
 11345  0109D2  A032               	btfss	btemp& (0+255),0,c
 11346  0109D4  D021               	goto	u11200
 11347                           
 11348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11349                           ;stkvar	_l @ sp[(-56)+20]
 11350                           
 11351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11352                           
 11353                           ;stkvar	_l @ sp[(-56)+20]
 11354                           
 11355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11356  0109D6  0EDC               	movlw	-36
 11357  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11358  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11359  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11360  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11361                           
 11362                           ;stkvar	_h @ sp[(-60)+24]
 11363  0109F0  0EDC               	movlw	-36
 11364  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11365  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11366  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11367  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11368  010A0A  EC99  F0B6         	call	___fleq	;wreg free
 11369  010A0E  A032               	btfss	btemp& (0+255),0,c
 11370  010A10  D01B               	goto	l10586
 11371                           
 11372                           ;stkvar	_d @ sp[(-56)+44]
 11373  010A12  0EF4               	movlw	-12
 11374  010A14  B0E3               	btfsc	plusw1,0,c
 11375  010A16  D018               	goto	l10586
 11376  010A18                     u11200:
 11377                           
 11378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11379  010A18  0E00               	movlw	0
 11380  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11381  010A1C  0E00               	movlw	0
 11382  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11383  010A20  0E00               	movlw	0
 11384  010A22  6E3C               	movwf	(btemp+10)^0,c
 11385  010A24  0E00               	movlw	0
 11386  010A26  6E3D               	movwf	(btemp+11)^0,c
 11387                           
 11388                           ;stkvar	_l @ sp[(-56)+20]
 11389  010A28  0EDC               	movlw	-36
 11390  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11391  010A30  0EDD               	movlw	-35
 11392  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11393  010A38  0EDE               	movlw	-34
 11394  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11395  010A40  0EDF               	movlw	-33
 11396  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11397  010A48                     l10586:
 11398                           
 11399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11400                           ;stkvar	_l @ sp[(-56)+20]
 11401  010A48  0EDC               	movlw	-36
 11402  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11403  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11404  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11405  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11406                           
 11407                           ;stkvar	_g @ sp[(-60)+16]
 11408  010A62  0ED4               	movlw	-44
 11409  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11410  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11411  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11412  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11413  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11414                           
 11415                           ;stkvar	_h @ sp[(-56)+24]
 11416  010A80  0EE0               	movlw	-32
 11417  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11418  010A88  0EE1               	movlw	-31
 11419  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11420  010A90  0EE2               	movlw	-30
 11421  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11422  010A98  0EE3               	movlw	-29
 11423  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11424                           
 11425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11426                           ;stkvar	_ou @ sp[(-56)+28]
 11427  010AA0  0EE4               	movlw	-28
 11428  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11429  010AA8  0EE5               	movlw	-27
 11430  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11431  010AB0  0EE6               	movlw	-26
 11432  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11433  010AB8  0EE7               	movlw	-25
 11434  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11435                           
 11436                           ;stkvar	_u @ sp[(-56)+12]
 11437  010AC0  0ED4               	movlw	-44
 11438  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11439  010AC8  0ED5               	movlw	-43
 11440  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11441  010AD0  0ED6               	movlw	-42
 11442  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11443  010AD8  0ED7               	movlw	-41
 11444  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11445                           
 11446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11447                           ;stkvar	_nmode @ sp[(-56)+55]
 11448  010AE0  0EFF               	movlw	-1
 11449  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11450  010AE8  0E65               	movlw	101
 11451  010AEA  1832               	xorwf	btemp^0,w,c
 11452  010AEC  B4D8               	btfsc	status,2,c
 11453  010AEE  D011               	goto	l10594
 11454                           
 11455                           ;stkvar	_e @ sp[(-56)+34]
 11456                           ;stkvar	_ne @ sp[(-56)+46]
 11457  010AF0  0EEA               	movlw	-22
 11458  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11459  010AF8  0EF6               	movlw	-10
 11460  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11461  010B00  0EEB               	movlw	-21
 11462  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11463  010B08  0EF7               	movlw	-9
 11464  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11465  010B10  D004               	goto	l1915
 11466  010B12                     l10594:
 11467                           
 11468                           ;stkvar	_ne @ sp[(-56)+46]
 11469  010B12  0EF6               	movlw	-10
 11470  010B14  6AE3               	clrf	plusw1,c
 11471  010B16  0EF7               	movlw	-9
 11472  010B18  6AE3               	clrf	plusw1,c
 11473  010B1A                     l1915:
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11476                           ;stkvar	_pp @ sp[(-56)+50]
 11477  010B1A  0EFA               	movlw	-6
 11478  010B1C  6AE3               	clrf	plusw1,c
 11479  010B1E  0EFB               	movlw	-5
 11480  010B20  6AE3               	clrf	plusw1,c
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11483                           ;stkvar	_t @ sp[(-56)+52]
 11484  010B22  0EFC               	movlw	-4
 11485  010B24  6AE3               	clrf	plusw1,c
 11486  010B26  0EFD               	movlw	-3
 11487  010B28  6AE3               	clrf	plusw1,c
 11488                           
 11489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11490                           ;stkvar	_i @ sp[(-56)+36]
 11491  010B2A  0EEC               	movlw	-20
 11492  010B2C  6AE3               	clrf	plusw1,c
 11493  010B2E  0EED               	movlw	-19
 11494  010B30  6AE3               	clrf	plusw1,c
 11495                           
 11496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11497  010B32  D1B7               	goto	l10646
 11498  010B34                     l10596:
 11499                           
 11500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11501                           ;stkvar	_u @ sp[(-56)+12]
 11502  010B34  0ED4               	movlw	-44
 11503  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11504  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11505  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11506  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11507                           
 11508                           ;stkvar	_h @ sp[(-60)+24]
 11509  010B4E  0EDC               	movlw	-36
 11510  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11511  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11512  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11513  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11514  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11515  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11516  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11517  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11518  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11519  010B84  EC76  F0A2         	call	_floorf	;wreg free
 11520                           
 11521                           ;stkvar	_l @ sp[(-56)+20]
 11522  010B88  0EDC               	movlw	-36
 11523  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11524  010B90  0EDD               	movlw	-35
 11525  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11526  010B98  0EDE               	movlw	-34
 11527  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11528  010BA0  0EDF               	movlw	-33
 11529  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11530                           
 11531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11532                           ;stkvar	_l @ sp[(-56)+20]
 11533  010BA8  0EDC               	movlw	-36
 11534  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11535  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11536  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11537  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11538  010BC2  EC40  F0AF         	call	___fltol	;wreg free
 11539  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11540  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11541                           
 11542                           ;stkvar	_d @ sp[(-56)+44]
 11543  010BD2  0EF4               	movlw	-12
 11544  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11545  010BDA  0EF5               	movlw	-11
 11546  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11547                           
 11548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11549  010BE2  B81F               	btfsc	_flags^0,4,c
 11550  010BE4  D026               	goto	l10610
 11551                           
 11552                           ;stkvar	_d @ sp[(-56)+44]
 11553  010BE6  0EF4               	movlw	-12
 11554  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11555  010BEE  0EF5               	movlw	-11
 11556  010BF0  50E3               	movf	plusw1,w,c
 11557  010BF2  1032               	iorwf	btemp^0,w,c
 11558  010BF4  A4D8               	btfss	status,2,c
 11559  010BF6  D01D               	goto	l10610
 11560                           
 11561                           ;stkvar	_mode @ sp[(-56)+54]
 11562  010BF8  0EFE               	movlw	-2
 11563  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11564  010C00  0E67               	movlw	103
 11565  010C02  1832               	xorwf	btemp^0,w,c
 11566  010C04  A4D8               	btfss	status,2,c
 11567  010C06  D015               	goto	l10610
 11568                           
 11569                           ;stkvar	_ne @ sp[(-56)+46]
 11570  010C08  0EF7               	movlw	-9
 11571  010C0A  AEE3               	btfss	plusw1,7,c
 11572  010C0C  D012               	goto	l10610
 11573                           
 11574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11575                           ;stkvar	_t @ sp[(-56)+52]
 11576  010C0E  0EFC               	movlw	-4
 11577  010C10  50E3               	movf	plusw1,w,c
 11578  010C12  0F01               	addlw	1
 11579  010C14  6E32               	movwf	btemp^0,c
 11580  010C16  0EFC               	movlw	-4
 11581  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11582  010C1E  6A32               	clrf	btemp^0,c
 11583  010C20  0EFD               	movlw	-3
 11584  010C22  50E3               	movf	plusw1,w,c
 11585  010C24  2032               	addwfc	btemp^0,w,c
 11586  010C26  6E32               	movwf	btemp^0,c
 11587  010C28  0EFD               	movlw	-3
 11588  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11589                           
 11590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11591  010C30  D0AF               	goto	l10638
 11592  010C32                     l10610:
 11593                           
 11594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11595                           ;stkvar	_pp @ sp[(-56)+50]
 11596  010C32  0EFA               	movlw	-6
 11597  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11598  010C3A  0EFB               	movlw	-5
 11599  010C3C  50E3               	movf	plusw1,w,c
 11600  010C3E  1032               	iorwf	btemp^0,w,c
 11601  010C40  A4D8               	btfss	status,2,c
 11602  010C42  D070               	goto	l10630
 11603                           
 11604                           ;stkvar	_ne @ sp[(-56)+46]
 11605  010C44  0EF7               	movlw	-9
 11606  010C46  AEE3               	btfss	plusw1,7,c
 11607  010C48  D06D               	goto	l10630
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11610                           ;stkvar	_n @ sp[(-56)+32]
 11611  010C4A  0EE8               	movlw	-24
 11612  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11613  010C52  0EE9               	movlw	-23
 11614  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11615  010C5A  0E40               	movlw	low _dbuf
 11616  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11617  010C5E  6ED9               	movwf	fsr2l,c
 11618  010C60  0E02               	movlw	high _dbuf
 11619  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11620  010C64  6EDA               	movwf	fsr2h,c
 11621  010C66  0E2E               	movlw	46
 11622  010C68  6EDF               	movwf	indf2,c
 11623                           
 11624                           ;stkvar	_n @ sp[(-56)+32]
 11625  010C6A  0EE8               	movlw	-24
 11626  010C6C  50E3               	movf	plusw1,w,c
 11627  010C6E  0F01               	addlw	1
 11628  010C70  6E32               	movwf	btemp^0,c
 11629  010C72  0EE8               	movlw	-24
 11630  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11631  010C7A  6A32               	clrf	btemp^0,c
 11632  010C7C  0EE9               	movlw	-23
 11633  010C7E  50E3               	movf	plusw1,w,c
 11634  010C80  2032               	addwfc	btemp^0,w,c
 11635  010C82  6E32               	movwf	btemp^0,c
 11636  010C84  0EE9               	movlw	-23
 11637  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11638                           
 11639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11640                           ;stkvar	_w @ sp[(-56)+38]
 11641  010C8C  50E1               	movf	fsr1l,w,c
 11642  010C8E  0FEE               	addlw	-18
 11643  010C90  6ED9               	movwf	fsr2l,c
 11644  010C92  50E2               	movf	fsr1h,w,c
 11645  010C94  6EDA               	movwf	fsr2h,c
 11646  010C96  0EFF               	movlw	255
 11647  010C98  22DA               	addwfc	fsr2h,f,c
 11648  010C9A  06DE               	decf	postinc2,f,c
 11649  010C9C  0E00               	movlw	0
 11650  010C9E  5ADD               	subwfb	postdec2,f,c
 11651                           
 11652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11653  010CA0  0E01               	movlw	1
 11654  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11655  010CA4  0E00               	movlw	0
 11656  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11657                           
 11658                           ;stkvar	_pp @ sp[(-56)+50]
 11659  010CA8  0EFA               	movlw	-6
 11660  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11661  010CB0  0EFB               	movlw	-5
 11662  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11663  010CB8  D035               	goto	l10630
 11664  010CBA                     l10622:
 11665                           
 11666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11667                           ;stkvar	_n @ sp[(-56)+32]
 11668  010CBA  0EE8               	movlw	-24
 11669  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11670  010CC2  0EE9               	movlw	-23
 11671  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11672  010CCA  0E40               	movlw	low _dbuf
 11673  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11674  010CCE  6ED9               	movwf	fsr2l,c
 11675  010CD0  0E02               	movlw	high _dbuf
 11676  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11677  010CD4  6EDA               	movwf	fsr2h,c
 11678  010CD6  0E30               	movlw	48
 11679  010CD8  6EDF               	movwf	indf2,c
 11680                           
 11681                           ;stkvar	_n @ sp[(-56)+32]
 11682  010CDA  0EE8               	movlw	-24
 11683  010CDC  50E3               	movf	plusw1,w,c
 11684  010CDE  0F01               	addlw	1
 11685  010CE0  6E32               	movwf	btemp^0,c
 11686  010CE2  0EE8               	movlw	-24
 11687  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11688  010CEA  6A32               	clrf	btemp^0,c
 11689  010CEC  0EE9               	movlw	-23
 11690  010CEE  50E3               	movf	plusw1,w,c
 11691  010CF0  2032               	addwfc	btemp^0,w,c
 11692  010CF2  6E32               	movwf	btemp^0,c
 11693  010CF4  0EE9               	movlw	-23
 11694  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11695                           
 11696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11697                           ;stkvar	_w @ sp[(-56)+38]
 11698  010CFC  50E1               	movf	fsr1l,w,c
 11699  010CFE  0FEE               	addlw	-18
 11700  010D00  6ED9               	movwf	fsr2l,c
 11701  010D02  50E2               	movf	fsr1h,w,c
 11702  010D04  6EDA               	movwf	fsr2h,c
 11703  010D06  0EFF               	movlw	255
 11704  010D08  22DA               	addwfc	fsr2h,f,c
 11705  010D0A  06DE               	decf	postinc2,f,c
 11706  010D0C  0E00               	movlw	0
 11707  010D0E  5ADD               	subwfb	postdec2,f,c
 11708                           
 11709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11710                           ;stkvar	_t @ sp[(-56)+52]
 11711  010D10  50E1               	movf	fsr1l,w,c
 11712  010D12  0FFC               	addlw	-4
 11713  010D14  6ED9               	movwf	fsr2l,c
 11714  010D16  50E2               	movf	fsr1h,w,c
 11715  010D18  6EDA               	movwf	fsr2h,c
 11716  010D1A  0EFF               	movlw	255
 11717  010D1C  22DA               	addwfc	fsr2h,f,c
 11718  010D1E  06DE               	decf	postinc2,f,c
 11719  010D20  0E00               	movlw	0
 11720  010D22  5ADD               	subwfb	postdec2,f,c
 11721  010D24                     l10630:
 11722                           
 11723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11724                           ;stkvar	_t @ sp[(-56)+52]
 11725  010D24  0EFC               	movlw	-4
 11726  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11727  010D2C  0EFD               	movlw	-3
 11728  010D2E  50E3               	movf	plusw1,w,c
 11729  010D30  1032               	iorwf	btemp^0,w,c
 11730  010D32  A4D8               	btfss	status,2,c
 11731  010D34  D7C2               	goto	l10622
 11732                           
 11733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11734                           ;stkvar	_n @ sp[(-56)+32]
 11735  010D36  0EE8               	movlw	-24
 11736  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11737  010D3E  0EE9               	movlw	-23
 11738  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11739  010D46  0E40               	movlw	low _dbuf
 11740  010D48  243C               	addwf	(btemp+10)^0,w,c
 11741  010D4A  6ED9               	movwf	fsr2l,c
 11742  010D4C  0E02               	movlw	high _dbuf
 11743  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11744  010D50  6EDA               	movwf	fsr2h,c
 11745                           
 11746                           ;stkvar	_d @ sp[(-56)+44]
 11747  010D52  0EF4               	movlw	-12
 11748  010D54  50E3               	movf	plusw1,w,c
 11749  010D56  0F30               	addlw	48
 11750  010D58  6EDF               	movwf	indf2,c
 11751                           
 11752                           ;stkvar	_n @ sp[(-56)+32]
 11753  010D5A  0EE8               	movlw	-24
 11754  010D5C  50E3               	movf	plusw1,w,c
 11755  010D5E  0F01               	addlw	1
 11756  010D60  6E32               	movwf	btemp^0,c
 11757  010D62  0EE8               	movlw	-24
 11758  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11759  010D6A  6A32               	clrf	btemp^0,c
 11760  010D6C  0EE9               	movlw	-23
 11761  010D6E  50E3               	movf	plusw1,w,c
 11762  010D70  2032               	addwfc	btemp^0,w,c
 11763  010D72  6E32               	movwf	btemp^0,c
 11764  010D74  0EE9               	movlw	-23
 11765  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11766                           
 11767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11768                           ;stkvar	_w @ sp[(-56)+38]
 11769  010D7C  50E1               	movf	fsr1l,w,c
 11770  010D7E  0FEE               	addlw	-18
 11771  010D80  6ED9               	movwf	fsr2l,c
 11772  010D82  50E2               	movf	fsr1h,w,c
 11773  010D84  6EDA               	movwf	fsr2h,c
 11774  010D86  0EFF               	movlw	255
 11775  010D88  22DA               	addwfc	fsr2h,f,c
 11776  010D8A  06DE               	decf	postinc2,f,c
 11777  010D8C  0E00               	movlw	0
 11778  010D8E  5ADD               	subwfb	postdec2,f,c
 11779  010D90                     l10638:
 11780                           
 11781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11782                           ;stkvar	_u @ sp[(-56)+12]
 11783  010D90  0ED4               	movlw	-44
 11784  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11785  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11786  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11787  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11788                           
 11789                           ;stkvar	_l @ sp[(-60)+20]
 11790  010DAA  0ED8               	movlw	-40
 11791  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11792  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11793  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11794  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11795  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11796  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11797  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11798  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11799  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11800                           
 11801                           ;stkvar	_h @ sp[(-60)+24]
 11802  010DE0  0EDC               	movlw	-36
 11803  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11804  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11805  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11806  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11807  010DFA  EC8B  F0BD         	call	___flsub	;wreg free
 11808                           
 11809                           ;stkvar	_h @ sp[(-56)+24]
 11810  010DFE  0EE0               	movlw	-32
 11811  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11812  010E06  0EE1               	movlw	-31
 11813  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11814  010E0E  0EE2               	movlw	-30
 11815  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11816  010E16  0EE3               	movlw	-29
 11817  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11818                           
 11819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11820  010E1E  0E00               	movlw	0
 11821  010E20  6EE6               	movwf	postinc1,c
 11822  010E22  0E00               	movlw	0
 11823  010E24  6EE6               	movwf	postinc1,c
 11824  010E26  0E20               	movlw	32
 11825  010E28  6EE6               	movwf	postinc1,c
 11826  010E2A  0E41               	movlw	65
 11827  010E2C  6EE6               	movwf	postinc1,c
 11828                           
 11829                           ;stkvar	_u @ sp[(-60)+12]
 11830  010E2E  0ED0               	movlw	-48
 11831  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11832  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11833  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11834  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11835  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11836                           
 11837                           ;stkvar	_u @ sp[(-56)+12]
 11838  010E4C  0ED4               	movlw	-44
 11839  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11840  010E54  0ED5               	movlw	-43
 11841  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11842  010E5C  0ED6               	movlw	-42
 11843  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11844  010E64  0ED7               	movlw	-41
 11845  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11848                           ;stkvar	_ne @ sp[(-56)+46]
 11849  010E6C  50E1               	movf	fsr1l,w,c
 11850  010E6E  0FF6               	addlw	-10
 11851  010E70  6ED9               	movwf	fsr2l,c
 11852  010E72  50E2               	movf	fsr1h,w,c
 11853  010E74  6EDA               	movwf	fsr2h,c
 11854  010E76  0EFF               	movlw	255
 11855  010E78  22DA               	addwfc	fsr2h,f,c
 11856  010E7A  06DE               	decf	postinc2,f,c
 11857  010E7C  0E00               	movlw	0
 11858  010E7E  5ADD               	subwfb	postdec2,f,c
 11859                           
 11860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11861                           ;stkvar	_i @ sp[(-56)+36]
 11862  010E80  0EEC               	movlw	-20
 11863  010E82  50E3               	movf	plusw1,w,c
 11864  010E84  0F01               	addlw	1
 11865  010E86  6E32               	movwf	btemp^0,c
 11866  010E88  0EEC               	movlw	-20
 11867  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11868  010E90  6A32               	clrf	btemp^0,c
 11869  010E92  0EED               	movlw	-19
 11870  010E94  50E3               	movf	plusw1,w,c
 11871  010E96  2032               	addwfc	btemp^0,w,c
 11872  010E98  6E32               	movwf	btemp^0,c
 11873  010E9A  0EED               	movlw	-19
 11874  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11875  010EA2                     l10646:
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11878                           ;stkvar	_m @ sp[(-56)+48]
 11879                           ;stkvar	_i @ sp[(-56)+36]
 11880  010EA2  50E1               	movf	fsr1l,w,c
 11881  010EA4  0FEC               	addlw	-20
 11882  010EA6  6ED9               	movwf	fsr2l,c
 11883  010EA8  50E2               	movf	fsr1h,w,c
 11884  010EAA  6EDA               	movwf	fsr2h,c
 11885  010EAC  0EFF               	movlw	255
 11886  010EAE  22DA               	addwfc	fsr2h,f,c
 11887  010EB0  0EF8               	movlw	-8
 11888  010EB2  50E3               	movf	plusw1,w,c
 11889  010EB4  5CDE               	subwf	postinc2,w,c
 11890  010EB6  50DE               	movf	postinc2,w,c
 11891  010EB8  0A80               	xorlw	128
 11892  010EBA  6E32               	movwf	btemp^0,c
 11893  010EBC  0EF9               	movlw	-7
 11894  010EBE  50E3               	movf	plusw1,w,c
 11895  010EC0  0A80               	xorlw	128
 11896  010EC2  5832               	subwfb	btemp^0,w,c
 11897  010EC4  B0D8               	btfsc	status,0,c
 11898  010EC6  D00E               	goto	u11300
 11899                           
 11900                           ;stkvar	_n @ sp[(-56)+32]
 11901  010EC8  0EE9               	movlw	-23
 11902  010ECA  BEE3               	btfsc	plusw1,7,c
 11903  010ECC  D633               	goto	l10596
 11904  010ECE  0EE9               	movlw	-23
 11905  010ED0  50E3               	movf	plusw1,w,c
 11906  010ED2  E108               	bnz	u11300
 11907  010ED4  0EE8               	movlw	-24
 11908  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11909  010EDC  0E4B               	movlw	75
 11910  010EDE  5E32               	subwf	btemp^0,f,c
 11911  010EE0  A0D8               	btfss	status,0,c
 11912  010EE2  D628               	goto	l10596
 11913  010EE4                     u11300:
 11914                           
 11915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11916                           ;stkvar	_pp @ sp[(-56)+50]
 11917  010EE4  0EFA               	movlw	-6
 11918  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11919  010EEC  0EFB               	movlw	-5
 11920  010EEE  50E3               	movf	plusw1,w,c
 11921  010EF0  1032               	iorwf	btemp^0,w,c
 11922  010EF2  B4D8               	btfsc	status,2,c
 11923  010EF4  A81F               	btfss	_flags^0,4,c
 11924  010EF6  D021               	goto	l10658
 11925                           
 11926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11927                           ;stkvar	_n @ sp[(-56)+32]
 11928  010EF8  0EE8               	movlw	-24
 11929  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11930  010F00  0EE9               	movlw	-23
 11931  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11932  010F08  0E40               	movlw	low _dbuf
 11933  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11934  010F0C  6ED9               	movwf	fsr2l,c
 11935  010F0E  0E02               	movlw	high _dbuf
 11936  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11937  010F12  6EDA               	movwf	fsr2h,c
 11938  010F14  0E2E               	movlw	46
 11939  010F16  6EDF               	movwf	indf2,c
 11940                           
 11941                           ;stkvar	_n @ sp[(-56)+32]
 11942  010F18  0EE8               	movlw	-24
 11943  010F1A  50E3               	movf	plusw1,w,c
 11944  010F1C  0F01               	addlw	1
 11945  010F1E  6E32               	movwf	btemp^0,c
 11946  010F20  0EE8               	movlw	-24
 11947  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11948  010F28  6A32               	clrf	btemp^0,c
 11949  010F2A  0EE9               	movlw	-23
 11950  010F2C  50E3               	movf	plusw1,w,c
 11951  010F2E  2032               	addwfc	btemp^0,w,c
 11952  010F30  6E32               	movwf	btemp^0,c
 11953  010F32  0EE9               	movlw	-23
 11954  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11955  010F3A                     l10658:
 11956                           
 11957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11958                           ;stkvar	_n @ sp[(-56)+32]
 11959  010F3A  0EE8               	movlw	-24
 11960  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11961  010F42  0EE9               	movlw	-23
 11962  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11963  010F4A  0E40               	movlw	low _dbuf
 11964  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11965  010F4E  6ED9               	movwf	fsr2l,c
 11966  010F50  0E02               	movlw	high _dbuf
 11967  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11968  010F54  6EDA               	movwf	fsr2h,c
 11969  010F56  0E00               	movlw	0
 11970  010F58  6EDF               	movwf	indf2,c
 11971                           
 11972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11973                           ;stkvar	_nmode @ sp[(-56)+55]
 11974  010F5A  0EFF               	movlw	-1
 11975  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11976  010F62  0E65               	movlw	101
 11977  010F64  1832               	xorwf	btemp^0,w,c
 11978  010F66  A4D8               	btfss	status,2,c
 11979  010F68  EF16  F081         	goto	l10462
 11980                           
 11981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11982  010F6C  0E4F               	movlw	79
 11983  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11984  010F70  0E00               	movlw	0
 11985  010F72  6E3D               	movwf	(btemp+11)^0,c
 11986                           
 11987                           ;stkvar	_i @ sp[(-56)+36]
 11988  010F74  0EEC               	movlw	-20
 11989  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11990  010F7C  0EED               	movlw	-19
 11991  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11992                           
 11993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11994                           ;stkvar	_i @ sp[(-56)+36]
 11995  010F84  0EEC               	movlw	-20
 11996  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11997  010F8C  0EED               	movlw	-19
 11998  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11999  010F94  0E40               	movlw	low _dbuf
 12000  010F96  243C               	addwf	(btemp+10)^0,w,c
 12001  010F98  6ED9               	movwf	fsr2l,c
 12002  010F9A  0E02               	movlw	high _dbuf
 12003  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12004  010F9E  6EDA               	movwf	fsr2h,c
 12005  010FA0  0E00               	movlw	0
 12006  010FA2  6EDF               	movwf	indf2,c
 12007                           
 12008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12009                           ;stkvar	_sign @ sp[(-56)+42]
 12010  010FA4  0EF2               	movlw	-14
 12011  010FA6  6AE3               	clrf	plusw1,c
 12012  010FA8  0EF3               	movlw	-13
 12013  010FAA  6AE3               	clrf	plusw1,c
 12014                           
 12015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12016                           ;stkvar	_e @ sp[(-56)+34]
 12017  010FAC  0EEB               	movlw	-21
 12018  010FAE  AEE3               	btfss	plusw1,7,c
 12019  010FB0  D012               	goto	l10672
 12020                           
 12021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12022  010FB2  0E01               	movlw	1
 12023  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12024  010FB6  0E00               	movlw	0
 12025  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12026                           
 12027                           ;stkvar	_sign @ sp[(-56)+42]
 12028  010FBA  0EF2               	movlw	-14
 12029  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12030  010FC2  0EF3               	movlw	-13
 12031  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12032                           
 12033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12034                           ;stkvar	_e @ sp[(-56)+34]
 12035                           ;stkvar	_e @ sp[(-56)+34]
 12036  010FCA  0EEA               	movlw	-22
 12037  010FCC  6CE3               	negf	plusw1,c
 12038  010FCE  0EEB               	movlw	-21
 12039  010FD0  1EE3               	comf	plusw1,f,c
 12040  010FD2  B0D8               	btfsc	status,0,c
 12041  010FD4  2AE3               	incf	plusw1,f,c
 12042  010FD6                     l10672:
 12043                           
 12044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12045  010FD6  0E02               	movlw	2
 12046  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12047  010FDA  0E00               	movlw	0
 12048  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12049                           
 12050                           ;stkvar	_p @ sp[(-56)+40]
 12051  010FDE  0EF0               	movlw	-16
 12052  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12053  010FE6  0EF1               	movlw	-15
 12054  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12055                           
 12056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12057  010FEE  D051               	goto	l10684
 12058  010FF0                     l10674:
 12059                           
 12060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12061                           ;stkvar	_i @ sp[(-56)+36]
 12062  010FF0  50E1               	movf	fsr1l,w,c
 12063  010FF2  0FEC               	addlw	-20
 12064  010FF4  6ED9               	movwf	fsr2l,c
 12065  010FF6  50E2               	movf	fsr1h,w,c
 12066  010FF8  6EDA               	movwf	fsr2h,c
 12067  010FFA  0EFF               	movlw	255
 12068  010FFC  22DA               	addwfc	fsr2h,f,c
 12069  010FFE  06DE               	decf	postinc2,f,c
 12070  011000  0E00               	movlw	0
 12071  011002  5ADD               	subwfb	postdec2,f,c
 12072                           
 12073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12074                           ;stkvar	_i @ sp[(-56)+36]
 12075  011004  0EEC               	movlw	-20
 12076  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12077  01100C  0EED               	movlw	-19
 12078  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12079  011014  0E40               	movlw	low _dbuf
 12080  011016  243C               	addwf	(btemp+10)^0,w,c
 12081  011018  6ED9               	movwf	fsr2l,c
 12082  01101A  0E02               	movlw	high _dbuf
 12083  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12084  01101E  6EDA               	movwf	fsr2h,c
 12085  011020  0E0A               	movlw	10
 12086  011022  6EE6               	movwf	postinc1,c
 12087  011024  0E00               	movlw	0
 12088  011026  6EE6               	movwf	postinc1,c
 12089                           
 12090                           ;stkvar	_e @ sp[(-58)+34]
 12091  011028  0EE8               	movlw	-24
 12092  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12093  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12094  011036  EC1E  F0B3         	call	___awmod	;wreg free
 12095  01103A  5032               	movf	btemp^0,w,c
 12096  01103C  0F30               	addlw	48
 12097  01103E  6EDF               	movwf	indf2,c
 12098                           
 12099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12100  011040  0E0A               	movlw	10
 12101  011042  6EE6               	movwf	postinc1,c
 12102  011044  0E00               	movlw	0
 12103  011046  6EE6               	movwf	postinc1,c
 12104                           
 12105                           ;stkvar	_e @ sp[(-58)+34]
 12106  011048  0EE8               	movlw	-24
 12107  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12108  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12109  011056  ECAA  F0B0         	call	___awdiv	;wreg free
 12110                           
 12111                           ;stkvar	_e @ sp[(-56)+34]
 12112  01105A  0EEA               	movlw	-22
 12113  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12114  011062  0EEB               	movlw	-21
 12115  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12116                           
 12117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12118                           ;stkvar	_p @ sp[(-56)+40]
 12119  01106A  50E1               	movf	fsr1l,w,c
 12120  01106C  0FF0               	addlw	-16
 12121  01106E  6ED9               	movwf	fsr2l,c
 12122  011070  50E2               	movf	fsr1h,w,c
 12123  011072  6EDA               	movwf	fsr2h,c
 12124  011074  0EFF               	movlw	255
 12125  011076  22DA               	addwfc	fsr2h,f,c
 12126  011078  06DE               	decf	postinc2,f,c
 12127  01107A  0E00               	movlw	0
 12128  01107C  5ADD               	subwfb	postdec2,f,c
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12131                           ;stkvar	_w @ sp[(-56)+38]
 12132  01107E  50E1               	movf	fsr1l,w,c
 12133  011080  0FEE               	addlw	-18
 12134  011082  6ED9               	movwf	fsr2l,c
 12135  011084  50E2               	movf	fsr1h,w,c
 12136  011086  6EDA               	movwf	fsr2h,c
 12137  011088  0EFF               	movlw	255
 12138  01108A  22DA               	addwfc	fsr2h,f,c
 12139  01108C  06DE               	decf	postinc2,f,c
 12140  01108E  0E00               	movlw	0
 12141  011090  5ADD               	subwfb	postdec2,f,c
 12142  011092                     l10684:
 12143                           
 12144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12145                           ;stkvar	_e @ sp[(-56)+34]
 12146  011092  0EEA               	movlw	-22
 12147  011094  006F FF8C  F032    	movff	plusw1,btemp
 12148  01109A  0EEB               	movlw	-21
 12149  01109C  50E3               	movf	plusw1,w,c
 12150  01109E  1032               	iorwf	btemp^0,w,c
 12151  0110A0  A4D8               	btfss	status,2,c
 12152  0110A2  D7A6               	goto	l10674
 12153                           
 12154                           ;stkvar	_p @ sp[(-56)+40]
 12155  0110A4  0EF1               	movlw	-15
 12156  0110A6  BEE3               	btfsc	plusw1,7,c
 12157  0110A8  D007               	goto	u11360
 12158  0110AA  0EF1               	movlw	-15
 12159  0110AC  50E3               	movf	plusw1,w,c
 12160  0110AE  E1A0               	bnz	l10674
 12161  0110B0  0EF0               	movlw	-16
 12162  0110B2  04E3               	decf	plusw1,w,c
 12163  0110B4  B0D8               	btfsc	status,0,c
 12164  0110B6  D79C               	goto	l10674
 12165  0110B8                     u11360:
 12166                           
 12167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12168                           ;stkvar	_i @ sp[(-56)+36]
 12169  0110B8  50E1               	movf	fsr1l,w,c
 12170  0110BA  0FEC               	addlw	-20
 12171  0110BC  6ED9               	movwf	fsr2l,c
 12172  0110BE  50E2               	movf	fsr1h,w,c
 12173  0110C0  6EDA               	movwf	fsr2h,c
 12174  0110C2  0EFF               	movlw	255
 12175  0110C4  22DA               	addwfc	fsr2h,f,c
 12176  0110C6  06DE               	decf	postinc2,f,c
 12177  0110C8  0E00               	movlw	0
 12178  0110CA  5ADD               	subwfb	postdec2,f,c
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12181                           ;stkvar	_sign @ sp[(-56)+42]
 12182  0110CC  0EF2               	movlw	-14
 12183  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12184  0110D4  0EF3               	movlw	-13
 12185  0110D6  50E3               	movf	plusw1,w,c
 12186  0110D8  1032               	iorwf	btemp^0,w,c
 12187  0110DA  A4D8               	btfss	status,2,c
 12188  0110DC  D002               	goto	l10694
 12189  0110DE  0E2B               	movlw	43
 12190  0110E0  D001               	goto	L10
 12191  0110E2                     l10694:
 12192  0110E2  0E2D               	movlw	45
 12193  0110E4                     L10:
 12194  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12195  0110E6  0E00               	movlw	0
 12196  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12197                           
 12198                           ;stkvar	_efgtoa$4388 @ sp[(-56)+4]
 12199  0110EA  0ECC               	movlw	-52
 12200  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12201  0110F2  0ECD               	movlw	-51
 12202  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12203                           
 12204                           ;stkvar	_efgtoa$4388 @ sp[(-56)+4]
 12205                           ;stkvar	_i @ sp[(-56)+36]
 12206  0110FA  0EEC               	movlw	-20
 12207  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12208  011102  0EED               	movlw	-19
 12209  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12210  01110A  0E40               	movlw	low _dbuf
 12211  01110C  243C               	addwf	(btemp+10)^0,w,c
 12212  01110E  6ED9               	movwf	fsr2l,c
 12213  011110  0E02               	movlw	high _dbuf
 12214  011112  203D               	addwfc	(btemp+11)^0,w,c
 12215  011114  6EDA               	movwf	fsr2h,c
 12216  011116  0ECC               	movlw	-52
 12217  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12218                           
 12219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12220                           ;stkvar	_w @ sp[(-56)+38]
 12221  01111E  50E1               	movf	fsr1l,w,c
 12222  011120  0FEE               	addlw	-18
 12223  011122  6ED9               	movwf	fsr2l,c
 12224  011124  50E2               	movf	fsr1h,w,c
 12225  011126  6EDA               	movwf	fsr2h,c
 12226  011128  0EFF               	movlw	255
 12227  01112A  22DA               	addwfc	fsr2h,f,c
 12228  01112C  06DE               	decf	postinc2,f,c
 12229  01112E  0E00               	movlw	0
 12230  011130  5ADD               	subwfb	postdec2,f,c
 12231                           
 12232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12233                           ;stkvar	_i @ sp[(-56)+36]
 12234  011132  50E1               	movf	fsr1l,w,c
 12235  011134  0FEC               	addlw	-20
 12236  011136  6ED9               	movwf	fsr2l,c
 12237  011138  50E2               	movf	fsr1h,w,c
 12238  01113A  6EDA               	movwf	fsr2h,c
 12239  01113C  0EFF               	movlw	255
 12240  01113E  22DA               	addwfc	fsr2h,f,c
 12241  011140  06DE               	decf	postinc2,f,c
 12242  011142  0E00               	movlw	0
 12243  011144  5ADD               	subwfb	postdec2,f,c
 12244  011146  0EBF               	movlw	191
 12245  011148  6E3C               	movwf	(btemp+10)^0,c
 12246  01114A  0EFF               	movlw	255
 12247  01114C  6E3D               	movwf	(btemp+11)^0,c
 12248                           
 12249                           ;stkvar	_c @ sp[(-56)+-7]
 12250  01114E  0EC1               	movlw	-63
 12251  011150  50E3               	movf	plusw1,w,c
 12252  011152  6E3A               	movwf	(btemp+8)^0,c
 12253  011154  6A3B               	clrf	(btemp+9)^0,c
 12254  011156  503C               	movf	(btemp+10)^0,w,c
 12255  011158  263A               	addwf	(btemp+8)^0,f,c
 12256  01115A  503D               	movf	(btemp+11)^0,w,c
 12257  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12258  01115E  503B               	movf	(btemp+9)^0,w,c
 12259  011160  E106               	bnz	u11380
 12260  011162  0E1A               	movlw	26
 12261  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12262  011166  B0D8               	btfsc	status,0,c
 12263  011168  D002               	goto	u11380
 12264  01116A  0E01               	movlw	1
 12265  01116C  D001               	goto	u11390
 12266  01116E                     u11380:
 12267  01116E  0E00               	movlw	0
 12268  011170                     u11390:
 12269  011170  6E3C               	movwf	(btemp+10)^0,c
 12270  011172  6A3D               	clrf	(btemp+11)^0,c
 12271                           
 12272                           ;stkvar	_efgtoa$4390 @ sp[(-56)+0]
 12273  011174  0EC8               	movlw	-56
 12274  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12275  01117C  0EC9               	movlw	-55
 12276  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12277                           
 12278                           ;stkvar	_efgtoa$4390 @ sp[(-56)+0]
 12279  011184  0EC8               	movlw	-56
 12280  011186  006F FF8C  F032    	movff	plusw1,btemp
 12281  01118C  0EC9               	movlw	-55
 12282  01118E  50E3               	movf	plusw1,w,c
 12283  011190  1032               	iorwf	btemp^0,w,c
 12284  011192  A4D8               	btfss	status,2,c
 12285  011194  D002               	goto	l10710
 12286  011196  0E65               	movlw	101
 12287  011198  D001               	goto	L11
 12288  01119A                     l10710:
 12289  01119A  0E45               	movlw	69
 12290  01119C                     L11:
 12291  01119C  6E3C               	movwf	(btemp+10)^0,c
 12292  01119E  0E00               	movlw	0
 12293  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12294                           
 12295                           ;stkvar	_efgtoa$4389 @ sp[(-56)+2]
 12296  0111A2  0ECA               	movlw	-54
 12297  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12298  0111AA  0ECB               	movlw	-53
 12299  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12300                           
 12301                           ;stkvar	_efgtoa$4389 @ sp[(-56)+2]
 12302                           ;stkvar	_i @ sp[(-56)+36]
 12303  0111B2  0EEC               	movlw	-20
 12304  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12305  0111BA  0EED               	movlw	-19
 12306  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12307  0111C2  0E40               	movlw	low _dbuf
 12308  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12309  0111C6  6ED9               	movwf	fsr2l,c
 12310  0111C8  0E02               	movlw	high _dbuf
 12311  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12312  0111CC  6EDA               	movwf	fsr2h,c
 12313  0111CE  0ECA               	movlw	-54
 12314  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12315                           
 12316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12317                           ;stkvar	_w @ sp[(-56)+38]
 12318  0111D6  50E1               	movf	fsr1l,w,c
 12319  0111D8  0FEE               	addlw	-18
 12320  0111DA  6ED9               	movwf	fsr2l,c
 12321  0111DC  50E2               	movf	fsr1h,w,c
 12322  0111DE  6EDA               	movwf	fsr2h,c
 12323  0111E0  0EFF               	movlw	255
 12324  0111E2  22DA               	addwfc	fsr2h,f,c
 12325  0111E4  06DE               	decf	postinc2,f,c
 12326  0111E6  0E00               	movlw	0
 12327  0111E8  5ADD               	subwfb	postdec2,f,c
 12328                           
 12329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12330                           ;stkvar	_i @ sp[(-56)+36]
 12331  0111EA  0EEC               	movlw	-20
 12332  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12333  0111F2  0EED               	movlw	-19
 12334  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12335  0111FA  0E40               	movlw	low _dbuf
 12336  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12337  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12338  011200  0E02               	movlw	high _dbuf
 12339  011202  203D               	addwfc	(btemp+11)^0,w,c
 12340  011204  6E3B               	movwf	(btemp+9)^0,c
 12341  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12342  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12343                           
 12344                           ;stkvar	_n @ sp[(-58)+32]
 12345  011212  0E40               	movlw	low _dbuf
 12346  011214  6E3C               	movwf	(btemp+10)^0,c
 12347  011216  0E02               	movlw	high _dbuf
 12348  011218  6E3D               	movwf	(btemp+11)^0,c
 12349  01121A  0EE6               	movlw	-26
 12350  01121C  50E3               	movf	plusw1,w,c
 12351  01121E  263C               	addwf	(btemp+10)^0,f,c
 12352  011220  0EE7               	movlw	-25
 12353  011222  50E3               	movf	plusw1,w,c
 12354  011224  223D               	addwfc	(btemp+11)^0,f,c
 12355  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12356  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12357  011232  EC2F  F0B6         	call	_strcpy	;wreg free
 12358  011236  EF16  F081         	goto	l10462
 12359  01123A                     l1871:
 12360                           
 12361                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12362  01123A  0EC1               	movlw	193
 12363  01123C  26E1               	addwf	fsr1l,f,c
 12364  01123E  0EFF               	movlw	255
 12365  011240  22E2               	addwfc	fsr1h,f,c
 12366  011242  0012               	return		;funcret
 12367  011244                     __end_of_efgtoa:
 12368                           	opt callstack 0
 12369                           
 12370 ;; *************** function _tolower *****************
 12371 ;; Defined at:
 12372 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  c               2  [STACK] int 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  2  [STACK] int 
 12379 ;; Registers used:
 12380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/5
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;Total ram usage:        0 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:    7
 12393 ;; This function calls:
 12394 ;;		_isupper
 12395 ;; This function is called by:
 12396 ;;		_efgtoa
 12397 ;;		_vfpfcnvrt
 12398 ;; This function uses a reentrant model
 12399 ;;
 12400                           
 12401                           	psect	text45
 12402  017414                     __ptext45:
 12403                           	opt callstack 0
 12404  017414                     _tolower:
 12405                           	opt callstack 0
 12406                           
 12407                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12408  017414  52E6               	movf	postinc1,f,c
 12409  017416  52E6               	movf	postinc1,f,c
 12410                           
 12411                           ;stkvar	_c @ sp[(-2)+-2]
 12412                           
 12413                           ;incstack = 0
 12414  017418  0EFC               	movlw	-4
 12415  01741A  50E3               	movf	plusw1,w,c
 12416  01741C  0FBF               	addlw	191
 12417  01741E  6E3C               	movwf	(btemp+10)^0,c
 12418  017420  0EFD               	movlw	-3
 12419  017422  006F FF8C  F03D    	movff	plusw1,btemp+11
 12420  017428  0EFF               	movlw	255
 12421  01742A  223D               	addwfc	(btemp+11)^0,f,c
 12422  01742C  503D               	movf	(btemp+11)^0,w,c
 12423  01742E  E106               	bnz	u9470
 12424  017430  0E1A               	movlw	26
 12425  017432  5C3C               	subwf	(btemp+10)^0,w,c
 12426  017434  B0D8               	btfsc	status,0,c
 12427  017436  D002               	goto	u9470
 12428  017438  0E01               	movlw	1
 12429  01743A  D001               	goto	u9480
 12430  01743C                     u9470:
 12431  01743C  0E00               	movlw	0
 12432  01743E                     u9480:
 12433  01743E  6E3C               	movwf	(btemp+10)^0,c
 12434  017440  6A3D               	clrf	(btemp+11)^0,c
 12435                           
 12436                           ;stkvar	_tolower$5056 @ sp[(-2)+0]
 12437  017442  0EFE               	movlw	-2
 12438  017444  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12439  01744A  0EFF               	movlw	-1
 12440  01744C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12441                           
 12442                           ;stkvar	_tolower$5056 @ sp[(-2)+0]
 12443  017452  0EFE               	movlw	-2
 12444  017454  006F FF8C  F032    	movff	plusw1,btemp
 12445  01745A  0EFF               	movlw	-1
 12446  01745C  50E3               	movf	plusw1,w,c
 12447  01745E  1032               	iorwf	btemp^0,w,c
 12448  017460  B4D8               	btfsc	status,2,c
 12449  017462  D00D               	goto	l9688
 12450                           
 12451                           ;stkvar	_c @ sp[(-2)+-2]
 12452  017464  0EFC               	movlw	-4
 12453  017466  006F FF8C  F032    	movff	plusw1,btemp
 12454  01746C  0EFD               	movlw	-3
 12455  01746E  006F FF8C  F033    	movff	plusw1,btemp+1
 12456  017474  0E20               	movlw	32
 12457  017476  1232               	iorwf	btemp^0,f,c
 12458  017478  0E00               	movlw	0
 12459  01747A  1233               	iorwf	(btemp+1)^0,f,c
 12460  01747C  D008               	goto	l2894
 12461  01747E                     l9688:
 12462                           
 12463                           ;stkvar	_c @ sp[(-2)+-2]
 12464  01747E  0EFC               	movlw	-4
 12465  017480  006F FF8C  F032    	movff	plusw1,btemp
 12466  017486  0EFD               	movlw	-3
 12467  017488  006F FF8C  F033    	movff	plusw1,btemp+1
 12468  01748E                     l2894:
 12469                           
 12470                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12471  01748E  52E5               	movf	postdec1,f,c
 12472  017490  52E5               	movf	postdec1,f,c
 12473  017492  52E5               	movf	postdec1,f,c
 12474  017494  52E5               	movf	postdec1,f,c
 12475  017496  0012               	return		;funcret
 12476  017498                     __end_of_tolower:
 12477                           	opt callstack 0
 12478                           
 12479 ;; *************** function _isupper *****************
 12480 ;; Defined at:
 12481 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;  c               2  [STACK] int 
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;		None
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  2  [STACK] int 
 12488 ;; Registers used:
 12489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12490 ;; Tracked objects:
 12491 ;;		On entry : 0/0
 12492 ;;		On exit  : 0/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12499 ;;Total ram usage:        0 bytes
 12500 ;; Hardware stack levels used:    1
 12501 ;; Hardware stack levels required when called:    6
 12502 ;; This function calls:
 12503 ;;		Nothing
 12504 ;; This function is called by:
 12505 ;;		_efgtoa
 12506 ;;		_xtoa
 12507 ;;		_vfpfcnvrt
 12508 ;;		_tolower
 12509 ;; This function uses a reentrant model
 12510 ;;
 12511                           
 12512                           	psect	text46
 12513  017EF2                     __ptext46:
 12514                           	opt callstack 0
 12515  017EF2                     _isupper:
 12516                           	opt callstack 17
 12517                           
 12518                           ;stkvar	_c @ sp[(0)+-2]
 12519                           
 12520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12521                           ;incstack = 0
 12522  017EF2  0EFE               	movlw	-2
 12523  017EF4  50E3               	movf	plusw1,w,c
 12524  017EF6  0FBF               	addlw	191
 12525  017EF8  6E3C               	movwf	(btemp+10)^0,c
 12526  017EFA  0EFF               	movlw	-1
 12527  017EFC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12528  017F02  0EFF               	movlw	255
 12529  017F04  223D               	addwfc	(btemp+11)^0,f,c
 12530  017F06  503D               	movf	(btemp+11)^0,w,c
 12531  017F08  E106               	bnz	u8870
 12532  017F0A  0E1A               	movlw	26
 12533  017F0C  5C3C               	subwf	(btemp+10)^0,w,c
 12534  017F0E  B0D8               	btfsc	status,0,c
 12535  017F10  D002               	goto	u8870
 12536  017F12  0E01               	movlw	1
 12537  017F14  D001               	goto	u8880
 12538  017F16                     u8870:
 12539  017F16  0E00               	movlw	0
 12540  017F18                     u8880:
 12541  017F18  6E32               	movwf	btemp^0,c
 12542  017F1A  6A33               	clrf	(btemp+1)^0,c
 12543                           
 12544                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12545  017F1C  52E5               	movf	postdec1,f,c
 12546  017F1E  52E5               	movf	postdec1,f,c
 12547  017F20  0012               	return		;funcret
 12548  017F22                     __end_of_isupper:
 12549                           	opt callstack 0
 12550                           
 12551 ;; *************** function _strcpy *****************
 12552 ;; Defined at:
 12553 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12554 ;; Parameters:    Size  Location     Type
 12555 ;;  dest            2  [STACK] PTR unsigned char 
 12556 ;;		 -> dbuf(80), 
 12557 ;;  src             2  [STACK] PTR const unsigned char 
 12558 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12559 ;;		 -> dbuf(80), 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;  d               2  [STACK] PTR unsigned char 
 12562 ;;		 -> dbuf(80), 
 12563 ;;  s               2  [STACK] PTR const unsigned char 
 12564 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12565 ;;		 -> dbuf(80), 
 12566 ;; Return value:  Size  Location     Type
 12567 ;;                  2  [STACK] PTR unsigned char 
 12568 ;; Registers used:
 12569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12570 ;; Tracked objects:
 12571 ;;		On entry : 0/5
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;Total ram usage:        0 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; Hardware stack levels required when called:    6
 12582 ;; This function calls:
 12583 ;;		Nothing
 12584 ;; This function is called by:
 12585 ;;		_efgtoa
 12586 ;; This function uses a reentrant model
 12587 ;;
 12588                           
 12589                           	psect	text47
 12590  016C5E                     __ptext47:
 12591                           	opt callstack 0
 12592  016C5E                     _strcpy:
 12593                           	opt callstack 0
 12594                           
 12595                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12596  016C5E  52E6               	movf	postinc1,f,c
 12597  016C60  52E6               	movf	postinc1,f,c
 12598  016C62  52E6               	movf	postinc1,f,c
 12599  016C64  52E6               	movf	postinc1,f,c
 12600                           
 12601                           ;stkvar	_src @ sp[(-4)+-4]
 12602                           
 12603                           ;incstack = 0
 12604  016C66  0EF8               	movlw	-8
 12605  016C68  006F FF8C  F03C    	movff	plusw1,btemp+10
 12606  016C6E  0EF9               	movlw	-7
 12607  016C70  006F FF8C  F03D    	movff	plusw1,btemp+11
 12608                           
 12609                           ;stkvar	_s @ sp[(-4)+2]
 12610  016C76  0EFF               	movlw	-1
 12611  016C78  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12612  016C7E  0EFE               	movlw	-2
 12613  016C80  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12614                           
 12615                           ;stkvar	_dest @ sp[(-4)+-2]
 12616  016C86  0EFA               	movlw	-6
 12617  016C88  006F FF8C  F03C    	movff	plusw1,btemp+10
 12618  016C8E  0EFB               	movlw	-5
 12619  016C90  006F FF8C  F03D    	movff	plusw1,btemp+11
 12620                           
 12621                           ;stkvar	_d @ sp[(-4)+0]
 12622  016C96  0EFD               	movlw	-3
 12623  016C98  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12624  016C9E  0EFC               	movlw	-4
 12625  016CA0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12626  016CA6                     l9676:
 12627                           
 12628                           ;stkvar	_s @ sp[(-4)+2]
 12629  016CA6  50E1               	movf	fsr1l,w,c
 12630  016CA8  0FFE               	addlw	-2
 12631  016CAA  6ED9               	movwf	fsr2l,c
 12632  016CAC  50E2               	movf	fsr1h,w,c
 12633  016CAE  6EDA               	movwf	fsr2h,c
 12634  016CB0  0EFF               	movlw	255
 12635  016CB2  22DA               	addwfc	fsr2h,f,c
 12636  016CB4  006F FF7C  F03C    	movff	indf2,btemp+10
 12637  016CBA  0E01               	movlw	1
 12638  016CBC  26DE               	addwf	postinc2,f,c
 12639  016CBE  006F FF7C  F03D    	movff	indf2,btemp+11
 12640  016CC4  0E00               	movlw	0
 12641  016CC6  22DD               	addwfc	postdec2,f,c
 12642  016CC8  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12643  016CCE  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12644  016CD4  0E00               	movlw	low (__mediumconst shr (0+16))
 12645  016CD6  6EF8               	movwf	tblptru,c
 12646                           
 12647                           ;stkvar	_d @ sp[(-4)+0]
 12648  016CD8  50E1               	movf	fsr1l,w,c
 12649  016CDA  0FFC               	addlw	-4
 12650  016CDC  6ED9               	movwf	fsr2l,c
 12651  016CDE  50E2               	movf	fsr1h,w,c
 12652  016CE0  6EDA               	movwf	fsr2h,c
 12653  016CE2  0EFF               	movlw	255
 12654  016CE4  22DA               	addwfc	fsr2h,f,c
 12655  016CE6  006F FF7C  F03C    	movff	indf2,btemp+10
 12656  016CEC  0E01               	movlw	1
 12657  016CEE  26DE               	addwf	postinc2,f,c
 12658  016CF0  006F FF7C  F03D    	movff	indf2,btemp+11
 12659  016CF6  0E00               	movlw	0
 12660  016CF8  22DD               	addwfc	postdec2,f,c
 12661  016CFA  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12662  016D00  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12663  016D06  0E1F               	movlw	(high __ramtop+-1)
 12664  016D08  64F7               	cpfsgt	tblptrh,c
 12665  016D0A  D003               	bra	u9457
 12666  016D0C  0008               	tblrd		*
 12667  016D0E  50F5               	movf	tablat,w,c
 12668  016D10  D007               	bra	u9450
 12669  016D12                     u9457:
 12670  016D12  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12671  016D18  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12672  016D1E  50EF               	movf	indf0,w,c
 12673  016D20                     u9450:
 12674  016D20  6EDF               	movwf	indf2,c
 12675  016D22  50DF               	movf	indf2,w,c
 12676  016D24  A4D8               	btfss	status,2,c
 12677  016D26  D7BF               	goto	l9676
 12678                           
 12679                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12680  016D28  0EF8               	movlw	248
 12681  016D2A  26E1               	addwf	fsr1l,f,c
 12682  016D2C  0EFF               	movlw	255
 12683  016D2E  22E2               	addwfc	fsr1h,f,c
 12684  016D30  0012               	return		;funcret
 12685  016D32                     __end_of_strcpy:
 12686                           	opt callstack 0
 12687                           
 12688 ;; *************** function _floorf *****************
 12689 ;; Defined at:
 12690 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12691 ;; Parameters:    Size  Location     Type
 12692 ;;  x               4  [STACK] float 
 12693 ;; Auto vars:     Size  Location     Type
 12694 ;;  u               4  [STACK] struct .
 12695 ;;  m               4  [STACK] unsigned long 
 12696 ;;  e               2  [STACK] int 
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  4  [STACK] float 
 12699 ;; Registers used:
 12700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12701 ;; Tracked objects:
 12702 ;;		On entry : 0/5
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12710 ;;Total ram usage:        0 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; Hardware stack levels required when called:    6
 12713 ;; This function calls:
 12714 ;;		Nothing
 12715 ;; This function is called by:
 12716 ;;		_efgtoa
 12717 ;; This function uses a reentrant model
 12718 ;;
 12719                           
 12720                           	psect	text48
 12721  0144EC                     __ptext48:
 12722                           	opt callstack 0
 12723  0144EC                     _floorf:
 12724                           	opt callstack 0
 12725                           
 12726                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12727  0144EC  0E0A               	movlw	10
 12728  0144EE  26E1               	addwf	fsr1l,f,c
 12729  0144F0  0E00               	movlw	0
 12730  0144F2  22E2               	addwfc	fsr1h,f,c
 12731                           
 12732                           ;incstack = 0
 12733  0144F4  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12734  0144FA  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12735  014500  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12736  014506  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12737                           
 12738                           ;stkvar	_u @ sp[(-10)+0]
 12739  01450C  0EF6               	movlw	-10
 12740  01450E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12741  014514  0EF7               	movlw	-9
 12742  014516  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12743  01451C  0EF8               	movlw	-8
 12744  01451E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12745  014524  0EF9               	movlw	-7
 12746  014526  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12747                           
 12748                           ;stkvar	_x @ sp[(-10)+-4]
 12749  01452C  0EF2               	movlw	-14
 12750  01452E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12751  014534  0EF3               	movlw	-13
 12752  014536  006F FF8C  F03B    	movff	plusw1,btemp+9
 12753  01453C  0EF4               	movlw	-12
 12754  01453E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12755  014544  0EF5               	movlw	-11
 12756  014546  006F FF8C  F03D    	movff	plusw1,btemp+11
 12757                           
 12758                           ;stkvar	_u @ sp[(-10)+0]
 12759  01454C  0EF6               	movlw	-10
 12760  01454E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12761  014554  0EF7               	movlw	-9
 12762  014556  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12763  01455C  0EF8               	movlw	-8
 12764  01455E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12765  014564  0EF9               	movlw	-7
 12766  014566  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12767  01456C  0E81               	movlw	129
 12768  01456E  6E3C               	movwf	(btemp+10)^0,c
 12769  014570  0EFF               	movlw	255
 12770  014572  6E3D               	movwf	(btemp+11)^0,c
 12771                           
 12772                           ;stkvar	_u @ sp[(-10)+0]
 12773  014574  0EF6               	movlw	-10
 12774  014576  006F FF8C  F036    	movff	plusw1,btemp+4
 12775  01457C  0EF7               	movlw	-9
 12776  01457E  006F FF8C  F037    	movff	plusw1,btemp+5
 12777  014584  0EF8               	movlw	-8
 12778  014586  006F FF8C  F038    	movff	plusw1,btemp+6
 12779  01458C  0EF9               	movlw	-7
 12780  01458E  006F FF8C  F039    	movff	plusw1,btemp+7
 12781  014594  0E18               	movlw	24
 12782  014596  D005               	goto	u9500
 12783  014598                     u9505:
 12784  014598  90D8               	bcf	status,0,c
 12785  01459A  3239               	rrcf	(btemp+7)^0,f,c
 12786  01459C  3238               	rrcf	(btemp+6)^0,f,c
 12787  01459E  3237               	rrcf	(btemp+5)^0,f,c
 12788  0145A0  3236               	rrcf	(btemp+4)^0,f,c
 12789  0145A2                     u9500:
 12790  0145A2  2EE8               	decfsz	wreg,f,c
 12791  0145A4  D7F9               	goto	u9505
 12792  0145A6  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12793  0145AC  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12794  0145B2  0EFF               	movlw	255
 12795  0145B4  163A               	andwf	(btemp+8)^0,f,c
 12796  0145B6  0E00               	movlw	0
 12797  0145B8  163B               	andwf	(btemp+9)^0,f,c
 12798  0145BA  503C               	movf	(btemp+10)^0,w,c
 12799  0145BC  263A               	addwf	(btemp+8)^0,f,c
 12800  0145BE  503D               	movf	(btemp+11)^0,w,c
 12801  0145C0  223B               	addwfc	(btemp+9)^0,f,c
 12802                           
 12803                           ;stkvar	_e @ sp[(-10)+8]
 12804  0145C2  0EFE               	movlw	-2
 12805  0145C4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12806  0145CA  0EFF               	movlw	-1
 12807  0145CC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12808                           
 12809                           ;stkvar	_e @ sp[(-10)+8]
 12810  0145D2  0EFF               	movlw	-1
 12811  0145D4  BEE3               	btfsc	plusw1,7,c
 12812  0145D6  D019               	goto	l9702
 12813  0145D8  0EFF               	movlw	-1
 12814  0145DA  50E3               	movf	plusw1,w,c
 12815  0145DC  E108               	bnz	u9510
 12816  0145DE  0EFE               	movlw	-2
 12817  0145E0  006F FF8C  F032    	movff	plusw1,btemp
 12818  0145E6  0E17               	movlw	23
 12819  0145E8  5E32               	subwf	btemp^0,f,c
 12820  0145EA  A0D8               	btfss	status,0,c
 12821  0145EC  D00E               	goto	l9702
 12822  0145EE                     u9510:
 12823                           
 12824                           ;stkvar	_x @ sp[(-10)+-4]
 12825  0145EE  0EF2               	movlw	-14
 12826  0145F0  006F FF8C  F032    	movff	plusw1,btemp
 12827  0145F6  0EF3               	movlw	-13
 12828  0145F8  006F FF8C  F033    	movff	plusw1,btemp+1
 12829  0145FE  0EF4               	movlw	-12
 12830  014600  006F FF8C  F034    	movff	plusw1,btemp+2
 12831  014606  0EF5               	movlw	-11
 12832  014608  D11F               	goto	L12
 12833  01460A                     l9702:
 12834                           
 12835                           ;stkvar	_e @ sp[(-10)+8]
 12836  01460A  0EFF               	movlw	-1
 12837  01460C  BEE3               	btfsc	plusw1,7,c
 12838  01460E  D0B4               	goto	l9718
 12839                           
 12840                           ;stkvar	_e @ sp[(-10)+8]
 12841  014610  0EFE               	movlw	-2
 12842  014612  006F FF8C  F03D    	movff	plusw1,btemp+11
 12843  014618  0EFF               	movlw	255
 12844  01461A  6E36               	movwf	(btemp+4)^0,c
 12845  01461C  0EFF               	movlw	255
 12846  01461E  6E37               	movwf	(btemp+5)^0,c
 12847  014620  0E7F               	movlw	127
 12848  014622  6E38               	movwf	(btemp+6)^0,c
 12849  014624  0E00               	movlw	0
 12850  014626  6E39               	movwf	(btemp+7)^0,c
 12851  014628                     u9535:
 12852  014628  663D               	tstfsz	(btemp+11)^0,c
 12853  01462A  D001               	goto	u9536
 12854  01462C  D007               	goto	u9537
 12855  01462E                     u9536:
 12856  01462E  3439               	rlcf	(btemp+7)^0,w,c
 12857  014630  3239               	rrcf	(btemp+7)^0,f,c
 12858  014632  3238               	rrcf	(btemp+6)^0,f,c
 12859  014634  3237               	rrcf	(btemp+5)^0,f,c
 12860  014636  3236               	rrcf	(btemp+4)^0,f,c
 12861  014638  2E3D               	decfsz	(btemp+11)^0,f,c
 12862  01463A  D7F6               	goto	u9535
 12863  01463C                     u9537:
 12864                           
 12865                           ;stkvar	_m @ sp[(-10)+4]
 12866  01463C  0EFA               	movlw	-6
 12867  01463E  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12868  014644  0EFB               	movlw	-5
 12869  014646  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12870  01464C  0EFC               	movlw	-4
 12871  01464E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12872  014654  0EFD               	movlw	-3
 12873  014656  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12874                           
 12875                           ;stkvar	_m @ sp[(-10)+4]
 12876                           ;stkvar	_u @ sp[(-10)+0]
 12877  01465C  0EF6               	movlw	-10
 12878  01465E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12879  014664  0EF7               	movlw	-9
 12880  014666  006F FF8C  F03B    	movff	plusw1,btemp+9
 12881  01466C  0EF8               	movlw	-8
 12882  01466E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12883  014674  0EF9               	movlw	-7
 12884  014676  006F FF8C  F03D    	movff	plusw1,btemp+11
 12885  01467C  0EFA               	movlw	-6
 12886  01467E  50E3               	movf	plusw1,w,c
 12887  014680  163A               	andwf	(btemp+8)^0,f,c
 12888  014682  0EFB               	movlw	-5
 12889  014684  50E3               	movf	plusw1,w,c
 12890  014686  163B               	andwf	(btemp+9)^0,f,c
 12891  014688  0EFC               	movlw	-4
 12892  01468A  50E3               	movf	plusw1,w,c
 12893  01468C  163C               	andwf	(btemp+10)^0,f,c
 12894  01468E  0EFD               	movlw	-3
 12895  014690  50E3               	movf	plusw1,w,c
 12896  014692  163D               	andwf	(btemp+11)^0,f,c
 12897  014694  503A               	movf	(btemp+8)^0,w,c
 12898  014696  103B               	iorwf	(btemp+9)^0,w,c
 12899  014698  103C               	iorwf	(btemp+10)^0,w,c
 12900  01469A  103D               	iorwf	(btemp+11)^0,w,c
 12901  01469C  B4D8               	btfsc	status,2,c
 12902  01469E  D7A7               	goto	u9510
 12903                           
 12904                           ;stkvar	_u @ sp[(-10)+0]
 12905  0146A0  0EF6               	movlw	-10
 12906  0146A2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12907  0146A8  0EF7               	movlw	-9
 12908  0146AA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12909  0146B0  0EF8               	movlw	-8
 12910  0146B2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12911  0146B8  0EF9               	movlw	-7
 12912  0146BA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12913  0146C0  0E20               	movlw	32
 12914  0146C2  D005               	goto	u9550
 12915  0146C4                     u9555:
 12916  0146C4  90D8               	bcf	status,0,c
 12917  0146C6  323D               	rrcf	(btemp+11)^0,f,c
 12918  0146C8  323C               	rrcf	(btemp+10)^0,f,c
 12919  0146CA  323B               	rrcf	(btemp+9)^0,f,c
 12920  0146CC  323A               	rrcf	(btemp+8)^0,f,c
 12921  0146CE                     u9550:
 12922  0146CE  2EE8               	decfsz	wreg,f,c
 12923  0146D0  D7F9               	goto	u9555
 12924  0146D2  503A               	movf	(btemp+8)^0,w,c
 12925  0146D4  B4D8               	btfsc	status,2,c
 12926  0146D6  D028               	goto	l9716
 12927                           
 12928                           ;stkvar	_m @ sp[(-10)+4]
 12929                           ;stkvar	_u @ sp[(-10)+0]
 12930  0146D8  0EF6               	movlw	-10
 12931  0146DA  50E3               	movf	plusw1,w,c
 12932  0146DC  6E32               	movwf	btemp^0,c
 12933  0146DE  0EFA               	movlw	-6
 12934  0146E0  50E3               	movf	plusw1,w,c
 12935  0146E2  2632               	addwf	btemp^0,f,c
 12936  0146E4  0EF6               	movlw	-10
 12937  0146E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12938  0146EC  0EF7               	movlw	-9
 12939  0146EE  50E3               	movf	plusw1,w,c
 12940  0146F0  6E32               	movwf	btemp^0,c
 12941  0146F2  0EFB               	movlw	-5
 12942  0146F4  50E3               	movf	plusw1,w,c
 12943  0146F6  2232               	addwfc	btemp^0,f,c
 12944  0146F8  0EF7               	movlw	-9
 12945  0146FA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12946  014700  0EF8               	movlw	-8
 12947  014702  50E3               	movf	plusw1,w,c
 12948  014704  6E32               	movwf	btemp^0,c
 12949  014706  0EFC               	movlw	-4
 12950  014708  50E3               	movf	plusw1,w,c
 12951  01470A  2232               	addwfc	btemp^0,f,c
 12952  01470C  0EF8               	movlw	-8
 12953  01470E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12954  014714  0EF9               	movlw	-7
 12955  014716  50E3               	movf	plusw1,w,c
 12956  014718  6E32               	movwf	btemp^0,c
 12957  01471A  0EFD               	movlw	-3
 12958  01471C  50E3               	movf	plusw1,w,c
 12959  01471E  2232               	addwfc	btemp^0,f,c
 12960  014720  0EF9               	movlw	-7
 12961  014722  0060  F0CB  FFE3   	movff	btemp,plusw1
 12962  014728                     l9716:
 12963                           
 12964                           ;stkvar	_m @ sp[(-10)+4]
 12965  014728  0EFA               	movlw	-6
 12966  01472A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12967  014730  0EFB               	movlw	-5
 12968  014732  006F FF8C  F03B    	movff	plusw1,btemp+9
 12969  014738  0EFC               	movlw	-4
 12970  01473A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12971  014740  0EFD               	movlw	-3
 12972  014742  006F FF8C  F03D    	movff	plusw1,btemp+11
 12973  014748  1C3A               	comf	(btemp+8)^0,w,c
 12974  01474A  6E36               	movwf	(btemp+4)^0,c
 12975  01474C  1C3B               	comf	(btemp+9)^0,w,c
 12976  01474E  6E37               	movwf	(btemp+5)^0,c
 12977  014750  1C3C               	comf	(btemp+10)^0,w,c
 12978  014752  6E38               	movwf	(btemp+6)^0,c
 12979  014754  1C3D               	comf	(btemp+11)^0,w,c
 12980  014756  6E39               	movwf	(btemp+7)^0,c
 12981                           
 12982                           ;stkvar	_u @ sp[(-10)+0]
 12983  014758  50E1               	movf	fsr1l,w,c
 12984  01475A  0FF6               	addlw	-10
 12985  01475C  6ED9               	movwf	fsr2l,c
 12986  01475E  50E2               	movf	fsr1h,w,c
 12987  014760  6EDA               	movwf	fsr2h,c
 12988  014762  0EFF               	movlw	255
 12989  014764  22DA               	addwfc	fsr2h,f,c
 12990  014766  5036               	movf	(btemp+4)^0,w,c
 12991  014768  16DE               	andwf	postinc2,f,c
 12992  01476A  5037               	movf	(btemp+5)^0,w,c
 12993  01476C  16DE               	andwf	postinc2,f,c
 12994  01476E  5038               	movf	(btemp+6)^0,w,c
 12995  014770  16DE               	andwf	postinc2,f,c
 12996  014772  5039               	movf	(btemp+7)^0,w,c
 12997  014774  16DE               	andwf	postinc2,f,c
 12998  014776  D05B               	goto	l9726
 12999  014778                     l9718:
 13000                           
 13001                           ;stkvar	_u @ sp[(-10)+0]
 13002  014778  0EF6               	movlw	-10
 13003  01477A  006F FF8C  F03A    	movff	plusw1,btemp+8
 13004  014780  0EF7               	movlw	-9
 13005  014782  006F FF8C  F03B    	movff	plusw1,btemp+9
 13006  014788  0EF8               	movlw	-8
 13007  01478A  006F FF8C  F03C    	movff	plusw1,btemp+10
 13008  014790  0EF9               	movlw	-7
 13009  014792  006F FF8C  F03D    	movff	plusw1,btemp+11
 13010  014798  0E20               	movlw	32
 13011  01479A  D005               	goto	u9570
 13012  01479C                     u9575:
 13013  01479C  90D8               	bcf	status,0,c
 13014  01479E  323D               	rrcf	(btemp+11)^0,f,c
 13015  0147A0  323C               	rrcf	(btemp+10)^0,f,c
 13016  0147A2  323B               	rrcf	(btemp+9)^0,f,c
 13017  0147A4  323A               	rrcf	(btemp+8)^0,f,c
 13018  0147A6                     u9570:
 13019  0147A6  2EE8               	decfsz	wreg,f,c
 13020  0147A8  D7F9               	goto	u9575
 13021  0147AA  663A               	tstfsz	(btemp+8)^0,c
 13022  0147AC  D009               	goto	l9722
 13023                           
 13024                           ;stkvar	_u @ sp[(-10)+0]
 13025  0147AE  0EF6               	movlw	-10
 13026  0147B0  6AE3               	clrf	plusw1,c
 13027  0147B2  0EF7               	movlw	-9
 13028  0147B4  6AE3               	clrf	plusw1,c
 13029  0147B6  0EF8               	movlw	-8
 13030  0147B8  6AE3               	clrf	plusw1,c
 13031  0147BA  0EF9               	movlw	-7
 13032  0147BC  6AE3               	clrf	plusw1,c
 13033  0147BE  D037               	goto	l9726
 13034  0147C0                     l9722:
 13035                           
 13036                           ;stkvar	_u @ sp[(-10)+0]
 13037  0147C0  0EF6               	movlw	-10
 13038  0147C2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13039  0147C8  0EF7               	movlw	-9
 13040  0147CA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13041  0147D0  0EF8               	movlw	-8
 13042  0147D2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13043  0147D8  0EF9               	movlw	-7
 13044  0147DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13045  0147E0  90D8               	bcf	status,0,c
 13046  0147E2  343A               	rlcf	(btemp+8)^0,w,c
 13047  0147E4  6E36               	movwf	(btemp+4)^0,c
 13048  0147E6  343B               	rlcf	(btemp+9)^0,w,c
 13049  0147E8  6E37               	movwf	(btemp+5)^0,c
 13050  0147EA  343C               	rlcf	(btemp+10)^0,w,c
 13051  0147EC  6E38               	movwf	(btemp+6)^0,c
 13052  0147EE  343D               	rlcf	(btemp+11)^0,w,c
 13053  0147F0  6E39               	movwf	(btemp+7)^0,c
 13054  0147F2  5036               	movf	(btemp+4)^0,w,c
 13055  0147F4  1037               	iorwf	(btemp+5)^0,w,c
 13056  0147F6  1038               	iorwf	(btemp+6)^0,w,c
 13057  0147F8  1039               	iorwf	(btemp+7)^0,w,c
 13058  0147FA  B4D8               	btfsc	status,2,c
 13059  0147FC  D018               	goto	l9726
 13060  0147FE  0E00               	movlw	0
 13061  014800  6E3A               	movwf	(btemp+8)^0,c
 13062  014802  0E00               	movlw	0
 13063  014804  6E3B               	movwf	(btemp+9)^0,c
 13064  014806  0E80               	movlw	128
 13065  014808  6E3C               	movwf	(btemp+10)^0,c
 13066  01480A  0EBF               	movlw	191
 13067  01480C  6E3D               	movwf	(btemp+11)^0,c
 13068                           
 13069                           ;stkvar	_u @ sp[(-10)+0]
 13070  01480E  0EF6               	movlw	-10
 13071  014810  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13072  014816  0EF7               	movlw	-9
 13073  014818  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13074  01481E  0EF8               	movlw	-8
 13075  014820  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13076  014826  0EF9               	movlw	-7
 13077  014828  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13078  01482E                     l9726:
 13079                           
 13080                           ;stkvar	_u @ sp[(-10)+0]
 13081  01482E  0EF6               	movlw	-10
 13082  014830  006F FF8C  F032    	movff	plusw1,btemp
 13083  014836  0EF7               	movlw	-9
 13084  014838  006F FF8C  F033    	movff	plusw1,btemp+1
 13085  01483E  0EF8               	movlw	-8
 13086  014840  006F FF8C  F034    	movff	plusw1,btemp+2
 13087  014846  0EF9               	movlw	-7
 13088  014848                     L12:
 13089  014848  006F FF8C  F035    	movff	plusw1,btemp+3
 13090                           
 13091                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13092  01484E  0EF2               	movlw	242
 13093  014850  26E1               	addwf	fsr1l,f,c
 13094  014852  0EFF               	movlw	255
 13095  014854  22E2               	addwfc	fsr1h,f,c
 13096  014856  0012               	return		;funcret
 13097  014858                     __end_of_floorf:
 13098                           	opt callstack 0
 13099                           
 13100 ;; *************** function ___fpclassifyf *****************
 13101 ;; Defined at:
 13102 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;  x               4  [STACK] float 
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;  u               4  [STACK] struct .
 13107 ;;  e               2  [STACK] int 
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  2  [STACK] int 
 13110 ;; Registers used:
 13111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/5
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13121 ;;Total ram usage:        0 bytes
 13122 ;; Hardware stack levels used:    1
 13123 ;; Hardware stack levels required when called:    6
 13124 ;; This function calls:
 13125 ;;		Nothing
 13126 ;; This function is called by:
 13127 ;;		_efgtoa
 13128 ;; This function uses a reentrant model
 13129 ;;
 13130                           
 13131                           	psect	text49
 13132  015CEA                     __ptext49:
 13133                           	opt callstack 0
 13134  015CEA                     ___fpclassifyf:
 13135                           	opt callstack 0
 13136                           
 13137                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13138  015CEA  0E06               	movlw	6
 13139  015CEC  26E1               	addwf	fsr1l,f,c
 13140  015CEE  0E00               	movlw	0
 13141  015CF0  22E2               	addwfc	fsr1h,f,c
 13142                           
 13143                           ;incstack = 0
 13144  015CF2  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13145  015CF8  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13146  015CFE  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13147  015D04  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13148                           
 13149                           ;stkvar	_u @ sp[(-6)+0]
 13150  015D0A  0EFA               	movlw	-6
 13151  015D0C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13152  015D12  0EFB               	movlw	-5
 13153  015D14  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13154  015D1A  0EFC               	movlw	-4
 13155  015D1C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13156  015D22  0EFD               	movlw	-3
 13157  015D24  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13158                           
 13159                           ;stkvar	_x @ sp[(-6)+-4]
 13160  015D2A  0EF6               	movlw	-10
 13161  015D2C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13162  015D32  0EF7               	movlw	-9
 13163  015D34  006F FF8C  F03B    	movff	plusw1,btemp+9
 13164  015D3A  0EF8               	movlw	-8
 13165  015D3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13166  015D42  0EF9               	movlw	-7
 13167  015D44  006F FF8C  F03D    	movff	plusw1,btemp+11
 13168                           
 13169                           ;stkvar	_u @ sp[(-6)+0]
 13170  015D4A  0EFA               	movlw	-6
 13171  015D4C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13172  015D52  0EFB               	movlw	-5
 13173  015D54  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13174  015D5A  0EFC               	movlw	-4
 13175  015D5C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13176  015D62  0EFD               	movlw	-3
 13177  015D64  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13178                           
 13179                           ;stkvar	_u @ sp[(-6)+0]
 13180  015D6A  0EFA               	movlw	-6
 13181  015D6C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13182  015D72  0EFB               	movlw	-5
 13183  015D74  006F FF8C  F03B    	movff	plusw1,btemp+9
 13184  015D7A  0EFC               	movlw	-4
 13185  015D7C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13186  015D82  0EFD               	movlw	-3
 13187  015D84  006F FF8C  F03D    	movff	plusw1,btemp+11
 13188  015D8A  0E18               	movlw	24
 13189  015D8C  D005               	goto	u9380
 13190  015D8E                     u9385:
 13191  015D8E  90D8               	bcf	status,0,c
 13192  015D90  323D               	rrcf	(btemp+11)^0,f,c
 13193  015D92  323C               	rrcf	(btemp+10)^0,f,c
 13194  015D94  323B               	rrcf	(btemp+9)^0,f,c
 13195  015D96  323A               	rrcf	(btemp+8)^0,f,c
 13196  015D98                     u9380:
 13197  015D98  2EE8               	decfsz	wreg,f,c
 13198  015D9A  D7F9               	goto	u9385
 13199  015D9C  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13200  015DA2  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13201  015DA8  0EFF               	movlw	255
 13202  015DAA  1638               	andwf	(btemp+6)^0,f,c
 13203  015DAC  0E00               	movlw	0
 13204  015DAE  1639               	andwf	(btemp+7)^0,f,c
 13205                           
 13206                           ;stkvar	_e @ sp[(-6)+4]
 13207  015DB0  0EFE               	movlw	-2
 13208  015DB2  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13209  015DB8  0EFF               	movlw	-1
 13210  015DBA  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13211                           
 13212                           ;stkvar	_e @ sp[(-6)+4]
 13213  015DC0  0EFE               	movlw	-2
 13214  015DC2  006F FF8C  F032    	movff	plusw1,btemp
 13215  015DC8  0EFF               	movlw	-1
 13216  015DCA  50E3               	movf	plusw1,w,c
 13217  015DCC  1032               	iorwf	btemp^0,w,c
 13218  015DCE  A4D8               	btfss	status,2,c
 13219  015DD0  D023               	goto	l9664
 13220                           
 13221                           ;stkvar	_u @ sp[(-6)+0]
 13222  015DD2  0EFA               	movlw	-6
 13223  015DD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13224  015DDA  0EFB               	movlw	-5
 13225  015DDC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13226  015DE2  0EFC               	movlw	-4
 13227  015DE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13228  015DEA  0EFD               	movlw	-3
 13229  015DEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13230  015DF2  90D8               	bcf	status,0,c
 13231  015DF4  343A               	rlcf	(btemp+8)^0,w,c
 13232  015DF6  6E36               	movwf	(btemp+4)^0,c
 13233  015DF8  343B               	rlcf	(btemp+9)^0,w,c
 13234  015DFA  6E37               	movwf	(btemp+5)^0,c
 13235  015DFC  343C               	rlcf	(btemp+10)^0,w,c
 13236  015DFE  6E38               	movwf	(btemp+6)^0,c
 13237  015E00  343D               	rlcf	(btemp+11)^0,w,c
 13238  015E02  6E39               	movwf	(btemp+7)^0,c
 13239  015E04  5036               	movf	(btemp+4)^0,w,c
 13240  015E06  1037               	iorwf	(btemp+5)^0,w,c
 13241  015E08  1038               	iorwf	(btemp+6)^0,w,c
 13242  015E0A  1039               	iorwf	(btemp+7)^0,w,c
 13243  015E0C  A4D8               	btfss	status,2,c
 13244  015E0E  D002               	goto	l9660
 13245  015E10  0E02               	movlw	2
 13246  015E12  D02E               	goto	L13
 13247  015E14                     l9660:
 13248  015E14  0E03               	movlw	3
 13249  015E16  D02C               	goto	L13
 13250  015E18                     l9664:
 13251                           
 13252                           ;stkvar	_e @ sp[(-6)+4]
 13253  015E18  0EFE               	movlw	-2
 13254  015E1A  28E3               	incf	plusw1,w,c
 13255  015E1C  E128               	bnz	l9670
 13256  015E1E  0EFF               	movlw	-1
 13257  015E20  50E3               	movf	plusw1,w,c
 13258  015E22  A4D8               	btfss	status,2,c
 13259  015E24  D024               	goto	l9670
 13260                           
 13261                           ;stkvar	_u @ sp[(-6)+0]
 13262  015E26  0EFA               	movlw	-6
 13263  015E28  006F FF8C  F03A    	movff	plusw1,btemp+8
 13264  015E2E  0EFB               	movlw	-5
 13265  015E30  006F FF8C  F03B    	movff	plusw1,btemp+9
 13266  015E36  0EFC               	movlw	-4
 13267  015E38  006F FF8C  F03C    	movff	plusw1,btemp+10
 13268  015E3E  0EFD               	movlw	-3
 13269  015E40  006F FF8C  F03D    	movff	plusw1,btemp+11
 13270  015E46  0E09               	movlw	9
 13271  015E48                     u9425:
 13272  015E48  90D8               	bcf	status,0,c
 13273  015E4A  363A               	rlcf	(btemp+8)^0,f,c
 13274  015E4C  363B               	rlcf	(btemp+9)^0,f,c
 13275  015E4E  363C               	rlcf	(btemp+10)^0,f,c
 13276  015E50  363D               	rlcf	(btemp+11)^0,f,c
 13277  015E52  2EE8               	decfsz	wreg,f,c
 13278  015E54  D7F9               	goto	u9425
 13279  015E56  503A               	movf	(btemp+8)^0,w,c
 13280  015E58  103B               	iorwf	(btemp+9)^0,w,c
 13281  015E5A  103C               	iorwf	(btemp+10)^0,w,c
 13282  015E5C  103D               	iorwf	(btemp+11)^0,w,c
 13283  015E5E  A4D8               	btfss	status,2,c
 13284  015E60  D002               	goto	u9430
 13285  015E62  0E01               	movlw	1
 13286  015E64  D001               	goto	u9440
 13287  015E66                     u9430:
 13288  015E66  0E00               	movlw	0
 13289  015E68                     u9440:
 13290  015E68  6E32               	movwf	btemp^0,c
 13291  015E6A  6A33               	clrf	(btemp+1)^0,c
 13292  015E6C  D004               	goto	l2730
 13293  015E6E                     l9670:
 13294  015E6E  0E04               	movlw	4
 13295  015E70                     L13:
 13296  015E70  6E32               	movwf	btemp^0,c
 13297  015E72  0E00               	movlw	0
 13298  015E74  6E33               	movwf	(btemp+1)^0,c
 13299  015E76                     l2730:
 13300                           
 13301                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13302  015E76  0EF6               	movlw	246
 13303  015E78  26E1               	addwf	fsr1l,f,c
 13304  015E7A  0EFF               	movlw	255
 13305  015E7C  22E2               	addwfc	fsr1h,f,c
 13306  015E7E  0012               	return		;funcret
 13307  015E80                     __end_of___fpclassifyf:
 13308                           	opt callstack 0
 13309                           
 13310 ;; *************** function ___fltol *****************
 13311 ;; Defined at:
 13312 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  f1              4  [STACK] int 
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;  exp1            1  [STACK] unsigned char 
 13317 ;;  sign1           1  [STACK] unsigned char 
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  4  [STACK] long 
 13320 ;; Registers used:
 13321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/5
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    6
 13334 ;; This function calls:
 13335 ;;		Nothing
 13336 ;; This function is called by:
 13337 ;;		_efgtoa
 13338 ;; This function uses a reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text50
 13342  015E80                     __ptext50:
 13343                           	opt callstack 0
 13344  015E80                     ___fltol:
 13345                           	opt callstack 0
 13346                           
 13347                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13348  015E80  52E6               	movf	postinc1,f,c
 13349  015E82  52E6               	movf	postinc1,f,c
 13350                           
 13351                           ;stkvar	_f1 @ sp[(-2)+-4]
 13352                           
 13353                           ;incstack = 0
 13354  015E84  0EFA               	movlw	-6
 13355  015E86  006F FF8C  F03A    	movff	plusw1,btemp+8
 13356  015E8C  0EFB               	movlw	-5
 13357  015E8E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13358  015E94  0EFC               	movlw	-4
 13359  015E96  006F FF8C  F03C    	movff	plusw1,btemp+10
 13360  015E9C  0EFD               	movlw	-3
 13361  015E9E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13362  015EA4  0E18               	movlw	24
 13363  015EA6  D005               	goto	u10590
 13364  015EA8                     u10595:
 13365  015EA8  90D8               	bcf	status,0,c
 13366  015EAA  323D               	rrcf	(btemp+11)^0,f,c
 13367  015EAC  323C               	rrcf	(btemp+10)^0,f,c
 13368  015EAE  323B               	rrcf	(btemp+9)^0,f,c
 13369  015EB0  323A               	rrcf	(btemp+8)^0,f,c
 13370  015EB2                     u10590:
 13371  015EB2  2EE8               	decfsz	wreg,f,c
 13372  015EB4  D7F9               	goto	u10595
 13373                           
 13374                           ;stkvar	_exp1 @ sp[(-2)+0]
 13375  015EB6  0EFE               	movlw	-2
 13376  015EB8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13377  015EBE  0EFE               	movlw	-2
 13378  015EC0  50E3               	movf	plusw1,w,c
 13379  015EC2  A4D8               	btfss	status,2,c
 13380  015EC4  D006               	goto	l10290
 13381  015EC6                     u10600:
 13382  015EC6  0E00               	movlw	0
 13383  015EC8  6E32               	movwf	btemp^0,c
 13384  015ECA  6A33               	clrf	(btemp+1)^0,c
 13385  015ECC  6A34               	clrf	(btemp+2)^0,c
 13386  015ECE  6A35               	clrf	(btemp+3)^0,c
 13387  015ED0  D08B               	goto	l2346
 13388  015ED2                     l10290:
 13389                           
 13390                           ;stkvar	_f1 @ sp[(-2)+-4]
 13391  015ED2  0EFA               	movlw	-6
 13392  015ED4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13393  015EDA  0EFB               	movlw	-5
 13394  015EDC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13395  015EE2  0EFC               	movlw	-4
 13396  015EE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13397  015EEA  0EFD               	movlw	-3
 13398  015EEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13399  015EF2  0E20               	movlw	32
 13400  015EF4  D005               	goto	u10610
 13401  015EF6                     u10615:
 13402  015EF6  90D8               	bcf	status,0,c
 13403  015EF8  323D               	rrcf	(btemp+11)^0,f,c
 13404  015EFA  323C               	rrcf	(btemp+10)^0,f,c
 13405  015EFC  323B               	rrcf	(btemp+9)^0,f,c
 13406  015EFE  323A               	rrcf	(btemp+8)^0,f,c
 13407  015F00                     u10610:
 13408  015F00  2EE8               	decfsz	wreg,f,c
 13409  015F02  D7F9               	goto	u10615
 13410                           
 13411                           ;stkvar	_sign1 @ sp[(-2)+1]
 13412  015F04  0EFF               	movlw	-1
 13413  015F06  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13414                           
 13415                           ;stkvar	_f1 @ sp[(-2)+-4]
 13416  015F0C  0EFC               	movlw	-4
 13417  015F0E  8EE3               	bsf	plusw1,7,c
 13418                           
 13419                           ;stkvar	_f1 @ sp[(-2)+-4]
 13420  015F10  50E1               	movf	fsr1l,w,c
 13421  015F12  0FFA               	addlw	-6
 13422  015F14  6ED9               	movwf	fsr2l,c
 13423  015F16  50E2               	movf	fsr1h,w,c
 13424  015F18  6EDA               	movwf	fsr2h,c
 13425  015F1A  0EFF               	movlw	255
 13426  015F1C  22DA               	addwfc	fsr2h,f,c
 13427  015F1E  0EFF               	movlw	255
 13428  015F20  16DE               	andwf	postinc2,f,c
 13429  015F22  0EFF               	movlw	255
 13430  015F24  16DE               	andwf	postinc2,f,c
 13431  015F26  0EFF               	movlw	255
 13432  015F28  16DE               	andwf	postinc2,f,c
 13433  015F2A  0E00               	movlw	0
 13434  015F2C  16DE               	andwf	postinc2,f,c
 13435                           
 13436                           ;stkvar	_exp1 @ sp[(-2)+0]
 13437  015F2E  0EFE               	movlw	-2
 13438  015F30  006F FF8C  F032    	movff	plusw1,btemp
 13439  015F36  0E96               	movlw	150
 13440  015F38  5E32               	subwf	btemp^0,f,c
 13441  015F3A  0EFE               	movlw	-2
 13442  015F3C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13443                           
 13444                           ;stkvar	_exp1 @ sp[(-2)+0]
 13445  015F42  0EFE               	movlw	-2
 13446  015F44  AEE3               	btfss	plusw1,7,c
 13447  015F46  D014               	goto	l10308
 13448                           
 13449                           ;stkvar	_exp1 @ sp[(-2)+0]
 13450  015F48  0EFE               	movlw	-2
 13451  015F4A  50E3               	movf	plusw1,w,c
 13452  015F4C  0A80               	xorlw	128
 13453  015F4E  0F97               	addlw	151
 13454  015F50  A0D8               	btfss	status,0,c
 13455  015F52  D7B9               	goto	u10600
 13456  015F54                     l10306:
 13457                           
 13458                           ;stkvar	_f1 @ sp[(-2)+-4]
 13459  015F54  90D8               	bcf	status,0,c
 13460  015F56  0EFD               	movlw	-3
 13461  015F58  32E3               	rrcf	plusw1,f,c
 13462  015F5A  0EFC               	movlw	-4
 13463  015F5C  32E3               	rrcf	plusw1,f,c
 13464  015F5E  0EFB               	movlw	-5
 13465  015F60  32E3               	rrcf	plusw1,f,c
 13466  015F62  0EFA               	movlw	-6
 13467  015F64  32E3               	rrcf	plusw1,f,c
 13468                           
 13469                           ;stkvar	_exp1 @ sp[(-2)+0]
 13470  015F66  0EFE               	movlw	-2
 13471  015F68  2AE3               	incf	plusw1,f,c
 13472  015F6A  B4D8               	btfsc	status,2,c
 13473  015F6C  D018               	goto	u10660
 13474  015F6E  D7F2               	goto	l10306
 13475  015F70                     l10308:
 13476                           
 13477                           ;stkvar	_exp1 @ sp[(-2)+0]
 13478  015F70  0EFE               	movlw	-2
 13479  015F72  006F FF8C  F032    	movff	plusw1,btemp
 13480  015F78  0E1F               	movlw	31
 13481  015F7A  6432               	cpfsgt	btemp^0,c
 13482  015F7C  D00C               	goto	l10316
 13483  015F7E  D7A3               	goto	u10600
 13484  015F80                     l10314:
 13485                           
 13486                           ;stkvar	_f1 @ sp[(-2)+-4]
 13487  015F80  90D8               	bcf	status,0,c
 13488  015F82  0EFA               	movlw	-6
 13489  015F84  36E3               	rlcf	plusw1,f,c
 13490  015F86  0EFB               	movlw	-5
 13491  015F88  36E3               	rlcf	plusw1,f,c
 13492  015F8A  0EFC               	movlw	-4
 13493  015F8C  36E3               	rlcf	plusw1,f,c
 13494  015F8E  0EFD               	movlw	-3
 13495  015F90  36E3               	rlcf	plusw1,f,c
 13496                           
 13497                           ;stkvar	_exp1 @ sp[(-2)+0]
 13498  015F92  0EFE               	movlw	-2
 13499  015F94  06E3               	decf	plusw1,f,c
 13500  015F96                     l10316:
 13501                           
 13502                           ;stkvar	_exp1 @ sp[(-2)+0]
 13503  015F96  0EFE               	movlw	-2
 13504  015F98  50E3               	movf	plusw1,w,c
 13505  015F9A  A4D8               	btfss	status,2,c
 13506  015F9C  D7F1               	goto	l10314
 13507  015F9E                     u10660:
 13508                           
 13509                           ;stkvar	_sign1 @ sp[(-2)+1]
 13510  015F9E  0EFF               	movlw	-1
 13511  015FA0  50E3               	movf	plusw1,w,c
 13512  015FA2  B4D8               	btfsc	status,2,c
 13513  015FA4  D011               	goto	u10680
 13514                           
 13515                           ;stkvar	_f1 @ sp[(-2)+-4]
 13516                           ;stkvar	_f1 @ sp[(-2)+-4]
 13517  015FA6  0EFA               	movlw	-6
 13518  015FA8  6CE3               	negf	plusw1,c
 13519  015FAA  0EFB               	movlw	-5
 13520  015FAC  1EE3               	comf	plusw1,f,c
 13521  015FAE  0EFC               	movlw	-4
 13522  015FB0  1EE3               	comf	plusw1,f,c
 13523  015FB2  0EFD               	movlw	-3
 13524  015FB4  1EE3               	comf	plusw1,f,c
 13525  015FB6  E308               	bnc	u10680
 13526  015FB8  0EFB               	movlw	-5
 13527  015FBA  2AE3               	incf	plusw1,f,c
 13528  015FBC  E305               	bnc	u10680
 13529  015FBE  0EFC               	movlw	-4
 13530  015FC0  2AE3               	incf	plusw1,f,c
 13531  015FC2  E302               	bnc	u10680
 13532  015FC4  0EFD               	movlw	-3
 13533  015FC6  2AE3               	incf	plusw1,f,c
 13534  015FC8                     u10680:
 13535                           
 13536                           ;stkvar	_f1 @ sp[(-2)+-4]
 13537  015FC8  0EFA               	movlw	-6
 13538  015FCA  006F FF8C  F032    	movff	plusw1,btemp
 13539  015FD0  0EFB               	movlw	-5
 13540  015FD2  006F FF8C  F033    	movff	plusw1,btemp+1
 13541  015FD8  0EFC               	movlw	-4
 13542  015FDA  006F FF8C  F034    	movff	plusw1,btemp+2
 13543  015FE0  0EFD               	movlw	-3
 13544  015FE2  006F FF8C  F035    	movff	plusw1,btemp+3
 13545  015FE8                     l2346:
 13546                           
 13547                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13548  015FE8  0EFA               	movlw	250
 13549  015FEA  26E1               	addwf	fsr1l,f,c
 13550  015FEC  0EFF               	movlw	255
 13551  015FEE  22E2               	addwfc	fsr1h,f,c
 13552  015FF0  0012               	return		;funcret
 13553  015FF2                     __end_of___fltol:
 13554                           	opt callstack 0
 13555                           
 13556 ;; *************** function ___flsub *****************
 13557 ;; Defined at:
 13558 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13559 ;; Parameters:    Size  Location     Type
 13560 ;;  b               4  [STACK] long 
 13561 ;;  a               4  [STACK] long 
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;		None
 13564 ;; Return value:  Size  Location     Type
 13565 ;;                  4  [STACK] long 
 13566 ;; Registers used:
 13567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13568 ;; Tracked objects:
 13569 ;;		On entry : 0/39
 13570 ;;		On exit  : 0/0
 13571 ;;		Unchanged: 0/0
 13572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13577 ;;Total ram usage:        0 bytes
 13578 ;; Hardware stack levels used:    1
 13579 ;; Hardware stack levels required when called:    7
 13580 ;; This function calls:
 13581 ;;		___fladd
 13582 ;; This function is called by:
 13583 ;;		_conv_raw_result
 13584 ;;		_lp_filter
 13585 ;;		_efgtoa
 13586 ;; This function uses a reentrant model
 13587 ;;
 13588                           
 13589                           	psect	text51
 13590  017B16                     __ptext51:
 13591                           	opt callstack 0
 13592  017B16                     ___flsub:
 13593                           	opt callstack 16
 13594                           
 13595                           ;stkvar	_a @ sp[(0)+-8]
 13596                           
 13597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13598                           ;incstack = 0
 13599  017B16  0EFB               	movlw	-5
 13600  017B18  7EE3               	btg	plusw1,7,c
 13601                           
 13602                           ;stkvar	_a @ sp[(0)+-8]
 13603  017B1A  0EF8               	movlw	-8
 13604  017B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 13605  017B22  006F FF8F FFE6     	movff	plusw1,postinc1
 13606  017B28  006F FF8F FFE6     	movff	plusw1,postinc1
 13607  017B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 13608                           
 13609                           ;stkvar	_b @ sp[(-4)+-4]
 13610  017B34  0EF8               	movlw	-8
 13611  017B36  006F FF8F FFE6     	movff	plusw1,postinc1
 13612  017B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13613  017B42  006F FF8F FFE6     	movff	plusw1,postinc1
 13614  017B48  006F FF8F FFE6     	movff	plusw1,postinc1
 13615  017B4E  ECD6  F092         	call	___fladd	;wreg free
 13616                           
 13617                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13618  017B52  0EF8               	movlw	248
 13619  017B54  26E1               	addwf	fsr1l,f,c
 13620  017B56  0EFF               	movlw	255
 13621  017B58  22E2               	addwfc	fsr1h,f,c
 13622  017B5A  0012               	return		;funcret
 13623  017B5C                     __end_of___flsub:
 13624                           	opt callstack 0
 13625                           
 13626 ;; *************** function ___fladd *****************
 13627 ;; Defined at:
 13628 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13629 ;; Parameters:    Size  Location     Type
 13630 ;;  b               4  [STACK] long 
 13631 ;;  a               4  [STACK] long 
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;  grs             1  [STACK] unsigned char 
 13634 ;;  bexp            1  [STACK] unsigned char 
 13635 ;;  aexp            1  [STACK] unsigned char 
 13636 ;;  signs           1  [STACK] unsigned char 
 13637 ;; Return value:  Size  Location     Type
 13638 ;;                  4  [STACK] unsigned char 
 13639 ;; Registers used:
 13640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13641 ;; Tracked objects:
 13642 ;;		On entry : 0/39
 13643 ;;		On exit  : 0/0
 13644 ;;		Unchanged: 0/0
 13645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13650 ;;Total ram usage:        0 bytes
 13651 ;; Hardware stack levels used:    1
 13652 ;; Hardware stack levels required when called:    6
 13653 ;; This function calls:
 13654 ;;		Nothing
 13655 ;; This function is called by:
 13656 ;;		_lp_filter
 13657 ;;		_efgtoa
 13658 ;;		___flsub
 13659 ;; This function uses a reentrant model
 13660 ;;
 13661                           
 13662                           	psect	text52
 13663  0125AC                     __ptext52:
 13664                           	opt callstack 0
 13665  0125AC                     ___fladd:
 13666                           	opt callstack 0
 13667                           
 13668                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13669  0125AC  52E6               	movf	postinc1,f,c
 13670  0125AE  52E6               	movf	postinc1,f,c
 13671  0125B0  52E6               	movf	postinc1,f,c
 13672  0125B2  52E6               	movf	postinc1,f,c
 13673                           
 13674                           ;stkvar	_b @ sp[(-4)+-4]
 13675                           
 13676                           ;incstack = 0
 13677  0125B4  0EFB               	movlw	251
 13678  0125B6  24E1               	addwf	fsr1l,w,c
 13679  0125B8  6ED9               	movwf	fsr2l,c
 13680  0125BA  0EFF               	movlw	255
 13681  0125BC  20E2               	addwfc	fsr1h,w,c
 13682  0125BE  6EDA               	movwf	fsr2h,c
 13683  0125C0  50DF               	movf	indf2,w,c
 13684  0125C2  6E3D               	movwf	(btemp+11)^0,c
 13685  0125C4  0E80               	movlw	128
 13686  0125C6  163D               	andwf	(btemp+11)^0,f,c
 13687                           
 13688                           ;stkvar	_signs @ sp[(-4)+3]
 13689  0125C8  0EFF               	movlw	-1
 13690  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13691                           
 13692                           ;stkvar	_b @ sp[(-4)+-4]
 13693  0125D0  0EFB               	movlw	251
 13694  0125D2  24E1               	addwf	fsr1l,w,c
 13695  0125D4  6ED9               	movwf	fsr2l,c
 13696  0125D6  0EFF               	movlw	255
 13697  0125D8  20E2               	addwfc	fsr1h,w,c
 13698  0125DA  6EDA               	movwf	fsr2h,c
 13699  0125DC  50DF               	movf	indf2,w,c
 13700  0125DE  6E3D               	movwf	(btemp+11)^0,c
 13701  0125E0  90D8               	bcf	status,0,c
 13702  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 13703  0125E4  6E3C               	movwf	(btemp+10)^0,c
 13704                           
 13705                           ;stkvar	_bexp @ sp[(-4)+1]
 13706  0125E6  0EFD               	movlw	-3
 13707  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13708                           
 13709                           ;stkvar	_b @ sp[(-4)+-4]
 13710  0125EE  0EFA               	movlw	250
 13711  0125F0  24E1               	addwf	fsr1l,w,c
 13712  0125F2  6ED9               	movwf	fsr2l,c
 13713  0125F4  0EFF               	movlw	255
 13714  0125F6  20E2               	addwfc	fsr1h,w,c
 13715  0125F8  6EDA               	movwf	fsr2h,c
 13716  0125FA  AEDF               	btfss	indf2,7,c
 13717  0125FC  D002               	goto	l9404
 13718                           
 13719                           ;stkvar	_bexp @ sp[(-4)+1]
 13720  0125FE  0EFD               	movlw	-3
 13721  012600  80E3               	bsf	plusw1,0,c
 13722  012602                     l9404:
 13723                           
 13724                           ;stkvar	_bexp @ sp[(-4)+1]
 13725  012602  0EFD               	movlw	-3
 13726  012604  50E3               	movf	plusw1,w,c
 13727  012606  B4D8               	btfsc	status,2,c
 13728  012608  D027               	goto	l9414
 13729                           
 13730                           ;stkvar	_bexp @ sp[(-4)+1]
 13731  01260A  0EFD               	movlw	-3
 13732  01260C  28E3               	incf	plusw1,w,c
 13733  01260E  A4D8               	btfss	status,2,c
 13734  012610  D018               	goto	l9410
 13735  012612  0E00               	movlw	0
 13736  012614  6E3A               	movwf	(btemp+8)^0,c
 13737  012616  0E00               	movlw	0
 13738  012618  6E3B               	movwf	(btemp+9)^0,c
 13739  01261A  0E00               	movlw	0
 13740  01261C  6E3C               	movwf	(btemp+10)^0,c
 13741  01261E  0E00               	movlw	0
 13742  012620  6E3D               	movwf	(btemp+11)^0,c
 13743                           
 13744                           ;stkvar	_b @ sp[(-4)+-4]
 13745  012622  0EF8               	movlw	-8
 13746  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13747  01262A  0EF9               	movlw	-7
 13748  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13749  012632  0EFA               	movlw	-6
 13750  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13751  01263A  0EFB               	movlw	-5
 13752  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13753  012642                     l9410:
 13754                           
 13755                           ;stkvar	_b @ sp[(-4)+-4]
 13756  012642  0EFA               	movlw	-6
 13757  012644  8EE3               	bsf	plusw1,7,c
 13758                           
 13759                           ;stkvar	_b @ sp[(-4)+-4]
 13760  012646  0EFB               	movlw	251
 13761  012648  24E1               	addwf	fsr1l,w,c
 13762  01264A  6ED9               	movwf	fsr2l,c
 13763  01264C  0EFF               	movlw	255
 13764  01264E  20E2               	addwfc	fsr1h,w,c
 13765  012650  6EDA               	movwf	fsr2h,c
 13766  012652  0E00               	movlw	0
 13767  012654  6EDF               	movwf	indf2,c
 13768  012656  D018               	goto	l9416
 13769  012658                     l9414:
 13770  012658  0E00               	movlw	0
 13771  01265A  6E3A               	movwf	(btemp+8)^0,c
 13772  01265C  0E00               	movlw	0
 13773  01265E  6E3B               	movwf	(btemp+9)^0,c
 13774  012660  0E00               	movlw	0
 13775  012662  6E3C               	movwf	(btemp+10)^0,c
 13776  012664  0E00               	movlw	0
 13777  012666  6E3D               	movwf	(btemp+11)^0,c
 13778                           
 13779                           ;stkvar	_b @ sp[(-4)+-4]
 13780  012668  0EF8               	movlw	-8
 13781  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13782  012670  0EF9               	movlw	-7
 13783  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13784  012678  0EFA               	movlw	-6
 13785  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13786  012680  0EFB               	movlw	-5
 13787  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13788  012688                     l9416:
 13789                           
 13790                           ;stkvar	_a @ sp[(-4)+-8]
 13791  012688  0EF7               	movlw	247
 13792  01268A  24E1               	addwf	fsr1l,w,c
 13793  01268C  6ED9               	movwf	fsr2l,c
 13794  01268E  0EFF               	movlw	255
 13795  012690  20E2               	addwfc	fsr1h,w,c
 13796  012692  6EDA               	movwf	fsr2h,c
 13797  012694  50DF               	movf	indf2,w,c
 13798  012696  6E3D               	movwf	(btemp+11)^0,c
 13799  012698  0E80               	movlw	128
 13800  01269A  163D               	andwf	(btemp+11)^0,f,c
 13801                           
 13802                           ;stkvar	_aexp @ sp[(-4)+2]
 13803  01269C  0EFE               	movlw	-2
 13804  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13805                           
 13806                           ;stkvar	_signs @ sp[(-4)+3]
 13807                           ;stkvar	_aexp @ sp[(-4)+2]
 13808  0126A4  50E1               	movf	fsr1l,w,c
 13809  0126A6  0FFE               	addlw	-2
 13810  0126A8  6ED9               	movwf	fsr2l,c
 13811  0126AA  50E2               	movf	fsr1h,w,c
 13812  0126AC  6EDA               	movwf	fsr2h,c
 13813  0126AE  0EFF               	movlw	255
 13814  0126B0  22DA               	addwfc	fsr2h,f,c
 13815  0126B2  0EFF               	movlw	-1
 13816  0126B4  50E3               	movf	plusw1,w,c
 13817  0126B6  18DE               	xorwf	postinc2,w,c
 13818  0126B8  B4D8               	btfsc	status,2,c
 13819  0126BA  D002               	goto	l9422
 13820                           
 13821                           ;stkvar	_signs @ sp[(-4)+3]
 13822  0126BC  0EFF               	movlw	-1
 13823  0126BE  8CE3               	bsf	plusw1,6,c
 13824  0126C0                     l9422:
 13825                           
 13826                           ;stkvar	_a @ sp[(-4)+-8]
 13827  0126C0  0EF7               	movlw	247
 13828  0126C2  24E1               	addwf	fsr1l,w,c
 13829  0126C4  6ED9               	movwf	fsr2l,c
 13830  0126C6  0EFF               	movlw	255
 13831  0126C8  20E2               	addwfc	fsr1h,w,c
 13832  0126CA  6EDA               	movwf	fsr2h,c
 13833  0126CC  50DF               	movf	indf2,w,c
 13834  0126CE  6E3D               	movwf	(btemp+11)^0,c
 13835  0126D0  90D8               	bcf	status,0,c
 13836  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 13837  0126D4  6E3C               	movwf	(btemp+10)^0,c
 13838                           
 13839                           ;stkvar	_aexp @ sp[(-4)+2]
 13840  0126D6  0EFE               	movlw	-2
 13841  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13842                           
 13843                           ;stkvar	_a @ sp[(-4)+-8]
 13844  0126DE  0EF6               	movlw	246
 13845  0126E0  24E1               	addwf	fsr1l,w,c
 13846  0126E2  6ED9               	movwf	fsr2l,c
 13847  0126E4  0EFF               	movlw	255
 13848  0126E6  20E2               	addwfc	fsr1h,w,c
 13849  0126E8  6EDA               	movwf	fsr2h,c
 13850  0126EA  AEDF               	btfss	indf2,7,c
 13851  0126EC  D002               	goto	l9428
 13852                           
 13853                           ;stkvar	_aexp @ sp[(-4)+2]
 13854  0126EE  0EFE               	movlw	-2
 13855  0126F0  80E3               	bsf	plusw1,0,c
 13856  0126F2                     l9428:
 13857                           
 13858                           ;stkvar	_aexp @ sp[(-4)+2]
 13859  0126F2  0EFE               	movlw	-2
 13860  0126F4  50E3               	movf	plusw1,w,c
 13861  0126F6  B4D8               	btfsc	status,2,c
 13862  0126F8  D027               	goto	l9438
 13863                           
 13864                           ;stkvar	_aexp @ sp[(-4)+2]
 13865  0126FA  0EFE               	movlw	-2
 13866  0126FC  28E3               	incf	plusw1,w,c
 13867  0126FE  A4D8               	btfss	status,2,c
 13868  012700  D018               	goto	l9434
 13869  012702  0E00               	movlw	0
 13870  012704  6E3A               	movwf	(btemp+8)^0,c
 13871  012706  0E00               	movlw	0
 13872  012708  6E3B               	movwf	(btemp+9)^0,c
 13873  01270A  0E00               	movlw	0
 13874  01270C  6E3C               	movwf	(btemp+10)^0,c
 13875  01270E  0E00               	movlw	0
 13876  012710  6E3D               	movwf	(btemp+11)^0,c
 13877                           
 13878                           ;stkvar	_a @ sp[(-4)+-8]
 13879  012712  0EF4               	movlw	-12
 13880  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13881  01271A  0EF5               	movlw	-11
 13882  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13883  012722  0EF6               	movlw	-10
 13884  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13885  01272A  0EF7               	movlw	-9
 13886  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13887  012732                     l9434:
 13888                           
 13889                           ;stkvar	_a @ sp[(-4)+-8]
 13890  012732  0EF6               	movlw	-10
 13891  012734  8EE3               	bsf	plusw1,7,c
 13892                           
 13893                           ;stkvar	_a @ sp[(-4)+-8]
 13894  012736  0EF7               	movlw	247
 13895  012738  24E1               	addwf	fsr1l,w,c
 13896  01273A  6ED9               	movwf	fsr2l,c
 13897  01273C  0EFF               	movlw	255
 13898  01273E  20E2               	addwfc	fsr1h,w,c
 13899  012740  6EDA               	movwf	fsr2h,c
 13900  012742  0E00               	movlw	0
 13901  012744  6EDF               	movwf	indf2,c
 13902  012746  D018               	goto	l9440
 13903  012748                     l9438:
 13904  012748  0E00               	movlw	0
 13905  01274A  6E3A               	movwf	(btemp+8)^0,c
 13906  01274C  0E00               	movlw	0
 13907  01274E  6E3B               	movwf	(btemp+9)^0,c
 13908  012750  0E00               	movlw	0
 13909  012752  6E3C               	movwf	(btemp+10)^0,c
 13910  012754  0E00               	movlw	0
 13911  012756  6E3D               	movwf	(btemp+11)^0,c
 13912                           
 13913                           ;stkvar	_a @ sp[(-4)+-8]
 13914  012758  0EF4               	movlw	-12
 13915  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13916  012760  0EF5               	movlw	-11
 13917  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13918  012768  0EF6               	movlw	-10
 13919  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13920  012770  0EF7               	movlw	-9
 13921  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13922  012778                     l9440:
 13923                           
 13924                           ;stkvar	_bexp @ sp[(-4)+1]
 13925                           ;stkvar	_aexp @ sp[(-4)+2]
 13926  012778  50E1               	movf	fsr1l,w,c
 13927  01277A  0FFE               	addlw	-2
 13928  01277C  6ED9               	movwf	fsr2l,c
 13929  01277E  50E2               	movf	fsr1h,w,c
 13930  012780  6EDA               	movwf	fsr2h,c
 13931  012782  0EFF               	movlw	255
 13932  012784  22DA               	addwfc	fsr2h,f,c
 13933  012786  0EFD               	movlw	-3
 13934  012788  50E3               	movf	plusw1,w,c
 13935  01278A  5CDE               	subwf	postinc2,w,c
 13936  01278C  B0D8               	btfsc	status,0,c
 13937  01278E  D0A4               	goto	l9476
 13938                           
 13939                           ;stkvar	_signs @ sp[(-4)+3]
 13940  012790  0EFF               	movlw	-1
 13941  012792  ACE3               	btfss	plusw1,6,c
 13942  012794  D002               	goto	l9446
 13943                           
 13944                           ;stkvar	_signs @ sp[(-4)+3]
 13945  012796  0EFF               	movlw	-1
 13946  012798  7EE3               	btg	plusw1,7,c
 13947  01279A                     l9446:
 13948                           
 13949                           ;stkvar	_bexp @ sp[(-4)+1]
 13950                           ;stkvar	_grs @ sp[(-4)+0]
 13951  01279A  0EFD               	movlw	-3
 13952  01279C  006F FF8C  F032    	movff	plusw1,btemp
 13953  0127A2  0EFC               	movlw	-4
 13954  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13955                           
 13956                           ;stkvar	_aexp @ sp[(-4)+2]
 13957                           ;stkvar	_bexp @ sp[(-4)+1]
 13958  0127AA  0EFE               	movlw	-2
 13959  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 13960  0127B2  0EFD               	movlw	-3
 13961  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13962                           
 13963                           ;stkvar	_grs @ sp[(-4)+0]
 13964                           ;stkvar	_aexp @ sp[(-4)+2]
 13965  0127BA  0EFC               	movlw	-4
 13966  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 13967  0127C2  0EFE               	movlw	-2
 13968  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13969                           
 13970                           ;stkvar	_b @ sp[(-4)+-4]
 13971                           ;stkvar	_grs @ sp[(-4)+0]
 13972  0127CA  0EF8               	movlw	-8
 13973  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 13974  0127D2  0EFC               	movlw	-4
 13975  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13976                           
 13977                           ;stkvar	_a @ sp[(-4)+-8]
 13978                           ;stkvar	_b @ sp[(-4)+-4]
 13979  0127DA  0EF4               	movlw	-12
 13980  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 13981  0127E2  0EF8               	movlw	-8
 13982  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13983                           
 13984                           ;stkvar	_grs @ sp[(-4)+0]
 13985                           ;stkvar	_a @ sp[(-4)+-8]
 13986  0127EA  0EFC               	movlw	-4
 13987  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 13988  0127F2  0EF4               	movlw	-12
 13989  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13990                           
 13991                           ;stkvar	_b @ sp[(-4)+-4]
 13992  0127FA  0EF9               	movlw	249
 13993  0127FC  24E1               	addwf	fsr1l,w,c
 13994  0127FE  6ED9               	movwf	fsr2l,c
 13995  012800  0EFF               	movlw	255
 13996  012802  20E2               	addwfc	fsr1h,w,c
 13997  012804  6EDA               	movwf	fsr2h,c
 13998  012806  50DF               	movf	indf2,w,c
 13999  012808  6E3D               	movwf	(btemp+11)^0,c
 14000                           
 14001                           ;stkvar	_grs @ sp[(-4)+0]
 14002  01280A  0EFC               	movlw	-4
 14003  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14004                           
 14005                           ;stkvar	_a @ sp[(-4)+-8]
 14006  012812  0EF5               	movlw	245
 14007  012814  24E1               	addwf	fsr1l,w,c
 14008  012816  6ED9               	movwf	fsr2l,c
 14009  012818  0EFF               	movlw	255
 14010  01281A  20E2               	addwfc	fsr1h,w,c
 14011  01281C  6EDA               	movwf	fsr2h,c
 14012                           
 14013                           ;stkvar	_b @ sp[(-4)+-4]
 14014  01281E  0EF9               	movlw	249
 14015  012820  24E1               	addwf	fsr1l,w,c
 14016  012822  6EE9               	movwf	fsr0l,c
 14017  012824  0EFF               	movlw	255
 14018  012826  20E2               	addwfc	fsr1h,w,c
 14019  012828  6EEA               	movwf	fsr0h,c
 14020  01282A  006F FF7F FFEF     	movff	indf2,indf0
 14021                           
 14022                           ;stkvar	_grs @ sp[(-4)+0]
 14023                           ;stkvar	_a @ sp[(-4)+-8]
 14024  012830  0EF5               	movlw	245
 14025  012832  24E1               	addwf	fsr1l,w,c
 14026  012834  6ED9               	movwf	fsr2l,c
 14027  012836  0EFF               	movlw	255
 14028  012838  20E2               	addwfc	fsr1h,w,c
 14029  01283A  6EDA               	movwf	fsr2h,c
 14030  01283C  0EFC               	movlw	-4
 14031  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 14032                           
 14033                           ;stkvar	_b @ sp[(-4)+-4]
 14034  012844  0EFA               	movlw	250
 14035  012846  24E1               	addwf	fsr1l,w,c
 14036  012848  6ED9               	movwf	fsr2l,c
 14037  01284A  0EFF               	movlw	255
 14038  01284C  20E2               	addwfc	fsr1h,w,c
 14039  01284E  6EDA               	movwf	fsr2h,c
 14040  012850  50DF               	movf	indf2,w,c
 14041  012852  6E3D               	movwf	(btemp+11)^0,c
 14042                           
 14043                           ;stkvar	_grs @ sp[(-4)+0]
 14044  012854  0EFC               	movlw	-4
 14045  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14046                           
 14047                           ;stkvar	_a @ sp[(-4)+-8]
 14048  01285C  0EF6               	movlw	246
 14049  01285E  24E1               	addwf	fsr1l,w,c
 14050  012860  6ED9               	movwf	fsr2l,c
 14051  012862  0EFF               	movlw	255
 14052  012864  20E2               	addwfc	fsr1h,w,c
 14053  012866  6EDA               	movwf	fsr2h,c
 14054                           
 14055                           ;stkvar	_b @ sp[(-4)+-4]
 14056  012868  0EFA               	movlw	250
 14057  01286A  24E1               	addwf	fsr1l,w,c
 14058  01286C  6EE9               	movwf	fsr0l,c
 14059  01286E  0EFF               	movlw	255
 14060  012870  20E2               	addwfc	fsr1h,w,c
 14061  012872  6EEA               	movwf	fsr0h,c
 14062  012874  006F FF7F FFEF     	movff	indf2,indf0
 14063                           
 14064                           ;stkvar	_grs @ sp[(-4)+0]
 14065                           ;stkvar	_a @ sp[(-4)+-8]
 14066  01287A  0EF6               	movlw	246
 14067  01287C  24E1               	addwf	fsr1l,w,c
 14068  01287E  6ED9               	movwf	fsr2l,c
 14069  012880  0EFF               	movlw	255
 14070  012882  20E2               	addwfc	fsr1h,w,c
 14071  012884  6EDA               	movwf	fsr2h,c
 14072  012886  0EFC               	movlw	-4
 14073  012888  006F FF8F FFDF     	movff	plusw1,indf2
 14074                           
 14075                           ;stkvar	_b @ sp[(-4)+-4]
 14076  01288E  0EFB               	movlw	251
 14077  012890  24E1               	addwf	fsr1l,w,c
 14078  012892  6ED9               	movwf	fsr2l,c
 14079  012894  0EFF               	movlw	255
 14080  012896  20E2               	addwfc	fsr1h,w,c
 14081  012898  6EDA               	movwf	fsr2h,c
 14082  01289A  50DF               	movf	indf2,w,c
 14083  01289C  6E3D               	movwf	(btemp+11)^0,c
 14084                           
 14085                           ;stkvar	_grs @ sp[(-4)+0]
 14086  01289E  0EFC               	movlw	-4
 14087  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14088                           
 14089                           ;stkvar	_a @ sp[(-4)+-8]
 14090  0128A6  0EF7               	movlw	247
 14091  0128A8  24E1               	addwf	fsr1l,w,c
 14092  0128AA  6ED9               	movwf	fsr2l,c
 14093  0128AC  0EFF               	movlw	255
 14094  0128AE  20E2               	addwfc	fsr1h,w,c
 14095  0128B0  6EDA               	movwf	fsr2h,c
 14096                           
 14097                           ;stkvar	_b @ sp[(-4)+-4]
 14098  0128B2  0EFB               	movlw	251
 14099  0128B4  24E1               	addwf	fsr1l,w,c
 14100  0128B6  6EE9               	movwf	fsr0l,c
 14101  0128B8  0EFF               	movlw	255
 14102  0128BA  20E2               	addwfc	fsr1h,w,c
 14103  0128BC  6EEA               	movwf	fsr0h,c
 14104  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 14105                           
 14106                           ;stkvar	_grs @ sp[(-4)+0]
 14107                           ;stkvar	_a @ sp[(-4)+-8]
 14108  0128C4  0EF7               	movlw	247
 14109  0128C6  24E1               	addwf	fsr1l,w,c
 14110  0128C8  6ED9               	movwf	fsr2l,c
 14111  0128CA  0EFF               	movlw	255
 14112  0128CC  20E2               	addwfc	fsr1h,w,c
 14113  0128CE  6EDA               	movwf	fsr2h,c
 14114  0128D0  0EFC               	movlw	-4
 14115  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 14116  0128D8                     l9476:
 14117                           
 14118                           ;stkvar	_grs @ sp[(-4)+0]
 14119  0128D8  0EFC               	movlw	-4
 14120  0128DA  6AE3               	clrf	plusw1,c
 14121                           
 14122                           ;stkvar	_aexp @ sp[(-4)+2]
 14123  0128DC  0EFE               	movlw	-2
 14124  0128DE  50E3               	movf	plusw1,w,c
 14125  0128E0  6E3C               	movwf	(btemp+10)^0,c
 14126  0128E2  6A3D               	clrf	(btemp+11)^0,c
 14127                           
 14128                           ;stkvar	_bexp @ sp[(-4)+1]
 14129  0128E4  0EFD               	movlw	-3
 14130  0128E6  50E3               	movf	plusw1,w,c
 14131  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 14132  0128EA  0E00               	movlw	0
 14133  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 14134  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 14135  0128F0  D062               	goto	l9500
 14136  0128F2  503D               	movf	(btemp+11)^0,w,c
 14137  0128F4  E104               	bnz	u8980
 14138  0128F6  0E1A               	movlw	26
 14139  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 14140  0128FA  A0D8               	btfss	status,0,c
 14141  0128FC  D05C               	goto	l9500
 14142  0128FE                     u8980:
 14143                           
 14144                           ;stkvar	_b @ sp[(-4)+-4]
 14145  0128FE  0EF8               	movlw	-8
 14146  012900  50E3               	movf	plusw1,w,c
 14147  012902  E10A               	bnz	u8991
 14148  012904  0EF9               	movlw	-7
 14149  012906  50E3               	movf	plusw1,w,c
 14150  012908  E107               	bnz	u8991
 14151  01290A  0EFA               	movlw	-6
 14152  01290C  50E3               	movf	plusw1,w,c
 14153  01290E  E104               	bnz	u8991
 14154  012910  0EFB               	movlw	-5
 14155  012912  50E3               	movf	plusw1,w,c
 14156  012914  B4D8               	btfsc	status,2,c
 14157  012916  D003               	goto	u8990
 14158  012918                     u8991:
 14159  012918  6A3D               	clrf	(btemp+11)^0,c
 14160  01291A  2A3D               	incf	(btemp+11)^0,f,c
 14161  01291C  D001               	goto	u9008
 14162  01291E                     u8990:
 14163  01291E  6A3D               	clrf	(btemp+11)^0,c
 14164  012920                     u9008:
 14165                           
 14166                           ;stkvar	_grs @ sp[(-4)+0]
 14167  012920  0EFC               	movlw	-4
 14168  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14169                           
 14170                           ;stkvar	_b @ sp[(-4)+-4]
 14171  012928  0EF8               	movlw	-8
 14172  01292A  6AE3               	clrf	plusw1,c
 14173  01292C  0EF9               	movlw	-7
 14174  01292E  6AE3               	clrf	plusw1,c
 14175  012930  0EFA               	movlw	-6
 14176  012932  6AE3               	clrf	plusw1,c
 14177  012934  0EFB               	movlw	-5
 14178  012936  6AE3               	clrf	plusw1,c
 14179                           
 14180                           ;stkvar	_aexp @ sp[(-4)+2]
 14181                           ;stkvar	_bexp @ sp[(-4)+1]
 14182  012938  0EFE               	movlw	-2
 14183  01293A  006F FF8C  F032    	movff	plusw1,btemp
 14184  012940  0EFD               	movlw	-3
 14185  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 14186  012948  D042               	goto	u9040
 14187  01294A                     l9486:
 14188                           
 14189                           ;stkvar	_grs @ sp[(-4)+0]
 14190  01294A  0EFC               	movlw	-4
 14191  01294C  A0E3               	btfss	plusw1,0,c
 14192  01294E  D00D               	goto	l9490
 14193                           
 14194                           ;stkvar	_grs @ sp[(-4)+0]
 14195  012950  0EFC               	movlw	-4
 14196  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 14197  012958  90D8               	bcf	status,0,c
 14198  01295A  323D               	rrcf	(btemp+11)^0,f,c
 14199  01295C  0E01               	movlw	1
 14200  01295E  123D               	iorwf	(btemp+11)^0,f,c
 14201                           
 14202                           ;stkvar	_grs @ sp[(-4)+0]
 14203  012960  0EFC               	movlw	-4
 14204  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14205  012968  D009               	goto	l9492
 14206  01296A                     l9490:
 14207                           
 14208                           ;stkvar	_grs @ sp[(-4)+0]
 14209  01296A  50E1               	movf	fsr1l,w,c
 14210  01296C  0FFC               	addlw	-4
 14211  01296E  6ED9               	movwf	fsr2l,c
 14212  012970  50E2               	movf	fsr1h,w,c
 14213  012972  6EDA               	movwf	fsr2h,c
 14214  012974  0EFF               	movlw	255
 14215  012976  22DA               	addwfc	fsr2h,f,c
 14216  012978  90D8               	bcf	status,0,c
 14217  01297A  32DF               	rrcf	indf2,f,c
 14218  01297C                     l9492:
 14219                           
 14220                           ;stkvar	_b @ sp[(-4)+-4]
 14221  01297C  0EF8               	movlw	-8
 14222  01297E  A0E3               	btfss	plusw1,0,c
 14223  012980  D002               	goto	l9496
 14224                           
 14225                           ;stkvar	_grs @ sp[(-4)+0]
 14226  012982  0EFC               	movlw	-4
 14227  012984  8EE3               	bsf	plusw1,7,c
 14228  012986                     l9496:
 14229  012986  0E01               	movlw	1
 14230  012988  6E3D               	movwf	(btemp+11)^0,c
 14231                           
 14232                           ;stkvar	_b @ sp[(-4)+-4]
 14233  01298A  50E1               	movf	fsr1l,w,c
 14234  01298C  0FF8               	addlw	-8
 14235  01298E  6ED9               	movwf	fsr2l,c
 14236  012990  50E2               	movf	fsr1h,w,c
 14237  012992  6EDA               	movwf	fsr2h,c
 14238  012994  0EFF               	movlw	255
 14239  012996  22DA               	addwfc	fsr2h,f,c
 14240  012998  283D               	incf	(btemp+11)^0,w,c
 14241  01299A  52DE               	movf	postinc2,f,c
 14242  01299C  D008               	goto	u9030
 14243  01299E                     u9035:
 14244  01299E  52DE               	movf	postinc2,f,c
 14245  0129A0  90D8               	bcf	status,0,c
 14246  0129A2  BEDC               	btfsc	preinc2,7,c
 14247  0129A4  80D8               	bsf	status,0,c
 14248  0129A6  32DD               	rrcf	postdec2,f,c
 14249  0129A8  32DD               	rrcf	postdec2,f,c
 14250  0129AA  32DD               	rrcf	postdec2,f,c
 14251  0129AC  32DE               	rrcf	postinc2,f,c
 14252  0129AE                     u9030:
 14253  0129AE  2EE8               	decfsz	wreg,f,c
 14254  0129B0  D7F6               	goto	u9035
 14255                           
 14256                           ;stkvar	_bexp @ sp[(-4)+1]
 14257  0129B2  0EFD               	movlw	-3
 14258  0129B4  2AE3               	incf	plusw1,f,c
 14259  0129B6                     l9500:
 14260                           
 14261                           ;stkvar	_aexp @ sp[(-4)+2]
 14262                           ;stkvar	_bexp @ sp[(-4)+1]
 14263  0129B6  50E1               	movf	fsr1l,w,c
 14264  0129B8  0FFD               	addlw	-3
 14265  0129BA  6ED9               	movwf	fsr2l,c
 14266  0129BC  50E2               	movf	fsr1h,w,c
 14267  0129BE  6EDA               	movwf	fsr2h,c
 14268  0129C0  0EFF               	movlw	255
 14269  0129C2  22DA               	addwfc	fsr2h,f,c
 14270  0129C4  0EFE               	movlw	-2
 14271  0129C6  50E3               	movf	plusw1,w,c
 14272  0129C8  5CDE               	subwf	postinc2,w,c
 14273  0129CA  A0D8               	btfss	status,0,c
 14274  0129CC  D7BE               	goto	l9486
 14275  0129CE                     u9040:
 14276                           
 14277                           ;stkvar	_signs @ sp[(-4)+3]
 14278  0129CE  0EFF               	movlw	-1
 14279  0129D0  BCE3               	btfsc	plusw1,6,c
 14280  0129D2  D066               	goto	l9528
 14281                           
 14282                           ;stkvar	_bexp @ sp[(-4)+1]
 14283  0129D4  0EFD               	movlw	-3
 14284  0129D6  50E3               	movf	plusw1,w,c
 14285  0129D8  B4D8               	btfsc	status,2,c
 14286  0129DA  D0F2               	goto	u9140
 14287                           
 14288                           ;stkvar	_a @ sp[(-4)+-8]
 14289                           ;stkvar	_b @ sp[(-4)+-4]
 14290  0129DC  0EF8               	movlw	-8
 14291  0129DE  50E3               	movf	plusw1,w,c
 14292  0129E0  6E32               	movwf	btemp^0,c
 14293  0129E2  0EF4               	movlw	-12
 14294  0129E4  50E3               	movf	plusw1,w,c
 14295  0129E6  2632               	addwf	btemp^0,f,c
 14296  0129E8  0EF8               	movlw	-8
 14297  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 14298  0129F0  0EF9               	movlw	-7
 14299  0129F2  50E3               	movf	plusw1,w,c
 14300  0129F4  6E32               	movwf	btemp^0,c
 14301  0129F6  0EF5               	movlw	-11
 14302  0129F8  50E3               	movf	plusw1,w,c
 14303  0129FA  2232               	addwfc	btemp^0,f,c
 14304  0129FC  0EF9               	movlw	-7
 14305  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 14306  012A04  0EFA               	movlw	-6
 14307  012A06  50E3               	movf	plusw1,w,c
 14308  012A08  6E32               	movwf	btemp^0,c
 14309  012A0A  0EF6               	movlw	-10
 14310  012A0C  50E3               	movf	plusw1,w,c
 14311  012A0E  2232               	addwfc	btemp^0,f,c
 14312  012A10  0EFA               	movlw	-6
 14313  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 14314  012A18  0EFB               	movlw	-5
 14315  012A1A  50E3               	movf	plusw1,w,c
 14316  012A1C  6E32               	movwf	btemp^0,c
 14317  012A1E  0EF7               	movlw	-9
 14318  012A20  50E3               	movf	plusw1,w,c
 14319  012A22  2232               	addwfc	btemp^0,f,c
 14320  012A24  0EFB               	movlw	-5
 14321  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 14322                           
 14323                           ;stkvar	_b @ sp[(-4)+-4]
 14324  012A2C  0EFB               	movlw	-5
 14325  012A2E  A0E3               	btfss	plusw1,0,c
 14326  012A30  D101               	goto	u9180
 14327                           
 14328                           ;stkvar	_grs @ sp[(-4)+0]
 14329  012A32  0EFC               	movlw	-4
 14330  012A34  A0E3               	btfss	plusw1,0,c
 14331  012A36  D00D               	goto	l9518
 14332                           
 14333                           ;stkvar	_grs @ sp[(-4)+0]
 14334  012A38  0EFC               	movlw	-4
 14335  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14336  012A40  90D8               	bcf	status,0,c
 14337  012A42  323D               	rrcf	(btemp+11)^0,f,c
 14338  012A44  0E01               	movlw	1
 14339  012A46  123D               	iorwf	(btemp+11)^0,f,c
 14340                           
 14341                           ;stkvar	_grs @ sp[(-4)+0]
 14342  012A48  0EFC               	movlw	-4
 14343  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14344  012A50  D009               	goto	l9520
 14345  012A52                     l9518:
 14346                           
 14347                           ;stkvar	_grs @ sp[(-4)+0]
 14348  012A52  50E1               	movf	fsr1l,w,c
 14349  012A54  0FFC               	addlw	-4
 14350  012A56  6ED9               	movwf	fsr2l,c
 14351  012A58  50E2               	movf	fsr1h,w,c
 14352  012A5A  6EDA               	movwf	fsr2h,c
 14353  012A5C  0EFF               	movlw	255
 14354  012A5E  22DA               	addwfc	fsr2h,f,c
 14355  012A60  90D8               	bcf	status,0,c
 14356  012A62  32DF               	rrcf	indf2,f,c
 14357  012A64                     l9520:
 14358                           
 14359                           ;stkvar	_b @ sp[(-4)+-4]
 14360  012A64  0EF8               	movlw	-8
 14361  012A66  A0E3               	btfss	plusw1,0,c
 14362  012A68  D002               	goto	l9524
 14363                           
 14364                           ;stkvar	_grs @ sp[(-4)+0]
 14365  012A6A  0EFC               	movlw	-4
 14366  012A6C  8EE3               	bsf	plusw1,7,c
 14367  012A6E                     l9524:
 14368  012A6E  0E01               	movlw	1
 14369  012A70  6E3D               	movwf	(btemp+11)^0,c
 14370                           
 14371                           ;stkvar	_b @ sp[(-4)+-4]
 14372  012A72  50E1               	movf	fsr1l,w,c
 14373  012A74  0FF8               	addlw	-8
 14374  012A76  6ED9               	movwf	fsr2l,c
 14375  012A78  50E2               	movf	fsr1h,w,c
 14376  012A7A  6EDA               	movwf	fsr2h,c
 14377  012A7C  0EFF               	movlw	255
 14378  012A7E  22DA               	addwfc	fsr2h,f,c
 14379  012A80  283D               	incf	(btemp+11)^0,w,c
 14380  012A82  52DE               	movf	postinc2,f,c
 14381  012A84  D008               	goto	u9100
 14382  012A86                     u9105:
 14383  012A86  52DE               	movf	postinc2,f,c
 14384  012A88  90D8               	bcf	status,0,c
 14385  012A8A  BEDC               	btfsc	preinc2,7,c
 14386  012A8C  80D8               	bsf	status,0,c
 14387  012A8E  32DD               	rrcf	postdec2,f,c
 14388  012A90  32DD               	rrcf	postdec2,f,c
 14389  012A92  32DD               	rrcf	postdec2,f,c
 14390  012A94  32DE               	rrcf	postinc2,f,c
 14391  012A96                     u9100:
 14392  012A96  2EE8               	decfsz	wreg,f,c
 14393  012A98  D7F6               	goto	u9105
 14394                           
 14395                           ;stkvar	_bexp @ sp[(-4)+1]
 14396  012A9A  0EFD               	movlw	-3
 14397  012A9C  2AE3               	incf	plusw1,f,c
 14398  012A9E  D0CA               	goto	u9180
 14399  012AA0                     l9528:
 14400                           
 14401                           ;stkvar	_a @ sp[(-4)+-8]
 14402                           ;stkvar	_b @ sp[(-4)+-4]
 14403  012AA0  50E1               	movf	fsr1l,w,c
 14404  012AA2  0FF8               	addlw	-8
 14405  012AA4  6ED9               	movwf	fsr2l,c
 14406  012AA6  50E2               	movf	fsr1h,w,c
 14407  012AA8  6EDA               	movwf	fsr2h,c
 14408  012AAA  0EFF               	movlw	255
 14409  012AAC  22DA               	addwfc	fsr2h,f,c
 14410  012AAE  0EF4               	movlw	-12
 14411  012AB0  50E3               	movf	plusw1,w,c
 14412  012AB2  5CDE               	subwf	postinc2,w,c
 14413  012AB4  0EF5               	movlw	-11
 14414  012AB6  50E3               	movf	plusw1,w,c
 14415  012AB8  58DE               	subwfb	postinc2,w,c
 14416  012ABA  0EF6               	movlw	-10
 14417  012ABC  50E3               	movf	plusw1,w,c
 14418  012ABE  58DE               	subwfb	postinc2,w,c
 14419  012AC0  50DE               	movf	postinc2,w,c
 14420  012AC2  0A80               	xorlw	128
 14421  012AC4  6E32               	movwf	btemp^0,c
 14422  012AC6  0EF7               	movlw	-9
 14423  012AC8  50E3               	movf	plusw1,w,c
 14424  012ACA  0A80               	xorlw	128
 14425  012ACC  5832               	subwfb	btemp^0,w,c
 14426  012ACE  B0D8               	btfsc	status,0,c
 14427  012AD0  D053               	goto	l9540
 14428                           
 14429                           ;stkvar	_b @ sp[(-4)+-4]
 14430                           ;stkvar	_a @ sp[(-4)+-8]
 14431  012AD2  0EF4               	movlw	-12
 14432  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14433  012ADA  0EF5               	movlw	-11
 14434  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14435  012AE2  0EF6               	movlw	-10
 14436  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14437  012AEA  0EF7               	movlw	-9
 14438  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14439  012AF2  0EF8               	movlw	-8
 14440  012AF4  50E3               	movf	plusw1,w,c
 14441  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 14442  012AF8  0EF9               	movlw	-7
 14443  012AFA  50E3               	movf	plusw1,w,c
 14444  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 14445  012AFE  0EFA               	movlw	-6
 14446  012B00  50E3               	movf	plusw1,w,c
 14447  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 14448  012B04  0EFB               	movlw	-5
 14449  012B06  50E3               	movf	plusw1,w,c
 14450  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 14451  012B0A  0EFF               	movlw	255
 14452  012B0C  243A               	addwf	(btemp+8)^0,w,c
 14453  012B0E  6E36               	movwf	(btemp+4)^0,c
 14454  012B10  0EFF               	movlw	255
 14455  012B12  203B               	addwfc	(btemp+9)^0,w,c
 14456  012B14  6E37               	movwf	(btemp+5)^0,c
 14457  012B16  0EFF               	movlw	255
 14458  012B18  203C               	addwfc	(btemp+10)^0,w,c
 14459  012B1A  6E38               	movwf	(btemp+6)^0,c
 14460  012B1C  0EFF               	movlw	255
 14461  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 14462  012B20  6E39               	movwf	(btemp+7)^0,c
 14463                           
 14464                           ;stkvar	_b @ sp[(-4)+-4]
 14465  012B22  0EF8               	movlw	-8
 14466  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14467  012B2A  0EF9               	movlw	-7
 14468  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14469  012B32  0EFA               	movlw	-6
 14470  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14471  012B3A  0EFB               	movlw	-5
 14472  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14473                           
 14474                           ;stkvar	_signs @ sp[(-4)+3]
 14475  012B42  0EFF               	movlw	-1
 14476  012B44  7EE3               	btg	plusw1,7,c
 14477                           
 14478                           ;stkvar	_grs @ sp[(-4)+0]
 14479  012B46  0EFC               	movlw	-4
 14480  012B48  50E3               	movf	plusw1,w,c
 14481  012B4A  0800               	sublw	0
 14482  012B4C  6E3D               	movwf	(btemp+11)^0,c
 14483                           
 14484                           ;stkvar	_grs @ sp[(-4)+0]
 14485  012B4E  0EFC               	movlw	-4
 14486  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14487                           
 14488                           ;stkvar	_grs @ sp[(-4)+0]
 14489  012B56  0EFC               	movlw	-4
 14490  012B58  50E3               	movf	plusw1,w,c
 14491  012B5A  A4D8               	btfss	status,2,c
 14492  012B5C  D020               	goto	l9542
 14493                           
 14494                           ;stkvar	_b @ sp[(-4)+-4]
 14495  012B5E  50E1               	movf	fsr1l,w,c
 14496  012B60  0FF8               	addlw	-8
 14497  012B62  6ED9               	movwf	fsr2l,c
 14498  012B64  50E2               	movf	fsr1h,w,c
 14499  012B66  6EDA               	movwf	fsr2h,c
 14500  012B68  0EFF               	movlw	255
 14501  012B6A  22DA               	addwfc	fsr2h,f,c
 14502  012B6C  2ADE               	incf	postinc2,f,c
 14503  012B6E  0E00               	movlw	0
 14504  012B70  22DE               	addwfc	postinc2,f,c
 14505  012B72  22DE               	addwfc	postinc2,f,c
 14506  012B74  22DE               	addwfc	postinc2,f,c
 14507  012B76  D013               	goto	l9542
 14508  012B78                     l9540:
 14509                           
 14510                           ;stkvar	_a @ sp[(-4)+-8]
 14511                           ;stkvar	_b @ sp[(-4)+-4]
 14512  012B78  50E1               	movf	fsr1l,w,c
 14513  012B7A  0FF8               	addlw	-8
 14514  012B7C  6ED9               	movwf	fsr2l,c
 14515  012B7E  50E2               	movf	fsr1h,w,c
 14516  012B80  6EDA               	movwf	fsr2h,c
 14517  012B82  0EFF               	movlw	255
 14518  012B84  22DA               	addwfc	fsr2h,f,c
 14519  012B86  0EF4               	movlw	-12
 14520  012B88  50E3               	movf	plusw1,w,c
 14521  012B8A  5EDE               	subwf	postinc2,f,c
 14522  012B8C  0EF5               	movlw	-11
 14523  012B8E  50E3               	movf	plusw1,w,c
 14524  012B90  5ADE               	subwfb	postinc2,f,c
 14525  012B92  0EF6               	movlw	-10
 14526  012B94  50E3               	movf	plusw1,w,c
 14527  012B96  5ADE               	subwfb	postinc2,f,c
 14528  012B98  0EF7               	movlw	-9
 14529  012B9A  50E3               	movf	plusw1,w,c
 14530  012B9C  5ADE               	subwfb	postinc2,f,c
 14531  012B9E                     l9542:
 14532                           
 14533                           ;stkvar	_b @ sp[(-4)+-4]
 14534  012B9E  0EF8               	movlw	-8
 14535  012BA0  50E3               	movf	plusw1,w,c
 14536  012BA2  E145               	bnz	l9564
 14537  012BA4  0EF9               	movlw	-7
 14538  012BA6  50E3               	movf	plusw1,w,c
 14539  012BA8  E142               	bnz	l9564
 14540  012BAA  0EFA               	movlw	-6
 14541  012BAC  50E3               	movf	plusw1,w,c
 14542  012BAE  E13F               	bnz	l9564
 14543  012BB0  0EFB               	movlw	-5
 14544  012BB2  50E3               	movf	plusw1,w,c
 14545  012BB4  A4D8               	btfss	status,2,c
 14546  012BB6  D03B               	goto	l9564
 14547                           
 14548                           ;stkvar	_grs @ sp[(-4)+0]
 14549  012BB8  0EFC               	movlw	-4
 14550  012BBA  50E3               	movf	plusw1,w,c
 14551  012BBC  A4D8               	btfss	status,2,c
 14552  012BBE  D037               	goto	l9564
 14553  012BC0                     u9140:
 14554  012BC0  0E00               	movlw	0
 14555  012BC2  6E32               	movwf	btemp^0,c
 14556  012BC4  0E00               	movlw	0
 14557  012BC6  6E33               	movwf	(btemp+1)^0,c
 14558  012BC8  0E00               	movlw	0
 14559  012BCA  6E34               	movwf	(btemp+2)^0,c
 14560  012BCC  0E00               	movlw	0
 14561  012BCE  6E35               	movwf	(btemp+3)^0,c
 14562  012BD0  D0C6               	goto	l2586
 14563  012BD2                     l9550:
 14564                           
 14565                           ;stkvar	_b @ sp[(-4)+-4]
 14566  012BD2  90D8               	bcf	status,0,c
 14567  012BD4  0EF8               	movlw	-8
 14568  012BD6  36E3               	rlcf	plusw1,f,c
 14569  012BD8  0EF9               	movlw	-7
 14570  012BDA  36E3               	rlcf	plusw1,f,c
 14571  012BDC  0EFA               	movlw	-6
 14572  012BDE  36E3               	rlcf	plusw1,f,c
 14573  012BE0  0EFB               	movlw	-5
 14574  012BE2  36E3               	rlcf	plusw1,f,c
 14575                           
 14576                           ;stkvar	_grs @ sp[(-4)+0]
 14577  012BE4  0EFC               	movlw	-4
 14578  012BE6  AEE3               	btfss	plusw1,7,c
 14579  012BE8  D002               	goto	l2598
 14580                           
 14581                           ;stkvar	_b @ sp[(-4)+-4]
 14582  012BEA  0EF8               	movlw	-8
 14583  012BEC  80E3               	bsf	plusw1,0,c
 14584  012BEE                     l2598:
 14585                           
 14586                           ;stkvar	_grs @ sp[(-4)+0]
 14587  012BEE  0EFC               	movlw	-4
 14588  012BF0  A0E3               	btfss	plusw1,0,c
 14589  012BF2  D00E               	goto	l9558
 14590                           
 14591                           ;stkvar	_grs @ sp[(-4)+0]
 14592  012BF4  0EFC               	movlw	-4
 14593  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 14594  012BFC  90D8               	bcf	status,0,c
 14595  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 14596  012C00  6E3C               	movwf	(btemp+10)^0,c
 14597  012C02  0E01               	movlw	1
 14598  012C04  123C               	iorwf	(btemp+10)^0,f,c
 14599                           
 14600                           ;stkvar	_grs @ sp[(-4)+0]
 14601  012C06  0EFC               	movlw	-4
 14602  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14603  012C0E  D009               	goto	l9560
 14604  012C10                     l9558:
 14605                           
 14606                           ;stkvar	_grs @ sp[(-4)+0]
 14607  012C10  50E1               	movf	fsr1l,w,c
 14608  012C12  0FFC               	addlw	-4
 14609  012C14  6ED9               	movwf	fsr2l,c
 14610  012C16  50E2               	movf	fsr1h,w,c
 14611  012C18  6EDA               	movwf	fsr2h,c
 14612  012C1A  0EFF               	movlw	255
 14613  012C1C  22DA               	addwfc	fsr2h,f,c
 14614  012C1E  90D8               	bcf	status,0,c
 14615  012C20  36DF               	rlcf	indf2,f,c
 14616  012C22                     l9560:
 14617                           
 14618                           ;stkvar	_bexp @ sp[(-4)+1]
 14619  012C22  0EFD               	movlw	-3
 14620  012C24  50E3               	movf	plusw1,w,c
 14621  012C26  B4D8               	btfsc	status,2,c
 14622  012C28  D002               	goto	l9564
 14623                           
 14624                           ;stkvar	_bexp @ sp[(-4)+1]
 14625  012C2A  0EFD               	movlw	-3
 14626  012C2C  06E3               	decf	plusw1,f,c
 14627  012C2E                     l9564:
 14628                           
 14629                           ;stkvar	_b @ sp[(-4)+-4]
 14630  012C2E  0EFA               	movlw	-6
 14631  012C30  AEE3               	btfss	plusw1,7,c
 14632  012C32  D7CF               	goto	l9550
 14633  012C34                     u9180:
 14634                           
 14635                           ;stkvar	_aexp @ sp[(-4)+2]
 14636  012C34  0EFE               	movlw	-2
 14637  012C36  6AE3               	clrf	plusw1,c
 14638                           
 14639                           ;stkvar	_grs @ sp[(-4)+0]
 14640  012C38  0EFC               	movlw	-4
 14641  012C3A  AEE3               	btfss	plusw1,7,c
 14642  012C3C  D00F               	goto	l9578
 14643                           
 14644                           ;stkvar	_grs @ sp[(-4)+0]
 14645  012C3E  0EFC               	movlw	-4
 14646  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14647  012C46  0E7F               	movlw	127
 14648  012C48  163D               	andwf	(btemp+11)^0,f,c
 14649  012C4A  B4D8               	btfsc	status,2,c
 14650  012C4C  D004               	goto	l9574
 14651  012C4E                     u9200:
 14652                           
 14653                           ;stkvar	_aexp @ sp[(-4)+2]
 14654  012C4E  0EFE               	movlw	-2
 14655  012C50  6AE3               	clrf	plusw1,c
 14656  012C52  2AE3               	incf	plusw1,f,c
 14657  012C54  D003               	goto	l9578
 14658  012C56                     l9574:
 14659                           
 14660                           ;stkvar	_b @ sp[(-4)+-4]
 14661  012C56  0EF8               	movlw	-8
 14662  012C58  B0E3               	btfsc	plusw1,0,c
 14663  012C5A  D7F9               	goto	u9200
 14664  012C5C                     l9578:
 14665                           
 14666                           ;stkvar	_aexp @ sp[(-4)+2]
 14667  012C5C  0EFE               	movlw	-2
 14668  012C5E  50E3               	movf	plusw1,w,c
 14669  012C60  B4D8               	btfsc	status,2,c
 14670  012C62  D02B               	goto	l9590
 14671                           
 14672                           ;stkvar	_b @ sp[(-4)+-4]
 14673  012C64  50E1               	movf	fsr1l,w,c
 14674  012C66  0FF8               	addlw	-8
 14675  012C68  6ED9               	movwf	fsr2l,c
 14676  012C6A  50E2               	movf	fsr1h,w,c
 14677  012C6C  6EDA               	movwf	fsr2h,c
 14678  012C6E  0EFF               	movlw	255
 14679  012C70  22DA               	addwfc	fsr2h,f,c
 14680  012C72  2ADE               	incf	postinc2,f,c
 14681  012C74  0E00               	movlw	0
 14682  012C76  22DE               	addwfc	postinc2,f,c
 14683  012C78  22DE               	addwfc	postinc2,f,c
 14684  012C7A  22DE               	addwfc	postinc2,f,c
 14685                           
 14686                           ;stkvar	_b @ sp[(-4)+-4]
 14687  012C7C  0EFB               	movlw	-5
 14688  012C7E  A0E3               	btfss	plusw1,0,c
 14689  012C80  D01C               	goto	l9590
 14690  012C82  0E01               	movlw	1
 14691  012C84  6E3D               	movwf	(btemp+11)^0,c
 14692                           
 14693                           ;stkvar	_b @ sp[(-4)+-4]
 14694  012C86  50E1               	movf	fsr1l,w,c
 14695  012C88  0FF8               	addlw	-8
 14696  012C8A  6ED9               	movwf	fsr2l,c
 14697  012C8C  50E2               	movf	fsr1h,w,c
 14698  012C8E  6EDA               	movwf	fsr2h,c
 14699  012C90  0EFF               	movlw	255
 14700  012C92  22DA               	addwfc	fsr2h,f,c
 14701  012C94  283D               	incf	(btemp+11)^0,w,c
 14702  012C96  52DE               	movf	postinc2,f,c
 14703  012C98  D008               	goto	u9240
 14704  012C9A                     u9245:
 14705  012C9A  52DE               	movf	postinc2,f,c
 14706  012C9C  90D8               	bcf	status,0,c
 14707  012C9E  BEDC               	btfsc	preinc2,7,c
 14708  012CA0  80D8               	bsf	status,0,c
 14709  012CA2  32DD               	rrcf	postdec2,f,c
 14710  012CA4  32DD               	rrcf	postdec2,f,c
 14711  012CA6  32DD               	rrcf	postdec2,f,c
 14712  012CA8  32DE               	rrcf	postinc2,f,c
 14713  012CAA                     u9240:
 14714  012CAA  2EE8               	decfsz	wreg,f,c
 14715  012CAC  D7F6               	goto	u9245
 14716                           
 14717                           ;stkvar	_bexp @ sp[(-4)+1]
 14718  012CAE  0EFD               	movlw	-3
 14719  012CB0  28E3               	incf	plusw1,w,c
 14720  012CB2  B4D8               	btfsc	status,2,c
 14721  012CB4  D002               	goto	l9590
 14722                           
 14723                           ;stkvar	_bexp @ sp[(-4)+1]
 14724  012CB6  0EFD               	movlw	-3
 14725  012CB8  2AE3               	incf	plusw1,f,c
 14726  012CBA                     l9590:
 14727                           
 14728                           ;stkvar	_bexp @ sp[(-4)+1]
 14729  012CBA  0EFD               	movlw	-3
 14730  012CBC  28E3               	incf	plusw1,w,c
 14731  012CBE  B4D8               	btfsc	status,2,c
 14732  012CC0  D004               	goto	u9270
 14733                           
 14734                           ;stkvar	_bexp @ sp[(-4)+1]
 14735  012CC2  0EFD               	movlw	-3
 14736  012CC4  50E3               	movf	plusw1,w,c
 14737  012CC6  A4D8               	btfss	status,2,c
 14738  012CC8  D00E               	goto	l9600
 14739  012CCA                     u9270:
 14740                           
 14741                           ;stkvar	_b @ sp[(-4)+-4]
 14742  012CCA  0EF8               	movlw	-8
 14743  012CCC  6AE3               	clrf	plusw1,c
 14744  012CCE  0EF9               	movlw	-7
 14745  012CD0  6AE3               	clrf	plusw1,c
 14746  012CD2  0EFA               	movlw	-6
 14747  012CD4  6AE3               	clrf	plusw1,c
 14748  012CD6  0EFB               	movlw	-5
 14749  012CD8  6AE3               	clrf	plusw1,c
 14750                           
 14751                           ;stkvar	_bexp @ sp[(-4)+1]
 14752  012CDA  0EFD               	movlw	-3
 14753  012CDC  50E3               	movf	plusw1,w,c
 14754  012CDE  A4D8               	btfss	status,2,c
 14755  012CE0  D002               	goto	l9600
 14756                           
 14757                           ;stkvar	_signs @ sp[(-4)+3]
 14758  012CE2  0EFF               	movlw	-1
 14759  012CE4  6AE3               	clrf	plusw1,c
 14760  012CE6                     l9600:
 14761                           
 14762                           ;stkvar	_bexp @ sp[(-4)+1]
 14763  012CE6  0EFD               	movlw	-3
 14764  012CE8  A0E3               	btfss	plusw1,0,c
 14765  012CEA  D009               	goto	l9604
 14766                           
 14767                           ;stkvar	_b @ sp[(-4)+-4]
 14768  012CEC  0EFA               	movlw	250
 14769  012CEE  24E1               	addwf	fsr1l,w,c
 14770  012CF0  6ED9               	movwf	fsr2l,c
 14771  012CF2  0EFF               	movlw	255
 14772  012CF4  20E2               	addwfc	fsr1h,w,c
 14773  012CF6  6EDA               	movwf	fsr2h,c
 14774  012CF8  0E00               	movlw	0
 14775  012CFA  8EDB               	bsf	plusw2,7,c
 14776  012CFC  D008               	goto	l9606
 14777  012CFE                     l9604:
 14778                           
 14779                           ;stkvar	_b @ sp[(-4)+-4]
 14780  012CFE  0EFA               	movlw	250
 14781  012D00  24E1               	addwf	fsr1l,w,c
 14782  012D02  6ED9               	movwf	fsr2l,c
 14783  012D04  0EFF               	movlw	255
 14784  012D06  20E2               	addwfc	fsr1h,w,c
 14785  012D08  6EDA               	movwf	fsr2h,c
 14786  012D0A  0E7F               	movlw	127
 14787  012D0C  16DF               	andwf	indf2,f,c
 14788  012D0E                     l9606:
 14789                           
 14790                           ;stkvar	_b @ sp[(-4)+-4]
 14791  012D0E  0EFB               	movlw	251
 14792  012D10  24E1               	addwf	fsr1l,w,c
 14793  012D12  6ED9               	movwf	fsr2l,c
 14794  012D14  0EFF               	movlw	255
 14795  012D16  20E2               	addwfc	fsr1h,w,c
 14796  012D18  6EDA               	movwf	fsr2h,c
 14797                           
 14798                           ;stkvar	_bexp @ sp[(-4)+1]
 14799  012D1A  0EFD               	movlw	-3
 14800  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14801  012D22  90D8               	bcf	status,0,c
 14802  012D24  303D               	rrcf	(btemp+11)^0,w,c
 14803  012D26  6EDF               	movwf	indf2,c
 14804                           
 14805                           ;stkvar	_signs @ sp[(-4)+3]
 14806  012D28  0EFF               	movlw	-1
 14807  012D2A  AEE3               	btfss	plusw1,7,c
 14808  012D2C  D008               	goto	l9612
 14809                           
 14810                           ;stkvar	_b @ sp[(-4)+-4]
 14811  012D2E  0EFB               	movlw	251
 14812  012D30  24E1               	addwf	fsr1l,w,c
 14813  012D32  6ED9               	movwf	fsr2l,c
 14814  012D34  0EFF               	movlw	255
 14815  012D36  20E2               	addwfc	fsr1h,w,c
 14816  012D38  6EDA               	movwf	fsr2h,c
 14817  012D3A  0E00               	movlw	0
 14818  012D3C  8EDB               	bsf	plusw2,7,c
 14819  012D3E                     l9612:
 14820                           
 14821                           ;stkvar	_b @ sp[(-4)+-4]
 14822  012D3E  0EF8               	movlw	-8
 14823  012D40  006F FF8C  F032    	movff	plusw1,btemp
 14824  012D46  0EF9               	movlw	-7
 14825  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 14826  012D4E  0EFA               	movlw	-6
 14827  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 14828  012D56  0EFB               	movlw	-5
 14829  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 14830  012D5E                     l2586:
 14831                           
 14832                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14833  012D5E  0EF4               	movlw	244
 14834  012D60  26E1               	addwf	fsr1l,f,c
 14835  012D62  0EFF               	movlw	255
 14836  012D64  22E2               	addwfc	fsr1h,f,c
 14837  012D66  0012               	return		;funcret
 14838  012D68                     __end_of___fladd:
 14839                           	opt callstack 0
 14840                           
 14841 ;; *************** function ___flneg *****************
 14842 ;; Defined at:
 14843 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;  f1              4  [STACK] unsigned char 
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;		None
 14848 ;; Return value:  Size  Location     Type
 14849 ;;                  4  [STACK] unsigned char 
 14850 ;; Registers used:
 14851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14852 ;; Tracked objects:
 14853 ;;		On entry : 0/5
 14854 ;;		On exit  : 0/0
 14855 ;;		Unchanged: 0/0
 14856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14861 ;;Total ram usage:        0 bytes
 14862 ;; Hardware stack levels used:    1
 14863 ;; Hardware stack levels required when called:    6
 14864 ;; This function calls:
 14865 ;;		Nothing
 14866 ;; This function is called by:
 14867 ;;		_efgtoa
 14868 ;; This function uses a reentrant model
 14869 ;;
 14870                           
 14871                           	psect	text53
 14872  017ACE                     __ptext53:
 14873                           	opt callstack 0
 14874  017ACE                     ___flneg:
 14875                           	opt callstack 17
 14876                           
 14877                           ;stkvar	_f1 @ sp[(0)+-4]
 14878                           
 14879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14880                           ;incstack = 0
 14881  017ACE  0EFC               	movlw	-4
 14882  017AD0  50E3               	movf	plusw1,w,c
 14883  017AD2  E10A               	bnz	u10580
 14884  017AD4  0EFD               	movlw	-3
 14885  017AD6  50E3               	movf	plusw1,w,c
 14886  017AD8  E107               	bnz	u10580
 14887  017ADA  0EFE               	movlw	-2
 14888  017ADC  50E3               	movf	plusw1,w,c
 14889  017ADE  E104               	bnz	u10580
 14890  017AE0  0EFF               	movlw	-1
 14891  017AE2  50E3               	movf	plusw1,w,c
 14892  017AE4  B4D8               	btfsc	status,2,c
 14893  017AE6  D002               	goto	l10280
 14894  017AE8                     u10580:
 14895                           
 14896                           ;stkvar	_f1 @ sp[(0)+-4]
 14897  017AE8  0EFF               	movlw	-1
 14898  017AEA  7EE3               	btg	plusw1,7,c
 14899  017AEC                     l10280:
 14900                           
 14901                           ;stkvar	_f1 @ sp[(0)+-4]
 14902  017AEC  0EFC               	movlw	-4
 14903  017AEE  006F FF8C  F032    	movff	plusw1,btemp
 14904  017AF4  0EFD               	movlw	-3
 14905  017AF6  006F FF8C  F033    	movff	plusw1,btemp+1
 14906  017AFC  0EFE               	movlw	-2
 14907  017AFE  006F FF8C  F034    	movff	plusw1,btemp+2
 14908  017B04  0EFF               	movlw	-1
 14909  017B06  006F FF8C  F035    	movff	plusw1,btemp+3
 14910                           
 14911                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14912  017B0C  52E5               	movf	postdec1,f,c
 14913  017B0E  52E5               	movf	postdec1,f,c
 14914  017B10  52E5               	movf	postdec1,f,c
 14915  017B12  52E5               	movf	postdec1,f,c
 14916  017B14  0012               	return		;funcret
 14917  017B16                     __end_of___flneg:
 14918                           	opt callstack 0
 14919                           
 14920 ;; *************** function ___flmul *****************
 14921 ;; Defined at:
 14922 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;  b               4  [STACK] unsigned char 
 14925 ;;  a               4  [STACK] unsigned char 
 14926 ;; Auto vars:     Size  Location     Type
 14927 ;;  prod            4  [STACK] struct .
 14928 ;;  grs             4  [STACK] unsigned long 
 14929 ;;  temp            2  [STACK] struct .
 14930 ;;  bexp            1  [STACK] unsigned char 
 14931 ;;  aexp            1  [STACK] unsigned char 
 14932 ;;  sign            1  [STACK] unsigned char 
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  4  [STACK] unsigned char 
 14935 ;; Registers used:
 14936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14937 ;; Tracked objects:
 14938 ;;		On entry : 0/39
 14939 ;;		On exit  : 0/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;Total ram usage:        0 bytes
 14947 ;; Hardware stack levels used:    1
 14948 ;; Hardware stack levels required when called:    6
 14949 ;; This function calls:
 14950 ;;		Nothing
 14951 ;; This function is called by:
 14952 ;;		_conv_raw_result
 14953 ;;		_lp_filter
 14954 ;;		_efgtoa
 14955 ;; This function uses a reentrant model
 14956 ;;
 14957                           
 14958                           	psect	text54
 14959  011D82                     __ptext54:
 14960                           	opt callstack 0
 14961  011D82                     ___flmul:
 14962                           	opt callstack 0
 14963                           
 14964                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14965  011D82  0E0D               	movlw	13
 14966  011D84  26E1               	addwf	fsr1l,f,c
 14967  011D86  0E00               	movlw	0
 14968  011D88  22E2               	addwfc	fsr1h,f,c
 14969                           
 14970                           ;stkvar	_b @ sp[(-13)+-4]
 14971                           
 14972                           ;incstack = 0
 14973  011D8A  0EF2               	movlw	242
 14974  011D8C  24E1               	addwf	fsr1l,w,c
 14975  011D8E  6ED9               	movwf	fsr2l,c
 14976  011D90  0EFF               	movlw	255
 14977  011D92  20E2               	addwfc	fsr1h,w,c
 14978  011D94  6EDA               	movwf	fsr2h,c
 14979  011D96  50DF               	movf	indf2,w,c
 14980  011D98  6E3D               	movwf	(btemp+11)^0,c
 14981  011D9A  0E80               	movlw	128
 14982  011D9C  163D               	andwf	(btemp+11)^0,f,c
 14983                           
 14984                           ;stkvar	_sign @ sp[(-13)+12]
 14985  011D9E  0EFF               	movlw	-1
 14986  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14987                           
 14988                           ;stkvar	_b @ sp[(-13)+-4]
 14989  011DA6  0EF2               	movlw	242
 14990  011DA8  24E1               	addwf	fsr1l,w,c
 14991  011DAA  6ED9               	movwf	fsr2l,c
 14992  011DAC  0EFF               	movlw	255
 14993  011DAE  20E2               	addwfc	fsr1h,w,c
 14994  011DB0  6EDA               	movwf	fsr2h,c
 14995  011DB2  50DF               	movf	indf2,w,c
 14996  011DB4  6E3D               	movwf	(btemp+11)^0,c
 14997  011DB6  90D8               	bcf	status,0,c
 14998  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 14999  011DBA  6E3C               	movwf	(btemp+10)^0,c
 15000                           
 15001                           ;stkvar	_bexp @ sp[(-13)+10]
 15002  011DBC  0EFD               	movlw	-3
 15003  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15004                           
 15005                           ;stkvar	_b @ sp[(-13)+-4]
 15006  011DC4  0EF1               	movlw	241
 15007  011DC6  24E1               	addwf	fsr1l,w,c
 15008  011DC8  6ED9               	movwf	fsr2l,c
 15009  011DCA  0EFF               	movlw	255
 15010  011DCC  20E2               	addwfc	fsr1h,w,c
 15011  011DCE  6EDA               	movwf	fsr2h,c
 15012  011DD0  AEDF               	btfss	indf2,7,c
 15013  011DD2  D002               	goto	l9996
 15014                           
 15015                           ;stkvar	_bexp @ sp[(-13)+10]
 15016  011DD4  0EFD               	movlw	-3
 15017  011DD6  80E3               	bsf	plusw1,0,c
 15018  011DD8                     l9996:
 15019                           
 15020                           ;stkvar	_bexp @ sp[(-13)+10]
 15021  011DD8  0EFD               	movlw	-3
 15022  011DDA  50E3               	movf	plusw1,w,c
 15023  011DDC  B4D8               	btfsc	status,2,c
 15024  011DDE  D01F               	goto	l10004
 15025                           
 15026                           ;stkvar	_bexp @ sp[(-13)+10]
 15027  011DE0  0EFD               	movlw	-3
 15028  011DE2  28E3               	incf	plusw1,w,c
 15029  011DE4  A4D8               	btfss	status,2,c
 15030  011DE6  D018               	goto	l10002
 15031  011DE8  0E00               	movlw	0
 15032  011DEA  6E3A               	movwf	(btemp+8)^0,c
 15033  011DEC  0E00               	movlw	0
 15034  011DEE  6E3B               	movwf	(btemp+9)^0,c
 15035  011DF0  0E00               	movlw	0
 15036  011DF2  6E3C               	movwf	(btemp+10)^0,c
 15037  011DF4  0E00               	movlw	0
 15038  011DF6  6E3D               	movwf	(btemp+11)^0,c
 15039                           
 15040                           ;stkvar	_b @ sp[(-13)+-4]
 15041  011DF8  0EEF               	movlw	-17
 15042  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15043  011E00  0EF0               	movlw	-16
 15044  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15045  011E08  0EF1               	movlw	-15
 15046  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15047  011E10  0EF2               	movlw	-14
 15048  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15049  011E18                     l10002:
 15050                           
 15051                           ;stkvar	_b @ sp[(-13)+-4]
 15052  011E18  0EF1               	movlw	-15
 15053  011E1A  8EE3               	bsf	plusw1,7,c
 15054  011E1C  D018               	goto	l10006
 15055  011E1E                     l10004:
 15056  011E1E  0E00               	movlw	0
 15057  011E20  6E3A               	movwf	(btemp+8)^0,c
 15058  011E22  0E00               	movlw	0
 15059  011E24  6E3B               	movwf	(btemp+9)^0,c
 15060  011E26  0E00               	movlw	0
 15061  011E28  6E3C               	movwf	(btemp+10)^0,c
 15062  011E2A  0E00               	movlw	0
 15063  011E2C  6E3D               	movwf	(btemp+11)^0,c
 15064                           
 15065                           ;stkvar	_b @ sp[(-13)+-4]
 15066  011E2E  0EEF               	movlw	-17
 15067  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15068  011E36  0EF0               	movlw	-16
 15069  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15070  011E3E  0EF1               	movlw	-15
 15071  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15072  011E46  0EF2               	movlw	-14
 15073  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15074  011E4E                     l10006:
 15075                           
 15076                           ;stkvar	_a @ sp[(-13)+-8]
 15077  011E4E  0EEE               	movlw	238
 15078  011E50  24E1               	addwf	fsr1l,w,c
 15079  011E52  6ED9               	movwf	fsr2l,c
 15080  011E54  0EFF               	movlw	255
 15081  011E56  20E2               	addwfc	fsr1h,w,c
 15082  011E58  6EDA               	movwf	fsr2h,c
 15083  011E5A  50DF               	movf	indf2,w,c
 15084  011E5C  6E3D               	movwf	(btemp+11)^0,c
 15085  011E5E  0E80               	movlw	128
 15086  011E60  163D               	andwf	(btemp+11)^0,f,c
 15087                           
 15088                           ;stkvar	_sign @ sp[(-13)+12]
 15089  011E62  50E1               	movf	fsr1l,w,c
 15090  011E64  0FFF               	addlw	-1
 15091  011E66  6ED9               	movwf	fsr2l,c
 15092  011E68  50E2               	movf	fsr1h,w,c
 15093  011E6A  6EDA               	movwf	fsr2h,c
 15094  011E6C  0EFF               	movlw	255
 15095  011E6E  22DA               	addwfc	fsr2h,f,c
 15096  011E70  503D               	movf	(btemp+11)^0,w,c
 15097  011E72  1ADF               	xorwf	indf2,f,c
 15098                           
 15099                           ;stkvar	_a @ sp[(-13)+-8]
 15100  011E74  0EEE               	movlw	238
 15101  011E76  24E1               	addwf	fsr1l,w,c
 15102  011E78  6ED9               	movwf	fsr2l,c
 15103  011E7A  0EFF               	movlw	255
 15104  011E7C  20E2               	addwfc	fsr1h,w,c
 15105  011E7E  6EDA               	movwf	fsr2h,c
 15106  011E80  50DF               	movf	indf2,w,c
 15107  011E82  6E3D               	movwf	(btemp+11)^0,c
 15108  011E84  90D8               	bcf	status,0,c
 15109  011E86  343D               	rlcf	(btemp+11)^0,w,c
 15110  011E88  6E3C               	movwf	(btemp+10)^0,c
 15111                           
 15112                           ;stkvar	_aexp @ sp[(-13)+11]
 15113  011E8A  0EFE               	movlw	-2
 15114  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15115                           
 15116                           ;stkvar	_a @ sp[(-13)+-8]
 15117  011E92  0EED               	movlw	237
 15118  011E94  24E1               	addwf	fsr1l,w,c
 15119  011E96  6ED9               	movwf	fsr2l,c
 15120  011E98  0EFF               	movlw	255
 15121  011E9A  20E2               	addwfc	fsr1h,w,c
 15122  011E9C  6EDA               	movwf	fsr2h,c
 15123  011E9E  AEDF               	btfss	indf2,7,c
 15124  011EA0  D002               	goto	l10014
 15125                           
 15126                           ;stkvar	_aexp @ sp[(-13)+11]
 15127  011EA2  0EFE               	movlw	-2
 15128  011EA4  80E3               	bsf	plusw1,0,c
 15129  011EA6                     l10014:
 15130                           
 15131                           ;stkvar	_aexp @ sp[(-13)+11]
 15132  011EA6  0EFE               	movlw	-2
 15133  011EA8  50E3               	movf	plusw1,w,c
 15134  011EAA  B4D8               	btfsc	status,2,c
 15135  011EAC  D01F               	goto	l10022
 15136                           
 15137                           ;stkvar	_aexp @ sp[(-13)+11]
 15138  011EAE  0EFE               	movlw	-2
 15139  011EB0  28E3               	incf	plusw1,w,c
 15140  011EB2  A4D8               	btfss	status,2,c
 15141  011EB4  D018               	goto	l10020
 15142  011EB6  0E00               	movlw	0
 15143  011EB8  6E3A               	movwf	(btemp+8)^0,c
 15144  011EBA  0E00               	movlw	0
 15145  011EBC  6E3B               	movwf	(btemp+9)^0,c
 15146  011EBE  0E00               	movlw	0
 15147  011EC0  6E3C               	movwf	(btemp+10)^0,c
 15148  011EC2  0E00               	movlw	0
 15149  011EC4  6E3D               	movwf	(btemp+11)^0,c
 15150                           
 15151                           ;stkvar	_a @ sp[(-13)+-8]
 15152  011EC6  0EEB               	movlw	-21
 15153  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15154  011ECE  0EEC               	movlw	-20
 15155  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15156  011ED6  0EED               	movlw	-19
 15157  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15158  011EDE  0EEE               	movlw	-18
 15159  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15160  011EE6                     l10020:
 15161                           
 15162                           ;stkvar	_a @ sp[(-13)+-8]
 15163  011EE6  0EED               	movlw	-19
 15164  011EE8  8EE3               	bsf	plusw1,7,c
 15165  011EEA  D018               	goto	l10024
 15166  011EEC                     l10022:
 15167  011EEC  0E00               	movlw	0
 15168  011EEE  6E3A               	movwf	(btemp+8)^0,c
 15169  011EF0  0E00               	movlw	0
 15170  011EF2  6E3B               	movwf	(btemp+9)^0,c
 15171  011EF4  0E00               	movlw	0
 15172  011EF6  6E3C               	movwf	(btemp+10)^0,c
 15173  011EF8  0E00               	movlw	0
 15174  011EFA  6E3D               	movwf	(btemp+11)^0,c
 15175                           
 15176                           ;stkvar	_a @ sp[(-13)+-8]
 15177  011EFC  0EEB               	movlw	-21
 15178  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15179  011F04  0EEC               	movlw	-20
 15180  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15181  011F0C  0EED               	movlw	-19
 15182  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15183  011F14  0EEE               	movlw	-18
 15184  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15185  011F1C                     l10024:
 15186                           
 15187                           ;stkvar	_aexp @ sp[(-13)+11]
 15188  011F1C  0EFE               	movlw	-2
 15189  011F1E  50E3               	movf	plusw1,w,c
 15190  011F20  B4D8               	btfsc	status,2,c
 15191  011F22  D004               	goto	u10210
 15192                           
 15193                           ;stkvar	_bexp @ sp[(-13)+10]
 15194  011F24  0EFD               	movlw	-3
 15195  011F26  50E3               	movf	plusw1,w,c
 15196  011F28  A4D8               	btfss	status,2,c
 15197  011F2A  D009               	goto	l10032
 15198  011F2C                     u10210:
 15199  011F2C  0E00               	movlw	0
 15200  011F2E  6E32               	movwf	btemp^0,c
 15201  011F30  0E00               	movlw	0
 15202  011F32  6E33               	movwf	(btemp+1)^0,c
 15203  011F34  0E00               	movlw	0
 15204  011F36  6E34               	movwf	(btemp+2)^0,c
 15205  011F38  0E00               	movlw	0
 15206  011F3A  6E35               	movwf	(btemp+3)^0,c
 15207  011F3C  D332               	goto	l2667
 15208  011F3E                     l10032:
 15209                           
 15210                           ;stkvar	_b @ sp[(-13)+-4]
 15211  011F3E  0EEF               	movlw	-17
 15212  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 15213                           
 15214                           ;stkvar	_a @ sp[(-13)+-8]
 15215  011F46  0EED               	movlw	237
 15216  011F48  24E1               	addwf	fsr1l,w,c
 15217  011F4A  6ED9               	movwf	fsr2l,c
 15218  011F4C  0EFF               	movlw	255
 15219  011F4E  20E2               	addwfc	fsr1h,w,c
 15220  011F50  6EDA               	movwf	fsr2h,c
 15221  011F52  50DF               	movf	indf2,w,c
 15222  011F54  023D               	mulwf	(btemp+11)^0,c
 15223                           
 15224                           ;stkvar	_temp @ sp[(-13)+8]
 15225  011F56  0EFB               	movlw	-5
 15226  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 15227  011F5E  0EFC               	movlw	-4
 15228  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 15229                           
 15230                           ;stkvar	_temp @ sp[(-13)+8]
 15231  011F66  0EFB               	movlw	-5
 15232  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 15233  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15234  011F74  6A37               	clrf	(btemp+5)^0,c
 15235  011F76  6A38               	clrf	(btemp+6)^0,c
 15236  011F78  6A39               	clrf	(btemp+7)^0,c
 15237                           
 15238                           ;stkvar	_grs @ sp[(-13)+4]
 15239  011F7A  0EF7               	movlw	-9
 15240  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15241  011F82  0EF8               	movlw	-8
 15242  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15243  011F8A  0EF9               	movlw	-7
 15244  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15245  011F92  0EFA               	movlw	-6
 15246  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15247                           
 15248                           ;stkvar	_temp @ sp[(-13)+8]
 15249  011F9A  0EFC               	movlw	252
 15250  011F9C  24E1               	addwf	fsr1l,w,c
 15251  011F9E  6ED9               	movwf	fsr2l,c
 15252  011FA0  0EFF               	movlw	255
 15253  011FA2  20E2               	addwfc	fsr1h,w,c
 15254  011FA4  6EDA               	movwf	fsr2h,c
 15255  011FA6  50DF               	movf	indf2,w,c
 15256  011FA8  6E3D               	movwf	(btemp+11)^0,c
 15257  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15258  011FB0  6A37               	clrf	(btemp+5)^0,c
 15259  011FB2  6A38               	clrf	(btemp+6)^0,c
 15260  011FB4  6A39               	clrf	(btemp+7)^0,c
 15261                           
 15262                           ;stkvar	_prod @ sp[(-13)+0]
 15263  011FB6  0EF3               	movlw	-13
 15264  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15265  011FBE  0EF4               	movlw	-12
 15266  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15267  011FC6  0EF5               	movlw	-11
 15268  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15269  011FCE  0EF6               	movlw	-10
 15270  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15271                           
 15272                           ;stkvar	_b @ sp[(-13)+-4]
 15273  011FD6  0EF0               	movlw	240
 15274  011FD8  24E1               	addwf	fsr1l,w,c
 15275  011FDA  6ED9               	movwf	fsr2l,c
 15276  011FDC  0EFF               	movlw	255
 15277  011FDE  20E2               	addwfc	fsr1h,w,c
 15278  011FE0  6EDA               	movwf	fsr2h,c
 15279  011FE2  50DF               	movf	indf2,w,c
 15280  011FE4  6E3D               	movwf	(btemp+11)^0,c
 15281                           
 15282                           ;stkvar	_a @ sp[(-13)+-8]
 15283  011FE6  0EEC               	movlw	236
 15284  011FE8  24E1               	addwf	fsr1l,w,c
 15285  011FEA  6ED9               	movwf	fsr2l,c
 15286  011FEC  0EFF               	movlw	255
 15287  011FEE  20E2               	addwfc	fsr1h,w,c
 15288  011FF0  6EDA               	movwf	fsr2h,c
 15289  011FF2  50DF               	movf	indf2,w,c
 15290  011FF4  023D               	mulwf	(btemp+11)^0,c
 15291                           
 15292                           ;stkvar	_temp @ sp[(-13)+8]
 15293  011FF6  0EFB               	movlw	-5
 15294  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 15295  011FFE  0EFC               	movlw	-4
 15296  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 15297                           
 15298                           ;stkvar	_grs @ sp[(-13)+4]
 15299  012006  50E1               	movf	fsr1l,w,c
 15300  012008  0FF7               	addlw	-9
 15301  01200A  6ED9               	movwf	fsr2l,c
 15302  01200C  50E2               	movf	fsr1h,w,c
 15303  01200E  6EDA               	movwf	fsr2h,c
 15304  012010  0EFF               	movlw	255
 15305  012012  22DA               	addwfc	fsr2h,f,c
 15306                           
 15307                           ;stkvar	_temp @ sp[(-13)+8]
 15308  012014  0EFB               	movlw	-5
 15309  012016  50E3               	movf	plusw1,w,c
 15310  012018  26DE               	addwf	postinc2,f,c
 15311  01201A  0E00               	movlw	0
 15312  01201C  22DE               	addwfc	postinc2,f,c
 15313  01201E  22DE               	addwfc	postinc2,f,c
 15314  012020  22DE               	addwfc	postinc2,f,c
 15315                           
 15316                           ;stkvar	_prod @ sp[(-13)+0]
 15317  012022  50E1               	movf	fsr1l,w,c
 15318  012024  0FF3               	addlw	-13
 15319  012026  6ED9               	movwf	fsr2l,c
 15320  012028  50E2               	movf	fsr1h,w,c
 15321  01202A  6EDA               	movwf	fsr2h,c
 15322  01202C  0EFF               	movlw	255
 15323  01202E  22DA               	addwfc	fsr2h,f,c
 15324                           
 15325                           ;stkvar	_temp @ sp[(-13)+8]
 15326  012030  0EFC               	movlw	252
 15327  012032  24E1               	addwf	fsr1l,w,c
 15328  012034  6EE9               	movwf	fsr0l,c
 15329  012036  0EFF               	movlw	255
 15330  012038  20E2               	addwfc	fsr1h,w,c
 15331  01203A  6EEA               	movwf	fsr0h,c
 15332  01203C  50EF               	movf	indf0,w,c
 15333  01203E  26DE               	addwf	postinc2,f,c
 15334  012040  0E00               	movlw	0
 15335  012042  22DE               	addwfc	postinc2,f,c
 15336  012044  22DE               	addwfc	postinc2,f,c
 15337  012046  22DE               	addwfc	postinc2,f,c
 15338                           
 15339                           ;stkvar	_b @ sp[(-13)+-4]
 15340  012048  0EF1               	movlw	241
 15341  01204A  24E1               	addwf	fsr1l,w,c
 15342  01204C  6ED9               	movwf	fsr2l,c
 15343  01204E  0EFF               	movlw	255
 15344  012050  20E2               	addwfc	fsr1h,w,c
 15345  012052  6EDA               	movwf	fsr2h,c
 15346  012054  50DF               	movf	indf2,w,c
 15347  012056  6E3D               	movwf	(btemp+11)^0,c
 15348                           
 15349                           ;stkvar	_a @ sp[(-13)+-8]
 15350  012058  0EEB               	movlw	-21
 15351  01205A  50E3               	movf	plusw1,w,c
 15352  01205C  023D               	mulwf	(btemp+11)^0,c
 15353                           
 15354                           ;stkvar	_temp @ sp[(-13)+8]
 15355  01205E  0EFB               	movlw	-5
 15356  012060  006F FFCF FFE3     	movff	prodl,plusw1
 15357  012066  0EFC               	movlw	-4
 15358  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 15359                           
 15360                           ;stkvar	_grs @ sp[(-13)+4]
 15361  01206E  50E1               	movf	fsr1l,w,c
 15362  012070  0FF7               	addlw	-9
 15363  012072  6ED9               	movwf	fsr2l,c
 15364  012074  50E2               	movf	fsr1h,w,c
 15365  012076  6EDA               	movwf	fsr2h,c
 15366  012078  0EFF               	movlw	255
 15367  01207A  22DA               	addwfc	fsr2h,f,c
 15368                           
 15369                           ;stkvar	_temp @ sp[(-13)+8]
 15370  01207C  0EFB               	movlw	-5
 15371  01207E  50E3               	movf	plusw1,w,c
 15372  012080  26DE               	addwf	postinc2,f,c
 15373  012082  0E00               	movlw	0
 15374  012084  22DE               	addwfc	postinc2,f,c
 15375  012086  22DE               	addwfc	postinc2,f,c
 15376  012088  22DE               	addwfc	postinc2,f,c
 15377                           
 15378                           ;stkvar	_prod @ sp[(-13)+0]
 15379  01208A  50E1               	movf	fsr1l,w,c
 15380  01208C  0FF3               	addlw	-13
 15381  01208E  6ED9               	movwf	fsr2l,c
 15382  012090  50E2               	movf	fsr1h,w,c
 15383  012092  6EDA               	movwf	fsr2h,c
 15384  012094  0EFF               	movlw	255
 15385  012096  22DA               	addwfc	fsr2h,f,c
 15386                           
 15387                           ;stkvar	_temp @ sp[(-13)+8]
 15388  012098  0EFC               	movlw	252
 15389  01209A  24E1               	addwf	fsr1l,w,c
 15390  01209C  6EE9               	movwf	fsr0l,c
 15391  01209E  0EFF               	movlw	255
 15392  0120A0  20E2               	addwfc	fsr1h,w,c
 15393  0120A2  6EEA               	movwf	fsr0h,c
 15394  0120A4  50EF               	movf	indf0,w,c
 15395  0120A6  26DE               	addwf	postinc2,f,c
 15396  0120A8  0E00               	movlw	0
 15397  0120AA  22DE               	addwfc	postinc2,f,c
 15398  0120AC  22DE               	addwfc	postinc2,f,c
 15399  0120AE  22DE               	addwfc	postinc2,f,c
 15400                           
 15401                           ;stkvar	_grs @ sp[(-13)+4]
 15402  0120B0  50E1               	movf	fsr1l,w,c
 15403  0120B2  0FF7               	addlw	-9
 15404  0120B4  6ED9               	movwf	fsr2l,c
 15405  0120B6  50E2               	movf	fsr1h,w,c
 15406  0120B8  6EDA               	movwf	fsr2h,c
 15407  0120BA  0EFF               	movlw	255
 15408  0120BC  22DA               	addwfc	fsr2h,f,c
 15409  0120BE  0E08               	movlw	8
 15410  0120C0                     u10225:
 15411  0120C0  90D8               	bcf	status,0,c
 15412  0120C2  36DE               	rlcf	postinc2,f,c
 15413  0120C4  36DE               	rlcf	postinc2,f,c
 15414  0120C6  36DE               	rlcf	postinc2,f,c
 15415  0120C8  36DD               	rlcf	postdec2,f,c
 15416  0120CA  52DD               	movf	postdec2,f,c
 15417  0120CC  52DD               	movf	postdec2,f,c
 15418  0120CE  2EE8               	decfsz	wreg,f,c
 15419  0120D0  D7F7               	goto	u10225
 15420                           
 15421                           ;stkvar	_b @ sp[(-13)+-4]
 15422  0120D2  0EF0               	movlw	240
 15423  0120D4  24E1               	addwf	fsr1l,w,c
 15424  0120D6  6ED9               	movwf	fsr2l,c
 15425  0120D8  0EFF               	movlw	255
 15426  0120DA  20E2               	addwfc	fsr1h,w,c
 15427  0120DC  6EDA               	movwf	fsr2h,c
 15428  0120DE  50DF               	movf	indf2,w,c
 15429  0120E0  6E3D               	movwf	(btemp+11)^0,c
 15430                           
 15431                           ;stkvar	_a @ sp[(-13)+-8]
 15432  0120E2  0EEB               	movlw	-21
 15433  0120E4  50E3               	movf	plusw1,w,c
 15434  0120E6  023D               	mulwf	(btemp+11)^0,c
 15435                           
 15436                           ;stkvar	_temp @ sp[(-13)+8]
 15437  0120E8  0EFB               	movlw	-5
 15438  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 15439  0120F0  0EFC               	movlw	-4
 15440  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 15441                           
 15442                           ;stkvar	_temp @ sp[(-13)+8]
 15443  0120F8  0EFB               	movlw	-5
 15444  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15445  012100  0EFC               	movlw	-4
 15446  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 15447                           
 15448                           ;stkvar	_grs @ sp[(-13)+4]
 15449  012108  50E1               	movf	fsr1l,w,c
 15450  01210A  0FF7               	addlw	-9
 15451  01210C  6ED9               	movwf	fsr2l,c
 15452  01210E  50E2               	movf	fsr1h,w,c
 15453  012110  6EDA               	movwf	fsr2h,c
 15454  012112  0EFF               	movlw	255
 15455  012114  22DA               	addwfc	fsr2h,f,c
 15456  012116  503C               	movf	(btemp+10)^0,w,c
 15457  012118  26DE               	addwf	postinc2,f,c
 15458  01211A  503D               	movf	(btemp+11)^0,w,c
 15459  01211C  22DE               	addwfc	postinc2,f,c
 15460  01211E  0E00               	movlw	0
 15461  012120  22DE               	addwfc	postinc2,f,c
 15462  012122  22DE               	addwfc	postinc2,f,c
 15463                           
 15464                           ;stkvar	_b @ sp[(-13)+-4]
 15465  012124  0EEF               	movlw	-17
 15466  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 15467                           
 15468                           ;stkvar	_a @ sp[(-13)+-8]
 15469  01212C  0EEC               	movlw	236
 15470  01212E  24E1               	addwf	fsr1l,w,c
 15471  012130  6ED9               	movwf	fsr2l,c
 15472  012132  0EFF               	movlw	255
 15473  012134  20E2               	addwfc	fsr1h,w,c
 15474  012136  6EDA               	movwf	fsr2h,c
 15475  012138  50DF               	movf	indf2,w,c
 15476  01213A  023D               	mulwf	(btemp+11)^0,c
 15477                           
 15478                           ;stkvar	_temp @ sp[(-13)+8]
 15479  01213C  0EFB               	movlw	-5
 15480  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 15481  012144  0EFC               	movlw	-4
 15482  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 15483                           
 15484                           ;stkvar	_temp @ sp[(-13)+8]
 15485  01214C  0EFB               	movlw	-5
 15486  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15487  012154  0EFC               	movlw	-4
 15488  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 15489                           
 15490                           ;stkvar	_grs @ sp[(-13)+4]
 15491  01215C  50E1               	movf	fsr1l,w,c
 15492  01215E  0FF7               	addlw	-9
 15493  012160  6ED9               	movwf	fsr2l,c
 15494  012162  50E2               	movf	fsr1h,w,c
 15495  012164  6EDA               	movwf	fsr2h,c
 15496  012166  0EFF               	movlw	255
 15497  012168  22DA               	addwfc	fsr2h,f,c
 15498  01216A  503C               	movf	(btemp+10)^0,w,c
 15499  01216C  26DE               	addwf	postinc2,f,c
 15500  01216E  503D               	movf	(btemp+11)^0,w,c
 15501  012170  22DE               	addwfc	postinc2,f,c
 15502  012172  0E00               	movlw	0
 15503  012174  22DE               	addwfc	postinc2,f,c
 15504  012176  22DE               	addwfc	postinc2,f,c
 15505                           
 15506                           ;stkvar	_grs @ sp[(-13)+4]
 15507  012178  50E1               	movf	fsr1l,w,c
 15508  01217A  0FF7               	addlw	-9
 15509  01217C  6ED9               	movwf	fsr2l,c
 15510  01217E  50E2               	movf	fsr1h,w,c
 15511  012180  6EDA               	movwf	fsr2h,c
 15512  012182  0EFF               	movlw	255
 15513  012184  22DA               	addwfc	fsr2h,f,c
 15514  012186  0E08               	movlw	8
 15515  012188                     u10235:
 15516  012188  90D8               	bcf	status,0,c
 15517  01218A  36DE               	rlcf	postinc2,f,c
 15518  01218C  36DE               	rlcf	postinc2,f,c
 15519  01218E  36DE               	rlcf	postinc2,f,c
 15520  012190  36DD               	rlcf	postdec2,f,c
 15521  012192  52DD               	movf	postdec2,f,c
 15522  012194  52DD               	movf	postdec2,f,c
 15523  012196  2EE8               	decfsz	wreg,f,c
 15524  012198  D7F7               	goto	u10235
 15525                           
 15526                           ;stkvar	_b @ sp[(-13)+-4]
 15527  01219A  0EEF               	movlw	-17
 15528  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15529                           
 15530                           ;stkvar	_a @ sp[(-13)+-8]
 15531  0121A2  0EEB               	movlw	-21
 15532  0121A4  50E3               	movf	plusw1,w,c
 15533  0121A6  023D               	mulwf	(btemp+11)^0,c
 15534                           
 15535                           ;stkvar	_temp @ sp[(-13)+8]
 15536  0121A8  0EFB               	movlw	-5
 15537  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15538  0121B0  0EFC               	movlw	-4
 15539  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15540                           
 15541                           ;stkvar	_temp @ sp[(-13)+8]
 15542  0121B8  0EFB               	movlw	-5
 15543  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15544  0121C0  0EFC               	movlw	-4
 15545  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 15546                           
 15547                           ;stkvar	_grs @ sp[(-13)+4]
 15548  0121C8  50E1               	movf	fsr1l,w,c
 15549  0121CA  0FF7               	addlw	-9
 15550  0121CC  6ED9               	movwf	fsr2l,c
 15551  0121CE  50E2               	movf	fsr1h,w,c
 15552  0121D0  6EDA               	movwf	fsr2h,c
 15553  0121D2  0EFF               	movlw	255
 15554  0121D4  22DA               	addwfc	fsr2h,f,c
 15555  0121D6  503C               	movf	(btemp+10)^0,w,c
 15556  0121D8  26DE               	addwf	postinc2,f,c
 15557  0121DA  503D               	movf	(btemp+11)^0,w,c
 15558  0121DC  22DE               	addwfc	postinc2,f,c
 15559  0121DE  0E00               	movlw	0
 15560  0121E0  22DE               	addwfc	postinc2,f,c
 15561  0121E2  22DE               	addwfc	postinc2,f,c
 15562                           
 15563                           ;stkvar	_b @ sp[(-13)+-4]
 15564  0121E4  0EF0               	movlw	240
 15565  0121E6  24E1               	addwf	fsr1l,w,c
 15566  0121E8  6ED9               	movwf	fsr2l,c
 15567  0121EA  0EFF               	movlw	255
 15568  0121EC  20E2               	addwfc	fsr1h,w,c
 15569  0121EE  6EDA               	movwf	fsr2h,c
 15570  0121F0  50DF               	movf	indf2,w,c
 15571  0121F2  6E3D               	movwf	(btemp+11)^0,c
 15572                           
 15573                           ;stkvar	_a @ sp[(-13)+-8]
 15574  0121F4  0EED               	movlw	237
 15575  0121F6  24E1               	addwf	fsr1l,w,c
 15576  0121F8  6ED9               	movwf	fsr2l,c
 15577  0121FA  0EFF               	movlw	255
 15578  0121FC  20E2               	addwfc	fsr1h,w,c
 15579  0121FE  6EDA               	movwf	fsr2h,c
 15580  012200  50DF               	movf	indf2,w,c
 15581  012202  023D               	mulwf	(btemp+11)^0,c
 15582                           
 15583                           ;stkvar	_temp @ sp[(-13)+8]
 15584  012204  0EFB               	movlw	-5
 15585  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15586  01220C  0EFC               	movlw	-4
 15587  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15588                           
 15589                           ;stkvar	_temp @ sp[(-13)+8]
 15590  012214  0EFB               	movlw	-5
 15591  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 15592  01221C  0EFC               	movlw	-4
 15593  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15594                           
 15595                           ;stkvar	_prod @ sp[(-13)+0]
 15596  012224  50E1               	movf	fsr1l,w,c
 15597  012226  0FF3               	addlw	-13
 15598  012228  6ED9               	movwf	fsr2l,c
 15599  01222A  50E2               	movf	fsr1h,w,c
 15600  01222C  6EDA               	movwf	fsr2h,c
 15601  01222E  0EFF               	movlw	255
 15602  012230  22DA               	addwfc	fsr2h,f,c
 15603  012232  503C               	movf	(btemp+10)^0,w,c
 15604  012234  26DE               	addwf	postinc2,f,c
 15605  012236  503D               	movf	(btemp+11)^0,w,c
 15606  012238  22DE               	addwfc	postinc2,f,c
 15607  01223A  0E00               	movlw	0
 15608  01223C  22DE               	addwfc	postinc2,f,c
 15609  01223E  22DE               	addwfc	postinc2,f,c
 15610                           
 15611                           ;stkvar	_b @ sp[(-13)+-4]
 15612  012240  0EF1               	movlw	241
 15613  012242  24E1               	addwf	fsr1l,w,c
 15614  012244  6ED9               	movwf	fsr2l,c
 15615  012246  0EFF               	movlw	255
 15616  012248  20E2               	addwfc	fsr1h,w,c
 15617  01224A  6EDA               	movwf	fsr2h,c
 15618  01224C  50DF               	movf	indf2,w,c
 15619  01224E  6E3D               	movwf	(btemp+11)^0,c
 15620                           
 15621                           ;stkvar	_a @ sp[(-13)+-8]
 15622  012250  0EEC               	movlw	236
 15623  012252  24E1               	addwf	fsr1l,w,c
 15624  012254  6ED9               	movwf	fsr2l,c
 15625  012256  0EFF               	movlw	255
 15626  012258  20E2               	addwfc	fsr1h,w,c
 15627  01225A  6EDA               	movwf	fsr2h,c
 15628  01225C  50DF               	movf	indf2,w,c
 15629  01225E  023D               	mulwf	(btemp+11)^0,c
 15630                           
 15631                           ;stkvar	_temp @ sp[(-13)+8]
 15632  012260  0EFB               	movlw	-5
 15633  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15634  012268  0EFC               	movlw	-4
 15635  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15636                           
 15637                           ;stkvar	_temp @ sp[(-13)+8]
 15638  012270  0EFB               	movlw	-5
 15639  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 15640  012278  0EFC               	movlw	-4
 15641  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15642                           
 15643                           ;stkvar	_prod @ sp[(-13)+0]
 15644  012280  50E1               	movf	fsr1l,w,c
 15645  012282  0FF3               	addlw	-13
 15646  012284  6ED9               	movwf	fsr2l,c
 15647  012286  50E2               	movf	fsr1h,w,c
 15648  012288  6EDA               	movwf	fsr2h,c
 15649  01228A  0EFF               	movlw	255
 15650  01228C  22DA               	addwfc	fsr2h,f,c
 15651  01228E  503C               	movf	(btemp+10)^0,w,c
 15652  012290  26DE               	addwf	postinc2,f,c
 15653  012292  503D               	movf	(btemp+11)^0,w,c
 15654  012294  22DE               	addwfc	postinc2,f,c
 15655  012296  0E00               	movlw	0
 15656  012298  22DE               	addwfc	postinc2,f,c
 15657  01229A  22DE               	addwfc	postinc2,f,c
 15658                           
 15659                           ;stkvar	_b @ sp[(-13)+-4]
 15660  01229C  0EF1               	movlw	241
 15661  01229E  24E1               	addwf	fsr1l,w,c
 15662  0122A0  6ED9               	movwf	fsr2l,c
 15663  0122A2  0EFF               	movlw	255
 15664  0122A4  20E2               	addwfc	fsr1h,w,c
 15665  0122A6  6EDA               	movwf	fsr2h,c
 15666  0122A8  50DF               	movf	indf2,w,c
 15667  0122AA  6E3D               	movwf	(btemp+11)^0,c
 15668                           
 15669                           ;stkvar	_a @ sp[(-13)+-8]
 15670  0122AC  0EED               	movlw	237
 15671  0122AE  24E1               	addwf	fsr1l,w,c
 15672  0122B0  6ED9               	movwf	fsr2l,c
 15673  0122B2  0EFF               	movlw	255
 15674  0122B4  20E2               	addwfc	fsr1h,w,c
 15675  0122B6  6EDA               	movwf	fsr2h,c
 15676  0122B8  50DF               	movf	indf2,w,c
 15677  0122BA  023D               	mulwf	(btemp+11)^0,c
 15678                           
 15679                           ;stkvar	_temp @ sp[(-13)+8]
 15680  0122BC  0EFB               	movlw	-5
 15681  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15682  0122C4  0EFC               	movlw	-4
 15683  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15684                           
 15685                           ;stkvar	_temp @ sp[(-13)+8]
 15686  0122CC  0EFB               	movlw	-5
 15687  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15688  0122D4  0EFC               	movlw	-4
 15689  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15690  0122DC  503C               	movf	(btemp+10)^0,w,c
 15691  0122DE  6E36               	movwf	(btemp+4)^0,c
 15692  0122E0  503D               	movf	(btemp+11)^0,w,c
 15693  0122E2  6E37               	movwf	(btemp+5)^0,c
 15694  0122E4  6A38               	clrf	(btemp+6)^0,c
 15695  0122E6  6A39               	clrf	(btemp+7)^0,c
 15696  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 15697  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 15698  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 15699  0122FA  6A36               	clrf	(btemp+4)^0,c
 15700                           
 15701                           ;stkvar	_prod @ sp[(-13)+0]
 15702  0122FC  50E1               	movf	fsr1l,w,c
 15703  0122FE  0FF3               	addlw	-13
 15704  012300  6ED9               	movwf	fsr2l,c
 15705  012302  50E2               	movf	fsr1h,w,c
 15706  012304  6EDA               	movwf	fsr2h,c
 15707  012306  0EFF               	movlw	255
 15708  012308  22DA               	addwfc	fsr2h,f,c
 15709  01230A  5036               	movf	(btemp+4)^0,w,c
 15710  01230C  26DE               	addwf	postinc2,f,c
 15711  01230E  5037               	movf	(btemp+5)^0,w,c
 15712  012310  22DE               	addwfc	postinc2,f,c
 15713  012312  5038               	movf	(btemp+6)^0,w,c
 15714  012314  22DE               	addwfc	postinc2,f,c
 15715  012316  5039               	movf	(btemp+7)^0,w,c
 15716  012318  22DE               	addwfc	postinc2,f,c
 15717                           
 15718                           ;stkvar	_prod @ sp[(-13)+0]
 15719  01231A  50E1               	movf	fsr1l,w,c
 15720  01231C  0FF3               	addlw	-13
 15721  01231E  6ED9               	movwf	fsr2l,c
 15722  012320  50E2               	movf	fsr1h,w,c
 15723  012322  6EDA               	movwf	fsr2h,c
 15724  012324  0EFF               	movlw	255
 15725  012326  22DA               	addwfc	fsr2h,f,c
 15726                           
 15727                           ;stkvar	_grs @ sp[(-13)+4]
 15728  012328  0EFA               	movlw	250
 15729  01232A  24E1               	addwf	fsr1l,w,c
 15730  01232C  6EE9               	movwf	fsr0l,c
 15731  01232E  0EFF               	movlw	255
 15732  012330  20E2               	addwfc	fsr1h,w,c
 15733  012332  6EEA               	movwf	fsr0h,c
 15734  012334  50EF               	movf	indf0,w,c
 15735  012336  26DE               	addwf	postinc2,f,c
 15736  012338  0E00               	movlw	0
 15737  01233A  22DE               	addwfc	postinc2,f,c
 15738  01233C  22DE               	addwfc	postinc2,f,c
 15739  01233E  22DE               	addwfc	postinc2,f,c
 15740                           
 15741                           ;stkvar	_grs @ sp[(-13)+4]
 15742  012340  50E1               	movf	fsr1l,w,c
 15743  012342  0FF7               	addlw	-9
 15744  012344  6ED9               	movwf	fsr2l,c
 15745  012346  50E2               	movf	fsr1h,w,c
 15746  012348  6EDA               	movwf	fsr2h,c
 15747  01234A  0EFF               	movlw	255
 15748  01234C  22DA               	addwfc	fsr2h,f,c
 15749  01234E  0E08               	movlw	8
 15750  012350                     u10245:
 15751  012350  90D8               	bcf	status,0,c
 15752  012352  36DE               	rlcf	postinc2,f,c
 15753  012354  36DE               	rlcf	postinc2,f,c
 15754  012356  36DE               	rlcf	postinc2,f,c
 15755  012358  36DD               	rlcf	postdec2,f,c
 15756  01235A  52DD               	movf	postdec2,f,c
 15757  01235C  52DD               	movf	postdec2,f,c
 15758  01235E  2EE8               	decfsz	wreg,f,c
 15759  012360  D7F7               	goto	u10245
 15760  012362  0E82               	movlw	130
 15761  012364  6E3C               	movwf	(btemp+10)^0,c
 15762  012366  0EFF               	movlw	255
 15763  012368  6E3D               	movwf	(btemp+11)^0,c
 15764                           
 15765                           ;stkvar	_bexp @ sp[(-13)+10]
 15766  01236A  0EFD               	movlw	-3
 15767  01236C  50E3               	movf	plusw1,w,c
 15768  01236E  6E3A               	movwf	(btemp+8)^0,c
 15769  012370  6A3B               	clrf	(btemp+9)^0,c
 15770                           
 15771                           ;stkvar	_aexp @ sp[(-13)+11]
 15772  012372  0EFE               	movlw	-2
 15773  012374  50E3               	movf	plusw1,w,c
 15774  012376  263A               	addwf	(btemp+8)^0,f,c
 15775  012378  0E00               	movlw	0
 15776  01237A  223B               	addwfc	(btemp+9)^0,f,c
 15777  01237C  503C               	movf	(btemp+10)^0,w,c
 15778  01237E  263A               	addwf	(btemp+8)^0,f,c
 15779  012380  503D               	movf	(btemp+11)^0,w,c
 15780  012382  223B               	addwfc	(btemp+9)^0,f,c
 15781                           
 15782                           ;stkvar	_temp @ sp[(-13)+8]
 15783  012384  0EFB               	movlw	-5
 15784  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15785  01238C  0EFC               	movlw	-4
 15786  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15787  012394  D021               	goto	l10094
 15788  012396                     l10084:
 15789                           
 15790                           ;stkvar	_prod @ sp[(-13)+0]
 15791  012396  90D8               	bcf	status,0,c
 15792  012398  0EF3               	movlw	-13
 15793  01239A  36E3               	rlcf	plusw1,f,c
 15794  01239C  0EF4               	movlw	-12
 15795  01239E  36E3               	rlcf	plusw1,f,c
 15796  0123A0  0EF5               	movlw	-11
 15797  0123A2  36E3               	rlcf	plusw1,f,c
 15798  0123A4  0EF6               	movlw	-10
 15799  0123A6  36E3               	rlcf	plusw1,f,c
 15800                           
 15801                           ;stkvar	_grs @ sp[(-13)+4]
 15802  0123A8  0EFA               	movlw	-6
 15803  0123AA  AEE3               	btfss	plusw1,7,c
 15804  0123AC  D002               	goto	l10090
 15805                           
 15806                           ;stkvar	_prod @ sp[(-13)+0]
 15807  0123AE  0EF3               	movlw	-13
 15808  0123B0  80E3               	bsf	plusw1,0,c
 15809  0123B2                     l10090:
 15810                           
 15811                           ;stkvar	_grs @ sp[(-13)+4]
 15812  0123B2  90D8               	bcf	status,0,c
 15813  0123B4  0EF7               	movlw	-9
 15814  0123B6  36E3               	rlcf	plusw1,f,c
 15815  0123B8  0EF8               	movlw	-8
 15816  0123BA  36E3               	rlcf	plusw1,f,c
 15817  0123BC  0EF9               	movlw	-7
 15818  0123BE  36E3               	rlcf	plusw1,f,c
 15819  0123C0  0EFA               	movlw	-6
 15820  0123C2  36E3               	rlcf	plusw1,f,c
 15821                           
 15822                           ;stkvar	_temp @ sp[(-13)+8]
 15823  0123C4  50E1               	movf	fsr1l,w,c
 15824  0123C6  0FFB               	addlw	-5
 15825  0123C8  6ED9               	movwf	fsr2l,c
 15826  0123CA  50E2               	movf	fsr1h,w,c
 15827  0123CC  6EDA               	movwf	fsr2h,c
 15828  0123CE  0EFF               	movlw	255
 15829  0123D0  22DA               	addwfc	fsr2h,f,c
 15830  0123D2  06DE               	decf	postinc2,f,c
 15831  0123D4  0E00               	movlw	0
 15832  0123D6  5ADD               	subwfb	postdec2,f,c
 15833  0123D8                     l10094:
 15834                           
 15835                           ;stkvar	_prod @ sp[(-13)+0]
 15836  0123D8  0EF5               	movlw	-11
 15837  0123DA  AEE3               	btfss	plusw1,7,c
 15838  0123DC  D7DC               	goto	l10084
 15839                           
 15840                           ;stkvar	_aexp @ sp[(-13)+11]
 15841  0123DE  0EFE               	movlw	-2
 15842  0123E0  6AE3               	clrf	plusw1,c
 15843                           
 15844                           ;stkvar	_grs @ sp[(-13)+4]
 15845  0123E2  0EFA               	movlw	-6
 15846  0123E4  AEE3               	btfss	plusw1,7,c
 15847  0123E6  D020               	goto	l10108
 15848                           
 15849                           ;stkvar	_grs @ sp[(-13)+4]
 15850  0123E8  50E1               	movf	fsr1l,w,c
 15851  0123EA  0FF7               	addlw	-9
 15852  0123EC  6ED9               	movwf	fsr2l,c
 15853  0123EE  50E2               	movf	fsr1h,w,c
 15854  0123F0  6EDA               	movwf	fsr2h,c
 15855  0123F2  0EFF               	movlw	255
 15856  0123F4  22DA               	addwfc	fsr2h,f,c
 15857  0123F6  0EFF               	movlw	255
 15858  0123F8  14DE               	andwf	postinc2,w,c
 15859  0123FA  6E3A               	movwf	(btemp+8)^0,c
 15860  0123FC  0EFF               	movlw	255
 15861  0123FE  14DE               	andwf	postinc2,w,c
 15862  012400  6E3B               	movwf	(btemp+9)^0,c
 15863  012402  0EFF               	movlw	255
 15864  012404  14DE               	andwf	postinc2,w,c
 15865  012406  6E3C               	movwf	(btemp+10)^0,c
 15866  012408  0E7F               	movlw	127
 15867  01240A  14DE               	andwf	postinc2,w,c
 15868  01240C  6E3D               	movwf	(btemp+11)^0,c
 15869  01240E  503A               	movf	(btemp+8)^0,w,c
 15870  012410  103B               	iorwf	(btemp+9)^0,w,c
 15871  012412  103C               	iorwf	(btemp+10)^0,w,c
 15872  012414  103D               	iorwf	(btemp+11)^0,w,c
 15873  012416  B4D8               	btfsc	status,2,c
 15874  012418  D004               	goto	l10104
 15875  01241A                     u10280:
 15876                           
 15877                           ;stkvar	_aexp @ sp[(-13)+11]
 15878  01241A  0EFE               	movlw	-2
 15879  01241C  6AE3               	clrf	plusw1,c
 15880  01241E  2AE3               	incf	plusw1,f,c
 15881  012420  D003               	goto	l10108
 15882  012422                     l10104:
 15883                           
 15884                           ;stkvar	_prod @ sp[(-13)+0]
 15885  012422  0EF3               	movlw	-13
 15886  012424  B0E3               	btfsc	plusw1,0,c
 15887  012426  D7F9               	goto	u10280
 15888  012428                     l10108:
 15889                           
 15890                           ;stkvar	_aexp @ sp[(-13)+11]
 15891  012428  0EFE               	movlw	-2
 15892  01242A  50E3               	movf	plusw1,w,c
 15893  01242C  B4D8               	btfsc	status,2,c
 15894  01242E  D036               	goto	l10118
 15895                           
 15896                           ;stkvar	_prod @ sp[(-13)+0]
 15897  012430  50E1               	movf	fsr1l,w,c
 15898  012432  0FF3               	addlw	-13
 15899  012434  6ED9               	movwf	fsr2l,c
 15900  012436  50E2               	movf	fsr1h,w,c
 15901  012438  6EDA               	movwf	fsr2h,c
 15902  01243A  0EFF               	movlw	255
 15903  01243C  22DA               	addwfc	fsr2h,f,c
 15904  01243E  2ADE               	incf	postinc2,f,c
 15905  012440  0E00               	movlw	0
 15906  012442  22DE               	addwfc	postinc2,f,c
 15907  012444  22DE               	addwfc	postinc2,f,c
 15908  012446  22DE               	addwfc	postinc2,f,c
 15909                           
 15910                           ;stkvar	_prod @ sp[(-13)+0]
 15911  012448  0EF6               	movlw	-10
 15912  01244A  A0E3               	btfss	plusw1,0,c
 15913  01244C  D027               	goto	l10118
 15914  01244E  0E01               	movlw	1
 15915  012450  6E3D               	movwf	(btemp+11)^0,c
 15916                           
 15917                           ;stkvar	_prod @ sp[(-13)+0]
 15918  012452  50E1               	movf	fsr1l,w,c
 15919  012454  0FF3               	addlw	-13
 15920  012456  6ED9               	movwf	fsr2l,c
 15921  012458  50E2               	movf	fsr1h,w,c
 15922  01245A  6EDA               	movwf	fsr2h,c
 15923  01245C  0EFF               	movlw	255
 15924  01245E  22DA               	addwfc	fsr2h,f,c
 15925  012460  283D               	incf	(btemp+11)^0,w,c
 15926  012462  52DE               	movf	postinc2,f,c
 15927  012464  D008               	goto	u10320
 15928  012466                     u10325:
 15929  012466  52DE               	movf	postinc2,f,c
 15930  012468  90D8               	bcf	status,0,c
 15931  01246A  BEDC               	btfsc	preinc2,7,c
 15932  01246C  80D8               	bsf	status,0,c
 15933  01246E  32DD               	rrcf	postdec2,f,c
 15934  012470  32DD               	rrcf	postdec2,f,c
 15935  012472  32DD               	rrcf	postdec2,f,c
 15936  012474  32DE               	rrcf	postinc2,f,c
 15937  012476                     u10320:
 15938  012476  2EE8               	decfsz	wreg,f,c
 15939  012478  D7F6               	goto	u10325
 15940                           
 15941                           ;stkvar	_temp @ sp[(-13)+8]
 15942  01247A  0EFB               	movlw	-5
 15943  01247C  50E3               	movf	plusw1,w,c
 15944  01247E  0F01               	addlw	1
 15945  012480  6E32               	movwf	btemp^0,c
 15946  012482  0EFB               	movlw	-5
 15947  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 15948  01248A  6A32               	clrf	btemp^0,c
 15949  01248C  0EFC               	movlw	-4
 15950  01248E  50E3               	movf	plusw1,w,c
 15951  012490  2032               	addwfc	btemp^0,w,c
 15952  012492  6E32               	movwf	btemp^0,c
 15953  012494  0EFC               	movlw	-4
 15954  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 15955  01249C                     l10118:
 15956                           
 15957                           ;stkvar	_temp @ sp[(-13)+8]
 15958  01249C  0EFC               	movlw	-4
 15959  01249E  BEE3               	btfsc	plusw1,7,c
 15960  0124A0  D020               	goto	l10122
 15961  0124A2  0EFC               	movlw	-4
 15962  0124A4  50E3               	movf	plusw1,w,c
 15963  0124A6  E104               	bnz	u10330
 15964  0124A8  0EFB               	movlw	-5
 15965  0124AA  28E3               	incf	plusw1,w,c
 15966  0124AC  A0D8               	btfss	status,0,c
 15967  0124AE  D019               	goto	l10122
 15968  0124B0                     u10330:
 15969  0124B0  0E00               	movlw	0
 15970  0124B2  6E3A               	movwf	(btemp+8)^0,c
 15971  0124B4  0E00               	movlw	0
 15972  0124B6  6E3B               	movwf	(btemp+9)^0,c
 15973  0124B8  0E80               	movlw	128
 15974  0124BA  6E3C               	movwf	(btemp+10)^0,c
 15975  0124BC  0E7F               	movlw	127
 15976  0124BE  6E3D               	movwf	(btemp+11)^0,c
 15977                           
 15978                           ;stkvar	_prod @ sp[(-13)+0]
 15979  0124C0  0EF3               	movlw	-13
 15980  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15981  0124C8  0EF4               	movlw	-12
 15982  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15983  0124D0  0EF5               	movlw	-11
 15984  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15985  0124D8  0EF6               	movlw	-10
 15986  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15987  0124E0  D044               	goto	l10138
 15988  0124E2                     l10122:
 15989                           
 15990                           ;stkvar	_temp @ sp[(-13)+8]
 15991  0124E2  0EFC               	movlw	-4
 15992  0124E4  BEE3               	btfsc	plusw1,7,c
 15993  0124E6  D007               	goto	u10340
 15994  0124E8  0EFC               	movlw	-4
 15995  0124EA  50E3               	movf	plusw1,w,c
 15996  0124EC  E10F               	bnz	l10128
 15997  0124EE  0EFB               	movlw	-5
 15998  0124F0  04E3               	decf	plusw1,w,c
 15999  0124F2  B0D8               	btfsc	status,0,c
 16000  0124F4  D00B               	goto	l10128
 16001  0124F6                     u10340:
 16002                           
 16003                           ;stkvar	_prod @ sp[(-13)+0]
 16004  0124F6  0EF3               	movlw	-13
 16005  0124F8  6AE3               	clrf	plusw1,c
 16006  0124FA  0EF4               	movlw	-12
 16007  0124FC  6AE3               	clrf	plusw1,c
 16008  0124FE  0EF5               	movlw	-11
 16009  012500  6AE3               	clrf	plusw1,c
 16010  012502  0EF6               	movlw	-10
 16011  012504  6AE3               	clrf	plusw1,c
 16012                           
 16013                           ;stkvar	_sign @ sp[(-13)+12]
 16014  012506  0EFF               	movlw	-1
 16015  012508  6AE3               	clrf	plusw1,c
 16016  01250A  D02F               	goto	l10138
 16017  01250C                     l10128:
 16018                           
 16019                           ;stkvar	_temp @ sp[(-13)+8]
 16020                           ;stkvar	_bexp @ sp[(-13)+10]
 16021  01250C  0EFB               	movlw	-5
 16022  01250E  006F FF8C  F032    	movff	plusw1,btemp
 16023  012514  0EFD               	movlw	-3
 16024  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 16025                           
 16026                           ;stkvar	_prod @ sp[(-13)+0]
 16027  01251C  50E1               	movf	fsr1l,w,c
 16028  01251E  0FF3               	addlw	-13
 16029  012520  6ED9               	movwf	fsr2l,c
 16030  012522  50E2               	movf	fsr1h,w,c
 16031  012524  6EDA               	movwf	fsr2h,c
 16032  012526  0EFF               	movlw	255
 16033  012528  22DA               	addwfc	fsr2h,f,c
 16034  01252A  0EFF               	movlw	255
 16035  01252C  16DE               	andwf	postinc2,f,c
 16036  01252E  0EFF               	movlw	255
 16037  012530  16DE               	andwf	postinc2,f,c
 16038  012532  0E7F               	movlw	127
 16039  012534  16DE               	andwf	postinc2,f,c
 16040  012536  0E00               	movlw	0
 16041  012538  16DE               	andwf	postinc2,f,c
 16042                           
 16043                           ;stkvar	_bexp @ sp[(-13)+10]
 16044  01253A  0EFD               	movlw	-3
 16045  01253C  A0E3               	btfss	plusw1,0,c
 16046  01253E  D008               	goto	l10136
 16047                           
 16048                           ;stkvar	_prod @ sp[(-13)+0]
 16049  012540  0EF5               	movlw	245
 16050  012542  24E1               	addwf	fsr1l,w,c
 16051  012544  6ED9               	movwf	fsr2l,c
 16052  012546  0EFF               	movlw	255
 16053  012548  20E2               	addwfc	fsr1h,w,c
 16054  01254A  6EDA               	movwf	fsr2h,c
 16055  01254C  0E00               	movlw	0
 16056  01254E  8EDB               	bsf	plusw2,7,c
 16057  012550                     l10136:
 16058                           
 16059                           ;stkvar	_prod @ sp[(-13)+0]
 16060  012550  0EF6               	movlw	246
 16061  012552  24E1               	addwf	fsr1l,w,c
 16062  012554  6ED9               	movwf	fsr2l,c
 16063  012556  0EFF               	movlw	255
 16064  012558  20E2               	addwfc	fsr1h,w,c
 16065  01255A  6EDA               	movwf	fsr2h,c
 16066                           
 16067                           ;stkvar	_bexp @ sp[(-13)+10]
 16068  01255C  0EFD               	movlw	-3
 16069  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 16070  012564  90D8               	bcf	status,0,c
 16071  012566  303D               	rrcf	(btemp+11)^0,w,c
 16072  012568  6EDF               	movwf	indf2,c
 16073  01256A                     l10138:
 16074                           
 16075                           ;stkvar	_sign @ sp[(-13)+12]
 16076  01256A  0EFF               	movlw	-1
 16077  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 16078                           
 16079                           ;stkvar	_prod @ sp[(-13)+0]
 16080  012572  0EF6               	movlw	246
 16081  012574  24E1               	addwf	fsr1l,w,c
 16082  012576  6ED9               	movwf	fsr2l,c
 16083  012578  0EFF               	movlw	255
 16084  01257A  20E2               	addwfc	fsr1h,w,c
 16085  01257C  6EDA               	movwf	fsr2h,c
 16086  01257E  503D               	movf	(btemp+11)^0,w,c
 16087  012580  12DF               	iorwf	indf2,f,c
 16088                           
 16089                           ;stkvar	_prod @ sp[(-13)+0]
 16090  012582  0EF3               	movlw	-13
 16091  012584  006F FF8C  F032    	movff	plusw1,btemp
 16092  01258A  0EF4               	movlw	-12
 16093  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 16094  012592  0EF5               	movlw	-11
 16095  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 16096  01259A  0EF6               	movlw	-10
 16097  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 16098  0125A2                     l2667:
 16099                           
 16100                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16101  0125A2  0EEB               	movlw	235
 16102  0125A4  26E1               	addwf	fsr1l,f,c
 16103  0125A6  0EFF               	movlw	255
 16104  0125A8  22E2               	addwfc	fsr1h,f,c
 16105  0125AA  0012               	return		;funcret
 16106  0125AC                     __end_of___flmul:
 16107                           	opt callstack 0
 16108                           
 16109 ;; *************** function ___flge *****************
 16110 ;; Defined at:
 16111 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;  ff1             4  [STACK] unsigned char 
 16114 ;;  ff2             4  [STACK] unsigned char 
 16115 ;; Auto vars:     Size  Location     Type
 16116 ;;		None
 16117 ;; Return value:  Size  Location     Type
 16118 ;;		None               void
 16119 ;; Registers used:
 16120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16121 ;; Tracked objects:
 16122 ;;		On entry : 0/5
 16123 ;;		On exit  : 0/0
 16124 ;;		Unchanged: 0/0
 16125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16130 ;;Total ram usage:        0 bytes
 16131 ;; Hardware stack levels used:    1
 16132 ;; Hardware stack levels required when called:    6
 16133 ;; This function calls:
 16134 ;;		Nothing
 16135 ;; This function is called by:
 16136 ;;		_efgtoa
 16137 ;; This function uses a reentrant model
 16138 ;;
 16139                           
 16140                           	psect	text55
 16141  015FF2                     __ptext55:
 16142                           	opt callstack 0
 16143  015FF2                     ___flge:
 16144                           	opt callstack 17
 16145                           
 16146                           ;stkvar	_ff1 @ sp[(0)+-4]
 16147                           
 16148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16149                           ;incstack = 0
 16150  015FF2  50E1               	movf	fsr1l,w,c
 16151  015FF4  0FFC               	addlw	-4
 16152  015FF6  6ED9               	movwf	fsr2l,c
 16153  015FF8  50E2               	movf	fsr1h,w,c
 16154  015FFA  6EDA               	movwf	fsr2h,c
 16155  015FFC  0EFF               	movlw	255
 16156  015FFE  22DA               	addwfc	fsr2h,f,c
 16157  016000  0E00               	movlw	0
 16158  016002  14DE               	andwf	postinc2,w,c
 16159  016004  6E3A               	movwf	(btemp+8)^0,c
 16160  016006  0E00               	movlw	0
 16161  016008  14DE               	andwf	postinc2,w,c
 16162  01600A  6E3B               	movwf	(btemp+9)^0,c
 16163  01600C  0E80               	movlw	128
 16164  01600E  14DE               	andwf	postinc2,w,c
 16165  016010  6E3C               	movwf	(btemp+10)^0,c
 16166  016012  0E7F               	movlw	127
 16167  016014  14DE               	andwf	postinc2,w,c
 16168  016016  6E3D               	movwf	(btemp+11)^0,c
 16169  016018  503A               	movf	(btemp+8)^0,w,c
 16170  01601A  103B               	iorwf	(btemp+9)^0,w,c
 16171  01601C  103C               	iorwf	(btemp+10)^0,w,c
 16172  01601E  103D               	iorwf	(btemp+11)^0,w,c
 16173  016020  A4D8               	btfss	status,2,c
 16174  016022  D008               	goto	l10254
 16175                           
 16176                           ;stkvar	_ff1 @ sp[(0)+-4]
 16177  016024  0EFC               	movlw	-4
 16178  016026  6AE3               	clrf	plusw1,c
 16179  016028  0EFD               	movlw	-3
 16180  01602A  6AE3               	clrf	plusw1,c
 16181  01602C  0EFE               	movlw	-2
 16182  01602E  6AE3               	clrf	plusw1,c
 16183  016030  0EFF               	movlw	-1
 16184  016032  6AE3               	clrf	plusw1,c
 16185  016034                     l10254:
 16186                           
 16187                           ;stkvar	_ff2 @ sp[(0)+-8]
 16188  016034  50E1               	movf	fsr1l,w,c
 16189  016036  0FF8               	addlw	-8
 16190  016038  6ED9               	movwf	fsr2l,c
 16191  01603A  50E2               	movf	fsr1h,w,c
 16192  01603C  6EDA               	movwf	fsr2h,c
 16193  01603E  0EFF               	movlw	255
 16194  016040  22DA               	addwfc	fsr2h,f,c
 16195  016042  0E00               	movlw	0
 16196  016044  14DE               	andwf	postinc2,w,c
 16197  016046  6E3A               	movwf	(btemp+8)^0,c
 16198  016048  0E00               	movlw	0
 16199  01604A  14DE               	andwf	postinc2,w,c
 16200  01604C  6E3B               	movwf	(btemp+9)^0,c
 16201  01604E  0E80               	movlw	128
 16202  016050  14DE               	andwf	postinc2,w,c
 16203  016052  6E3C               	movwf	(btemp+10)^0,c
 16204  016054  0E7F               	movlw	127
 16205  016056  14DE               	andwf	postinc2,w,c
 16206  016058  6E3D               	movwf	(btemp+11)^0,c
 16207  01605A  503A               	movf	(btemp+8)^0,w,c
 16208  01605C  103B               	iorwf	(btemp+9)^0,w,c
 16209  01605E  103C               	iorwf	(btemp+10)^0,w,c
 16210  016060  103D               	iorwf	(btemp+11)^0,w,c
 16211  016062  A4D8               	btfss	status,2,c
 16212  016064  D008               	goto	l2312
 16213                           
 16214                           ;stkvar	_ff2 @ sp[(0)+-8]
 16215  016066  0EF8               	movlw	-8
 16216  016068  6AE3               	clrf	plusw1,c
 16217  01606A  0EF9               	movlw	-7
 16218  01606C  6AE3               	clrf	plusw1,c
 16219  01606E  0EFA               	movlw	-6
 16220  016070  6AE3               	clrf	plusw1,c
 16221  016072  0EFB               	movlw	-5
 16222  016074  6AE3               	clrf	plusw1,c
 16223  016076                     l2312:
 16224                           
 16225                           ;stkvar	_ff1 @ sp[(0)+-4]
 16226  016076  0EFF               	movlw	-1
 16227  016078  AEE3               	btfss	plusw1,7,c
 16228  01607A  D024               	goto	l10260
 16229                           
 16230                           ;stkvar	_ff1 @ sp[(0)+-4]
 16231  01607C  0E00               	movlw	0
 16232  01607E  6E3A               	movwf	(btemp+8)^0,c
 16233  016080  0E00               	movlw	0
 16234  016082  6E3B               	movwf	(btemp+9)^0,c
 16235  016084  0E00               	movlw	0
 16236  016086  6E3C               	movwf	(btemp+10)^0,c
 16237  016088  0E80               	movlw	128
 16238  01608A  6E3D               	movwf	(btemp+11)^0,c
 16239  01608C  0EFC               	movlw	-4
 16240  01608E  50E3               	movf	plusw1,w,c
 16241  016090  5E3A               	subwf	(btemp+8)^0,f,c
 16242  016092  0EFD               	movlw	-3
 16243  016094  50E3               	movf	plusw1,w,c
 16244  016096  5A3B               	subwfb	(btemp+9)^0,f,c
 16245  016098  0EFE               	movlw	-2
 16246  01609A  50E3               	movf	plusw1,w,c
 16247  01609C  5A3C               	subwfb	(btemp+10)^0,f,c
 16248  01609E  0EFF               	movlw	-1
 16249  0160A0  50E3               	movf	plusw1,w,c
 16250  0160A2  5A3D               	subwfb	(btemp+11)^0,f,c
 16251                           
 16252                           ;stkvar	_ff1 @ sp[(0)+-4]
 16253  0160A4  0EFC               	movlw	-4
 16254  0160A6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16255  0160AC  0EFD               	movlw	-3
 16256  0160AE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16257  0160B4  0EFE               	movlw	-2
 16258  0160B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16259  0160BC  0EFF               	movlw	-1
 16260  0160BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16261  0160C4                     l10260:
 16262                           
 16263                           ;stkvar	_ff2 @ sp[(0)+-8]
 16264  0160C4  0EFB               	movlw	-5
 16265  0160C6  AEE3               	btfss	plusw1,7,c
 16266  0160C8  D024               	goto	l10264
 16267                           
 16268                           ;stkvar	_ff2 @ sp[(0)+-8]
 16269  0160CA  0E00               	movlw	0
 16270  0160CC  6E3A               	movwf	(btemp+8)^0,c
 16271  0160CE  0E00               	movlw	0
 16272  0160D0  6E3B               	movwf	(btemp+9)^0,c
 16273  0160D2  0E00               	movlw	0
 16274  0160D4  6E3C               	movwf	(btemp+10)^0,c
 16275  0160D6  0E80               	movlw	128
 16276  0160D8  6E3D               	movwf	(btemp+11)^0,c
 16277  0160DA  0EF8               	movlw	-8
 16278  0160DC  50E3               	movf	plusw1,w,c
 16279  0160DE  5E3A               	subwf	(btemp+8)^0,f,c
 16280  0160E0  0EF9               	movlw	-7
 16281  0160E2  50E3               	movf	plusw1,w,c
 16282  0160E4  5A3B               	subwfb	(btemp+9)^0,f,c
 16283  0160E6  0EFA               	movlw	-6
 16284  0160E8  50E3               	movf	plusw1,w,c
 16285  0160EA  5A3C               	subwfb	(btemp+10)^0,f,c
 16286  0160EC  0EFB               	movlw	-5
 16287  0160EE  50E3               	movf	plusw1,w,c
 16288  0160F0  5A3D               	subwfb	(btemp+11)^0,f,c
 16289                           
 16290                           ;stkvar	_ff2 @ sp[(0)+-8]
 16291  0160F2  0EF8               	movlw	-8
 16292  0160F4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16293  0160FA  0EF9               	movlw	-7
 16294  0160FC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16295  016102  0EFA               	movlw	-6
 16296  016104  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16297  01610A  0EFB               	movlw	-5
 16298  01610C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16299  016112                     l10264:
 16300                           
 16301                           ;stkvar	_ff1 @ sp[(0)+-4]
 16302  016112  0EFF               	movlw	-1
 16303  016114  7EE3               	btg	plusw1,7,c
 16304                           
 16305                           ;stkvar	_ff2 @ sp[(0)+-8]
 16306  016116  0EFB               	movlw	-5
 16307  016118  7EE3               	btg	plusw1,7,c
 16308                           
 16309                           ;stkvar	_ff2 @ sp[(0)+-8]
 16310                           ;stkvar	_ff1 @ sp[(0)+-4]
 16311  01611A  50E1               	movf	fsr1l,w,c
 16312  01611C  0FFC               	addlw	-4
 16313  01611E  6ED9               	movwf	fsr2l,c
 16314  016120  50E2               	movf	fsr1h,w,c
 16315  016122  6EDA               	movwf	fsr2h,c
 16316  016124  0EFF               	movlw	255
 16317  016126  22DA               	addwfc	fsr2h,f,c
 16318  016128  0EF8               	movlw	-8
 16319  01612A  50E3               	movf	plusw1,w,c
 16320  01612C  5CDE               	subwf	postinc2,w,c
 16321  01612E  0EF9               	movlw	-7
 16322  016130  50E3               	movf	plusw1,w,c
 16323  016132  58DE               	subwfb	postinc2,w,c
 16324  016134  0EFA               	movlw	-6
 16325  016136  50E3               	movf	plusw1,w,c
 16326  016138  58DE               	subwfb	postinc2,w,c
 16327  01613A  0EFB               	movlw	-5
 16328  01613C  50E3               	movf	plusw1,w,c
 16329  01613E  58DE               	subwfb	postinc2,w,c
 16330  016140  B0D8               	btfsc	status,0,c
 16331  016142  D002               	goto	l10272
 16332  016144  9032               	bcf	btemp& (0+255),0,c
 16333  016146  D001               	goto	l2319
 16334  016148                     l10272:
 16335  016148  8032               	bsf	btemp& (0+255),0,c
 16336  01614A                     l2319:
 16337                           
 16338                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16339  01614A  0EF8               	movlw	248
 16340  01614C  26E1               	addwf	fsr1l,f,c
 16341  01614E  0EFF               	movlw	255
 16342  016150  22E2               	addwfc	fsr1h,f,c
 16343  016152  0012               	return		;funcret
 16344  016154                     __end_of___flge:
 16345                           	opt callstack 0
 16346                           
 16347 ;; *************** function ___fleq *****************
 16348 ;; Defined at:
 16349 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16350 ;; Parameters:    Size  Location     Type
 16351 ;;  ff1             4  [STACK] unsigned char 
 16352 ;;  ff2             4  [STACK] unsigned char 
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;		None
 16355 ;; Return value:  Size  Location     Type
 16356 ;;		None               void
 16357 ;; Registers used:
 16358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/5
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16368 ;;Total ram usage:        0 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; Hardware stack levels required when called:    6
 16371 ;; This function calls:
 16372 ;;		Nothing
 16373 ;; This function is called by:
 16374 ;;		_efgtoa
 16375 ;; This function uses a reentrant model
 16376 ;;
 16377                           
 16378                           	psect	text56
 16379  016D32                     __ptext56:
 16380                           	opt callstack 0
 16381  016D32                     ___fleq:
 16382                           	opt callstack 17
 16383                           
 16384                           ;stkvar	_ff1 @ sp[(0)+-4]
 16385                           
 16386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16387                           ;incstack = 0
 16388  016D32  50E1               	movf	fsr1l,w,c
 16389  016D34  0FFC               	addlw	-4
 16390  016D36  6ED9               	movwf	fsr2l,c
 16391  016D38  50E2               	movf	fsr1h,w,c
 16392  016D3A  6EDA               	movwf	fsr2h,c
 16393  016D3C  0EFF               	movlw	255
 16394  016D3E  22DA               	addwfc	fsr2h,f,c
 16395  016D40  0E00               	movlw	0
 16396  016D42  14DE               	andwf	postinc2,w,c
 16397  016D44  6E3A               	movwf	(btemp+8)^0,c
 16398  016D46  0E00               	movlw	0
 16399  016D48  14DE               	andwf	postinc2,w,c
 16400  016D4A  6E3B               	movwf	(btemp+9)^0,c
 16401  016D4C  0E80               	movlw	128
 16402  016D4E  14DE               	andwf	postinc2,w,c
 16403  016D50  6E3C               	movwf	(btemp+10)^0,c
 16404  016D52  0E7F               	movlw	127
 16405  016D54  14DE               	andwf	postinc2,w,c
 16406  016D56  6E3D               	movwf	(btemp+11)^0,c
 16407  016D58  503A               	movf	(btemp+8)^0,w,c
 16408  016D5A  103B               	iorwf	(btemp+9)^0,w,c
 16409  016D5C  103C               	iorwf	(btemp+10)^0,w,c
 16410  016D5E  103D               	iorwf	(btemp+11)^0,w,c
 16411  016D60  A4D8               	btfss	status,2,c
 16412  016D62  D008               	goto	l10238
 16413                           
 16414                           ;stkvar	_ff1 @ sp[(0)+-4]
 16415  016D64  0EFC               	movlw	-4
 16416  016D66  6AE3               	clrf	plusw1,c
 16417  016D68  0EFD               	movlw	-3
 16418  016D6A  6AE3               	clrf	plusw1,c
 16419  016D6C  0EFE               	movlw	-2
 16420  016D6E  6AE3               	clrf	plusw1,c
 16421  016D70  0EFF               	movlw	-1
 16422  016D72  6AE3               	clrf	plusw1,c
 16423  016D74                     l10238:
 16424                           
 16425                           ;stkvar	_ff2 @ sp[(0)+-8]
 16426  016D74  50E1               	movf	fsr1l,w,c
 16427  016D76  0FF8               	addlw	-8
 16428  016D78  6ED9               	movwf	fsr2l,c
 16429  016D7A  50E2               	movf	fsr1h,w,c
 16430  016D7C  6EDA               	movwf	fsr2h,c
 16431  016D7E  0EFF               	movlw	255
 16432  016D80  22DA               	addwfc	fsr2h,f,c
 16433  016D82  0E00               	movlw	0
 16434  016D84  14DE               	andwf	postinc2,w,c
 16435  016D86  6E3A               	movwf	(btemp+8)^0,c
 16436  016D88  0E00               	movlw	0
 16437  016D8A  14DE               	andwf	postinc2,w,c
 16438  016D8C  6E3B               	movwf	(btemp+9)^0,c
 16439  016D8E  0E80               	movlw	128
 16440  016D90  14DE               	andwf	postinc2,w,c
 16441  016D92  6E3C               	movwf	(btemp+10)^0,c
 16442  016D94  0E7F               	movlw	127
 16443  016D96  14DE               	andwf	postinc2,w,c
 16444  016D98  6E3D               	movwf	(btemp+11)^0,c
 16445  016D9A  503A               	movf	(btemp+8)^0,w,c
 16446  016D9C  103B               	iorwf	(btemp+9)^0,w,c
 16447  016D9E  103C               	iorwf	(btemp+10)^0,w,c
 16448  016DA0  103D               	iorwf	(btemp+11)^0,w,c
 16449  016DA2  A4D8               	btfss	status,2,c
 16450  016DA4  D008               	goto	l10242
 16451                           
 16452                           ;stkvar	_ff2 @ sp[(0)+-8]
 16453  016DA6  0EF8               	movlw	-8
 16454  016DA8  6AE3               	clrf	plusw1,c
 16455  016DAA  0EF9               	movlw	-7
 16456  016DAC  6AE3               	clrf	plusw1,c
 16457  016DAE  0EFA               	movlw	-6
 16458  016DB0  6AE3               	clrf	plusw1,c
 16459  016DB2  0EFB               	movlw	-5
 16460  016DB4  6AE3               	clrf	plusw1,c
 16461  016DB6                     l10242:
 16462                           
 16463                           ;stkvar	_ff2 @ sp[(0)+-8]
 16464                           ;stkvar	_ff1 @ sp[(0)+-4]
 16465  016DB6  50E1               	movf	fsr1l,w,c
 16466  016DB8  0FFC               	addlw	-4
 16467  016DBA  6ED9               	movwf	fsr2l,c
 16468  016DBC  50E2               	movf	fsr1h,w,c
 16469  016DBE  6EDA               	movwf	fsr2h,c
 16470  016DC0  0EFF               	movlw	255
 16471  016DC2  22DA               	addwfc	fsr2h,f,c
 16472  016DC4  0EF8               	movlw	-8
 16473  016DC6  50E3               	movf	plusw1,w,c
 16474  016DC8  18DE               	xorwf	postinc2,w,c
 16475  016DCA  E10D               	bnz	u10520
 16476  016DCC  0EF9               	movlw	-7
 16477  016DCE  50E3               	movf	plusw1,w,c
 16478  016DD0  18DE               	xorwf	postinc2,w,c
 16479  016DD2  E109               	bnz	u10520
 16480  016DD4  0EFA               	movlw	-6
 16481  016DD6  50E3               	movf	plusw1,w,c
 16482  016DD8  18DE               	xorwf	postinc2,w,c
 16483  016DDA  E105               	bnz	u10520
 16484  016DDC  0EFB               	movlw	-5
 16485  016DDE  50E3               	movf	plusw1,w,c
 16486  016DE0  18DE               	xorwf	postinc2,w,c
 16487  016DE2  B4D8               	btfsc	status,2,c
 16488  016DE4  D002               	goto	l10246
 16489  016DE6                     u10520:
 16490  016DE6  9032               	bcf	btemp& (0+255),0,c
 16491  016DE8  D001               	goto	l2308
 16492  016DEA                     l10246:
 16493  016DEA  8032               	bsf	btemp& (0+255),0,c
 16494  016DEC                     l2308:
 16495                           
 16496                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16497  016DEC  0EF8               	movlw	248
 16498  016DEE  26E1               	addwf	fsr1l,f,c
 16499  016DF0  0EFF               	movlw	255
 16500  016DF2  22E2               	addwfc	fsr1h,f,c
 16501  016DF4  0012               	return		;funcret
 16502  016DF6                     __end_of___fleq:
 16503                           	opt callstack 0
 16504                           
 16505 ;; *************** function ___fldiv *****************
 16506 ;; Defined at:
 16507 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;  b               4  [STACK] unsigned char 
 16510 ;;  a               4  [STACK] unsigned char 
 16511 ;; Auto vars:     Size  Location     Type
 16512 ;;  grs             4  [STACK] unsigned long 
 16513 ;;  rem             4  [STACK] unsigned long 
 16514 ;;  new_exp         2  [STACK] short 
 16515 ;;  aexp            1  [STACK] unsigned char 
 16516 ;;  bexp            1  [STACK] unsigned char 
 16517 ;;  sign            1  [STACK] unsigned char 
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  4  [STACK] unsigned char 
 16520 ;; Registers used:
 16521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16522 ;; Tracked objects:
 16523 ;;		On entry : 0/39
 16524 ;;		On exit  : 0/0
 16525 ;;		Unchanged: 0/0
 16526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16531 ;;Total ram usage:        0 bytes
 16532 ;; Hardware stack levels used:    1
 16533 ;; Hardware stack levels required when called:    6
 16534 ;; This function calls:
 16535 ;;		Nothing
 16536 ;; This function is called by:
 16537 ;;		_conv_raw_result
 16538 ;;		_efgtoa
 16539 ;; This function uses a reentrant model
 16540 ;;
 16541                           
 16542                           	psect	text57
 16543  012D68                     __ptext57:
 16544                           	opt callstack 0
 16545  012D68                     ___fldiv:
 16546                           	opt callstack 0
 16547                           
 16548                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16549  012D68  0E0D               	movlw	13
 16550  012D6A  26E1               	addwf	fsr1l,f,c
 16551  012D6C  0E00               	movlw	0
 16552  012D6E  22E2               	addwfc	fsr1h,f,c
 16553                           
 16554                           ;stkvar	_b @ sp[(-13)+-4]
 16555                           
 16556                           ;incstack = 0
 16557  012D70  0EF2               	movlw	242
 16558  012D72  24E1               	addwf	fsr1l,w,c
 16559  012D74  6ED9               	movwf	fsr2l,c
 16560  012D76  0EFF               	movlw	255
 16561  012D78  20E2               	addwfc	fsr1h,w,c
 16562  012D7A  6EDA               	movwf	fsr2h,c
 16563  012D7C  50DF               	movf	indf2,w,c
 16564  012D7E  6E3D               	movwf	(btemp+11)^0,c
 16565  012D80  0E80               	movlw	128
 16566  012D82  163D               	andwf	(btemp+11)^0,f,c
 16567                           
 16568                           ;stkvar	_sign @ sp[(-13)+12]
 16569  012D84  0EFF               	movlw	-1
 16570  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16571                           
 16572                           ;stkvar	_b @ sp[(-13)+-4]
 16573  012D8C  0EF2               	movlw	242
 16574  012D8E  24E1               	addwf	fsr1l,w,c
 16575  012D90  6ED9               	movwf	fsr2l,c
 16576  012D92  0EFF               	movlw	255
 16577  012D94  20E2               	addwfc	fsr1h,w,c
 16578  012D96  6EDA               	movwf	fsr2h,c
 16579  012D98  50DF               	movf	indf2,w,c
 16580  012D9A  6E3D               	movwf	(btemp+11)^0,c
 16581  012D9C  90D8               	bcf	status,0,c
 16582  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 16583  012DA0  6E3C               	movwf	(btemp+10)^0,c
 16584                           
 16585                           ;stkvar	_bexp @ sp[(-13)+11]
 16586  012DA2  0EFE               	movlw	-2
 16587  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16588                           
 16589                           ;stkvar	_b @ sp[(-13)+-4]
 16590  012DAA  0EF1               	movlw	241
 16591  012DAC  24E1               	addwf	fsr1l,w,c
 16592  012DAE  6ED9               	movwf	fsr2l,c
 16593  012DB0  0EFF               	movlw	255
 16594  012DB2  20E2               	addwfc	fsr1h,w,c
 16595  012DB4  6EDA               	movwf	fsr2h,c
 16596  012DB6  AEDF               	btfss	indf2,7,c
 16597  012DB8  D002               	goto	l9840
 16598                           
 16599                           ;stkvar	_bexp @ sp[(-13)+11]
 16600  012DBA  0EFE               	movlw	-2
 16601  012DBC  80E3               	bsf	plusw1,0,c
 16602  012DBE                     l9840:
 16603                           
 16604                           ;stkvar	_bexp @ sp[(-13)+11]
 16605  012DBE  0EFE               	movlw	-2
 16606  012DC0  50E3               	movf	plusw1,w,c
 16607  012DC2  B4D8               	btfsc	status,2,c
 16608  012DC4  D027               	goto	l9850
 16609                           
 16610                           ;stkvar	_bexp @ sp[(-13)+11]
 16611  012DC6  0EFE               	movlw	-2
 16612  012DC8  28E3               	incf	plusw1,w,c
 16613  012DCA  A4D8               	btfss	status,2,c
 16614  012DCC  D018               	goto	l9846
 16615  012DCE  0E00               	movlw	0
 16616  012DD0  6E3A               	movwf	(btemp+8)^0,c
 16617  012DD2  0E00               	movlw	0
 16618  012DD4  6E3B               	movwf	(btemp+9)^0,c
 16619  012DD6  0E00               	movlw	0
 16620  012DD8  6E3C               	movwf	(btemp+10)^0,c
 16621  012DDA  0E00               	movlw	0
 16622  012DDC  6E3D               	movwf	(btemp+11)^0,c
 16623                           
 16624                           ;stkvar	_b @ sp[(-13)+-4]
 16625  012DDE  0EEF               	movlw	-17
 16626  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16627  012DE6  0EF0               	movlw	-16
 16628  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16629  012DEE  0EF1               	movlw	-15
 16630  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16631  012DF6  0EF2               	movlw	-14
 16632  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16633  012DFE                     l9846:
 16634                           
 16635                           ;stkvar	_b @ sp[(-13)+-4]
 16636  012DFE  0EF1               	movlw	-15
 16637  012E00  8EE3               	bsf	plusw1,7,c
 16638                           
 16639                           ;stkvar	_b @ sp[(-13)+-4]
 16640  012E02  0EF2               	movlw	242
 16641  012E04  24E1               	addwf	fsr1l,w,c
 16642  012E06  6ED9               	movwf	fsr2l,c
 16643  012E08  0EFF               	movlw	255
 16644  012E0A  20E2               	addwfc	fsr1h,w,c
 16645  012E0C  6EDA               	movwf	fsr2h,c
 16646  012E0E  0E00               	movlw	0
 16647  012E10  6EDF               	movwf	indf2,c
 16648  012E12  D018               	goto	l9852
 16649  012E14                     l9850:
 16650  012E14  0E00               	movlw	0
 16651  012E16  6E3A               	movwf	(btemp+8)^0,c
 16652  012E18  0E00               	movlw	0
 16653  012E1A  6E3B               	movwf	(btemp+9)^0,c
 16654  012E1C  0E00               	movlw	0
 16655  012E1E  6E3C               	movwf	(btemp+10)^0,c
 16656  012E20  0E00               	movlw	0
 16657  012E22  6E3D               	movwf	(btemp+11)^0,c
 16658                           
 16659                           ;stkvar	_b @ sp[(-13)+-4]
 16660  012E24  0EEF               	movlw	-17
 16661  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16662  012E2C  0EF0               	movlw	-16
 16663  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16664  012E34  0EF1               	movlw	-15
 16665  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16666  012E3C  0EF2               	movlw	-14
 16667  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16668  012E44                     l9852:
 16669                           
 16670                           ;stkvar	_a @ sp[(-13)+-8]
 16671  012E44  0EEE               	movlw	238
 16672  012E46  24E1               	addwf	fsr1l,w,c
 16673  012E48  6ED9               	movwf	fsr2l,c
 16674  012E4A  0EFF               	movlw	255
 16675  012E4C  20E2               	addwfc	fsr1h,w,c
 16676  012E4E  6EDA               	movwf	fsr2h,c
 16677  012E50  50DF               	movf	indf2,w,c
 16678  012E52  6E3D               	movwf	(btemp+11)^0,c
 16679  012E54  0E80               	movlw	128
 16680  012E56  163D               	andwf	(btemp+11)^0,f,c
 16681                           
 16682                           ;stkvar	_sign @ sp[(-13)+12]
 16683  012E58  50E1               	movf	fsr1l,w,c
 16684  012E5A  0FFF               	addlw	-1
 16685  012E5C  6ED9               	movwf	fsr2l,c
 16686  012E5E  50E2               	movf	fsr1h,w,c
 16687  012E60  6EDA               	movwf	fsr2h,c
 16688  012E62  0EFF               	movlw	255
 16689  012E64  22DA               	addwfc	fsr2h,f,c
 16690  012E66  503D               	movf	(btemp+11)^0,w,c
 16691  012E68  1ADF               	xorwf	indf2,f,c
 16692                           
 16693                           ;stkvar	_a @ sp[(-13)+-8]
 16694  012E6A  0EEE               	movlw	238
 16695  012E6C  24E1               	addwf	fsr1l,w,c
 16696  012E6E  6ED9               	movwf	fsr2l,c
 16697  012E70  0EFF               	movlw	255
 16698  012E72  20E2               	addwfc	fsr1h,w,c
 16699  012E74  6EDA               	movwf	fsr2h,c
 16700  012E76  50DF               	movf	indf2,w,c
 16701  012E78  6E3D               	movwf	(btemp+11)^0,c
 16702  012E7A  90D8               	bcf	status,0,c
 16703  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 16704  012E7E  6E3C               	movwf	(btemp+10)^0,c
 16705                           
 16706                           ;stkvar	_aexp @ sp[(-13)+10]
 16707  012E80  0EFD               	movlw	-3
 16708  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16709                           
 16710                           ;stkvar	_a @ sp[(-13)+-8]
 16711  012E88  0EED               	movlw	237
 16712  012E8A  24E1               	addwf	fsr1l,w,c
 16713  012E8C  6ED9               	movwf	fsr2l,c
 16714  012E8E  0EFF               	movlw	255
 16715  012E90  20E2               	addwfc	fsr1h,w,c
 16716  012E92  6EDA               	movwf	fsr2h,c
 16717  012E94  AEDF               	btfss	indf2,7,c
 16718  012E96  D002               	goto	l9860
 16719                           
 16720                           ;stkvar	_aexp @ sp[(-13)+10]
 16721  012E98  0EFD               	movlw	-3
 16722  012E9A  80E3               	bsf	plusw1,0,c
 16723  012E9C                     l9860:
 16724                           
 16725                           ;stkvar	_aexp @ sp[(-13)+10]
 16726  012E9C  0EFD               	movlw	-3
 16727  012E9E  50E3               	movf	plusw1,w,c
 16728  012EA0  B4D8               	btfsc	status,2,c
 16729  012EA2  D027               	goto	l9870
 16730                           
 16731                           ;stkvar	_aexp @ sp[(-13)+10]
 16732  012EA4  0EFD               	movlw	-3
 16733  012EA6  28E3               	incf	plusw1,w,c
 16734  012EA8  A4D8               	btfss	status,2,c
 16735  012EAA  D018               	goto	l9866
 16736  012EAC  0E00               	movlw	0
 16737  012EAE  6E3A               	movwf	(btemp+8)^0,c
 16738  012EB0  0E00               	movlw	0
 16739  012EB2  6E3B               	movwf	(btemp+9)^0,c
 16740  012EB4  0E00               	movlw	0
 16741  012EB6  6E3C               	movwf	(btemp+10)^0,c
 16742  012EB8  0E00               	movlw	0
 16743  012EBA  6E3D               	movwf	(btemp+11)^0,c
 16744                           
 16745                           ;stkvar	_a @ sp[(-13)+-8]
 16746  012EBC  0EEB               	movlw	-21
 16747  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16748  012EC4  0EEC               	movlw	-20
 16749  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16750  012ECC  0EED               	movlw	-19
 16751  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16752  012ED4  0EEE               	movlw	-18
 16753  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16754  012EDC                     l9866:
 16755                           
 16756                           ;stkvar	_a @ sp[(-13)+-8]
 16757  012EDC  0EED               	movlw	-19
 16758  012EDE  8EE3               	bsf	plusw1,7,c
 16759                           
 16760                           ;stkvar	_a @ sp[(-13)+-8]
 16761  012EE0  0EEE               	movlw	238
 16762  012EE2  24E1               	addwf	fsr1l,w,c
 16763  012EE4  6ED9               	movwf	fsr2l,c
 16764  012EE6  0EFF               	movlw	255
 16765  012EE8  20E2               	addwfc	fsr1h,w,c
 16766  012EEA  6EDA               	movwf	fsr2h,c
 16767  012EEC  0E00               	movlw	0
 16768  012EEE  6EDF               	movwf	indf2,c
 16769  012EF0  D018               	goto	l9872
 16770  012EF2                     l9870:
 16771  012EF2  0E00               	movlw	0
 16772  012EF4  6E3A               	movwf	(btemp+8)^0,c
 16773  012EF6  0E00               	movlw	0
 16774  012EF8  6E3B               	movwf	(btemp+9)^0,c
 16775  012EFA  0E00               	movlw	0
 16776  012EFC  6E3C               	movwf	(btemp+10)^0,c
 16777  012EFE  0E00               	movlw	0
 16778  012F00  6E3D               	movwf	(btemp+11)^0,c
 16779                           
 16780                           ;stkvar	_a @ sp[(-13)+-8]
 16781  012F02  0EEB               	movlw	-21
 16782  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16783  012F0A  0EEC               	movlw	-20
 16784  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16785  012F12  0EED               	movlw	-19
 16786  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16787  012F1A  0EEE               	movlw	-18
 16788  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16789  012F22                     l9872:
 16790                           
 16791                           ;stkvar	_a @ sp[(-13)+-8]
 16792  012F22  0EEB               	movlw	-21
 16793  012F24  50E3               	movf	plusw1,w,c
 16794  012F26  E139               	bnz	l9884
 16795  012F28  0EEC               	movlw	-20
 16796  012F2A  50E3               	movf	plusw1,w,c
 16797  012F2C  E136               	bnz	l9884
 16798  012F2E  0EED               	movlw	-19
 16799  012F30  50E3               	movf	plusw1,w,c
 16800  012F32  E133               	bnz	l9884
 16801  012F34  0EEE               	movlw	-18
 16802  012F36  50E3               	movf	plusw1,w,c
 16803  012F38  A4D8               	btfss	status,2,c
 16804  012F3A  D02F               	goto	l9884
 16805                           
 16806                           ;stkvar	_b @ sp[(-13)+-4]
 16807  012F3C  0EEF               	movlw	-17
 16808  012F3E  6AE3               	clrf	plusw1,c
 16809  012F40  0EF0               	movlw	-16
 16810  012F42  6AE3               	clrf	plusw1,c
 16811  012F44  0EF1               	movlw	-15
 16812  012F46  6AE3               	clrf	plusw1,c
 16813  012F48  0EF2               	movlw	-14
 16814  012F4A  6AE3               	clrf	plusw1,c
 16815                           
 16816                           ;stkvar	_b @ sp[(-13)+-4]
 16817  012F4C  0EF1               	movlw	241
 16818  012F4E  24E1               	addwf	fsr1l,w,c
 16819  012F50  6ED9               	movwf	fsr2l,c
 16820  012F52  0EFF               	movlw	255
 16821  012F54  20E2               	addwfc	fsr1h,w,c
 16822  012F56  6EDA               	movwf	fsr2h,c
 16823  012F58  0E80               	movlw	128
 16824  012F5A  12DE               	iorwf	postinc2,f,c
 16825  012F5C  0E7F               	movlw	127
 16826  012F5E  12DD               	iorwf	postdec2,f,c
 16827  012F60                     l9878:
 16828                           
 16829                           ;stkvar	_sign @ sp[(-13)+12]
 16830  012F60  0EFF               	movlw	-1
 16831  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 16832                           
 16833                           ;stkvar	_b @ sp[(-13)+-4]
 16834  012F68  0EF2               	movlw	242
 16835  012F6A  24E1               	addwf	fsr1l,w,c
 16836  012F6C  6ED9               	movwf	fsr2l,c
 16837  012F6E  0EFF               	movlw	255
 16838  012F70  20E2               	addwfc	fsr1h,w,c
 16839  012F72  6EDA               	movwf	fsr2h,c
 16840  012F74  503D               	movf	(btemp+11)^0,w,c
 16841  012F76  12DF               	iorwf	indf2,f,c
 16842                           
 16843                           ;stkvar	_b @ sp[(-13)+-4]
 16844  012F78  0EEF               	movlw	-17
 16845  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 16846  012F80  0EF0               	movlw	-16
 16847  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 16848  012F88  0EF1               	movlw	-15
 16849  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 16850  012F90  0EF2               	movlw	-14
 16851  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 16852  012F98  D19F               	goto	l2631
 16853  012F9A                     l9884:
 16854                           
 16855                           ;stkvar	_bexp @ sp[(-13)+11]
 16856  012F9A  0EFE               	movlw	-2
 16857  012F9C  50E3               	movf	plusw1,w,c
 16858  012F9E  A4D8               	btfss	status,2,c
 16859  012FA0  D009               	goto	l9892
 16860  012FA2  0E00               	movlw	0
 16861  012FA4  6E32               	movwf	btemp^0,c
 16862  012FA6  0E00               	movlw	0
 16863  012FA8  6E33               	movwf	(btemp+1)^0,c
 16864  012FAA  0E00               	movlw	0
 16865  012FAC  6E34               	movwf	(btemp+2)^0,c
 16866  012FAE  0E00               	movlw	0
 16867  012FB0  6E35               	movwf	(btemp+3)^0,c
 16868  012FB2  D192               	goto	l2631
 16869  012FB4                     l9892:
 16870                           
 16871                           ;stkvar	_bexp @ sp[(-13)+11]
 16872  012FB4  0EFE               	movlw	-2
 16873  012FB6  50E3               	movf	plusw1,w,c
 16874  012FB8  6E3C               	movwf	(btemp+10)^0,c
 16875  012FBA  6A3D               	clrf	(btemp+11)^0,c
 16876                           
 16877                           ;stkvar	_aexp @ sp[(-13)+10]
 16878  012FBC  0EFD               	movlw	-3
 16879  012FBE  50E3               	movf	plusw1,w,c
 16880  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 16881  012FC2  0E00               	movlw	0
 16882  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 16883  012FC6  0E7F               	movlw	127
 16884  012FC8  263C               	addwf	(btemp+10)^0,f,c
 16885  012FCA  0E00               	movlw	0
 16886  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 16887                           
 16888                           ;stkvar	_new_exp @ sp[(-13)+8]
 16889  012FCE  0EFB               	movlw	-5
 16890  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16891  012FD6  0EFC               	movlw	-4
 16892  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16893                           
 16894                           ;stkvar	_b @ sp[(-13)+-4]
 16895  012FDE  0EEF               	movlw	-17
 16896  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 16897  012FE6  0EF0               	movlw	-16
 16898  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 16899  012FEE  0EF1               	movlw	-15
 16900  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16901  012FF6  0EF2               	movlw	-14
 16902  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16903                           
 16904                           ;stkvar	_rem @ sp[(-13)+4]
 16905  012FFE  0EF7               	movlw	-9
 16906  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16907  013006  0EF8               	movlw	-8
 16908  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16909  01300E  0EF9               	movlw	-7
 16910  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16911  013016  0EFA               	movlw	-6
 16912  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16913                           
 16914                           ;stkvar	_b @ sp[(-13)+-4]
 16915  01301E  0EEF               	movlw	-17
 16916  013020  6AE3               	clrf	plusw1,c
 16917  013022  0EF0               	movlw	-16
 16918  013024  6AE3               	clrf	plusw1,c
 16919  013026  0EF1               	movlw	-15
 16920  013028  6AE3               	clrf	plusw1,c
 16921  01302A  0EF2               	movlw	-14
 16922  01302C  6AE3               	clrf	plusw1,c
 16923                           
 16924                           ;stkvar	_grs @ sp[(-13)+0]
 16925  01302E  0EF3               	movlw	-13
 16926  013030  6AE3               	clrf	plusw1,c
 16927  013032  0EF4               	movlw	-12
 16928  013034  6AE3               	clrf	plusw1,c
 16929  013036  0EF5               	movlw	-11
 16930  013038  6AE3               	clrf	plusw1,c
 16931  01303A  0EF6               	movlw	-10
 16932  01303C  6AE3               	clrf	plusw1,c
 16933                           
 16934                           ;stkvar	_aexp @ sp[(-13)+10]
 16935  01303E  0EFD               	movlw	-3
 16936  013040  6AE3               	clrf	plusw1,c
 16937  013042  D050               	goto	l9920
 16938  013044                     l9902:
 16939                           
 16940                           ;stkvar	_aexp @ sp[(-13)+10]
 16941  013044  0EFD               	movlw	-3
 16942  013046  50E3               	movf	plusw1,w,c
 16943  013048  B4D8               	btfsc	status,2,c
 16944  01304A  D020               	goto	l9912
 16945                           
 16946                           ;stkvar	_rem @ sp[(-13)+4]
 16947  01304C  90D8               	bcf	status,0,c
 16948  01304E  0EF7               	movlw	-9
 16949  013050  36E3               	rlcf	plusw1,f,c
 16950  013052  0EF8               	movlw	-8
 16951  013054  36E3               	rlcf	plusw1,f,c
 16952  013056  0EF9               	movlw	-7
 16953  013058  36E3               	rlcf	plusw1,f,c
 16954  01305A  0EFA               	movlw	-6
 16955  01305C  36E3               	rlcf	plusw1,f,c
 16956                           
 16957                           ;stkvar	_b @ sp[(-13)+-4]
 16958  01305E  90D8               	bcf	status,0,c
 16959  013060  0EEF               	movlw	-17
 16960  013062  36E3               	rlcf	plusw1,f,c
 16961  013064  0EF0               	movlw	-16
 16962  013066  36E3               	rlcf	plusw1,f,c
 16963  013068  0EF1               	movlw	-15
 16964  01306A  36E3               	rlcf	plusw1,f,c
 16965  01306C  0EF2               	movlw	-14
 16966  01306E  36E3               	rlcf	plusw1,f,c
 16967                           
 16968                           ;stkvar	_grs @ sp[(-13)+0]
 16969  013070  0EF6               	movlw	-10
 16970  013072  AEE3               	btfss	plusw1,7,c
 16971  013074  D002               	goto	l9910
 16972                           
 16973                           ;stkvar	_b @ sp[(-13)+-4]
 16974  013076  0EEF               	movlw	-17
 16975  013078  80E3               	bsf	plusw1,0,c
 16976  01307A                     l9910:
 16977                           
 16978                           ;stkvar	_grs @ sp[(-13)+0]
 16979  01307A  90D8               	bcf	status,0,c
 16980  01307C  0EF3               	movlw	-13
 16981  01307E  36E3               	rlcf	plusw1,f,c
 16982  013080  0EF4               	movlw	-12
 16983  013082  36E3               	rlcf	plusw1,f,c
 16984  013084  0EF5               	movlw	-11
 16985  013086  36E3               	rlcf	plusw1,f,c
 16986  013088  0EF6               	movlw	-10
 16987  01308A  36E3               	rlcf	plusw1,f,c
 16988  01308C                     l9912:
 16989                           
 16990                           ;stkvar	_a @ sp[(-13)+-8]
 16991                           ;stkvar	_rem @ sp[(-13)+4]
 16992  01308C  50E1               	movf	fsr1l,w,c
 16993  01308E  0FF7               	addlw	-9
 16994  013090  6ED9               	movwf	fsr2l,c
 16995  013092  50E2               	movf	fsr1h,w,c
 16996  013094  6EDA               	movwf	fsr2h,c
 16997  013096  0EFF               	movlw	255
 16998  013098  22DA               	addwfc	fsr2h,f,c
 16999  01309A  0EEB               	movlw	-21
 17000  01309C  50E3               	movf	plusw1,w,c
 17001  01309E  5CDE               	subwf	postinc2,w,c
 17002  0130A0  0EEC               	movlw	-20
 17003  0130A2  50E3               	movf	plusw1,w,c
 17004  0130A4  58DE               	subwfb	postinc2,w,c
 17005  0130A6  0EED               	movlw	-19
 17006  0130A8  50E3               	movf	plusw1,w,c
 17007  0130AA  58DE               	subwfb	postinc2,w,c
 17008  0130AC  0EEE               	movlw	-18
 17009  0130AE  50E3               	movf	plusw1,w,c
 17010  0130B0  58DE               	subwfb	postinc2,w,c
 17011  0130B2  A0D8               	btfss	status,0,c
 17012  0130B4  D015               	goto	l9918
 17013                           
 17014                           ;stkvar	_grs @ sp[(-13)+0]
 17015  0130B6  0EF6               	movlw	-10
 17016  0130B8  8CE3               	bsf	plusw1,6,c
 17017                           
 17018                           ;stkvar	_a @ sp[(-13)+-8]
 17019                           ;stkvar	_rem @ sp[(-13)+4]
 17020  0130BA  50E1               	movf	fsr1l,w,c
 17021  0130BC  0FF7               	addlw	-9
 17022  0130BE  6ED9               	movwf	fsr2l,c
 17023  0130C0  50E2               	movf	fsr1h,w,c
 17024  0130C2  6EDA               	movwf	fsr2h,c
 17025  0130C4  0EFF               	movlw	255
 17026  0130C6  22DA               	addwfc	fsr2h,f,c
 17027  0130C8  0EEB               	movlw	-21
 17028  0130CA  50E3               	movf	plusw1,w,c
 17029  0130CC  5EDE               	subwf	postinc2,f,c
 17030  0130CE  0EEC               	movlw	-20
 17031  0130D0  50E3               	movf	plusw1,w,c
 17032  0130D2  5ADE               	subwfb	postinc2,f,c
 17033  0130D4  0EED               	movlw	-19
 17034  0130D6  50E3               	movf	plusw1,w,c
 17035  0130D8  5ADE               	subwfb	postinc2,f,c
 17036  0130DA  0EEE               	movlw	-18
 17037  0130DC  50E3               	movf	plusw1,w,c
 17038  0130DE  5ADE               	subwfb	postinc2,f,c
 17039  0130E0                     l9918:
 17040                           
 17041                           ;stkvar	_aexp @ sp[(-13)+10]
 17042  0130E0  0EFD               	movlw	-3
 17043  0130E2  2AE3               	incf	plusw1,f,c
 17044  0130E4                     l9920:
 17045                           
 17046                           ;stkvar	_aexp @ sp[(-13)+10]
 17047  0130E4  0EFD               	movlw	-3
 17048  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 17049  0130EC  0E19               	movlw	25
 17050  0130EE  6432               	cpfsgt	btemp^0,c
 17051  0130F0  D7A9               	goto	l9902
 17052                           
 17053                           ;stkvar	_rem @ sp[(-13)+4]
 17054  0130F2  0EF7               	movlw	-9
 17055  0130F4  50E3               	movf	plusw1,w,c
 17056  0130F6  E10A               	bnz	u10020
 17057  0130F8  0EF8               	movlw	-8
 17058  0130FA  50E3               	movf	plusw1,w,c
 17059  0130FC  E107               	bnz	u10020
 17060  0130FE  0EF9               	movlw	-7
 17061  013100  50E3               	movf	plusw1,w,c
 17062  013102  E104               	bnz	u10020
 17063  013104  0EFA               	movlw	-6
 17064  013106  50E3               	movf	plusw1,w,c
 17065  013108  B4D8               	btfsc	status,2,c
 17066  01310A  D024               	goto	l9936
 17067  01310C                     u10020:
 17068                           
 17069                           ;stkvar	_grs @ sp[(-13)+0]
 17070  01310C  0EF3               	movlw	-13
 17071  01310E  80E3               	bsf	plusw1,0,c
 17072  013110  D021               	goto	l9936
 17073  013112                     l9926:
 17074                           
 17075                           ;stkvar	_b @ sp[(-13)+-4]
 17076  013112  90D8               	bcf	status,0,c
 17077  013114  0EEF               	movlw	-17
 17078  013116  36E3               	rlcf	plusw1,f,c
 17079  013118  0EF0               	movlw	-16
 17080  01311A  36E3               	rlcf	plusw1,f,c
 17081  01311C  0EF1               	movlw	-15
 17082  01311E  36E3               	rlcf	plusw1,f,c
 17083  013120  0EF2               	movlw	-14
 17084  013122  36E3               	rlcf	plusw1,f,c
 17085                           
 17086                           ;stkvar	_grs @ sp[(-13)+0]
 17087  013124  0EF6               	movlw	-10
 17088  013126  AEE3               	btfss	plusw1,7,c
 17089  013128  D002               	goto	l9932
 17090                           
 17091                           ;stkvar	_b @ sp[(-13)+-4]
 17092  01312A  0EEF               	movlw	-17
 17093  01312C  80E3               	bsf	plusw1,0,c
 17094  01312E                     l9932:
 17095                           
 17096                           ;stkvar	_grs @ sp[(-13)+0]
 17097  01312E  90D8               	bcf	status,0,c
 17098  013130  0EF3               	movlw	-13
 17099  013132  36E3               	rlcf	plusw1,f,c
 17100  013134  0EF4               	movlw	-12
 17101  013136  36E3               	rlcf	plusw1,f,c
 17102  013138  0EF5               	movlw	-11
 17103  01313A  36E3               	rlcf	plusw1,f,c
 17104  01313C  0EF6               	movlw	-10
 17105  01313E  36E3               	rlcf	plusw1,f,c
 17106                           
 17107                           ;stkvar	_new_exp @ sp[(-13)+8]
 17108  013140  50E1               	movf	fsr1l,w,c
 17109  013142  0FFB               	addlw	-5
 17110  013144  6ED9               	movwf	fsr2l,c
 17111  013146  50E2               	movf	fsr1h,w,c
 17112  013148  6EDA               	movwf	fsr2h,c
 17113  01314A  0EFF               	movlw	255
 17114  01314C  22DA               	addwfc	fsr2h,f,c
 17115  01314E  06DE               	decf	postinc2,f,c
 17116  013150  0E00               	movlw	0
 17117  013152  5ADD               	subwfb	postdec2,f,c
 17118  013154                     l9936:
 17119                           
 17120                           ;stkvar	_b @ sp[(-13)+-4]
 17121  013154  0EF1               	movlw	-15
 17122  013156  AEE3               	btfss	plusw1,7,c
 17123  013158  D7DC               	goto	l9926
 17124                           
 17125                           ;stkvar	_aexp @ sp[(-13)+10]
 17126  01315A  0EFD               	movlw	-3
 17127  01315C  6AE3               	clrf	plusw1,c
 17128                           
 17129                           ;stkvar	_grs @ sp[(-13)+0]
 17130  01315E  0EF6               	movlw	-10
 17131  013160  AEE3               	btfss	plusw1,7,c
 17132  013162  D020               	goto	l9950
 17133                           
 17134                           ;stkvar	_grs @ sp[(-13)+0]
 17135  013164  50E1               	movf	fsr1l,w,c
 17136  013166  0FF3               	addlw	-13
 17137  013168  6ED9               	movwf	fsr2l,c
 17138  01316A  50E2               	movf	fsr1h,w,c
 17139  01316C  6EDA               	movwf	fsr2h,c
 17140  01316E  0EFF               	movlw	255
 17141  013170  22DA               	addwfc	fsr2h,f,c
 17142  013172  0EFF               	movlw	255
 17143  013174  14DE               	andwf	postinc2,w,c
 17144  013176  6E3A               	movwf	(btemp+8)^0,c
 17145  013178  0EFF               	movlw	255
 17146  01317A  14DE               	andwf	postinc2,w,c
 17147  01317C  6E3B               	movwf	(btemp+9)^0,c
 17148  01317E  0EFF               	movlw	255
 17149  013180  14DE               	andwf	postinc2,w,c
 17150  013182  6E3C               	movwf	(btemp+10)^0,c
 17151  013184  0E7F               	movlw	127
 17152  013186  14DE               	andwf	postinc2,w,c
 17153  013188  6E3D               	movwf	(btemp+11)^0,c
 17154  01318A  503A               	movf	(btemp+8)^0,w,c
 17155  01318C  103B               	iorwf	(btemp+9)^0,w,c
 17156  01318E  103C               	iorwf	(btemp+10)^0,w,c
 17157  013190  103D               	iorwf	(btemp+11)^0,w,c
 17158  013192  B4D8               	btfsc	status,2,c
 17159  013194  D004               	goto	l9946
 17160  013196                     u10060:
 17161                           
 17162                           ;stkvar	_aexp @ sp[(-13)+10]
 17163  013196  0EFD               	movlw	-3
 17164  013198  6AE3               	clrf	plusw1,c
 17165  01319A  2AE3               	incf	plusw1,f,c
 17166  01319C  D003               	goto	l9950
 17167  01319E                     l9946:
 17168                           
 17169                           ;stkvar	_b @ sp[(-13)+-4]
 17170  01319E  0EEF               	movlw	-17
 17171  0131A0  B0E3               	btfsc	plusw1,0,c
 17172  0131A2  D7F9               	goto	u10060
 17173  0131A4                     l9950:
 17174                           
 17175                           ;stkvar	_aexp @ sp[(-13)+10]
 17176  0131A4  0EFD               	movlw	-3
 17177  0131A6  50E3               	movf	plusw1,w,c
 17178  0131A8  B4D8               	btfsc	status,2,c
 17179  0131AA  D036               	goto	l9960
 17180                           
 17181                           ;stkvar	_b @ sp[(-13)+-4]
 17182  0131AC  50E1               	movf	fsr1l,w,c
 17183  0131AE  0FEF               	addlw	-17
 17184  0131B0  6ED9               	movwf	fsr2l,c
 17185  0131B2  50E2               	movf	fsr1h,w,c
 17186  0131B4  6EDA               	movwf	fsr2h,c
 17187  0131B6  0EFF               	movlw	255
 17188  0131B8  22DA               	addwfc	fsr2h,f,c
 17189  0131BA  2ADE               	incf	postinc2,f,c
 17190  0131BC  0E00               	movlw	0
 17191  0131BE  22DE               	addwfc	postinc2,f,c
 17192  0131C0  22DE               	addwfc	postinc2,f,c
 17193  0131C2  22DE               	addwfc	postinc2,f,c
 17194                           
 17195                           ;stkvar	_b @ sp[(-13)+-4]
 17196  0131C4  0EF2               	movlw	-14
 17197  0131C6  A0E3               	btfss	plusw1,0,c
 17198  0131C8  D027               	goto	l9960
 17199  0131CA  0E01               	movlw	1
 17200  0131CC  6E3D               	movwf	(btemp+11)^0,c
 17201                           
 17202                           ;stkvar	_b @ sp[(-13)+-4]
 17203  0131CE  50E1               	movf	fsr1l,w,c
 17204  0131D0  0FEF               	addlw	-17
 17205  0131D2  6ED9               	movwf	fsr2l,c
 17206  0131D4  50E2               	movf	fsr1h,w,c
 17207  0131D6  6EDA               	movwf	fsr2h,c
 17208  0131D8  0EFF               	movlw	255
 17209  0131DA  22DA               	addwfc	fsr2h,f,c
 17210  0131DC  283D               	incf	(btemp+11)^0,w,c
 17211  0131DE  52DE               	movf	postinc2,f,c
 17212  0131E0  D008               	goto	u10100
 17213  0131E2                     u10105:
 17214  0131E2  52DE               	movf	postinc2,f,c
 17215  0131E4  90D8               	bcf	status,0,c
 17216  0131E6  BEDC               	btfsc	preinc2,7,c
 17217  0131E8  80D8               	bsf	status,0,c
 17218  0131EA  32DD               	rrcf	postdec2,f,c
 17219  0131EC  32DD               	rrcf	postdec2,f,c
 17220  0131EE  32DD               	rrcf	postdec2,f,c
 17221  0131F0  32DE               	rrcf	postinc2,f,c
 17222  0131F2                     u10100:
 17223  0131F2  2EE8               	decfsz	wreg,f,c
 17224  0131F4  D7F6               	goto	u10105
 17225                           
 17226                           ;stkvar	_new_exp @ sp[(-13)+8]
 17227  0131F6  0EFB               	movlw	-5
 17228  0131F8  50E3               	movf	plusw1,w,c
 17229  0131FA  0F01               	addlw	1
 17230  0131FC  6E32               	movwf	btemp^0,c
 17231  0131FE  0EFB               	movlw	-5
 17232  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 17233  013206  6A32               	clrf	btemp^0,c
 17234  013208  0EFC               	movlw	-4
 17235  01320A  50E3               	movf	plusw1,w,c
 17236  01320C  2032               	addwfc	btemp^0,w,c
 17237  01320E  6E32               	movwf	btemp^0,c
 17238  013210  0EFC               	movlw	-4
 17239  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 17240  013218                     l9960:
 17241                           
 17242                           ;stkvar	_new_exp @ sp[(-13)+8]
 17243  013218  0EFC               	movlw	-4
 17244  01321A  BEE3               	btfsc	plusw1,7,c
 17245  01321C  D01B               	goto	l9966
 17246  01321E  0EFC               	movlw	-4
 17247  013220  50E3               	movf	plusw1,w,c
 17248  013222  E104               	bnz	u10110
 17249  013224  0EFB               	movlw	-5
 17250  013226  28E3               	incf	plusw1,w,c
 17251  013228  A0D8               	btfss	status,0,c
 17252  01322A  D014               	goto	l9966
 17253  01322C                     u10110:
 17254  01322C  0EFF               	movlw	255
 17255  01322E  6E3C               	movwf	(btemp+10)^0,c
 17256  013230  0E00               	movlw	0
 17257  013232  6E3D               	movwf	(btemp+11)^0,c
 17258                           
 17259                           ;stkvar	_new_exp @ sp[(-13)+8]
 17260  013234  0EFB               	movlw	-5
 17261  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17262  01323C  0EFC               	movlw	-4
 17263  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17264                           
 17265                           ;stkvar	_b @ sp[(-13)+-4]
 17266  013244  0EEF               	movlw	-17
 17267  013246  6AE3               	clrf	plusw1,c
 17268  013248  0EF0               	movlw	-16
 17269  01324A  6AE3               	clrf	plusw1,c
 17270  01324C  0EF1               	movlw	-15
 17271  01324E  6AE3               	clrf	plusw1,c
 17272  013250  0EF2               	movlw	-14
 17273  013252  6AE3               	clrf	plusw1,c
 17274  013254                     l9966:
 17275                           
 17276                           ;stkvar	_new_exp @ sp[(-13)+8]
 17277  013254  0EFC               	movlw	-4
 17278  013256  BEE3               	btfsc	plusw1,7,c
 17279  013258  D007               	goto	u10120
 17280  01325A  0EFC               	movlw	-4
 17281  01325C  50E3               	movf	plusw1,w,c
 17282  01325E  E112               	bnz	l9972
 17283  013260  0EFB               	movlw	-5
 17284  013262  04E3               	decf	plusw1,w,c
 17285  013264  B0D8               	btfsc	status,0,c
 17286  013266  D00E               	goto	l9972
 17287  013268                     u10120:
 17288                           
 17289                           ;stkvar	_new_exp @ sp[(-13)+8]
 17290  013268  0EFB               	movlw	-5
 17291  01326A  6AE3               	clrf	plusw1,c
 17292  01326C  0EFC               	movlw	-4
 17293  01326E  6AE3               	clrf	plusw1,c
 17294                           
 17295                           ;stkvar	_b @ sp[(-13)+-4]
 17296  013270  0EEF               	movlw	-17
 17297  013272  6AE3               	clrf	plusw1,c
 17298  013274  0EF0               	movlw	-16
 17299  013276  6AE3               	clrf	plusw1,c
 17300  013278  0EF1               	movlw	-15
 17301  01327A  6AE3               	clrf	plusw1,c
 17302  01327C  0EF2               	movlw	-14
 17303  01327E  6AE3               	clrf	plusw1,c
 17304                           
 17305                           ;stkvar	_sign @ sp[(-13)+12]
 17306  013280  0EFF               	movlw	-1
 17307  013282  6AE3               	clrf	plusw1,c
 17308  013284                     l9972:
 17309                           
 17310                           ;stkvar	_new_exp @ sp[(-13)+8]
 17311                           ;stkvar	_bexp @ sp[(-13)+11]
 17312  013284  0EFB               	movlw	-5
 17313  013286  006F FF8C  F032    	movff	plusw1,btemp
 17314  01328C  0EFE               	movlw	-2
 17315  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17316                           
 17317                           ;stkvar	_bexp @ sp[(-13)+11]
 17318  013294  0EFE               	movlw	-2
 17319  013296  A0E3               	btfss	plusw1,0,c
 17320  013298  D009               	goto	l9978
 17321                           
 17322                           ;stkvar	_b @ sp[(-13)+-4]
 17323  01329A  0EF1               	movlw	241
 17324  01329C  24E1               	addwf	fsr1l,w,c
 17325  01329E  6ED9               	movwf	fsr2l,c
 17326  0132A0  0EFF               	movlw	255
 17327  0132A2  20E2               	addwfc	fsr1h,w,c
 17328  0132A4  6EDA               	movwf	fsr2h,c
 17329  0132A6  0E00               	movlw	0
 17330  0132A8  8EDB               	bsf	plusw2,7,c
 17331  0132AA  D008               	goto	l9980
 17332  0132AC                     l9978:
 17333                           
 17334                           ;stkvar	_b @ sp[(-13)+-4]
 17335  0132AC  0EF1               	movlw	241
 17336  0132AE  24E1               	addwf	fsr1l,w,c
 17337  0132B0  6ED9               	movwf	fsr2l,c
 17338  0132B2  0EFF               	movlw	255
 17339  0132B4  20E2               	addwfc	fsr1h,w,c
 17340  0132B6  6EDA               	movwf	fsr2h,c
 17341  0132B8  0E7F               	movlw	127
 17342  0132BA  16DF               	andwf	indf2,f,c
 17343  0132BC                     l9980:
 17344                           
 17345                           ;stkvar	_b @ sp[(-13)+-4]
 17346  0132BC  0EF2               	movlw	242
 17347  0132BE  24E1               	addwf	fsr1l,w,c
 17348  0132C0  6ED9               	movwf	fsr2l,c
 17349  0132C2  0EFF               	movlw	255
 17350  0132C4  20E2               	addwfc	fsr1h,w,c
 17351  0132C6  6EDA               	movwf	fsr2h,c
 17352                           
 17353                           ;stkvar	_bexp @ sp[(-13)+11]
 17354  0132C8  0EFE               	movlw	-2
 17355  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17356  0132D0  90D8               	bcf	status,0,c
 17357  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 17358  0132D4  6EDF               	movwf	indf2,c
 17359  0132D6  D644               	goto	l9878
 17360  0132D8                     l2631:
 17361                           
 17362                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17363  0132D8  0EEB               	movlw	235
 17364  0132DA  26E1               	addwf	fsr1l,f,c
 17365  0132DC  0EFF               	movlw	255
 17366  0132DE  22E2               	addwfc	fsr1h,f,c
 17367  0132E0  0012               	return		;funcret
 17368  0132E2                     __end_of___fldiv:
 17369                           	opt callstack 0
 17370                           
 17371 ;; *************** function ___awmod *****************
 17372 ;; Defined at:
 17373 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17374 ;; Parameters:    Size  Location     Type
 17375 ;;  dividend        2  [STACK] int 
 17376 ;;  divisor         2  [STACK] int 
 17377 ;; Auto vars:     Size  Location     Type
 17378 ;;  sign            1  [STACK] unsigned char 
 17379 ;;  counter         1  [STACK] unsigned char 
 17380 ;; Return value:  Size  Location     Type
 17381 ;;                  2  [STACK] int 
 17382 ;; Registers used:
 17383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17384 ;; Tracked objects:
 17385 ;;		On entry : 0/5
 17386 ;;		On exit  : 0/0
 17387 ;;		Unchanged: 0/0
 17388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17393 ;;Total ram usage:        0 bytes
 17394 ;; Hardware stack levels used:    1
 17395 ;; Hardware stack levels required when called:    6
 17396 ;; This function calls:
 17397 ;;		Nothing
 17398 ;; This function is called by:
 17399 ;;		_efgtoa
 17400 ;; This function uses a reentrant model
 17401 ;;
 17402                           
 17403                           	psect	text58
 17404  01663C                     __ptext58:
 17405                           	opt callstack 0
 17406  01663C                     ___awmod:
 17407                           	opt callstack 0
 17408                           
 17409                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17410  01663C  52E6               	movf	postinc1,f,c
 17411  01663E  52E6               	movf	postinc1,f,c
 17412                           
 17413                           ;stkvar	_sign @ sp[(-2)+0]
 17414                           
 17415                           ;incstack = 0
 17416  016640  0EFE               	movlw	-2
 17417  016642  6AE3               	clrf	plusw1,c
 17418                           
 17419                           ;stkvar	_dividend @ sp[(-2)+-2]
 17420  016644  0EFD               	movlw	-3
 17421  016646  AEE3               	btfss	plusw1,7,c
 17422  016648  D009               	goto	l10204
 17423                           
 17424                           ;stkvar	_dividend @ sp[(-2)+-2]
 17425                           ;stkvar	_dividend @ sp[(-2)+-2]
 17426  01664A  0EFC               	movlw	-4
 17427  01664C  6CE3               	negf	plusw1,c
 17428  01664E  0EFD               	movlw	-3
 17429  016650  1EE3               	comf	plusw1,f,c
 17430  016652  B0D8               	btfsc	status,0,c
 17431  016654  2AE3               	incf	plusw1,f,c
 17432                           
 17433                           ;stkvar	_sign @ sp[(-2)+0]
 17434  016656  0EFE               	movlw	-2
 17435  016658  6AE3               	clrf	plusw1,c
 17436  01665A  2AE3               	incf	plusw1,f,c
 17437  01665C                     l10204:
 17438                           
 17439                           ;stkvar	_divisor @ sp[(-2)+-4]
 17440  01665C  0EFB               	movlw	-5
 17441  01665E  AEE3               	btfss	plusw1,7,c
 17442  016660  D006               	goto	l10208
 17443                           
 17444                           ;stkvar	_divisor @ sp[(-2)+-4]
 17445                           ;stkvar	_divisor @ sp[(-2)+-4]
 17446  016662  0EFA               	movlw	-6
 17447  016664  6CE3               	negf	plusw1,c
 17448  016666  0EFB               	movlw	-5
 17449  016668  1EE3               	comf	plusw1,f,c
 17450  01666A  B0D8               	btfsc	status,0,c
 17451  01666C  2AE3               	incf	plusw1,f,c
 17452  01666E                     l10208:
 17453                           
 17454                           ;stkvar	_divisor @ sp[(-2)+-4]
 17455  01666E  0EFA               	movlw	-6
 17456  016670  006F FF8C  F032    	movff	plusw1,btemp
 17457  016676  0EFB               	movlw	-5
 17458  016678  50E3               	movf	plusw1,w,c
 17459  01667A  1032               	iorwf	btemp^0,w,c
 17460  01667C  B4D8               	btfsc	status,2,c
 17461  01667E  D053               	goto	u10480
 17462                           
 17463                           ;stkvar	_counter @ sp[(-2)+1]
 17464  016680  0EFF               	movlw	-1
 17465  016682  6AE3               	clrf	plusw1,c
 17466  016684  D012               	goto	L14
 17467  016686                     l10212:
 17468                           
 17469                           ;stkvar	_divisor @ sp[(-2)+-4]
 17470  016686  0EFA               	movlw	-6
 17471  016688  50E3               	movf	plusw1,w,c
 17472  01668A  90D8               	bcf	status,0,c
 17473  01668C  34E8               	rlcf	wreg,w,c
 17474  01668E  6E32               	movwf	btemp^0,c
 17475  016690  0EFA               	movlw	-6
 17476  016692  0060  F0CB  FFE3   	movff	btemp,plusw1
 17477  016698  0EFB               	movlw	-5
 17478  01669A  50E3               	movf	plusw1,w,c
 17479  01669C  34E8               	rlcf	wreg,w,c
 17480  01669E  6E32               	movwf	btemp^0,c
 17481  0166A0  0EFB               	movlw	-5
 17482  0166A2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17483                           
 17484                           ;stkvar	_counter @ sp[(-2)+1]
 17485  0166A8  0EFF               	movlw	-1
 17486  0166AA                     L14:
 17487  0166AA  2AE3               	incf	plusw1,f,c
 17488                           
 17489                           ;stkvar	_divisor @ sp[(-2)+-4]
 17490  0166AC  0EFB               	movlw	-5
 17491  0166AE  AEE3               	btfss	plusw1,7,c
 17492  0166B0  D7EA               	goto	l10212
 17493  0166B2                     u10460:
 17494                           
 17495                           ;stkvar	_divisor @ sp[(-2)+-4]
 17496  0166B2  0EFA               	movlw	-6
 17497  0166B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17498  0166BA  0EFB               	movlw	-5
 17499  0166BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17500                           
 17501                           ;stkvar	_dividend @ sp[(-2)+-2]
 17502  0166C2  0EFC               	movlw	-4
 17503  0166C4  006F FF8C  F03A    	movff	plusw1,btemp+8
 17504  0166CA  0EFD               	movlw	-3
 17505  0166CC  006F FF8C  F03B    	movff	plusw1,btemp+9
 17506  0166D2  503C               	movf	(btemp+10)^0,w,c
 17507  0166D4  5C3A               	subwf	(btemp+8)^0,w,c
 17508  0166D6  503D               	movf	(btemp+11)^0,w,c
 17509  0166D8  583B               	subwfb	(btemp+9)^0,w,c
 17510  0166DA  A0D8               	btfss	status,0,c
 17511  0166DC  D014               	goto	l10222
 17512                           
 17513                           ;stkvar	_divisor @ sp[(-2)+-4]
 17514                           ;stkvar	_dividend @ sp[(-2)+-2]
 17515  0166DE  0EFC               	movlw	-4
 17516  0166E0  50E3               	movf	plusw1,w,c
 17517  0166E2  6E32               	movwf	btemp^0,c
 17518  0166E4  0EFA               	movlw	-6
 17519  0166E6  50E3               	movf	plusw1,w,c
 17520  0166E8  5E32               	subwf	btemp^0,f,c
 17521  0166EA  0EFC               	movlw	-4
 17522  0166EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17523  0166F2  0EFD               	movlw	-3
 17524  0166F4  50E3               	movf	plusw1,w,c
 17525  0166F6  6E32               	movwf	btemp^0,c
 17526  0166F8  0EFB               	movlw	-5
 17527  0166FA  50E3               	movf	plusw1,w,c
 17528  0166FC  5A32               	subwfb	btemp^0,f,c
 17529  0166FE  0EFD               	movlw	-3
 17530  016700  0060  F0CB  FFE3   	movff	btemp,plusw1
 17531  016706                     l10222:
 17532                           
 17533                           ;stkvar	_divisor @ sp[(-2)+-4]
 17534  016706  90D8               	bcf	status,0,c
 17535  016708  0EFB               	movlw	-5
 17536  01670A  32E3               	rrcf	plusw1,f,c
 17537  01670C  0EFA               	movlw	-6
 17538  01670E  32E3               	rrcf	plusw1,f,c
 17539                           
 17540                           ;stkvar	_counter @ sp[(-2)+1]
 17541  016710  0EFF               	movlw	-1
 17542  016712  50E3               	movf	plusw1,w,c
 17543  016714  6E32               	movwf	btemp^0,c
 17544  016716  0E01               	movlw	1
 17545  016718  5E32               	subwf	btemp^0,f,c
 17546  01671A  0EFF               	movlw	-1
 17547  01671C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17548  016722  A4D8               	btfss	status,2,c
 17549  016724  D7C6               	goto	u10460
 17550  016726                     u10480:
 17551                           
 17552                           ;stkvar	_sign @ sp[(-2)+0]
 17553  016726  0EFE               	movlw	-2
 17554  016728  50E3               	movf	plusw1,w,c
 17555  01672A  B4D8               	btfsc	status,2,c
 17556  01672C  D006               	goto	l10230
 17557                           
 17558                           ;stkvar	_dividend @ sp[(-2)+-2]
 17559                           ;stkvar	_dividend @ sp[(-2)+-2]
 17560  01672E  0EFC               	movlw	-4
 17561  016730  6CE3               	negf	plusw1,c
 17562  016732  0EFD               	movlw	-3
 17563  016734  1EE3               	comf	plusw1,f,c
 17564  016736  B0D8               	btfsc	status,0,c
 17565  016738  2AE3               	incf	plusw1,f,c
 17566  01673A                     l10230:
 17567                           
 17568                           ;stkvar	_dividend @ sp[(-2)+-2]
 17569  01673A  0EFC               	movlw	-4
 17570  01673C  006F FF8C  F032    	movff	plusw1,btemp
 17571  016742  0EFD               	movlw	-3
 17572  016744  006F FF8C  F033    	movff	plusw1,btemp+1
 17573                           
 17574                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17575  01674A  0EFA               	movlw	250
 17576  01674C  26E1               	addwf	fsr1l,f,c
 17577  01674E  0EFF               	movlw	255
 17578  016750  22E2               	addwfc	fsr1h,f,c
 17579  016752  0012               	return		;funcret
 17580  016754                     __end_of___awmod:
 17581                           	opt callstack 0
 17582                           
 17583 ;; *************** function ___awdiv *****************
 17584 ;; Defined at:
 17585 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;  dividend        2  [STACK] int 
 17588 ;;  divisor         2  [STACK] int 
 17589 ;; Auto vars:     Size  Location     Type
 17590 ;;  quotient        2  [STACK] int 
 17591 ;;  sign            1  [STACK] unsigned char 
 17592 ;;  counter         1  [STACK] unsigned char 
 17593 ;; Return value:  Size  Location     Type
 17594 ;;                  2  [STACK] int 
 17595 ;; Registers used:
 17596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17597 ;; Tracked objects:
 17598 ;;		On entry : 0/5
 17599 ;;		On exit  : 0/0
 17600 ;;		Unchanged: 0/0
 17601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17606 ;;Total ram usage:        0 bytes
 17607 ;; Hardware stack levels used:    1
 17608 ;; Hardware stack levels required when called:    6
 17609 ;; This function calls:
 17610 ;;		Nothing
 17611 ;; This function is called by:
 17612 ;;		_efgtoa
 17613 ;; This function uses a reentrant model
 17614 ;;
 17615                           
 17616                           	psect	text59
 17617  016154                     __ptext59:
 17618                           	opt callstack 0
 17619  016154                     ___awdiv:
 17620                           	opt callstack 0
 17621                           
 17622                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17623  016154  52E6               	movf	postinc1,f,c
 17624  016156  52E6               	movf	postinc1,f,c
 17625  016158  52E6               	movf	postinc1,f,c
 17626  01615A  52E6               	movf	postinc1,f,c
 17627                           
 17628                           ;stkvar	_sign @ sp[(-4)+2]
 17629                           
 17630                           ;incstack = 0
 17631  01615C  0EFE               	movlw	-2
 17632  01615E  6AE3               	clrf	plusw1,c
 17633                           
 17634                           ;stkvar	_divisor @ sp[(-4)+-4]
 17635  016160  0EF9               	movlw	-7
 17636  016162  AEE3               	btfss	plusw1,7,c
 17637  016164  D009               	goto	l10158
 17638                           
 17639                           ;stkvar	_divisor @ sp[(-4)+-4]
 17640                           ;stkvar	_divisor @ sp[(-4)+-4]
 17641  016166  0EF8               	movlw	-8
 17642  016168  6CE3               	negf	plusw1,c
 17643  01616A  0EF9               	movlw	-7
 17644  01616C  1EE3               	comf	plusw1,f,c
 17645  01616E  B0D8               	btfsc	status,0,c
 17646  016170  2AE3               	incf	plusw1,f,c
 17647                           
 17648                           ;stkvar	_sign @ sp[(-4)+2]
 17649  016172  0EFE               	movlw	-2
 17650  016174  6AE3               	clrf	plusw1,c
 17651  016176  2AE3               	incf	plusw1,f,c
 17652  016178                     l10158:
 17653                           
 17654                           ;stkvar	_dividend @ sp[(-4)+-2]
 17655  016178  0EFB               	movlw	-5
 17656  01617A  AEE3               	btfss	plusw1,7,c
 17657  01617C  D008               	goto	l10164
 17658                           
 17659                           ;stkvar	_dividend @ sp[(-4)+-2]
 17660                           ;stkvar	_dividend @ sp[(-4)+-2]
 17661  01617E  0EFA               	movlw	-6
 17662  016180  6CE3               	negf	plusw1,c
 17663  016182  0EFB               	movlw	-5
 17664  016184  1EE3               	comf	plusw1,f,c
 17665  016186  B0D8               	btfsc	status,0,c
 17666  016188  2AE3               	incf	plusw1,f,c
 17667                           
 17668                           ;stkvar	_sign @ sp[(-4)+2]
 17669  01618A  0EFE               	movlw	-2
 17670  01618C  70E3               	btg	plusw1,0,c
 17671  01618E                     l10164:
 17672                           
 17673                           ;stkvar	_quotient @ sp[(-4)+0]
 17674  01618E  0EFC               	movlw	-4
 17675  016190  6AE3               	clrf	plusw1,c
 17676  016192  0EFD               	movlw	-3
 17677  016194  6AE3               	clrf	plusw1,c
 17678                           
 17679                           ;stkvar	_divisor @ sp[(-4)+-4]
 17680  016196  0EF8               	movlw	-8
 17681  016198  006F FF8C  F032    	movff	plusw1,btemp
 17682  01619E  0EF9               	movlw	-7
 17683  0161A0  50E3               	movf	plusw1,w,c
 17684  0161A2  1032               	iorwf	btemp^0,w,c
 17685  0161A4  B4D8               	btfsc	status,2,c
 17686  0161A6  D066               	goto	u10410
 17687                           
 17688                           ;stkvar	_counter @ sp[(-4)+3]
 17689  0161A8  0EFF               	movlw	-1
 17690  0161AA  6AE3               	clrf	plusw1,c
 17691  0161AC  D012               	goto	L15
 17692  0161AE                     l10170:
 17693                           
 17694                           ;stkvar	_divisor @ sp[(-4)+-4]
 17695  0161AE  0EF8               	movlw	-8
 17696  0161B0  50E3               	movf	plusw1,w,c
 17697  0161B2  90D8               	bcf	status,0,c
 17698  0161B4  34E8               	rlcf	wreg,w,c
 17699  0161B6  6E32               	movwf	btemp^0,c
 17700  0161B8  0EF8               	movlw	-8
 17701  0161BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17702  0161C0  0EF9               	movlw	-7
 17703  0161C2  50E3               	movf	plusw1,w,c
 17704  0161C4  34E8               	rlcf	wreg,w,c
 17705  0161C6  6E32               	movwf	btemp^0,c
 17706  0161C8  0EF9               	movlw	-7
 17707  0161CA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17708                           
 17709                           ;stkvar	_counter @ sp[(-4)+3]
 17710  0161D0  0EFF               	movlw	-1
 17711  0161D2                     L15:
 17712  0161D2  2AE3               	incf	plusw1,f,c
 17713                           
 17714                           ;stkvar	_divisor @ sp[(-4)+-4]
 17715  0161D4  0EF9               	movlw	-7
 17716  0161D6  AEE3               	btfss	plusw1,7,c
 17717  0161D8  D7EA               	goto	l10170
 17718  0161DA                     u10390:
 17719                           
 17720                           ;stkvar	_quotient @ sp[(-4)+0]
 17721  0161DA  0EFC               	movlw	-4
 17722  0161DC  50E3               	movf	plusw1,w,c
 17723  0161DE  90D8               	bcf	status,0,c
 17724  0161E0  34E8               	rlcf	wreg,w,c
 17725  0161E2  6E32               	movwf	btemp^0,c
 17726  0161E4  0EFC               	movlw	-4
 17727  0161E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17728  0161EC  0EFD               	movlw	-3
 17729  0161EE  50E3               	movf	plusw1,w,c
 17730  0161F0  34E8               	rlcf	wreg,w,c
 17731  0161F2  6E32               	movwf	btemp^0,c
 17732  0161F4  0EFD               	movlw	-3
 17733  0161F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17734                           
 17735                           ;stkvar	_divisor @ sp[(-4)+-4]
 17736  0161FC  0EF8               	movlw	-8
 17737  0161FE  006F FF8C  F03C    	movff	plusw1,btemp+10
 17738  016204  0EF9               	movlw	-7
 17739  016206  006F FF8C  F03D    	movff	plusw1,btemp+11
 17740                           
 17741                           ;stkvar	_dividend @ sp[(-4)+-2]
 17742  01620C  0EFA               	movlw	-6
 17743  01620E  006F FF8C  F03A    	movff	plusw1,btemp+8
 17744  016214  0EFB               	movlw	-5
 17745  016216  006F FF8C  F03B    	movff	plusw1,btemp+9
 17746  01621C  503C               	movf	(btemp+10)^0,w,c
 17747  01621E  5C3A               	subwf	(btemp+8)^0,w,c
 17748  016220  503D               	movf	(btemp+11)^0,w,c
 17749  016222  583B               	subwfb	(btemp+9)^0,w,c
 17750  016224  A0D8               	btfss	status,0,c
 17751  016226  D016               	goto	l10184
 17752                           
 17753                           ;stkvar	_divisor @ sp[(-4)+-4]
 17754                           ;stkvar	_dividend @ sp[(-4)+-2]
 17755  016228  0EFA               	movlw	-6
 17756  01622A  50E3               	movf	plusw1,w,c
 17757  01622C  6E32               	movwf	btemp^0,c
 17758  01622E  0EF8               	movlw	-8
 17759  016230  50E3               	movf	plusw1,w,c
 17760  016232  5E32               	subwf	btemp^0,f,c
 17761  016234  0EFA               	movlw	-6
 17762  016236  0060  F0CB  FFE3   	movff	btemp,plusw1
 17763  01623C  0EFB               	movlw	-5
 17764  01623E  50E3               	movf	plusw1,w,c
 17765  016240  6E32               	movwf	btemp^0,c
 17766  016242  0EF9               	movlw	-7
 17767  016244  50E3               	movf	plusw1,w,c
 17768  016246  5A32               	subwfb	btemp^0,f,c
 17769  016248  0EFB               	movlw	-5
 17770  01624A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17771                           
 17772                           ;stkvar	_quotient @ sp[(-4)+0]
 17773  016250  0EFC               	movlw	-4
 17774  016252  80E3               	bsf	plusw1,0,c
 17775  016254                     l10184:
 17776                           
 17777                           ;stkvar	_divisor @ sp[(-4)+-4]
 17778  016254  90D8               	bcf	status,0,c
 17779  016256  0EF9               	movlw	-7
 17780  016258  32E3               	rrcf	plusw1,f,c
 17781  01625A  0EF8               	movlw	-8
 17782  01625C  32E3               	rrcf	plusw1,f,c
 17783                           
 17784                           ;stkvar	_counter @ sp[(-4)+3]
 17785  01625E  0EFF               	movlw	-1
 17786  016260  50E3               	movf	plusw1,w,c
 17787  016262  6E32               	movwf	btemp^0,c
 17788  016264  0E01               	movlw	1
 17789  016266  5E32               	subwf	btemp^0,f,c
 17790  016268  0EFF               	movlw	-1
 17791  01626A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17792  016270  A4D8               	btfss	status,2,c
 17793  016272  D7B3               	goto	u10390
 17794  016274                     u10410:
 17795                           
 17796                           ;stkvar	_sign @ sp[(-4)+2]
 17797  016274  0EFE               	movlw	-2
 17798  016276  50E3               	movf	plusw1,w,c
 17799  016278  B4D8               	btfsc	status,2,c
 17800  01627A  D006               	goto	l10192
 17801                           
 17802                           ;stkvar	_quotient @ sp[(-4)+0]
 17803                           ;stkvar	_quotient @ sp[(-4)+0]
 17804  01627C  0EFC               	movlw	-4
 17805  01627E  6CE3               	negf	plusw1,c
 17806  016280  0EFD               	movlw	-3
 17807  016282  1EE3               	comf	plusw1,f,c
 17808  016284  B0D8               	btfsc	status,0,c
 17809  016286  2AE3               	incf	plusw1,f,c
 17810  016288                     l10192:
 17811                           
 17812                           ;stkvar	_quotient @ sp[(-4)+0]
 17813  016288  0EFC               	movlw	-4
 17814  01628A  006F FF8C  F032    	movff	plusw1,btemp
 17815  016290  0EFD               	movlw	-3
 17816  016292  006F FF8C  F033    	movff	plusw1,btemp+1
 17817                           
 17818                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17819  016298  0EF8               	movlw	248
 17820  01629A  26E1               	addwf	fsr1l,f,c
 17821  01629C  0EFF               	movlw	255
 17822  01629E  22E2               	addwfc	fsr1h,f,c
 17823  0162A0  0012               	return		;funcret
 17824  0162A2                     __end_of___awdiv:
 17825                           	opt callstack 0
 17826                           
 17827 ;; *************** function _dtoa *****************
 17828 ;; Defined at:
 17829 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17830 ;; Parameters:    Size  Location     Type
 17831 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17832 ;;		 -> f(6), NULL(0), 
 17833 ;;  d               8  [STACK] long long 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;  n               8  [STACK] long long 
 17836 ;;  i               2  [STACK] int 
 17837 ;;  s               2  [STACK] int 
 17838 ;;  w               2  [STACK] int 
 17839 ;;  p               2  [STACK] int 
 17840 ;; Return value:  Size  Location     Type
 17841 ;;                  2  [STACK] int 
 17842 ;; Registers used:
 17843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17844 ;; Tracked objects:
 17845 ;;		On entry : 0/5
 17846 ;;		On exit  : 0/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17853 ;;Total ram usage:        0 bytes
 17854 ;; Hardware stack levels used:    1
 17855 ;; Hardware stack levels required when called:   11
 17856 ;; This function calls:
 17857 ;;		___aodiv
 17858 ;;		___aomod
 17859 ;;		_abs
 17860 ;;		_pad
 17861 ;; This function is called by:
 17862 ;;		_vfpfcnvrt
 17863 ;; This function uses a reentrant model
 17864 ;;
 17865                           
 17866                           	psect	text60
 17867  013CB2                     __ptext60:
 17868                           	opt callstack 0
 17869  013CB2                     _dtoa:
 17870                           	opt callstack 0
 17871                           
 17872                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17873  013CB2  0E12               	movlw	18
 17874  013CB4  26E1               	addwf	fsr1l,f,c
 17875  013CB6  0E00               	movlw	0
 17876  013CB8  22E2               	addwfc	fsr1h,f,c
 17877                           
 17878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17879                           ;stkvar	_d @ sp[(-18)+-10]
 17880                           
 17881                           ;incstack = 0
 17882  013CBA  0EE4               	movlw	228
 17883  013CBC  24E1               	addwf	fsr1l,w,c
 17884  013CBE  6ED9               	movwf	fsr2l,c
 17885  013CC0  0EFF               	movlw	255
 17886  013CC2  20E2               	addwfc	fsr1h,w,c
 17887  013CC4  6EDA               	movwf	fsr2h,c
 17888                           
 17889                           ;stkvar	_n @ sp[(-18)+2]
 17890  013CC6  0E08               	movlw	8
 17891  013CC8  6E32               	movwf	btemp^0,c
 17892  013CCA  0EF0               	movlw	-16
 17893  013CCC                     us1072999:
 17894  013CCC  006F FF7B FFE3     	movff	postinc2,plusw1
 17895  013CD2  28E8               	incf	wreg,w,c
 17896  013CD4  2E32               	decfsz	btemp^0,f,c
 17897  013CD6  D7FA               	bra	us1072999
 17898                           
 17899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17900                           ;stkvar	_n @ sp[(-18)+2]
 17901  013CD8  0EF7               	movlw	-9
 17902  013CDA  AEE3               	btfss	plusw1,7,c
 17903  013CDC  D002               	goto	u10730
 17904  013CDE  0E01               	movlw	1
 17905  013CE0  D001               	goto	u10740
 17906  013CE2                     u10730:
 17907  013CE2  0E00               	movlw	0
 17908  013CE4                     u10740:
 17909  013CE4  6E3C               	movwf	(btemp+10)^0,c
 17910  013CE6  6A3D               	clrf	(btemp+11)^0,c
 17911                           
 17912                           ;stkvar	_s @ sp[(-18)+12]
 17913  013CE8  0EFA               	movlw	-6
 17914  013CEA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17915  013CF0  0EFB               	movlw	-5
 17916  013CF2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17917                           
 17918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17919                           ;stkvar	_s @ sp[(-18)+12]
 17920  013CF8  0EFA               	movlw	-6
 17921  013CFA  006F FF8C  F032    	movff	plusw1,btemp
 17922  013D00  0EFB               	movlw	-5
 17923  013D02  50E3               	movf	plusw1,w,c
 17924  013D04  1032               	iorwf	btemp^0,w,c
 17925  013D06  B4D8               	btfsc	status,2,c
 17926  013D08  D025               	goto	u10760
 17927                           
 17928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17929                           ;stkvar	_n @ sp[(-18)+2]
 17930                           ;stkvar	_n @ sp[(-18)+2]
 17931  013D0A  0EF0               	movlw	-16
 17932  013D0C  6CE3               	negf	plusw1,c
 17933  013D0E  0EF1               	movlw	-15
 17934  013D10  1EE3               	comf	plusw1,f,c
 17935  013D12  0EF2               	movlw	-14
 17936  013D14  1EE3               	comf	plusw1,f,c
 17937  013D16  0EF3               	movlw	-13
 17938  013D18  1EE3               	comf	plusw1,f,c
 17939  013D1A  0EF4               	movlw	-12
 17940  013D1C  1EE3               	comf	plusw1,f,c
 17941  013D1E  0EF5               	movlw	-11
 17942  013D20  1EE3               	comf	plusw1,f,c
 17943  013D22  0EF6               	movlw	-10
 17944  013D24  1EE3               	comf	plusw1,f,c
 17945  013D26  0EF7               	movlw	-9
 17946  013D28  1EE3               	comf	plusw1,f,c
 17947  013D2A  E314               	bnc	u10760
 17948  013D2C  0EF1               	movlw	-15
 17949  013D2E  2AE3               	incf	plusw1,f,c
 17950  013D30  E311               	bnc	u10760
 17951  013D32  0EF2               	movlw	-14
 17952  013D34  2AE3               	incf	plusw1,f,c
 17953  013D36  E30E               	bnc	u10760
 17954  013D38  0EF3               	movlw	-13
 17955  013D3A  2AE3               	incf	plusw1,f,c
 17956  013D3C  E30B               	bnc	u10760
 17957  013D3E  0EF4               	movlw	-12
 17958  013D40  2AE3               	incf	plusw1,f,c
 17959  013D42  E308               	bnc	u10760
 17960  013D44  0EF5               	movlw	-11
 17961  013D46  2AE3               	incf	plusw1,f,c
 17962  013D48  E305               	bnc	u10760
 17963  013D4A  0EF6               	movlw	-10
 17964  013D4C  2AE3               	incf	plusw1,f,c
 17965  013D4E  E302               	bnc	u10760
 17966  013D50  0EF7               	movlw	-9
 17967  013D52  2AE3               	incf	plusw1,f,c
 17968  013D54                     u10760:
 17969                           
 17970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17971  013D54  AE1E               	btfss	(_prec+1)^0,7,c
 17972                           
 17973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17974  013D56  921F               	bcf	_flags^0,1,c
 17975                           
 17976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17977  013D58  BE1E               	btfsc	(_prec+1)^0,7,c
 17978  013D5A  D005               	goto	u10780
 17979  013D5C  501E               	movf	(_prec+1)^0,w,c
 17980  013D5E  E110               	bnz	l10368
 17981  013D60  041D               	decf	_prec^0,w,c
 17982  013D62  B0D8               	btfsc	status,0,c
 17983  013D64  D00D               	goto	l10368
 17984  013D66                     u10780:
 17985  013D66  0E01               	movlw	1
 17986  013D68  6E3C               	movwf	(btemp+10)^0,c
 17987  013D6A  0E00               	movlw	0
 17988  013D6C  6E3D               	movwf	(btemp+11)^0,c
 17989                           
 17990                           ;stkvar	_p @ sp[(-18)+16]
 17991  013D6E  0EFE               	movlw	-2
 17992  013D70  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17993  013D76  0EFF               	movlw	-1
 17994  013D78  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17995  013D7E  D008               	goto	l1835
 17996  013D80                     l10368:
 17997                           
 17998                           ;stkvar	_p @ sp[(-18)+16]
 17999  013D80  0EFE               	movlw	-2
 18000  013D82  0060  F077  FFE3   	movff	_prec,plusw1
 18001  013D88  0EFF               	movlw	-1
 18002  013D8A  0060  F07B  FFE3   	movff	_prec+1,plusw1
 18003  013D90                     l1835:
 18004                           
 18005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18006                           ;stkvar	_w @ sp[(-18)+14]
 18007  013D90  0EFC               	movlw	-4
 18008  013D92  0060  F06F  FFE3   	movff	_width,plusw1
 18009  013D98  0EFD               	movlw	-3
 18010  013D9A  0060  F073  FFE3   	movff	_width+1,plusw1
 18011                           
 18012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18013                           ;stkvar	_s @ sp[(-18)+12]
 18014  013DA0  0EFA               	movlw	-6
 18015  013DA2  006F FF8C  F032    	movff	plusw1,btemp
 18016  013DA8  0EFB               	movlw	-5
 18017  013DAA  50E3               	movf	plusw1,w,c
 18018  013DAC  1032               	iorwf	btemp^0,w,c
 18019  013DAE  A4D8               	btfss	status,2,c
 18020  013DB0  D002               	goto	u10800
 18021  013DB2  A41F               	btfss	_flags^0,2,c
 18022  013DB4  D00A               	goto	l10376
 18023  013DB6                     u10800:
 18024                           
 18025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18026                           ;stkvar	_w @ sp[(-18)+14]
 18027  013DB6  50E1               	movf	fsr1l,w,c
 18028  013DB8  0FFC               	addlw	-4
 18029  013DBA  6ED9               	movwf	fsr2l,c
 18030  013DBC  50E2               	movf	fsr1h,w,c
 18031  013DBE  6EDA               	movwf	fsr2h,c
 18032  013DC0  0EFF               	movlw	255
 18033  013DC2  22DA               	addwfc	fsr2h,f,c
 18034  013DC4  06DE               	decf	postinc2,f,c
 18035  013DC6  0E00               	movlw	0
 18036  013DC8  5ADD               	subwfb	postdec2,f,c
 18037  013DCA                     l10376:
 18038                           
 18039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18040  013DCA  0E4F               	movlw	79
 18041  013DCC  6E3C               	movwf	(btemp+10)^0,c
 18042  013DCE  0E00               	movlw	0
 18043  013DD0  6E3D               	movwf	(btemp+11)^0,c
 18044                           
 18045                           ;stkvar	_i @ sp[(-18)+10]
 18046  013DD2  0EF8               	movlw	-8
 18047  013DD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18048  013DDA  0EF9               	movlw	-7
 18049  013DDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18050                           
 18051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18052  013DE2  0102               	movlb	2	; () banked
 18053  013DE4  6B8F               	clrf	(_dbuf+79)& (0+255),b
 18054                           
 18055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18056  013DE6  D109               	goto	l10390
 18057  013DE8                     l10380:
 18058                           
 18059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18060                           ;stkvar	_i @ sp[(-18)+10]
 18061  013DE8  50E1               	movf	fsr1l,w,c
 18062  013DEA  0FF8               	addlw	-8
 18063  013DEC  6ED9               	movwf	fsr2l,c
 18064  013DEE  50E2               	movf	fsr1h,w,c
 18065  013DF0  6EDA               	movwf	fsr2h,c
 18066  013DF2  0EFF               	movlw	255
 18067  013DF4  22DA               	addwfc	fsr2h,f,c
 18068  013DF6  06DE               	decf	postinc2,f,c
 18069  013DF8  0E00               	movlw	0
 18070  013DFA  5ADD               	subwfb	postdec2,f,c
 18071                           
 18072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18073  013DFC  0E0A               	movlw	10
 18074  013DFE  6EE6               	movwf	postinc1,c
 18075  013E00  0E00               	movlw	0
 18076  013E02  6EE6               	movwf	postinc1,c
 18077  013E04  0E00               	movlw	0
 18078  013E06  6EE6               	movwf	postinc1,c
 18079  013E08  0E00               	movlw	0
 18080  013E0A  6EE6               	movwf	postinc1,c
 18081  013E0C  0E00               	movlw	0
 18082  013E0E  6EE6               	movwf	postinc1,c
 18083  013E10  0E00               	movlw	0
 18084  013E12  6EE6               	movwf	postinc1,c
 18085  013E14  0E00               	movlw	0
 18086  013E16  6EE6               	movwf	postinc1,c
 18087  013E18  0E00               	movlw	0
 18088  013E1A  6EE6               	movwf	postinc1,c
 18089                           
 18090                           ;stkvar	_n @ sp[(-26)+2]
 18091  013E1C  50E1               	movf	fsr1l,w,c
 18092  013E1E  0FE8               	addlw	-24
 18093  013E20  6ED9               	movwf	fsr2l,c
 18094  013E22  50E2               	movf	fsr1h,w,c
 18095  013E24  6EDA               	movwf	fsr2h,c
 18096  013E26  0EFF               	movlw	255
 18097  013E28  22DA               	addwfc	fsr2h,f,c
 18098  013E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 18099  013E30  006F FF7B FFE6     	movff	postinc2,postinc1
 18100  013E36  006F FF7B FFE6     	movff	postinc2,postinc1
 18101  013E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 18102  013E42  006F FF7B FFE6     	movff	postinc2,postinc1
 18103  013E48  006F FF7B FFE6     	movff	postinc2,postinc1
 18104  013E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 18105  013E54  006F FF7B FFE6     	movff	postinc2,postinc1
 18106  013E5A  EC7B  F0A9         	call	___aomod	;wreg free
 18107  013E5E  52E5               	movf	postdec1,f,c
 18108  013E60  006F FF9C  F049    	movff	indf1,btemp+23
 18109  013E66  52E5               	movf	postdec1,f,c
 18110  013E68  006F FF9C  F048    	movff	indf1,btemp+22
 18111  013E6E  52E5               	movf	postdec1,f,c
 18112  013E70  006F FF9C  F047    	movff	indf1,btemp+21
 18113  013E76  52E5               	movf	postdec1,f,c
 18114  013E78  006F FF9C  F046    	movff	indf1,btemp+20
 18115  013E7E  52E5               	movf	postdec1,f,c
 18116  013E80  006F FF9C  F045    	movff	indf1,btemp+19
 18117  013E86  52E5               	movf	postdec1,f,c
 18118  013E88  006F FF9C  F044    	movff	indf1,btemp+18
 18119  013E8E  52E5               	movf	postdec1,f,c
 18120  013E90  006F FF9C  F043    	movff	indf1,btemp+17
 18121  013E96  52E5               	movf	postdec1,f,c
 18122  013E98  006F FF9C  F042    	movff	indf1,btemp+16
 18123  013E9E  0EF8               	movlw	248
 18124  013EA0  26E1               	addwf	fsr1l,f,c
 18125  013EA2  0EFF               	movlw	255
 18126  013EA4  22E2               	addwfc	fsr1h,f,c
 18127  013EA6  0060  F108  F03C   	movff	btemp+16,btemp+10
 18128  013EAC  0060  F10C  F03D   	movff	btemp+17,btemp+11
 18129  013EB2  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18130  013EB8  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18131  013EBE  ECAE  F0BD         	call	_abs	;wreg free
 18132  013EC2  0E30               	movlw	48
 18133  013EC4  2632               	addwf	btemp^0,f,c
 18134                           
 18135                           ;stkvar	_i @ sp[(-18)+10]
 18136  013EC6  0EF8               	movlw	-8
 18137  013EC8  006F FF8C  F03C    	movff	plusw1,btemp+10
 18138  013ECE  0EF9               	movlw	-7
 18139  013ED0  006F FF8C  F03D    	movff	plusw1,btemp+11
 18140  013ED6  0E40               	movlw	low _dbuf
 18141  013ED8  243C               	addwf	(btemp+10)^0,w,c
 18142  013EDA  6ED9               	movwf	fsr2l,c
 18143  013EDC  0E02               	movlw	high _dbuf
 18144  013EDE  203D               	addwfc	(btemp+11)^0,w,c
 18145  013EE0  6EDA               	movwf	fsr2h,c
 18146  013EE2  0060  F0CB  FFDF   	movff	btemp,indf2
 18147                           
 18148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18149                           ;stkvar	_p @ sp[(-18)+16]
 18150  013EE8  50E1               	movf	fsr1l,w,c
 18151  013EEA  0FFE               	addlw	-2
 18152  013EEC  6ED9               	movwf	fsr2l,c
 18153  013EEE  50E2               	movf	fsr1h,w,c
 18154  013EF0  6EDA               	movwf	fsr2h,c
 18155  013EF2  0EFF               	movlw	255
 18156  013EF4  22DA               	addwfc	fsr2h,f,c
 18157  013EF6  06DE               	decf	postinc2,f,c
 18158  013EF8  0E00               	movlw	0
 18159  013EFA  5ADD               	subwfb	postdec2,f,c
 18160                           
 18161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18162                           ;stkvar	_w @ sp[(-18)+14]
 18163  013EFC  50E1               	movf	fsr1l,w,c
 18164  013EFE  0FFC               	addlw	-4
 18165  013F00  6ED9               	movwf	fsr2l,c
 18166  013F02  50E2               	movf	fsr1h,w,c
 18167  013F04  6EDA               	movwf	fsr2h,c
 18168  013F06  0EFF               	movlw	255
 18169  013F08  22DA               	addwfc	fsr2h,f,c
 18170  013F0A  06DE               	decf	postinc2,f,c
 18171  013F0C  0E00               	movlw	0
 18172  013F0E  5ADD               	subwfb	postdec2,f,c
 18173                           
 18174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18175  013F10  0E0A               	movlw	10
 18176  013F12  6EE6               	movwf	postinc1,c
 18177  013F14  0E00               	movlw	0
 18178  013F16  6EE6               	movwf	postinc1,c
 18179  013F18  0E00               	movlw	0
 18180  013F1A  6EE6               	movwf	postinc1,c
 18181  013F1C  0E00               	movlw	0
 18182  013F1E  6EE6               	movwf	postinc1,c
 18183  013F20  0E00               	movlw	0
 18184  013F22  6EE6               	movwf	postinc1,c
 18185  013F24  0E00               	movlw	0
 18186  013F26  6EE6               	movwf	postinc1,c
 18187  013F28  0E00               	movlw	0
 18188  013F2A  6EE6               	movwf	postinc1,c
 18189  013F2C  0E00               	movlw	0
 18190  013F2E  6EE6               	movwf	postinc1,c
 18191                           
 18192                           ;stkvar	_n @ sp[(-26)+2]
 18193  013F30  50E1               	movf	fsr1l,w,c
 18194  013F32  0FE8               	addlw	-24
 18195  013F34  6ED9               	movwf	fsr2l,c
 18196  013F36  50E2               	movf	fsr1h,w,c
 18197  013F38  6EDA               	movwf	fsr2h,c
 18198  013F3A  0EFF               	movlw	255
 18199  013F3C  22DA               	addwfc	fsr2h,f,c
 18200  013F3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18201  013F44  006F FF7B FFE6     	movff	postinc2,postinc1
 18202  013F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 18203  013F50  006F FF7B FFE6     	movff	postinc2,postinc1
 18204  013F56  006F FF7B FFE6     	movff	postinc2,postinc1
 18205  013F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 18206  013F62  006F FF7B FFE6     	movff	postinc2,postinc1
 18207  013F68  006F FF7B FFE6     	movff	postinc2,postinc1
 18208  013F6E  EC01  F0A7         	call	___aodiv	;wreg free
 18209  013F72  52E5               	movf	postdec1,f,c
 18210  013F74  006F FF9C  F049    	movff	indf1,btemp+23
 18211  013F7A  52E5               	movf	postdec1,f,c
 18212  013F7C  006F FF9C  F048    	movff	indf1,btemp+22
 18213  013F82  52E5               	movf	postdec1,f,c
 18214  013F84  006F FF9C  F047    	movff	indf1,btemp+21
 18215  013F8A  52E5               	movf	postdec1,f,c
 18216  013F8C  006F FF9C  F046    	movff	indf1,btemp+20
 18217  013F92  52E5               	movf	postdec1,f,c
 18218  013F94  006F FF9C  F045    	movff	indf1,btemp+19
 18219  013F9A  52E5               	movf	postdec1,f,c
 18220  013F9C  006F FF9C  F044    	movff	indf1,btemp+18
 18221  013FA2  52E5               	movf	postdec1,f,c
 18222  013FA4  006F FF9C  F043    	movff	indf1,btemp+17
 18223  013FAA  52E5               	movf	postdec1,f,c
 18224  013FAC  006F FF9C  F042    	movff	indf1,btemp+16
 18225  013FB2  0EF8               	movlw	248
 18226  013FB4  26E1               	addwf	fsr1l,f,c
 18227  013FB6  0EFF               	movlw	255
 18228  013FB8  22E2               	addwfc	fsr1h,f,c
 18229                           
 18230                           ;stkvar	_n @ sp[(-18)+2]
 18231  013FBA  0EF0               	movlw	-16
 18232  013FBC  0060  F10B  FFE3   	movff	btemp+16,plusw1
 18233  013FC2  0EF1               	movlw	-15
 18234  013FC4  0060  F10F  FFE3   	movff	btemp+17,plusw1
 18235  013FCA  0EF2               	movlw	-14
 18236  013FCC  0060  F113  FFE3   	movff	btemp+18,plusw1
 18237  013FD2  0EF3               	movlw	-13
 18238  013FD4  0060  F117  FFE3   	movff	btemp+19,plusw1
 18239  013FDA  0EF4               	movlw	-12
 18240  013FDC  0060  F11B  FFE3   	movff	btemp+20,plusw1
 18241  013FE2  0EF5               	movlw	-11
 18242  013FE4  0060  F11F  FFE3   	movff	btemp+21,plusw1
 18243  013FEA  0EF6               	movlw	-10
 18244  013FEC  0060  F123  FFE3   	movff	btemp+22,plusw1
 18245  013FF2  0EF7               	movlw	-9
 18246  013FF4  0060  F127  FFE3   	movff	btemp+23,plusw1
 18247  013FFA                     l10390:
 18248                           
 18249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18250                           ;stkvar	_i @ sp[(-18)+10]
 18251  013FFA  0EF9               	movlw	-7
 18252  013FFC  BEE3               	btfsc	plusw1,7,c
 18253  013FFE  D036               	goto	u10850
 18254  014000  0EF9               	movlw	-7
 18255  014002  50E3               	movf	plusw1,w,c
 18256  014004  E104               	bnz	u10810
 18257  014006  0EF8               	movlw	-8
 18258  014008  04E3               	decf	plusw1,w,c
 18259  01400A  A0D8               	btfss	status,0,c
 18260  01400C  D02F               	goto	u10850
 18261  01400E                     u10810:
 18262                           
 18263                           ;stkvar	_n @ sp[(-18)+2]
 18264  01400E  0EF0               	movlw	-16
 18265  014010  50E3               	movf	plusw1,w,c
 18266  014012  E115               	bnz	u10821
 18267  014014  0EF1               	movlw	-15
 18268  014016  50E3               	movf	plusw1,w,c
 18269  014018  E112               	bnz	u10821
 18270  01401A  0EF2               	movlw	-14
 18271  01401C  50E3               	movf	plusw1,w,c
 18272  01401E  E10F               	bnz	u10821
 18273  014020  0EF3               	movlw	-13
 18274  014022  50E3               	movf	plusw1,w,c
 18275  014024  E10C               	bnz	u10821
 18276  014026  0EF4               	movlw	-12
 18277  014028  50E3               	movf	plusw1,w,c
 18278  01402A  E109               	bnz	u10821
 18279  01402C  0EF5               	movlw	-11
 18280  01402E  50E3               	movf	plusw1,w,c
 18281  014030  E106               	bnz	u10821
 18282  014032  0EF6               	movlw	-10
 18283  014034  50E3               	movf	plusw1,w,c
 18284  014036  E103               	bnz	u10821
 18285  014038  0EF7               	movlw	-9
 18286  01403A  50E3               	movf	plusw1,w,c
 18287  01403C  A4D8               	btfss	status,2,c
 18288  01403E                     u10821:
 18289  01403E  D6D4               	goto	l10380
 18290                           
 18291                           ;stkvar	_p @ sp[(-18)+16]
 18292  014040  0EFF               	movlw	-1
 18293  014042  BEE3               	btfsc	plusw1,7,c
 18294  014044  D007               	goto	u10830
 18295  014046  0EFF               	movlw	-1
 18296  014048  50E3               	movf	plusw1,w,c
 18297  01404A  E103               	bnz	u10831
 18298  01404C  0EFE               	movlw	-2
 18299  01404E  04E3               	decf	plusw1,w,c
 18300  014050  B0D8               	btfsc	status,0,c
 18301  014052                     u10831:
 18302  014052  D6CA               	goto	l10380
 18303  014054                     u10830:
 18304                           
 18305                           ;stkvar	_w @ sp[(-18)+14]
 18306  014054  0EFD               	movlw	-3
 18307  014056  BEE3               	btfsc	plusw1,7,c
 18308  014058  D009               	goto	u10850
 18309  01405A  0EFD               	movlw	-3
 18310  01405C  50E3               	movf	plusw1,w,c
 18311  01405E  E104               	bnz	u10840
 18312  014060  0EFC               	movlw	-4
 18313  014062  04E3               	decf	plusw1,w,c
 18314  014064  A0D8               	btfss	status,0,c
 18315  014066  D002               	goto	u10850
 18316  014068                     u10840:
 18317  014068  B21F               	btfsc	_flags^0,1,c
 18318  01406A  D6BE               	goto	l10380
 18319  01406C                     u10850:
 18320                           
 18321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18322                           ;stkvar	_s @ sp[(-18)+12]
 18323  01406C  0EFA               	movlw	-6
 18324  01406E  006F FF8C  F032    	movff	plusw1,btemp
 18325  014074  0EFB               	movlw	-5
 18326  014076  50E3               	movf	plusw1,w,c
 18327  014078  1032               	iorwf	btemp^0,w,c
 18328  01407A  A4D8               	btfss	status,2,c
 18329  01407C  D002               	goto	u10870
 18330  01407E  A41F               	btfss	_flags^0,2,c
 18331  014080  D033               	goto	l10414
 18332  014082                     u10870:
 18333                           
 18334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18335                           ;stkvar	_i @ sp[(-18)+10]
 18336  014082  50E1               	movf	fsr1l,w,c
 18337  014084  0FF8               	addlw	-8
 18338  014086  6ED9               	movwf	fsr2l,c
 18339  014088  50E2               	movf	fsr1h,w,c
 18340  01408A  6EDA               	movwf	fsr2h,c
 18341  01408C  0EFF               	movlw	255
 18342  01408E  22DA               	addwfc	fsr2h,f,c
 18343  014090  06DE               	decf	postinc2,f,c
 18344  014092  0E00               	movlw	0
 18345  014094  5ADD               	subwfb	postdec2,f,c
 18346                           
 18347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18348                           ;stkvar	_s @ sp[(-18)+12]
 18349  014096  0EFA               	movlw	-6
 18350  014098  006F FF8C  F032    	movff	plusw1,btemp
 18351  01409E  0EFB               	movlw	-5
 18352  0140A0  50E3               	movf	plusw1,w,c
 18353  0140A2  1032               	iorwf	btemp^0,w,c
 18354  0140A4  A4D8               	btfss	status,2,c
 18355  0140A6  D002               	goto	l10410
 18356  0140A8  0E2B               	movlw	43
 18357  0140AA  D001               	goto	L16
 18358  0140AC                     l10410:
 18359  0140AC  0E2D               	movlw	45
 18360  0140AE                     L16:
 18361  0140AE  6E3C               	movwf	(btemp+10)^0,c
 18362  0140B0  0E00               	movlw	0
 18363  0140B2  6E3D               	movwf	(btemp+11)^0,c
 18364                           
 18365                           ;stkvar	_dtoa$4356 @ sp[(-18)+0]
 18366  0140B4  0EEE               	movlw	-18
 18367  0140B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18368  0140BC  0EEF               	movlw	-17
 18369  0140BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18370                           
 18371                           ;stkvar	_dtoa$4356 @ sp[(-18)+0]
 18372                           ;stkvar	_i @ sp[(-18)+10]
 18373  0140C4  0EF8               	movlw	-8
 18374  0140C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18375  0140CC  0EF9               	movlw	-7
 18376  0140CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18377  0140D4  0E40               	movlw	low _dbuf
 18378  0140D6  243C               	addwf	(btemp+10)^0,w,c
 18379  0140D8  6ED9               	movwf	fsr2l,c
 18380  0140DA  0E02               	movlw	high _dbuf
 18381  0140DC  203D               	addwfc	(btemp+11)^0,w,c
 18382  0140DE  6EDA               	movwf	fsr2h,c
 18383  0140E0  0EEE               	movlw	-18
 18384  0140E2  006F FF8F FFDF     	movff	plusw1,indf2
 18385  0140E8                     l10414:
 18386                           
 18387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18388                           ;stkvar	_w @ sp[(-18)+14]
 18389  0140E8  0EFC               	movlw	-4
 18390  0140EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18391  0140F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18392                           
 18393                           ;stkvar	_i @ sp[(-20)+10]
 18394  0140F6  0E40               	movlw	low _dbuf
 18395  0140F8  6E3C               	movwf	(btemp+10)^0,c
 18396  0140FA  0E02               	movlw	high _dbuf
 18397  0140FC  6E3D               	movwf	(btemp+11)^0,c
 18398  0140FE  0EF6               	movlw	-10
 18399  014100  50E3               	movf	plusw1,w,c
 18400  014102  263C               	addwf	(btemp+10)^0,f,c
 18401  014104  0EF7               	movlw	-9
 18402  014106  50E3               	movf	plusw1,w,c
 18403  014108  223D               	addwfc	(btemp+11)^0,f,c
 18404  01410A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18405  014110  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18406                           
 18407                           ;stkvar	_fp @ sp[(-22)+-2]
 18408  014116  0EE8               	movlw	-24
 18409  014118  006F FF8F FFE6     	movff	plusw1,postinc1
 18410  01411E  006F FF8F FFE6     	movff	plusw1,postinc1
 18411  014124  ECAA  F0B3         	call	_pad	;wreg free
 18412                           
 18413                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18414  014128  0EE4               	movlw	228
 18415  01412A  26E1               	addwf	fsr1l,f,c
 18416  01412C  0EFF               	movlw	255
 18417  01412E  22E2               	addwfc	fsr1h,f,c
 18418  014130  0012               	return		;funcret
 18419  014132                     __end_of_dtoa:
 18420                           	opt callstack 0
 18421                           
 18422 ;; *************** function _abs *****************
 18423 ;; Defined at:
 18424 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18425 ;; Parameters:    Size  Location     Type
 18426 ;;  a               2  [STACK] int 
 18427 ;; Auto vars:     Size  Location     Type
 18428 ;;		None
 18429 ;; Return value:  Size  Location     Type
 18430 ;;                  2  [STACK] int 
 18431 ;; Registers used:
 18432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18433 ;; Tracked objects:
 18434 ;;		On entry : 0/2
 18435 ;;		On exit  : 0/0
 18436 ;;		Unchanged: 0/0
 18437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18442 ;;Total ram usage:        0 bytes
 18443 ;; Hardware stack levels used:    1
 18444 ;; Hardware stack levels required when called:    6
 18445 ;; This function calls:
 18446 ;;		Nothing
 18447 ;; This function is called by:
 18448 ;;		_dtoa
 18449 ;; This function uses a reentrant model
 18450 ;;
 18451                           
 18452                           	psect	text61
 18453  017B5C                     __ptext61:
 18454                           	opt callstack 0
 18455  017B5C                     _abs:
 18456                           	opt callstack 17
 18457                           
 18458                           ;stkvar	_a @ sp[(0)+-2]
 18459                           
 18460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18461                           ;incstack = 0
 18462  017B5C  0EFF               	movlw	-1
 18463  017B5E  BEE3               	btfsc	plusw1,7,c
 18464  017B60  D007               	goto	u9370
 18465  017B62  0EFF               	movlw	-1
 18466  017B64  50E3               	movf	plusw1,w,c
 18467  017B66  E112               	bnz	l9646
 18468  017B68  0EFE               	movlw	-2
 18469  017B6A  04E3               	decf	plusw1,w,c
 18470  017B6C  B0D8               	btfsc	status,0,c
 18471  017B6E  D00E               	goto	l9646
 18472  017B70                     u9370:
 18473                           
 18474                           ;stkvar	_a @ sp[(0)+-2]
 18475  017B70  0EFE               	movlw	-2
 18476  017B72  006F FF8C  F032    	movff	plusw1,btemp
 18477  017B78  1E32               	comf	btemp^0,f,c
 18478  017B7A  0EFF               	movlw	-1
 18479  017B7C  006F FF8C  F033    	movff	plusw1,btemp+1
 18480  017B82  1E33               	comf	(btemp+1)^0,f,c
 18481  017B84  2A32               	incf	btemp^0,f,c
 18482  017B86  B4D8               	btfsc	status,2,c
 18483  017B88  2A33               	incf	(btemp+1)^0,f,c
 18484  017B8A  D008               	goto	l2738
 18485  017B8C                     l9646:
 18486                           
 18487                           ;stkvar	_a @ sp[(0)+-2]
 18488  017B8C  0EFE               	movlw	-2
 18489  017B8E  006F FF8C  F032    	movff	plusw1,btemp
 18490  017B94  0EFF               	movlw	-1
 18491  017B96  006F FF8C  F033    	movff	plusw1,btemp+1
 18492  017B9C                     l2738:
 18493                           
 18494                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18495  017B9C  52E5               	movf	postdec1,f,c
 18496  017B9E  52E5               	movf	postdec1,f,c
 18497  017BA0  0012               	return		;funcret
 18498  017BA2                     __end_of_abs:
 18499                           	opt callstack 0
 18500                           
 18501 ;; *************** function ___aomod *****************
 18502 ;; Defined at:
 18503 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18504 ;; Parameters:    Size  Location     Type
 18505 ;;  dividend        8  [STACK] long long 
 18506 ;;  divisor         8  [STACK] long long 
 18507 ;; Auto vars:     Size  Location     Type
 18508 ;;  sign            1  [STACK] unsigned char 
 18509 ;;  counter         1  [STACK] unsigned char 
 18510 ;; Return value:  Size  Location     Type
 18511 ;;                  8  [STACK] long long 
 18512 ;; Registers used:
 18513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18514 ;; Tracked objects:
 18515 ;;		On entry : 0/2
 18516 ;;		On exit  : 0/0
 18517 ;;		Unchanged: 0/0
 18518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18523 ;;Total ram usage:        0 bytes
 18524 ;; Hardware stack levels used:    1
 18525 ;; Hardware stack levels required when called:    6
 18526 ;; This function calls:
 18527 ;;		Nothing
 18528 ;; This function is called by:
 18529 ;;		_dtoa
 18530 ;; This function uses a reentrant model
 18531 ;;
 18532                           
 18533                           	psect	text62
 18534  0152F6                     __ptext62:
 18535                           	opt callstack 0
 18536  0152F6                     ___aomod:
 18537                           	opt callstack 0
 18538                           
 18539                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18540  0152F6  52E6               	movf	postinc1,f,c
 18541  0152F8  52E6               	movf	postinc1,f,c
 18542                           
 18543                           ;stkvar	_sign @ sp[(-2)+0]
 18544                           
 18545                           ;incstack = 0
 18546  0152FA  0EFE               	movlw	-2
 18547  0152FC  6AE3               	clrf	plusw1,c
 18548                           
 18549                           ;stkvar	_dividend @ sp[(-2)+-8]
 18550  0152FE  0EFD               	movlw	-3
 18551  015300  AEE3               	btfss	plusw1,7,c
 18552  015302  D028               	goto	l9804
 18553                           
 18554                           ;stkvar	_dividend @ sp[(-2)+-8]
 18555                           ;stkvar	_dividend @ sp[(-2)+-8]
 18556  015304  0EF6               	movlw	-10
 18557  015306  6CE3               	negf	plusw1,c
 18558  015308  0EF7               	movlw	-9
 18559  01530A  1EE3               	comf	plusw1,f,c
 18560  01530C  0EF8               	movlw	-8
 18561  01530E  1EE3               	comf	plusw1,f,c
 18562  015310  0EF9               	movlw	-7
 18563  015312  1EE3               	comf	plusw1,f,c
 18564  015314  0EFA               	movlw	-6
 18565  015316  1EE3               	comf	plusw1,f,c
 18566  015318  0EFB               	movlw	-5
 18567  01531A  1EE3               	comf	plusw1,f,c
 18568  01531C  0EFC               	movlw	-4
 18569  01531E  1EE3               	comf	plusw1,f,c
 18570  015320  0EFD               	movlw	-3
 18571  015322  1EE3               	comf	plusw1,f,c
 18572  015324  E314               	bnc	u9800
 18573  015326  0EF7               	movlw	-9
 18574  015328  2AE3               	incf	plusw1,f,c
 18575  01532A  E311               	bnc	u9800
 18576  01532C  0EF8               	movlw	-8
 18577  01532E  2AE3               	incf	plusw1,f,c
 18578  015330  E30E               	bnc	u9800
 18579  015332  0EF9               	movlw	-7
 18580  015334  2AE3               	incf	plusw1,f,c
 18581  015336  E30B               	bnc	u9800
 18582  015338  0EFA               	movlw	-6
 18583  01533A  2AE3               	incf	plusw1,f,c
 18584  01533C  E308               	bnc	u9800
 18585  01533E  0EFB               	movlw	-5
 18586  015340  2AE3               	incf	plusw1,f,c
 18587  015342  E305               	bnc	u9800
 18588  015344  0EFC               	movlw	-4
 18589  015346  2AE3               	incf	plusw1,f,c
 18590  015348  E302               	bnc	u9800
 18591  01534A  0EFD               	movlw	-3
 18592  01534C  2AE3               	incf	plusw1,f,c
 18593  01534E                     u9800:
 18594                           
 18595                           ;stkvar	_sign @ sp[(-2)+0]
 18596  01534E  0EFE               	movlw	-2
 18597  015350  6AE3               	clrf	plusw1,c
 18598  015352  2AE3               	incf	plusw1,f,c
 18599  015354                     l9804:
 18600                           
 18601                           ;stkvar	_divisor @ sp[(-2)+-16]
 18602  015354  0EF5               	movlw	-11
 18603  015356  AEE3               	btfss	plusw1,7,c
 18604  015358  D025               	goto	u9820
 18605                           
 18606                           ;stkvar	_divisor @ sp[(-2)+-16]
 18607                           ;stkvar	_divisor @ sp[(-2)+-16]
 18608  01535A  0EEE               	movlw	-18
 18609  01535C  6CE3               	negf	plusw1,c
 18610  01535E  0EEF               	movlw	-17
 18611  015360  1EE3               	comf	plusw1,f,c
 18612  015362  0EF0               	movlw	-16
 18613  015364  1EE3               	comf	plusw1,f,c
 18614  015366  0EF1               	movlw	-15
 18615  015368  1EE3               	comf	plusw1,f,c
 18616  01536A  0EF2               	movlw	-14
 18617  01536C  1EE3               	comf	plusw1,f,c
 18618  01536E  0EF3               	movlw	-13
 18619  015370  1EE3               	comf	plusw1,f,c
 18620  015372  0EF4               	movlw	-12
 18621  015374  1EE3               	comf	plusw1,f,c
 18622  015376  0EF5               	movlw	-11
 18623  015378  1EE3               	comf	plusw1,f,c
 18624  01537A  E314               	bnc	u9820
 18625  01537C  0EEF               	movlw	-17
 18626  01537E  2AE3               	incf	plusw1,f,c
 18627  015380  E311               	bnc	u9820
 18628  015382  0EF0               	movlw	-16
 18629  015384  2AE3               	incf	plusw1,f,c
 18630  015386  E30E               	bnc	u9820
 18631  015388  0EF1               	movlw	-15
 18632  01538A  2AE3               	incf	plusw1,f,c
 18633  01538C  E30B               	bnc	u9820
 18634  01538E  0EF2               	movlw	-14
 18635  015390  2AE3               	incf	plusw1,f,c
 18636  015392  E308               	bnc	u9820
 18637  015394  0EF3               	movlw	-13
 18638  015396  2AE3               	incf	plusw1,f,c
 18639  015398  E305               	bnc	u9820
 18640  01539A  0EF4               	movlw	-12
 18641  01539C  2AE3               	incf	plusw1,f,c
 18642  01539E  E302               	bnc	u9820
 18643  0153A0  0EF5               	movlw	-11
 18644  0153A2  2AE3               	incf	plusw1,f,c
 18645  0153A4                     u9820:
 18646                           
 18647                           ;stkvar	_divisor @ sp[(-2)+-16]
 18648  0153A4  0EEE               	movlw	-18
 18649  0153A6  50E3               	movf	plusw1,w,c
 18650  0153A8  E116               	bnz	u9830
 18651  0153AA  0EEF               	movlw	-17
 18652  0153AC  50E3               	movf	plusw1,w,c
 18653  0153AE  E113               	bnz	u9830
 18654  0153B0  0EF0               	movlw	-16
 18655  0153B2  50E3               	movf	plusw1,w,c
 18656  0153B4  E110               	bnz	u9830
 18657  0153B6  0EF1               	movlw	-15
 18658  0153B8  50E3               	movf	plusw1,w,c
 18659  0153BA  E10D               	bnz	u9830
 18660  0153BC  0EF2               	movlw	-14
 18661  0153BE  50E3               	movf	plusw1,w,c
 18662  0153C0  E10A               	bnz	u9830
 18663  0153C2  0EF3               	movlw	-13
 18664  0153C4  50E3               	movf	plusw1,w,c
 18665  0153C6  E107               	bnz	u9830
 18666  0153C8  0EF4               	movlw	-12
 18667  0153CA  50E3               	movf	plusw1,w,c
 18668  0153CC  E104               	bnz	u9830
 18669  0153CE  0EF5               	movlw	-11
 18670  0153D0  50E3               	movf	plusw1,w,c
 18671  0153D2  B4D8               	btfsc	status,2,c
 18672  0153D4  D075               	goto	u9860
 18673  0153D6                     u9830:
 18674                           
 18675                           ;stkvar	_counter @ sp[(-2)+1]
 18676  0153D6  0EFF               	movlw	-1
 18677  0153D8  6AE3               	clrf	plusw1,c
 18678  0153DA  D012               	goto	L17
 18679  0153DC                     l9812:
 18680                           
 18681                           ;stkvar	_divisor @ sp[(-2)+-16]
 18682  0153DC  90D8               	bcf	status,0,c
 18683  0153DE  0EEE               	movlw	-18
 18684  0153E0  36E3               	rlcf	plusw1,f,c
 18685  0153E2  0EEF               	movlw	-17
 18686  0153E4  36E3               	rlcf	plusw1,f,c
 18687  0153E6  0EF0               	movlw	-16
 18688  0153E8  36E3               	rlcf	plusw1,f,c
 18689  0153EA  0EF1               	movlw	-15
 18690  0153EC  36E3               	rlcf	plusw1,f,c
 18691  0153EE  0EF2               	movlw	-14
 18692  0153F0  36E3               	rlcf	plusw1,f,c
 18693  0153F2  0EF3               	movlw	-13
 18694  0153F4  36E3               	rlcf	plusw1,f,c
 18695  0153F6  0EF4               	movlw	-12
 18696  0153F8  36E3               	rlcf	plusw1,f,c
 18697  0153FA  0EF5               	movlw	-11
 18698  0153FC  36E3               	rlcf	plusw1,f,c
 18699                           
 18700                           ;stkvar	_counter @ sp[(-2)+1]
 18701  0153FE  0EFF               	movlw	-1
 18702  015400                     L17:
 18703  015400  2AE3               	incf	plusw1,f,c
 18704                           
 18705                           ;stkvar	_divisor @ sp[(-2)+-16]
 18706  015402  0EF5               	movlw	-11
 18707  015404  AEE3               	btfss	plusw1,7,c
 18708  015406  D7EA               	goto	l9812
 18709  015408                     u9840:
 18710                           
 18711                           ;stkvar	_divisor @ sp[(-2)+-16]
 18712                           ;stkvar	_dividend @ sp[(-2)+-8]
 18713  015408  50E1               	movf	fsr1l,w,c
 18714  01540A  0FF6               	addlw	-10
 18715  01540C  6ED9               	movwf	fsr2l,c
 18716  01540E  50E2               	movf	fsr1h,w,c
 18717  015410  6EDA               	movwf	fsr2h,c
 18718  015412  0EFF               	movlw	255
 18719  015414  22DA               	addwfc	fsr2h,f,c
 18720  015416  0EEE               	movlw	-18
 18721  015418  50E3               	movf	plusw1,w,c
 18722  01541A  5CDE               	subwf	postinc2,w,c
 18723  01541C  0EEF               	movlw	-17
 18724  01541E  50E3               	movf	plusw1,w,c
 18725  015420  58DE               	subwfb	postinc2,w,c
 18726  015422  0EF0               	movlw	-16
 18727  015424  50E3               	movf	plusw1,w,c
 18728  015426  58DE               	subwfb	postinc2,w,c
 18729  015428  0EF1               	movlw	-15
 18730  01542A  50E3               	movf	plusw1,w,c
 18731  01542C  58DE               	subwfb	postinc2,w,c
 18732  01542E  0EF2               	movlw	-14
 18733  015430  50E3               	movf	plusw1,w,c
 18734  015432  58DE               	subwfb	postinc2,w,c
 18735  015434  0EF3               	movlw	-13
 18736  015436  50E3               	movf	plusw1,w,c
 18737  015438  58DE               	subwfb	postinc2,w,c
 18738  01543A  0EF4               	movlw	-12
 18739  01543C  50E3               	movf	plusw1,w,c
 18740  01543E  58DE               	subwfb	postinc2,w,c
 18741  015440  0EF5               	movlw	-11
 18742  015442  50E3               	movf	plusw1,w,c
 18743  015444  58DE               	subwfb	postinc2,w,c
 18744  015446  A0D8               	btfss	status,0,c
 18745  015448  D01F               	goto	l9820
 18746                           
 18747                           ;stkvar	_divisor @ sp[(-2)+-16]
 18748                           ;stkvar	_dividend @ sp[(-2)+-8]
 18749  01544A  50E1               	movf	fsr1l,w,c
 18750  01544C  0FF6               	addlw	-10
 18751  01544E  6ED9               	movwf	fsr2l,c
 18752  015450  50E2               	movf	fsr1h,w,c
 18753  015452  6EDA               	movwf	fsr2h,c
 18754  015454  0EFF               	movlw	255
 18755  015456  22DA               	addwfc	fsr2h,f,c
 18756  015458  0EEE               	movlw	-18
 18757  01545A  50E3               	movf	plusw1,w,c
 18758  01545C  5EDE               	subwf	postinc2,f,c
 18759  01545E  0EEF               	movlw	-17
 18760  015460  50E3               	movf	plusw1,w,c
 18761  015462  5ADE               	subwfb	postinc2,f,c
 18762  015464  0EF0               	movlw	-16
 18763  015466  50E3               	movf	plusw1,w,c
 18764  015468  5ADE               	subwfb	postinc2,f,c
 18765  01546A  0EF1               	movlw	-15
 18766  01546C  50E3               	movf	plusw1,w,c
 18767  01546E  5ADE               	subwfb	postinc2,f,c
 18768  015470  0EF2               	movlw	-14
 18769  015472  50E3               	movf	plusw1,w,c
 18770  015474  5ADE               	subwfb	postinc2,f,c
 18771  015476  0EF3               	movlw	-13
 18772  015478  50E3               	movf	plusw1,w,c
 18773  01547A  5ADE               	subwfb	postinc2,f,c
 18774  01547C  0EF4               	movlw	-12
 18775  01547E  50E3               	movf	plusw1,w,c
 18776  015480  5ADE               	subwfb	postinc2,f,c
 18777  015482  0EF5               	movlw	-11
 18778  015484  50E3               	movf	plusw1,w,c
 18779  015486  5ADE               	subwfb	postinc2,f,c
 18780  015488                     l9820:
 18781                           
 18782                           ;stkvar	_divisor @ sp[(-2)+-16]
 18783  015488  90D8               	bcf	status,0,c
 18784  01548A  0EF5               	movlw	-11
 18785  01548C  32E3               	rrcf	plusw1,f,c
 18786  01548E  0EF4               	movlw	-12
 18787  015490  32E3               	rrcf	plusw1,f,c
 18788  015492  0EF3               	movlw	-13
 18789  015494  32E3               	rrcf	plusw1,f,c
 18790  015496  0EF2               	movlw	-14
 18791  015498  32E3               	rrcf	plusw1,f,c
 18792  01549A  0EF1               	movlw	-15
 18793  01549C  32E3               	rrcf	plusw1,f,c
 18794  01549E  0EF0               	movlw	-16
 18795  0154A0  32E3               	rrcf	plusw1,f,c
 18796  0154A2  0EEF               	movlw	-17
 18797  0154A4  32E3               	rrcf	plusw1,f,c
 18798  0154A6  0EEE               	movlw	-18
 18799  0154A8  32E3               	rrcf	plusw1,f,c
 18800                           
 18801                           ;stkvar	_counter @ sp[(-2)+1]
 18802  0154AA  0EFF               	movlw	-1
 18803  0154AC  50E3               	movf	plusw1,w,c
 18804  0154AE  6E32               	movwf	btemp^0,c
 18805  0154B0  0E01               	movlw	1
 18806  0154B2  5E32               	subwf	btemp^0,f,c
 18807  0154B4  0EFF               	movlw	-1
 18808  0154B6  0060  F0CB  FFE3   	movff	btemp,plusw1
 18809  0154BC  A4D8               	btfss	status,2,c
 18810  0154BE  D7A4               	goto	u9840
 18811  0154C0                     u9860:
 18812                           
 18813                           ;stkvar	_sign @ sp[(-2)+0]
 18814  0154C0  0EFE               	movlw	-2
 18815  0154C2  50E3               	movf	plusw1,w,c
 18816  0154C4  B4D8               	btfsc	status,2,c
 18817  0154C6  D025               	goto	u9880
 18818                           
 18819                           ;stkvar	_dividend @ sp[(-2)+-8]
 18820                           ;stkvar	_dividend @ sp[(-2)+-8]
 18821  0154C8  0EF6               	movlw	-10
 18822  0154CA  6CE3               	negf	plusw1,c
 18823  0154CC  0EF7               	movlw	-9
 18824  0154CE  1EE3               	comf	plusw1,f,c
 18825  0154D0  0EF8               	movlw	-8
 18826  0154D2  1EE3               	comf	plusw1,f,c
 18827  0154D4  0EF9               	movlw	-7
 18828  0154D6  1EE3               	comf	plusw1,f,c
 18829  0154D8  0EFA               	movlw	-6
 18830  0154DA  1EE3               	comf	plusw1,f,c
 18831  0154DC  0EFB               	movlw	-5
 18832  0154DE  1EE3               	comf	plusw1,f,c
 18833  0154E0  0EFC               	movlw	-4
 18834  0154E2  1EE3               	comf	plusw1,f,c
 18835  0154E4  0EFD               	movlw	-3
 18836  0154E6  1EE3               	comf	plusw1,f,c
 18837  0154E8  E314               	bnc	u9880
 18838  0154EA  0EF7               	movlw	-9
 18839  0154EC  2AE3               	incf	plusw1,f,c
 18840  0154EE  E311               	bnc	u9880
 18841  0154F0  0EF8               	movlw	-8
 18842  0154F2  2AE3               	incf	plusw1,f,c
 18843  0154F4  E30E               	bnc	u9880
 18844  0154F6  0EF9               	movlw	-7
 18845  0154F8  2AE3               	incf	plusw1,f,c
 18846  0154FA  E30B               	bnc	u9880
 18847  0154FC  0EFA               	movlw	-6
 18848  0154FE  2AE3               	incf	plusw1,f,c
 18849  015500  E308               	bnc	u9880
 18850  015502  0EFB               	movlw	-5
 18851  015504  2AE3               	incf	plusw1,f,c
 18852  015506  E305               	bnc	u9880
 18853  015508  0EFC               	movlw	-4
 18854  01550A  2AE3               	incf	plusw1,f,c
 18855  01550C  E302               	bnc	u9880
 18856  01550E  0EFD               	movlw	-3
 18857  015510  2AE3               	incf	plusw1,f,c
 18858  015512                     u9880:
 18859                           
 18860                           ;stkvar	_dividend @ sp[(-2)+-8]
 18861  015512  0EF6               	movlw	246
 18862  015514  24E1               	addwf	fsr1l,w,c
 18863  015516  6ED9               	movwf	fsr2l,c
 18864  015518  0EFF               	movlw	255
 18865  01551A  20E2               	addwfc	fsr1h,w,c
 18866  01551C  6EDA               	movwf	fsr2h,c
 18867                           
 18868                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18869  01551E  0E08               	movlw	8
 18870  015520  6E32               	movwf	btemp^0,c
 18871  015522  0EF6               	movlw	-10
 18872  015524                     us989999:
 18873  015524  006F FF7B FFE3     	movff	postinc2,plusw1
 18874  01552A  28E8               	incf	wreg,w,c
 18875  01552C  2E32               	decfsz	btemp^0,f,c
 18876  01552E  D7FA               	bra	us989999
 18877                           
 18878                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18879  015530  52E5               	movf	postdec1,f,c
 18880  015532  52E5               	movf	postdec1,f,c
 18881  015534  0012               	return		;funcret
 18882  015536                     __end_of___aomod:
 18883                           	opt callstack 0
 18884                           
 18885 ;; *************** function ___aodiv *****************
 18886 ;; Defined at:
 18887 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18888 ;; Parameters:    Size  Location     Type
 18889 ;;  dividend        8  [STACK] long long 
 18890 ;;  divisor         8  [STACK] long long 
 18891 ;; Auto vars:     Size  Location     Type
 18892 ;;  quotient        8  [STACK] long long 
 18893 ;;  sign            1  [STACK] unsigned char 
 18894 ;;  counter         1  [STACK] unsigned char 
 18895 ;; Return value:  Size  Location     Type
 18896 ;;                  8  [STACK] long long 
 18897 ;; Registers used:
 18898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18899 ;; Tracked objects:
 18900 ;;		On entry : 0/2
 18901 ;;		On exit  : 0/0
 18902 ;;		Unchanged: 0/0
 18903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18908 ;;Total ram usage:        0 bytes
 18909 ;; Hardware stack levels used:    1
 18910 ;; Hardware stack levels required when called:    6
 18911 ;; This function calls:
 18912 ;;		Nothing
 18913 ;; This function is called by:
 18914 ;;		_dtoa
 18915 ;; This function uses a reentrant model
 18916 ;;
 18917                           
 18918                           	psect	text63
 18919  014E02                     __ptext63:
 18920                           	opt callstack 0
 18921  014E02                     ___aodiv:
 18922                           	opt callstack 0
 18923                           
 18924                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18925  014E02  0E0A               	movlw	10
 18926  014E04  26E1               	addwf	fsr1l,f,c
 18927  014E06  0E00               	movlw	0
 18928  014E08  22E2               	addwfc	fsr1h,f,c
 18929                           
 18930                           ;stkvar	_sign @ sp[(-10)+8]
 18931                           
 18932                           ;incstack = 0
 18933  014E0A  0EFE               	movlw	-2
 18934  014E0C  6AE3               	clrf	plusw1,c
 18935                           
 18936                           ;stkvar	_divisor @ sp[(-10)+-16]
 18937  014E0E  0EED               	movlw	-19
 18938  014E10  AEE3               	btfss	plusw1,7,c
 18939  014E12  D028               	goto	l9760
 18940                           
 18941                           ;stkvar	_divisor @ sp[(-10)+-16]
 18942                           ;stkvar	_divisor @ sp[(-10)+-16]
 18943  014E14  0EE6               	movlw	-26
 18944  014E16  6CE3               	negf	plusw1,c
 18945  014E18  0EE7               	movlw	-25
 18946  014E1A  1EE3               	comf	plusw1,f,c
 18947  014E1C  0EE8               	movlw	-24
 18948  014E1E  1EE3               	comf	plusw1,f,c
 18949  014E20  0EE9               	movlw	-23
 18950  014E22  1EE3               	comf	plusw1,f,c
 18951  014E24  0EEA               	movlw	-22
 18952  014E26  1EE3               	comf	plusw1,f,c
 18953  014E28  0EEB               	movlw	-21
 18954  014E2A  1EE3               	comf	plusw1,f,c
 18955  014E2C  0EEC               	movlw	-20
 18956  014E2E  1EE3               	comf	plusw1,f,c
 18957  014E30  0EED               	movlw	-19
 18958  014E32  1EE3               	comf	plusw1,f,c
 18959  014E34  E314               	bnc	u9680
 18960  014E36  0EE7               	movlw	-25
 18961  014E38  2AE3               	incf	plusw1,f,c
 18962  014E3A  E311               	bnc	u9680
 18963  014E3C  0EE8               	movlw	-24
 18964  014E3E  2AE3               	incf	plusw1,f,c
 18965  014E40  E30E               	bnc	u9680
 18966  014E42  0EE9               	movlw	-23
 18967  014E44  2AE3               	incf	plusw1,f,c
 18968  014E46  E30B               	bnc	u9680
 18969  014E48  0EEA               	movlw	-22
 18970  014E4A  2AE3               	incf	plusw1,f,c
 18971  014E4C  E308               	bnc	u9680
 18972  014E4E  0EEB               	movlw	-21
 18973  014E50  2AE3               	incf	plusw1,f,c
 18974  014E52  E305               	bnc	u9680
 18975  014E54  0EEC               	movlw	-20
 18976  014E56  2AE3               	incf	plusw1,f,c
 18977  014E58  E302               	bnc	u9680
 18978  014E5A  0EED               	movlw	-19
 18979  014E5C  2AE3               	incf	plusw1,f,c
 18980  014E5E                     u9680:
 18981                           
 18982                           ;stkvar	_sign @ sp[(-10)+8]
 18983  014E5E  0EFE               	movlw	-2
 18984  014E60  6AE3               	clrf	plusw1,c
 18985  014E62  2AE3               	incf	plusw1,f,c
 18986  014E64                     l9760:
 18987                           
 18988                           ;stkvar	_dividend @ sp[(-10)+-8]
 18989  014E64  0EF5               	movlw	-11
 18990  014E66  AEE3               	btfss	plusw1,7,c
 18991  014E68  D027               	goto	l9766
 18992                           
 18993                           ;stkvar	_dividend @ sp[(-10)+-8]
 18994                           ;stkvar	_dividend @ sp[(-10)+-8]
 18995  014E6A  0EEE               	movlw	-18
 18996  014E6C  6CE3               	negf	plusw1,c
 18997  014E6E  0EEF               	movlw	-17
 18998  014E70  1EE3               	comf	plusw1,f,c
 18999  014E72  0EF0               	movlw	-16
 19000  014E74  1EE3               	comf	plusw1,f,c
 19001  014E76  0EF1               	movlw	-15
 19002  014E78  1EE3               	comf	plusw1,f,c
 19003  014E7A  0EF2               	movlw	-14
 19004  014E7C  1EE3               	comf	plusw1,f,c
 19005  014E7E  0EF3               	movlw	-13
 19006  014E80  1EE3               	comf	plusw1,f,c
 19007  014E82  0EF4               	movlw	-12
 19008  014E84  1EE3               	comf	plusw1,f,c
 19009  014E86  0EF5               	movlw	-11
 19010  014E88  1EE3               	comf	plusw1,f,c
 19011  014E8A  E314               	bnc	u9700
 19012  014E8C  0EEF               	movlw	-17
 19013  014E8E  2AE3               	incf	plusw1,f,c
 19014  014E90  E311               	bnc	u9700
 19015  014E92  0EF0               	movlw	-16
 19016  014E94  2AE3               	incf	plusw1,f,c
 19017  014E96  E30E               	bnc	u9700
 19018  014E98  0EF1               	movlw	-15
 19019  014E9A  2AE3               	incf	plusw1,f,c
 19020  014E9C  E30B               	bnc	u9700
 19021  014E9E  0EF2               	movlw	-14
 19022  014EA0  2AE3               	incf	plusw1,f,c
 19023  014EA2  E308               	bnc	u9700
 19024  014EA4  0EF3               	movlw	-13
 19025  014EA6  2AE3               	incf	plusw1,f,c
 19026  014EA8  E305               	bnc	u9700
 19027  014EAA  0EF4               	movlw	-12
 19028  014EAC  2AE3               	incf	plusw1,f,c
 19029  014EAE  E302               	bnc	u9700
 19030  014EB0  0EF5               	movlw	-11
 19031  014EB2  2AE3               	incf	plusw1,f,c
 19032  014EB4                     u9700:
 19033                           
 19034                           ;stkvar	_sign @ sp[(-10)+8]
 19035  014EB4  0EFE               	movlw	-2
 19036  014EB6  70E3               	btg	plusw1,0,c
 19037  014EB8                     l9766:
 19038                           
 19039                           ;stkvar	_quotient @ sp[(-10)+0]
 19040  014EB8  0E07               	movlw	7
 19041  014EBA  6E32               	movwf	btemp^0,c
 19042  014EBC  0EF6               	movlw	-10
 19043  014EBE                     u9711:
 19044  014EBE  6AE3               	clrf	plusw1,c
 19045  014EC0  2AE8               	incf	wreg,f,c
 19046  014EC2  0632               	decf	btemp^0,f,c
 19047  014EC4  E2FC               	bc	u9711
 19048                           
 19049                           ;stkvar	_divisor @ sp[(-10)+-16]
 19050  014EC6  0EE6               	movlw	-26
 19051  014EC8  50E3               	movf	plusw1,w,c
 19052  014ECA  E116               	bnz	u9720
 19053  014ECC  0EE7               	movlw	-25
 19054  014ECE  50E3               	movf	plusw1,w,c
 19055  014ED0  E113               	bnz	u9720
 19056  014ED2  0EE8               	movlw	-24
 19057  014ED4  50E3               	movf	plusw1,w,c
 19058  014ED6  E110               	bnz	u9720
 19059  014ED8  0EE9               	movlw	-23
 19060  014EDA  50E3               	movf	plusw1,w,c
 19061  014EDC  E10D               	bnz	u9720
 19062  014EDE  0EEA               	movlw	-22
 19063  014EE0  50E3               	movf	plusw1,w,c
 19064  014EE2  E10A               	bnz	u9720
 19065  014EE4  0EEB               	movlw	-21
 19066  014EE6  50E3               	movf	plusw1,w,c
 19067  014EE8  E107               	bnz	u9720
 19068  014EEA  0EEC               	movlw	-20
 19069  014EEC  50E3               	movf	plusw1,w,c
 19070  014EEE  E104               	bnz	u9720
 19071  014EF0  0EED               	movlw	-19
 19072  014EF2  50E3               	movf	plusw1,w,c
 19073  014EF4  B4D8               	btfsc	status,2,c
 19074  014EF6  D088               	goto	u9750
 19075  014EF8                     u9720:
 19076                           
 19077                           ;stkvar	_counter @ sp[(-10)+9]
 19078  014EF8  0EFF               	movlw	-1
 19079  014EFA  6AE3               	clrf	plusw1,c
 19080  014EFC  D012               	goto	L18
 19081  014EFE                     l9772:
 19082                           
 19083                           ;stkvar	_divisor @ sp[(-10)+-16]
 19084  014EFE  90D8               	bcf	status,0,c
 19085  014F00  0EE6               	movlw	-26
 19086  014F02  36E3               	rlcf	plusw1,f,c
 19087  014F04  0EE7               	movlw	-25
 19088  014F06  36E3               	rlcf	plusw1,f,c
 19089  014F08  0EE8               	movlw	-24
 19090  014F0A  36E3               	rlcf	plusw1,f,c
 19091  014F0C  0EE9               	movlw	-23
 19092  014F0E  36E3               	rlcf	plusw1,f,c
 19093  014F10  0EEA               	movlw	-22
 19094  014F12  36E3               	rlcf	plusw1,f,c
 19095  014F14  0EEB               	movlw	-21
 19096  014F16  36E3               	rlcf	plusw1,f,c
 19097  014F18  0EEC               	movlw	-20
 19098  014F1A  36E3               	rlcf	plusw1,f,c
 19099  014F1C  0EED               	movlw	-19
 19100  014F1E  36E3               	rlcf	plusw1,f,c
 19101                           
 19102                           ;stkvar	_counter @ sp[(-10)+9]
 19103  014F20  0EFF               	movlw	-1
 19104  014F22                     L18:
 19105  014F22  2AE3               	incf	plusw1,f,c
 19106                           
 19107                           ;stkvar	_divisor @ sp[(-10)+-16]
 19108  014F24  0EED               	movlw	-19
 19109  014F26  AEE3               	btfss	plusw1,7,c
 19110  014F28  D7EA               	goto	l9772
 19111  014F2A                     u9730:
 19112                           
 19113                           ;stkvar	_quotient @ sp[(-10)+0]
 19114  014F2A  90D8               	bcf	status,0,c
 19115  014F2C  0EF6               	movlw	-10
 19116  014F2E  36E3               	rlcf	plusw1,f,c
 19117  014F30  0EF7               	movlw	-9
 19118  014F32  36E3               	rlcf	plusw1,f,c
 19119  014F34  0EF8               	movlw	-8
 19120  014F36  36E3               	rlcf	plusw1,f,c
 19121  014F38  0EF9               	movlw	-7
 19122  014F3A  36E3               	rlcf	plusw1,f,c
 19123  014F3C  0EFA               	movlw	-6
 19124  014F3E  36E3               	rlcf	plusw1,f,c
 19125  014F40  0EFB               	movlw	-5
 19126  014F42  36E3               	rlcf	plusw1,f,c
 19127  014F44  0EFC               	movlw	-4
 19128  014F46  36E3               	rlcf	plusw1,f,c
 19129  014F48  0EFD               	movlw	-3
 19130  014F4A  36E3               	rlcf	plusw1,f,c
 19131                           
 19132                           ;stkvar	_divisor @ sp[(-10)+-16]
 19133                           ;stkvar	_dividend @ sp[(-10)+-8]
 19134  014F4C  50E1               	movf	fsr1l,w,c
 19135  014F4E  0FEE               	addlw	-18
 19136  014F50  6ED9               	movwf	fsr2l,c
 19137  014F52  50E2               	movf	fsr1h,w,c
 19138  014F54  6EDA               	movwf	fsr2h,c
 19139  014F56  0EFF               	movlw	255
 19140  014F58  22DA               	addwfc	fsr2h,f,c
 19141  014F5A  0EE6               	movlw	-26
 19142  014F5C  50E3               	movf	plusw1,w,c
 19143  014F5E  5CDE               	subwf	postinc2,w,c
 19144  014F60  0EE7               	movlw	-25
 19145  014F62  50E3               	movf	plusw1,w,c
 19146  014F64  58DE               	subwfb	postinc2,w,c
 19147  014F66  0EE8               	movlw	-24
 19148  014F68  50E3               	movf	plusw1,w,c
 19149  014F6A  58DE               	subwfb	postinc2,w,c
 19150  014F6C  0EE9               	movlw	-23
 19151  014F6E  50E3               	movf	plusw1,w,c
 19152  014F70  58DE               	subwfb	postinc2,w,c
 19153  014F72  0EEA               	movlw	-22
 19154  014F74  50E3               	movf	plusw1,w,c
 19155  014F76  58DE               	subwfb	postinc2,w,c
 19156  014F78  0EEB               	movlw	-21
 19157  014F7A  50E3               	movf	plusw1,w,c
 19158  014F7C  58DE               	subwfb	postinc2,w,c
 19159  014F7E  0EEC               	movlw	-20
 19160  014F80  50E3               	movf	plusw1,w,c
 19161  014F82  58DE               	subwfb	postinc2,w,c
 19162  014F84  0EED               	movlw	-19
 19163  014F86  50E3               	movf	plusw1,w,c
 19164  014F88  58DE               	subwfb	postinc2,w,c
 19165  014F8A  A0D8               	btfss	status,0,c
 19166  014F8C  D021               	goto	l9784
 19167                           
 19168                           ;stkvar	_divisor @ sp[(-10)+-16]
 19169                           ;stkvar	_dividend @ sp[(-10)+-8]
 19170  014F8E  50E1               	movf	fsr1l,w,c
 19171  014F90  0FEE               	addlw	-18
 19172  014F92  6ED9               	movwf	fsr2l,c
 19173  014F94  50E2               	movf	fsr1h,w,c
 19174  014F96  6EDA               	movwf	fsr2h,c
 19175  014F98  0EFF               	movlw	255
 19176  014F9A  22DA               	addwfc	fsr2h,f,c
 19177  014F9C  0EE6               	movlw	-26
 19178  014F9E  50E3               	movf	plusw1,w,c
 19179  014FA0  5EDE               	subwf	postinc2,f,c
 19180  014FA2  0EE7               	movlw	-25
 19181  014FA4  50E3               	movf	plusw1,w,c
 19182  014FA6  5ADE               	subwfb	postinc2,f,c
 19183  014FA8  0EE8               	movlw	-24
 19184  014FAA  50E3               	movf	plusw1,w,c
 19185  014FAC  5ADE               	subwfb	postinc2,f,c
 19186  014FAE  0EE9               	movlw	-23
 19187  014FB0  50E3               	movf	plusw1,w,c
 19188  014FB2  5ADE               	subwfb	postinc2,f,c
 19189  014FB4  0EEA               	movlw	-22
 19190  014FB6  50E3               	movf	plusw1,w,c
 19191  014FB8  5ADE               	subwfb	postinc2,f,c
 19192  014FBA  0EEB               	movlw	-21
 19193  014FBC  50E3               	movf	plusw1,w,c
 19194  014FBE  5ADE               	subwfb	postinc2,f,c
 19195  014FC0  0EEC               	movlw	-20
 19196  014FC2  50E3               	movf	plusw1,w,c
 19197  014FC4  5ADE               	subwfb	postinc2,f,c
 19198  014FC6  0EED               	movlw	-19
 19199  014FC8  50E3               	movf	plusw1,w,c
 19200  014FCA  5ADE               	subwfb	postinc2,f,c
 19201                           
 19202                           ;stkvar	_quotient @ sp[(-10)+0]
 19203  014FCC  0EF6               	movlw	-10
 19204  014FCE  80E3               	bsf	plusw1,0,c
 19205  014FD0                     l9784:
 19206                           
 19207                           ;stkvar	_divisor @ sp[(-10)+-16]
 19208  014FD0  90D8               	bcf	status,0,c
 19209  014FD2  0EED               	movlw	-19
 19210  014FD4  32E3               	rrcf	plusw1,f,c
 19211  014FD6  0EEC               	movlw	-20
 19212  014FD8  32E3               	rrcf	plusw1,f,c
 19213  014FDA  0EEB               	movlw	-21
 19214  014FDC  32E3               	rrcf	plusw1,f,c
 19215  014FDE  0EEA               	movlw	-22
 19216  014FE0  32E3               	rrcf	plusw1,f,c
 19217  014FE2  0EE9               	movlw	-23
 19218  014FE4  32E3               	rrcf	plusw1,f,c
 19219  014FE6  0EE8               	movlw	-24
 19220  014FE8  32E3               	rrcf	plusw1,f,c
 19221  014FEA  0EE7               	movlw	-25
 19222  014FEC  32E3               	rrcf	plusw1,f,c
 19223  014FEE  0EE6               	movlw	-26
 19224  014FF0  32E3               	rrcf	plusw1,f,c
 19225                           
 19226                           ;stkvar	_counter @ sp[(-10)+9]
 19227  014FF2  0EFF               	movlw	-1
 19228  014FF4  50E3               	movf	plusw1,w,c
 19229  014FF6  6E32               	movwf	btemp^0,c
 19230  014FF8  0E01               	movlw	1
 19231  014FFA  5E32               	subwf	btemp^0,f,c
 19232  014FFC  0EFF               	movlw	-1
 19233  014FFE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19234  015004  A4D8               	btfss	status,2,c
 19235  015006  D791               	goto	u9730
 19236  015008                     u9750:
 19237                           
 19238                           ;stkvar	_sign @ sp[(-10)+8]
 19239  015008  0EFE               	movlw	-2
 19240  01500A  50E3               	movf	plusw1,w,c
 19241  01500C  B4D8               	btfsc	status,2,c
 19242  01500E  D025               	goto	u9770
 19243                           
 19244                           ;stkvar	_quotient @ sp[(-10)+0]
 19245                           ;stkvar	_quotient @ sp[(-10)+0]
 19246  015010  0EF6               	movlw	-10
 19247  015012  6CE3               	negf	plusw1,c
 19248  015014  0EF7               	movlw	-9
 19249  015016  1EE3               	comf	plusw1,f,c
 19250  015018  0EF8               	movlw	-8
 19251  01501A  1EE3               	comf	plusw1,f,c
 19252  01501C  0EF9               	movlw	-7
 19253  01501E  1EE3               	comf	plusw1,f,c
 19254  015020  0EFA               	movlw	-6
 19255  015022  1EE3               	comf	plusw1,f,c
 19256  015024  0EFB               	movlw	-5
 19257  015026  1EE3               	comf	plusw1,f,c
 19258  015028  0EFC               	movlw	-4
 19259  01502A  1EE3               	comf	plusw1,f,c
 19260  01502C  0EFD               	movlw	-3
 19261  01502E  1EE3               	comf	plusw1,f,c
 19262  015030  E314               	bnc	u9770
 19263  015032  0EF7               	movlw	-9
 19264  015034  2AE3               	incf	plusw1,f,c
 19265  015036  E311               	bnc	u9770
 19266  015038  0EF8               	movlw	-8
 19267  01503A  2AE3               	incf	plusw1,f,c
 19268  01503C  E30E               	bnc	u9770
 19269  01503E  0EF9               	movlw	-7
 19270  015040  2AE3               	incf	plusw1,f,c
 19271  015042  E30B               	bnc	u9770
 19272  015044  0EFA               	movlw	-6
 19273  015046  2AE3               	incf	plusw1,f,c
 19274  015048  E308               	bnc	u9770
 19275  01504A  0EFB               	movlw	-5
 19276  01504C  2AE3               	incf	plusw1,f,c
 19277  01504E  E305               	bnc	u9770
 19278  015050  0EFC               	movlw	-4
 19279  015052  2AE3               	incf	plusw1,f,c
 19280  015054  E302               	bnc	u9770
 19281  015056  0EFD               	movlw	-3
 19282  015058  2AE3               	incf	plusw1,f,c
 19283  01505A                     u9770:
 19284                           
 19285                           ;stkvar	_quotient @ sp[(-10)+0]
 19286  01505A  0EF6               	movlw	246
 19287  01505C  24E1               	addwf	fsr1l,w,c
 19288  01505E  6ED9               	movwf	fsr2l,c
 19289  015060  0EFF               	movlw	255
 19290  015062  20E2               	addwfc	fsr1h,w,c
 19291  015064  6EDA               	movwf	fsr2h,c
 19292                           
 19293                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19294  015066  0E08               	movlw	8
 19295  015068  6E32               	movwf	btemp^0,c
 19296  01506A  0EEE               	movlw	-18
 19297  01506C                     us978999:
 19298  01506C  006F FF7B FFE3     	movff	postinc2,plusw1
 19299  015072  28E8               	incf	wreg,w,c
 19300  015074  2E32               	decfsz	btemp^0,f,c
 19301  015076  D7FA               	bra	us978999
 19302                           
 19303                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19304  015078  0EF6               	movlw	246
 19305  01507A  26E1               	addwf	fsr1l,f,c
 19306  01507C  0EFF               	movlw	255
 19307  01507E  22E2               	addwfc	fsr1h,f,c
 19308  015080  0012               	return		;funcret
 19309  015082                     __end_of___aodiv:
 19310                           	opt callstack 0
 19311                           
 19312 ;; *************** function _ctoa *****************
 19313 ;; Defined at:
 19314 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19315 ;; Parameters:    Size  Location     Type
 19316 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19317 ;;		 -> f(6), NULL(0), 
 19318 ;;  c               1  [STACK] unsigned char 
 19319 ;; Auto vars:     Size  Location     Type
 19320 ;;  w               2  [STACK] int 
 19321 ;;  l               2    0        int 
 19322 ;; Return value:  Size  Location     Type
 19323 ;;                  2  [STACK] int 
 19324 ;; Registers used:
 19325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19326 ;; Tracked objects:
 19327 ;;		On entry : 0/5
 19328 ;;		On exit  : 0/0
 19329 ;;		Unchanged: 0/0
 19330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19335 ;;Total ram usage:        0 bytes
 19336 ;; Hardware stack levels used:    1
 19337 ;; Hardware stack levels required when called:   11
 19338 ;; This function calls:
 19339 ;;		_pad
 19340 ;; This function is called by:
 19341 ;;		_vfpfcnvrt
 19342 ;; This function uses a reentrant model
 19343 ;;
 19344                           
 19345                           	psect	text64
 19346  017308                     __ptext64:
 19347                           	opt callstack 0
 19348  017308                     _ctoa:
 19349                           	opt callstack 0
 19350                           
 19351                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19352  017308  52E6               	movf	postinc1,f,c
 19353  01730A  52E6               	movf	postinc1,f,c
 19354                           
 19355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19356                           
 19357                           ;incstack = 0
 19358  01730C  501B               	movf	_width^0,w,c
 19359  01730E  101C               	iorwf	(_width+1)^0,w,c
 19360  017310  A4D8               	btfss	status,2,c
 19361  017312  D009               	goto	l10342
 19362                           
 19363                           ;stkvar	_w @ sp[(-2)+0]
 19364  017314  0EFE               	movlw	-2
 19365  017316  0060  F06F  FFE3   	movff	_width,plusw1
 19366  01731C  0EFF               	movlw	-1
 19367  01731E  0060  F073  FFE3   	movff	_width+1,plusw1
 19368  017324  D016               	goto	l10344
 19369  017326                     l10342:
 19370  017326  0EFF               	movlw	255
 19371  017328  6E3C               	movwf	(btemp+10)^0,c
 19372  01732A  0EFF               	movlw	255
 19373  01732C  6E3D               	movwf	(btemp+11)^0,c
 19374  01732E  0060  F06C  F03A   	movff	_width,btemp+8
 19375  017334  0060  F070  F03B   	movff	_width+1,btemp+9
 19376  01733A  503C               	movf	(btemp+10)^0,w,c
 19377  01733C  263A               	addwf	(btemp+8)^0,f,c
 19378  01733E  503D               	movf	(btemp+11)^0,w,c
 19379  017340  223B               	addwfc	(btemp+9)^0,f,c
 19380                           
 19381                           ;stkvar	_w @ sp[(-2)+0]
 19382  017342  0EFE               	movlw	-2
 19383  017344  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19384  01734A  0EFF               	movlw	-1
 19385  01734C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19386  017352                     l10344:
 19387                           
 19388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19389                           ;stkvar	_c @ sp[(-2)+-3]
 19390  017352  0EFB               	movlw	-5
 19391  017354  006F FF8C  F240    	movff	plusw1,_dbuf
 19392                           
 19393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19394  01735A  0102               	movlb	2	; () banked
 19395  01735C  6B41               	clrf	(_dbuf+1)& (0+255),b
 19396                           
 19397                           ; BSR set to: 2
 19398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19399                           ;stkvar	_w @ sp[(-2)+0]
 19400  01735E  0EFE               	movlw	-2
 19401  017360  006F FF8F FFE6     	movff	plusw1,postinc1
 19402  017366  006F FF8F FFE6     	movff	plusw1,postinc1
 19403  01736C  0E40               	movlw	low _dbuf
 19404  01736E  6EE6               	movwf	postinc1,c
 19405  017370  0E02               	movlw	high _dbuf
 19406  017372  6EE6               	movwf	postinc1,c
 19407                           
 19408                           ;stkvar	_fp @ sp[(-6)+-2]
 19409  017374  0EF8               	movlw	-8
 19410  017376  006F FF8F FFE6     	movff	plusw1,postinc1
 19411  01737C  006F FF8F FFE6     	movff	plusw1,postinc1
 19412  017382  ECAA  F0B3         	call	_pad	;wreg free
 19413                           
 19414                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19415  017386  0EFB               	movlw	251
 19416  017388  26E1               	addwf	fsr1l,f,c
 19417  01738A  0EFF               	movlw	255
 19418  01738C  22E2               	addwfc	fsr1h,f,c
 19419  01738E  0012               	return		;funcret
 19420  017390                     __end_of_ctoa:
 19421                           	opt callstack 0
 19422                           
 19423 ;; *************** function _pad *****************
 19424 ;; Defined at:
 19425 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19426 ;; Parameters:    Size  Location     Type
 19427 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19428 ;;		 -> f(6), NULL(0), 
 19429 ;;  buf             2  [STACK] PTR unsigned char 
 19430 ;;		 -> dbuf(80), 
 19431 ;;  p               2  [STACK] int 
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;  w               2  [STACK] int 
 19434 ;;  i               2  [STACK] int 
 19435 ;; Return value:  Size  Location     Type
 19436 ;;                  2  [STACK] int 
 19437 ;; Registers used:
 19438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19439 ;; Tracked objects:
 19440 ;;		On entry : 0/2
 19441 ;;		On exit  : 0/0
 19442 ;;		Unchanged: 0/0
 19443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19448 ;;Total ram usage:        0 bytes
 19449 ;; Hardware stack levels used:    1
 19450 ;; Hardware stack levels required when called:   10
 19451 ;; This function calls:
 19452 ;;		_fputc
 19453 ;;		_fputs
 19454 ;;		_strlen
 19455 ;; This function is called by:
 19456 ;;		_ctoa
 19457 ;;		_dtoa
 19458 ;;		_efgtoa
 19459 ;;		_xtoa
 19460 ;; This function uses a reentrant model
 19461 ;;
 19462                           
 19463                           	psect	text65
 19464  016754                     __ptext65:
 19465                           	opt callstack 0
 19466  016754                     _pad:
 19467                           	opt callstack 0
 19468                           
 19469                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19470  016754  52E6               	movf	postinc1,f,c
 19471  016756  52E6               	movf	postinc1,f,c
 19472  016758  52E6               	movf	postinc1,f,c
 19473  01675A  52E6               	movf	postinc1,f,c
 19474                           
 19475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19476                           
 19477                           ;incstack = 0
 19478  01675C  A01F               	btfss	_flags^0,0,c
 19479  01675E  D010               	goto	l9624
 19480                           
 19481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19482                           ;stkvar	_fp @ sp[(-4)+-2]
 19483  016760  0EFA               	movlw	-6
 19484  016762  006F FF8F FFE6     	movff	plusw1,postinc1
 19485  016768  006F FF8F FFE6     	movff	plusw1,postinc1
 19486                           
 19487                           ;stkvar	_buf @ sp[(-6)+-4]
 19488  01676E  0EF6               	movlw	-10
 19489  016770  006F FF8F FFE6     	movff	plusw1,postinc1
 19490  016776  006F FF8F FFE6     	movff	plusw1,postinc1
 19491  01677C  ECA6  F0B8         	call	_fputs	;wreg free
 19492  016780                     l9624:
 19493                           
 19494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19495                           ;stkvar	_p @ sp[(-4)+-6]
 19496  016780  0EF7               	movlw	-9
 19497  016782  BEE3               	btfsc	plusw1,7,c
 19498  016784  D011               	goto	l9628
 19499                           
 19500                           ;stkvar	_p @ sp[(-4)+-6]
 19501                           ;stkvar	_w @ sp[(-4)+0]
 19502  016786  0EF6               	movlw	-10
 19503  016788  006F FF8C  F032    	movff	plusw1,btemp
 19504  01678E  0EFC               	movlw	-4
 19505  016790  0060  F0CB  FFE3   	movff	btemp,plusw1
 19506  016796  0EF7               	movlw	-9
 19507  016798  006F FF8C  F032    	movff	plusw1,btemp
 19508  01679E  0EFD               	movlw	-3
 19509  0167A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 19510  0167A6  D004               	goto	l1815
 19511  0167A8                     l9628:
 19512                           
 19513                           ;stkvar	_w @ sp[(-4)+0]
 19514  0167A8  0EFC               	movlw	-4
 19515  0167AA  6AE3               	clrf	plusw1,c
 19516  0167AC  0EFD               	movlw	-3
 19517  0167AE  6AE3               	clrf	plusw1,c
 19518  0167B0                     l1815:
 19519                           
 19520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19521                           ;stkvar	_i @ sp[(-4)+2]
 19522  0167B0  0EFE               	movlw	-2
 19523  0167B2  6AE3               	clrf	plusw1,c
 19524  0167B4  0EFF               	movlw	-1
 19525  0167B6  6AE3               	clrf	plusw1,c
 19526                           
 19527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19528  0167B8  D01E               	goto	l9634
 19529  0167BA                     l9630:
 19530                           
 19531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19532                           ;stkvar	_fp @ sp[(-4)+-2]
 19533  0167BA  0EFA               	movlw	-6
 19534  0167BC  006F FF8F FFE6     	movff	plusw1,postinc1
 19535  0167C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19536  0167C8  0E20               	movlw	32
 19537  0167CA  6EE6               	movwf	postinc1,c
 19538  0167CC  0E00               	movlw	0
 19539  0167CE  6EE6               	movwf	postinc1,c
 19540  0167D0  EC8C  F0B2         	call	_fputc	;wreg free
 19541                           
 19542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19543                           ;stkvar	_i @ sp[(-4)+2]
 19544  0167D4  0EFE               	movlw	-2
 19545  0167D6  50E3               	movf	plusw1,w,c
 19546  0167D8  0F01               	addlw	1
 19547  0167DA  6E32               	movwf	btemp^0,c
 19548  0167DC  0EFE               	movlw	-2
 19549  0167DE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19550  0167E4  6A32               	clrf	btemp^0,c
 19551  0167E6  0EFF               	movlw	-1
 19552  0167E8  50E3               	movf	plusw1,w,c
 19553  0167EA  2032               	addwfc	btemp^0,w,c
 19554  0167EC  6E32               	movwf	btemp^0,c
 19555  0167EE  0EFF               	movlw	-1
 19556  0167F0  0060  F0CB  FFE3   	movff	btemp,plusw1
 19557  0167F6                     l9634:
 19558                           
 19559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19560                           ;stkvar	_w @ sp[(-4)+0]
 19561                           ;stkvar	_i @ sp[(-4)+2]
 19562  0167F6  50E1               	movf	fsr1l,w,c
 19563  0167F8  0FFE               	addlw	-2
 19564  0167FA  6ED9               	movwf	fsr2l,c
 19565  0167FC  50E2               	movf	fsr1h,w,c
 19566  0167FE  6EDA               	movwf	fsr2h,c
 19567  016800  0EFF               	movlw	255
 19568  016802  22DA               	addwfc	fsr2h,f,c
 19569  016804  0EFC               	movlw	-4
 19570  016806  50E3               	movf	plusw1,w,c
 19571  016808  5CDE               	subwf	postinc2,w,c
 19572  01680A  50DE               	movf	postinc2,w,c
 19573  01680C  0A80               	xorlw	128
 19574  01680E  6E32               	movwf	btemp^0,c
 19575  016810  0EFD               	movlw	-3
 19576  016812  50E3               	movf	plusw1,w,c
 19577  016814  0A80               	xorlw	128
 19578  016816  5832               	subwfb	btemp^0,w,c
 19579  016818  A0D8               	btfss	status,0,c
 19580  01681A  D7CF               	goto	l9630
 19581                           
 19582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19583  01681C  B01F               	btfsc	_flags^0,0,c
 19584  01681E  D010               	goto	l9638
 19585                           
 19586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19587                           ;stkvar	_fp @ sp[(-4)+-2]
 19588  016820  0EFA               	movlw	-6
 19589  016822  006F FF8F FFE6     	movff	plusw1,postinc1
 19590  016828  006F FF8F FFE6     	movff	plusw1,postinc1
 19591                           
 19592                           ;stkvar	_buf @ sp[(-6)+-4]
 19593  01682E  0EF6               	movlw	-10
 19594  016830  006F FF8F FFE6     	movff	plusw1,postinc1
 19595  016836  006F FF8F FFE6     	movff	plusw1,postinc1
 19596  01683C  ECA6  F0B8         	call	_fputs	;wreg free
 19597  016840                     l9638:
 19598                           
 19599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19600                           ;stkvar	_w @ sp[(-4)+0]
 19601                           ;stkvar	_buf @ sp[(-4)+-4]
 19602  016840  0EF8               	movlw	-8
 19603  016842  006F FF8F FFE6     	movff	plusw1,postinc1
 19604  016848  006F FF8F FFE6     	movff	plusw1,postinc1
 19605  01684E  EC55  F0B8         	call	_strlen	;wreg free
 19606  016852  0EFC               	movlw	-4
 19607  016854  50E3               	movf	plusw1,w,c
 19608  016856  2632               	addwf	btemp^0,f,c
 19609  016858  0EFD               	movlw	-3
 19610  01685A  50E3               	movf	plusw1,w,c
 19611  01685C  2233               	addwfc	(btemp+1)^0,f,c
 19612                           
 19613                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19614  01685E  0EF6               	movlw	246
 19615  016860  26E1               	addwf	fsr1l,f,c
 19616  016862  0EFF               	movlw	255
 19617  016864  22E2               	addwfc	fsr1h,f,c
 19618  016866  0012               	return		;funcret
 19619  016868                     __end_of_pad:
 19620                           	opt callstack 0
 19621                           
 19622 ;; *************** function _strlen *****************
 19623 ;; Defined at:
 19624 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19625 ;; Parameters:    Size  Location     Type
 19626 ;;  s               2  [STACK] PTR const unsigned char 
 19627 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19628 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19629 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19630 ;; Auto vars:     Size  Location     Type
 19631 ;;  a               2  [STACK] PTR const unsigned char 
 19632 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19633 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19634 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19635 ;; Return value:  Size  Location     Type
 19636 ;;                  2  [STACK] unsigned int 
 19637 ;; Registers used:
 19638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19639 ;; Tracked objects:
 19640 ;;		On entry : 0/0
 19641 ;;		On exit  : 0/0
 19642 ;;		Unchanged: 0/0
 19643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19648 ;;Total ram usage:        0 bytes
 19649 ;; Hardware stack levels used:    1
 19650 ;; Hardware stack levels required when called:    6
 19651 ;; This function calls:
 19652 ;;		Nothing
 19653 ;; This function is called by:
 19654 ;;		_eaDogM_WriteString
 19655 ;;		_pad
 19656 ;;		_stoa
 19657 ;; This function uses a reentrant model
 19658 ;;
 19659                           
 19660                           	psect	text66
 19661  0170AA                     __ptext66:
 19662                           	opt callstack 0
 19663  0170AA                     _strlen:
 19664                           	opt callstack 0
 19665                           
 19666                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19667  0170AA  52E6               	movf	postinc1,f,c
 19668  0170AC  52E6               	movf	postinc1,f,c
 19669                           
 19670                           ;stkvar	_s @ sp[(-2)+-2]
 19671                           
 19672                           ;incstack = 0
 19673  0170AE  0EFC               	movlw	-4
 19674  0170B0  006F FF8C  F03C    	movff	plusw1,btemp+10
 19675  0170B6  0EFD               	movlw	-3
 19676  0170B8  006F FF8C  F03D    	movff	plusw1,btemp+11
 19677                           
 19678                           ;stkvar	_a @ sp[(-2)+0]
 19679  0170BE  0EFF               	movlw	-1
 19680  0170C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19681  0170C6  0EFE               	movlw	-2
 19682  0170C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19683  0170CE  D011               	goto	l9378
 19684  0170D0                     l9376:
 19685                           
 19686                           ;stkvar	_s @ sp[(-2)+-2]
 19687  0170D0  0EFC               	movlw	-4
 19688  0170D2  50E3               	movf	plusw1,w,c
 19689  0170D4  0F01               	addlw	1
 19690  0170D6  6E32               	movwf	btemp^0,c
 19691  0170D8  0EFC               	movlw	-4
 19692  0170DA  0060  F0CB  FFE3   	movff	btemp,plusw1
 19693  0170E0  6A32               	clrf	btemp^0,c
 19694  0170E2  0EFD               	movlw	-3
 19695  0170E4  50E3               	movf	plusw1,w,c
 19696  0170E6  2032               	addwfc	btemp^0,w,c
 19697  0170E8  6E32               	movwf	btemp^0,c
 19698  0170EA  0EFD               	movlw	-3
 19699  0170EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 19700  0170F2                     l9378:
 19701                           
 19702                           ;stkvar	_s @ sp[(-2)+-2]
 19703  0170F2  0EFC               	movlw	-4
 19704  0170F4  006F FF8F FFF6     	movff	plusw1,tblptrl
 19705  0170FA  0EFD               	movlw	-3
 19706  0170FC  006F FF8F FFF7     	movff	plusw1,tblptrh
 19707  017102  0E00               	movlw	low (__mediumconst shr (0+16))
 19708  017104  6EF8               	movwf	tblptru,c
 19709  017106  0E1F               	movlw	(high __ramtop+-1)
 19710  017108  64F7               	cpfsgt	tblptrh,c
 19711  01710A  D003               	bra	u8847
 19712  01710C  0008               	tblrd		*
 19713  01710E  50F5               	movf	tablat,w,c
 19714  017110  D007               	bra	u8840
 19715  017112                     u8847:
 19716  017112  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19717  017118  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19718  01711E  50EF               	movf	indf0,w,c
 19719  017120                     u8840:
 19720  017120  0900               	iorlw	0
 19721  017122  A4D8               	btfss	status,2,c
 19722  017124  D7D5               	goto	l9376
 19723                           
 19724                           ;stkvar	_a @ sp[(-2)+0]
 19725                           ;stkvar	_s @ sp[(-2)+-2]
 19726  017126  0EFC               	movlw	-4
 19727  017128  006F FF8C  F032    	movff	plusw1,btemp
 19728  01712E  0EFD               	movlw	-3
 19729  017130  006F FF8C  F033    	movff	plusw1,btemp+1
 19730  017136  0EFE               	movlw	-2
 19731  017138  50E3               	movf	plusw1,w,c
 19732  01713A  5E32               	subwf	btemp^0,f,c
 19733  01713C  0EFF               	movlw	-1
 19734  01713E  50E3               	movf	plusw1,w,c
 19735  017140  5A33               	subwfb	(btemp+1)^0,f,c
 19736                           
 19737                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19738  017142  52E5               	movf	postdec1,f,c
 19739  017144  52E5               	movf	postdec1,f,c
 19740  017146  52E5               	movf	postdec1,f,c
 19741  017148  52E5               	movf	postdec1,f,c
 19742  01714A  0012               	return		;funcret
 19743  01714C                     __end_of_strlen:
 19744                           	opt callstack 0
 19745                           
 19746 ;; *************** function _fputs *****************
 19747 ;; Defined at:
 19748 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19749 ;; Parameters:    Size  Location     Type
 19750 ;;  s               2  [STACK] PTR const unsigned char 
 19751 ;;		 -> dbuf(80), 
 19752 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19753 ;;		 -> f(6), NULL(0), 
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;  i               2  [STACK] int 
 19756 ;;  c               1  [STACK] unsigned char 
 19757 ;; Return value:  Size  Location     Type
 19758 ;;                  2  [STACK] int 
 19759 ;; Registers used:
 19760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/2
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19770 ;;Total ram usage:        0 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:    9
 19773 ;; This function calls:
 19774 ;;		_fputc
 19775 ;; This function is called by:
 19776 ;;		_pad
 19777 ;; This function uses a reentrant model
 19778 ;;
 19779                           
 19780                           	psect	text67
 19781  01714C                     __ptext67:
 19782                           	opt callstack 0
 19783  01714C                     _fputs:
 19784                           	opt callstack 0
 19785                           
 19786                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19787  01714C  52E6               	movf	postinc1,f,c
 19788  01714E  52E6               	movf	postinc1,f,c
 19789  017150  52E6               	movf	postinc1,f,c
 19790                           
 19791                           ;stkvar	_i @ sp[(-3)+0]
 19792                           
 19793                           ;incstack = 0
 19794  017152  0EFD               	movlw	-3
 19795  017154  6AE3               	clrf	plusw1,c
 19796  017156  0EFE               	movlw	-2
 19797  017158  6AE3               	clrf	plusw1,c
 19798  01715A  D01F               	goto	l9390
 19799  01715C                     l9386:
 19800                           
 19801                           ;stkvar	_fp @ sp[(-3)+-4]
 19802  01715C  0EF9               	movlw	-7
 19803  01715E  006F FF8F FFE6     	movff	plusw1,postinc1
 19804  017164  006F FF8F FFE6     	movff	plusw1,postinc1
 19805                           
 19806                           ;stkvar	_c @ sp[(-5)+2]
 19807  01716A  0EFD               	movlw	-3
 19808  01716C  50E3               	movf	plusw1,w,c
 19809  01716E  6EE6               	movwf	postinc1,c
 19810  017170  0E00               	movlw	0
 19811  017172  6EE6               	movwf	postinc1,c
 19812  017174  EC8C  F0B2         	call	_fputc	;wreg free
 19813                           
 19814                           ;stkvar	_i @ sp[(-3)+0]
 19815  017178  0EFD               	movlw	-3
 19816  01717A  50E3               	movf	plusw1,w,c
 19817  01717C  0F01               	addlw	1
 19818  01717E  6E32               	movwf	btemp^0,c
 19819  017180  0EFD               	movlw	-3
 19820  017182  0060  F0CB  FFE3   	movff	btemp,plusw1
 19821  017188  6A32               	clrf	btemp^0,c
 19822  01718A  0EFE               	movlw	-2
 19823  01718C  50E3               	movf	plusw1,w,c
 19824  01718E  2032               	addwfc	btemp^0,w,c
 19825  017190  6E32               	movwf	btemp^0,c
 19826  017192  0EFE               	movlw	-2
 19827  017194  0060  F0CB  FFE3   	movff	btemp,plusw1
 19828  01719A                     l9390:
 19829                           
 19830                           ;stkvar	_i @ sp[(-3)+0]
 19831  01719A  0EFD               	movlw	-3
 19832  01719C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19833  0171A2  0EFE               	movlw	-2
 19834  0171A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 19835                           
 19836                           ;stkvar	_s @ sp[(-3)+-2]
 19837  0171AA  0EFB               	movlw	-5
 19838  0171AC  006F FF8C  F03A    	movff	plusw1,btemp+8
 19839  0171B2  0EFC               	movlw	-4
 19840  0171B4  006F FF8C  F03B    	movff	plusw1,btemp+9
 19841  0171BA  503C               	movf	(btemp+10)^0,w,c
 19842  0171BC  243A               	addwf	(btemp+8)^0,w,c
 19843  0171BE  6ED9               	movwf	fsr2l,c
 19844  0171C0  503D               	movf	(btemp+11)^0,w,c
 19845  0171C2  203B               	addwfc	(btemp+9)^0,w,c
 19846  0171C4  6EDA               	movwf	fsr2h,c
 19847  0171C6  50DF               	movf	indf2,w,c
 19848  0171C8  6E3D               	movwf	(btemp+11)^0,c
 19849                           
 19850                           ;stkvar	_c @ sp[(-3)+2]
 19851  0171CA  0EFF               	movlw	-1
 19852  0171CC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19853  0171D2  0EFF               	movlw	-1
 19854  0171D4  50E3               	movf	plusw1,w,c
 19855  0171D6  A4D8               	btfss	status,2,c
 19856  0171D8  D7C1               	goto	l9386
 19857                           
 19858                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19859  0171DA  0EF9               	movlw	249
 19860  0171DC  26E1               	addwf	fsr1l,f,c
 19861  0171DE  0EFF               	movlw	255
 19862  0171E0  22E2               	addwfc	fsr1h,f,c
 19863  0171E2  0012               	return		;funcret
 19864  0171E4                     __end_of_fputs:
 19865                           	opt callstack 0
 19866                           
 19867 ;; *************** function _fputc *****************
 19868 ;; Defined at:
 19869 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19870 ;; Parameters:    Size  Location     Type
 19871 ;;  c               2  [STACK] int 
 19872 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19873 ;;		 -> f(6), NULL(0), 
 19874 ;; Auto vars:     Size  Location     Type
 19875 ;;		None
 19876 ;; Return value:  Size  Location     Type
 19877 ;;                  2  [STACK] int 
 19878 ;; Registers used:
 19879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19880 ;; Tracked objects:
 19881 ;;		On entry : 0/5
 19882 ;;		On exit  : 0/0
 19883 ;;		Unchanged: 0/0
 19884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19889 ;;Total ram usage:        0 bytes
 19890 ;; Hardware stack levels used:    1
 19891 ;; Hardware stack levels required when called:    8
 19892 ;; This function calls:
 19893 ;;		_putch
 19894 ;; This function is called by:
 19895 ;;		_pad
 19896 ;;		_stoa
 19897 ;;		_vfpfcnvrt
 19898 ;;		_fputs
 19899 ;; This function uses a reentrant model
 19900 ;;
 19901                           
 19902                           	psect	text68
 19903  016518                     __ptext68:
 19904                           	opt callstack 0
 19905  016518                     _fputc:
 19906                           	opt callstack 13
 19907                           
 19908                           ;stkvar	_fp @ sp[(0)+-4]
 19909                           
 19910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19911                           ;incstack = 0
 19912  016518  0EFC               	movlw	-4
 19913  01651A  006F FF8C  F032    	movff	plusw1,btemp
 19914  016520  0EFD               	movlw	-3
 19915  016522  50E3               	movf	plusw1,w,c
 19916  016524  1032               	iorwf	btemp^0,w,c
 19917  016526  B4D8               	btfsc	status,2,c
 19918  016528  D009               	goto	u8810
 19919                           
 19920                           ;stkvar	_fp @ sp[(0)+-4]
 19921  01652A  0EFC               	movlw	-4
 19922  01652C  006F FF8C  F032    	movff	plusw1,btemp
 19923  016532  0EFD               	movlw	-3
 19924  016534  50E3               	movf	plusw1,w,c
 19925  016536  1032               	iorwf	btemp^0,w,c
 19926  016538  A4D8               	btfss	status,2,c
 19927  01653A  D006               	goto	l9364
 19928  01653C                     u8810:
 19929                           
 19930                           ;stkvar	_c @ sp[(0)+-2]
 19931  01653C  0EFE               	movlw	-2
 19932  01653E  50E3               	movf	plusw1,w,c
 19933  016540  6EE6               	movwf	postinc1,c
 19934  016542  EC7A  F0C2         	call	_putch	;wreg free
 19935  016546  D075               	goto	l2833
 19936  016548                     l9364:
 19937                           
 19938                           ;stkvar	_fp @ sp[(0)+-4]
 19939  016548  0EFC               	movlw	-4
 19940  01654A  006F FF8C  F03C    	movff	plusw1,btemp+10
 19941  016550  0EFD               	movlw	-3
 19942  016552  006F FF8C  F03D    	movff	plusw1,btemp+11
 19943  016558  0E04               	movlw	4
 19944  01655A  243C               	addwf	(btemp+10)^0,w,c
 19945  01655C  6ED9               	movwf	fsr2l,c
 19946  01655E  0E00               	movlw	0
 19947  016560  203D               	addwfc	(btemp+11)^0,w,c
 19948  016562  6EDA               	movwf	fsr2h,c
 19949  016564  50DE               	movf	postinc2,w,c
 19950  016566  10DE               	iorwf	postinc2,w,c
 19951  016568  B4D8               	btfsc	status,2,c
 19952  01656A  D026               	goto	u8830
 19953                           
 19954                           ;stkvar	_fp @ sp[(0)+-4]
 19955  01656C  0EFC               	movlw	-4
 19956  01656E  006F FF8C  F03C    	movff	plusw1,btemp+10
 19957  016574  0EFD               	movlw	-3
 19958  016576  006F FF8C  F03D    	movff	plusw1,btemp+11
 19959  01657C  0E04               	movlw	4
 19960  01657E  243C               	addwf	(btemp+10)^0,w,c
 19961  016580  6ED9               	movwf	fsr2l,c
 19962  016582  0E00               	movlw	0
 19963  016584  203D               	addwfc	(btemp+11)^0,w,c
 19964  016586  6EDA               	movwf	fsr2h,c
 19965                           
 19966                           ;stkvar	_fp @ sp[(0)+-4]
 19967  016588  0EFC               	movlw	-4
 19968  01658A  006F FF8C  F03C    	movff	plusw1,btemp+10
 19969  016590  0EFD               	movlw	-3
 19970  016592  006F FF8C  F03D    	movff	plusw1,btemp+11
 19971  016598  0E02               	movlw	2
 19972  01659A  243C               	addwf	(btemp+10)^0,w,c
 19973  01659C  6EE9               	movwf	fsr0l,c
 19974  01659E  0E00               	movlw	0
 19975  0165A0  203D               	addwfc	(btemp+11)^0,w,c
 19976  0165A2  6EEA               	movwf	fsr0h,c
 19977  0165A4  50DE               	movf	postinc2,w,c
 19978  0165A6  5CEE               	subwf	postinc0,w,c
 19979  0165A8  50EE               	movf	postinc0,w,c
 19980  0165AA  0A80               	xorlw	128
 19981  0165AC  6E32               	movwf	btemp^0,c
 19982  0165AE  50DE               	movf	postinc2,w,c
 19983  0165B0  0A80               	xorlw	128
 19984  0165B2  5832               	subwfb	btemp^0,w,c
 19985  0165B4  B0D8               	btfsc	status,0,c
 19986  0165B6  D03D               	goto	l2833
 19987  0165B8                     u8830:
 19988                           
 19989                           ;stkvar	_c @ sp[(0)+-2]
 19990                           ;stkvar	_fp @ sp[(0)+-4]
 19991  0165B8  0EFC               	movlw	-4
 19992  0165BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 19993  0165C0  0EFD               	movlw	-3
 19994  0165C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 19995  0165C8  0E02               	movlw	2
 19996  0165CA  243C               	addwf	(btemp+10)^0,w,c
 19997  0165CC  6ED9               	movwf	fsr2l,c
 19998  0165CE  0E00               	movlw	0
 19999  0165D0  203D               	addwfc	(btemp+11)^0,w,c
 20000  0165D2  6EDA               	movwf	fsr2h,c
 20001  0165D4  006F FF78  F03C    	movff	postinc2,btemp+10
 20002  0165DA  006F FF74  F03D    	movff	postdec2,btemp+11
 20003                           
 20004                           ;stkvar	_fp @ sp[(0)+-4]
 20005  0165E0  0EFC               	movlw	-4
 20006  0165E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 20007  0165E8  0EFD               	movlw	-3
 20008  0165EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 20009  0165F0  006F FF78  F03A    	movff	postinc2,btemp+8
 20010  0165F6  006F FF74  F03B    	movff	postdec2,btemp+9
 20011  0165FC  503C               	movf	(btemp+10)^0,w,c
 20012  0165FE  243A               	addwf	(btemp+8)^0,w,c
 20013  016600  6ED9               	movwf	fsr2l,c
 20014  016602  503D               	movf	(btemp+11)^0,w,c
 20015  016604  203B               	addwfc	(btemp+9)^0,w,c
 20016  016606  6EDA               	movwf	fsr2h,c
 20017  016608  0EFE               	movlw	-2
 20018  01660A  006F FF8F FFDF     	movff	plusw1,indf2
 20019                           
 20020                           ;stkvar	_fp @ sp[(0)+-4]
 20021  016610  0EFC               	movlw	-4
 20022  016612  006F FF8C  F03C    	movff	plusw1,btemp+10
 20023  016618  0EFD               	movlw	-3
 20024  01661A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20025  016620  0E02               	movlw	2
 20026  016622  243C               	addwf	(btemp+10)^0,w,c
 20027  016624  6ED9               	movwf	fsr2l,c
 20028  016626  0E00               	movlw	0
 20029  016628  203D               	addwfc	(btemp+11)^0,w,c
 20030  01662A  6EDA               	movwf	fsr2h,c
 20031  01662C  2ADE               	incf	postinc2,f,c
 20032  01662E  0E00               	movlw	0
 20033  016630  22DD               	addwfc	postdec2,f,c
 20034  016632                     l2833:
 20035                           
 20036                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20037  016632  52E5               	movf	postdec1,f,c
 20038  016634  52E5               	movf	postdec1,f,c
 20039  016636  52E5               	movf	postdec1,f,c
 20040  016638  52E5               	movf	postdec1,f,c
 20041  01663A  0012               	return		;funcret
 20042  01663C                     __end_of_fputc:
 20043                           	opt callstack 0
 20044                           
 20045 ;; *************** function _putch *****************
 20046 ;; Defined at:
 20047 ;;		line 155 in file "eadog.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;  c               1  [STACK] unsigned char 
 20050 ;; Auto vars:     Size  Location     Type
 20051 ;;		None
 20052 ;; Return value:  Size  Location     Type
 20053 ;;                  1  [STACK] void 
 20054 ;; Registers used:
 20055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20056 ;; Tracked objects:
 20057 ;;		On entry : 0/5
 20058 ;;		On exit  : 0/0
 20059 ;;		Unchanged: 0/0
 20060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20065 ;;Total ram usage:        0 bytes
 20066 ;; Hardware stack levels used:    1
 20067 ;; Hardware stack levels required when called:    7
 20068 ;; This function calls:
 20069 ;;		_ringBufS_put_dma
 20070 ;; This function is called by:
 20071 ;;		_fputc
 20072 ;; This function uses a reentrant model
 20073 ;;
 20074                           
 20075                           	psect	text69
 20076  0184F4                     __ptext69:
 20077                           	opt callstack 0
 20078  0184F4                     _putch:
 20079                           	opt callstack 13
 20080                           
 20081                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20082                           ;stkvar	_c @ sp[(0)+-1]
 20083                           
 20084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20085                           ;incstack = 0
 20086  0184F4  0EFF               	movlw	-1
 20087  0184F6  50E3               	movf	plusw1,w,c
 20088  0184F8  6EE6               	movwf	postinc1,c
 20089  0184FA  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 20090  018500  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 20091  018506  EC59  F0B7         	call	_ringBufS_put_dma	;wreg free
 20092                           
 20093                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20094  01850A  52E5               	movf	postdec1,f,c
 20095  01850C  0012               	return		;funcret
 20096  01850E                     __end_of_putch:
 20097                           	opt callstack 0
 20098                           
 20099 ;; *************** function _ringBufS_put_dma *****************
 20100 ;; Defined at:
 20101 ;;		line 67 in file "ringbufs.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20104 ;;		 -> ring_buf1(67), 
 20105 ;;  c               1  [STACK] const unsigned char 
 20106 ;; Auto vars:     Size  Location     Type
 20107 ;;		None
 20108 ;; Return value:  Size  Location     Type
 20109 ;;                  1  [STACK] void 
 20110 ;; Registers used:
 20111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20112 ;; Tracked objects:
 20113 ;;		On entry : 0/5
 20114 ;;		On exit  : 0/0
 20115 ;;		Unchanged: 0/0
 20116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20121 ;;Total ram usage:        0 bytes
 20122 ;; Hardware stack levels used:    1
 20123 ;; Hardware stack levels required when called:    6
 20124 ;; This function calls:
 20125 ;;		Nothing
 20126 ;; This function is called by:
 20127 ;;		_putch
 20128 ;; This function uses a reentrant model
 20129 ;;
 20130                           
 20131                           	psect	text70
 20132  016EB2                     __ptext70:
 20133                           	opt callstack 0
 20134  016EB2                     _ringBufS_put_dma:
 20135                           	opt callstack 13
 20136                           
 20137                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20138                           ;stkvar	__this @ sp[(0)+-2]
 20139                           
 20140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20141                           ;incstack = 0
 20142  016EB2  0EFE               	movlw	-2
 20143  016EB4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20144  016EBA  0EFF               	movlw	-1
 20145  016EBC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20146  016EC2  0E42               	movlw	66
 20147  016EC4  243C               	addwf	(btemp+10)^0,w,c
 20148  016EC6  6ED9               	movwf	fsr2l,c
 20149  016EC8  0E00               	movlw	0
 20150  016ECA  203D               	addwfc	(btemp+11)^0,w,c
 20151  016ECC  6EDA               	movwf	fsr2h,c
 20152  016ECE  0E40               	movlw	64
 20153  016ED0  60DF               	cpfslt	indf2,c
 20154  016ED2  D040               	goto	l1478
 20155                           
 20156                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20157                           ;stkvar	_c @ sp[(0)+-3]
 20158                           ;stkvar	__this @ sp[(0)+-2]
 20159  016ED4  0EFE               	movlw	-2
 20160  016ED6  006F FF8C  F03C    	movff	plusw1,btemp+10
 20161  016EDC  0EFF               	movlw	-1
 20162  016EDE  006F FF8C  F03D    	movff	plusw1,btemp+11
 20163  016EE4  0E40               	movlw	64
 20164  016EE6  243C               	addwf	(btemp+10)^0,w,c
 20165  016EE8  6ED9               	movwf	fsr2l,c
 20166  016EEA  0E00               	movlw	0
 20167  016EEC  203D               	addwfc	(btemp+11)^0,w,c
 20168  016EEE  6EDA               	movwf	fsr2h,c
 20169  016EF0  50DF               	movf	indf2,w,c
 20170  016EF2  6E3D               	movwf	(btemp+11)^0,c
 20171                           
 20172                           ;stkvar	__this @ sp[(0)+-2]
 20173  016EF4  0EFE               	movlw	-2
 20174  016EF6  006F FF8C  F03A    	movff	plusw1,btemp+8
 20175  016EFC  0EFF               	movlw	-1
 20176  016EFE  006F FF8C  F03B    	movff	plusw1,btemp+9
 20177  016F04  503D               	movf	(btemp+11)^0,w,c
 20178  016F06  243A               	addwf	(btemp+8)^0,w,c
 20179  016F08  6ED9               	movwf	fsr2l,c
 20180  016F0A  0E00               	movlw	0
 20181  016F0C  203B               	addwfc	(btemp+9)^0,w,c
 20182  016F0E  6EDA               	movwf	fsr2h,c
 20183  016F10  0EFD               	movlw	-3
 20184  016F12  006F FF8F FFDF     	movff	plusw1,indf2
 20185                           
 20186                           ;ringbufs.c: 71:   ++_this->head;
 20187                           ;stkvar	__this @ sp[(0)+-2]
 20188  016F18  0EFE               	movlw	-2
 20189  016F1A  006F FF8C  F03C    	movff	plusw1,btemp+10
 20190  016F20  0EFF               	movlw	-1
 20191  016F22  006F FF8C  F03D    	movff	plusw1,btemp+11
 20192  016F28  0E40               	movlw	64
 20193  016F2A  243C               	addwf	(btemp+10)^0,w,c
 20194  016F2C  6ED9               	movwf	fsr2l,c
 20195  016F2E  0E00               	movlw	0
 20196  016F30  203D               	addwfc	(btemp+11)^0,w,c
 20197  016F32  6EDA               	movwf	fsr2h,c
 20198  016F34  2ADF               	incf	indf2,f,c
 20199                           
 20200                           ;ringbufs.c: 72:   ++_this->count;
 20201                           ;stkvar	__this @ sp[(0)+-2]
 20202  016F36  0EFE               	movlw	-2
 20203  016F38  006F FF8C  F03C    	movff	plusw1,btemp+10
 20204  016F3E  0EFF               	movlw	-1
 20205  016F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20206  016F46  0E42               	movlw	66
 20207  016F48  243C               	addwf	(btemp+10)^0,w,c
 20208  016F4A  6ED9               	movwf	fsr2l,c
 20209  016F4C  0E00               	movlw	0
 20210  016F4E  203D               	addwfc	(btemp+11)^0,w,c
 20211  016F50  6EDA               	movwf	fsr2h,c
 20212  016F52  2ADF               	incf	indf2,f,c
 20213  016F54                     l1478:
 20214                           
 20215                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20216  016F54  52E5               	movf	postdec1,f,c
 20217  016F56  52E5               	movf	postdec1,f,c
 20218  016F58  52E5               	movf	postdec1,f,c
 20219  016F5A  0012               	return		;funcret
 20220  016F5C                     __end_of_ringBufS_put_dma:
 20221                           	opt callstack 0
 20222                           
 20223 ;; *************** function _atoi *****************
 20224 ;; Defined at:
 20225 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20226 ;; Parameters:    Size  Location     Type
 20227 ;;  s               2  [STACK] PTR const unsigned char 
 20228 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 20229 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 20230 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 20231 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 20232 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
 20233 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
 20234 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20235 ;; Auto vars:     Size  Location     Type
 20236 ;;  n               2  [STACK] int 
 20237 ;;  neg             2  [STACK] int 
 20238 ;; Return value:  Size  Location     Type
 20239 ;;                  2  [STACK] int 
 20240 ;; Registers used:
 20241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20242 ;; Tracked objects:
 20243 ;;		On entry : 0/5
 20244 ;;		On exit  : 0/0
 20245 ;;		Unchanged: 0/0
 20246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20251 ;;Total ram usage:        0 bytes
 20252 ;; Hardware stack levels used:    1
 20253 ;; Hardware stack levels required when called:    7
 20254 ;; This function calls:
 20255 ;;		_isdigit
 20256 ;;		_isspace
 20257 ;; This function is called by:
 20258 ;;		_vfpfcnvrt
 20259 ;; This function uses a reentrant model
 20260 ;;
 20261                           
 20262                           	psect	text71
 20263  015082                     __ptext71:
 20264                           	opt callstack 0
 20265  015082                     _atoi:
 20266                           	opt callstack 0
 20267                           
 20268                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20269  015082  0E09               	movlw	9
 20270  015084  26E1               	addwf	fsr1l,f,c
 20271  015086  0E00               	movlw	0
 20272  015088  22E2               	addwfc	fsr1h,f,c
 20273                           
 20274                           ;stkvar	_n @ sp[(-9)+5]
 20275                           
 20276                           ;incstack = 0
 20277  01508A  0EFC               	movlw	-4
 20278  01508C  6AE3               	clrf	plusw1,c
 20279  01508E  0EFD               	movlw	-3
 20280  015090  6AE3               	clrf	plusw1,c
 20281                           
 20282                           ;stkvar	_neg @ sp[(-9)+7]
 20283  015092  0EFE               	movlw	-2
 20284  015094  6AE3               	clrf	plusw1,c
 20285  015096  0EFF               	movlw	-1
 20286  015098  6AE3               	clrf	plusw1,c
 20287  01509A  D011               	goto	l10850
 20288  01509C                     l10848:
 20289                           
 20290                           ;stkvar	_s @ sp[(-9)+-2]
 20291  01509C  0EF5               	movlw	-11
 20292  01509E  50E3               	movf	plusw1,w,c
 20293  0150A0  0F01               	addlw	1
 20294  0150A2  6E32               	movwf	btemp^0,c
 20295  0150A4  0EF5               	movlw	-11
 20296  0150A6  0060  F0CB  FFE3   	movff	btemp,plusw1
 20297  0150AC  6A32               	clrf	btemp^0,c
 20298  0150AE  0EF6               	movlw	-10
 20299  0150B0  50E3               	movf	plusw1,w,c
 20300  0150B2  2032               	addwfc	btemp^0,w,c
 20301  0150B4  6E32               	movwf	btemp^0,c
 20302  0150B6  0EF6               	movlw	-10
 20303  0150B8  0060  F0CB  FFE3   	movff	btemp,plusw1
 20304  0150BE                     l10850:
 20305                           
 20306                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20307  0150BE  0EFB               	movlw	-5
 20308  0150C0  6AE3               	clrf	plusw1,c
 20309  0150C2  2AE3               	incf	plusw1,f,c
 20310                           
 20311                           ;stkvar	_s @ sp[(-9)+-2]
 20312  0150C4  50E1               	movf	fsr1l,w,c
 20313  0150C6  0FF5               	addlw	-11
 20314  0150C8  6ED9               	movwf	fsr2l,c
 20315  0150CA  50E2               	movf	fsr1h,w,c
 20316  0150CC  6EDA               	movwf	fsr2h,c
 20317  0150CE  0EFF               	movlw	255
 20318  0150D0  22DA               	addwfc	fsr2h,f,c
 20319  0150D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20320  0150D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20321  0150DE                     	if	0	;tblptru may be non-zero
 20322  0150DE                     	endif
 20323  0150DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20324  0150DE  0E00               	movlw	low (__mediumconst shr (0+16))
 20325  0150E0  6EF8               	movwf	tblptru,c
 20326  0150E2                     	endif
 20327  0150E2  0008               	tblrd		*
 20328  0150E4  50F5               	movf	tablat,w,c
 20329  0150E6  0A20               	xorlw	32
 20330  0150E8  B4D8               	btfsc	status,2,c
 20331  0150EA  D023               	goto	l10858
 20332  0150EC  0EF7               	movlw	247
 20333  0150EE  6E3C               	movwf	(btemp+10)^0,c
 20334  0150F0  0EFF               	movlw	255
 20335  0150F2  6E3D               	movwf	(btemp+11)^0,c
 20336                           
 20337                           ;stkvar	_s @ sp[(-9)+-2]
 20338  0150F4  50E1               	movf	fsr1l,w,c
 20339  0150F6  0FF5               	addlw	-11
 20340  0150F8  6ED9               	movwf	fsr2l,c
 20341  0150FA  50E2               	movf	fsr1h,w,c
 20342  0150FC  6EDA               	movwf	fsr2h,c
 20343  0150FE  0EFF               	movlw	255
 20344  015100  22DA               	addwfc	fsr2h,f,c
 20345  015102  006F FF7B FFF6     	movff	postinc2,tblptrl
 20346  015108  006F FF77 FFF7     	movff	postdec2,tblptrh
 20347  01510E                     	if	0	;tblptru may be non-zero
 20348  01510E                     	endif
 20349  01510E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20350  01510E  0E00               	movlw	low (__mediumconst shr (0+16))
 20351  015110  6EF8               	movwf	tblptru,c
 20352  015112                     	endif
 20353  015112  0008               	tblrd		*
 20354  015114  50F5               	movf	tablat,w,c
 20355  015116  6E3A               	movwf	(btemp+8)^0,c
 20356  015118  6A3B               	clrf	(btemp+9)^0,c
 20357  01511A  503C               	movf	(btemp+10)^0,w,c
 20358  01511C  263A               	addwf	(btemp+8)^0,f,c
 20359  01511E  503D               	movf	(btemp+11)^0,w,c
 20360  015120  223B               	addwfc	(btemp+9)^0,f,c
 20361  015122  503B               	movf	(btemp+9)^0,w,c
 20362  015124  E104               	bnz	u11700
 20363  015126  0E05               	movlw	5
 20364  015128  5C3A               	subwf	(btemp+8)^0,w,c
 20365  01512A  A0D8               	btfss	status,0,c
 20366  01512C  D002               	goto	l10858
 20367  01512E                     u11700:
 20368                           
 20369                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20370  01512E  0EFB               	movlw	-5
 20371  015130  6AE3               	clrf	plusw1,c
 20372  015132                     l10858:
 20373                           
 20374                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20375  015132  0EFB               	movlw	-5
 20376  015134  50E3               	movf	plusw1,w,c
 20377  015136  6E3C               	movwf	(btemp+10)^0,c
 20378  015138  6A3D               	clrf	(btemp+11)^0,c
 20379                           
 20380                           ;stkvar	_atoi$4907 @ sp[(-9)+2]
 20381  01513A  0EF9               	movlw	-7
 20382  01513C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20383  015142  0EFA               	movlw	-6
 20384  015144  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20385                           
 20386                           ;stkvar	_atoi$4907 @ sp[(-9)+2]
 20387  01514A  0EF9               	movlw	-7
 20388  01514C  006F FF8C  F032    	movff	plusw1,btemp
 20389  015152  0EFA               	movlw	-6
 20390  015154  50E3               	movf	plusw1,w,c
 20391  015156  1032               	iorwf	btemp^0,w,c
 20392  015158  B4D8               	btfsc	status,2,c
 20393  01515A  D01F               	goto	l10868
 20394  01515C  D79F               	goto	l10848
 20395  01515E                     l10864:
 20396  01515E  0E01               	movlw	1
 20397  015160  6E3C               	movwf	(btemp+10)^0,c
 20398  015162  0E00               	movlw	0
 20399  015164  6E3D               	movwf	(btemp+11)^0,c
 20400                           
 20401                           ;stkvar	_neg @ sp[(-9)+7]
 20402  015166  0EFE               	movlw	-2
 20403  015168  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20404  01516E  0EFF               	movlw	-1
 20405  015170  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20406  015176                     l10866:
 20407                           
 20408                           ;stkvar	_s @ sp[(-9)+-2]
 20409  015176  0EF5               	movlw	-11
 20410  015178  50E3               	movf	plusw1,w,c
 20411  01517A  0F01               	addlw	1
 20412  01517C  6E32               	movwf	btemp^0,c
 20413  01517E  0EF5               	movlw	-11
 20414  015180  0060  F0CB  FFE3   	movff	btemp,plusw1
 20415  015186  6A32               	clrf	btemp^0,c
 20416  015188  0EF6               	movlw	-10
 20417  01518A  50E3               	movf	plusw1,w,c
 20418  01518C  2032               	addwfc	btemp^0,w,c
 20419  01518E  6E32               	movwf	btemp^0,c
 20420  015190  0EF6               	movlw	-10
 20421  015192  0060  F0CB  FFE3   	movff	btemp,plusw1
 20422  015198  D053               	goto	l10874
 20423  01519A                     l10868:
 20424                           
 20425                           ;stkvar	_s @ sp[(-9)+-2]
 20426  01519A  50E1               	movf	fsr1l,w,c
 20427  01519C  0FF5               	addlw	-11
 20428  01519E  6ED9               	movwf	fsr2l,c
 20429  0151A0  50E2               	movf	fsr1h,w,c
 20430  0151A2  6EDA               	movwf	fsr2h,c
 20431  0151A4  0EFF               	movlw	255
 20432  0151A6  22DA               	addwfc	fsr2h,f,c
 20433  0151A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20434  0151AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20435  0151B4                     	if	0	;tblptru may be non-zero
 20436  0151B4                     	endif
 20437  0151B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20438  0151B4  0E00               	movlw	low (__mediumconst shr (0+16))
 20439  0151B6  6EF8               	movwf	tblptru,c
 20440  0151B8                     	endif
 20441  0151B8  0008               	tblrd		*
 20442  0151BA  50F5               	movf	tablat,w,c
 20443  0151BC  6E3C               	movwf	(btemp+10)^0,c
 20444  0151BE  6A3D               	clrf	(btemp+11)^0,c
 20445                           
 20446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20447                           ; Switch size 1, requested type "simple"
 20448                           ; Number of cases is 1, Range of values is 0 to 0
 20449                           ; switch strategies available:
 20450                           ; Name         Instructions Cycles
 20451                           ; simple_byte            4     3 (average)
 20452                           ;	Chosen strategy is simple_byte
 20453  0151C0  503D               	movf	(btemp+11)^0,w,c
 20454  0151C2  0A00               	xorlw	0	; case 0
 20455  0151C4  A4D8               	btfss	status,2,c
 20456  0151C6  D03C               	goto	l10874
 20457                           
 20458                           ; Switch size 1, requested type "simple"
 20459                           ; Number of cases is 2, Range of values is 43 to 45
 20460                           ; switch strategies available:
 20461                           ; Name         Instructions Cycles
 20462                           ; simple_byte            7     4 (average)
 20463                           ;	Chosen strategy is simple_byte
 20464  0151C8  503C               	movf	(btemp+10)^0,w,c
 20465  0151CA  0A2B               	xorlw	43	; case 43
 20466  0151CC  B4D8               	btfsc	status,2,c
 20467  0151CE  D7D3               	goto	l10866
 20468  0151D0  0A06               	xorlw	6	; case 45
 20469  0151D2  B4D8               	btfsc	status,2,c
 20470  0151D4  D7C4               	goto	l10864
 20471  0151D6  D034               	goto	l10874
 20472  0151D8                     l10870:
 20473                           
 20474                           ;stkvar	_n @ sp[(-9)+5]
 20475  0151D8  0EFC               	movlw	-4
 20476  0151DA  006F FF8C  F03C    	movff	plusw1,btemp+10
 20477  0151E0  0EFD               	movlw	-3
 20478  0151E2  006F FF8C  F03D    	movff	plusw1,btemp+11
 20479  0151E8  0E0A               	movlw	10
 20480  0151EA  023C               	mulwf	(btemp+10)^0,c
 20481  0151EC  006F FFCC  F03A    	movff	prodl,btemp+8
 20482  0151F2  006F FFD0  F03B    	movff	prodh,btemp+9
 20483  0151F8  023D               	mulwf	(btemp+11)^0,c
 20484  0151FA  50F3               	movf	prodl,w,c
 20485  0151FC  263B               	addwf	(btemp+9)^0,f,c
 20486                           
 20487                           ;stkvar	_s @ sp[(-9)+-2]
 20488  0151FE  50E1               	movf	fsr1l,w,c
 20489  015200  0FF5               	addlw	-11
 20490  015202  6ED9               	movwf	fsr2l,c
 20491  015204  50E2               	movf	fsr1h,w,c
 20492  015206  6EDA               	movwf	fsr2h,c
 20493  015208  0EFF               	movlw	255
 20494  01520A  22DA               	addwfc	fsr2h,f,c
 20495  01520C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20496  015212  006F FF77 FFF7     	movff	postdec2,tblptrh
 20497  015218                     	if	0	;tblptru may be non-zero
 20498  015218                     	endif
 20499  015218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20500  015218  0E00               	movlw	low (__mediumconst shr (0+16))
 20501  01521A  6EF8               	movwf	tblptru,c
 20502  01521C                     	endif
 20503  01521C  0008               	tblrd		*
 20504  01521E  50F5               	movf	tablat,w,c
 20505  015220  5E3A               	subwf	(btemp+8)^0,f,c
 20506  015222  0E00               	movlw	0
 20507  015224  5A3B               	subwfb	(btemp+9)^0,f,c
 20508  015226  0E30               	movlw	48
 20509  015228  263A               	addwf	(btemp+8)^0,f,c
 20510  01522A  0E00               	movlw	0
 20511  01522C  223B               	addwfc	(btemp+9)^0,f,c
 20512                           
 20513                           ;stkvar	_n @ sp[(-9)+5]
 20514  01522E  0EFC               	movlw	-4
 20515  015230  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20516  015236  0EFD               	movlw	-3
 20517  015238  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20518  01523E  D79B               	goto	l10866
 20519  015240                     l10874:
 20520  015240  0ED0               	movlw	208
 20521  015242  6E3C               	movwf	(btemp+10)^0,c
 20522  015244  0EFF               	movlw	255
 20523  015246  6E3D               	movwf	(btemp+11)^0,c
 20524                           
 20525                           ;stkvar	_s @ sp[(-9)+-2]
 20526  015248  50E1               	movf	fsr1l,w,c
 20527  01524A  0FF5               	addlw	-11
 20528  01524C  6ED9               	movwf	fsr2l,c
 20529  01524E  50E2               	movf	fsr1h,w,c
 20530  015250  6EDA               	movwf	fsr2h,c
 20531  015252  0EFF               	movlw	255
 20532  015254  22DA               	addwfc	fsr2h,f,c
 20533  015256  006F FF7B FFF6     	movff	postinc2,tblptrl
 20534  01525C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20535  015262                     	if	0	;tblptru may be non-zero
 20536  015262                     	endif
 20537  015262                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20538  015262  0E00               	movlw	low (__mediumconst shr (0+16))
 20539  015264  6EF8               	movwf	tblptru,c
 20540  015266                     	endif
 20541  015266  0008               	tblrd		*
 20542  015268  50F5               	movf	tablat,w,c
 20543  01526A  6E3A               	movwf	(btemp+8)^0,c
 20544  01526C  6A3B               	clrf	(btemp+9)^0,c
 20545  01526E  503C               	movf	(btemp+10)^0,w,c
 20546  015270  263A               	addwf	(btemp+8)^0,f,c
 20547  015272  503D               	movf	(btemp+11)^0,w,c
 20548  015274  223B               	addwfc	(btemp+9)^0,f,c
 20549  015276  503B               	movf	(btemp+9)^0,w,c
 20550  015278  E106               	bnz	u11720
 20551  01527A  0E0A               	movlw	10
 20552  01527C  5C3A               	subwf	(btemp+8)^0,w,c
 20553  01527E  B0D8               	btfsc	status,0,c
 20554  015280  D002               	goto	u11720
 20555  015282  0E01               	movlw	1
 20556  015284  D001               	goto	u11730
 20557  015286                     u11720:
 20558  015286  0E00               	movlw	0
 20559  015288                     u11730:
 20560  015288  6E3C               	movwf	(btemp+10)^0,c
 20561  01528A  6A3D               	clrf	(btemp+11)^0,c
 20562                           
 20563                           ;stkvar	_atoi$4909 @ sp[(-9)+0]
 20564  01528C  0EF7               	movlw	-9
 20565  01528E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20566  015294  0EF8               	movlw	-8
 20567  015296  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20568                           
 20569                           ;stkvar	_atoi$4909 @ sp[(-9)+0]
 20570  01529C  0EF7               	movlw	-9
 20571  01529E  006F FF8C  F032    	movff	plusw1,btemp
 20572  0152A4  0EF8               	movlw	-8
 20573  0152A6  50E3               	movf	plusw1,w,c
 20574  0152A8  1032               	iorwf	btemp^0,w,c
 20575  0152AA  A4D8               	btfss	status,2,c
 20576  0152AC  D795               	goto	l10870
 20577                           
 20578                           ;stkvar	_neg @ sp[(-9)+7]
 20579  0152AE  0EFE               	movlw	-2
 20580  0152B0  006F FF8C  F032    	movff	plusw1,btemp
 20581  0152B6  0EFF               	movlw	-1
 20582  0152B8  50E3               	movf	plusw1,w,c
 20583  0152BA  1032               	iorwf	btemp^0,w,c
 20584  0152BC  A4D8               	btfss	status,2,c
 20585  0152BE  D00E               	goto	l10884
 20586                           
 20587                           ;stkvar	_n @ sp[(-9)+5]
 20588  0152C0  0EFC               	movlw	-4
 20589  0152C2  006F FF8C  F032    	movff	plusw1,btemp
 20590  0152C8  1E32               	comf	btemp^0,f,c
 20591  0152CA  0EFD               	movlw	-3
 20592  0152CC  006F FF8C  F033    	movff	plusw1,btemp+1
 20593  0152D2  1E33               	comf	(btemp+1)^0,f,c
 20594  0152D4  2A32               	incf	btemp^0,f,c
 20595  0152D6  B4D8               	btfsc	status,2,c
 20596  0152D8  2A33               	incf	(btemp+1)^0,f,c
 20597  0152DA  D008               	goto	l2769
 20598  0152DC                     l10884:
 20599                           
 20600                           ;stkvar	_n @ sp[(-9)+5]
 20601  0152DC  0EFC               	movlw	-4
 20602  0152DE  006F FF8C  F032    	movff	plusw1,btemp
 20603  0152E4  0EFD               	movlw	-3
 20604  0152E6  006F FF8C  F033    	movff	plusw1,btemp+1
 20605  0152EC                     l2769:
 20606                           
 20607                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20608  0152EC  0EF5               	movlw	245
 20609  0152EE  26E1               	addwf	fsr1l,f,c
 20610  0152F0  0EFF               	movlw	255
 20611  0152F2  22E2               	addwfc	fsr1h,f,c
 20612  0152F4  0012               	return		;funcret
 20613  0152F6                     __end_of_atoi:
 20614                           	opt callstack 0
 20615                           
 20616 ;; *************** function _isspace *****************
 20617 ;; Defined at:
 20618 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20619 ;; Parameters:    Size  Location     Type
 20620 ;;  c               2  [STACK] int 
 20621 ;; Auto vars:     Size  Location     Type
 20622 ;;		None
 20623 ;; Return value:  Size  Location     Type
 20624 ;;                  2  [STACK] int 
 20625 ;; Registers used:
 20626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20627 ;; Tracked objects:
 20628 ;;		On entry : 0/0
 20629 ;;		On exit  : 0/0
 20630 ;;		Unchanged: 0/0
 20631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20636 ;;Total ram usage:        0 bytes
 20637 ;; Hardware stack levels used:    1
 20638 ;; Hardware stack levels required when called:    6
 20639 ;; This function calls:
 20640 ;;		Nothing
 20641 ;; This function is called by:
 20642 ;;		_atoi
 20643 ;; This function uses a reentrant model
 20644 ;;
 20645                           
 20646                           	psect	text72
 20647  017A7C                     __ptext72:
 20648                           	opt callstack 0
 20649  017A7C                     _isspace:
 20650                           	opt callstack 0
 20651                           
 20652                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20653  017A7C  52E6               	movf	postinc1,f,c
 20654                           
 20655                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20656                           
 20657                           ;incstack = 0
 20658  017A7E  0EFF               	movlw	-1
 20659  017A80  6AE3               	clrf	plusw1,c
 20660  017A82  2AE3               	incf	plusw1,f,c
 20661                           
 20662                           ;stkvar	_c @ sp[(-1)+-2]
 20663  017A84  0EFD               	movlw	-3
 20664  017A86  006F FF8C  F032    	movff	plusw1,btemp
 20665  017A8C  0E20               	movlw	32
 20666  017A8E  1832               	xorwf	btemp^0,w,c
 20667  017A90  E104               	bnz	u10690
 20668  017A92  0EFE               	movlw	-2
 20669  017A94  50E3               	movf	plusw1,w,c
 20670  017A96  B4D8               	btfsc	status,2,c
 20671  017A98  D012               	goto	l10334
 20672  017A9A                     u10690:
 20673                           
 20674                           ;stkvar	_c @ sp[(-1)+-2]
 20675  017A9A  0EFD               	movlw	-3
 20676  017A9C  50E3               	movf	plusw1,w,c
 20677  017A9E  0FF7               	addlw	247
 20678  017AA0  6E3C               	movwf	(btemp+10)^0,c
 20679  017AA2  0EFE               	movlw	-2
 20680  017AA4  006F FF8C  F03D    	movff	plusw1,btemp+11
 20681  017AAA  0EFF               	movlw	255
 20682  017AAC  223D               	addwfc	(btemp+11)^0,f,c
 20683  017AAE  503D               	movf	(btemp+11)^0,w,c
 20684  017AB0  E104               	bnz	u10700
 20685  017AB2  0E05               	movlw	5
 20686  017AB4  5C3C               	subwf	(btemp+10)^0,w,c
 20687  017AB6  A0D8               	btfss	status,0,c
 20688  017AB8  D002               	goto	l10334
 20689  017ABA                     u10700:
 20690                           
 20691                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20692  017ABA  0EFF               	movlw	-1
 20693  017ABC  6AE3               	clrf	plusw1,c
 20694  017ABE                     l10334:
 20695                           
 20696                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20697  017ABE  0EFF               	movlw	-1
 20698  017AC0  50E3               	movf	plusw1,w,c
 20699  017AC2  6E32               	movwf	btemp^0,c
 20700  017AC4  6A33               	clrf	(btemp+1)^0,c
 20701                           
 20702                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20703  017AC6  52E5               	movf	postdec1,f,c
 20704  017AC8  52E5               	movf	postdec1,f,c
 20705  017ACA  52E5               	movf	postdec1,f,c
 20706  017ACC  0012               	return		;funcret
 20707  017ACE                     __end_of_isspace:
 20708                           	opt callstack 0
 20709                           
 20710 ;; *************** function _isdigit *****************
 20711 ;; Defined at:
 20712 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20713 ;; Parameters:    Size  Location     Type
 20714 ;;  c               2  [STACK] int 
 20715 ;; Auto vars:     Size  Location     Type
 20716 ;;		None
 20717 ;; Return value:  Size  Location     Type
 20718 ;;                  2  [STACK] int 
 20719 ;; Registers used:
 20720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20721 ;; Tracked objects:
 20722 ;;		On entry : 0/0
 20723 ;;		On exit  : 0/0
 20724 ;;		Unchanged: 0/0
 20725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20730 ;;Total ram usage:        0 bytes
 20731 ;; Hardware stack levels used:    1
 20732 ;; Hardware stack levels required when called:    6
 20733 ;; This function calls:
 20734 ;;		Nothing
 20735 ;; This function is called by:
 20736 ;;		_vfpfcnvrt
 20737 ;;		_atoi
 20738 ;; This function uses a reentrant model
 20739 ;;
 20740                           
 20741                           	psect	text73
 20742  017F22                     __ptext73:
 20743                           	opt callstack 0
 20744  017F22                     _isdigit:
 20745                           	opt callstack 18
 20746                           
 20747                           ;stkvar	_c @ sp[(0)+-2]
 20748                           
 20749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20750                           ;incstack = 0
 20751  017F22  0EFE               	movlw	-2
 20752  017F24  50E3               	movf	plusw1,w,c
 20753  017F26  0FD0               	addlw	208
 20754  017F28  6E3C               	movwf	(btemp+10)^0,c
 20755  017F2A  0EFF               	movlw	-1
 20756  017F2C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20757  017F32  0EFF               	movlw	255
 20758  017F34  223D               	addwfc	(btemp+11)^0,f,c
 20759  017F36  503D               	movf	(btemp+11)^0,w,c
 20760  017F38  E106               	bnz	u9650
 20761  017F3A  0E0A               	movlw	10
 20762  017F3C  5C3C               	subwf	(btemp+10)^0,w,c
 20763  017F3E  B0D8               	btfsc	status,0,c
 20764  017F40  D002               	goto	u9650
 20765  017F42  0E01               	movlw	1
 20766  017F44  D001               	goto	u9660
 20767  017F46                     u9650:
 20768  017F46  0E00               	movlw	0
 20769  017F48                     u9660:
 20770  017F48  6E32               	movwf	btemp^0,c
 20771  017F4A  6A33               	clrf	(btemp+1)^0,c
 20772                           
 20773                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20774  017F4C  52E5               	movf	postdec1,f,c
 20775  017F4E  52E5               	movf	postdec1,f,c
 20776  017F50  0012               	return		;funcret
 20777  017F52                     __end_of_isdigit:
 20778                           	opt callstack 0
 20779                           
 20780 ;; *************** function _set_vterm *****************
 20781 ;; Defined at:
 20782 ;;		line 107 in file "mconfig.c"
 20783 ;; Parameters:    Size  Location     Type
 20784 ;;  vterm           1  [STACK] const unsigned char 
 20785 ;; Auto vars:     Size  Location     Type
 20786 ;;		None
 20787 ;; Return value:  Size  Location     Type
 20788 ;;                  1  [STACK] unsigned char 
 20789 ;; Registers used:
 20790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20791 ;; Tracked objects:
 20792 ;;		On entry : 0/1
 20793 ;;		On exit  : 3F/5
 20794 ;;		Unchanged: 0/0
 20795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20800 ;;Total ram usage:        0 bytes
 20801 ;; Hardware stack levels used:    1
 20802 ;; Hardware stack levels required when called:    6
 20803 ;; This function calls:
 20804 ;;		Nothing
 20805 ;; This function is called by:
 20806 ;;		_main
 20807 ;;		_check_help
 20808 ;; This function uses a reentrant model
 20809 ;;
 20810                           
 20811                           	psect	text74
 20812  0184D8                     __ptext74:
 20813                           	opt callstack 0
 20814  0184D8                     _set_vterm:
 20815                           	opt callstack 24
 20816                           
 20817                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20818                           ;stkvar	_vterm @ sp[(0)+-1]
 20819                           
 20820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20821                           ;incstack = 0
 20822  0184D8  0EFF               	movlw	-1
 20823  0184DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 20824  0184E0  0E03               	movlw	3
 20825  0184E2  163D               	andwf	(btemp+11)^0,f,c
 20826  0184E4  0105               	movlb	5	; () banked
 20827  0184E6  51D8               	movf	(_D+216)& (0+255),w,b
 20828  0184E8  183D               	xorwf	(btemp+11)^0,w,c
 20829  0184EA  0BFE               	andlw	-2
 20830  0184EC  183D               	xorwf	(btemp+11)^0,w,c
 20831  0184EE  6FD8               	movwf	(_D+216)& (0+255),b
 20832                           
 20833                           ; BSR set to: 5
 20834                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20835  0184F0  52E5               	movf	postdec1,f,c
 20836  0184F2  0012               	return		;funcret
 20837  0184F4                     __end_of_set_vterm:
 20838                           	opt callstack 0
 20839                           
 20840 ;; *************** function _set_temp_display_help *****************
 20841 ;; Defined at:
 20842 ;;		line 211 in file "mconfig.c"
 20843 ;; Parameters:    Size  Location     Type
 20844 ;;  new_response    1  [STACK] const enum E16501
 20845 ;; Auto vars:     Size  Location     Type
 20846 ;;		None
 20847 ;; Return value:  Size  Location     Type
 20848 ;;                  1  [STACK] enum E16501
 20849 ;; Registers used:
 20850 ;;		wreg, fsr1l, fsr1h
 20851 ;; Tracked objects:
 20852 ;;		On entry : 0/5
 20853 ;;		On exit  : 3F/1
 20854 ;;		Unchanged: 0/0
 20855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20860 ;;Total ram usage:        0 bytes
 20861 ;; Hardware stack levels used:    1
 20862 ;; Hardware stack levels required when called:    6
 20863 ;; This function calls:
 20864 ;;		Nothing
 20865 ;; This function is called by:
 20866 ;;		_check_help
 20867 ;; This function uses a reentrant model
 20868 ;;
 20869                           
 20870                           	psect	text75
 20871  0185D2                     __ptext75:
 20872                           	opt callstack 0
 20873  0185D2                     _set_temp_display_help:
 20874                           	opt callstack 23
 20875                           
 20876                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20877                           
 20878                           ; BSR set to: 5
 20879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20880                           ;incstack = 0
 20881  0185D2  0101               	movlb	1	; () banked
 20882  0185D4  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20883                           
 20884                           ; BSR set to: 1
 20885                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20886                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20887  0185D6  0EFF               	movlw	-1
 20888  0185D8  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20889                           
 20890                           ; BSR set to: 1
 20891                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20892  0185DE  52E5               	movf	postdec1,f,c
 20893  0185E0  0012               	return		;funcret
 20894  0185E2                     __end_of_set_temp_display_help:
 20895                           	opt callstack 0
 20896                           
 20897 ;; *************** function _set_display_info *****************
 20898 ;; Defined at:
 20899 ;;		line 200 in file "mconfig.c"
 20900 ;; Parameters:    Size  Location     Type
 20901 ;;  new_response    1  [STACK] const enum E16501
 20902 ;; Auto vars:     Size  Location     Type
 20903 ;;		None
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  1  [STACK] enum E16986
 20906 ;; Registers used:
 20907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/39
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20917 ;;Total ram usage:        0 bytes
 20918 ;; Hardware stack levels used:    1
 20919 ;; Hardware stack levels required when called:    7
 20920 ;; This function calls:
 20921 ;;		_TimerDone
 20922 ;; This function is called by:
 20923 ;;		_main
 20924 ;;		_check_help
 20925 ;; This function uses a reentrant model
 20926 ;;
 20927                           
 20928                           	psect	text76
 20929  018462                     __ptext76:
 20930                           	opt callstack 0
 20931  018462                     _set_display_info:
 20932                           	opt callstack 23
 20933                           
 20934                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20935                           
 20936                           ; BSR set to: 1
 20937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20938                           ;incstack = 0
 20939  018462  0E07               	movlw	7
 20940  018464  6EE6               	movwf	postinc1,c
 20941  018466  ECAB  F0C1         	call	_TimerDone	;wreg free
 20942  01846A  5032               	movf	btemp^0,w,c
 20943  01846C  B4D8               	btfsc	status,2,c
 20944  01846E  D006               	goto	l1615
 20945                           
 20946                           ;mconfig.c: 205:   old_info = V.response.info;
 20947  018470  0101               	movlb	1	; () banked
 20948  018472  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20949                           
 20950                           ; BSR set to: 1
 20951                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20952                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20953  018474  0EFF               	movlw	-1
 20954  018476  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20955  01847C                     l1615:
 20956                           
 20957                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20958  01847C  52E5               	movf	postdec1,f,c
 20959  01847E  0012               	return		;funcret
 20960  018480                     __end_of_set_display_info:
 20961                           	opt callstack 0
 20962                           
 20963 ;; *************** function _mode_lamp_dim *****************
 20964 ;; Defined at:
 20965 ;;		line 13 in file "mconfig.c"
 20966 ;; Parameters:    Size  Location     Type
 20967 ;;  level           2  [STACK] const unsigned short 
 20968 ;; Auto vars:     Size  Location     Type
 20969 ;;		None
 20970 ;; Return value:  Size  Location     Type
 20971 ;;                  1  [STACK] void 
 20972 ;; Registers used:
 20973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20974 ;; Tracked objects:
 20975 ;;		On entry : 0/1
 20976 ;;		On exit  : 0/0
 20977 ;;		Unchanged: 0/0
 20978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20983 ;;Total ram usage:        0 bytes
 20984 ;; Hardware stack levels used:    1
 20985 ;; Hardware stack levels required when called:    7
 20986 ;; This function calls:
 20987 ;;		_PWM8_LoadDutyValue
 20988 ;; This function is called by:
 20989 ;;		_main
 20990 ;;		_check_help
 20991 ;; This function uses a reentrant model
 20992 ;;
 20993                           
 20994                           	psect	text77
 20995  01852A                     __ptext77:
 20996                           	opt callstack 0
 20997  01852A                     _mode_lamp_dim:
 20998                           	opt callstack 23
 20999                           
 21000                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21001                           ;stkvar	_level @ sp[(0)+-2]
 21002                           
 21003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21004                           ;incstack = 0
 21005  01852A  0EFE               	movlw	-2
 21006  01852C  006F FF8F FFE6     	movff	plusw1,postinc1
 21007  018532  006F FF8F FFE6     	movff	plusw1,postinc1
 21008  018538  EC5C  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 21009                           
 21010                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21011  01853C  52E5               	movf	postdec1,f,c
 21012  01853E  52E5               	movf	postdec1,f,c
 21013  018540  0012               	return		;funcret
 21014  018542                     __end_of_mode_lamp_dim:
 21015                           	opt callstack 0
 21016                           
 21017 ;; *************** function _mode_lamp_bright *****************
 21018 ;; Defined at:
 21019 ;;		line 18 in file "mconfig.c"
 21020 ;; Parameters:    Size  Location     Type
 21021 ;;		None
 21022 ;; Auto vars:     Size  Location     Type
 21023 ;;		None
 21024 ;; Return value:  Size  Location     Type
 21025 ;;                  1  [STACK] void 
 21026 ;; Registers used:
 21027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21028 ;; Tracked objects:
 21029 ;;		On entry : 0/1
 21030 ;;		On exit  : 0/0
 21031 ;;		Unchanged: 0/0
 21032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21037 ;;Total ram usage:        0 bytes
 21038 ;; Hardware stack levels used:    1
 21039 ;; Hardware stack levels required when called:    7
 21040 ;; This function calls:
 21041 ;;		_PWM8_LoadDutyValue
 21042 ;; This function is called by:
 21043 ;;		_check_help
 21044 ;; This function uses a reentrant model
 21045 ;;
 21046                           
 21047                           	psect	text78
 21048  0185F0                     __ptext78:
 21049                           	opt callstack 0
 21050  0185F0                     _mode_lamp_bright:
 21051                           	opt callstack 22
 21052                           
 21053                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21054                           
 21055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21056                           ;incstack = 0
 21057  0185F0  0E2C               	movlw	44
 21058  0185F2  6EE6               	movwf	postinc1,c
 21059  0185F4  0E01               	movlw	1
 21060  0185F6  6EE6               	movwf	postinc1,c
 21061  0185F8  EC5C  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 21062                           
 21063                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21064  0185FC  0012               	return		;funcret
 21065  0185FE                     __end_of_mode_lamp_bright:
 21066                           	opt callstack 0
 21067                           
 21068 ;; *************** function _PWM8_LoadDutyValue *****************
 21069 ;; Defined at:
 21070 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21071 ;; Parameters:    Size  Location     Type
 21072 ;;  dutyValue       2  [STACK] unsigned short 
 21073 ;; Auto vars:     Size  Location     Type
 21074 ;;		None
 21075 ;; Return value:  Size  Location     Type
 21076 ;;                  1  [STACK] void 
 21077 ;; Registers used:
 21078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21079 ;; Tracked objects:
 21080 ;;		On entry : 0/1
 21081 ;;		On exit  : 0/0
 21082 ;;		Unchanged: 0/0
 21083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21088 ;;Total ram usage:        0 bytes
 21089 ;; Hardware stack levels used:    1
 21090 ;; Hardware stack levels required when called:    6
 21091 ;; This function calls:
 21092 ;;		Nothing
 21093 ;; This function is called by:
 21094 ;;		_mode_lamp_dim
 21095 ;;		_mode_lamp_bright
 21096 ;; This function uses a reentrant model
 21097 ;;
 21098                           
 21099                           	psect	text79
 21100  017CB8                     __ptext79:
 21101                           	opt callstack 0
 21102  017CB8                     _PWM8_LoadDutyValue:
 21103                           	opt callstack 23
 21104                           
 21105                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21106                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21107                           
 21108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21109                           ;incstack = 0
 21110  017CB8  0EFE               	movlw	-2
 21111  017CBA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21112  017CC0  0EFF               	movlw	-1
 21113  017CC2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21114  017CC8  90D8               	bcf	status,0,c
 21115  017CCA  323D               	rrcf	(btemp+11)^0,f,c
 21116  017CCC  323C               	rrcf	(btemp+10)^0,f,c
 21117  017CCE  90D8               	bcf	status,0,c
 21118  017CD0  323D               	rrcf	(btemp+11)^0,f,c
 21119  017CD2  323C               	rrcf	(btemp+10)^0,f,c
 21120  017CD4  503C               	movf	(btemp+10)^0,w,c
 21121  017CD6  6E61               	movwf	97,c	;volatile
 21122                           
 21123                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21124                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21125  017CD8  0EFE               	movlw	-2
 21126  017CDA  006F FF8C  F03D    	movff	plusw1,btemp+11
 21127  017CE0  0E03               	movlw	3
 21128  017CE2  163D               	andwf	(btemp+11)^0,f,c
 21129  017CE4  0E06               	movlw	6
 21130  017CE6  6E32               	movwf	btemp^0,c
 21131  017CE8                     u12185:
 21132  017CE8  90D8               	bcf	status,0,c
 21133  017CEA  363D               	rlcf	(btemp+11)^0,f,c
 21134  017CEC  2E32               	decfsz	btemp^0,f,c
 21135  017CEE  D7FC               	goto	u12185
 21136  017CF0  503D               	movf	(btemp+11)^0,w,c
 21137  017CF2  6E60               	movwf	96,c	;volatile
 21138                           
 21139                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21140  017CF4  52E5               	movf	postdec1,f,c
 21141  017CF6  52E5               	movf	postdec1,f,c
 21142  017CF8  0012               	return		;funcret
 21143  017CFA                     __end_of_PWM8_LoadDutyValue:
 21144                           	opt callstack 0
 21145                           
 21146 ;; *************** function _help_button *****************
 21147 ;; Defined at:
 21148 ;;		line 26 in file "mconfig.c"
 21149 ;; Parameters:    Size  Location     Type
 21150 ;;		None
 21151 ;; Auto vars:     Size  Location     Type
 21152 ;;		None
 21153 ;; Return value:  Size  Location     Type
 21154 ;;                  1  [STACK] _Bool 
 21155 ;; Registers used:
 21156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21157 ;; Tracked objects:
 21158 ;;		On entry : 0/1
 21159 ;;		On exit  : 0/0
 21160 ;;		Unchanged: 0/0
 21161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21166 ;;Total ram usage:        0 bytes
 21167 ;; Hardware stack levels used:    1
 21168 ;; Hardware stack levels required when called:    7
 21169 ;; This function calls:
 21170 ;;		_StartTimer
 21171 ;;		_TimerDone
 21172 ;; This function is called by:
 21173 ;;		_check_help
 21174 ;; This function uses a reentrant model
 21175 ;;
 21176                           
 21177                           	psect	text80
 21178  017DB6                     __ptext80:
 21179                           	opt callstack 0
 21180  017DB6                     _help_button:
 21181                           	opt callstack 22
 21182                           
 21183                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21184                           
 21185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21186                           ;incstack = 0
 21187  017DB6  B0CB               	btfsc	203,0,c	;volatile
 21188  017DB8  D00C               	goto	l1558
 21189                           
 21190                           ;mconfig.c: 29:   V.help = 1;
 21191  017DBA  0101               	movlb	1	; () banked
 21192  017DBC  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21193                           
 21194                           ; BSR set to: 1
 21195                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21196  017DBE  0E08               	movlw	8
 21197  017DC0  6EE6               	movwf	postinc1,c
 21198  017DC2  ECAB  F0C1         	call	_TimerDone	;wreg free
 21199  017DC6  5032               	movf	btemp^0,w,c
 21200  017DC8  B4D8               	btfsc	status,2,c
 21201  017DCA  D003               	goto	l1558
 21202                           
 21203                           ;mconfig.c: 31:    return 1;
 21204  017DCC  0E01               	movlw	1
 21205  017DCE  6E32               	movwf	btemp^0,c
 21206  017DD0  0012               	return	
 21207  017DD2                     l1558:
 21208                           
 21209                           ;mconfig.c: 34:  if (!V.help)
 21210  017DD2  0101               	movlb	1	; () banked
 21211  017DD4  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21212  017DD6  D008               	goto	l11756
 21213                           
 21214                           ; BSR set to: 1
 21215                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21216  017DD8  0E2C               	movlw	44
 21217  017DDA  6EE6               	movwf	postinc1,c
 21218  017DDC  0E01               	movlw	1
 21219  017DDE  6EE6               	movwf	postinc1,c
 21220  017DE0  0E08               	movlw	8
 21221  017DE2  6EE6               	movwf	postinc1,c
 21222  017DE4  ECBD  F0BE         	call	_StartTimer	;wreg free
 21223  017DE8                     l11756:
 21224                           
 21225                           ;mconfig.c: 37:  return 0;
 21226  017DE8  0E00               	movlw	0
 21227  017DEA  6E32               	movwf	btemp^0,c
 21228                           
 21229                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21230  017DEC  0012               	return		;funcret
 21231  017DEE                     __end_of_help_button:
 21232                           	opt callstack 0
 21233                           
 21234 ;; *************** function _TimerDone *****************
 21235 ;; Defined at:
 21236 ;;		line 20 in file "timers.c"
 21237 ;; Parameters:    Size  Location     Type
 21238 ;;  timer           1  [STACK] const unsigned char 
 21239 ;; Auto vars:     Size  Location     Type
 21240 ;;		None
 21241 ;; Return value:  Size  Location     Type
 21242 ;;                  1  [STACK] _Bool 
 21243 ;; Registers used:
 21244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21245 ;; Tracked objects:
 21246 ;;		On entry : 0/39
 21247 ;;		On exit  : 0/0
 21248 ;;		Unchanged: 0/0
 21249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21254 ;;Total ram usage:        0 bytes
 21255 ;; Hardware stack levels used:    1
 21256 ;; Hardware stack levels required when called:    6
 21257 ;; This function calls:
 21258 ;;		Nothing
 21259 ;; This function is called by:
 21260 ;;		_main
 21261 ;;		_WaitMs
 21262 ;;		_help_button
 21263 ;;		_check_help
 21264 ;;		_set_display_info
 21265 ;; This function uses a reentrant model
 21266 ;;
 21267                           
 21268                           	psect	text81
 21269  018356                     __ptext81:
 21270                           	opt callstack 0
 21271  018356                     _TimerDone:
 21272                           	opt callstack 23
 21273                           
 21274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21275                           ;incstack = 0
 21276  018356  0004               	clrwdt		;# 
 21277                           
 21278                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21279                           ;stkvar	_timer @ sp[(0)+-1]
 21280  018358  0EFF               	movlw	-1
 21281  01835A  50E3               	movf	plusw1,w,c
 21282  01835C  0D02               	mullw	2
 21283  01835E  50F3               	movf	243,w,c
 21284  018360  0F89               	addlw	low _tickCount
 21285  018362  6ED9               	movwf	fsr2l,c
 21286  018364  6ADA               	clrf	fsr2h,c
 21287  018366  50DE               	movf	postinc2,w,c
 21288  018368  10DE               	iorwf	postinc2,w,c
 21289  01836A  A4D8               	btfss	status,2,c
 21290  01836C  D002               	goto	l11170
 21291                           
 21292                           ;timers.c: 24:   return 1;
 21293  01836E  0E01               	movlw	1
 21294  018370  D001               	goto	L19
 21295  018372                     l11170:
 21296                           
 21297                           ;timers.c: 26:  return 0;
 21298  018372  0E00               	movlw	0
 21299  018374                     L19:
 21300  018374  6E32               	movwf	btemp^0,c
 21301                           
 21302                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21303  018376  52E5               	movf	postdec1,f,c
 21304  018378  0012               	return		;funcret
 21305  01837A                     __end_of_TimerDone:
 21306                           	opt callstack 0
 21307                           
 21308 ;; *************** function _StartTimer *****************
 21309 ;; Defined at:
 21310 ;;		line 12 in file "timers.c"
 21311 ;; Parameters:    Size  Location     Type
 21312 ;;  timer           1  [STACK] const unsigned char 
 21313 ;;  count           2  [STACK] const unsigned short 
 21314 ;; Auto vars:     Size  Location     Type
 21315 ;;		None
 21316 ;; Return value:  Size  Location     Type
 21317 ;;                  1  [STACK] void 
 21318 ;; Registers used:
 21319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21320 ;; Tracked objects:
 21321 ;;		On entry : 0/5
 21322 ;;		On exit  : 0/0
 21323 ;;		Unchanged: 0/0
 21324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21329 ;;Total ram usage:        0 bytes
 21330 ;; Hardware stack levels used:    1
 21331 ;; Hardware stack levels required when called:    6
 21332 ;; This function calls:
 21333 ;;		Nothing
 21334 ;; This function is called by:
 21335 ;;		_main
 21336 ;;		_WaitMs
 21337 ;;		_help_button
 21338 ;;		_check_help
 21339 ;; This function uses a reentrant model
 21340 ;;
 21341                           
 21342                           	psect	text82
 21343  017D7A                     __ptext82:
 21344                           	opt callstack 0
 21345  017D7A                     _StartTimer:
 21346                           	opt callstack 21
 21347                           
 21348                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21349                           ;stkvar	_count @ sp[(0)+-3]
 21350                           
 21351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21352                           ;incstack = 0
 21353  017D7A  0EFD               	movlw	-3
 21354  017D7C  006F FF8C  F03C    	movff	plusw1,btemp+10
 21355  017D82  0EFE               	movlw	-2
 21356  017D84  006F FF8C  F03D    	movff	plusw1,btemp+11
 21357  017D8A  90D8               	bcf	status,0,c
 21358  017D8C  343C               	rlcf	(btemp+10)^0,w,c
 21359  017D8E  6E3A               	movwf	(btemp+8)^0,c
 21360  017D90  343D               	rlcf	(btemp+11)^0,w,c
 21361  017D92  6E3B               	movwf	(btemp+9)^0,c
 21362                           
 21363                           ;stkvar	_timer @ sp[(0)+-1]
 21364  017D94  0EFF               	movlw	-1
 21365  017D96  50E3               	movf	plusw1,w,c
 21366  017D98  0D02               	mullw	2
 21367  017D9A  50F3               	movf	243,w,c
 21368  017D9C  0F89               	addlw	low _tickCount
 21369  017D9E  6ED9               	movwf	fsr2l,c
 21370  017DA0  6ADA               	clrf	fsr2h,c
 21371  017DA2  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 21372  017DA8  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 21373                           
 21374                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21375  017DAE  52E5               	movf	postdec1,f,c
 21376  017DB0  52E5               	movf	postdec1,f,c
 21377  017DB2  52E5               	movf	postdec1,f,c
 21378  017DB4  0012               	return		;funcret
 21379  017DB6                     __end_of_StartTimer:
 21380                           	opt callstack 0
 21381                           
 21382 ;; *************** function _display_info *****************
 21383 ;; Defined at:
 21384 ;;		line 190 in file "mconfig.c"
 21385 ;; Parameters:    Size  Location     Type
 21386 ;;		None
 21387 ;; Auto vars:     Size  Location     Type
 21388 ;;		None
 21389 ;; Return value:  Size  Location     Type
 21390 ;;                  1  [STACK] enum E16501
 21391 ;; Registers used:
 21392 ;;		btemp
 21393 ;; Tracked objects:
 21394 ;;		On entry : 0/1
 21395 ;;		On exit  : 0/0
 21396 ;;		Unchanged: 0/0
 21397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21402 ;;Total ram usage:        0 bytes
 21403 ;; Hardware stack levels used:    1
 21404 ;; Hardware stack levels required when called:    6
 21405 ;; This function calls:
 21406 ;;		Nothing
 21407 ;; This function is called by:
 21408 ;;		_check_help
 21409 ;; This function uses a reentrant model
 21410 ;;
 21411                           
 21412                           	psect	text83
 21413  018652                     __ptext83:
 21414                           	opt callstack 0
 21415  018652                     _display_info:
 21416                           	opt callstack 23
 21417                           
 21418                           ;mconfig.c: 192:  return V.response.info;
 21419                           
 21420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21421                           ;incstack = 0
 21422  018652  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 21423                           
 21424                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21425  018658  0012               	return		;funcret
 21426  01865A                     __end_of_display_info:
 21427                           	opt callstack 0
 21428                           
 21429 ;; *************** function _display_help *****************
 21430 ;; Defined at:
 21431 ;;		line 195 in file "mconfig.c"
 21432 ;; Parameters:    Size  Location     Type
 21433 ;;		None
 21434 ;; Auto vars:     Size  Location     Type
 21435 ;;		None
 21436 ;; Return value:  Size  Location     Type
 21437 ;;                  1  [STACK] enum E16501
 21438 ;; Registers used:
 21439 ;;		btemp
 21440 ;; Tracked objects:
 21441 ;;		On entry : 3F/1
 21442 ;;		On exit  : 0/0
 21443 ;;		Unchanged: 0/0
 21444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21449 ;;Total ram usage:        0 bytes
 21450 ;; Hardware stack levels used:    1
 21451 ;; Hardware stack levels required when called:    6
 21452 ;; This function calls:
 21453 ;;		Nothing
 21454 ;; This function is called by:
 21455 ;;		_check_help
 21456 ;; This function uses a reentrant model
 21457 ;;
 21458                           
 21459                           	psect	text84
 21460  01865A                     __ptext84:
 21461                           	opt callstack 0
 21462  01865A                     _display_help:
 21463                           	opt callstack 23
 21464                           
 21465                           ;mconfig.c: 197:  return V.response.help_temp;
 21466                           
 21467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21468                           ;incstack = 0
 21469  01865A  0060  F690  F032   	movff	_V+164,btemp	;volatile
 21470                           
 21471                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21472  018660  0012               	return		;funcret
 21473  018662                     __end_of_display_help:
 21474                           	opt callstack 0
 21475                           
 21476 ;; *************** function _check_adc_scan *****************
 21477 ;; Defined at:
 21478 ;;		line 56 in file "daq.c"
 21479 ;; Parameters:    Size  Location     Type
 21480 ;;		None
 21481 ;; Auto vars:     Size  Location     Type
 21482 ;;		None
 21483 ;; Return value:  Size  Location     Type
 21484 ;;                  1  [STACK] _Bool 
 21485 ;; Registers used:
 21486 ;;		btemp
 21487 ;; Tracked objects:
 21488 ;;		On entry : 0/39
 21489 ;;		On exit  : 0/0
 21490 ;;		Unchanged: 0/0
 21491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21496 ;;Total ram usage:        0 bytes
 21497 ;; Hardware stack levels used:    1
 21498 ;; Hardware stack levels required when called:    6
 21499 ;; This function calls:
 21500 ;;		Nothing
 21501 ;; This function is called by:
 21502 ;;		_main
 21503 ;; This function uses a reentrant model
 21504 ;;
 21505                           
 21506                           	psect	text85
 21507  018662                     __ptext85:
 21508                           	opt callstack 0
 21509  018662                     _check_adc_scan:
 21510                           	opt callstack 24
 21511                           
 21512                           ;daq.c: 58:  return R.done;
 21513                           
 21514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21515                           ;incstack = 0
 21516  018662  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 21517                           
 21518                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21519  018668  0012               	return		;funcret
 21520  01866A                     __end_of_check_adc_scan:
 21521                           	opt callstack 0
 21522                           
 21523 ;; *************** function _SYSTEM_Initialize *****************
 21524 ;; Defined at:
 21525 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21526 ;; Parameters:    Size  Location     Type
 21527 ;;		None
 21528 ;; Auto vars:     Size  Location     Type
 21529 ;;		None
 21530 ;; Return value:  Size  Location     Type
 21531 ;;                  1  [STACK] void 
 21532 ;; Registers used:
 21533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21534 ;; Tracked objects:
 21535 ;;		On entry : 0/0
 21536 ;;		On exit  : 3F/3C
 21537 ;;		Unchanged: 0/0
 21538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21543 ;;Total ram usage:        0 bytes
 21544 ;; Hardware stack levels used:    1
 21545 ;; Hardware stack levels required when called:    8
 21546 ;; This function calls:
 21547 ;;		_ADCC_Initialize
 21548 ;;		_CLKREF_Initialize
 21549 ;;		_DMA1_Initialize
 21550 ;;		_DMA2_Initialize
 21551 ;;		_EXT_INT_Initialize
 21552 ;;		_FVR_Initialize
 21553 ;;		_INTERRUPT_Initialize
 21554 ;;		_OSCILLATOR_Initialize
 21555 ;;		_PIN_MANAGER_Initialize
 21556 ;;		_PMD_Initialize
 21557 ;;		_PWM8_Initialize
 21558 ;;		_SPI1_Initialize
 21559 ;;		_TMR2_Initialize
 21560 ;;		_TMR5_Initialize
 21561 ;;		_TMR6_Initialize
 21562 ;;		_UART1_Initialize
 21563 ;;		_UART2_Initialize
 21564 ;; This function is called by:
 21565 ;;		_main
 21566 ;; This function uses a reentrant model
 21567 ;;
 21568                           
 21569                           	psect	text86
 21570  017BA2                     __ptext86:
 21571                           	opt callstack 0
 21572  017BA2                     _SYSTEM_Initialize:
 21573                           	opt callstack 22
 21574                           
 21575                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21576                           
 21577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21578                           ;incstack = 0
 21579  017BA2  EC66  F0BB         	call	_INTERRUPT_Initialize	;wreg free
 21580                           
 21581                           ; BSR set to: 57
 21582                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21583  017BA6  ECCE  F0C2         	call	_PMD_Initialize	;wreg free
 21584                           
 21585                           ; BSR set to: 57
 21586                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21587  017BAA  EC3B  F0B9         	call	_PIN_MANAGER_Initialize	;wreg free
 21588                           
 21589                           ; BSR set to: 58
 21590                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21591  017BAE  ECC3  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21592                           
 21593                           ; BSR set to: 57
 21594                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21595  017BB2  EC35  F0C3         	call	_FVR_Initialize	;wreg free
 21596                           
 21597                           ; BSR set to: 62
 21598                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21599  017BB6  ECFD  F0BA         	call	_ADCC_Initialize	;wreg free
 21600                           
 21601                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21602  017BBA  ECA1  F0C2         	call	_TMR2_Initialize	;wreg free
 21603                           
 21604                           ; BSR set to: 57
 21605                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21606  017BBE  ECB8  F0C2         	call	_PWM8_Initialize	;wreg free
 21607                           
 21608                           ; BSR set to: 63
 21609                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21610  017BC2  EC47  F0BF         	call	_EXT_INT_Initialize	;wreg free
 21611                           
 21612                           ; BSR set to: 57
 21613                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21614  017BC6  EC04  F0C0         	call	_TMR6_Initialize	;wreg free
 21615                           
 21616                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21617  017BCA  ECF4  F0BD         	call	_TMR5_Initialize	;wreg free
 21618                           
 21619                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21620  017BCE  ECCB  F0BB         	call	_UART1_Initialize	;wreg free
 21621                           
 21622                           ; BSR set to: 57
 21623                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21624  017BD2  EC5F  F0BC         	call	_UART2_Initialize	;wreg free
 21625                           
 21626                           ; BSR set to: 57
 21627                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21628  017BD6  ECAD  F0C2         	call	_SPI1_Initialize	;wreg free
 21629                           
 21630                           ; BSR set to: 61
 21631                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21632  017BDA  ECBB  F0BC         	call	_DMA2_Initialize	;wreg free
 21633                           
 21634                           ; BSR set to: 59
 21635                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21636  017BDE  ECC8  F0BA         	call	_DMA1_Initialize	;wreg free
 21637                           
 21638                           ; BSR set to: 59
 21639                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21640  017BE2  EC0F  F0C3         	call	_CLKREF_Initialize	;wreg free
 21641                           
 21642                           ; BSR set to: 60
 21643                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21644  017BE6  0012               	return		;funcret
 21645  017BE8                     __end_of_SYSTEM_Initialize:
 21646                           	opt callstack 0
 21647                           
 21648 ;; *************** function _UART2_Initialize *****************
 21649 ;; Defined at:
 21650 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21651 ;; Parameters:    Size  Location     Type
 21652 ;;		None
 21653 ;; Auto vars:     Size  Location     Type
 21654 ;;		None
 21655 ;; Return value:  Size  Location     Type
 21656 ;;                  1  [STACK] void 
 21657 ;; Registers used:
 21658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21659 ;; Tracked objects:
 21660 ;;		On entry : 3F/39
 21661 ;;		On exit  : 3F/39
 21662 ;;		Unchanged: 0/0
 21663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21668 ;;Total ram usage:        0 bytes
 21669 ;; Hardware stack levels used:    1
 21670 ;; Hardware stack levels required when called:    7
 21671 ;; This function calls:
 21672 ;;		_UART2_SetRxInterruptHandler
 21673 ;;		_UART2_SetTxInterruptHandler
 21674 ;; This function is called by:
 21675 ;;		_SYSTEM_Initialize
 21676 ;; This function uses a reentrant model
 21677 ;;
 21678                           
 21679                           	psect	text87
 21680  0178BE                     __ptext87:
 21681                           	opt callstack 0
 21682  0178BE                     _UART2_Initialize:
 21683                           	opt callstack 22
 21684                           
 21685                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21686                           
 21687                           ; BSR set to: 60
 21688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21689                           ;incstack = 0
 21690  0178BE  0139               	movlb	57	; () banked
 21691  0178C0  9596               	bcf	150,2,b	;volatile
 21692                           
 21693                           ; BSR set to: 57
 21694                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21695  0178C2  0E9E               	movlw	low _UART2_Receive_ISR
 21696  0178C4  6EE6               	movwf	postinc1,c
 21697  0178C6  0E84               	movlw	high _UART2_Receive_ISR
 21698  0178C8  6EE6               	movwf	postinc1,c
 21699  0178CA  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21700  0178CC  6EE6               	movwf	postinc1,c
 21701  0178CE  EC93  F0C0         	call	_UART2_SetRxInterruptHandler	;wreg free
 21702                           
 21703                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21704  0178D2  0139               	movlb	57	; () banked
 21705  0178D4  9796               	bcf	150,3,b	;volatile
 21706                           
 21707                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21708  0178D6  0EDC               	movlw	low _UART2_Transmit_ISR
 21709  0178D8  6EE6               	movwf	postinc1,c
 21710  0178DA  0E7F               	movlw	high _UART2_Transmit_ISR
 21711  0178DC  6EE6               	movwf	postinc1,c
 21712  0178DE  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21713  0178E0  6EE6               	movwf	postinc1,c
 21714  0178E2  EC7F  F0C0         	call	_UART2_SetTxInterruptHandler	;wreg free
 21715                           
 21716                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21717  0178E6  013D               	movlb	61	; () banked
 21718  0178E8  6BD4               	clrf	212,b	;volatile
 21719                           
 21720                           ; BSR set to: 61
 21721                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21722  0178EA  6BD6               	clrf	214,b	;volatile
 21723                           
 21724                           ; BSR set to: 61
 21725                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21726  0178EC  6BD8               	clrf	216,b	;volatile
 21727                           
 21728                           ; BSR set to: 61
 21729                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21730  0178EE  0EB0               	movlw	176
 21731  0178F0  6FDA               	movwf	218,b	;volatile
 21732                           
 21733                           ; BSR set to: 61
 21734                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21735  0178F2  0E80               	movlw	128
 21736  0178F4  6FDB               	movwf	219,b	;volatile
 21737                           
 21738                           ; BSR set to: 61
 21739                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21740  0178F6  6BDC               	clrf	220,b	;volatile
 21741                           
 21742                           ; BSR set to: 61
 21743                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21744  0178F8  0E82               	movlw	130
 21745  0178FA  6FDD               	movwf	221,b	;volatile
 21746                           
 21747                           ; BSR set to: 61
 21748                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21749  0178FC  0E06               	movlw	6
 21750  0178FE  6FDE               	movwf	222,b	;volatile
 21751                           
 21752                           ; BSR set to: 61
 21753                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21754  017900  6BDF               	clrf	223,b	;volatile
 21755                           
 21756                           ; BSR set to: 61
 21757                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21758  017902  6BE0               	clrf	224,b	;volatile
 21759                           
 21760                           ; BSR set to: 61
 21761                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21762  017904  6BE1               	clrf	225,b	;volatile
 21763                           
 21764                           ; BSR set to: 61
 21765                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21766  017906  6BE2               	clrf	226,b	;volatile
 21767                           
 21768                           ; BSR set to: 61
 21769                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21770  017908  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21771                           
 21772                           ; BSR set to: 61
 21773                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21774  01790A  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21775                           
 21776                           ; BSR set to: 61
 21777                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21778  01790C  0E40               	movlw	64
 21779  01790E  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21780                           
 21781                           ; BSR set to: 61
 21782                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21783  017910  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21784                           
 21785                           ; BSR set to: 61
 21786                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21787  017912  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21788                           
 21789                           ; BSR set to: 61
 21790                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21791  017914  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21792                           
 21793                           ; BSR set to: 61
 21794                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21795  017916  0139               	movlb	57	; () banked
 21796  017918  8596               	bsf	150,2,b	;volatile
 21797                           
 21798                           ; BSR set to: 57
 21799                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21800  01791A  0012               	return		;funcret
 21801  01791C                     __end_of_UART2_Initialize:
 21802                           	opt callstack 0
 21803                           
 21804 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21805 ;; Defined at:
 21806 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21807 ;; Parameters:    Size  Location     Type
 21808 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21809 ;;		 -> UART2_Transmit_ISR(1), 
 21810 ;; Auto vars:     Size  Location     Type
 21811 ;;		None
 21812 ;; Return value:  Size  Location     Type
 21813 ;;                  1  [STACK] void 
 21814 ;; Registers used:
 21815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21816 ;; Tracked objects:
 21817 ;;		On entry : 3F/39
 21818 ;;		On exit  : 0/0
 21819 ;;		Unchanged: 0/0
 21820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21825 ;;Total ram usage:        0 bytes
 21826 ;; Hardware stack levels used:    1
 21827 ;; Hardware stack levels required when called:    6
 21828 ;; This function calls:
 21829 ;;		Nothing
 21830 ;; This function is called by:
 21831 ;;		_UART2_Initialize
 21832 ;; This function uses a reentrant model
 21833 ;;
 21834                           
 21835                           	psect	text88
 21836  0180FE                     __ptext88:
 21837                           	opt callstack 0
 21838  0180FE                     _UART2_SetTxInterruptHandler:
 21839                           	opt callstack 22
 21840                           
 21841                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21842                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21843                           
 21844                           ; BSR set to: 57
 21845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21846                           ;incstack = 0
 21847  0180FE  50E1               	movf	fsr1l,w,c
 21848  018100  0FFD               	addlw	-3
 21849  018102  6ED9               	movwf	fsr2l,c
 21850  018104  50E2               	movf	fsr1h,w,c
 21851  018106  6EDA               	movwf	fsr2h,c
 21852  018108  0EFF               	movlw	255
 21853  01810A  22DA               	addwfc	fsr2h,f,c
 21854  01810C  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21855  018112  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21856  018118  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21857                           
 21858                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21859  01811E  52E5               	movf	postdec1,f,c
 21860  018120  52E5               	movf	postdec1,f,c
 21861  018122  52E5               	movf	postdec1,f,c
 21862  018124  0012               	return		;funcret
 21863  018126                     __end_of_UART2_SetTxInterruptHandler:
 21864                           	opt callstack 0
 21865                           
 21866 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21867 ;; Defined at:
 21868 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21869 ;; Parameters:    Size  Location     Type
 21870 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21871 ;;		 -> UART2_Receive_ISR(1), 
 21872 ;; Auto vars:     Size  Location     Type
 21873 ;;		None
 21874 ;; Return value:  Size  Location     Type
 21875 ;;                  1  [STACK] void 
 21876 ;; Registers used:
 21877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21878 ;; Tracked objects:
 21879 ;;		On entry : 3F/39
 21880 ;;		On exit  : 0/0
 21881 ;;		Unchanged: 0/0
 21882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;Total ram usage:        0 bytes
 21888 ;; Hardware stack levels used:    1
 21889 ;; Hardware stack levels required when called:    6
 21890 ;; This function calls:
 21891 ;;		Nothing
 21892 ;; This function is called by:
 21893 ;;		_UART2_Initialize
 21894 ;; This function uses a reentrant model
 21895 ;;
 21896                           
 21897                           	psect	text89
 21898  018126                     __ptext89:
 21899                           	opt callstack 0
 21900  018126                     _UART2_SetRxInterruptHandler:
 21901                           	opt callstack 22
 21902                           
 21903                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21904                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21905                           
 21906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21907                           ;incstack = 0
 21908  018126  50E1               	movf	fsr1l,w,c
 21909  018128  0FFD               	addlw	-3
 21910  01812A  6ED9               	movwf	fsr2l,c
 21911  01812C  50E2               	movf	fsr1h,w,c
 21912  01812E  6EDA               	movwf	fsr2h,c
 21913  018130  0EFF               	movlw	255
 21914  018132  22DA               	addwfc	fsr2h,f,c
 21915  018134  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 21916  01813A  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 21917  018140  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 21918                           
 21919                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21920  018146  52E5               	movf	postdec1,f,c
 21921  018148  52E5               	movf	postdec1,f,c
 21922  01814A  52E5               	movf	postdec1,f,c
 21923  01814C  0012               	return		;funcret
 21924  01814E                     __end_of_UART2_SetRxInterruptHandler:
 21925                           	opt callstack 0
 21926                           
 21927 ;; *************** function _UART1_Initialize *****************
 21928 ;; Defined at:
 21929 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21930 ;; Parameters:    Size  Location     Type
 21931 ;;		None
 21932 ;; Auto vars:     Size  Location     Type
 21933 ;;		None
 21934 ;; Return value:  Size  Location     Type
 21935 ;;                  1  [STACK] void 
 21936 ;; Registers used:
 21937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21938 ;; Tracked objects:
 21939 ;;		On entry : 0/39
 21940 ;;		On exit  : 3F/39
 21941 ;;		Unchanged: 0/0
 21942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21947 ;;Total ram usage:        0 bytes
 21948 ;; Hardware stack levels used:    1
 21949 ;; Hardware stack levels required when called:    7
 21950 ;; This function calls:
 21951 ;;		_UART1_SetRxInterruptHandler
 21952 ;;		_UART1_SetTxInterruptHandler
 21953 ;; This function is called by:
 21954 ;;		_SYSTEM_Initialize
 21955 ;; This function uses a reentrant model
 21956 ;;
 21957                           
 21958                           	psect	text90
 21959  017796                     __ptext90:
 21960                           	opt callstack 0
 21961  017796                     _UART1_Initialize:
 21962                           	opt callstack 22
 21963                           
 21964                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21965                           
 21966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21967                           ;incstack = 0
 21968  017796  0139               	movlb	57	; () banked
 21969  017798  9793               	bcf	147,3,b	;volatile
 21970                           
 21971                           ; BSR set to: 57
 21972                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21973  01779A  0E80               	movlw	low _UART1_Receive_ISR
 21974  01779C  6EE6               	movwf	postinc1,c
 21975  01779E  0E84               	movlw	high _UART1_Receive_ISR
 21976  0177A0  6EE6               	movwf	postinc1,c
 21977  0177A2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21978  0177A4  6EE6               	movwf	postinc1,c
 21979  0177A6  ECBB  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21980                           
 21981                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21982  0177AA  0139               	movlb	57	; () banked
 21983  0177AC  9993               	bcf	147,4,b	;volatile
 21984                           
 21985                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21986  0177AE  0EB0               	movlw	low _UART1_Transmit_ISR
 21987  0177B0  6EE6               	movwf	postinc1,c
 21988  0177B2  0E7F               	movlw	high _UART1_Transmit_ISR
 21989  0177B4  6EE6               	movwf	postinc1,c
 21990  0177B6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21991  0177B8  6EE6               	movwf	postinc1,c
 21992  0177BA  ECA7  F0C0         	call	_UART1_SetTxInterruptHandler	;wreg free
 21993                           
 21994                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21995  0177BE  013D               	movlb	61	; () banked
 21996  0177C0  6BEC               	clrf	236,b	;volatile
 21997                           
 21998                           ; BSR set to: 61
 21999                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22000  0177C2  6BED               	clrf	237,b	;volatile
 22001                           
 22002                           ; BSR set to: 61
 22003                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22004  0177C4  6BEE               	clrf	238,b	;volatile
 22005                           
 22006                           ; BSR set to: 61
 22007                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22008  0177C6  6BEF               	clrf	239,b	;volatile
 22009                           
 22010                           ; BSR set to: 61
 22011                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22012  0177C8  6BF0               	clrf	240,b	;volatile
 22013                           
 22014                           ; BSR set to: 61
 22015                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22016  0177CA  6BF1               	clrf	241,b	;volatile
 22017                           
 22018                           ; BSR set to: 61
 22019                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22020  0177CC  0EB0               	movlw	176
 22021  0177CE  6FF2               	movwf	242,b	;volatile
 22022                           
 22023                           ; BSR set to: 61
 22024                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22025  0177D0  0E80               	movlw	128
 22026  0177D2  6FF3               	movwf	243,b	;volatile
 22027                           
 22028                           ; BSR set to: 61
 22029                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22030  0177D4  6BF4               	clrf	244,b	;volatile
 22031                           
 22032                           ; BSR set to: 61
 22033                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22034  0177D6  0E82               	movlw	130
 22035  0177D8  6FF5               	movwf	245,b	;volatile
 22036                           
 22037                           ; BSR set to: 61
 22038                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22039  0177DA  0E06               	movlw	6
 22040  0177DC  6FF6               	movwf	246,b	;volatile
 22041                           
 22042                           ; BSR set to: 61
 22043                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22044  0177DE  6BF7               	clrf	247,b	;volatile
 22045                           
 22046                           ; BSR set to: 61
 22047                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22048  0177E0  6BF8               	clrf	248,b	;volatile
 22049                           
 22050                           ; BSR set to: 61
 22051                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22052  0177E2  6BF9               	clrf	249,b	;volatile
 22053                           
 22054                           ; BSR set to: 61
 22055                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22056  0177E4  6BFA               	clrf	250,b	;volatile
 22057                           
 22058                           ; BSR set to: 61
 22059                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22060  0177E6  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22061                           
 22062                           ; BSR set to: 61
 22063                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22064  0177E8  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22065                           
 22066                           ; BSR set to: 61
 22067                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22068  0177EA  0E40               	movlw	64
 22069  0177EC  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22070                           
 22071                           ; BSR set to: 61
 22072                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22073  0177EE  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22074                           
 22075                           ; BSR set to: 61
 22076                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22077  0177F0  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22078                           
 22079                           ; BSR set to: 61
 22080                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22081  0177F2  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22082                           
 22083                           ; BSR set to: 61
 22084                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22085  0177F4  0139               	movlb	57	; () banked
 22086  0177F6  8793               	bsf	147,3,b	;volatile
 22087                           
 22088                           ; BSR set to: 57
 22089                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22090  0177F8  0012               	return		;funcret
 22091  0177FA                     __end_of_UART1_Initialize:
 22092                           	opt callstack 0
 22093                           
 22094 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22095 ;; Defined at:
 22096 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22097 ;; Parameters:    Size  Location     Type
 22098 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22099 ;;		 -> UART1_Transmit_ISR(1), 
 22100 ;; Auto vars:     Size  Location     Type
 22101 ;;		None
 22102 ;; Return value:  Size  Location     Type
 22103 ;;                  1  [STACK] void 
 22104 ;; Registers used:
 22105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22106 ;; Tracked objects:
 22107 ;;		On entry : 3F/39
 22108 ;;		On exit  : 0/0
 22109 ;;		Unchanged: 0/0
 22110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22115 ;;Total ram usage:        0 bytes
 22116 ;; Hardware stack levels used:    1
 22117 ;; Hardware stack levels required when called:    6
 22118 ;; This function calls:
 22119 ;;		Nothing
 22120 ;; This function is called by:
 22121 ;;		_UART1_Initialize
 22122 ;; This function uses a reentrant model
 22123 ;;
 22124                           
 22125                           	psect	text91
 22126  01814E                     __ptext91:
 22127                           	opt callstack 0
 22128  01814E                     _UART1_SetTxInterruptHandler:
 22129                           	opt callstack 22
 22130                           
 22131                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22132                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22133                           
 22134                           ; BSR set to: 57
 22135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22136                           ;incstack = 0
 22137  01814E  50E1               	movf	fsr1l,w,c
 22138  018150  0FFD               	addlw	-3
 22139  018152  6ED9               	movwf	fsr2l,c
 22140  018154  50E2               	movf	fsr1h,w,c
 22141  018156  6EDA               	movwf	fsr2h,c
 22142  018158  0EFF               	movlw	255
 22143  01815A  22DA               	addwfc	fsr2h,f,c
 22144  01815C  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22145  018162  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22146  018168  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22147                           
 22148                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22149  01816E  52E5               	movf	postdec1,f,c
 22150  018170  52E5               	movf	postdec1,f,c
 22151  018172  52E5               	movf	postdec1,f,c
 22152  018174  0012               	return		;funcret
 22153  018176                     __end_of_UART1_SetTxInterruptHandler:
 22154                           	opt callstack 0
 22155                           
 22156 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22157 ;; Defined at:
 22158 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22159 ;; Parameters:    Size  Location     Type
 22160 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22161 ;;		 -> UART1_Receive_ISR(1), 
 22162 ;; Auto vars:     Size  Location     Type
 22163 ;;		None
 22164 ;; Return value:  Size  Location     Type
 22165 ;;                  1  [STACK] void 
 22166 ;; Registers used:
 22167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22168 ;; Tracked objects:
 22169 ;;		On entry : 3F/39
 22170 ;;		On exit  : 0/0
 22171 ;;		Unchanged: 0/0
 22172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22177 ;;Total ram usage:        0 bytes
 22178 ;; Hardware stack levels used:    1
 22179 ;; Hardware stack levels required when called:    6
 22180 ;; This function calls:
 22181 ;;		Nothing
 22182 ;; This function is called by:
 22183 ;;		_UART1_Initialize
 22184 ;; This function uses a reentrant model
 22185 ;;
 22186                           
 22187                           	psect	text92
 22188  018176                     __ptext92:
 22189                           	opt callstack 0
 22190  018176                     _UART1_SetRxInterruptHandler:
 22191                           	opt callstack 22
 22192                           
 22193                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22194                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22195                           
 22196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22197                           ;incstack = 0
 22198  018176  50E1               	movf	fsr1l,w,c
 22199  018178  0FFD               	addlw	-3
 22200  01817A  6ED9               	movwf	fsr2l,c
 22201  01817C  50E2               	movf	fsr1h,w,c
 22202  01817E  6EDA               	movwf	fsr2h,c
 22203  018180  0EFF               	movlw	255
 22204  018182  22DA               	addwfc	fsr2h,f,c
 22205  018184  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22206  01818A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22207  018190  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22208                           
 22209                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22210  018196  52E5               	movf	postdec1,f,c
 22211  018198  52E5               	movf	postdec1,f,c
 22212  01819A  52E5               	movf	postdec1,f,c
 22213  01819C  0012               	return		;funcret
 22214  01819E                     __end_of_UART1_SetRxInterruptHandler:
 22215                           	opt callstack 0
 22216                           
 22217 ;; *************** function _TMR6_Initialize *****************
 22218 ;; Defined at:
 22219 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22220 ;; Parameters:    Size  Location     Type
 22221 ;;		None
 22222 ;; Auto vars:     Size  Location     Type
 22223 ;;		None
 22224 ;; Return value:  Size  Location     Type
 22225 ;;                  1  [STACK] void 
 22226 ;; Registers used:
 22227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22228 ;; Tracked objects:
 22229 ;;		On entry : 3F/39
 22230 ;;		On exit  : 0/0
 22231 ;;		Unchanged: 0/0
 22232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22237 ;;Total ram usage:        0 bytes
 22238 ;; Hardware stack levels used:    1
 22239 ;; Hardware stack levels required when called:    7
 22240 ;; This function calls:
 22241 ;;		_TMR6_SetInterruptHandler
 22242 ;; This function is called by:
 22243 ;;		_SYSTEM_Initialize
 22244 ;; This function uses a reentrant model
 22245 ;;
 22246                           
 22247                           	psect	text93
 22248  018008                     __ptext93:
 22249                           	opt callstack 0
 22250  018008                     _TMR6_Initialize:
 22251                           	opt callstack 22
 22252                           
 22253                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22254                           
 22255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22256                           ;incstack = 0
 22257  018008  0E01               	movlw	1
 22258  01800A  6E96               	movwf	150,c	;volatile
 22259                           
 22260                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22261  01800C  6A95               	clrf	149,c	;volatile
 22262                           
 22263                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22264  01800E  6A97               	clrf	151,c	;volatile
 22265                           
 22266                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22267  018010  0E7C               	movlw	124
 22268  018012  6E93               	movwf	147,c	;volatile
 22269                           
 22270                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22271  018014  6A92               	clrf	146,c	;volatile
 22272                           
 22273                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22274  018016  0139               	movlb	57	; () banked
 22275  018018  91A9               	bcf	169,0,b	;volatile
 22276                           
 22277                           ; BSR set to: 57
 22278                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22279  01801A  8199               	bsf	153,0,b	;volatile
 22280                           
 22281                           ; BSR set to: 57
 22282                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22283  01801C  0E2E               	movlw	low _TMR6_DefaultInterruptHandler
 22284  01801E  6EE6               	movwf	postinc1,c
 22285  018020  0E7C               	movlw	high _TMR6_DefaultInterruptHandler
 22286  018022  6EE6               	movwf	postinc1,c
 22287  018024  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22288  018026  6EE6               	movwf	postinc1,c
 22289  018028  ECCF  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 22290                           
 22291                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22292  01802C  0EE0               	movlw	224
 22293  01802E  6E94               	movwf	148,c	;volatile
 22294                           
 22295                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22296  018030  0012               	return		;funcret
 22297  018032                     __end_of_TMR6_Initialize:
 22298                           	opt callstack 0
 22299                           
 22300 ;; *************** function _TMR6_SetInterruptHandler *****************
 22301 ;; Defined at:
 22302 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22305 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22306 ;; Auto vars:     Size  Location     Type
 22307 ;;		None
 22308 ;; Return value:  Size  Location     Type
 22309 ;;                  1  [STACK] void 
 22310 ;; Registers used:
 22311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22312 ;; Tracked objects:
 22313 ;;		On entry : 3F/39
 22314 ;;		On exit  : 0/0
 22315 ;;		Unchanged: 0/0
 22316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22321 ;;Total ram usage:        0 bytes
 22322 ;; Hardware stack levels used:    1
 22323 ;; Hardware stack levels required when called:    6
 22324 ;; This function calls:
 22325 ;;		Nothing
 22326 ;; This function is called by:
 22327 ;;		_TMR6_Initialize
 22328 ;; This function uses a reentrant model
 22329 ;;
 22330                           
 22331                           	psect	text94
 22332  01819E                     __ptext94:
 22333                           	opt callstack 0
 22334  01819E                     _TMR6_SetInterruptHandler:
 22335                           	opt callstack 22
 22336                           
 22337                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22338                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22339                           
 22340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22341                           ;incstack = 0
 22342  01819E  50E1               	movf	fsr1l,w,c
 22343  0181A0  0FFD               	addlw	-3
 22344  0181A2  6ED9               	movwf	fsr2l,c
 22345  0181A4  50E2               	movf	fsr1h,w,c
 22346  0181A6  6EDA               	movwf	fsr2h,c
 22347  0181A8  0EFF               	movlw	255
 22348  0181AA  22DA               	addwfc	fsr2h,f,c
 22349  0181AC  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22350  0181B2  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22351  0181B8  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22352                           
 22353                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22354  0181BE  52E5               	movf	postdec1,f,c
 22355  0181C0  52E5               	movf	postdec1,f,c
 22356  0181C2  52E5               	movf	postdec1,f,c
 22357  0181C4  0012               	return		;funcret
 22358  0181C6                     __end_of_TMR6_SetInterruptHandler:
 22359                           	opt callstack 0
 22360                           
 22361 ;; *************** function _TMR5_Initialize *****************
 22362 ;; Defined at:
 22363 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22364 ;; Parameters:    Size  Location     Type
 22365 ;;		None
 22366 ;; Auto vars:     Size  Location     Type
 22367 ;;		None
 22368 ;; Return value:  Size  Location     Type
 22369 ;;                  1  [STACK] void 
 22370 ;; Registers used:
 22371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22372 ;; Tracked objects:
 22373 ;;		On entry : 0/39
 22374 ;;		On exit  : 0/0
 22375 ;;		Unchanged: 0/0
 22376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22381 ;;Total ram usage:        0 bytes
 22382 ;; Hardware stack levels used:    1
 22383 ;; Hardware stack levels required when called:    7
 22384 ;; This function calls:
 22385 ;;		_TMR5_SetInterruptHandler
 22386 ;; This function is called by:
 22387 ;;		_SYSTEM_Initialize
 22388 ;; This function uses a reentrant model
 22389 ;;
 22390                           
 22391                           	psect	text95
 22392  017BE8                     __ptext95:
 22393                           	opt callstack 0
 22394  017BE8                     _TMR5_Initialize:
 22395                           	opt callstack 22
 22396                           
 22397                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22398                           
 22399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22400                           ;incstack = 0
 22401  017BE8  6A9B               	clrf	155,c	;volatile
 22402                           
 22403                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22404  017BEA  6A9C               	clrf	156,c	;volatile
 22405                           
 22406                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22407  017BEC  0E01               	movlw	1
 22408  017BEE  6E9D               	movwf	157,c	;volatile
 22409                           
 22410                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22411  017BF0  0E63               	movlw	99
 22412  017BF2  6E99               	movwf	153,c	;volatile
 22413                           
 22414                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22415  017BF4  0EC0               	movlw	192
 22416  017BF6  6E98               	movwf	152,c	;volatile
 22417                           
 22418                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22419  017BF8  5098               	movf	152,w,c	;volatile
 22420  017BFA  006F FE64  F032    	movff	16281,btemp	;volatile
 22421  017C00  6A33               	clrf	(btemp+1)^0,c
 22422  017C02  0060  F0C8  F033   	movff	btemp,btemp+1
 22423  017C08  6A32               	clrf	btemp^0,c
 22424  017C0A  1032               	iorwf	btemp^0,w,c
 22425  017C0C  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22426  017C0E  5033               	movf	(btemp+1)^0,w,c
 22427  017C10  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22428                           
 22429                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22430  017C12  0139               	movlb	57	; () banked
 22431  017C14  9DA8               	bcf	168,6,b	;volatile
 22432                           
 22433                           ; BSR set to: 57
 22434                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22435  017C16  8D98               	bsf	152,6,b	;volatile
 22436                           
 22437                           ; BSR set to: 57
 22438                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22439  017C18  0E8E               	movlw	low _TMR5_DefaultInterruptHandler
 22440  017C1A  6EE6               	movwf	postinc1,c
 22441  017C1C  0E82               	movlw	high _TMR5_DefaultInterruptHandler
 22442  017C1E  6EE6               	movwf	postinc1,c
 22443  017C20  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22444  017C22  6EE6               	movwf	postinc1,c
 22445  017C24  ECE3  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 22446                           
 22447                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22448  017C28  0E31               	movlw	49
 22449  017C2A  6E9A               	movwf	154,c	;volatile
 22450                           
 22451                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22452  017C2C  0012               	return		;funcret
 22453  017C2E                     __end_of_TMR5_Initialize:
 22454                           	opt callstack 0
 22455                           
 22456 ;; *************** function _TMR5_SetInterruptHandler *****************
 22457 ;; Defined at:
 22458 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22459 ;; Parameters:    Size  Location     Type
 22460 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22461 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;		None
 22464 ;; Return value:  Size  Location     Type
 22465 ;;                  1  [STACK] void 
 22466 ;; Registers used:
 22467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22468 ;; Tracked objects:
 22469 ;;		On entry : 3F/39
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22477 ;;Total ram usage:        0 bytes
 22478 ;; Hardware stack levels used:    1
 22479 ;; Hardware stack levels required when called:    6
 22480 ;; This function calls:
 22481 ;;		Nothing
 22482 ;; This function is called by:
 22483 ;;		_TMR5_Initialize
 22484 ;; This function uses a reentrant model
 22485 ;;
 22486                           
 22487                           	psect	text96
 22488  0181C6                     __ptext96:
 22489                           	opt callstack 0
 22490  0181C6                     _TMR5_SetInterruptHandler:
 22491                           	opt callstack 22
 22492                           
 22493                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22494                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22495                           
 22496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22497                           ;incstack = 0
 22498  0181C6  50E1               	movf	fsr1l,w,c
 22499  0181C8  0FFD               	addlw	-3
 22500  0181CA  6ED9               	movwf	fsr2l,c
 22501  0181CC  50E2               	movf	fsr1h,w,c
 22502  0181CE  6EDA               	movwf	fsr2h,c
 22503  0181D0  0EFF               	movlw	255
 22504  0181D2  22DA               	addwfc	fsr2h,f,c
 22505  0181D4  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22506  0181DA  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22507  0181E0  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22508                           
 22509                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22510  0181E6  52E5               	movf	postdec1,f,c
 22511  0181E8  52E5               	movf	postdec1,f,c
 22512  0181EA  52E5               	movf	postdec1,f,c
 22513  0181EC  0012               	return		;funcret
 22514  0181EE                     __end_of_TMR5_SetInterruptHandler:
 22515                           	opt callstack 0
 22516                           
 22517 ;; *************** function _TMR2_Initialize *****************
 22518 ;; Defined at:
 22519 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22520 ;; Parameters:    Size  Location     Type
 22521 ;;		None
 22522 ;; Auto vars:     Size  Location     Type
 22523 ;;		None
 22524 ;; Return value:  Size  Location     Type
 22525 ;;                  1  [STACK] void 
 22526 ;; Registers used:
 22527 ;;		wreg, status,2
 22528 ;; Tracked objects:
 22529 ;;		On entry : 0/3E
 22530 ;;		On exit  : 3F/39
 22531 ;;		Unchanged: 0/0
 22532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22537 ;;Total ram usage:        0 bytes
 22538 ;; Hardware stack levels used:    1
 22539 ;; Hardware stack levels required when called:    6
 22540 ;; This function calls:
 22541 ;;		Nothing
 22542 ;; This function is called by:
 22543 ;;		_SYSTEM_Initialize
 22544 ;; This function uses a reentrant model
 22545 ;;
 22546                           
 22547                           	psect	text97
 22548  018542                     __ptext97:
 22549                           	opt callstack 0
 22550  018542                     _TMR2_Initialize:
 22551                           	opt callstack 23
 22552                           
 22553                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22554                           
 22555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22556                           ;incstack = 0
 22557  018542  0E01               	movlw	1
 22558  018544  6EAE               	movwf	174,c	;volatile
 22559                           
 22560                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22561  018546  6AAD               	clrf	173,c	;volatile
 22562                           
 22563                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22564  018548  6AAF               	clrf	175,c	;volatile
 22565                           
 22566                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22567  01854A  0E63               	movlw	99
 22568  01854C  6EAB               	movwf	171,c	;volatile
 22569                           
 22570                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22571  01854E  6AAA               	clrf	170,c	;volatile
 22572                           
 22573                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22574  018550  0139               	movlb	57	; () banked
 22575  018552  95A4               	bcf	164,2,b	;volatile
 22576                           
 22577                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22578  018554  0EC0               	movlw	192
 22579  018556  6EAC               	movwf	172,c	;volatile
 22580                           
 22581                           ; BSR set to: 57
 22582                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22583  018558  0012               	return		;funcret
 22584  01855A                     __end_of_TMR2_Initialize:
 22585                           	opt callstack 0
 22586                           
 22587 ;; *************** function _SPI1_Initialize *****************
 22588 ;; Defined at:
 22589 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;		None
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;		None
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  1  [STACK] void 
 22596 ;; Registers used:
 22597 ;;		wreg, status,2
 22598 ;; Tracked objects:
 22599 ;;		On entry : 3F/39
 22600 ;;		On exit  : 3F/3D
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;Total ram usage:        0 bytes
 22608 ;; Hardware stack levels used:    1
 22609 ;; Hardware stack levels required when called:    6
 22610 ;; This function calls:
 22611 ;;		Nothing
 22612 ;; This function is called by:
 22613 ;;		_SYSTEM_Initialize
 22614 ;; This function uses a reentrant model
 22615 ;;
 22616                           
 22617                           	psect	text98
 22618  01855A                     __ptext98:
 22619                           	opt callstack 0
 22620  01855A                     _SPI1_Initialize:
 22621                           	opt callstack 23
 22622                           
 22623                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22624                           
 22625                           ; BSR set to: 57
 22626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22627                           ;incstack = 0
 22628  01855A  0E40               	movlw	64
 22629  01855C  013D               	movlb	61	; () banked
 22630  01855E  6F15               	movwf	21,b	;volatile
 22631                           
 22632                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22633  018560  0E03               	movlw	3
 22634  018562  6F16               	movwf	22,b	;volatile
 22635                           
 22636                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22637  018564  0E4F               	movlw	79
 22638  018566  6F19               	movwf	25,b	;volatile
 22639                           
 22640                           ; BSR set to: 61
 22641                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22642  018568  6B1C               	clrf	28,b	;volatile
 22643                           
 22644                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22645  01856A  0E83               	movlw	131
 22646  01856C  6F14               	movwf	20,b	;volatile
 22647                           
 22648                           ; BSR set to: 61
 22649                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22650  01856E  0012               	return		;funcret
 22651  018570                     __end_of_SPI1_Initialize:
 22652                           	opt callstack 0
 22653                           
 22654 ;; *************** function _PWM8_Initialize *****************
 22655 ;; Defined at:
 22656 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22657 ;; Parameters:    Size  Location     Type
 22658 ;;		None
 22659 ;; Auto vars:     Size  Location     Type
 22660 ;;		None
 22661 ;; Return value:  Size  Location     Type
 22662 ;;                  1  [STACK] void 
 22663 ;; Registers used:
 22664 ;;		wreg, status,2
 22665 ;; Tracked objects:
 22666 ;;		On entry : 3F/39
 22667 ;;		On exit  : 3F/3F
 22668 ;;		Unchanged: 0/0
 22669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22674 ;;Total ram usage:        0 bytes
 22675 ;; Hardware stack levels used:    1
 22676 ;; Hardware stack levels required when called:    6
 22677 ;; This function calls:
 22678 ;;		Nothing
 22679 ;; This function is called by:
 22680 ;;		_SYSTEM_Initialize
 22681 ;; This function uses a reentrant model
 22682 ;;
 22683                           
 22684                           	psect	text99
 22685  018570                     __ptext99:
 22686                           	opt callstack 0
 22687  018570                     _PWM8_Initialize:
 22688                           	opt callstack 23
 22689                           
 22690                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22691                           
 22692                           ; BSR set to: 61
 22693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22694                           ;incstack = 0
 22695  018570  0E80               	movlw	128
 22696  018572  6E62               	movwf	98,c	;volatile
 22697                           
 22698                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22699  018574  6A61               	clrf	97,c	;volatile
 22700                           
 22701                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22702  018576  0E40               	movlw	64
 22703  018578  6E60               	movwf	96,c	;volatile
 22704                           
 22705                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22706  01857A  013F               	movlb	63	; () banked
 22707  01857C  515F               	movf	95,w,b	;volatile
 22708  01857E  0B3F               	andlw	-193
 22709  018580  0940               	iorlw	64
 22710  018582  6F5F               	movwf	95,b	;volatile
 22711                           
 22712                           ; BSR set to: 63
 22713                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22714  018584  0012               	return		;funcret
 22715  018586                     __end_of_PWM8_Initialize:
 22716                           	opt callstack 0
 22717                           
 22718 ;; *************** function _PMD_Initialize *****************
 22719 ;; Defined at:
 22720 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22721 ;; Parameters:    Size  Location     Type
 22722 ;;		None
 22723 ;; Auto vars:     Size  Location     Type
 22724 ;;		None
 22725 ;; Return value:  Size  Location     Type
 22726 ;;                  1  [STACK] void 
 22727 ;; Registers used:
 22728 ;;		None
 22729 ;; Tracked objects:
 22730 ;;		On entry : 3F/39
 22731 ;;		On exit  : 3F/39
 22732 ;;		Unchanged: 0/0
 22733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22738 ;;Total ram usage:        0 bytes
 22739 ;; Hardware stack levels used:    1
 22740 ;; Hardware stack levels required when called:    6
 22741 ;; This function calls:
 22742 ;;		Nothing
 22743 ;; This function is called by:
 22744 ;;		_SYSTEM_Initialize
 22745 ;; This function uses a reentrant model
 22746 ;;
 22747                           
 22748                           	psect	text100
 22749  01859C                     __ptext100:
 22750                           	opt callstack 0
 22751  01859C                     _PMD_Initialize:
 22752                           	opt callstack 23
 22753                           
 22754                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22755                           
 22756                           ; BSR set to: 63
 22757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22758                           ;incstack = 0
 22759  01859C  0139               	movlb	57	; () banked
 22760  01859E  6BC0               	clrf	192,b	;volatile
 22761                           
 22762                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22763  0185A0  6BC1               	clrf	193,b	;volatile
 22764                           
 22765                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22766  0185A2  6BC2               	clrf	194,b	;volatile
 22767                           
 22768                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22769  0185A4  6BC3               	clrf	195,b	;volatile
 22770                           
 22771                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22772  0185A6  6BC4               	clrf	196,b	;volatile
 22773                           
 22774                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22775  0185A8  6BC5               	clrf	197,b	;volatile
 22776                           
 22777                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22778  0185AA  6BC6               	clrf	198,b	;volatile
 22779                           
 22780                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22781  0185AC  6BC7               	clrf	199,b	;volatile
 22782                           
 22783                           ; BSR set to: 57
 22784                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22785  0185AE  0012               	return		;funcret
 22786  0185B0                     __end_of_PMD_Initialize:
 22787                           	opt callstack 0
 22788                           
 22789 ;; *************** function _PIN_MANAGER_Initialize *****************
 22790 ;; Defined at:
 22791 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;		None
 22794 ;; Auto vars:     Size  Location     Type
 22795 ;;		None
 22796 ;; Return value:  Size  Location     Type
 22797 ;;                  1  [STACK] void 
 22798 ;; Registers used:
 22799 ;;		wreg, status,2
 22800 ;; Tracked objects:
 22801 ;;		On entry : 3F/39
 22802 ;;		On exit  : 3F/3A
 22803 ;;		Unchanged: 0/0
 22804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22809 ;;Total ram usage:        0 bytes
 22810 ;; Hardware stack levels used:    1
 22811 ;; Hardware stack levels required when called:    6
 22812 ;; This function calls:
 22813 ;;		Nothing
 22814 ;; This function is called by:
 22815 ;;		_SYSTEM_Initialize
 22816 ;; This function uses a reentrant model
 22817 ;;
 22818                           
 22819                           	psect	text101
 22820  017276                     __ptext101:
 22821                           	opt callstack 0
 22822  017276                     _PIN_MANAGER_Initialize:
 22823                           	opt callstack 23
 22824                           
 22825                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22826                           
 22827                           ; BSR set to: 57
 22828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22829                           ;incstack = 0
 22830  017276  0E07               	movlw	7
 22831  017278  6EBE               	movwf	190,c	;volatile
 22832                           
 22833                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22834  01727A  0E80               	movlw	128
 22835  01727C  6EBD               	movwf	189,c	;volatile
 22836                           
 22837                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22838  01727E  6ABA               	clrf	186,c	;volatile
 22839                           
 22840                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22841  017280  6ABF               	clrf	191,c	;volatile
 22842                           
 22843                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22844  017282  6ABB               	clrf	187,c	;volatile
 22845                           
 22846                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22847  017284  0E07               	movlw	7
 22848  017286  6EBC               	movwf	188,c	;volatile
 22849                           
 22850                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22851  017288  6AC6               	clrf	198,c	;volatile
 22852                           
 22853                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22854  01728A  0E0F               	movlw	15
 22855  01728C  6EC7               	movwf	199,c	;volatile
 22856                           
 22857                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22858  01728E  68C2               	setf	194,c	;volatile
 22859                           
 22860                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22861  017290  0EBF               	movlw	191
 22862  017292  6EC3               	movwf	195,c	;volatile
 22863                           
 22864                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22865  017294  0E90               	movlw	144
 22866  017296  6EC4               	movwf	196,c	;volatile
 22867                           
 22868                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22869  017298  0E0C               	movlw	12
 22870  01729A  6EC5               	movwf	197,c	;volatile
 22871                           
 22872                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22873  01729C  013A               	movlb	58	; () banked
 22874  01729E  6B70               	clrf	112,b	;volatile
 22875                           
 22876                           ; BSR set to: 58
 22877                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22878  0172A0  6B60               	clrf	96,b	;volatile
 22879                           
 22880                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22881  0172A2  0E3C               	movlw	60
 22882  0172A4  6F50               	movwf	80,b	;volatile
 22883                           
 22884                           ; BSR set to: 58
 22885                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22886  0172A6  6B80               	clrf	128,b	;volatile
 22887                           
 22888                           ; BSR set to: 58
 22889                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22890  0172A8  6B90               	clrf	144,b	;volatile
 22891                           
 22892                           ; BSR set to: 58
 22893                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22894  0172AA  6940               	setf	64,b	;volatile
 22895                           
 22896                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22897  0172AC  0E0C               	movlw	12
 22898  0172AE  6F71               	movwf	113,b	;volatile
 22899                           
 22900                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22901  0172B0  0E0F               	movlw	15
 22902  0172B2  6F91               	movwf	145,b	;volatile
 22903                           
 22904                           ; BSR set to: 58
 22905                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22906  0172B4  6B81               	clrf	129,b	;volatile
 22907                           
 22908                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 22909  0172B6  0E83               	movlw	131
 22910  0172B8  6F51               	movwf	81,b	;volatile
 22911                           
 22912                           ; BSR set to: 58
 22913                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22914  0172BA  6B41               	clrf	65,b	;volatile
 22915                           
 22916                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22917  0172BC  0E97               	movlw	151
 22918  0172BE  6F61               	movwf	97,b	;volatile
 22919                           
 22920                           ; BSR set to: 58
 22921                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22922  0172C0  6B82               	clrf	130,b	;volatile
 22923                           
 22924                           ; BSR set to: 58
 22925                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22926  0172C2  6B92               	clrf	146,b	;volatile
 22927                           
 22928                           ; BSR set to: 58
 22929                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22930  0172C4  6B42               	clrf	66,b	;volatile
 22931                           
 22932                           ; BSR set to: 58
 22933                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22934  0172C6  6B52               	clrf	82,b	;volatile
 22935                           
 22936                           ; BSR set to: 58
 22937                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22938  0172C8  6B62               	clrf	98,b	;volatile
 22939                           
 22940                           ; BSR set to: 58
 22941                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22942  0172CA  6B72               	clrf	114,b	;volatile
 22943                           
 22944                           ; BSR set to: 58
 22945                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22946  0172CC  6943               	setf	67,b	;volatile
 22947                           
 22948                           ; BSR set to: 58
 22949                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22950  0172CE  6953               	setf	83,b	;volatile
 22951                           
 22952                           ; BSR set to: 58
 22953                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22954  0172D0  6963               	setf	99,b	;volatile
 22955                           
 22956                           ; BSR set to: 58
 22957                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22958  0172D2  6973               	setf	115,b	;volatile
 22959                           
 22960                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22961  0172D4  0E07               	movlw	7
 22962  0172D6  6F83               	movwf	131,b	;volatile
 22963                           
 22964                           ; BSR set to: 58
 22965                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22966  0172D8  6993               	setf	147,b	;volatile
 22967                           
 22968                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22969  0172DA  0E0F               	movlw	15
 22970  0172DC  6FE8               	movwf	232,b	;volatile
 22971                           
 22972                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22973  0172DE  0E13               	movlw	19
 22974  0172E0  6FDE               	movwf	222,b	;volatile
 22975                           
 22976                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22977  0172E2  0E16               	movlw	22
 22978  0172E4  6F0E               	movwf	14,b	;volatile
 22979                           
 22980                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22981  0172E6  0E1E               	movlw	30
 22982  0172E8  6F13               	movwf	19,b	;volatile
 22983                           
 22984                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22985  0172EA  0E08               	movlw	8
 22986  0172EC  6FC0               	movwf	192,b	;volatile
 22987                           
 22988                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22989  0172EE  0E10               	movlw	16
 22990  0172F0  6F19               	movwf	25,b	;volatile
 22991                           
 22992                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22993  0172F2  0E09               	movlw	9
 22994  0172F4  6FC1               	movwf	193,b	;volatile
 22995                           
 22996                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22997  0172F6  0E1F               	movlw	31
 22998  0172F8  6F15               	movwf	21,b	;volatile
 22999                           
 23000                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23001  0172FA  0E13               	movlw	19
 23002  0172FC  6F16               	movwf	22,b	;volatile
 23003                           
 23004                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23005  0172FE  0E17               	movlw	23
 23006  017300  6FE5               	movwf	229,b	;volatile
 23007                           
 23008                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23009  017302  0E14               	movlw	20
 23010  017304  6FDF               	movwf	223,b	;volatile
 23011                           
 23012                           ; BSR set to: 58
 23013                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23014  017306  0012               	return		;funcret
 23015  017308                     __end_of_PIN_MANAGER_Initialize:
 23016                           	opt callstack 0
 23017                           
 23018 ;; *************** function _OSCILLATOR_Initialize *****************
 23019 ;; Defined at:
 23020 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23021 ;; Parameters:    Size  Location     Type
 23022 ;;		None
 23023 ;; Auto vars:     Size  Location     Type
 23024 ;;		None
 23025 ;; Return value:  Size  Location     Type
 23026 ;;                  1  [STACK] void 
 23027 ;; Registers used:
 23028 ;;		wreg, status,2
 23029 ;; Tracked objects:
 23030 ;;		On entry : 3F/3A
 23031 ;;		On exit  : 3F/39
 23032 ;;		Unchanged: 0/0
 23033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23038 ;;Total ram usage:        0 bytes
 23039 ;; Hardware stack levels used:    1
 23040 ;; Hardware stack levels required when called:    6
 23041 ;; This function calls:
 23042 ;;		Nothing
 23043 ;; This function is called by:
 23044 ;;		_SYSTEM_Initialize
 23045 ;; This function uses a reentrant model
 23046 ;;
 23047                           
 23048                           	psect	text102
 23049  018586                     __ptext102:
 23050                           	opt callstack 0
 23051  018586                     _OSCILLATOR_Initialize:
 23052                           	opt callstack 23
 23053                           
 23054                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23055                           
 23056                           ; BSR set to: 58
 23057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23058                           ;incstack = 0
 23059  018586  0E20               	movlw	32
 23060  018588  0139               	movlb	57	; () banked
 23061  01858A  6FD9               	movwf	217,b	;volatile
 23062                           
 23063                           ; BSR set to: 57
 23064                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23065  01858C  6BDB               	clrf	219,b	;volatile
 23066                           
 23067                           ; BSR set to: 57
 23068                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23069  01858E  6BDD               	clrf	221,b	;volatile
 23070                           
 23071                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23072  018590  0E02               	movlw	2
 23073  018592  6FDF               	movwf	223,b	;volatile
 23074                           
 23075                           ; BSR set to: 57
 23076                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23077  018594  6BDE               	clrf	222,b	;volatile
 23078  018596                     l171:
 23079                           
 23080                           ; BSR set to: 57
 23081                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23082  018596  B1DC               	btfsc	220,0,b	;volatile
 23083  018598  0012               	return	
 23084  01859A  D7FD               	goto	l171
 23085  01859C                     __end_of_OSCILLATOR_Initialize:
 23086                           	opt callstack 0
 23087                           
 23088 ;; *************** function _INTERRUPT_Initialize *****************
 23089 ;; Defined at:
 23090 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23091 ;; Parameters:    Size  Location     Type
 23092 ;;		None
 23093 ;; Auto vars:     Size  Location     Type
 23094 ;;  state           1  [STACK] _Bool 
 23095 ;; Return value:  Size  Location     Type
 23096 ;;                  1  [STACK] void 
 23097 ;; Registers used:
 23098 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23099 ;; Tracked objects:
 23100 ;;		On entry : 0/0
 23101 ;;		On exit  : 3F/39
 23102 ;;		Unchanged: 0/0
 23103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23108 ;;Total ram usage:        0 bytes
 23109 ;; Hardware stack levels used:    1
 23110 ;; Hardware stack levels required when called:    6
 23111 ;; This function calls:
 23112 ;;		Nothing
 23113 ;; This function is called by:
 23114 ;;		_SYSTEM_Initialize
 23115 ;; This function uses a reentrant model
 23116 ;;
 23117                           
 23118                           	psect	text103
 23119  0176CC                     __ptext103:
 23120                           	opt callstack 0
 23121  0176CC                     _INTERRUPT_Initialize:
 23122                           	opt callstack 0
 23123                           
 23124                           ; BSR set to: 57
 23125                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23126  0176CC  52E6               	movf	postinc1,f,c
 23127                           
 23128                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23129                           
 23130                           ;incstack = 0
 23131  0176CE  8AD2               	bsf	210,5,c	;volatile
 23132                           
 23133                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23134  0176D0  AED2               	btfss	16338,7,c	;volatile
 23135  0176D2  D003               	goto	u12300
 23136  0176D4  6A3D               	clrf	(btemp+11)^0,c
 23137  0176D6  2A3D               	incf	(btemp+11)^0,f,c
 23138  0176D8  D001               	goto	u12318
 23139  0176DA                     u12300:
 23140  0176DA  6A3D               	clrf	(btemp+11)^0,c
 23141  0176DC                     u12318:
 23142                           
 23143                           ;stkvar	_state @ sp[(-1)+0]
 23144  0176DC  0EFF               	movlw	-1
 23145  0176DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23146                           
 23147                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23148  0176E4  9ED2               	bcf	16338,7,c	;volatile
 23149                           
 23150                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23151  0176E6  0E55               	movlw	85
 23152  0176E8  6ED4               	movwf	212,c	;volatile
 23153                           
 23154                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23155  0176EA  0EAA               	movlw	170
 23156  0176EC  6ED4               	movwf	212,c	;volatile
 23157                           
 23158                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23159  0176EE  90D4               	bcf	212,0,c	;volatile
 23160                           
 23161                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23162  0176F0  0138               	movlb	56	; () banked
 23163  0176F2  6B9F               	clrf	159,b	;volatile
 23164                           
 23165                           ; BSR set to: 56
 23166                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23167  0176F4  6B9E               	clrf	158,b	;volatile
 23168                           
 23169                           ; BSR set to: 56
 23170                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23171  0176F6  0E08               	movlw	8
 23172  0176F8  6F9D               	movwf	157,b	;volatile
 23173                           
 23174                           ; BSR set to: 56
 23175                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23176  0176FA  0E55               	movlw	85
 23177  0176FC  6ED4               	movwf	212,c	;volatile
 23178                           
 23179                           ; BSR set to: 56
 23180                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23181  0176FE  0EAA               	movlw	170
 23182  017700  6ED4               	movwf	212,c	;volatile
 23183                           
 23184                           ; BSR set to: 56
 23185                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23186  017702  80D4               	bsf	212,0,c	;volatile
 23187                           
 23188                           ; BSR set to: 56
 23189                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23190                           ;stkvar	_state @ sp[(-1)+0]
 23191  017704  0EFF               	movlw	-1
 23192  017706  B0E3               	btfsc	plusw1,0,c
 23193  017708  D002               	bra	u12325
 23194  01770A  9ED2               	bcf	16338,7,c	;volatile
 23195  01770C  D001               	bra	u12326
 23196  01770E                     u12325:
 23197  01770E  8ED2               	bsf	16338,7,c	;volatile
 23198  017710                     u12326:
 23199                           
 23200                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23201  017710  0139               	movlb	57	; () banked
 23202  017712  8782               	bsf	130,3,b	;volatile
 23203                           
 23204                           ; BSR set to: 57
 23205                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23206  017714  8382               	bsf	130,1,b	;volatile
 23207                           
 23208                           ; BSR set to: 57
 23209                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23210  017716  8182               	bsf	130,0,b	;volatile
 23211                           
 23212                           ; BSR set to: 57
 23213                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23214  017718  8582               	bsf	130,2,b	;volatile
 23215                           
 23216                           ; BSR set to: 57
 23217                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23218  01771A  8786               	bsf	134,3,b	;volatile
 23219                           
 23220                           ; BSR set to: 57
 23221                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23222  01771C  8586               	bsf	134,2,b	;volatile
 23223                           
 23224                           ; BSR set to: 57
 23225                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23226  01771E  8983               	bsf	131,4,b	;volatile
 23227                           
 23228                           ; BSR set to: 57
 23229                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23230  017720  8783               	bsf	131,3,b	;volatile
 23231                           
 23232                           ; BSR set to: 57
 23233                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23234  017722  8181               	bsf	129,0,b	;volatile
 23235                           
 23236                           ; BSR set to: 57
 23237                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23238  017724  9185               	bcf	133,0,b	;volatile
 23239                           
 23240                           ; BSR set to: 57
 23241                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23242  017726  8189               	bsf	137,0,b	;volatile
 23243                           
 23244                           ; BSR set to: 57
 23245                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23246  017728  9D88               	bcf	136,6,b	;volatile
 23247                           
 23248                           ; BSR set to: 57
 23249                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23250  01772A  8581               	bsf	129,2,b	;volatile
 23251                           
 23252                           ; BSR set to: 57
 23253                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23254  01772C  8781               	bsf	129,3,b	;volatile
 23255                           
 23256                           ; BSR set to: 57
 23257                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23258  01772E  52E5               	movf	postdec1,f,c
 23259  017730  0012               	return		;funcret
 23260  017732                     __end_of_INTERRUPT_Initialize:
 23261                           	opt callstack 0
 23262                           
 23263 ;; *************** function _FVR_Initialize *****************
 23264 ;; Defined at:
 23265 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23266 ;; Parameters:    Size  Location     Type
 23267 ;;		None
 23268 ;; Auto vars:     Size  Location     Type
 23269 ;;		None
 23270 ;; Return value:  Size  Location     Type
 23271 ;;                  1  [STACK] void 
 23272 ;; Registers used:
 23273 ;;		wreg, status,2
 23274 ;; Tracked objects:
 23275 ;;		On entry : 3F/39
 23276 ;;		On exit  : 3F/3E
 23277 ;;		Unchanged: 0/0
 23278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23283 ;;Total ram usage:        0 bytes
 23284 ;; Hardware stack levels used:    1
 23285 ;; Hardware stack levels required when called:    6
 23286 ;; This function calls:
 23287 ;;		Nothing
 23288 ;; This function is called by:
 23289 ;;		_SYSTEM_Initialize
 23290 ;; This function uses a reentrant model
 23291 ;;
 23292                           
 23293                           	psect	text104
 23294  01866A                     __ptext104:
 23295                           	opt callstack 0
 23296  01866A                     _FVR_Initialize:
 23297                           	opt callstack 23
 23298                           
 23299                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23300                           
 23301                           ; BSR set to: 57
 23302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23303                           ;incstack = 0
 23304  01866A  0EAF               	movlw	175
 23305  01866C  013E               	movlb	62	; () banked
 23306  01866E  6FC1               	movwf	193,b	;volatile
 23307                           
 23308                           ; BSR set to: 62
 23309                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23310  018670  0012               	return		;funcret
 23311  018672                     __end_of_FVR_Initialize:
 23312                           	opt callstack 0
 23313                           
 23314 ;; *************** function _EXT_INT_Initialize *****************
 23315 ;; Defined at:
 23316 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23317 ;; Parameters:    Size  Location     Type
 23318 ;;		None
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;		None
 23321 ;; Return value:  Size  Location     Type
 23322 ;;                  1  [STACK] void 
 23323 ;; Registers used:
 23324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23325 ;; Tracked objects:
 23326 ;;		On entry : 3F/3F
 23327 ;;		On exit  : 3F/39
 23328 ;;		Unchanged: 0/0
 23329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;Total ram usage:        0 bytes
 23335 ;; Hardware stack levels used:    1
 23336 ;; Hardware stack levels required when called:    7
 23337 ;; This function calls:
 23338 ;;		_INT0_SetInterruptHandler
 23339 ;;		_INT1_SetInterruptHandler
 23340 ;; This function is called by:
 23341 ;;		_SYSTEM_Initialize
 23342 ;; This function uses a reentrant model
 23343 ;;
 23344                           
 23345                           	psect	text105
 23346  017E8E                     __ptext105:
 23347                           	opt callstack 0
 23348  017E8E                     _EXT_INT_Initialize:
 23349                           	opt callstack 22
 23350                           
 23351                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23352                           
 23353                           ; BSR set to: 62
 23354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23355                           ;incstack = 0
 23356  017E8E  0139               	movlb	57	; () banked
 23357  017E90  91A1               	bcf	161,0,b	;volatile
 23358                           
 23359                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23360  017E92  90D2               	bcf	210,0,c	;volatile
 23361                           
 23362                           ; BSR set to: 57
 23363                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23364  017E94  0E8C               	movlw	low _INT0_DefaultInterruptHandler
 23365  017E96  6EE6               	movwf	postinc1,c
 23366  017E98  0E86               	movlw	high _INT0_DefaultInterruptHandler
 23367  017E9A  6EE6               	movwf	postinc1,c
 23368  017E9C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23369  017E9E  6EE6               	movwf	postinc1,c
 23370  017EA0  EC0B  F0C1         	call	_INT0_SetInterruptHandler	;wreg free
 23371                           
 23372                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23373  017EA4  0139               	movlb	57	; () banked
 23374  017EA6  8191               	bsf	145,0,b	;volatile
 23375                           
 23376                           ; BSR set to: 57
 23377                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23378  017EA8  91A5               	bcf	165,0,b	;volatile
 23379                           
 23380                           ; BSR set to: 57
 23381                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23382  017EAA  92D2               	bcf	210,1,c	;volatile
 23383                           
 23384                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23385  017EAC  0E8A               	movlw	low _INT1_DefaultInterruptHandler
 23386  017EAE  6EE6               	movwf	postinc1,c
 23387  017EB0  0E86               	movlw	high _INT1_DefaultInterruptHandler
 23388  017EB2  6EE6               	movwf	postinc1,c
 23389  017EB4  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23390  017EB6  6EE6               	movwf	postinc1,c
 23391  017EB8  ECF7  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 23392                           
 23393                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23394  017EBC  0139               	movlb	57	; () banked
 23395  017EBE  8195               	bsf	149,0,b	;volatile
 23396                           
 23397                           ; BSR set to: 57
 23398                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23399  017EC0  0012               	return		;funcret
 23400  017EC2                     __end_of_EXT_INT_Initialize:
 23401                           	opt callstack 0
 23402                           
 23403 ;; *************** function _INT1_SetInterruptHandler *****************
 23404 ;; Defined at:
 23405 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23406 ;; Parameters:    Size  Location     Type
 23407 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23408 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23409 ;; Auto vars:     Size  Location     Type
 23410 ;;		None
 23411 ;; Return value:  Size  Location     Type
 23412 ;;                  1  [STACK] void 
 23413 ;; Registers used:
 23414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23415 ;; Tracked objects:
 23416 ;;		On entry : 3F/39
 23417 ;;		On exit  : 0/0
 23418 ;;		Unchanged: 0/0
 23419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23424 ;;Total ram usage:        0 bytes
 23425 ;; Hardware stack levels used:    1
 23426 ;; Hardware stack levels required when called:    6
 23427 ;; This function calls:
 23428 ;;		Nothing
 23429 ;; This function is called by:
 23430 ;;		_EXT_INT_Initialize
 23431 ;;		_start_switch_handler
 23432 ;; This function uses a reentrant model
 23433 ;;
 23434                           
 23435                           	psect	text106
 23436  0181EE                     __ptext106:
 23437                           	opt callstack 0
 23438  0181EE                     _INT1_SetInterruptHandler:
 23439                           	opt callstack 23
 23440                           
 23441                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23442                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23443                           
 23444                           ; BSR set to: 57
 23445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23446                           ;incstack = 0
 23447  0181EE  50E1               	movf	fsr1l,w,c
 23448  0181F0  0FFD               	addlw	-3
 23449  0181F2  6ED9               	movwf	fsr2l,c
 23450  0181F4  50E2               	movf	fsr1h,w,c
 23451  0181F6  6EDA               	movwf	fsr2h,c
 23452  0181F8  0EFF               	movlw	255
 23453  0181FA  22DA               	addwfc	fsr2h,f,c
 23454  0181FC  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23455  018202  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23456  018208  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23457                           
 23458                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23459  01820E  52E5               	movf	postdec1,f,c
 23460  018210  52E5               	movf	postdec1,f,c
 23461  018212  52E5               	movf	postdec1,f,c
 23462  018214  0012               	return		;funcret
 23463  018216                     __end_of_INT1_SetInterruptHandler:
 23464                           	opt callstack 0
 23465                           
 23466 ;; *************** function _INT0_SetInterruptHandler *****************
 23467 ;; Defined at:
 23468 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23469 ;; Parameters:    Size  Location     Type
 23470 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23471 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23472 ;; Auto vars:     Size  Location     Type
 23473 ;;		None
 23474 ;; Return value:  Size  Location     Type
 23475 ;;                  1  [STACK] void 
 23476 ;; Registers used:
 23477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23478 ;; Tracked objects:
 23479 ;;		On entry : 3F/39
 23480 ;;		On exit  : 0/0
 23481 ;;		Unchanged: 0/0
 23482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23487 ;;Total ram usage:        0 bytes
 23488 ;; Hardware stack levels used:    1
 23489 ;; Hardware stack levels required when called:    6
 23490 ;; This function calls:
 23491 ;;		Nothing
 23492 ;; This function is called by:
 23493 ;;		_EXT_INT_Initialize
 23494 ;; This function uses a reentrant model
 23495 ;;
 23496                           
 23497                           	psect	text107
 23498  018216                     __ptext107:
 23499                           	opt callstack 0
 23500  018216                     _INT0_SetInterruptHandler:
 23501                           	opt callstack 22
 23502                           
 23503                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23504                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23505                           
 23506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23507                           ;incstack = 0
 23508  018216  50E1               	movf	fsr1l,w,c
 23509  018218  0FFD               	addlw	-3
 23510  01821A  6ED9               	movwf	fsr2l,c
 23511  01821C  50E2               	movf	fsr1h,w,c
 23512  01821E  6EDA               	movwf	fsr2h,c
 23513  018220  0EFF               	movlw	255
 23514  018222  22DA               	addwfc	fsr2h,f,c
 23515  018224  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23516  01822A  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23517  018230  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23518                           
 23519                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23520  018236  52E5               	movf	postdec1,f,c
 23521  018238  52E5               	movf	postdec1,f,c
 23522  01823A  52E5               	movf	postdec1,f,c
 23523  01823C  0012               	return		;funcret
 23524  01823E                     __end_of_INT0_SetInterruptHandler:
 23525                           	opt callstack 0
 23526                           
 23527 ;; *************** function _DMA2_Initialize *****************
 23528 ;; Defined at:
 23529 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23530 ;; Parameters:    Size  Location     Type
 23531 ;;		None
 23532 ;; Auto vars:     Size  Location     Type
 23533 ;;		None
 23534 ;; Return value:  Size  Location     Type
 23535 ;;                  1  [STACK] void 
 23536 ;; Registers used:
 23537 ;;		wreg, status,2
 23538 ;; Tracked objects:
 23539 ;;		On entry : 3F/3D
 23540 ;;		On exit  : 3F/3B
 23541 ;;		Unchanged: 0/0
 23542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23547 ;;Total ram usage:        0 bytes
 23548 ;; Hardware stack levels used:    1
 23549 ;; Hardware stack levels required when called:    6
 23550 ;; This function calls:
 23551 ;;		Nothing
 23552 ;; This function is called by:
 23553 ;;		_SYSTEM_Initialize
 23554 ;; This function uses a reentrant model
 23555 ;;
 23556                           
 23557                           	psect	text108
 23558  017976                     __ptext108:
 23559                           	opt callstack 0
 23560  017976                     _DMA2_Initialize:
 23561                           	opt callstack 23
 23562                           
 23563                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23564                           
 23565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23566                           ;incstack = 0
 23567  017976  0E00               	movlw	0
 23568  017978  013B               	movlb	59	; () banked
 23569  01797A  6FD9               	movwf	217,b	;volatile
 23570  01797C  0E10               	movlw	16
 23571  01797E  6FDA               	movwf	218,b	;volatile
 23572  017980  0E00               	movlw	0
 23573  017982  6FDB               	movwf	219,b	;volatile
 23574                           
 23575                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23576  017984  0E3F               	movlw	63
 23577  017986  6FD1               	movwf	209,b	;volatile
 23578  017988  0EBB               	movlw	187
 23579  01798A  6FD0               	movwf	208,b	;volatile
 23580                           
 23581                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23582  01798C  0E03               	movlw	3
 23583  01798E  6FDD               	movwf	221,b	;volatile
 23584                           
 23585                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23586  017990  0E00               	movlw	0
 23587  017992  6FD8               	movwf	216,b	;volatile
 23588  017994  0E01               	movlw	1
 23589  017996  6FD7               	movwf	215,b	;volatile
 23590                           
 23591                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23592  017998  0E00               	movlw	0
 23593  01799A  6FCF               	movwf	207,b	;volatile
 23594  01799C  0E01               	movlw	1
 23595  01799E  6FCE               	movwf	206,b	;volatile
 23596                           
 23597                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23598  0179A0  0E46               	movlw	70
 23599  0179A2  6FDF               	movwf	223,b	;volatile
 23600                           
 23601                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23602  0179A4  0E3D               	movlw	61
 23603  0179A6  6FDE               	movwf	222,b	;volatile
 23604                           
 23605                           ; BSR set to: 59
 23606                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23607  0179A8  0139               	movlb	57	; () banked
 23608  0179AA  97A5               	bcf	165,3,b	;volatile
 23609                           
 23610                           ; BSR set to: 57
 23611                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23612  0179AC  95A5               	bcf	165,2,b	;volatile
 23613                           
 23614                           ; BSR set to: 57
 23615                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23616  0179AE  9BA5               	bcf	165,5,b	;volatile
 23617                           
 23618                           ; BSR set to: 57
 23619                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23620  0179B0  99A5               	bcf	165,4,b	;volatile
 23621                           
 23622                           ; BSR set to: 57
 23623                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23624  0179B2  9795               	bcf	149,3,b	;volatile
 23625                           
 23626                           ; BSR set to: 57
 23627                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23628  0179B4  9595               	bcf	149,2,b	;volatile
 23629                           
 23630                           ; BSR set to: 57
 23631                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23632  0179B6  9B95               	bcf	149,5,b	;volatile
 23633                           
 23634                           ; BSR set to: 57
 23635                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23636  0179B8  9995               	bcf	149,4,b	;volatile
 23637  0179BA  9ED2               	bcf	16338,7,c	;# 
 23638  0179BC  0139               	banksel	14831	;# 
 23639  0179BE  0E55               	movlw	85	;# 
 23640  0179C0  6FEF               	movwf	14831,b	;# 
 23641  0179C2  0EAA               	movlw	170	;# 
 23642  0179C4  6FEF               	movwf	14831,b	;# 
 23643  0179C6  81EF               	bsf	14831,0,b	;# 
 23644  0179C8  8ED2               	bsf	16338,7,c	;# 
 23645                           
 23646                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23647  0179CA  013B               	movlb	59	; () banked
 23648  0179CC  6BDC               	clrf	220,b	;volatile
 23649                           
 23650                           ; BSR set to: 59
 23651                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23652  0179CE  0012               	return		;funcret
 23653  0179D0                     __end_of_DMA2_Initialize:
 23654                           	opt callstack 0
 23655                           
 23656 ;; *************** function _DMA1_Initialize *****************
 23657 ;; Defined at:
 23658 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23659 ;; Parameters:    Size  Location     Type
 23660 ;;		None
 23661 ;; Auto vars:     Size  Location     Type
 23662 ;;		None
 23663 ;; Return value:  Size  Location     Type
 23664 ;;                  1  [STACK] void 
 23665 ;; Registers used:
 23666 ;;		wreg, status,2
 23667 ;; Tracked objects:
 23668 ;;		On entry : 3F/3B
 23669 ;;		On exit  : 3F/3B
 23670 ;;		Unchanged: 0/0
 23671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23676 ;;Total ram usage:        0 bytes
 23677 ;; Hardware stack levels used:    1
 23678 ;; Hardware stack levels required when called:    6
 23679 ;; This function calls:
 23680 ;;		Nothing
 23681 ;; This function is called by:
 23682 ;;		_SYSTEM_Initialize
 23683 ;; This function uses a reentrant model
 23684 ;;
 23685                           
 23686                           	psect	text109
 23687  017590                     __ptext109:
 23688                           	opt callstack 0
 23689  017590                     _DMA1_Initialize:
 23690                           	opt callstack 23
 23691                           
 23692                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23693                           
 23694                           ; BSR set to: 59
 23695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23696                           ;incstack = 0
 23697  017590  0E00               	movlw	0
 23698  017592  013B               	movlb	59	; () banked
 23699  017594  6FF9               	movwf	249,b	;volatile
 23700  017596  0E10               	movlw	16
 23701  017598  6FFA               	movwf	250,b	;volatile
 23702  01759A  0E00               	movlw	0
 23703  01759C  6FFB               	movwf	251,b	;volatile
 23704                           
 23705                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23706  01759E  0E3D               	movlw	61
 23707  0175A0  6FF1               	movwf	241,b	;volatile
 23708  0175A2  0E11               	movlw	17
 23709  0175A4  6FF0               	movwf	240,b	;volatile
 23710                           
 23711                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23712  0175A6  0E03               	movlw	3
 23713  0175A8  6FFD               	movwf	253,b	;volatile
 23714                           
 23715                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23716  0175AA  0E00               	movlw	0
 23717  0175AC  6FF8               	movwf	248,b	;volatile
 23718  0175AE  0E01               	movlw	1
 23719  0175B0  6FF7               	movwf	247,b	;volatile
 23720                           
 23721                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23722  0175B2  0E00               	movlw	0
 23723  0175B4  6FEF               	movwf	239,b	;volatile
 23724  0175B6  0E01               	movlw	1
 23725  0175B8  6FEE               	movwf	238,b	;volatile
 23726                           
 23727                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23728  0175BA  0E15               	movlw	21
 23729  0175BC  6FFF               	movwf	255,b	;volatile
 23730                           
 23731                           ; BSR set to: 59
 23732                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23733  0175BE  6BFE               	clrf	254,b	;volatile
 23734                           
 23735                           ; BSR set to: 59
 23736                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23737  0175C0  0139               	movlb	57	; () banked
 23738  0175C2  93A2               	bcf	162,1,b	;volatile
 23739                           
 23740                           ; BSR set to: 57
 23741                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23742  0175C4  91A2               	bcf	162,0,b	;volatile
 23743                           
 23744                           ; BSR set to: 57
 23745                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23746  0175C6  97A2               	bcf	162,3,b	;volatile
 23747                           
 23748                           ; BSR set to: 57
 23749                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23750  0175C8  95A2               	bcf	162,2,b	;volatile
 23751                           
 23752                           ; BSR set to: 57
 23753                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23754  0175CA  8392               	bsf	146,1,b	;volatile
 23755                           
 23756                           ; BSR set to: 57
 23757                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23758  0175CC  8192               	bsf	146,0,b	;volatile
 23759                           
 23760                           ; BSR set to: 57
 23761                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23762  0175CE  8792               	bsf	146,3,b	;volatile
 23763                           
 23764                           ; BSR set to: 57
 23765                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23766  0175D0  8592               	bsf	146,2,b	;volatile
 23767                           
 23768                           ; BSR set to: 57
 23769                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23770  0175D2  6BF1               	clrf	241,b	;volatile
 23771                           
 23772                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23773  0175D4  0E01               	movlw	1
 23774  0175D6  6FF2               	movwf	242,b	;volatile
 23775                           
 23776                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23777  0175D8  0E04               	movlw	4
 23778  0175DA  6FF3               	movwf	243,b	;volatile
 23779                           
 23780                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23781  0175DC  0E02               	movlw	2
 23782  0175DE  6FF4               	movwf	244,b	;volatile
 23783                           
 23784                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23785  0175E0  0E03               	movlw	3
 23786  0175E2  6FF7               	movwf	247,b	;volatile
 23787  0175E4  9ED2               	bcf	16338,7,c	;# 
 23788  0175E6  0139               	banksel	14831	;# 
 23789  0175E8  0E55               	movlw	85	;# 
 23790  0175EA  6FEF               	movwf	14831,b	;# 
 23791  0175EC  0EAA               	movlw	170	;# 
 23792  0175EE  6FEF               	movwf	14831,b	;# 
 23793  0175F0  81EF               	bsf	14831,0,b	;# 
 23794  0175F2  8ED2               	bsf	16338,7,c	;# 
 23795                           
 23796                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23797  0175F4  013B               	movlb	59	; () banked
 23798  0175F6  6BFC               	clrf	252,b	;volatile
 23799                           
 23800                           ; BSR set to: 59
 23801                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23802  0175F8  0012               	return		;funcret
 23803  0175FA                     __end_of_DMA1_Initialize:
 23804                           	opt callstack 0
 23805                           
 23806 ;; *************** function _CLKREF_Initialize *****************
 23807 ;; Defined at:
 23808 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23809 ;; Parameters:    Size  Location     Type
 23810 ;;		None
 23811 ;; Auto vars:     Size  Location     Type
 23812 ;;		None
 23813 ;; Return value:  Size  Location     Type
 23814 ;;                  1  [STACK] void 
 23815 ;; Registers used:
 23816 ;;		wreg, status,2
 23817 ;; Tracked objects:
 23818 ;;		On entry : 3F/3B
 23819 ;;		On exit  : 3F/3C
 23820 ;;		Unchanged: 0/0
 23821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23826 ;;Total ram usage:        0 bytes
 23827 ;; Hardware stack levels used:    1
 23828 ;; Hardware stack levels required when called:    6
 23829 ;; This function calls:
 23830 ;;		Nothing
 23831 ;; This function is called by:
 23832 ;;		_SYSTEM_Initialize
 23833 ;; This function uses a reentrant model
 23834 ;;
 23835                           
 23836                           	psect	text110
 23837  01861E                     __ptext110:
 23838                           	opt callstack 0
 23839  01861E                     _CLKREF_Initialize:
 23840                           	opt callstack 23
 23841                           
 23842                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23843                           
 23844                           ; BSR set to: 59
 23845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23846                           ;incstack = 0
 23847  01861E  013C               	movlb	60	; () banked
 23848  018620  6BE6               	clrf	230,b	;volatile
 23849                           
 23850                           ; BSR set to: 60
 23851                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23852  018622  0E94               	movlw	148
 23853  018624  6FE5               	movwf	229,b	;volatile
 23854                           
 23855                           ; BSR set to: 60
 23856                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23857  018626  0012               	return		;funcret
 23858  018628                     __end_of_CLKREF_Initialize:
 23859                           	opt callstack 0
 23860                           
 23861 ;; *************** function _ADCC_Initialize *****************
 23862 ;; Defined at:
 23863 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23864 ;; Parameters:    Size  Location     Type
 23865 ;;		None
 23866 ;; Auto vars:     Size  Location     Type
 23867 ;;		None
 23868 ;; Return value:  Size  Location     Type
 23869 ;;                  1  [STACK] void 
 23870 ;; Registers used:
 23871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23872 ;; Tracked objects:
 23873 ;;		On entry : 3F/3E
 23874 ;;		On exit  : 0/0
 23875 ;;		Unchanged: 0/0
 23876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23881 ;;Total ram usage:        0 bytes
 23882 ;; Hardware stack levels used:    1
 23883 ;; Hardware stack levels required when called:    7
 23884 ;; This function calls:
 23885 ;;		_ADCC_SetADIInterruptHandler
 23886 ;;		_ADCC_SetADTIInterruptHandler
 23887 ;; This function is called by:
 23888 ;;		_SYSTEM_Initialize
 23889 ;; This function uses a reentrant model
 23890 ;;
 23891                           
 23892                           	psect	text111
 23893  0175FA                     __ptext111:
 23894                           	opt callstack 0
 23895  0175FA                     _ADCC_Initialize:
 23896                           	opt callstack 22
 23897                           
 23898                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23899                           
 23900                           ; BSR set to: 60
 23901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23902                           ;incstack = 0
 23903  0175FA  013E               	movlb	62	; () banked
 23904  0175FC  6BDE               	clrf	222,b	;volatile
 23905                           
 23906                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23907  0175FE  6BDF               	clrf	223,b	;volatile
 23908                           
 23909                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23910  017600  6BE0               	clrf	224,b	;volatile
 23911                           
 23912                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23913  017602  6BE1               	clrf	225,b	;volatile
 23914                           
 23915                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23916  017604  6BE4               	clrf	228,b	;volatile
 23917                           
 23918                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23919  017606  6BE5               	clrf	229,b	;volatile
 23920                           
 23921                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23922  017608  6BEA               	clrf	234,b	;volatile
 23923                           
 23924                           ; BSR set to: 62
 23925                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23926  01760A  0E40               	movlw	64
 23927  01760C  6FEC               	movwf	236,b	;volatile
 23928                           
 23929                           ; BSR set to: 62
 23930                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23931  01760E  6BF1               	clrf	241,b	;volatile
 23932                           
 23933                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 23934  017610  0E20               	movlw	32
 23935  017612  6FF3               	movwf	243,b	;volatile
 23936                           
 23937                           ; BSR set to: 62
 23938                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23939  017614  6BF4               	clrf	244,b	;volatile
 23940                           
 23941                           ; BSR set to: 62
 23942                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23943  017616  6BF5               	clrf	245,b	;volatile
 23944                           
 23945                           ; BSR set to: 62
 23946                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23947  017618  6BF6               	clrf	246,b	;volatile
 23948                           
 23949                           ; BSR set to: 62
 23950                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23951  01761A  6BF7               	clrf	247,b	;volatile
 23952                           
 23953                           ; BSR set to: 62
 23954                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23955  01761C  6BF9               	clrf	249,b	;volatile
 23956                           
 23957                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 23958  01761E  0E5B               	movlw	91
 23959  017620  6FFA               	movwf	250,b	;volatile
 23960                           
 23961                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23962  017622  0E27               	movlw	39
 23963  017624  6FFB               	movwf	251,b	;volatile
 23964                           
 23965                           ; BSR set to: 62
 23966                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23967  017626  6BFC               	clrf	252,b	;volatile
 23968                           
 23969                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23970  017628  0E02               	movlw	2
 23971  01762A  6FFD               	movwf	253,b	;volatile
 23972                           
 23973                           ; BSR set to: 62
 23974                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23975  01762C  6BFE               	clrf	254,b	;volatile
 23976                           
 23977                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 23978  01762E  0E07               	movlw	7
 23979  017630  6FFF               	movwf	255,b	;volatile
 23980                           
 23981                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 23982  017632  0E84               	movlw	132
 23983  017634  6FF8               	movwf	248,b	;volatile
 23984                           
 23985                           ; BSR set to: 62
 23986                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23987  017636  0139               	movlb	57	; () banked
 23988  017638  95A1               	bcf	161,2,b	;volatile
 23989                           
 23990                           ; BSR set to: 57
 23991                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23992  01763A  8591               	bsf	145,2,b	;volatile
 23993                           
 23994                           ; BSR set to: 57
 23995                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23996  01763C  0E8E               	movlw	low _ADCC_DefaultInterruptHandler
 23997  01763E  6EE6               	movwf	postinc1,c
 23998  017640  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 23999  017642  6EE6               	movwf	postinc1,c
 24000  017644  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24001  017646  6EE6               	movwf	postinc1,c
 24002  017648  EC33  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24003                           
 24004                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24005  01764C  0139               	movlb	57	; () banked
 24006  01764E  97A1               	bcf	161,3,b	;volatile
 24007                           
 24008                           ; BSR set to: 57
 24009                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24010  017650  8791               	bsf	145,3,b	;volatile
 24011                           
 24012                           ; BSR set to: 57
 24013                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24014  017652  0E8E               	movlw	low _ADCC_DefaultInterruptHandler
 24015  017654  6EE6               	movwf	postinc1,c
 24016  017656  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 24017  017658  6EE6               	movwf	postinc1,c
 24018  01765A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24019  01765C  6EE6               	movwf	postinc1,c
 24020  01765E  EC1F  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24021                           
 24022                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24023  017662  0012               	return		;funcret
 24024  017664                     __end_of_ADCC_Initialize:
 24025                           	opt callstack 0
 24026                           
 24027 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24028 ;; Defined at:
 24029 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24030 ;; Parameters:    Size  Location     Type
 24031 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24032 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24033 ;; Auto vars:     Size  Location     Type
 24034 ;;		None
 24035 ;; Return value:  Size  Location     Type
 24036 ;;                  1  [STACK] void 
 24037 ;; Registers used:
 24038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24039 ;; Tracked objects:
 24040 ;;		On entry : 0/0
 24041 ;;		On exit  : 0/0
 24042 ;;		Unchanged: 0/0
 24043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24048 ;;Total ram usage:        0 bytes
 24049 ;; Hardware stack levels used:    1
 24050 ;; Hardware stack levels required when called:    6
 24051 ;; This function calls:
 24052 ;;		Nothing
 24053 ;; This function is called by:
 24054 ;;		_ADCC_Initialize
 24055 ;;		_start_adc_scan
 24056 ;; This function uses a reentrant model
 24057 ;;
 24058                           
 24059                           	psect	text112
 24060  01823E                     __ptext112:
 24061                           	opt callstack 0
 24062  01823E                     _ADCC_SetADTIInterruptHandler:
 24063                           	opt callstack 23
 24064                           
 24065                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24066                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24067                           
 24068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24069                           ;incstack = 0
 24070  01823E  50E1               	movf	fsr1l,w,c
 24071  018240  0FFD               	addlw	-3
 24072  018242  6ED9               	movwf	fsr2l,c
 24073  018244  50E2               	movf	fsr1h,w,c
 24074  018246  6EDA               	movwf	fsr2h,c
 24075  018248  0EFF               	movlw	255
 24076  01824A  22DA               	addwfc	fsr2h,f,c
 24077  01824C  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24078  018252  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24079  018258  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24080                           
 24081                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24082  01825E  52E5               	movf	postdec1,f,c
 24083  018260  52E5               	movf	postdec1,f,c
 24084  018262  52E5               	movf	postdec1,f,c
 24085  018264  0012               	return		;funcret
 24086  018266                     __end_of_ADCC_SetADTIInterruptHandler:
 24087                           	opt callstack 0
 24088                           
 24089 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24090 ;; Defined at:
 24091 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24092 ;; Parameters:    Size  Location     Type
 24093 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24094 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24095 ;; Auto vars:     Size  Location     Type
 24096 ;;		None
 24097 ;; Return value:  Size  Location     Type
 24098 ;;                  1  [STACK] void 
 24099 ;; Registers used:
 24100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24101 ;; Tracked objects:
 24102 ;;		On entry : 6/0
 24103 ;;		On exit  : 0/0
 24104 ;;		Unchanged: 0/0
 24105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24110 ;;Total ram usage:        0 bytes
 24111 ;; Hardware stack levels used:    1
 24112 ;; Hardware stack levels required when called:    6
 24113 ;; This function calls:
 24114 ;;		Nothing
 24115 ;; This function is called by:
 24116 ;;		_ADCC_Initialize
 24117 ;;		_start_adc_scan
 24118 ;; This function uses a reentrant model
 24119 ;;
 24120                           
 24121                           	psect	text113
 24122  018266                     __ptext113:
 24123                           	opt callstack 0
 24124  018266                     _ADCC_SetADIInterruptHandler:
 24125                           	opt callstack 23
 24126                           
 24127                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24128                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24129                           
 24130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24131                           ;incstack = 0
 24132  018266  50E1               	movf	fsr1l,w,c
 24133  018268  0FFD               	addlw	-3
 24134  01826A  6ED9               	movwf	fsr2l,c
 24135  01826C  50E2               	movf	fsr1h,w,c
 24136  01826E  6EDA               	movwf	fsr2h,c
 24137  018270  0EFF               	movlw	255
 24138  018272  22DA               	addwfc	fsr2h,f,c
 24139  018274  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24140  01827A  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24141  018280  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24142                           
 24143                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24144  018286  52E5               	movf	postdec1,f,c
 24145  018288  52E5               	movf	postdec1,f,c
 24146  01828A  52E5               	movf	postdec1,f,c
 24147  01828C  0012               	return		;funcret
 24148  01828E                     __end_of_ADCC_SetADIInterruptHandler:
 24149                           	opt callstack 0
 24150                           
 24151 ;; *************** function _INT1_ISR *****************
 24152 ;; Defined at:
 24153 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;		None
 24156 ;; Auto vars:     Size  Location     Type
 24157 ;;		None
 24158 ;; Return value:  Size  Location     Type
 24159 ;;                  1    wreg      void 
 24160 ;; Registers used:
 24161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24162 ;; Tracked objects:
 24163 ;;		On entry : 0/0
 24164 ;;		On exit  : 0/0
 24165 ;;		Unchanged: 0/0
 24166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;Total ram usage:        4 bytes
 24172 ;; Hardware stack levels used:    1
 24173 ;; Hardware stack levels required when called:    5
 24174 ;; This function calls:
 24175 ;;		_INT1_CallBack
 24176 ;; This function is called by:
 24177 ;;		Interrupt level 1
 24178 ;; This function uses a non-reentrant model
 24179 ;;
 24180                           
 24181                           	psect	text114
 24182  017D3C                     __ptext114:
 24183                           	opt callstack 0
 24184  017D3C                     _INT1_ISR:
 24185                           	opt callstack 12
 24186                           
 24187                           ;incstack = 0
 24188  017D3C  006F FF60  F0F6    	movff	status,??_INT1_ISR
 24189  017D42  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 24190  017D48  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 24191  017D4E  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 24192  017D54  EE16  F000         	lfsr	1,___intlo_sp
 24193                           
 24194                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24195  017D58  0139               	movlb	57	; () banked
 24196  017D5A  91A5               	bcf	165,0,b	;volatile
 24197                           
 24198                           ; BSR set to: 57
 24199                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24200  017D5C  ECE1  F0C1         	call	_INT1_CallBack	;wreg free
 24201  017D60  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 24202  017D66  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 24203  017D6C  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 24204  017D72  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 24205  017D78  0011               	retfie		f
 24206  017D7A                     __end_of_INT1_ISR:
 24207                           	opt callstack 0
 24208                           
 24209 ;; *************** function _INT1_CallBack *****************
 24210 ;; Defined at:
 24211 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24212 ;; Parameters:    Size  Location     Type
 24213 ;;		None
 24214 ;; Auto vars:     Size  Location     Type
 24215 ;;		None
 24216 ;; Return value:  Size  Location     Type
 24217 ;;                  1  [STACK] void 
 24218 ;; Registers used:
 24219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24220 ;; Tracked objects:
 24221 ;;		On entry : 3F/39
 24222 ;;		On exit  : 0/0
 24223 ;;		Unchanged: 0/0
 24224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;Total ram usage:        0 bytes
 24230 ;; Hardware stack levels used:    1
 24231 ;; Hardware stack levels required when called:    4
 24232 ;; This function calls:
 24233 ;;		Absolute function
 24234 ;;		_INT1_DefaultInterruptHandler
 24235 ;;		_switch_handler
 24236 ;; This function is called by:
 24237 ;;		_INT1_ISR
 24238 ;; This function uses a reentrant model
 24239 ;;
 24240                           
 24241                           	psect	text115
 24242  0183C2                     __ptext115:
 24243                           	opt callstack 0
 24244  0183C2                     _INT1_CallBack:
 24245                           	opt callstack 12
 24246                           
 24247                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24248                           
 24249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24250                           ;incstack = 0
 24251  0183C2  5013               	movf	_INT1_InterruptHandler^0,w,c
 24252  0183C4  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24253  0183C6  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24254  0183C8  B4D8               	btfsc	status,2,c
 24255  0183CA  0012               	return	
 24256                           
 24257                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24258  0183CC  D801               	call	u832_28
 24259  0183CE  0012               	return	
 24260  0183D0                     u832_28:
 24261  0183D0  0005               	push	
 24262  0183D2  6EFA               	movwf	pclath,c
 24263  0183D4  5013               	movf	_INT1_InterruptHandler^0,w,c
 24264  0183D6  6EFD               	movwf	tosl,c
 24265  0183D8  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24266  0183DA  6EFE               	movwf	tosh,c
 24267  0183DC  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24268  0183DE  6EFF               	movwf	tosu,c
 24269  0183E0  50FA               	movf	pclath,w,c
 24270  0183E2  0012               	return		;indir
 24271  0183E4                     __end_of_INT1_CallBack:
 24272                           	opt callstack 0
 24273                           
 24274 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24275 ;; Defined at:
 24276 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24277 ;; Parameters:    Size  Location     Type
 24278 ;;		None
 24279 ;; Auto vars:     Size  Location     Type
 24280 ;;		None
 24281 ;; Return value:  Size  Location     Type
 24282 ;;                  1  [STACK] void 
 24283 ;; Registers used:
 24284 ;;		None
 24285 ;; Tracked objects:
 24286 ;;		On entry : 0/39
 24287 ;;		On exit  : 0/0
 24288 ;;		Unchanged: 0/0
 24289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24294 ;;Total ram usage:        0 bytes
 24295 ;; Hardware stack levels used:    1
 24296 ;; Hardware stack levels required when called:    3
 24297 ;; This function calls:
 24298 ;;		Nothing
 24299 ;; This function is called by:
 24300 ;;		_EXT_INT_Initialize
 24301 ;;		_INT1_CallBack
 24302 ;; This function uses a reentrant model
 24303 ;;
 24304                           
 24305                           	psect	text116
 24306  01868A                     __ptext116:
 24307                           	opt callstack 0
 24308  01868A                     _INT1_DefaultInterruptHandler:
 24309                           	opt callstack 12
 24310                           
 24311                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24312                           
 24313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24314                           ;incstack = 0
 24315  01868A  0012               	return		;funcret
 24316  01868C                     __end_of_INT1_DefaultInterruptHandler:
 24317                           	opt callstack 0
 24318                           
 24319 ;; *************** function _switch_handler *****************
 24320 ;; Defined at:
 24321 ;;		line 58 in file "dio.c"
 24322 ;; Parameters:    Size  Location     Type
 24323 ;;		None
 24324 ;; Auto vars:     Size  Location     Type
 24325 ;;  i               1  [STACK] unsigned char 
 24326 ;;  sw_value        1  [STACK] unsigned char 
 24327 ;; Return value:  Size  Location     Type
 24328 ;;                  1  [STACK] void 
 24329 ;; Registers used:
 24330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24331 ;; Tracked objects:
 24332 ;;		On entry : 0/39
 24333 ;;		On exit  : 0/0
 24334 ;;		Unchanged: 0/0
 24335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24340 ;;Total ram usage:        0 bytes
 24341 ;; Hardware stack levels used:    1
 24342 ;; Hardware stack levels required when called:    3
 24343 ;; This function calls:
 24344 ;;		Nothing
 24345 ;; This function is called by:
 24346 ;;		_start_switch_handler
 24347 ;;		_INT1_CallBack
 24348 ;; This function uses a reentrant model
 24349 ;;
 24350                           
 24351                           	psect	text117
 24352  0162A2                     __ptext117:
 24353                           	opt callstack 0
 24354  0162A2                     _switch_handler:
 24355                           	opt callstack 0
 24356                           
 24357                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24358  0162A2  52E6               	movf	postinc1,f,c
 24359  0162A4  52E6               	movf	postinc1,f,c
 24360                           
 24361                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24362                           ;stkvar	_i @ sp[(-2)+0]
 24363                           
 24364                           ;incstack = 0
 24365  0162A6  0EFE               	movlw	-2
 24366  0162A8  6AE3               	clrf	plusw1,c
 24367  0162AA  9EBD               	bcf	189,7,c	;volatile
 24368  0162AC  82BE               	bsf	190,1,c	;volatile
 24369                           
 24370                           ;dio.c: 72:  __nop();
 24371  0162AE  F000               	nop	
 24372                           
 24373                           ;dio.c: 73:  __nop();
 24374  0162B0  F000               	nop	
 24375                           
 24376                           ;dio.c: 74:  __nop();
 24377  0162B2  F000               	nop	
 24378  0162B4  D019               	goto	l8724
 24379  0162B6                     l8712:
 24380                           
 24381                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24382  0162B6  A6CF               	btfss	207,3,c	;volatile
 24383  0162B8  D011               	goto	u824_20
 24384  0162BA  D00D               	goto	u824_21
 24385  0162BC                     u821_28:
 24386                           
 24387                           ;stkvar	_sw_value @ sp[(-2)+1]
 24388  0162BC  0EFF               	movlw	-1
 24389  0162BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24390                           
 24391                           ;dio.c: 80:    break;
 24392  0162C4  D027               	goto	l8726
 24393  0162C6                     l8714:
 24394                           
 24395                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24396  0162C6  A4CF               	btfss	207,2,c	;volatile
 24397  0162C8  D009               	goto	u824_20
 24398  0162CA  D005               	goto	u824_21
 24399  0162CC                     l8716:
 24400                           
 24401                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24402  0162CC  A2CF               	btfss	207,1,c	;volatile
 24403  0162CE  D006               	goto	u824_20
 24404  0162D0  D002               	goto	u824_21
 24405  0162D2                     l8718:
 24406                           
 24407                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24408  0162D2  A0CF               	btfss	207,0,c	;volatile
 24409  0162D4  D003               	goto	u824_20
 24410  0162D6                     u824_21:
 24411  0162D6  6A3D               	clrf	(btemp+11)^0,c
 24412  0162D8  2A3D               	incf	(btemp+11)^0,f,c
 24413  0162DA  D7F0               	goto	u821_28
 24414  0162DC                     u824_20:
 24415  0162DC  6A3D               	clrf	(btemp+11)^0,c
 24416  0162DE  D7EE               	goto	u821_28
 24417  0162E0                     l8720:
 24418                           
 24419                           ;dio.c: 91:    sw_value = 1;
 24420                           ;stkvar	_sw_value @ sp[(-2)+1]
 24421  0162E0  0EFF               	movlw	-1
 24422  0162E2  6AE3               	clrf	plusw1,c
 24423  0162E4  2AE3               	incf	plusw1,f,c
 24424                           
 24425                           ;dio.c: 92:    break;
 24426  0162E6  D016               	goto	l8726
 24427  0162E8                     l8724:
 24428                           
 24429                           ;stkvar	_i @ sp[(-2)+0]
 24430  0162E8  0EFE               	movlw	-2
 24431  0162EA  50E3               	movf	plusw1,w,c
 24432  0162EC  6E3C               	movwf	(btemp+10)^0,c
 24433  0162EE  6A3D               	clrf	(btemp+11)^0,c
 24434                           
 24435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24436                           ; Switch size 1, requested type "simple"
 24437                           ; Number of cases is 1, Range of values is 0 to 0
 24438                           ; switch strategies available:
 24439                           ; Name         Instructions Cycles
 24440                           ; simple_byte            4     3 (average)
 24441                           ;	Chosen strategy is simple_byte
 24442  0162F0  503D               	movf	(btemp+11)^0,w,c
 24443  0162F2  0A00               	xorlw	0	; case 0
 24444  0162F4  A4D8               	btfss	status,2,c
 24445  0162F6  D7F4               	goto	l8720
 24446                           
 24447                           ; Switch size 1, requested type "simple"
 24448                           ; Number of cases is 4, Range of values is 0 to 3
 24449                           ; switch strategies available:
 24450                           ; Name         Instructions Cycles
 24451                           ; simple_byte           13     7 (average)
 24452                           ;	Chosen strategy is simple_byte
 24453  0162F8  503C               	movf	(btemp+10)^0,w,c
 24454  0162FA  0A00               	xorlw	0	; case 0
 24455  0162FC  B4D8               	btfsc	status,2,c
 24456  0162FE  D7E9               	goto	l8718
 24457  016300  0A01               	xorlw	1	; case 1
 24458  016302  B4D8               	btfsc	status,2,c
 24459  016304  D7E3               	goto	l8716
 24460  016306  0A03               	xorlw	3	; case 2
 24461  016308  B4D8               	btfsc	status,2,c
 24462  01630A  D7DD               	goto	l8714
 24463  01630C  0A01               	xorlw	1	; case 3
 24464  01630E  B4D8               	btfsc	status,2,c
 24465  016310  D7D2               	goto	l8712
 24466  016312  D7E6               	goto	l8720
 24467  016314                     l8726:
 24468                           
 24469                           ;dio.c: 96:   if (sw_value) {
 24470                           ;stkvar	_sw_value @ sp[(-2)+1]
 24471  016314  0EFF               	movlw	-1
 24472  016316  50E3               	movf	plusw1,w,c
 24473  016318  B4D8               	btfsc	status,2,c
 24474  01631A  D014               	goto	l8732
 24475                           
 24476                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24477                           ;stkvar	_i @ sp[(-2)+0]
 24478  01631C  0EFE               	movlw	-2
 24479  01631E  50E3               	movf	plusw1,w,c
 24480  016320  0D05               	mullw	5
 24481  016322  50F3               	movf	243,w,c
 24482  016324  0F60               	addlw	low _S
 24483  016326  6ED9               	movwf	fsr2l,c
 24484  016328  6ADA               	clrf	fsr2h,c
 24485  01632A  04DE               	decf	postinc2,w,c
 24486  01632C  A4D8               	btfss	status,2,c
 24487  01632E  D041               	goto	l8740
 24488                           
 24489                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24490                           ;stkvar	_i @ sp[(-2)+0]
 24491  016330  0EFE               	movlw	-2
 24492  016332  50E3               	movf	plusw1,w,c
 24493  016334  0D05               	mullw	5
 24494  016336  50F3               	movf	243,w,c
 24495  016338  0F60               	addlw	low _S
 24496  01633A  6ED9               	movwf	fsr2l,c
 24497  01633C  6ADA               	clrf	fsr2h,c
 24498  01633E  0E00               	movlw	0
 24499  016340  6EDF               	movwf	indf2,c
 24500  016342  D037               	goto	l8740
 24501  016344                     l8732:
 24502                           
 24503                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24504                           ;stkvar	_i @ sp[(-2)+0]
 24505  016344  0EFE               	movlw	-2
 24506  016346  50E3               	movf	plusw1,w,c
 24507  016348  0D05               	mullw	5
 24508  01634A  50F3               	movf	243,w,c
 24509  01634C  0F60               	addlw	low _S
 24510  01634E  6ED9               	movwf	fsr2l,c
 24511  016350  6ADA               	clrf	fsr2h,c
 24512  016352  50DF               	movf	indf2,w,c
 24513  016354  A4D8               	btfss	status,2,c
 24514  016356  D02D               	goto	l8740
 24515                           
 24516                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24517                           ;stkvar	_i @ sp[(-2)+0]
 24518  016358  0EFE               	movlw	-2
 24519  01635A  50E3               	movf	plusw1,w,c
 24520  01635C  0D05               	mullw	5
 24521  01635E  50F3               	movf	243,w,c
 24522  016360  0F60               	addlw	low _S
 24523  016362  6ED9               	movwf	fsr2l,c
 24524  016364  6ADA               	clrf	fsr2h,c
 24525  016366  0E01               	movlw	1
 24526  016368  6EDF               	movwf	indf2,c
 24527                           
 24528                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24529  01636A  EE20  F1B7         	lfsr	2,_V+183	;volatile
 24530                           
 24531                           ;stkvar	_i @ sp[(-2)+0]
 24532  01636E  0EFE               	movlw	-2
 24533  016370  50E3               	movf	plusw1,w,c
 24534  016372  0D05               	mullw	5
 24535  016374  50F3               	movf	243,w,c
 24536  016376  0F61               	addlw	low (_S+1)
 24537  016378  6EE9               	movwf	fsr0l,c
 24538  01637A  6AEA               	clrf	fsr0h,c
 24539  01637C  006F FF7B FFEE     	movff	postinc2,postinc0
 24540  016382  006F FF7B FFEE     	movff	postinc2,postinc0
 24541  016388  006F FF7B FFEE     	movff	postinc2,postinc0
 24542  01638E  006F FF7B FFEE     	movff	postinc2,postinc0
 24543                           
 24544                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24545                           ;stkvar	_i @ sp[(-2)+0]
 24546  016394  0EFE               	movlw	-2
 24547  016396  006F FF8C  F03D    	movff	plusw1,btemp+11
 24548  01639C  0E01               	movlw	1
 24549  01639E  6E3C               	movwf	(btemp+10)^0,c
 24550  0163A0  2A3D               	incf	(btemp+11)^0,f,c
 24551  0163A2  D002               	goto	u828_24
 24552  0163A4                     u828_25:
 24553  0163A4  90D8               	bcf	status,0,c
 24554  0163A6  363C               	rlcf	(btemp+10)^0,f,c
 24555  0163A8                     u828_24:
 24556  0163A8  2E3D               	decfsz	(btemp+11)^0,f,c
 24557  0163AA  D7FC               	goto	u828_25
 24558  0163AC  503C               	movf	(btemp+10)^0,w,c
 24559  0163AE  0100               	movlb	0	; () banked
 24560  0163B0  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24561  0163B2                     l8740:
 24562                           
 24563                           ;dio.c: 107:  } while (++i < 4);
 24564                           ;stkvar	_i @ sp[(-2)+0]
 24565  0163B2  0EFE               	movlw	-2
 24566  0163B4  2AE3               	incf	plusw1,f,c
 24567  0163B6  0EFE               	movlw	-2
 24568  0163B8  006F FF8C  F032    	movff	plusw1,btemp
 24569  0163BE  0E03               	movlw	3
 24570  0163C0  6432               	cpfsgt	btemp^0,c
 24571  0163C2  D792               	goto	l8724
 24572                           
 24573                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24574  0163C4  92BE               	bcf	190,1,c	;volatile
 24575  0163C6  A4BE               	btfss	190,2,c	;volatile
 24576  0163C8  D002               	goto	u830_20
 24577  0163CA  0E01               	movlw	1
 24578  0163CC  D001               	goto	u830_26
 24579  0163CE                     u830_20:
 24580  0163CE  0E00               	movlw	0
 24581  0163D0                     u830_26:
 24582  0163D0  0AFF               	xorlw	255
 24583  0163D2  6E3D               	movwf	(btemp+11)^0,c
 24584  0163D4  463D               	rlncf	(btemp+11)^0,f,c
 24585  0163D6  463D               	rlncf	(btemp+11)^0,f,c
 24586  0163D8  50BE               	movf	190,w,c	;volatile
 24587  0163DA  183D               	xorwf	(btemp+11)^0,w,c
 24588  0163DC  0BFB               	andlw	-5
 24589  0163DE  183D               	xorwf	(btemp+11)^0,w,c
 24590  0163E0  6EBE               	movwf	190,c	;volatile
 24591  0163E2  8EBD               	bsf	189,7,c	;volatile
 24592                           
 24593                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24594  0163E4  52E5               	movf	postdec1,f,c
 24595  0163E6  52E5               	movf	postdec1,f,c
 24596  0163E8  0012               	return		;funcret
 24597  0163EA                     __end_of_switch_handler:
 24598                           	opt callstack 0
 24599                           
 24600 ;; *************** function _TMR5_ISR *****************
 24601 ;; Defined at:
 24602 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24603 ;; Parameters:    Size  Location     Type
 24604 ;;		None
 24605 ;; Auto vars:     Size  Location     Type
 24606 ;;		None
 24607 ;; Return value:  Size  Location     Type
 24608 ;;                  1    wreg      void 
 24609 ;; Registers used:
 24610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24611 ;; Tracked objects:
 24612 ;;		On entry : 0/0
 24613 ;;		On exit  : 0/0
 24614 ;;		Unchanged: 0/0
 24615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24618 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24619 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24620 ;;Total ram usage:        4 bytes
 24621 ;; Hardware stack levels used:    1
 24622 ;; Hardware stack levels required when called:    5
 24623 ;; This function calls:
 24624 ;;		_TMR5_CallBack
 24625 ;;		_TMR5_WriteTimer
 24626 ;; This function is called by:
 24627 ;;		Interrupt level 1
 24628 ;; This function uses a non-reentrant model
 24629 ;;
 24630                           
 24631                           	psect	text118
 24632  0179D0                     __ptext118:
 24633                           	opt callstack 0
 24634  0179D0                     _TMR5_ISR:
 24635                           	opt callstack 12
 24636                           
 24637                           ;incstack = 0
 24638  0179D0  006F FF60  F1C5    	movff	status,??_TMR5_ISR+2
 24639  0179D6  0060  F0F4  F1C6   	movff	btemp+11,??_TMR5_ISR+3
 24640  0179DC  EE16  F000         	lfsr	1,___intlo_sp
 24641                           
 24642                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24643  0179E0  0139               	movlb	57	; () banked
 24644  0179E2  9DA8               	bcf	168,6,b	;volatile
 24645                           
 24646                           ; BSR set to: 57
 24647                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24648  0179E4  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24649  0179EA  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24650  0179F0  EC7D  F0BE         	call	_TMR5_WriteTimer	;wreg free
 24651                           
 24652                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24653  0179F4  0101               	movlb	1	; () banked
 24654  0179F6  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24655  0179F8  6FC3               	movwf	??_TMR5_ISR& (0+255),b
 24656  0179FA  6BC4               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24657  0179FC  0E05               	movlw	5
 24658  0179FE  27C3               	addwf	??_TMR5_ISR& (0+255),f,b
 24659  017A00  0E00               	movlw	0
 24660  017A02  23C4               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24661  017A04  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24662  017A06  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24663  017A08  51C3               	movf	??_TMR5_ISR& (0+255),w,b
 24664  017A0A  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24665  017A0C  51C4               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24666  017A0E  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24667  017A10  A0D8               	btfss	status,0,c
 24668  017A12  D004               	goto	i1l1045
 24669                           
 24670                           ; BSR set to: 1
 24671                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24672  017A14  ECBD  F0C1         	call	_TMR5_CallBack	;wreg free
 24673                           
 24674                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24675  017A18  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24676  017A1A  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24677  017A1C                     i1l1045:
 24678  017A1C  0060  F718  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24679  017A22  0060  F717  FFD8   	movff	??_TMR5_ISR+2,status
 24680  017A28  0011               	retfie		f
 24681  017A2A                     __end_of_TMR5_ISR:
 24682                           	opt callstack 0
 24683                           
 24684 ;; *************** function _TMR5_WriteTimer *****************
 24685 ;; Defined at:
 24686 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24687 ;; Parameters:    Size  Location     Type
 24688 ;;  timerVal        2  [STACK] unsigned short 
 24689 ;; Auto vars:     Size  Location     Type
 24690 ;;		None
 24691 ;; Return value:  Size  Location     Type
 24692 ;;                  1  [STACK] void 
 24693 ;; Registers used:
 24694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24695 ;; Tracked objects:
 24696 ;;		On entry : 3F/39
 24697 ;;		On exit  : 0/0
 24698 ;;		Unchanged: 0/0
 24699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;Total ram usage:        0 bytes
 24705 ;; Hardware stack levels used:    1
 24706 ;; Hardware stack levels required when called:    3
 24707 ;; This function calls:
 24708 ;;		Nothing
 24709 ;; This function is called by:
 24710 ;;		_TMR5_ISR
 24711 ;; This function uses a reentrant model
 24712 ;;
 24713                           
 24714                           	psect	text119
 24715  017CFA                     __ptext119:
 24716                           	opt callstack 0
 24717  017CFA                     _TMR5_WriteTimer:
 24718                           	opt callstack 13
 24719                           
 24720                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24721                           
 24722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24723                           ;incstack = 0
 24724  017CFA  A49A               	btfss	154,2,c	;volatile
 24725  017CFC  D00F               	goto	l8846
 24726                           
 24727                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24728  017CFE  909A               	bcf	154,0,c	;volatile
 24729                           
 24730                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24731                           ;stkvar	_timerVal @ sp[(0)+-2]
 24732  017D00  0EFF               	movlw	255
 24733  017D02  24E1               	addwf	fsr1l,w,c
 24734  017D04  6ED9               	movwf	fsr2l,c
 24735  017D06  0EFF               	movlw	255
 24736  017D08  20E2               	addwfc	fsr1h,w,c
 24737  017D0A  6EDA               	movwf	fsr2h,c
 24738  017D0C  50DF               	movf	indf2,w,c
 24739  017D0E  6E99               	movwf	153,c	;volatile
 24740                           
 24741                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24742                           ;stkvar	_timerVal @ sp[(0)+-2]
 24743  017D10  0EFE               	movlw	-2
 24744  017D12  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24745                           
 24746                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24747  017D18  809A               	bsf	154,0,c	;volatile
 24748                           
 24749                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24750  017D1A  D00C               	goto	l1028
 24751  017D1C                     l8846:
 24752                           
 24753                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24754                           ;stkvar	_timerVal @ sp[(0)+-2]
 24755  017D1C  0EFF               	movlw	255
 24756  017D1E  24E1               	addwf	fsr1l,w,c
 24757  017D20  6ED9               	movwf	fsr2l,c
 24758  017D22  0EFF               	movlw	255
 24759  017D24  20E2               	addwfc	fsr1h,w,c
 24760  017D26  6EDA               	movwf	fsr2h,c
 24761  017D28  50DF               	movf	indf2,w,c
 24762  017D2A  6E99               	movwf	153,c	;volatile
 24763                           
 24764                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24765                           ;stkvar	_timerVal @ sp[(0)+-2]
 24766  017D2C  0EFE               	movlw	-2
 24767  017D2E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24768  017D34                     l1028:
 24769                           
 24770                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24771  017D34  52E5               	movf	postdec1,f,c
 24772  017D36  52E5               	movf	postdec1,f,c
 24773  017D38  0012               	return		;funcret
 24774  017D3A                     __end_of_TMR5_WriteTimer:
 24775                           	opt callstack 0
 24776                           
 24777 ;; *************** function _TMR5_CallBack *****************
 24778 ;; Defined at:
 24779 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24780 ;; Parameters:    Size  Location     Type
 24781 ;;		None
 24782 ;; Auto vars:     Size  Location     Type
 24783 ;;		None
 24784 ;; Return value:  Size  Location     Type
 24785 ;;                  1  [STACK] void 
 24786 ;; Registers used:
 24787 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24788 ;; Tracked objects:
 24789 ;;		On entry : 3F/1
 24790 ;;		On exit  : 0/0
 24791 ;;		Unchanged: 0/0
 24792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24797 ;;Total ram usage:        0 bytes
 24798 ;; Hardware stack levels used:    1
 24799 ;; Hardware stack levels required when called:    4
 24800 ;; This function calls:
 24801 ;;		Absolute function
 24802 ;;		_TMR5_DefaultInterruptHandler
 24803 ;; This function is called by:
 24804 ;;		_TMR5_ISR
 24805 ;; This function uses a reentrant model
 24806 ;;
 24807                           
 24808                           	psect	text120
 24809  01837A                     __ptext120:
 24810                           	opt callstack 0
 24811  01837A                     _TMR5_CallBack:
 24812                           	opt callstack 12
 24813                           
 24814                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24815                           
 24816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24817                           ;incstack = 0
 24818  01837A  0100               	movlb	0	; () banked
 24819  01837C  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24820  01837E  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24821  018380  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24822  018382  B4D8               	btfsc	status,2,c
 24823  018384  0012               	return	
 24824                           
 24825                           ; BSR set to: 0
 24826                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24827  018386  D801               	call	u843_28
 24828  018388  0012               	return	
 24829  01838A                     u843_28:
 24830  01838A  0005               	push	
 24831  01838C  6EFA               	movwf	pclath,c
 24832  01838E  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24833  018390  6EFD               	movwf	tosl,c
 24834  018392  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24835  018394  6EFE               	movwf	tosh,c
 24836  018396  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24837  018398  6EFF               	movwf	tosu,c
 24838  01839A  50FA               	movf	pclath,w,c
 24839  01839C  0012               	return		;indir
 24840  01839E                     __end_of_TMR5_CallBack:
 24841                           	opt callstack 0
 24842                           
 24843 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24844 ;; Defined at:
 24845 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24846 ;; Parameters:    Size  Location     Type
 24847 ;;		None
 24848 ;; Auto vars:     Size  Location     Type
 24849 ;;		None
 24850 ;; Return value:  Size  Location     Type
 24851 ;;                  1  [STACK] void 
 24852 ;; Registers used:
 24853 ;;		wreg, status,2, status,0, btemp+11
 24854 ;; Tracked objects:
 24855 ;;		On entry : 3F/0
 24856 ;;		On exit  : 3F/1
 24857 ;;		Unchanged: 0/0
 24858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24863 ;;Total ram usage:        0 bytes
 24864 ;; Hardware stack levels used:    1
 24865 ;; Hardware stack levels required when called:    3
 24866 ;; This function calls:
 24867 ;;		Nothing
 24868 ;; This function is called by:
 24869 ;;		_TMR5_Initialize
 24870 ;;		_TMR5_CallBack
 24871 ;; This function uses a reentrant model
 24872 ;;
 24873                           
 24874                           	psect	text121
 24875  01828E                     __ptext121:
 24876                           	opt callstack 0
 24877  01828E                     _TMR5_DefaultInterruptHandler:
 24878                           	opt callstack 12
 24879                           
 24880                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24881                           
 24882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24883                           ;incstack = 0
 24884  01828E  A0BE               	btfss	190,0,c	;volatile
 24885  018290  D002               	goto	u799_20
 24886  018292  0E01               	movlw	1
 24887  018294  D001               	goto	u799_26
 24888  018296                     u799_20:
 24889  018296  0E00               	movlw	0
 24890  018298                     u799_26:
 24891  018298  0AFF               	xorlw	255
 24892  01829A  6E3D               	movwf	(btemp+11)^0,c
 24893  01829C  50BE               	movf	190,w,c	;volatile
 24894  01829E  183D               	xorwf	(btemp+11)^0,w,c
 24895  0182A0  0BFE               	andlw	-2
 24896  0182A2  183D               	xorwf	(btemp+11)^0,w,c
 24897  0182A4  6EBE               	movwf	190,c	;volatile
 24898                           
 24899                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24900  0182A6  0E01               	movlw	1
 24901  0182A8  0101               	movlb	1	; () banked
 24902  0182AA  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24903  0182AC  0E00               	movlw	0
 24904  0182AE  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 24905  0182B0  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 24906  0182B2  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 24907                           
 24908                           ; BSR set to: 1
 24909                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24910  0182B4  0012               	return		;funcret
 24911  0182B6                     __end_of_TMR5_DefaultInterruptHandler:
 24912                           	opt callstack 0
 24913                           
 24914 ;; *************** function _INT0_ISR *****************
 24915 ;; Defined at:
 24916 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 24917 ;; Parameters:    Size  Location     Type
 24918 ;;		None
 24919 ;; Auto vars:     Size  Location     Type
 24920 ;;		None
 24921 ;; Return value:  Size  Location     Type
 24922 ;;                  1    wreg      void 
 24923 ;; Registers used:
 24924 ;;		wreg, status,2, status,0, pclath, tosl
 24925 ;; Tracked objects:
 24926 ;;		On entry : 0/0
 24927 ;;		On exit  : 0/0
 24928 ;;		Unchanged: 0/0
 24929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24934 ;;Total ram usage:        0 bytes
 24935 ;; Hardware stack levels used:    1
 24936 ;; Hardware stack levels required when called:    2
 24937 ;; This function calls:
 24938 ;;		_INT0_CallBack
 24939 ;; This function is called by:
 24940 ;;		Interrupt level 2
 24941 ;; This function uses a non-reentrant model
 24942 ;;
 24943                           
 24944                           	psect	text122
 24945  018600                     __ptext122:
 24946                           	opt callstack 0
 24947  018600                     _INT0_ISR:
 24948                           	opt callstack 12
 24949                           
 24950                           ; BSR set to: 1
 24951                           ;incstack = 0
 24952  018600  EE14  F000         	lfsr	1,___inthi_sp
 24953                           
 24954                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 24955  018604  0139               	movlb	57	; () banked
 24956  018606  91A1               	bcf	161,0,b	;volatile
 24957                           
 24958                           ; BSR set to: 57
 24959                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 24960  018608  ECF2  F0C1         	call	_INT0_CallBack	;wreg free
 24961  01860C  0011               	retfie		f
 24962  01860E                     __end_of_INT0_ISR:
 24963                           	opt callstack 0
 24964                           
 24965 ;; *************** function _INT0_CallBack *****************
 24966 ;; Defined at:
 24967 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 24968 ;; Parameters:    Size  Location     Type
 24969 ;;		None
 24970 ;; Auto vars:     Size  Location     Type
 24971 ;;		None
 24972 ;; Return value:  Size  Location     Type
 24973 ;;                  1  [STACK] void 
 24974 ;; Registers used:
 24975 ;;		wreg, status,2, status,0, pclath, tosl
 24976 ;; Tracked objects:
 24977 ;;		On entry : 3F/39
 24978 ;;		On exit  : 0/0
 24979 ;;		Unchanged: 0/0
 24980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24985 ;;Total ram usage:        0 bytes
 24986 ;; Hardware stack levels used:    1
 24987 ;; Hardware stack levels required when called:    1
 24988 ;; This function calls:
 24989 ;;		Absolute function
 24990 ;;		_INT0_DefaultInterruptHandler
 24991 ;; This function is called by:
 24992 ;;		_INT0_ISR
 24993 ;; This function uses a reentrant model
 24994 ;;
 24995                           
 24996                           	psect	text123
 24997  0183E4                     __ptext123:
 24998                           	opt callstack 0
 24999  0183E4                     _INT0_CallBack:
 25000                           	opt callstack 12
 25001                           
 25002                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25003                           
 25004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25005                           ;incstack = 0
 25006  0183E4  5016               	movf	_INT0_InterruptHandler^0,w,c
 25007  0183E6  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25008  0183E8  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25009  0183EA  B4D8               	btfsc	status,2,c
 25010  0183EC  0012               	return	
 25011                           
 25012                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25013  0183EE  D801               	call	u391_48
 25014  0183F0  0012               	return	
 25015  0183F2                     u391_48:
 25016  0183F2  0005               	push	
 25017  0183F4  6EFA               	movwf	pclath,c
 25018  0183F6  5016               	movf	_INT0_InterruptHandler^0,w,c
 25019  0183F8  6EFD               	movwf	tosl,c
 25020  0183FA  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25021  0183FC  6EFE               	movwf	tosh,c
 25022  0183FE  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25023  018400  6EFF               	movwf	tosu,c
 25024  018402  50FA               	movf	pclath,w,c
 25025  018404  0012               	return		;indir
 25026  018406                     __end_of_INT0_CallBack:
 25027                           	opt callstack 0
 25028                           
 25029 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25030 ;; Defined at:
 25031 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25032 ;; Parameters:    Size  Location     Type
 25033 ;;		None
 25034 ;; Auto vars:     Size  Location     Type
 25035 ;;		None
 25036 ;; Return value:  Size  Location     Type
 25037 ;;                  1  [STACK] void 
 25038 ;; Registers used:
 25039 ;;		None
 25040 ;; Tracked objects:
 25041 ;;		On entry : 0/39
 25042 ;;		On exit  : 0/0
 25043 ;;		Unchanged: 0/0
 25044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25049 ;;Total ram usage:        0 bytes
 25050 ;; Hardware stack levels used:    1
 25051 ;; This function calls:
 25052 ;;		Nothing
 25053 ;; This function is called by:
 25054 ;;		_EXT_INT_Initialize
 25055 ;;		_INT0_CallBack
 25056 ;; This function uses a reentrant model
 25057 ;;
 25058                           
 25059                           	psect	text124
 25060  01868C                     __ptext124:
 25061                           	opt callstack 0
 25062  01868C                     _INT0_DefaultInterruptHandler:
 25063                           	opt callstack 12
 25064                           
 25065                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25066                           
 25067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25068                           ;incstack = 0
 25069  01868C  0012               	return		;funcret
 25070  01868E                     __end_of_INT0_DefaultInterruptHandler:
 25071                           	opt callstack 0
 25072                           
 25073 ;; *************** function _Default_ISR *****************
 25074 ;; Defined at:
 25075 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25076 ;; Parameters:    Size  Location     Type
 25077 ;;		None
 25078 ;; Auto vars:     Size  Location     Type
 25079 ;;		None
 25080 ;; Return value:  Size  Location     Type
 25081 ;;                  1    wreg      void 
 25082 ;; Registers used:
 25083 ;;		None
 25084 ;; Tracked objects:
 25085 ;;		On entry : 0/0
 25086 ;;		On exit  : 0/0
 25087 ;;		Unchanged: 0/0
 25088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25093 ;;Total ram usage:        0 bytes
 25094 ;; Hardware stack levels used:    1
 25095 ;; This function calls:
 25096 ;;		Nothing
 25097 ;; This function is called by:
 25098 ;;		Interrupt level 2
 25099 ;; This function uses a non-reentrant model
 25100 ;;
 25101                           
 25102                           	psect	text125
 25103  018684                     __ptext125:
 25104                           	opt callstack 0
 25105  018684                     _Default_ISR:
 25106                           	opt callstack 14
 25107                           
 25108                           ;incstack = 0
 25109  018684  EE14  F000         	lfsr	1,___inthi_sp
 25110  018688  0011               	retfie		f
 25111  01868A                     __end_of_Default_ISR:
 25112                           	opt callstack 0
 25113                           
 25114 ;; *************** function _ADCC_ISR *****************
 25115 ;; Defined at:
 25116 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25117 ;; Parameters:    Size  Location     Type
 25118 ;;		None
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;		None
 25121 ;; Return value:  Size  Location     Type
 25122 ;;                  1    wreg      void 
 25123 ;; Registers used:
 25124 ;;		wreg, status,2, status,0, pclath, tosl
 25125 ;; Tracked objects:
 25126 ;;		On entry : 0/0
 25127 ;;		On exit  : 0/0
 25128 ;;		Unchanged: 0/0
 25129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25134 ;;Total ram usage:        0 bytes
 25135 ;; Hardware stack levels used:    1
 25136 ;; Hardware stack levels required when called:    1
 25137 ;; This function calls:
 25138 ;;		Absolute function
 25139 ;;		_ADCC_DefaultInterruptHandler
 25140 ;;		_adc_int_handler
 25141 ;; This function is called by:
 25142 ;;		Interrupt level 2
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146                           	psect	text126
 25147  018034                     __ptext126:
 25148                           	opt callstack 0
 25149  018034                     _ADCC_ISR:
 25150                           	opt callstack 13
 25151                           
 25152                           ;incstack = 0
 25153  018034  EE14  F000         	lfsr	1,___inthi_sp
 25154                           
 25155                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25156  018038  0139               	movlb	57	; () banked
 25157  01803A  95A1               	bcf	161,2,b	;volatile
 25158                           
 25159                           ; BSR set to: 57
 25160                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25161  01803C  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25162  01803E  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25163  018040  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25164  018042  B4D8               	btfsc	status,2,c
 25165  018044  0011               	retfie		f
 25166                           
 25167                           ; BSR set to: 57
 25168                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25169  018046  D801               	call	i2u420_48
 25170  018048  0011               	retfie		f
 25171  01804A                     i2u420_48:
 25172  01804A  0005               	push	
 25173  01804C  6EFA               	movwf	pclath,c
 25174  01804E  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25175  018050  6EFD               	movwf	tosl,c
 25176  018052  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25177  018054  6EFE               	movwf	tosh,c
 25178  018056  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25179  018058  6EFF               	movwf	tosu,c
 25180  01805A  50FA               	movf	pclath,w,c
 25181  01805C  0012               	return		;indir
 25182  01805E                     __end_of_ADCC_ISR:
 25183                           	opt callstack 0
 25184                           
 25185 ;; *************** function _adc_int_t_handler *****************
 25186 ;; Defined at:
 25187 ;;		line 128 in file "daq.c"
 25188 ;; Parameters:    Size  Location     Type
 25189 ;;		None
 25190 ;; Auto vars:     Size  Location     Type
 25191 ;;		None
 25192 ;; Return value:  Size  Location     Type
 25193 ;;                  1  [STACK] void 
 25194 ;; Registers used:
 25195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25196 ;; Tracked objects:
 25197 ;;		On entry : 3F/39
 25198 ;;		On exit  : 1/0
 25199 ;;		Unchanged: 0/0
 25200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25205 ;;Total ram usage:        0 bytes
 25206 ;; Hardware stack levels used:    1
 25207 ;; Hardware stack levels required when called:    1
 25208 ;; This function calls:
 25209 ;;		_ADCC_DischargeSampleCapacitor
 25210 ;;		_ADCC_StartConversion
 25211 ;; This function is called by:
 25212 ;;		_start_adc_scan
 25213 ;;		_ADCC_ThresholdISR
 25214 ;; This function uses a reentrant model
 25215 ;;
 25216                           
 25217                           	psect	text127
 25218  017498                     __ptext127:
 25219                           	opt callstack 0
 25220  017498                     _adc_int_t_handler:
 25221                           	opt callstack 12
 25222                           
 25223                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25224                           
 25225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25226                           ;incstack = 0
 25227  017498  013E               	movlb	62	; () banked
 25228  01749A  51E6               	movf	230,w,b	;volatile
 25229  01749C  006F FB9C  F032    	movff	16103,btemp	;volatile
 25230  0174A2  6A33               	clrf	(btemp+1)^0,c
 25231  0174A4  0060  F0C8  F033   	movff	btemp,btemp+1
 25232  0174AA  6A32               	clrf	btemp^0,c
 25233  0174AC  2632               	addwf	btemp^0,f,c
 25234  0174AE  0E00               	movlw	0
 25235  0174B0  2233               	addwfc	(btemp+1)^0,f,c
 25236  0174B2  0100               	movlb	0	; () banked
 25237  0174B4  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25238  0174B6  0D02               	mullw	2
 25239  0174B8  50F3               	movf	243,w,c
 25240  0174BA  0FC7               	addlw	low _R
 25241  0174BC  6ED9               	movwf	fsr2l,c
 25242  0174BE  6ADA               	clrf	fsr2h,c
 25243  0174C0  0060  F0CB  FFDE   	movff	btemp,postinc2
 25244  0174C6  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25245  0174CC                     l12082:
 25246                           
 25247                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 25248  0174CC  0100               	movlb	0	; () banked
 25249  0174CE  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25250  0174D0  0E0D               	movlw	13
 25251  0174D2  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25252  0174D4  D003               	goto	l12088
 25253                           
 25254                           ; BSR set to: 0
 25255                           ;daq.c: 136:    R.done = 1;
 25256  0174D6  0E01               	movlw	1
 25257  0174D8  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25258  0174DA  0012               	return	
 25259  0174DC                     l12088:
 25260                           
 25261                           ; BSR set to: 0
 25262                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25263  0174DC  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25264  0174E2  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25265  0174E6  006F FF78  F03A    	movff	postinc2,btemp+8
 25266  0174EC  006F FF74  F03B    	movff	postdec2,btemp+9
 25267  0174F2  2A3D               	incf	(btemp+11)^0,f,c
 25268  0174F4  D003               	goto	u1267_44
 25269  0174F6                     u1267_45:
 25270  0174F6  90D8               	bcf	status,0,c
 25271  0174F8  323B               	rrcf	(btemp+9)^0,f,c
 25272  0174FA  323A               	rrcf	(btemp+8)^0,f,c
 25273  0174FC                     u1267_44:
 25274  0174FC  2E3D               	decfsz	(btemp+11)^0,f,c
 25275  0174FE  D7FB               	goto	u1267_45
 25276  017500  A03A               	btfss	(btemp+8)^0,0,c
 25277  017502  D7E4               	goto	l12082
 25278                           
 25279                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 25280  017504  EC25  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25281                           
 25282                           ; BSR set to: 62
 25283                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 25284  017508  0100               	movlb	0	; () banked
 25285  01750A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25286  01750C  0B0F               	andlw	15
 25287  01750E  6EE6               	movwf	postinc1,c
 25288  017510  ECD8  F0C2         	call	_ADCC_StartConversion	;wreg free
 25289                           
 25290                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25291  017514  0012               	return		;funcret
 25292  017516                     __end_of_adc_int_t_handler:
 25293                           	opt callstack 0
 25294                           
 25295 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25296 ;; Defined at:
 25297 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25298 ;; Parameters:    Size  Location     Type
 25299 ;;		None
 25300 ;; Auto vars:     Size  Location     Type
 25301 ;;		None
 25302 ;; Return value:  Size  Location     Type
 25303 ;;                  1  [STACK] void 
 25304 ;; Registers used:
 25305 ;;		None
 25306 ;; Tracked objects:
 25307 ;;		On entry : 3F/39
 25308 ;;		On exit  : 0/0
 25309 ;;		Unchanged: 0/0
 25310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25315 ;;Total ram usage:        0 bytes
 25316 ;; Hardware stack levels used:    1
 25317 ;; This function calls:
 25318 ;;		Nothing
 25319 ;; This function is called by:
 25320 ;;		_ADCC_Initialize
 25321 ;;		_ADCC_ISR
 25322 ;;		_ADCC_ThresholdISR
 25323 ;; This function uses a reentrant model
 25324 ;;
 25325                           
 25326                           	psect	text128
 25327  01868E                     __ptext128:
 25328                           	opt callstack 0
 25329  01868E                     _ADCC_DefaultInterruptHandler:
 25330                           	opt callstack 13
 25331                           
 25332                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25333                           
 25334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25335                           ;incstack = 0
 25336  01868E  0012               	return		;funcret
 25337  018690                     __end_of_ADCC_DefaultInterruptHandler:
 25338                           	opt callstack 0
 25339                           
 25340 ;; *************** function _adc_int_handler *****************
 25341 ;; Defined at:
 25342 ;;		line 118 in file "daq.c"
 25343 ;; Parameters:    Size  Location     Type
 25344 ;;		None
 25345 ;; Auto vars:     Size  Location     Type
 25346 ;;		None
 25347 ;; Return value:  Size  Location     Type
 25348 ;;                  1  [STACK] void 
 25349 ;; Registers used:
 25350 ;;		None
 25351 ;; Tracked objects:
 25352 ;;		On entry : 3F/39
 25353 ;;		On exit  : 0/0
 25354 ;;		Unchanged: 0/0
 25355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25360 ;;Total ram usage:        0 bytes
 25361 ;; Hardware stack levels used:    1
 25362 ;; This function calls:
 25363 ;;		Nothing
 25364 ;; This function is called by:
 25365 ;;		_start_adc_scan
 25366 ;;		_ADCC_ISR
 25367 ;; This function uses a reentrant model
 25368 ;;
 25369                           
 25370                           	psect	text129
 25371  018690                     __ptext129:
 25372                           	opt callstack 0
 25373  018690                     _adc_int_handler:
 25374                           	opt callstack 13
 25375                           
 25376                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25377                           
 25378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25379                           ;incstack = 0
 25380  018690  0012               	return		;funcret
 25381  018692                     __end_of_adc_int_handler:
 25382                           	opt callstack 0
 25383                           
 25384 ;; *************** function _ADCC_ThresholdISR *****************
 25385 ;; Defined at:
 25386 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25387 ;; Parameters:    Size  Location     Type
 25388 ;;		None
 25389 ;; Auto vars:     Size  Location     Type
 25390 ;;		None
 25391 ;; Return value:  Size  Location     Type
 25392 ;;                  1    wreg      void 
 25393 ;; Registers used:
 25394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25395 ;; Tracked objects:
 25396 ;;		On entry : 0/0
 25397 ;;		On exit  : 0/0
 25398 ;;		Unchanged: 0/0
 25399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25402 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25403 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25404 ;;Total ram usage:        5 bytes
 25405 ;; Hardware stack levels used:    1
 25406 ;; Hardware stack levels required when called:    2
 25407 ;; This function calls:
 25408 ;;		Absolute function
 25409 ;;		_ADCC_DefaultInterruptHandler
 25410 ;;		_adc_int_t_handler
 25411 ;; This function is called by:
 25412 ;;		Interrupt level 2
 25413 ;; This function uses a non-reentrant model
 25414 ;;
 25415                           
 25416                           	psect	text130
 25417  017664                     __ptext130:
 25418                           	opt callstack 0
 25419  017664                     _ADCC_ThresholdISR:
 25420                           	opt callstack 12
 25421                           
 25422                           ;incstack = 0
 25423  017664  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25424  01766A  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25425  017670  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25426  017676  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25427  01767C  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25428  017682  EE14  F000         	lfsr	1,___inthi_sp
 25429                           
 25430                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25431  017686  0139               	movlb	57	; () banked
 25432  017688  97A1               	bcf	161,3,b	;volatile
 25433                           
 25434                           ; BSR set to: 57
 25435                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25436  01768A  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25437  01768C  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25438  01768E  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25439  017690  B4D8               	btfsc	status,2,c
 25440  017692  D00C               	goto	i2u1270_49
 25441                           
 25442                           ; BSR set to: 57
 25443                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25444  017694  D801               	call	i2u1270_48
 25445  017696  D00A               	goto	i2u1270_49
 25446  017698                     i2u1270_48:
 25447  017698  0005               	push	
 25448  01769A  6EFA               	movwf	pclath,c
 25449  01769C  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25450  01769E  6EFD               	movwf	tosl,c
 25451  0176A0  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25452  0176A2  6EFE               	movwf	tosh,c
 25453  0176A4  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25454  0176A6  6EFF               	movwf	tosu,c
 25455  0176A8  50FA               	movf	pclath,w,c
 25456  0176AA  0012               	return		;indir
 25457  0176AC                     i2u1270_49:
 25458  0176AC  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25459  0176B2  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25460  0176B8  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25461  0176BE  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25462  0176C4  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25463  0176CA  0011               	retfie		f
 25464  0176CC                     __end_of_ADCC_ThresholdISR:
 25465                           	opt callstack 0
 25466                           
 25467 ;; *************** function _UART1_tx_vect_isr *****************
 25468 ;; Defined at:
 25469 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25470 ;; Parameters:    Size  Location     Type
 25471 ;;		None
 25472 ;; Auto vars:     Size  Location     Type
 25473 ;;		None
 25474 ;; Return value:  Size  Location     Type
 25475 ;;                  1    wreg      void 
 25476 ;; Registers used:
 25477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25478 ;; Tracked objects:
 25479 ;;		On entry : 0/0
 25480 ;;		On exit  : 0/0
 25481 ;;		Unchanged: 0/0
 25482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25487 ;;Total ram usage:        0 bytes
 25488 ;; Hardware stack levels used:    1
 25489 ;; Hardware stack levels required when called:    1
 25490 ;; This function calls:
 25491 ;;		Absolute function
 25492 ;;		_UART1_Transmit_ISR
 25493 ;; This function is called by:
 25494 ;;		Interrupt level 2
 25495 ;; This function uses a non-reentrant model
 25496 ;;
 25497                           
 25498                           	psect	text131
 25499  0182B8                     __ptext131:
 25500                           	opt callstack 0
 25501  0182B8                     _UART1_tx_vect_isr:
 25502                           	opt callstack 13
 25503                           
 25504                           ;incstack = 0
 25505  0182B8  EE14  F000         	lfsr	1,___inthi_sp
 25506                           
 25507                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25508  0182BC  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25509  0182BE  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25510  0182C0  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25511  0182C2  B4D8               	btfsc	status,2,c
 25512  0182C4  0011               	retfie		f
 25513                           
 25514                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25515  0182C6  D801               	call	i2u861_48
 25516  0182C8  0011               	retfie		f
 25517  0182CA                     i2u861_48:
 25518  0182CA  0005               	push	
 25519  0182CC  6EFA               	movwf	pclath,c
 25520  0182CE  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25521  0182D0  6EFD               	movwf	tosl,c
 25522  0182D2  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25523  0182D4  6EFE               	movwf	tosh,c
 25524  0182D6  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25525  0182D8  6EFF               	movwf	tosu,c
 25526  0182DA  50FA               	movf	pclath,w,c
 25527  0182DC  0012               	return		;indir
 25528  0182DE                     __end_of_UART1_tx_vect_isr:
 25529                           	opt callstack 0
 25530                           
 25531 ;; *************** function _UART1_Transmit_ISR *****************
 25532 ;; Defined at:
 25533 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25534 ;; Parameters:    Size  Location     Type
 25535 ;;		None
 25536 ;; Auto vars:     Size  Location     Type
 25537 ;;		None
 25538 ;; Return value:  Size  Location     Type
 25539 ;;                  1  [STACK] void 
 25540 ;; Registers used:
 25541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25542 ;; Tracked objects:
 25543 ;;		On entry : 0/0
 25544 ;;		On exit  : 3B/39
 25545 ;;		Unchanged: 0/0
 25546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25551 ;;Total ram usage:        0 bytes
 25552 ;; Hardware stack levels used:    1
 25553 ;; This function calls:
 25554 ;;		Nothing
 25555 ;; This function is called by:
 25556 ;;		_UART1_Initialize
 25557 ;;		_UART1_tx_vect_isr
 25558 ;; This function uses a reentrant model
 25559 ;;
 25560                           
 25561                           	psect	text132
 25562  017FB0                     __ptext132:
 25563                           	opt callstack 0
 25564  017FB0                     _UART1_Transmit_ISR:
 25565                           	opt callstack 13
 25566                           
 25567                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25568                           
 25569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25570                           ;incstack = 0
 25571  017FB0  0E40               	movlw	64
 25572  017FB2  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25573  017FB4  D010               	goto	l581
 25574                           
 25575                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25576  017FB6  0EAC               	movlw	low _uart1TxBuffer
 25577  017FB8  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25578  017FBA  6ED9               	movwf	fsr2l,c
 25579  017FBC  6ADA               	clrf	fsr2h,c
 25580  017FBE  0E03               	movlw	high _uart1TxBuffer
 25581  017FC0  22DA               	addwfc	fsr2h,f,c
 25582  017FC2  50DF               	movf	indf2,w,c
 25583  017FC4  013D               	movlb	61	; () banked
 25584  017FC6  6FEA               	movwf	234,b	;volatile
 25585                           
 25586                           ; BSR set to: 61
 25587  017FC8  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25588                           
 25589                           ; BSR set to: 61
 25590                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25591  017FCA  0E3F               	movlw	63
 25592  017FCC  6430               	cpfsgt	_uart1TxTail^0,c
 25593  017FCE  D001               	goto	l8798
 25594                           
 25595                           ; BSR set to: 61
 25596                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25597  017FD0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25598  017FD2                     l8798:
 25599                           
 25600                           ; BSR set to: 61
 25601                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25602  017FD2  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25603                           
 25604                           ;mcc_generated_files/uart1.c: 222:  } else {
 25605  017FD4  0012               	return	
 25606  017FD6                     l581:
 25607                           
 25608                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25609  017FD6  0139               	movlb	57	; () banked
 25610  017FD8  9993               	bcf	147,4,b	;volatile
 25611                           
 25612                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25613  017FDA  0012               	return		;funcret
 25614  017FDC                     __end_of_UART1_Transmit_ISR:
 25615                           	opt callstack 0
 25616                           
 25617 ;; *************** function _UART1_rx_vect_isr *****************
 25618 ;; Defined at:
 25619 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25620 ;; Parameters:    Size  Location     Type
 25621 ;;		None
 25622 ;; Auto vars:     Size  Location     Type
 25623 ;;		None
 25624 ;; Return value:  Size  Location     Type
 25625 ;;                  1    wreg      void 
 25626 ;; Registers used:
 25627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25628 ;; Tracked objects:
 25629 ;;		On entry : 0/0
 25630 ;;		On exit  : 0/0
 25631 ;;		Unchanged: 0/0
 25632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25637 ;;Total ram usage:        0 bytes
 25638 ;; Hardware stack levels used:    1
 25639 ;; Hardware stack levels required when called:    1
 25640 ;; This function calls:
 25641 ;;		Absolute function
 25642 ;;		_UART1_Receive_ISR
 25643 ;; This function is called by:
 25644 ;;		Interrupt level 2
 25645 ;; This function uses a non-reentrant model
 25646 ;;
 25647                           
 25648                           	psect	text133
 25649  0182E0                     __ptext133:
 25650                           	opt callstack 0
 25651  0182E0                     _UART1_rx_vect_isr:
 25652                           	opt callstack 13
 25653                           
 25654                           ;incstack = 0
 25655  0182E0  EE14  F000         	lfsr	1,___inthi_sp
 25656                           
 25657                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25658  0182E4  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25659  0182E6  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25660  0182E8  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25661  0182EA  B4D8               	btfsc	status,2,c
 25662  0182EC  0011               	retfie		f
 25663                           
 25664                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25665  0182EE  D801               	call	i2u863_48
 25666  0182F0  0011               	retfie		f
 25667  0182F2                     i2u863_48:
 25668  0182F2  0005               	push	
 25669  0182F4  6EFA               	movwf	pclath,c
 25670  0182F6  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25671  0182F8  6EFD               	movwf	tosl,c
 25672  0182FA  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25673  0182FC  6EFE               	movwf	tosh,c
 25674  0182FE  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25675  018300  6EFF               	movwf	tosu,c
 25676  018302  50FA               	movf	pclath,w,c
 25677  018304  0012               	return		;indir
 25678  018306                     __end_of_UART1_rx_vect_isr:
 25679                           	opt callstack 0
 25680                           
 25681 ;; *************** function _UART1_Receive_ISR *****************
 25682 ;; Defined at:
 25683 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25684 ;; Parameters:    Size  Location     Type
 25685 ;;		None
 25686 ;; Auto vars:     Size  Location     Type
 25687 ;;		None
 25688 ;; Return value:  Size  Location     Type
 25689 ;;                  1  [STACK] void 
 25690 ;; Registers used:
 25691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25692 ;; Tracked objects:
 25693 ;;		On entry : 0/0
 25694 ;;		On exit  : 0/0
 25695 ;;		Unchanged: 0/0
 25696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;Total ram usage:        0 bytes
 25702 ;; Hardware stack levels used:    1
 25703 ;; This function calls:
 25704 ;;		Nothing
 25705 ;; This function is called by:
 25706 ;;		_UART1_Initialize
 25707 ;;		_UART1_rx_vect_isr
 25708 ;; This function uses a reentrant model
 25709 ;;
 25710                           
 25711                           	psect	text134
 25712  018480                     __ptext134:
 25713                           	opt callstack 0
 25714  018480                     _UART1_Receive_ISR:
 25715                           	opt callstack 13
 25716                           
 25717                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25718                           
 25719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25720                           ;incstack = 0
 25721  018480  0E00               	movlw	low _uart1RxBuffer
 25722  018482  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25723  018484  6ED9               	movwf	fsr2l,c
 25724  018486  6ADA               	clrf	fsr2h,c
 25725  018488  0E06               	movlw	high _uart1RxBuffer
 25726  01848A  22DA               	addwfc	fsr2h,f,c
 25727  01848C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25728  018492  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25729                           
 25730                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25731  018494  282E               	incf	_uart1RxHead^0,w,c
 25732  018496  B4D8               	btfsc	status,2,c
 25733                           
 25734                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25735  018498  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25736                           
 25737                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25738  01849A  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25739                           
 25740                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25741  01849C  0012               	return		;funcret
 25742  01849E                     __end_of_UART1_Receive_ISR:
 25743                           	opt callstack 0
 25744                           
 25745 ;; *************** function _UART2_tx_vect_isr *****************
 25746 ;; Defined at:
 25747 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25748 ;; Parameters:    Size  Location     Type
 25749 ;;		None
 25750 ;; Auto vars:     Size  Location     Type
 25751 ;;		None
 25752 ;; Return value:  Size  Location     Type
 25753 ;;                  1    wreg      void 
 25754 ;; Registers used:
 25755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25756 ;; Tracked objects:
 25757 ;;		On entry : 0/0
 25758 ;;		On exit  : 0/0
 25759 ;;		Unchanged: 0/0
 25760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25765 ;;Total ram usage:        0 bytes
 25766 ;; Hardware stack levels used:    1
 25767 ;; Hardware stack levels required when called:    1
 25768 ;; This function calls:
 25769 ;;		Absolute function
 25770 ;;		_UART2_Transmit_ISR
 25771 ;; This function is called by:
 25772 ;;		Interrupt level 2
 25773 ;; This function uses a non-reentrant model
 25774 ;;
 25775                           
 25776                           	psect	text135
 25777  018308                     __ptext135:
 25778                           	opt callstack 0
 25779  018308                     _UART2_tx_vect_isr:
 25780                           	opt callstack 13
 25781                           
 25782                           ;incstack = 0
 25783  018308  EE14  F000         	lfsr	1,___inthi_sp
 25784                           
 25785                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25786  01830C  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25787  01830E  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25788  018310  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25789  018312  B4D8               	btfsc	status,2,c
 25790  018314  0011               	retfie		f
 25791                           
 25792                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25793  018316  D801               	call	i2u865_48
 25794  018318  0011               	retfie		f
 25795  01831A                     i2u865_48:
 25796  01831A  0005               	push	
 25797  01831C  6EFA               	movwf	pclath,c
 25798  01831E  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25799  018320  6EFD               	movwf	tosl,c
 25800  018322  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25801  018324  6EFE               	movwf	tosh,c
 25802  018326  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25803  018328  6EFF               	movwf	tosu,c
 25804  01832A  50FA               	movf	pclath,w,c
 25805  01832C  0012               	return		;indir
 25806  01832E                     __end_of_UART2_tx_vect_isr:
 25807                           	opt callstack 0
 25808                           
 25809 ;; *************** function _UART2_Transmit_ISR *****************
 25810 ;; Defined at:
 25811 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25812 ;; Parameters:    Size  Location     Type
 25813 ;;		None
 25814 ;; Auto vars:     Size  Location     Type
 25815 ;;		None
 25816 ;; Return value:  Size  Location     Type
 25817 ;;                  1  [STACK] void 
 25818 ;; Registers used:
 25819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25820 ;; Tracked objects:
 25821 ;;		On entry : 0/0
 25822 ;;		On exit  : 3B/39
 25823 ;;		Unchanged: 0/0
 25824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;Total ram usage:        0 bytes
 25830 ;; Hardware stack levels used:    1
 25831 ;; This function calls:
 25832 ;;		Nothing
 25833 ;; This function is called by:
 25834 ;;		_UART2_Initialize
 25835 ;;		_UART2_tx_vect_isr
 25836 ;; This function uses a reentrant model
 25837 ;;
 25838                           
 25839                           	psect	text136
 25840  017FDC                     __ptext136:
 25841                           	opt callstack 0
 25842  017FDC                     _UART2_Transmit_ISR:
 25843                           	opt callstack 13
 25844                           
 25845                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25846                           
 25847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25848                           ;incstack = 0
 25849  017FDC  0E40               	movlw	64
 25850  017FDE  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25851  017FE0  D010               	goto	l701
 25852                           
 25853                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25854  017FE2  0E6C               	movlw	low _uart2TxBuffer
 25855  017FE4  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25856  017FE6  6ED9               	movwf	fsr2l,c
 25857  017FE8  6ADA               	clrf	fsr2h,c
 25858  017FEA  0E03               	movlw	high _uart2TxBuffer
 25859  017FEC  22DA               	addwfc	fsr2h,f,c
 25860  017FEE  50DF               	movf	indf2,w,c
 25861  017FF0  013D               	movlb	61	; () banked
 25862  017FF2  6FD2               	movwf	210,b	;volatile
 25863                           
 25864                           ; BSR set to: 61
 25865  017FF4  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25866                           
 25867                           ; BSR set to: 61
 25868                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25869  017FF6  0E3F               	movlw	63
 25870  017FF8  642A               	cpfsgt	_uart2TxTail^0,c
 25871  017FFA  D001               	goto	l8820
 25872                           
 25873                           ; BSR set to: 61
 25874                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25875  017FFC  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25876  017FFE                     l8820:
 25877                           
 25878                           ; BSR set to: 61
 25879                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25880  017FFE  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25881                           
 25882                           ;mcc_generated_files/uart2.c: 224:     }
 25883  018000  0012               	return	
 25884  018002                     l701:
 25885                           
 25886                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25887  018002  0139               	movlb	57	; () banked
 25888  018004  9796               	bcf	150,3,b	;volatile
 25889                           
 25890                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25891  018006  0012               	return		;funcret
 25892  018008                     __end_of_UART2_Transmit_ISR:
 25893                           	opt callstack 0
 25894                           
 25895 ;; *************** function _UART2_rx_vect_isr *****************
 25896 ;; Defined at:
 25897 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25898 ;; Parameters:    Size  Location     Type
 25899 ;;		None
 25900 ;; Auto vars:     Size  Location     Type
 25901 ;;		None
 25902 ;; Return value:  Size  Location     Type
 25903 ;;                  1    wreg      void 
 25904 ;; Registers used:
 25905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25906 ;; Tracked objects:
 25907 ;;		On entry : 0/0
 25908 ;;		On exit  : 0/0
 25909 ;;		Unchanged: 0/0
 25910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25915 ;;Total ram usage:        0 bytes
 25916 ;; Hardware stack levels used:    1
 25917 ;; Hardware stack levels required when called:    1
 25918 ;; This function calls:
 25919 ;;		Absolute function
 25920 ;;		_UART2_Receive_ISR
 25921 ;; This function is called by:
 25922 ;;		Interrupt level 2
 25923 ;; This function uses a non-reentrant model
 25924 ;;
 25925                           
 25926                           	psect	text137
 25927  018330                     __ptext137:
 25928                           	opt callstack 0
 25929  018330                     _UART2_rx_vect_isr:
 25930                           	opt callstack 13
 25931                           
 25932                           ;incstack = 0
 25933  018330  EE14  F000         	lfsr	1,___inthi_sp
 25934                           
 25935                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25936  018334  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25937  018336  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25938  018338  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25939  01833A  B4D8               	btfsc	status,2,c
 25940  01833C  0011               	retfie		f
 25941                           
 25942                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25943  01833E  D801               	call	i2u867_48
 25944  018340  0011               	retfie		f
 25945  018342                     i2u867_48:
 25946  018342  0005               	push	
 25947  018344  6EFA               	movwf	pclath,c
 25948  018346  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25949  018348  6EFD               	movwf	tosl,c
 25950  01834A  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25951  01834C  6EFE               	movwf	tosh,c
 25952  01834E  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25953  018350  6EFF               	movwf	tosu,c
 25954  018352  50FA               	movf	pclath,w,c
 25955  018354  0012               	return		;indir
 25956  018356                     __end_of_UART2_rx_vect_isr:
 25957                           	opt callstack 0
 25958                           
 25959 ;; *************** function _UART2_Receive_ISR *****************
 25960 ;; Defined at:
 25961 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25962 ;; Parameters:    Size  Location     Type
 25963 ;;		None
 25964 ;; Auto vars:     Size  Location     Type
 25965 ;;		None
 25966 ;; Return value:  Size  Location     Type
 25967 ;;                  1  [STACK] void 
 25968 ;; Registers used:
 25969 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25970 ;; Tracked objects:
 25971 ;;		On entry : 0/0
 25972 ;;		On exit  : 0/0
 25973 ;;		Unchanged: 0/0
 25974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25979 ;;Total ram usage:        0 bytes
 25980 ;; Hardware stack levels used:    1
 25981 ;; This function calls:
 25982 ;;		Nothing
 25983 ;; This function is called by:
 25984 ;;		_UART2_Initialize
 25985 ;;		_UART2_rx_vect_isr
 25986 ;; This function uses a reentrant model
 25987 ;;
 25988                           
 25989                           	psect	text138
 25990  01849E                     __ptext138:
 25991                           	opt callstack 0
 25992  01849E                     _UART2_Receive_ISR:
 25993                           	opt callstack 13
 25994                           
 25995                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25996                           
 25997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25998                           ;incstack = 0
 25999  01849E  0E00               	movlw	low _uart2RxBuffer
 26000  0184A0  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26001  0184A2  6ED9               	movwf	fsr2l,c
 26002  0184A4  6ADA               	clrf	fsr2h,c
 26003  0184A6  0E07               	movlw	high _uart2RxBuffer
 26004  0184A8  22DA               	addwfc	fsr2h,f,c
 26005  0184AA  006F F743 FFDF     	movff	15824,indf2	;volatile
 26006  0184B0  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26007                           
 26008                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26009  0184B2  2828               	incf	_uart2RxHead^0,w,c
 26010  0184B4  B4D8               	btfsc	status,2,c
 26011                           
 26012                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26013  0184B6  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26014                           
 26015                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26016  0184B8  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26017                           
 26018                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26019  0184BA  0012               	return		;funcret
 26020  0184BC                     __end_of_UART2_Receive_ISR:
 26021                           	opt callstack 0
 26022                           
 26023 ;; *************** function _TMR6_ISR *****************
 26024 ;; Defined at:
 26025 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26026 ;; Parameters:    Size  Location     Type
 26027 ;;		None
 26028 ;; Auto vars:     Size  Location     Type
 26029 ;;		None
 26030 ;; Return value:  Size  Location     Type
 26031 ;;                  1    wreg      void 
 26032 ;; Registers used:
 26033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26034 ;; Tracked objects:
 26035 ;;		On entry : 0/0
 26036 ;;		On exit  : 0/0
 26037 ;;		Unchanged: 0/0
 26038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26043 ;;Total ram usage:        1 bytes
 26044 ;; Hardware stack levels used:    1
 26045 ;; Hardware stack levels required when called:    2
 26046 ;; This function calls:
 26047 ;;		_TMR6_CallBack
 26048 ;; This function is called by:
 26049 ;;		Interrupt level 2
 26050 ;; This function uses a non-reentrant model
 26051 ;;
 26052                           
 26053                           	psect	text139
 26054  018510                     __ptext139:
 26055                           	opt callstack 0
 26056  018510                     _TMR6_ISR:
 26057                           	opt callstack 12
 26058                           
 26059                           ;incstack = 0
 26060  018510  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26061  018516  EE14  F000         	lfsr	1,___inthi_sp
 26062                           
 26063                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26064  01851A  0139               	movlb	57	; () banked
 26065  01851C  91A9               	bcf	169,0,b	;volatile
 26066                           
 26067                           ; BSR set to: 57
 26068                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26069  01851E  ECCF  F0C1         	call	_TMR6_CallBack	;wreg free
 26070  018522  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26071  018528  0011               	retfie		f
 26072  01852A                     __end_of_TMR6_ISR:
 26073                           	opt callstack 0
 26074                           
 26075 ;; *************** function _TMR6_CallBack *****************
 26076 ;; Defined at:
 26077 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26078 ;; Parameters:    Size  Location     Type
 26079 ;;		None
 26080 ;; Auto vars:     Size  Location     Type
 26081 ;;		None
 26082 ;; Return value:  Size  Location     Type
 26083 ;;                  1  [STACK] void 
 26084 ;; Registers used:
 26085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26086 ;; Tracked objects:
 26087 ;;		On entry : 3F/39
 26088 ;;		On exit  : 0/0
 26089 ;;		Unchanged: 0/0
 26090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26095 ;;Total ram usage:        0 bytes
 26096 ;; Hardware stack levels used:    1
 26097 ;; Hardware stack levels required when called:    1
 26098 ;; This function calls:
 26099 ;;		Absolute function
 26100 ;;		_TMR6_DefaultInterruptHandler
 26101 ;; This function is called by:
 26102 ;;		_TMR6_ISR
 26103 ;; This function uses a reentrant model
 26104 ;;
 26105                           
 26106                           	psect	text140
 26107  01839E                     __ptext140:
 26108                           	opt callstack 0
 26109  01839E                     _TMR6_CallBack:
 26110                           	opt callstack 12
 26111                           
 26112                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26113                           
 26114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26115                           ;incstack = 0
 26116  01839E  0100               	movlb	0	; () banked
 26117  0183A0  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26118  0183A2  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26119  0183A4  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26120  0183A6  B4D8               	btfsc	status,2,c
 26121  0183A8  0012               	return	
 26122                           
 26123                           ; BSR set to: 0
 26124                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26125  0183AA  D801               	call	u840_48
 26126  0183AC  0012               	return	
 26127  0183AE                     u840_48:
 26128  0183AE  0005               	push	
 26129  0183B0  6EFA               	movwf	pclath,c
 26130  0183B2  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26131  0183B4  6EFD               	movwf	tosl,c
 26132  0183B6  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26133  0183B8  6EFE               	movwf	tosh,c
 26134  0183BA  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26135  0183BC  6EFF               	movwf	tosu,c
 26136  0183BE  50FA               	movf	pclath,w,c
 26137  0183C0  0012               	return		;indir
 26138  0183C2                     __end_of_TMR6_CallBack:
 26139                           	opt callstack 0
 26140                           
 26141 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26142 ;; Defined at:
 26143 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26144 ;; Parameters:    Size  Location     Type
 26145 ;;		None
 26146 ;; Auto vars:     Size  Location     Type
 26147 ;;  i               1  [STACK] unsigned char 
 26148 ;; Return value:  Size  Location     Type
 26149 ;;                  1  [STACK] void 
 26150 ;; Registers used:
 26151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26152 ;; Tracked objects:
 26153 ;;		On entry : 3F/0
 26154 ;;		On exit  : 0/0
 26155 ;;		Unchanged: 0/0
 26156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26161 ;;Total ram usage:        0 bytes
 26162 ;; Hardware stack levels used:    1
 26163 ;; This function calls:
 26164 ;;		Nothing
 26165 ;; This function is called by:
 26166 ;;		_TMR6_Initialize
 26167 ;;		_TMR6_CallBack
 26168 ;; This function uses a reentrant model
 26169 ;;
 26170                           
 26171                           	psect	text141
 26172  017C2E                     __ptext141:
 26173                           	opt callstack 0
 26174  017C2E                     _TMR6_DefaultInterruptHandler:
 26175                           	opt callstack 0
 26176                           
 26177                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26178  017C2E  52E6               	movf	postinc1,f,c
 26179                           
 26180                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26181                           ;stkvar	_i @ sp[(-1)+0]
 26182                           
 26183                           ;incstack = 0
 26184  017C30  0EFF               	movlw	-1
 26185  017C32  6AE3               	clrf	plusw1,c
 26186  017C34                     l8498:
 26187                           
 26188                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26189                           ;stkvar	_i @ sp[(-1)+0]
 26190  017C34  0EFF               	movlw	-1
 26191  017C36  50E3               	movf	plusw1,w,c
 26192  017C38  0D02               	mullw	2
 26193  017C3A  50F3               	movf	243,w,c
 26194  017C3C  0F89               	addlw	low _tickCount
 26195  017C3E  6ED9               	movwf	fsr2l,c
 26196  017C40  6ADA               	clrf	fsr2h,c
 26197  017C42  50DE               	movf	postinc2,w,c
 26198  017C44  10DE               	iorwf	postinc2,w,c
 26199  017C46  B4D8               	btfsc	status,2,c
 26200  017C48  D00A               	goto	l8502
 26201                           
 26202                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26203                           ;stkvar	_i @ sp[(-1)+0]
 26204  017C4A  0EFF               	movlw	-1
 26205  017C4C  50E3               	movf	plusw1,w,c
 26206  017C4E  0D02               	mullw	2
 26207  017C50  50F3               	movf	243,w,c
 26208  017C52  0F89               	addlw	low _tickCount
 26209  017C54  6ED9               	movwf	fsr2l,c
 26210  017C56  6ADA               	clrf	fsr2h,c
 26211  017C58  06DE               	decf	postinc2,f,c
 26212  017C5A  0E00               	movlw	0
 26213  017C5C  5ADD               	subwfb	postdec2,f,c
 26214  017C5E                     l8502:
 26215                           
 26216                           ;mcc_generated_files/tmr6.c: 207:  }
 26217                           ;stkvar	_i @ sp[(-1)+0]
 26218  017C5E  0EFF               	movlw	-1
 26219  017C60  2AE3               	incf	plusw1,f,c
 26220                           
 26221                           ;stkvar	_i @ sp[(-1)+0]
 26222  017C62  0EFF               	movlw	-1
 26223  017C64  006F FF8C  F032    	movff	plusw1,btemp
 26224  017C6A  0E0B               	movlw	11
 26225  017C6C  6432               	cpfsgt	btemp^0,c
 26226  017C6E  D7E2               	goto	l8498
 26227                           
 26228                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26229  017C70  52E5               	movf	postdec1,f,c
 26230  017C72  0012               	return		;funcret
 26231  017C74                     __end_of_TMR6_DefaultInterruptHandler:
 26232                           	opt callstack 0
 26233                           
 26234 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26235 ;; Defined at:
 26236 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26237 ;; Parameters:    Size  Location     Type
 26238 ;;		None
 26239 ;; Auto vars:     Size  Location     Type
 26240 ;;		None
 26241 ;; Return value:  Size  Location     Type
 26242 ;;                  1    wreg      void 
 26243 ;; Registers used:
 26244 ;;		None
 26245 ;; Tracked objects:
 26246 ;;		On entry : 0/0
 26247 ;;		On exit  : 3F/0
 26248 ;;		Unchanged: 0/0
 26249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;Total ram usage:        0 bytes
 26255 ;; Hardware stack levels used:    1
 26256 ;; This function calls:
 26257 ;;		Nothing
 26258 ;; This function is called by:
 26259 ;;		Interrupt level 2
 26260 ;; This function uses a non-reentrant model
 26261 ;;
 26262                           
 26263                           	psect	text142
 26264  018610                     __ptext142:
 26265                           	opt callstack 0
 26266  018610                     _DMA1_DMASCNT_ISR:
 26267                           	opt callstack 14
 26268                           
 26269                           ;incstack = 0
 26270  018610  EE14  F000         	lfsr	1,___inthi_sp
 26271                           
 26272                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26273  018614  0139               	movlb	57	; () banked
 26274  018616  91A2               	bcf	162,0,b	;volatile
 26275                           
 26276                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26277  018618  0100               	movlb	0	; () banked
 26278  01861A  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26279                           
 26280                           ; BSR set to: 0
 26281  01861C  0011               	retfie		f
 26282  01861E                     __end_of_DMA1_DMASCNT_ISR:
 26283                           	opt callstack 0
 26284                           
 26285 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26286 ;; Defined at:
 26287 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26288 ;; Parameters:    Size  Location     Type
 26289 ;;		None
 26290 ;; Auto vars:     Size  Location     Type
 26291 ;;		None
 26292 ;; Return value:  Size  Location     Type
 26293 ;;                  1    wreg      void 
 26294 ;; Registers used:
 26295 ;;		None
 26296 ;; Tracked objects:
 26297 ;;		On entry : 0/0
 26298 ;;		On exit  : 3F/39
 26299 ;;		Unchanged: 0/0
 26300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;Total ram usage:        0 bytes
 26306 ;; Hardware stack levels used:    1
 26307 ;; This function calls:
 26308 ;;		Nothing
 26309 ;; This function is called by:
 26310 ;;		Interrupt level 2
 26311 ;; This function uses a non-reentrant model
 26312 ;;
 26313                           
 26314                           	psect	text143
 26315  018628                     __ptext143:
 26316                           	opt callstack 0
 26317  018628                     _DMA1_DMADCNT_ISR:
 26318                           	opt callstack 14
 26319                           
 26320                           ; BSR set to: 0
 26321                           ;incstack = 0
 26322  018628  EE14  F000         	lfsr	1,___inthi_sp
 26323                           
 26324                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26325  01862C  0139               	movlb	57	; () banked
 26326  01862E  93A2               	bcf	162,1,b	;volatile
 26327                           
 26328                           ; BSR set to: 57
 26329  018630  0011               	retfie		f
 26330  018632                     __end_of_DMA1_DMADCNT_ISR:
 26331                           	opt callstack 0
 26332                           
 26333 ;; *************** function _DMA1_DMAA_ISR *****************
 26334 ;; Defined at:
 26335 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26336 ;; Parameters:    Size  Location     Type
 26337 ;;		None
 26338 ;; Auto vars:     Size  Location     Type
 26339 ;;		None
 26340 ;; Return value:  Size  Location     Type
 26341 ;;                  1    wreg      void 
 26342 ;; Registers used:
 26343 ;;		None
 26344 ;; Tracked objects:
 26345 ;;		On entry : 0/0
 26346 ;;		On exit  : 3F/39
 26347 ;;		Unchanged: 0/0
 26348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26353 ;;Total ram usage:        0 bytes
 26354 ;; Hardware stack levels used:    1
 26355 ;; This function calls:
 26356 ;;		Nothing
 26357 ;; This function is called by:
 26358 ;;		Interrupt level 2
 26359 ;; This function uses a non-reentrant model
 26360 ;;
 26361                           
 26362                           	psect	text144
 26363  018634                     __ptext144:
 26364                           	opt callstack 0
 26365  018634                     _DMA1_DMAA_ISR:
 26366                           	opt callstack 14
 26367                           
 26368                           ; BSR set to: 57
 26369                           ;incstack = 0
 26370  018634  EE14  F000         	lfsr	1,___inthi_sp
 26371                           
 26372                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26373  018638  0139               	movlb	57	; () banked
 26374  01863A  97A2               	bcf	162,3,b	;volatile
 26375                           
 26376                           ; BSR set to: 57
 26377  01863C  0011               	retfie		f
 26378  01863E                     __end_of_DMA1_DMAA_ISR:
 26379                           	opt callstack 0
 26380                           
 26381 ;; *************** function _DMA1_DMAOR_ISR *****************
 26382 ;; Defined at:
 26383 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26384 ;; Parameters:    Size  Location     Type
 26385 ;;		None
 26386 ;; Auto vars:     Size  Location     Type
 26387 ;;		None
 26388 ;; Return value:  Size  Location     Type
 26389 ;;                  1    wreg      void 
 26390 ;; Registers used:
 26391 ;;		None
 26392 ;; Tracked objects:
 26393 ;;		On entry : 0/0
 26394 ;;		On exit  : 3F/39
 26395 ;;		Unchanged: 0/0
 26396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26401 ;;Total ram usage:        0 bytes
 26402 ;; Hardware stack levels used:    1
 26403 ;; This function calls:
 26404 ;;		Nothing
 26405 ;; This function is called by:
 26406 ;;		Interrupt level 2
 26407 ;; This function uses a non-reentrant model
 26408 ;;
 26409                           
 26410                           	psect	text145
 26411  018640                     __ptext145:
 26412                           	opt callstack 0
 26413  018640                     _DMA1_DMAOR_ISR:
 26414                           	opt callstack 14
 26415                           
 26416                           ; BSR set to: 57
 26417                           ;incstack = 0
 26418  018640  EE14  F000         	lfsr	1,___inthi_sp
 26419                           
 26420                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26421  018644  0139               	movlb	57	; () banked
 26422  018646  95A2               	bcf	162,2,b	;volatile
 26423                           
 26424                           ; BSR set to: 57
 26425  018648  0011               	retfie		f
 26426  01864A                     __end_of_DMA1_DMAOR_ISR:
 26427                           	opt callstack 0
 26428                           
 26429                           ;
 26430                           ; Interrupt Vector Table @ 0x8
 26431                           ;
 26432                           
 26433                           	psect	ivt0x8
 26434  000008                     __pivt0x8:
 26435                           	opt callstack 0
 26436  000008                     ivt0x8_base:
 26437                           	opt callstack 0
 26438                           
 26439                           ; Vector 0 : SWINT
 26440  000008  61A1               	dw	_Default_ISR shr (0+2)
 26441                           
 26442                           ; Vector 1 : HLVD
 26443  00000A  61A1               	dw	_Default_ISR shr (0+2)
 26444                           
 26445                           ; Vector 2 : OSF
 26446  00000C  61A1               	dw	_Default_ISR shr (0+2)
 26447                           
 26448                           ; Vector 3 : CSW
 26449  00000E  61A1               	dw	_Default_ISR shr (0+2)
 26450                           
 26451                           ; Vector 4 : NVM
 26452  000010  61A1               	dw	_Default_ISR shr (0+2)
 26453                           
 26454                           ; Vector 5 : SCAN
 26455  000012  61A1               	dw	_Default_ISR shr (0+2)
 26456                           
 26457                           ; Vector 6 : CRC
 26458  000014  61A1               	dw	_Default_ISR shr (0+2)
 26459                           
 26460                           ; Vector 7 : IOC
 26461  000016  61A1               	dw	_Default_ISR shr (0+2)
 26462                           
 26463                           ; Vector 8 : INT0
 26464  000018  6180               	dw	_INT0_ISR shr (0+2)
 26465                           
 26466                           ; Vector 9 : ZCD
 26467  00001A  61A1               	dw	_Default_ISR shr (0+2)
 26468                           
 26469                           ; Vector 10 : AD
 26470  00001C  600D               	dw	_ADCC_ISR shr (0+2)
 26471                           
 26472                           ; Vector 11 : ADT
 26473  00001E  5D99               	dw	_ADCC_ThresholdISR shr (0+2)
 26474                           
 26475                           ; Vector 12 : CMP1
 26476  000020  61A1               	dw	_Default_ISR shr (0+2)
 26477                           
 26478                           ; Vector 13 : SMT1
 26479  000022  61A1               	dw	_Default_ISR shr (0+2)
 26480                           
 26481                           ; Vector 14 : SMT1PRA
 26482  000024  61A1               	dw	_Default_ISR shr (0+2)
 26483                           
 26484                           ; Vector 15 : SMT1PRW
 26485  000026  61A1               	dw	_Default_ISR shr (0+2)
 26486                           
 26487                           ; Vector 16 : DMA1SCNT
 26488  000028  6184               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26489                           
 26490                           ; Vector 17 : DMA1DCNT
 26491  00002A  618A               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26492                           
 26493                           ; Vector 18 : DMA1OR
 26494  00002C  6190               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26495                           
 26496                           ; Vector 19 : DMA1A
 26497  00002E  618D               	dw	_DMA1_DMAA_ISR shr (0+2)
 26498                           
 26499                           ; Vector 20 : SPI1RX
 26500  000030  61A1               	dw	_Default_ISR shr (0+2)
 26501                           
 26502                           ; Vector 21 : SPI1TX
 26503  000032  61A1               	dw	_Default_ISR shr (0+2)
 26504                           
 26505                           ; Vector 22 : SPI1
 26506  000034  61A1               	dw	_Default_ISR shr (0+2)
 26507                           
 26508                           ; Vector 23 : I2C1RX
 26509  000036  61A1               	dw	_Default_ISR shr (0+2)
 26510                           
 26511                           ; Vector 24 : I2C1TX
 26512  000038  61A1               	dw	_Default_ISR shr (0+2)
 26513                           
 26514                           ; Vector 25 : I2C1
 26515  00003A  61A1               	dw	_Default_ISR shr (0+2)
 26516                           
 26517                           ; Vector 26 : I2C1E
 26518  00003C  61A1               	dw	_Default_ISR shr (0+2)
 26519                           
 26520                           ; Vector 27 : U1RX
 26521  00003E  60B8               	dw	_UART1_rx_vect_isr shr (0+2)
 26522                           
 26523                           ; Vector 28 : U1TX
 26524  000040  60AE               	dw	_UART1_tx_vect_isr shr (0+2)
 26525                           
 26526                           ; Vector 29 : U1E
 26527  000042  61A1               	dw	_Default_ISR shr (0+2)
 26528                           
 26529                           ; Vector 30 : U1
 26530  000044  61A1               	dw	_Default_ISR shr (0+2)
 26531                           
 26532                           ; Vector 31 : TMR0
 26533  000046  61A1               	dw	_Default_ISR shr (0+2)
 26534                           
 26535                           ; Vector 32 : TMR1
 26536  000048  61A1               	dw	_Default_ISR shr (0+2)
 26537                           
 26538                           ; Vector 33 : TMR1G
 26539  00004A  61A1               	dw	_Default_ISR shr (0+2)
 26540                           
 26541                           ; Vector 34 : TMR2
 26542  00004C  61A1               	dw	_Default_ISR shr (0+2)
 26543                           
 26544                           ; Vector 35 : CCP1
 26545  00004E  61A1               	dw	_Default_ISR shr (0+2)
 26546                           
 26547                           ; Vector 36 : Undefined
 26548  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26549                           
 26550                           ; Vector 37 : NCO1
 26551  000052  61A1               	dw	_Default_ISR shr (0+2)
 26552                           
 26553                           ; Vector 38 : CWG1
 26554  000054  61A1               	dw	_Default_ISR shr (0+2)
 26555                           
 26556                           ; Vector 39 : CLC1
 26557  000056  61A1               	dw	_Default_ISR shr (0+2)
 26558                           
 26559                           ; Vector 40 : INT1
 26560  000058  5F4F               	dw	_INT1_ISR shr (0+2)
 26561                           
 26562                           ; Vector 41 : CMP2
 26563  00005A  61A1               	dw	_Default_ISR shr (0+2)
 26564                           
 26565                           ; Vector 42 : DMA2SCNT
 26566  00005C  61A1               	dw	_Default_ISR shr (0+2)
 26567                           
 26568                           ; Vector 43 : DMA2DCNT
 26569  00005E  61A1               	dw	_Default_ISR shr (0+2)
 26570                           
 26571                           ; Vector 44 : DMA2OR
 26572  000060  61A1               	dw	_Default_ISR shr (0+2)
 26573                           
 26574                           ; Vector 45 : DMA2A
 26575  000062  61A1               	dw	_Default_ISR shr (0+2)
 26576                           
 26577                           ; Vector 46 : I2C2RX
 26578  000064  61A1               	dw	_Default_ISR shr (0+2)
 26579                           
 26580                           ; Vector 47 : I2C2TX
 26581  000066  61A1               	dw	_Default_ISR shr (0+2)
 26582                           
 26583                           ; Vector 48 : I2C2
 26584  000068  61A1               	dw	_Default_ISR shr (0+2)
 26585                           
 26586                           ; Vector 49 : I2C2E
 26587  00006A  61A1               	dw	_Default_ISR shr (0+2)
 26588                           
 26589                           ; Vector 50 : U2RX
 26590  00006C  60CC               	dw	_UART2_rx_vect_isr shr (0+2)
 26591                           
 26592                           ; Vector 51 : U2TX
 26593  00006E  60C2               	dw	_UART2_tx_vect_isr shr (0+2)
 26594                           
 26595                           ; Vector 52 : U2E
 26596  000070  61A1               	dw	_Default_ISR shr (0+2)
 26597                           
 26598                           ; Vector 53 : U2
 26599  000072  61A1               	dw	_Default_ISR shr (0+2)
 26600                           
 26601                           ; Vector 54 : TMR3
 26602  000074  61A1               	dw	_Default_ISR shr (0+2)
 26603                           
 26604                           ; Vector 55 : TMR3G
 26605  000076  61A1               	dw	_Default_ISR shr (0+2)
 26606                           
 26607                           ; Vector 56 : TMR4
 26608  000078  61A1               	dw	_Default_ISR shr (0+2)
 26609                           
 26610                           ; Vector 57 : CCP2
 26611  00007A  61A1               	dw	_Default_ISR shr (0+2)
 26612                           
 26613                           ; Vector 58 : Undefined
 26614  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26615                           
 26616                           ; Vector 59 : CWG2
 26617  00007E  61A1               	dw	_Default_ISR shr (0+2)
 26618                           
 26619                           ; Vector 60 : CLC2
 26620  000080  61A1               	dw	_Default_ISR shr (0+2)
 26621                           
 26622                           ; Vector 61 : INT2
 26623  000082  61A1               	dw	_Default_ISR shr (0+2)
 26624                           
 26625                           ; Vector 62 : Undefined
 26626  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26627                           
 26628                           ; Vector 63 : Undefined
 26629  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26630                           
 26631                           ; Vector 64 : Undefined
 26632  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26633                           
 26634                           ; Vector 65 : Undefined
 26635  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26636                           
 26637                           ; Vector 66 : Undefined
 26638  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26639                           
 26640                           ; Vector 67 : Undefined
 26641  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26642                           
 26643                           ; Vector 68 : Undefined
 26644  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26645                           
 26646                           ; Vector 69 : Undefined
 26647  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26648                           
 26649                           ; Vector 70 : TMR5
 26650  000094  5E74               	dw	_TMR5_ISR shr (0+2)
 26651                           
 26652                           ; Vector 71 : TMR5G
 26653  000096  61A1               	dw	_Default_ISR shr (0+2)
 26654                           
 26655                           ; Vector 72 : TMR6
 26656  000098  6144               	dw	_TMR6_ISR shr (0+2)
 26657                           
 26658                           ; Vector 73 : CCP3
 26659  00009A  61A1               	dw	_Default_ISR shr (0+2)
 26660                           
 26661                           ; Vector 74 : CWG3
 26662  00009C  61A1               	dw	_Default_ISR shr (0+2)
 26663                           
 26664                           ; Vector 75 : CLC3
 26665  00009E  61A1               	dw	_Default_ISR shr (0+2)
 26666                           
 26667                           ; Vector 76 : Undefined
 26668  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26669                           
 26670                           ; Vector 77 : Undefined
 26671  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26672                           
 26673                           ; Vector 78 : Undefined
 26674  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26675                           
 26676                           ; Vector 79 : Undefined
 26677  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26678                           
 26679                           ; Vector 80 : CCP4
 26680  0000A8  61A1               	dw	_Default_ISR shr (0+2)
 26681                           
 26682                           ; Vector 81 : CLC4
 26683  0000AA  61A1               	dw	_Default_ISR shr (0+2)
 26684  0000AC                     ivt0x8_undefint:
 26685                           	opt callstack 0
 26686  0000AC  00FF               	reset	
 26687                           
 26688                           	psect	text146
 26689  000000                     __ptext146:
 26690                           	opt callstack 0
 26691                           
 26692                           	psect	rparam
 26693  0000                     
 26694                           	psect	temp
 26695  000032                     btemp:
 26696                           	opt callstack 0
 26697  000032                     	ds	32
 26698  0000                     wtemp0	set	btemp
 26699  0000                     wtemp1	set	btemp+2
 26700  0000                     wtemp2	set	btemp+4
 26701  0000                     wtemp3	set	btemp+6
 26702  0000                     wtemp4	set	btemp+8
 26703  0000                     wtemp5	set	btemp+10
 26704  0000                     wtemp8	set	btemp+1
 26705  0000                     ttemp0	set	btemp
 26706  0000                     ttemp1	set	btemp+3
 26707  0000                     ttemp2	set	btemp+6
 26708  0000                     ttemp3	set	btemp+9
 26709  0000                     ttemp5	set	btemp+1
 26710  0000                     ttemp6	set	btemp+4
 26711  0000                     ttemp7	set	btemp+8
 26712  0000                     ltemp0	set	btemp
 26713  0000                     ltemp1	set	btemp+4
 26714  0000                     ltemp2	set	btemp+8
 26715  0000                     lltemp0	set	btemp
 26716  0000                     lltemp1	set	btemp+8
 26717  0000                     lltemp2	set	btemp+16
 26718  0000                     lltemp3	set	btemp+24
 26719                           tosu	equ	0x3FFF
 26720                           tosh	equ	0x3FFE
 26721                           tosl	equ	0x3FFD
 26722                           stkptr	equ	0x3FFC
 26723                           pclatu	equ	0x3FFB
 26724                           pclath	equ	0x3FFA
 26725                           pcl	equ	0x3FF9
 26726                           tblptru	equ	0x3FF8
 26727                           tblptrh	equ	0x3FF7
 26728                           tblptrl	equ	0x3FF6
 26729                           tablat	equ	0x3FF5
 26730                           prodh	equ	0x3FF4
 26731                           prodl	equ	0x3FF3
 26732                           indf0	equ	0x3FEF
 26733                           postinc0	equ	0x3FEE
 26734                           postdec0	equ	0x3FED
 26735                           preinc0	equ	0x3FEC
 26736                           plusw0	equ	0x3FEB
 26737                           fsr0h	equ	0x3FEA
 26738                           fsr0l	equ	0x3FE9
 26739                           wreg	equ	0x3FE8
 26740                           indf1	equ	0x3FE7
 26741                           postinc1	equ	0x3FE6
 26742                           postdec1	equ	0x3FE5
 26743                           preinc1	equ	0x3FE4
 26744                           plusw1	equ	0x3FE3
 26745                           fsr1h	equ	0x3FE2
 26746                           fsr1l	equ	0x3FE1
 26747                           bsr	equ	0x3FE0
 26748                           indf2	equ	0x3FDF
 26749                           postinc2	equ	0x3FDE
 26750                           postdec2	equ	0x3FDD
 26751                           preinc2	equ	0x3FDC
 26752                           plusw2	equ	0x3FDB
 26753                           fsr2h	equ	0x3FDA
 26754                           fsr2l	equ	0x3FD9
 26755                           status	equ	0x3FD8


Data Sizes:
    Strings     271
    Constant    144
    Data        250
    BSS         1402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     199
    BANK2           256      0     160
    BANK3           256      0     236
    BANK4           256      0     134
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4975_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3988tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  347318
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      31
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      93
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   32950
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   16232
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    8399
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    7706
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      34
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      31
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     476
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  197067
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   98219
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   31879
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      62
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   66374
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   66092
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   32919
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   33080
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   31654
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   31525
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   31193
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2780
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     192
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     325
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   17820
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     192
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     489
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     195
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     337
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2976
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    2911
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      65
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    2165
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     266
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     130
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1652
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     433
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     445
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3327
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      93
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     433
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     445
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     603
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      99
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      31
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      62
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      93
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      62
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      93
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      62
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      62
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      31
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      31
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      62
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      62
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      31
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      31
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      EC      11       92.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     682      58        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 26 04:30:30 2019

                     _SPI1_Exchange8bit 8426                __end_of_set_display_info 8480  
                                     _C 0300                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE5F  
                                     _V 0100        __end_of_TMR5_SetInterruptHandler 81EE  
          __end_of_start_switch_handler 8426                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8672  
                           __CFG_LVP$ON 000000                                     l171 8596  
                                   l701 8002                                     l581 7FD6  
                                   l835 8434                                     _GIE 01FE97  
                                   _abs 7B5C                                     _pad 6754  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 8542  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 83E4  
                    _UART1_Transmit_ISR 7FB0                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 83C2                            __CFG_ZCD$OFF 000000  
                                  l1028 7D34                                    l2024 1D78  
                                  l1261 37CA                                    l1342 7926  
                                  l1254 34F0                                    l1246 3340  
                                  l2312 6076                                    l1256 34F6  
                                  l2308 6DEC                                    l1700 5CE0  
                                  l1615 847C                                    l2319 614A  
                                  l2346 5FE8                                    l1482 726E  
                                  l1900 066A                                    l1558 7DD2  
                                  l1478 6F54                                    l1815 67B0  
                                  l2631 32D8                                    l1575 6972  
                                  l1567 55EE                                    l1663 3CAC  
                                  l1497 7E06                                    l2730 5E76  
                                  l1835 3D90                                    l1915 0B1A  
                                  l2707 5958                    _ADCC_StartConversion 85B0  
                                  l1871 123A                                    l2833 6632  
                                  l1953 4C2E                                    l2738 7B9C  
                                  l2586 2D5E                                    l2667 25A2  
                                  l2907 740A                                    l2598 2BEE  
                                  l1974 4176                                    l2769 52EC  
                                  l2894 748E                                    l2879 5B20  
                                  l8502 7C5E                                    l9410 2642  
                                  l9500 29B6                                    l9404 2602  
                                  l9422 26C0                                    l9414 2658  
                                  l8720 62E0                                    l8712 62B6  
                                  l9600 2CE6                                    l9520 2A64  
                                  l9440 2778                                    l9416 2688  
                                  l8714 62C6                                    l9434 2732  
                                  l8820 7FFE                                    l8740 63B2  
                                  l8732 6344                                    l8716 62CC  
                                  l8724 62E8                                    l9364 6548  
                                  l9612 2D3E                                    l9604 2CFE  
                                  l9540 2B78                                    l9524 2A6E  
                                  l9428 26F2                                    l8718 62D2  
                                  l8726 6314                                    l9390 719A  
                                  l9630 67BA                                    l9606 2D0E  
                                  l9550 2BD2                                    l9542 2B9E  
                                  l9518 2A52                                    l9446 279A  
                                  l9438 2748                                    l9702 460A  
                                  l9376 70D0                                    l9624 6780  
                                  l9560 2C22                                    l9528 2AA0  
                                  l8498 7C34                                    l9386 715C  
                                  l9378 70F2                                    l9634 67F6  
                                  l9490 296A                                    l9722 47C0  
                                  l9628 67A8                                    l9820 5488  
                                  l9812 53DC                                    l9804 5354  
                                  l9564 2C2E                                    l9492 297C  
                                  l9476 28D8                                    l9660 5E14  
                                  l9716 4728                                    l8846 7D1C  
                                  l9638 6840                                    l9646 7B8C  
                                  l9910 307A                                    l9902 3044  
                                  l9590 2CBA                                    l9574 2C56  
                                  l9558 2C10                                    l9486 294A  
                                  l9670 5E6E                                    l9726 482E  
                                  l9718 4778                                    l9760 4E64  
                                  l9912 308C                                    l9920 30E4  
                                  l9840 2DBE                                    l9496 2986  
                                  l9664 5E18                                    l9744 73FA  
                                  l9850 2E14                                    l9578 2C5C  
                                  l9772 4EFE                                    l9932 312E  
                                  l9860 2E9C                                    l9852 2E44  
                                  l9676 6CA6                                    l8798 7FD2  
                                  l9766 4EB8                                    l9950 31A4  
                                  l9926 3112                                    l9918 30E0  
                                  l9870 2EF2                                    l9846 2DFE  
                                  STR_1 FF62                                    l9784 4FD0  
                                  l9960 3218                                    l9936 3154  
                                  l9872 2F22                                    l9688 747E  
                                  STR_2 FFA4                                    STR_3 FFE0  
                                  l9946 319E                                    l9866 2EDC  
                                  STR_4 FF51                                    STR_5 FF73  
                                  l9980 32BC                                    l9972 3284  
                                  l9892 2FB4                                    l9884 2F9A  
                                  STR_6 FFA4                                    STR_7 FFE0  
                                  l9966 3254                                    l9878 2F60  
                                  STR_8 FF40                                    STR_9 FFB3  
                                  l9978 32AC                                    l9996 1DD8  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u9100 2A96                                    u9030 29AE  
                                  u9200 2C4E                                    u9040 29CE  
                                  u9008 2920                                    u9105 2A86  
                                  u9035 299E                                    u9140 2BC0  
                                  u9310 7EE6                                    u9240 2CAA  
                                  u9320 7EE8                                    u9180 2C34  
                                  u9500 45A2                                    u9245 2C9A  
                                  u9270 2CCA                                    u9430 5E66  
                                  u9510 45EE                                    u9440 5E68  
                                  u9600 7CAC                                    u9425 5E48  
                                  u9505 4598                                    u8810 653C  
                                  u9370 7B70                                    u9450 6D20  
                                  u9610 7CAE                                    u9700 4EB4  
                                  u9380 5D98                                    u9620 73B8  
                                  u8830 65B8                                    u9550 46CE  
                                  u9470 743C                                    u9630 73BA  
                                  u9711 4EBE                                    u9535 4628  
                                  u8840 7120                                    u9720 4EF8  
                                  u9800 534E                                    u9536 462E  
                                  u9480 743E                                    u9385 5D8E  
                                  u9537 463C                                    u9457 6D12  
                                  u9650 7F46                                    u9730 4F2A  
                                  u9570 47A6                                    _PLLR 01CEE0  
                                  u9555 46C4                                    u9660 7F48  
                                  u9820 53A4                                    u9750 5008  
                                  u9830 53D6                                    u8870 7F16  
                                  u8847 7112                                    u9575 479C  
                                  u9680 4E5E                                    u9840 5408  
                                  u8880 7F18                                    u9770 505A  
                                  u9860 54C0                                    u8980 28FE  
                                  u8990 291E                                    u8991 2918  
                                  u9880 5512                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 805E  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0240  
                                  _atoi 5082                                    _ctoa 7308  
                                  _main 32E2                                    _dtoa 3CB2  
                                  _nanf 77FA                                    _seed 01BB  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4B44  
                                  btemp 0032                                    _xtoa 4132  
                __end_of_check_adc_scan 866A                           ___fpclassifyf 5CEA  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8444                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 82E0                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 860E  
                      __end_of_INT1_ISR 7D7A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 6F5C           __end_of_OSCILLATOR_Initialize 859C  
                                 l10002 1E18                                   l10020 1EE6  
                                 l10004 1E1E                                   l10022 1EEC  
                                 l10014 1EA6                                   l10006 1E4E  
                                 l10104 2422                                   l10032 1F3E  
                                 l10024 1F1C                                   l10122 24E2  
                                 l10212 6686                                   l10204 665C  
                                 l10108 2428                                   l11004 18E8  
                                 l11100 48F0                                   l10230 673A  
                                 l10222 6706                                   l10118 249C  
                                 l10208 666E                                   l10136 2550  
                                 l10128 250C                                   l11008 191C  
                                 l11120 4AC6                                   l11112 4A18  
                                 l10410 40AC                                   l10170 61AE  
                                 l10242 6DB6                                   l10138 256A  
                                 l10090 23B2                                   l10314 5F80  
                                 l10306 5F54                                   l11106 49AE  
                                 l10164 618E                                   l10260 60C4  
                                 l10084 2396                                   l10316 5F96  
                                 l10308 5F70                                   l11052 1CA6  
                                 l11028 1A7C                                   l11132 6F86  
                                 l11300 5838                                   l12020 80E8  
                                 l10334 7ABE                                   l10342 7326  
                                 l10414 40E8                                   l10158 6178  
                                 l10246 6DEA                                   l10238 6D74  
                                 l10254 6034                                   l10094 23D8  
                                 l10502 04D2                                   l11062 1D04  
                                 l11038 1B2A                                   l11134 6FC6  
                                 l11206 705C                                   l11310 58A2  
                                 l11302 5856                                   l10344 7352  
                                 l10192 6288                                   l10184 6254  
                                 l10272 6148                                   l10264 6112  
                                 l10280 7AEC                                   l10520 058E  
                                 l10440 00F0                                   l11320 58D6  
                                 l11312 58B8                                   l12008 751C  
                                 l11170 8372                                   l10290 5ED2  
                                 l10610 0C32                                   l10514 0554  
                                 l11058 1D00                                   l11250 7E10  
                                 l11330 5938                                   l10380 3DE8  
                                 l10460 0216                                   l10428 00AC  
                                 l11068 1D24                                   l12060 56EC  
                                 l11308 5884                                   l12140 3348  
                                 l10390 3FFA                                   l10710 119A  
                                 l10622 0CBA                                   l10630 0D24  
                                 l10534 05F6                                   l10526 0594  
                                 l10518 057C                                   l10462 022C  
                                 l12046 55BE                                   l12230 375C  
                                 l12222 3732                                   l12206 3580  
                                 l12142 335A                                   l12134 3322  
                                 l10376 3DCA                                   l10368 3D80  
                                 l10552 06B8                                   l10536 0602  
                                 l10448 0146                                   l12240 37A0  
                                 l12216 36FA                                   l12136 332A  
                                 l12082 74CC                                   l10562 077A  
                                 l10458 01EA                                   l10466 0258  
                                 l10730 4BB0                                   l10802 423C  
                                 l12250 37F4                                   l10572 0926  
                                 l10556 06F0                                   l10492 0396  
                                 l10476 02FC                                   l10484 032A  
                                 l10900 59EA                                   l12076 5750  
                                 l12236 377A                                   l12228 3744  
                                 l10638 0D90                                   l10646 0EA2  
                                 l10750 4CA0                                   l10902 5A56  
                                 l12088 74DC                                   l10672 0FD6  
                                 l10496 0406                                   l10760 4D5A  
                                 l11704 688A                                   l11296 5814  
                                 l11288 57A8                                   l12184 34FA  
                                 l10850 50BE                                   l10674 0FF0  
                                 l10658 0F3A                                   l10594 0B12  
                                 l10586 0A48                                   l10498 0470  
                                 l10754 4CD0                                   l10746 4C64  
                                 l10842 44A2                                   l10818 4332  
                                 l10826 43B8                                   l11298 5822  
                                 l12186 3528                                   l10684 1092  
                                 l10596 0B34                                   l10764 4D86  
                                 l10932 1326                                   l11820 3A62  
                                 l11812 3A30                                   PRLOCK 0039EF  
                                 l10870 51D8                                   l10694 10E2  
                                 l10782 4166                                   l10934 1360  
                                 l12198 355C                                   l10864 515E  
                                 l10848 509C                                   l10768 4DC2  
                                 l10936 1376                                   l11832 3BDE  
                                 l11824 3AFE                                   l11808 3956  
                                 l10874 5240                                   l10866 5176  
                                 l10858 5132                                   l10794 41DC  
                                 l10954 14A8                                   l11756 7DE8  
                                 l10884 52DC                                   l10868 519A  
                                 l10788 41A0                                   l10956 14E2  
                                 l10974 165C                                   l10958 14F8  
                                 l11838 3C7A                                   l11846 3C8C  
                                 l11870 5B8E                                   l11862 5B62  
                                 l10984 16F2                                   l11792 3808  
                                 l11874 5BA6                                   l10996 1830  
                                 l11798 3838                         __end_of___aodiv 5082  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 2D68                                   _ADCLK 003EFF  
                       __end_of___aomod 5536                                   _ADPCH 003EF1  
                       __end_of___fldiv 32E2                                   _ADREF 003EFD  
                       __end_of___awdiv 62A2                         __end_of___flneg 7B16  
                                 STR_10 FFB3                                   STR_11 FF84  
                                 STR_20 FFCD                                   STR_12 FFFB  
                                 STR_13 FFF8                                   STR_21 FF95  
                                 STR_22 FF95                                   STR_23 FF95  
                                 STR_15 FFC1                                   STR_16 FFD7  
                                 STR_24 FEEF                                   STR_33 FF19  
                                 STR_17 FF1A                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF1A                                   STR_42 FFF5  
                                 STR_34 FFE5                                   STR_26 FF2D  
                                 STR_35 FFED                                   STR_19 FFCD  
                                 STR_27 FF07                                   STR_44 FFF5  
                       __end_of___awmod 6754                                   STR_38 FFE9  
                                 STR_39 FFF1                                   _ADRPT 003EEC  
                       __end_of___flmul 25AC                         __end_of___flsub 7B5C  
                       __end_of___fltol 5FF2                                   u10100 31F2  
                                 u10020 310C                                   u10110 322C  
                                 u10120 3268                                   u10105 31E2  
                                 u10210 1F2C                                   u10060 3196  
                                 u11030 050E                                   u10320 2476  
                                 u11200 0A18                                   u12000 19D8  
                                 u10225 20C0                                   u10410 6274  
                                 u10330 24B0                                   u11130 0648  
                                 u10235 2188                                   u10340 24F6  
                                 u11300 0EE4                                   u11060 0562  
                                 u10325 2466                                   u10245 2350  
                                 u12110 4B3A                                   u10520 6DE6  
                                 u10280 241A                                   u10600 5EC6  
                                 u12040 1B7E                                   u10610 5F00  
                                 u11090 05C6                                   u12300 76DA  
                                 u10700 7ABA                                   u10460 66B2  
                                 u11500 4DE8                                   u10390 61DA  
                                 u10615 5EF6                                   u10800 3DB6  
                                 u10480 6726                                   u11360 10B8  
                                 u11600 42EA                                   u11520 414C  
                                 u12160 703C                                   u10810 400E  
                                 u10730 3CE2                                   _U1P1H 003DED  
                                 u11700 512E                                   u10740 3CE4  
                                 u10580 7AE8                                   u10660 5F9E  
                                 u11380 116E                                   u11460 4CC6  
                                 u11620 43B4                                   u12260 58CC  
                                 u12404 3822                                   _U1P2H 003DEF  
                                 u12325 770E                                   u10821 403E  
                                 u12405 381C                                   u12326 7710  
                                 u12318 76DC                                   u10830 4054  
                                 u10590 5EB2                                   u11390 1170  
                                 u10910 00DA                                   u11470 4D0C  
                                 u11630 43D4                                   u11550 4234  
                                 u12510 3B42                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u10831 4052  
                                 u11720 5286                                   u10840 4068  
                                 u10760 3D54                                   u10680 5FC8  
                                 u11800 5AE2                                   u11560 4288  
                                 u12504 3B3A                                   u12424 3852  
                                 u12520 5B40                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12185 7CE8  
                                 u11641 4404                                   u11625 4396  
                                 u12505 3B34                                   u12425 384C  
                                 u10690 7A9A                                   u11730 5288  
                                 u10850 406C                                   u11650 441A  
                                 u11570 428A                                   _U1P3L 003DF0  
                                 u10595 5EA8                                   u11651 4418  
                                 u10780 3D66                                   u10940 0194  
                                 u11660 442E                                   u11900 1542  
                                 u12444 3874                                   u11477 4CFE  
                                 u12445 386E                                   u10870 4082  
                                 u10950 0196                                   u11670 4432  
                                 u11590 42E8                                   u11910 1568  
                                 _U2P1L 003DD4                                   u11840 13BE  
                                 u12640 573C                                   u12464 3A4A  
                                 _U2P2L 003DD6                                   u12465 3A44  
                                 u11850 13C0                                   u12650 573E  
                                 _U2P3L 003DD8                                   u10980 02A6  
                                 u11860 13E6                                   u12484 3B18  
                                 u12485 3B12                                   u10990 02A8  
                                 _T5CLK 003F9D                                   u11960 1746  
                                 u11890 1540                                   _T2HLT 003FAD  
                                 u11990 19D6                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8684  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 82B8                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 7A2A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 852A                            _DMA1CON1bits 003BFD  
                                 _flags 001F                                   _fputc 6518  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 7CB8  
                                 _fputs 714C                         __end_of_isdigit 7F52  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 7E5A                                   _width 001B  
                                 _putch 84F4                         __end_of_islower 7EF2  
                       __end_of_isspace 7ACE                _INT1_SetInterruptHandler 81EE  
                       __end_of_isupper 7F22                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 819E  
           _UART1_SetRxInterruptHandler 8176                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 6A80                         __end_of_tolower 7498  
                       __end_of_strncmp 5B2A                         __end_of_toupper 7414  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8306                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 7BE8                   __end_of_ringBufS_init 80D6  
                       __initialization 6A80                       _UART2_rx_vect_isr 8330  
                          __end_of_atoi 52F6                            __end_of_ctoa 7390  
                          __end_of_main 3806                            __end_of_dtoa 4132  
                          __end_of_nanf 785C                            __end_of_stoa 4E02  
                          __end_of_xtoa 44EC                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 855A  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 81C6  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 82DE                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8008                         _PWM8_Initialize 8570  
                      _UART1_Initialize 7796                       _UART2_tx_vect_isr 8308  
                    _UART2_Transmit_ISR 7FDC                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 7732                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 7CB8                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 7A1C                    _start_switch_handler 8406  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 85F0                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F                                  u391_48 83F2  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u830_20 63CE                                  u821_28 62BC  
                                u830_26 63D0                                  u824_20 62DC  
                                u824_21 62D6                                  u832_28 83D0  
                                u840_48 83AE                                  u843_28 838A  
                                u828_24 63A8                                  u828_25 63A4  
                                u799_20 8296                                  u799_26 8298  
                      __end_of___xxtofl 5962   __end_of_ADCC_DischargeSampleCapacitor 8652  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 864A  
              __end_of_send_lcd_cmd_dma 7A7C                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 8356              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 861E                        _UART2_Initialize 78BE  
                                _WaitMs 7DEE                         _conv_raw_result 3806  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 5FF2                                  ___fleq 6D32  
                     _ADCC_ThresholdISR 7664                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 71E4                                  _efgtoa 0000  
                                _floorf 44EC                      ?_ADCC_ThresholdISR 0052  
                                _memset 4858                    __size_of_help_button 0038  
                                clear_0 6AEE                                  clear_1 6B02  
                                clear_2 6B14                                  clear_3 6B20  
                                clear_4 6B2C                                  clear_5 6B38  
                                clear_6 6B44                                  clear_7 6B50  
                                clear_8 6B5C                                  _printf 785C  
                    _eaDogM_WriteString 7004                                  _strcpy 6C5E  
                             ?_ADCC_ISR 0052                                  _strlen 70AA  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 75FA  
                        _PMD_Initialize 859C               __end_of_UART2_tx_vect_isr 832E  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 7796  
                          __mediumconst FE5E                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 7976  
                      __end_of_vfprintf 7004                              _StartTimer 7D7A  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 7C2E  
                     _SYSTEM_Initialize 7BA2                              __accesstop 0060  
               __end_of__initialization 6B6E                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 8662  
                  __end_of_display_info 865A               __end_of_CLKREF_Initialize 8628  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 7CFA                   _set_temp_display_help 85D2  
             __end_of_ADCC_ThresholdISR 76CC                  __end_of_ringBufS_flush 7276  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 7F52  
                          __pidataBANK1 6DF6                            __pidataBANK2 85C2  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 663C  
                         __end_of_fputs 71E4                           __end_of_srand 7E8E  
                 __end_of_TMR5_CallBack 839E                           __end_of_putch 850E  
               __end_of_PWM8_Initialize 8586                 __end_of_TMR6_Initialize 8032  
                     _adc_int_t_handler 7498                  __end_of_PMD_Initialize 85B0  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 83C2  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 8634                          _clear_adc_scan 8672  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 7BE8                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 01BB                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 5536  
               __end_of_conv_raw_result 3CB2                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00F6  
                     __end_of_TimerDone 837A                        _DMA1_DMADCNT_ISR 8628  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 84D8  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 81C6  
               __end_of_ADCC_Initialize 7664                              ??_TMR5_ISR 01C3  
             __end_of_adc_int_t_handler 7516                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8266   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 823E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8480  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8678                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 8610                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1267_44 74FC                                 u1267_45 74F6  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 80D6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 7D3A                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 852A  
                               __Lparam 0000                __end_of_UART1_Initialize 77FA  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 4E02  
                               ___fladd 25AC                                 ___aomod 52F6  
                               ___fldiv 2D68                                 ___awdiv 6154  
                               ___flneg 7ACE                                 ___awmod 663C  
                               ___flmul 1D82                                 ___flsub 7B16  
                               ___fltol 5E80               __end_of_UART1_Receive_ISR 849E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 6C5E                                 __pcinit 6A80  
              __end_of_mode_lamp_bright 85FE                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 85E2  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 32E2                                 __ptext1 8406  
                               __ptext2 7732                                 __ptext3 85B0  
                               __ptext4 864A                                 __ptext5 7E5A  
                               __ptext6 6B74                                 __ptext7 805E  
                               __ptext8 8086                                 __ptext9 8426  
                     _UART2_Receive_ISR 849E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8586  
                          __size_of_abs 0046                            __size_of_pad 0114  
                               _isalpha 7C74                                 _isdigit 7F22  
                               _mode_sw 0025                                 us978999 506C  
                     __end_of_lp_filter 5CEA                                 us989999 5524  
                               _islower 7EC2                                 _isspace 7A7C  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 791C                                 _isupper 7EF2  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6976  
                               _tolower 7414                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5962                                 _toupper 7390  
                  end_of_initialization 6B6E               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8176             _UART1_SetTxInterruptHandler 814E  
   __end_of_UART2_SetRxInterruptHandler 814E             _UART2_SetRxInterruptHandler 8126  
                             i2u1270_48 7698                               i2u1270_49 76AC  
                     __end_of_set_vterm 84F4                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8684  
             __end_of_UART2_Receive_ISR 84BC                          wdtdelay@dcount 00B9  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 819E  
                          _display_help 865A                   _TMR5_InterruptHandler 00C1  
                          _display_info 8652    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 828E  
           _ADCC_SetADIInterruptHandler 8266                              _update_lcd 6868  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7590                         _SPI1_Initialize 855A  
                 __end_of_get_vterm_ptr 7FB0                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 7E24  
          __end_of_INTERRUPT_Initialize 7732                              _vterm_dump 63EA  
                        __end_of___flge 6154                          __end_of___fleq 6DF6  
  __end_of_INT0_DefaultInterruptHandler 868E   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 868C              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 7976                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0228                          __end_of_floorf 4858  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4B44                          __end_of_printf 78BE  
              __end_of_DMA1_DMADCNT_ISR 8632             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8406                          __end_of_strcpy 6D32  
                        __end_of_strlen 714C                     start_initialization 6A80  
  __end_of_TMR5_DefaultInterruptHandler 82B6   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 828E         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 7BA2                   __end_of_INT1_CallBack 83E4  
             __size_of_set_display_info 001E                             __end_of_pad 6868  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 80AE  
                        _switch_handler 62A2           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 5E80                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 03AC                __end_of_DMA1_DMASCNT_ISR 861E  
                         _uart2TxBuffer 036C                          _DMA1_DMAOR_ISR 8640  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8356  
                         _ringBufS_init 80AE                             __pdataBANK0 00C7  
                           __pdataBANK1 0100                             __pdataBANK2 0290  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 7EC2                     __end_of_help_button 7DEE  
       __end_of_eaDogM_WriteStringAtPos 7E5A                 __end_of_DMA1_Initialize 75FA  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 823E  
                         __pcstackBANK0 00F6                           __pcstackBANK1 01C3  
              __size_of_TMR2_Initialize 0018                  __end_of_switch_handler 63EA  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 8570  
              _UART1_RxInterruptHandler 000A                _UART2_TxInterruptHandler 000D  
                             __end_of_T FEEF                        _convert_adc_data 7516  
             __size_of_ringBufS_put_dma 00AA                            _init_display 6B74  
                __end_of_DMA1_DMAOR_ISR 864A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00C4                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 79D0                  _PIN_MANAGER_Initialize 7276  
                  __end_of_wait_lcd_set 867E                           __pmediumconst FE5E  
                             __ptext100 859C                               __ptext101 7276  
                             __ptext110 861E                               __ptext102 8586  
                             __ptext111 75FA                               __ptext103 76CC  
                             __ptext120 837A                               __ptext112 823E  
                             __ptext104 866A                               __ptext121 828E  
                             __ptext113 8266                               __ptext105 7E8E  
                             __ptext130 7664                               __ptext122 8600  
                             __ptext114 7D3C                               __ptext106 81EE  
                             __ptext131 82B8                               __ptext123 83E4  
                             __ptext115 83C2                               __ptext107 8216  
                             __ptext140 839E                               __ptext132 7FB0  
                             __ptext124 868C                               __ptext116 868A  
                             __ptext108 7976                               __ptext141 7C2E  
                             __ptext133 82E0                               __ptext125 8684  
                             __ptext117 62A2                               __ptext109 7590  
                             __ptext142 8610                               __ptext134 8480  
                             __ptext126 8034                               __ptext118 79D0  
                             __ptext143 8628                               __ptext135 8308  
                             __ptext127 7498                               __ptext119 7CFA  
                             __ptext144 8634                               __ptext136 7FDC  
                             __ptext128 868E                               __ptext145 8640  
                             __ptext137 8330                               __ptext129 8690  
                             __ptext146 0000                               __ptext138 849E  
                             __ptext139 8510                      __end_of_StartTimer 7DB6  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 8034                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 5B2A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 76CC                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 8600                                _INT1_ISR 7D3C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              i2u420_48 804A                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u861_48 82CA  
                              i2u863_48 82F2                                i2u865_48 831A  
                              i2u867_48 8342                __size_of_TMR5_Initialize 0046  
                             _set_vterm 84D8                     __size_of_update_lcd 010E  
                           _help_button 7DB6              __end_of_UART1_Transmit_ISR 7FDC  
                              _TMR5_ISR 79D0                                _TMR6_ISR 8510  
                             _port_data 0290                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 837A  
                            _ADCON0bits 003EF8                      __end_of_check_help 575E  
                             _start_lcd 867E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 839E  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8462                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6A94                               copy_data1 6AB6  
                             copy_data2 6AD8                _INT0_SetInterruptHandler 8216  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 8126             _UART2_SetTxInterruptHandler 80FE  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 84BC  
                          _send_lcd_cmd 8086                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8690                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 80FE                   __end_of_DMA1_DMAA_ISR 863E  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 575E  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 85F0                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 80AE  
                              __ptext11 80D6                                __ptext20 5536  
                              __ptext12 85E2                                __ptext21 63EA  
                              __ptext13 7516                                __ptext30 7004  
                              __ptext22 6976                                __ptext14 5B2A  
                              __ptext31 8678                                __ptext23 7F82  
                              __ptext15 3806                                __ptext40 7EC2  
                              __ptext32 867E                                __ptext24 7DEE  
                              __ptext16 77FA                                __ptext41 7C74  
                              __ptext33 71E4                                __ptext25 6868  
                              __ptext17 8444                                __ptext50 5E80  
                              __ptext42 5962                                __ptext34 4858  
                              __ptext26 7E24                                __ptext18 575E  
                              __ptext51 7B16                                __ptext43 4B44  
                              __ptext35 785C                                __ptext27 7A2A  
                              __ptext19 8672                                __ptext60 3CB2  
                              __ptext52 25AC                                __ptext44 0000  
                              __ptext36 6F5C                                __ptext28 84BC  
                              __ptext61 7B5C                                __ptext53 7ACE  
                              __ptext45 7414                                __ptext37 1244  
                              __ptext29 791C                                __ptext70 6EB2  
                              __ptext62 52F6                                __ptext54 1D82  
                              __ptext46 7EF2                                __ptext38 4132  
                              __ptext71 5082                                __ptext63 4E02  
                              __ptext55 5FF2                                __ptext47 6C5E  
                              __ptext39 7390                                __ptext80 7DB6  
                              __ptext72 7A7C                                __ptext64 7308  
                              __ptext56 6D32                                __ptext48 44EC  
                              __ptext81 8356                                __ptext73 7F22  
                              __ptext65 6754                                __ptext57 2D68  
                              __ptext49 5CEA                                __ptext90 7796  
                              __ptext82 7D7A                                __ptext74 84D8  
                              __ptext66 70AA                                __ptext58 663C  
                              __ptext91 814E                                __ptext83 8652  
                              __ptext75 85D2                                __ptext67 714C  
                              __ptext59 6154                                __ptext92 8176  
                              __ptext84 865A                                __ptext76 8462  
                              __ptext68 6518                                __ptext93 8008  
                              __ptext85 8662                                __ptext77 852A  
                              __ptext69 84F4                                __ptext94 819E  
                              __ptext86 7BA2                                __ptext78 85F0  
                              __ptext95 7BE8                                __ptext87 78BE  
                              __ptext79 7CB8                                __ptext96 81C6  
                              __ptext88 80FE                                __ptext97 8542  
                              __ptext89 8126                                __ptext98 855A  
                              __ptext99 8570                        __size_of_isupper 0030  
                              us1141999 4B56                                us1072999 3CCC  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1154999 41B2                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 6EB2  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 0524                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0004                               stoa@F1166 00EF  
                    ??_DMA1_DMASCNT_ISR 0058            __end_of_ADCC_StartConversion 85C2  
                              _spi_link 00A1                                _wdtdelay 791C  
            __end_of_UART2_Transmit_ISR 8008                                _vfprintf 6F5C  
              __end_of_convert_adc_data 7590              __end_of_PWM8_LoadDutyValue 7CFA  
  __end_of_INT1_DefaultInterruptHandler 868C   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 868A                           ??_Default_ISR 0052  
                           _uart1RxHead 002E                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0031                             _uart2RxHead 0028  
                           _uart1RxTail 002D                          _get_raw_result 8444  
                           _uart2TxHead 002B                             _uart1TxTail 0030  
                           _uart2RxTail 0027                             _uart2TxTail 002A  
                          _wait_lcd_set 8678                      _EXT_INT_Initialize 7E8E  
  __end_of_TMR6_DefaultInterruptHandler 7C74   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 7C2E    __end_of_ADCC_DefaultInterruptHandler 8690  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 868E  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 805E          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 85E2                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 70AA                   __end_of_mode_lamp_dim 8542  
               __end_of_adc_int_handler 8692                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6976  
                _uart2TxBufferRemaining 0029                          _FVR_Initialize 866A  
                __end_of_get_raw_result 8462                        _send_lcd_cmd_dma 7A2A  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 8216               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 8086                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 868A          __end_of_PIN_MANAGER_Initialize 7308  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6518  
               _eaDogM_WriteStringAtPos 7E24                           _get_vterm_ptr 7F82  
                        _check_adc_scan 8662               __size_of_UART2_Initialize 005E  
